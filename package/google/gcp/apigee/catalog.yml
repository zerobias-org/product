Product:
  name: GCP Apigee
  versions: [1.0.0]
  package: google.gcp.apigee
  description: |-
    Apigee
  link: https://cloud.google.com/apigee
  contentType: json
Operations:
  hybrid.issuers.list:
    description: |-
      Lists hybrid services and its trusted issuers service account ids. This api is authenticated and unauthorized(allow all the users) and used by runtime authn-authz service to query control plane's issuer service account ids.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/hybrid.issuers/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ListHybridIssuersResponse",
          "type": "object",
          "properties": {
            "issuers": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1ServiceIssuersMapping",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "String indicating the Apigee service name."
                  },
                  "emailIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of trusted issuer email ids."
                  }
                }
              },
              "description": "Lists of hybrid services and its trusted issuer email ids."
            }
          }
        }
      ]
  organizations.analytics.datastores.create:
    description: |-
      Create a Datastore for an org
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.analytics.datastores/create
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1Datastore",
          "type": "object",
          "properties": {
            "org": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Organization that the datastore belongs to"
            },
            "self": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Resource link of Datastore. Example: `/organizations/{org}/analytics/datastores/{uuid}`"
            },
            "createTime": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Datastore create time, in milliseconds since the epoch of 1970-01-01T00:00:00Z"
            },
            "targetType": {
              "type": "string",
              "description": "Destination storage type. Supported types `gcs` or `bigquery`."
            },
            "displayName": {
              "type": "string",
              "description": "Required. Display name in UI"
            },
            "lastUpdateTime": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Datastore last update time, in milliseconds since the epoch of 1970-01-01T00:00:00Z"
            },
            "datastoreConfig": {
              "id": "GoogleCloudApigeeV1DatastoreConfig",
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "Path of Cloud Storage bucket Required for `gcs` target_type."
                },
                "projectId": {
                  "type": "string",
                  "description": "Required. GCP project in which the datastore exists"
                },
                "bucketName": {
                  "type": "string",
                  "description": "Name of the Cloud Storage bucket. Required for `gcs` target_type."
                },
                "datasetName": {
                  "type": "string",
                  "description": "BigQuery dataset name Required for `bigquery` target_type."
                },
                "tablePrefix": {
                  "type": "string",
                  "description": "Prefix of BigQuery table Required for `bigquery` target_type."
                }
              },
              "description": "Datastore Configurations."
            }
          },
          "description": "The data store defines the connection to export data repository (Cloud Storage, BigQuery), including the credentials used to access the data repository."
        }
      ]
      outputs: [
        {}
      ]
  organizations.analytics.datastores.delete:
    description: |-
      Delete a Datastore from an org.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.analytics.datastores/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  organizations.analytics.datastores.get:
    description: |-
      Get a Datastore
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.analytics.datastores/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.analytics.datastores.list:
    description: |-
      List Datastores
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.analytics.datastores/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ListDatastoresResponse",
          "type": "object",
          "properties": {
            "datastores": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Datastore",
                "type": "object",
                "properties": {
                  "org": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Organization that the datastore belongs to"
                  },
                  "self": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Resource link of Datastore. Example: `/organizations/{org}/analytics/datastores/{uuid}`"
                  },
                  "createTime": {
                    "type": "string",
                    "format": "int64",
                    "readOnly": true,
                    "description": "Output only. Datastore create time, in milliseconds since the epoch of 1970-01-01T00:00:00Z"
                  },
                  "targetType": {
                    "type": "string",
                    "description": "Destination storage type. Supported types `gcs` or `bigquery`."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Required. Display name in UI"
                  },
                  "lastUpdateTime": {
                    "type": "string",
                    "format": "int64",
                    "readOnly": true,
                    "description": "Output only. Datastore last update time, in milliseconds since the epoch of 1970-01-01T00:00:00Z"
                  },
                  "datastoreConfig": {
                    "id": "GoogleCloudApigeeV1DatastoreConfig",
                    "type": "object",
                    "properties": {
                      "path": {
                        "type": "string",
                        "description": "Path of Cloud Storage bucket Required for `gcs` target_type."
                      },
                      "projectId": {
                        "type": "string",
                        "description": "Required. GCP project in which the datastore exists"
                      },
                      "bucketName": {
                        "type": "string",
                        "description": "Name of the Cloud Storage bucket. Required for `gcs` target_type."
                      },
                      "datasetName": {
                        "type": "string",
                        "description": "BigQuery dataset name Required for `bigquery` target_type."
                      },
                      "tablePrefix": {
                        "type": "string",
                        "description": "Prefix of BigQuery table Required for `bigquery` target_type."
                      }
                    },
                    "description": "Datastore Configurations."
                  }
                },
                "description": "The data store defines the connection to export data repository (Cloud Storage, BigQuery), including the credentials used to access the data repository."
              },
              "description": "A list of datastores"
            }
          },
          "description": "The response for ListDatastores"
        }
      ]
  organizations.analytics.datastores.test:
    description: |-
      Test if Datastore configuration is correct. This includes checking if credentials provided by customer have required permissions in target destination storage
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.analytics.datastores/test
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1Datastore",
          "type": "object",
          "properties": {
            "org": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Organization that the datastore belongs to"
            },
            "self": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Resource link of Datastore. Example: `/organizations/{org}/analytics/datastores/{uuid}`"
            },
            "createTime": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Datastore create time, in milliseconds since the epoch of 1970-01-01T00:00:00Z"
            },
            "targetType": {
              "type": "string",
              "description": "Destination storage type. Supported types `gcs` or `bigquery`."
            },
            "displayName": {
              "type": "string",
              "description": "Required. Display name in UI"
            },
            "lastUpdateTime": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Datastore last update time, in milliseconds since the epoch of 1970-01-01T00:00:00Z"
            },
            "datastoreConfig": {
              "id": "GoogleCloudApigeeV1DatastoreConfig",
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "Path of Cloud Storage bucket Required for `gcs` target_type."
                },
                "projectId": {
                  "type": "string",
                  "description": "Required. GCP project in which the datastore exists"
                },
                "bucketName": {
                  "type": "string",
                  "description": "Name of the Cloud Storage bucket. Required for `gcs` target_type."
                },
                "datasetName": {
                  "type": "string",
                  "description": "BigQuery dataset name Required for `bigquery` target_type."
                },
                "tablePrefix": {
                  "type": "string",
                  "description": "Prefix of BigQuery table Required for `bigquery` target_type."
                }
              },
              "description": "Datastore Configurations."
            }
          },
          "description": "The data store defines the connection to export data repository (Cloud Storage, BigQuery), including the credentials used to access the data repository."
        }
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1TestDatastoreResponse",
          "type": "object",
          "properties": {
            "error": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Error message of test connection failure"
            },
            "state": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. It could be `completed` or `failed`"
            }
          },
          "description": "The response for TestDatastore"
        }
      ]
  organizations.analytics.datastores.update:
    description: |-
      Update a Datastore
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.analytics.datastores/update
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1Datastore",
          "type": "object",
          "properties": {
            "org": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Organization that the datastore belongs to"
            },
            "self": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Resource link of Datastore. Example: `/organizations/{org}/analytics/datastores/{uuid}`"
            },
            "createTime": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Datastore create time, in milliseconds since the epoch of 1970-01-01T00:00:00Z"
            },
            "targetType": {
              "type": "string",
              "description": "Destination storage type. Supported types `gcs` or `bigquery`."
            },
            "displayName": {
              "type": "string",
              "description": "Required. Display name in UI"
            },
            "lastUpdateTime": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Datastore last update time, in milliseconds since the epoch of 1970-01-01T00:00:00Z"
            },
            "datastoreConfig": {
              "id": "GoogleCloudApigeeV1DatastoreConfig",
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "Path of Cloud Storage bucket Required for `gcs` target_type."
                },
                "projectId": {
                  "type": "string",
                  "description": "Required. GCP project in which the datastore exists"
                },
                "bucketName": {
                  "type": "string",
                  "description": "Name of the Cloud Storage bucket. Required for `gcs` target_type."
                },
                "datasetName": {
                  "type": "string",
                  "description": "BigQuery dataset name Required for `bigquery` target_type."
                },
                "tablePrefix": {
                  "type": "string",
                  "description": "Prefix of BigQuery table Required for `bigquery` target_type."
                }
              },
              "description": "Datastore Configurations."
            }
          },
          "description": "The data store defines the connection to export data repository (Cloud Storage, BigQuery), including the credentials used to access the data repository."
        }
      ]
      outputs: [
        {}
      ]
  organizations.apiproducts.attributes:
    description: |-
      Updates or creates API product attributes. This API **replaces** the current list of attributes with the attributes specified in the request body. In this way, you can update existing attributes, add new attributes, or delete existing attributes by omitting them from the request body. **Note**: OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and API products) are cached for 180 seconds (current default). Any custom attributes associated with entities also get cached for at least 180 seconds after entity is accessed during runtime. In this case, the `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token in less than 180 seconds.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.apiproducts/attributes
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1Attributes",
          "type": "object",
          "properties": {
            "attribute": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Attribute",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "API key of the attribute."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of the attribute."
                  }
                },
                "description": "Key-value pair to store extra metadata."
              },
              "description": "List of attributes."
            }
          }
        }
      ]
  organizations.apiproducts.attributes.delete:
    description: |-
      Deletes an API product attribute.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.apiproducts.attributes/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1Attribute",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "API key of the attribute."
            },
            "value": {
              "type": "string",
              "description": "Value of the attribute."
            }
          },
          "description": "Key-value pair to store extra metadata."
        }
      ]
  organizations.apiproducts.attributes.get:
    description: |-
      Gets the value of an API product attribute.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.apiproducts.attributes/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1Attribute",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "API key of the attribute."
            },
            "value": {
              "type": "string",
              "description": "Value of the attribute."
            }
          },
          "description": "Key-value pair to store extra metadata."
        }
      ]
  organizations.apiproducts.attributes.list:
    description: |-
      Lists all API product attributes.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.apiproducts.attributes/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1Attributes",
          "type": "object",
          "properties": {
            "attribute": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Attribute",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "API key of the attribute."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of the attribute."
                  }
                },
                "description": "Key-value pair to store extra metadata."
              },
              "description": "List of attributes."
            }
          }
        }
      ]
  organizations.apiproducts.attributes.updateApiProductAttribute:
    description: |-
      Updates the value of an API product attribute. **Note**: OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and API products) are cached for 180 seconds (current default). Any custom attributes associated with entities also get cached for at least 180 seconds after entity is accessed during runtime. In this case, the `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token in less than 180 seconds.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.apiproducts.attributes/updateApiProductAttribute
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1Attribute",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "API key of the attribute."
            },
            "value": {
              "type": "string",
              "description": "Value of the attribute."
            }
          },
          "description": "Key-value pair to store extra metadata."
        }
      ]
  organizations.apiproducts.create:
    description: |-
      Creates an API product in an organization. You create API products after you have proxied backend services using API proxies. An API product is a collection of API resources combined with quota settings and metadata that you can use to deliver customized and productized API bundles to your developer community. This metadata can include: - Scope - Environments - API proxies - Extensible profile API products enable you repackage APIs on-the-fly, without having to do any additional coding or configuration. Apigee recommends that you start with a simple API product including only required elements. You then provision credentials to apps to enable them to start testing your APIs. After you have authentication and authorization working against a simple API product, you can iterate to create finer grained API products, defining different sets of API resources for each API product. **WARNING:** - If you don't specify an API proxy in the request body, *any* app associated with the product can make calls to *any* API in your entire organization. - If you don't specify an environment in the request body, the product allows access to all environments. For more information, see What is an API product?
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.apiproducts/create
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1ApiProduct",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Internal name of the API product. Characters you can use in the name are restricted to: `A-Z0-9._\\-$ %`. **Note:** The internal name cannot be edited when updating the API product."
            },
            "quota": {
              "type": "string",
              "description": "Number of request messages permitted per app by this API product for the specified `quotaInterval` and `quotaTimeUnit`. For example, a `quota` of 50, for a `quotaInterval` of 12 and a `quotaTimeUnit` of hours means 50 requests are allowed every 12 hours."
            },
            "scopes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Comma-separated list of OAuth scopes that are validated at runtime. Apigee validates that the scopes in any access token presented match the scopes defined in the OAuth policy associated with the API product."
            },
            "proxies": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Comma-separated list of API proxy names to which this API product is bound. By specifying API proxies, you can associate resources in the API product with specific API proxies, preventing developers from accessing those resources through other API proxies. Apigee rejects requests to API proxies that are not listed. **Note:** The API proxy names must already exist in the specified environment as they will be validated upon creation."
            },
            "createdAt": {
              "type": "string",
              "format": "int64",
              "description": "Response only. Creation time of this environment as milliseconds since epoch."
            },
            "attributes": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Attribute",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "API key of the attribute."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of the attribute."
                  }
                },
                "description": "Key-value pair to store extra metadata."
              },
              "description": "Array of attributes that may be used to extend the default API product profile with customer-specific metadata. You can specify a maximum of 18 attributes. Use this property to specify the access level of the API product as either `public`, `private`, or `internal`. Only products marked `public` are available to developers in the Apigee developer portal. For example, you can set a product to `internal` while it is in development and then change access to `public` when it is ready to release on the portal. API products marked as `private` do not appear on the portal, but can be accessed by external developers."
            },
            "description": {
              "type": "string",
              "description": "Description of the API product. Include key information about the API product that is not captured by other fields. Comma-separated list of API resources to be bundled in the API product. By default, the resource paths are mapped from the `proxy.pathsuffix` variable. The proxy path suffix is defined as the URI fragment following the ProxyEndpoint base path. For example, if the `apiResources` element is defined to be `/forecastrss` and the base path defined for the API proxy is `/weather`, then only requests to `/weather/forecastrss` are permitted by the API product. You can select a specific path, or you can select all subpaths with the following wildcard: - `/**`: Indicates that all sub-URIs are included. - `/*` : Indicates that only URIs one level down are included. By default, / supports the same resources as /** as well as the base path defined by the API proxy. For example, if the base path of the API proxy is `/v1/weatherapikey`, then the API product supports requests to `/v1/weatherapikey` and to any sub-URIs, such as `/v1/weatherapikey/forecastrss`, `/v1/weatherapikey/region/CA`, and so on. For more information, see Managing API products."
            },
            "displayName": {
              "type": "string",
              "description": "Name displayed in the UI or developer portal to developers registering for API access."
            },
            "apiResources": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "approvalType": {
              "type": "string",
              "description": "Flag that specifies how API keys are approved to access the APIs defined by the API product. If set to `manual`, the consumer key is generated and returned in \"pending\" state. In this case, the API keys won't work until they have been explicitly approved. If set to `auto`, the consumer key is generated and returned in \"approved\" state and can be used immediately. **Note:** Typically, `auto` is used to provide access to free or trial API products that provide limited quota or capabilities."
            },
            "environments": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Comma-separated list of environment names to which the API product is bound. Requests to environments that are not listed are rejected. By specifying one or more environments, you can bind the resources listed in the API product to a specific environment, preventing developers from accessing those resources through API proxies deployed in another environment. This setting is used, for example, to prevent resources associated with API proxies in `prod` from being accessed by API proxies deployed in `test`."
            },
            "quotaInterval": {
              "type": "string",
              "description": "Time interval over which the number of request messages is calculated."
            },
            "quotaTimeUnit": {
              "type": "string",
              "description": "Time unit defined for the `quotaInterval`. Valid values include `minute`, `hour`, `day`, or `month`."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "int64",
              "description": "Response only. Modified time of this environment as milliseconds since epoch."
            },
            "operationGroup": {
              "id": "GoogleCloudApigeeV1OperationGroup",
              "type": "object",
              "properties": {
                "operationConfigs": {
                  "type": "array",
                  "items": {
                    "id": "GoogleCloudApigeeV1OperationConfig",
                    "type": "object",
                    "properties": {
                      "quota": {
                        "id": "GoogleCloudApigeeV1Quota",
                        "type": "object",
                        "properties": {
                          "limit": {
                            "type": "string",
                            "description": "Required. Upper limit allowed for the time interval and time unit specified. Requests exceeding this limit will be rejected."
                          },
                          "interval": {
                            "type": "string",
                            "description": "Required. Time interval over which the number of request messages is calculated."
                          },
                          "timeUnit": {
                            "type": "string",
                            "description": "Time unit defined for the `interval`. Valid values include `minute`, `hour`, `day`, or `month`. If `limit` and `interval` are valid, the default value is `hour`; otherwise, the default is null."
                          }
                        },
                        "description": "Quota parameters to be enforced for the resources, methods, api_source combination. If none are specified, quota enforcement will not be done."
                      },
                      "apiSource": {
                        "type": "string",
                        "description": "Required. API proxy or remote service name with which the resources, methods, and quota are associated."
                      },
                      "attributes": {
                        "type": "array",
                        "items": {
                          "id": "GoogleCloudApigeeV1Attribute",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "API key of the attribute."
                            },
                            "value": {
                              "type": "string",
                              "description": "Value of the attribute."
                            }
                          },
                          "description": "Key-value pair to store extra metadata."
                        },
                        "description": "Custom attributes associated with the operation."
                      },
                      "operations": {
                        "type": "array",
                        "items": {
                          "id": "GoogleCloudApigeeV1Operation",
                          "type": "object",
                          "properties": {
                            "methods": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "methods refers to the REST verbs as in https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html. When none specified, all verb types are allowed."
                            },
                            "resource": {
                              "type": "string",
                              "description": "Required. resource represents REST resource path associated with the proxy/remote service."
                            }
                          },
                          "description": "Operation represents the pairing of REST resource path and the actions (verbs) allowed on the resource path."
                        },
                        "description": "List of resource/method pairs for the proxy/remote service, upon which quota will applied. **Note**: Currently, you can specify only a single resource/method pair. The call will fail if more than one resource/method pair is provided."
                      }
                    },
                    "description": "OperationConfig binds the resources in a proxy or remote service with the allowed REST methods and its associated quota enforcement."
                  },
                  "description": "Required. List of operation configurations for either Apigee API proxies or other remote services that are associated with this API product."
                },
                "operationConfigType": {
                  "type": "string",
                  "description": "Flag that specifes whether the configuration is for Apigee API proxy or a remote service. Valid values are `proxy` or `remoteservice`. Defaults to `proxy`. Set to `proxy` when Apigee API proxies are associated with the API product. Set to `remoteservice` when non-Apigee proxies like Istio-Envoy are associated with the API product."
                }
              },
              "description": "Configuration used to group Apigee proxies or remote services with resources, method types, and quotas. The resource refers to the resource URI (excluding the base path). With this grouping, the API product creator is able to fine-tune and give precise control over which REST methods have access to specific resources and how many calls can be made (using the `quota` setting). **Note:** The `api_resources` setting cannot be specified for both the API product and operation group; otherwise the call will fail."
            },
            "graphqlOperationGroup": {
              "id": "GoogleCloudApigeeV1GraphQLOperationGroup",
              "type": "object",
              "properties": {
                "operationConfigs": {
                  "type": "array",
                  "items": {
                    "id": "GoogleCloudApigeeV1GraphQLOperationConfig",
                    "type": "object",
                    "properties": {
                      "quota": {
                        "id": "GoogleCloudApigeeV1Quota",
                        "type": "object",
                        "properties": {
                          "limit": {
                            "type": "string",
                            "description": "Required. Upper limit allowed for the time interval and time unit specified. Requests exceeding this limit will be rejected."
                          },
                          "interval": {
                            "type": "string",
                            "description": "Required. Time interval over which the number of request messages is calculated."
                          },
                          "timeUnit": {
                            "type": "string",
                            "description": "Time unit defined for the `interval`. Valid values include `minute`, `hour`, `day`, or `month`. If `limit` and `interval` are valid, the default value is `hour`; otherwise, the default is null."
                          }
                        },
                        "description": "Quota parameters to be enforced for the resources, methods, api_source combination. If none are specified, quota enforcement will not be done."
                      },
                      "apiSource": {
                        "type": "string",
                        "description": "Required. API proxy endpoint or remote service name with which the graphQL operation, and quota are associated."
                      },
                      "attributes": {
                        "type": "array",
                        "items": {
                          "id": "GoogleCloudApigeeV1Attribute",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "API key of the attribute."
                            },
                            "value": {
                              "type": "string",
                              "description": "Value of the attribute."
                            }
                          },
                          "description": "Key-value pair to store extra metadata."
                        },
                        "description": "Custom attributes associated with the operation."
                      },
                      "operations": {
                        "type": "array",
                        "items": {
                          "id": "GoogleCloudApigeeV1GraphQLOperation",
                          "type": "object",
                          "properties": {
                            "operation": {
                              "type": "string",
                              "description": "GraphQL operation name, along with operation type which will be used to associate quotas with. If no name is specified, the quota will be applied to all graphQL operations irrespective of their operation names in the payload."
                            },
                            "operationTypes": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Required. `query`, `mutation` and `subscription` are the three operation types offered by graphQL. Currently we support only `query` and `mutation`."
                            }
                          },
                          "description": "GraphQLOperation represents the pairing of graphQL operation types and the graphQL operation name."
                        },
                        "description": "Required. List of graphQL name/Operation type pairs for the proxy/remote service, upon which quota will applied. If GraphQLOperation operation has only the operation type(s), that would imply that quota will be applied on all graphQL requests irrespective of the graphQL name. **Note**: Currently, we can specify only a single GraphQLOperation. Specifying more than one will result in failure of the operation."
                      }
                    },
                    "description": "GraphQLOperationConfig binds the resources in a proxy or remote service with the graphQL operation and its associated quota enforcement."
                  },
                  "description": "Required. List of operation configurations for either Apigee API proxies or other remote services that are associated with this API product."
                },
                "operationConfigType": {
                  "type": "string",
                  "description": "Flag that specifes whether the configuration is for Apigee API proxy or a remote service. Valid values are `proxy` or `remoteservice`. Defaults to `proxy`. Set to `proxy` when Apigee API proxies are associated with the API product. Set to `remoteservice` when non-Apigee proxies like Istio-Envoy are associated with the API product."
                }
              },
              "description": "Configuration used to group Apigee proxies or remote services with graphQL operation name, graphQL operation type and quotas. This grouping allows us to precisely set quota for a particular combination of graphQL name and operation type for a particular proxy request. If graphQL name is not set, this would imply quota will be applied on all graphQL requests matching the operation type."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  organizations.apiproducts.delete:
    description: |-
      Deletes an API product from an organization. Deleting an API product causes app requests to the resource URIs defined in the API product to fail. Ensure that you create a new API product to serve existing apps, unless your intention is to disable access to the resources defined in the API product. The API product name required in the request URL is the internal name of the product, not the display name. While they may be the same, it depends on whether the API product was created via the UI or the API. View the list of API products to verify the internal name.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.apiproducts/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.apiproducts.get:
    description: |-
      Gets configuration details for an API product. The API product name required in the request URL is the internal name of the product, not the display name. While they may be the same, it depends on whether the API product was created via the UI or the API. View the list of API products to verify the internal name.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.apiproducts/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.apiproducts.list:
    description: |-
      Lists all API product names for an organization. Filter the list by passing an `attributename` and `attibutevalue`. The limit on the number of API products returned by the API is 1000. You can paginate the list of API products returned using the `startKey` and `count` query parameters.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.apiproducts/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ListApiProductsResponse",
          "type": "object",
          "properties": {
            "apiProduct": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1ApiProduct",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Internal name of the API product. Characters you can use in the name are restricted to: `A-Z0-9._\\-$ %`. **Note:** The internal name cannot be edited when updating the API product."
                  },
                  "quota": {
                    "type": "string",
                    "description": "Number of request messages permitted per app by this API product for the specified `quotaInterval` and `quotaTimeUnit`. For example, a `quota` of 50, for a `quotaInterval` of 12 and a `quotaTimeUnit` of hours means 50 requests are allowed every 12 hours."
                  },
                  "scopes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Comma-separated list of OAuth scopes that are validated at runtime. Apigee validates that the scopes in any access token presented match the scopes defined in the OAuth policy associated with the API product."
                  },
                  "proxies": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Comma-separated list of API proxy names to which this API product is bound. By specifying API proxies, you can associate resources in the API product with specific API proxies, preventing developers from accessing those resources through other API proxies. Apigee rejects requests to API proxies that are not listed. **Note:** The API proxy names must already exist in the specified environment as they will be validated upon creation."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "int64",
                    "description": "Response only. Creation time of this environment as milliseconds since epoch."
                  },
                  "attributes": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1Attribute",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "API key of the attribute."
                        },
                        "value": {
                          "type": "string",
                          "description": "Value of the attribute."
                        }
                      },
                      "description": "Key-value pair to store extra metadata."
                    },
                    "description": "Array of attributes that may be used to extend the default API product profile with customer-specific metadata. You can specify a maximum of 18 attributes. Use this property to specify the access level of the API product as either `public`, `private`, or `internal`. Only products marked `public` are available to developers in the Apigee developer portal. For example, you can set a product to `internal` while it is in development and then change access to `public` when it is ready to release on the portal. API products marked as `private` do not appear on the portal, but can be accessed by external developers."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the API product. Include key information about the API product that is not captured by other fields. Comma-separated list of API resources to be bundled in the API product. By default, the resource paths are mapped from the `proxy.pathsuffix` variable. The proxy path suffix is defined as the URI fragment following the ProxyEndpoint base path. For example, if the `apiResources` element is defined to be `/forecastrss` and the base path defined for the API proxy is `/weather`, then only requests to `/weather/forecastrss` are permitted by the API product. You can select a specific path, or you can select all subpaths with the following wildcard: - `/**`: Indicates that all sub-URIs are included. - `/*` : Indicates that only URIs one level down are included. By default, / supports the same resources as /** as well as the base path defined by the API proxy. For example, if the base path of the API proxy is `/v1/weatherapikey`, then the API product supports requests to `/v1/weatherapikey` and to any sub-URIs, such as `/v1/weatherapikey/forecastrss`, `/v1/weatherapikey/region/CA`, and so on. For more information, see Managing API products."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Name displayed in the UI or developer portal to developers registering for API access."
                  },
                  "apiResources": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "approvalType": {
                    "type": "string",
                    "description": "Flag that specifies how API keys are approved to access the APIs defined by the API product. If set to `manual`, the consumer key is generated and returned in \"pending\" state. In this case, the API keys won't work until they have been explicitly approved. If set to `auto`, the consumer key is generated and returned in \"approved\" state and can be used immediately. **Note:** Typically, `auto` is used to provide access to free or trial API products that provide limited quota or capabilities."
                  },
                  "environments": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Comma-separated list of environment names to which the API product is bound. Requests to environments that are not listed are rejected. By specifying one or more environments, you can bind the resources listed in the API product to a specific environment, preventing developers from accessing those resources through API proxies deployed in another environment. This setting is used, for example, to prevent resources associated with API proxies in `prod` from being accessed by API proxies deployed in `test`."
                  },
                  "quotaInterval": {
                    "type": "string",
                    "description": "Time interval over which the number of request messages is calculated."
                  },
                  "quotaTimeUnit": {
                    "type": "string",
                    "description": "Time unit defined for the `quotaInterval`. Valid values include `minute`, `hour`, `day`, or `month`."
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "int64",
                    "description": "Response only. Modified time of this environment as milliseconds since epoch."
                  },
                  "operationGroup": {
                    "id": "GoogleCloudApigeeV1OperationGroup",
                    "type": "object",
                    "properties": {
                      "operationConfigs": {
                        "type": "array",
                        "items": {
                          "id": "GoogleCloudApigeeV1OperationConfig",
                          "type": "object",
                          "properties": {
                            "quota": {
                              "id": "GoogleCloudApigeeV1Quota",
                              "type": "object",
                              "properties": {
                                "limit": {
                                  "type": "string",
                                  "description": "Required. Upper limit allowed for the time interval and time unit specified. Requests exceeding this limit will be rejected."
                                },
                                "interval": {
                                  "type": "string",
                                  "description": "Required. Time interval over which the number of request messages is calculated."
                                },
                                "timeUnit": {
                                  "type": "string",
                                  "description": "Time unit defined for the `interval`. Valid values include `minute`, `hour`, `day`, or `month`. If `limit` and `interval` are valid, the default value is `hour`; otherwise, the default is null."
                                }
                              },
                              "description": "Quota parameters to be enforced for the resources, methods, api_source combination. If none are specified, quota enforcement will not be done."
                            },
                            "apiSource": {
                              "type": "string",
                              "description": "Required. API proxy or remote service name with which the resources, methods, and quota are associated."
                            },
                            "attributes": {
                              "type": "array",
                              "items": {
                                "id": "GoogleCloudApigeeV1Attribute",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "API key of the attribute."
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "Value of the attribute."
                                  }
                                },
                                "description": "Key-value pair to store extra metadata."
                              },
                              "description": "Custom attributes associated with the operation."
                            },
                            "operations": {
                              "type": "array",
                              "items": {
                                "id": "GoogleCloudApigeeV1Operation",
                                "type": "object",
                                "properties": {
                                  "methods": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "methods refers to the REST verbs as in https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html. When none specified, all verb types are allowed."
                                  },
                                  "resource": {
                                    "type": "string",
                                    "description": "Required. resource represents REST resource path associated with the proxy/remote service."
                                  }
                                },
                                "description": "Operation represents the pairing of REST resource path and the actions (verbs) allowed on the resource path."
                              },
                              "description": "List of resource/method pairs for the proxy/remote service, upon which quota will applied. **Note**: Currently, you can specify only a single resource/method pair. The call will fail if more than one resource/method pair is provided."
                            }
                          },
                          "description": "OperationConfig binds the resources in a proxy or remote service with the allowed REST methods and its associated quota enforcement."
                        },
                        "description": "Required. List of operation configurations for either Apigee API proxies or other remote services that are associated with this API product."
                      },
                      "operationConfigType": {
                        "type": "string",
                        "description": "Flag that specifes whether the configuration is for Apigee API proxy or a remote service. Valid values are `proxy` or `remoteservice`. Defaults to `proxy`. Set to `proxy` when Apigee API proxies are associated with the API product. Set to `remoteservice` when non-Apigee proxies like Istio-Envoy are associated with the API product."
                      }
                    },
                    "description": "Configuration used to group Apigee proxies or remote services with resources, method types, and quotas. The resource refers to the resource URI (excluding the base path). With this grouping, the API product creator is able to fine-tune and give precise control over which REST methods have access to specific resources and how many calls can be made (using the `quota` setting). **Note:** The `api_resources` setting cannot be specified for both the API product and operation group; otherwise the call will fail."
                  },
                  "graphqlOperationGroup": {
                    "id": "GoogleCloudApigeeV1GraphQLOperationGroup",
                    "type": "object",
                    "properties": {
                      "operationConfigs": {
                        "type": "array",
                        "items": {
                          "id": "GoogleCloudApigeeV1GraphQLOperationConfig",
                          "type": "object",
                          "properties": {
                            "quota": {
                              "id": "GoogleCloudApigeeV1Quota",
                              "type": "object",
                              "properties": {
                                "limit": {
                                  "type": "string",
                                  "description": "Required. Upper limit allowed for the time interval and time unit specified. Requests exceeding this limit will be rejected."
                                },
                                "interval": {
                                  "type": "string",
                                  "description": "Required. Time interval over which the number of request messages is calculated."
                                },
                                "timeUnit": {
                                  "type": "string",
                                  "description": "Time unit defined for the `interval`. Valid values include `minute`, `hour`, `day`, or `month`. If `limit` and `interval` are valid, the default value is `hour`; otherwise, the default is null."
                                }
                              },
                              "description": "Quota parameters to be enforced for the resources, methods, api_source combination. If none are specified, quota enforcement will not be done."
                            },
                            "apiSource": {
                              "type": "string",
                              "description": "Required. API proxy endpoint or remote service name with which the graphQL operation, and quota are associated."
                            },
                            "attributes": {
                              "type": "array",
                              "items": {
                                "id": "GoogleCloudApigeeV1Attribute",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "API key of the attribute."
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "Value of the attribute."
                                  }
                                },
                                "description": "Key-value pair to store extra metadata."
                              },
                              "description": "Custom attributes associated with the operation."
                            },
                            "operations": {
                              "type": "array",
                              "items": {
                                "id": "GoogleCloudApigeeV1GraphQLOperation",
                                "type": "object",
                                "properties": {
                                  "operation": {
                                    "type": "string",
                                    "description": "GraphQL operation name, along with operation type which will be used to associate quotas with. If no name is specified, the quota will be applied to all graphQL operations irrespective of their operation names in the payload."
                                  },
                                  "operationTypes": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Required. `query`, `mutation` and `subscription` are the three operation types offered by graphQL. Currently we support only `query` and `mutation`."
                                  }
                                },
                                "description": "GraphQLOperation represents the pairing of graphQL operation types and the graphQL operation name."
                              },
                              "description": "Required. List of graphQL name/Operation type pairs for the proxy/remote service, upon which quota will applied. If GraphQLOperation operation has only the operation type(s), that would imply that quota will be applied on all graphQL requests irrespective of the graphQL name. **Note**: Currently, we can specify only a single GraphQLOperation. Specifying more than one will result in failure of the operation."
                            }
                          },
                          "description": "GraphQLOperationConfig binds the resources in a proxy or remote service with the graphQL operation and its associated quota enforcement."
                        },
                        "description": "Required. List of operation configurations for either Apigee API proxies or other remote services that are associated with this API product."
                      },
                      "operationConfigType": {
                        "type": "string",
                        "description": "Flag that specifes whether the configuration is for Apigee API proxy or a remote service. Valid values are `proxy` or `remoteservice`. Defaults to `proxy`. Set to `proxy` when Apigee API proxies are associated with the API product. Set to `remoteservice` when non-Apigee proxies like Istio-Envoy are associated with the API product."
                      }
                    },
                    "description": "Configuration used to group Apigee proxies or remote services with graphQL operation name, graphQL operation type and quotas. This grouping allows us to precisely set quota for a particular combination of graphQL name and operation type for a particular proxy request. If graphQL name is not set, this would imply quota will be applied on all graphQL requests matching the operation type."
                  }
                }
              },
              "description": "Lists all API product names defined for an organization."
            }
          }
        }
      ]
  organizations.apiproducts.rateplans.create:
    description: |-
      Create a rate plan that is associated with an API product in an organization. Using rate plans, API product owners can monetize their API products by configuring one or more of the following: - Billing frequency - Initial setup fees for using an API product - Payment funding model (postpaid only) - Fixed recurring or consumption-based charges for using an API product - Revenue sharing with developer partners An API product can have multiple rate plans associated with it but *only one* rate plan can be active at any point of time. **Note: From the developer's perspective, they purchase API products not rate plans.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.apiproducts.rateplans/create
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1RatePlan",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Name of the rate plan."
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "DRAFT",
                "PUBLISHED"
              ],
              "type": "string",
              "description": "Current state of the rate plan (draft or published).",
              "enumDescriptions": [
                "State of the rate plan is not specified.",
                "Rate plan is in draft mode and only visible to API providers.",
                "Rate plan is published and will become visible to developers for the configured duration (between `startTime` and `endTime`)."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "int64",
              "description": "Time when the rate plan will expire in milliseconds since epoch. Set to 0 or `null` to indicate that the rate plan should never expire."
            },
            "setupFee": {
              "id": "GoogleTypeMoney",
              "type": "object",
              "properties": {
                "nanos": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
                },
                "units": {
                  "type": "string",
                  "format": "int64",
                  "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
                },
                "currencyCode": {
                  "type": "string",
                  "description": "The three-letter currency code defined in ISO 4217."
                }
              },
              "description": "Initial, one-time fee paid when purchasing the API product."
            },
            "createdAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Time that the rate plan was created in milliseconds since epoch."
            },
            "startTime": {
              "type": "string",
              "format": "int64",
              "description": "Time when the rate plan becomes active in milliseconds since epoch."
            },
            "apiproduct": {
              "type": "string",
              "description": "Name of the API product that the rate plan is associated with."
            },
            "description": {
              "type": "string",
              "description": "Description of the rate plan."
            },
            "displayName": {
              "type": "string",
              "description": "Display name of the rate plan."
            },
            "currencyCode": {
              "type": "string",
              "description": "Currency to be used for billing. Consists of a three-letter code as defined by the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) standard."
            },
            "billingPeriod": {
              "enum": [
                "BILLING_PERIOD_UNSPECIFIED",
                "WEEKLY",
                "MONTHLY"
              ],
              "type": "string",
              "description": "Frequency at which the customer will be billed.",
              "enumDescriptions": [
                "Billing period not specified.",
                "Weekly billing period. **Note**: Not supported by Apigee at this time.",
                "Monthly billing period."
              ]
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Time the rate plan was last modified in milliseconds since epoch."
            },
            "revenueShareType": {
              "enum": [
                "REVENUE_SHARE_TYPE_UNSPECIFIED",
                "FIXED",
                "VOLUME_BANDED"
              ],
              "type": "string",
              "description": "Method used to calculate the revenue that is shared with developers.",
              "enumDescriptions": [
                "Revenue share type is not specified.",
                "Fixed percentage of the total revenue will be shared. The percentage to be shared can be configured by the API provider.",
                "Amount of revenue shared depends on the number of API calls. The API call volume ranges and the revenue share percentage for each volume can be configured by the API provider. **Note**: Not supported by Apigee at this time."
              ]
            },
            "fixedFeeFrequency": {
              "type": "integer",
              "format": "int32",
              "description": "Frequency at which the fixed fee is charged."
            },
            "fixedRecurringFee": {
              "id": "GoogleTypeMoney",
              "type": "object",
              "properties": {
                "nanos": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
                },
                "units": {
                  "type": "string",
                  "format": "int64",
                  "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
                },
                "currencyCode": {
                  "type": "string",
                  "description": "The three-letter currency code defined in ISO 4217."
                }
              },
              "description": "Fixed amount that is charged at a defined interval and billed in advance of use of the API product. The fee will be prorated for the first billing period."
            },
            "revenueShareRates": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1RevenueShareRange",
                "type": "object",
                "properties": {
                  "end": {
                    "type": "string",
                    "format": "int64",
                    "description": "Ending value of the range. Set to 0 or `null` for the last range of values."
                  },
                  "start": {
                    "type": "string",
                    "format": "int64",
                    "description": "Starting value of the range. Set to 0 or `null` for the initial range of values."
                  },
                  "sharePercentage": {
                    "type": "number",
                    "format": "double",
                    "description": "Percentage of the revenue to be shared with the developer. For example, to share 21 percent of the total revenue with the developer, set this value to 21. Specify a decimal number with a maximum of two digits following the decimal point."
                  }
                },
                "description": "API call volume range and the percentage of revenue to share with the developer when the total number of API calls is within the range."
              },
              "description": "Details of the revenue sharing model."
            },
            "paymentFundingModel": {
              "enum": [
                "PAYMENT_FUNDING_MODEL_UNSPECIFIED",
                "PREPAID",
                "POSTPAID"
              ],
              "type": "string",
              "description": "Flag that specifies the billing account type, prepaid or postpaid.",
              "enumDescriptions": [
                "Billing account type not specified.",
                "Prepaid billing account type. Developer pays in advance for the use of your API products. Funds are deducted from their prepaid account balance. **Note**: Not supported by Apigee at this time.",
                "Postpaid billing account type. Developer is billed through an invoice after using your API products."
              ]
            },
            "consumptionPricingType": {
              "enum": [
                "CONSUMPTION_PRICING_TYPE_UNSPECIFIED",
                "FIXED_PER_UNIT",
                "BANDED",
                "TIERED",
                "STAIRSTEP"
              ],
              "type": "string",
              "description": "Pricing model used for consumption-based charges.",
              "enumDescriptions": [
                "Pricing model not specified. This is the default.",
                "Fixed rate charged for each API call.",
                "Variable rate charged based on the total volume of API calls. Example: * 1-100 calls cost $2 per call * 101-200 calls cost $1.50 per call * 201-300 calls cost $1 per call * Total price for 50 calls: 50 x $2 = $100 * Total price for 150 calls: 150 x $1.5 = $225 * Total price for 250 calls: 250 x $1 = $250. **Note**: Not supported by Apigee at this time.",
                "Variable rate charged for each API call based on price tiers. Example: * 1-100 calls cost $2 per call * 101-200 calls cost $1.50 per call * 201-300 calls cost $1 per call * Total price for 50 calls: 50 x $2 = $100 * Total price for 150 calls: 100 x $2 + 50 x $1.5 = $275 * Total price for 250 calls: 100 x $2 + 100 x $1.5 + 50 x $1 = $400. **Note**: Not supported by Apigee at this time.",
                "Flat rate charged for a bundle of API calls whether or not the entire bundle is used. Example: * 1-100 calls cost $75 flat fee * 101-200 calls cost $100 flat free * 201-300 calls cost $150 flat fee * Total price for 1 call: $75 * Total price for 50 calls: $75 * Total price for 150 calls: $100 * Total price for 250 calls: $150. **Note**: Not supported by Apigee at this time."
              ]
            },
            "consumptionPricingRates": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1RateRange",
                "type": "object",
                "properties": {
                  "end": {
                    "type": "string",
                    "format": "int64",
                    "description": "Ending value of the range. Set to 0 or `null` for the last range of values."
                  },
                  "fee": {
                    "id": "GoogleTypeMoney",
                    "type": "object",
                    "properties": {
                      "nanos": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
                      },
                      "units": {
                        "type": "string",
                        "format": "int64",
                        "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
                      },
                      "currencyCode": {
                        "type": "string",
                        "description": "The three-letter currency code defined in ISO 4217."
                      }
                    },
                    "description": "Fee to charge when total number of API calls falls within this range."
                  },
                  "start": {
                    "type": "string",
                    "format": "int64",
                    "description": "Starting value of the range. Set to 0 or `null` for the initial range of values."
                  }
                },
                "description": "API call volume range and the fees charged when the total number of API calls is within the range."
              },
              "description": "API call volume ranges and the fees charged when the total number of API calls is within a given range. The method used to calculate the final fee depends on the selected pricing model. For example, if the pricing model is `STAIRSTEP` and the ranges are defined as follows: ``` { \"start\": 1, \"end\": 100, \"fee\": 75 }, { \"start\": 101, \"end\": 200, \"fee\": 100 }, } ``` Then the following fees would be charged based on the total number of API calls (assuming the currency selected is `USD`): * 1 call costs $75 * 50 calls cost $75 * 150 calls cost $100 The number of API calls cannot exceed 200."
            }
          },
          "description": "Rate plan details."
        }
      ]
      outputs: [
        {}
      ]
  organizations.apiproducts.rateplans.delete:
    description: |-
      Deletes a rate plan.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.apiproducts.rateplans/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.apiproducts.rateplans.get:
    description: |-
      Gets the details of a rate plan.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.apiproducts.rateplans/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.apiproducts.rateplans.list:
    description: |-
      Lists all the rate plans for an API product.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.apiproducts.rateplans/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ListRatePlansResponse",
          "type": "object",
          "properties": {
            "ratePlans": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1RatePlan",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Name of the rate plan."
                  },
                  "state": {
                    "enum": [
                      "STATE_UNSPECIFIED",
                      "DRAFT",
                      "PUBLISHED"
                    ],
                    "type": "string",
                    "description": "Current state of the rate plan (draft or published).",
                    "enumDescriptions": [
                      "State of the rate plan is not specified.",
                      "Rate plan is in draft mode and only visible to API providers.",
                      "Rate plan is published and will become visible to developers for the configured duration (between `startTime` and `endTime`)."
                    ]
                  },
                  "endTime": {
                    "type": "string",
                    "format": "int64",
                    "description": "Time when the rate plan will expire in milliseconds since epoch. Set to 0 or `null` to indicate that the rate plan should never expire."
                  },
                  "setupFee": {
                    "id": "GoogleTypeMoney",
                    "type": "object",
                    "properties": {
                      "nanos": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
                      },
                      "units": {
                        "type": "string",
                        "format": "int64",
                        "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
                      },
                      "currencyCode": {
                        "type": "string",
                        "description": "The three-letter currency code defined in ISO 4217."
                      }
                    },
                    "description": "Initial, one-time fee paid when purchasing the API product."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "int64",
                    "readOnly": true,
                    "description": "Output only. Time that the rate plan was created in milliseconds since epoch."
                  },
                  "startTime": {
                    "type": "string",
                    "format": "int64",
                    "description": "Time when the rate plan becomes active in milliseconds since epoch."
                  },
                  "apiproduct": {
                    "type": "string",
                    "description": "Name of the API product that the rate plan is associated with."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the rate plan."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Display name of the rate plan."
                  },
                  "currencyCode": {
                    "type": "string",
                    "description": "Currency to be used for billing. Consists of a three-letter code as defined by the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) standard."
                  },
                  "billingPeriod": {
                    "enum": [
                      "BILLING_PERIOD_UNSPECIFIED",
                      "WEEKLY",
                      "MONTHLY"
                    ],
                    "type": "string",
                    "description": "Frequency at which the customer will be billed.",
                    "enumDescriptions": [
                      "Billing period not specified.",
                      "Weekly billing period. **Note**: Not supported by Apigee at this time.",
                      "Monthly billing period."
                    ]
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "int64",
                    "readOnly": true,
                    "description": "Output only. Time the rate plan was last modified in milliseconds since epoch."
                  },
                  "revenueShareType": {
                    "enum": [
                      "REVENUE_SHARE_TYPE_UNSPECIFIED",
                      "FIXED",
                      "VOLUME_BANDED"
                    ],
                    "type": "string",
                    "description": "Method used to calculate the revenue that is shared with developers.",
                    "enumDescriptions": [
                      "Revenue share type is not specified.",
                      "Fixed percentage of the total revenue will be shared. The percentage to be shared can be configured by the API provider.",
                      "Amount of revenue shared depends on the number of API calls. The API call volume ranges and the revenue share percentage for each volume can be configured by the API provider. **Note**: Not supported by Apigee at this time."
                    ]
                  },
                  "fixedFeeFrequency": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Frequency at which the fixed fee is charged."
                  },
                  "fixedRecurringFee": {
                    "id": "GoogleTypeMoney",
                    "type": "object",
                    "properties": {
                      "nanos": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
                      },
                      "units": {
                        "type": "string",
                        "format": "int64",
                        "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
                      },
                      "currencyCode": {
                        "type": "string",
                        "description": "The three-letter currency code defined in ISO 4217."
                      }
                    },
                    "description": "Fixed amount that is charged at a defined interval and billed in advance of use of the API product. The fee will be prorated for the first billing period."
                  },
                  "revenueShareRates": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1RevenueShareRange",
                      "type": "object",
                      "properties": {
                        "end": {
                          "type": "string",
                          "format": "int64",
                          "description": "Ending value of the range. Set to 0 or `null` for the last range of values."
                        },
                        "start": {
                          "type": "string",
                          "format": "int64",
                          "description": "Starting value of the range. Set to 0 or `null` for the initial range of values."
                        },
                        "sharePercentage": {
                          "type": "number",
                          "format": "double",
                          "description": "Percentage of the revenue to be shared with the developer. For example, to share 21 percent of the total revenue with the developer, set this value to 21. Specify a decimal number with a maximum of two digits following the decimal point."
                        }
                      },
                      "description": "API call volume range and the percentage of revenue to share with the developer when the total number of API calls is within the range."
                    },
                    "description": "Details of the revenue sharing model."
                  },
                  "paymentFundingModel": {
                    "enum": [
                      "PAYMENT_FUNDING_MODEL_UNSPECIFIED",
                      "PREPAID",
                      "POSTPAID"
                    ],
                    "type": "string",
                    "description": "Flag that specifies the billing account type, prepaid or postpaid.",
                    "enumDescriptions": [
                      "Billing account type not specified.",
                      "Prepaid billing account type. Developer pays in advance for the use of your API products. Funds are deducted from their prepaid account balance. **Note**: Not supported by Apigee at this time.",
                      "Postpaid billing account type. Developer is billed through an invoice after using your API products."
                    ]
                  },
                  "consumptionPricingType": {
                    "enum": [
                      "CONSUMPTION_PRICING_TYPE_UNSPECIFIED",
                      "FIXED_PER_UNIT",
                      "BANDED",
                      "TIERED",
                      "STAIRSTEP"
                    ],
                    "type": "string",
                    "description": "Pricing model used for consumption-based charges.",
                    "enumDescriptions": [
                      "Pricing model not specified. This is the default.",
                      "Fixed rate charged for each API call.",
                      "Variable rate charged based on the total volume of API calls. Example: * 1-100 calls cost $2 per call * 101-200 calls cost $1.50 per call * 201-300 calls cost $1 per call * Total price for 50 calls: 50 x $2 = $100 * Total price for 150 calls: 150 x $1.5 = $225 * Total price for 250 calls: 250 x $1 = $250. **Note**: Not supported by Apigee at this time.",
                      "Variable rate charged for each API call based on price tiers. Example: * 1-100 calls cost $2 per call * 101-200 calls cost $1.50 per call * 201-300 calls cost $1 per call * Total price for 50 calls: 50 x $2 = $100 * Total price for 150 calls: 100 x $2 + 50 x $1.5 = $275 * Total price for 250 calls: 100 x $2 + 100 x $1.5 + 50 x $1 = $400. **Note**: Not supported by Apigee at this time.",
                      "Flat rate charged for a bundle of API calls whether or not the entire bundle is used. Example: * 1-100 calls cost $75 flat fee * 101-200 calls cost $100 flat free * 201-300 calls cost $150 flat fee * Total price for 1 call: $75 * Total price for 50 calls: $75 * Total price for 150 calls: $100 * Total price for 250 calls: $150. **Note**: Not supported by Apigee at this time."
                    ]
                  },
                  "consumptionPricingRates": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1RateRange",
                      "type": "object",
                      "properties": {
                        "end": {
                          "type": "string",
                          "format": "int64",
                          "description": "Ending value of the range. Set to 0 or `null` for the last range of values."
                        },
                        "fee": {
                          "id": "GoogleTypeMoney",
                          "type": "object",
                          "properties": {
                            "nanos": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
                            },
                            "units": {
                              "type": "string",
                              "format": "int64",
                              "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
                            },
                            "currencyCode": {
                              "type": "string",
                              "description": "The three-letter currency code defined in ISO 4217."
                            }
                          },
                          "description": "Fee to charge when total number of API calls falls within this range."
                        },
                        "start": {
                          "type": "string",
                          "format": "int64",
                          "description": "Starting value of the range. Set to 0 or `null` for the initial range of values."
                        }
                      },
                      "description": "API call volume range and the fees charged when the total number of API calls is within the range."
                    },
                    "description": "API call volume ranges and the fees charged when the total number of API calls is within a given range. The method used to calculate the final fee depends on the selected pricing model. For example, if the pricing model is `STAIRSTEP` and the ranges are defined as follows: ``` { \"start\": 1, \"end\": 100, \"fee\": 75 }, { \"start\": 101, \"end\": 200, \"fee\": 100 }, } ``` Then the following fees would be charged based on the total number of API calls (assuming the currency selected is `USD`): * 1 call costs $75 * 50 calls cost $75 * 150 calls cost $100 The number of API calls cannot exceed 200."
                  }
                },
                "description": "Rate plan details."
              },
              "description": "List of rate plans in an organization."
            },
            "nextStartKey": {
              "type": "string",
              "description": "Value that can be sent as `startKey` to retrieve the next page of content. If this field is omitted, there are no subsequent pages."
            }
          },
          "description": "Response for ListRatePlans."
        }
      ]
  organizations.apiproducts.rateplans.update:
    description: |-
      Updates an existing rate plan.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.apiproducts.rateplans/update
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1RatePlan",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Name of the rate plan."
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "DRAFT",
                "PUBLISHED"
              ],
              "type": "string",
              "description": "Current state of the rate plan (draft or published).",
              "enumDescriptions": [
                "State of the rate plan is not specified.",
                "Rate plan is in draft mode and only visible to API providers.",
                "Rate plan is published and will become visible to developers for the configured duration (between `startTime` and `endTime`)."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "int64",
              "description": "Time when the rate plan will expire in milliseconds since epoch. Set to 0 or `null` to indicate that the rate plan should never expire."
            },
            "setupFee": {
              "id": "GoogleTypeMoney",
              "type": "object",
              "properties": {
                "nanos": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
                },
                "units": {
                  "type": "string",
                  "format": "int64",
                  "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
                },
                "currencyCode": {
                  "type": "string",
                  "description": "The three-letter currency code defined in ISO 4217."
                }
              },
              "description": "Initial, one-time fee paid when purchasing the API product."
            },
            "createdAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Time that the rate plan was created in milliseconds since epoch."
            },
            "startTime": {
              "type": "string",
              "format": "int64",
              "description": "Time when the rate plan becomes active in milliseconds since epoch."
            },
            "apiproduct": {
              "type": "string",
              "description": "Name of the API product that the rate plan is associated with."
            },
            "description": {
              "type": "string",
              "description": "Description of the rate plan."
            },
            "displayName": {
              "type": "string",
              "description": "Display name of the rate plan."
            },
            "currencyCode": {
              "type": "string",
              "description": "Currency to be used for billing. Consists of a three-letter code as defined by the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) standard."
            },
            "billingPeriod": {
              "enum": [
                "BILLING_PERIOD_UNSPECIFIED",
                "WEEKLY",
                "MONTHLY"
              ],
              "type": "string",
              "description": "Frequency at which the customer will be billed.",
              "enumDescriptions": [
                "Billing period not specified.",
                "Weekly billing period. **Note**: Not supported by Apigee at this time.",
                "Monthly billing period."
              ]
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Time the rate plan was last modified in milliseconds since epoch."
            },
            "revenueShareType": {
              "enum": [
                "REVENUE_SHARE_TYPE_UNSPECIFIED",
                "FIXED",
                "VOLUME_BANDED"
              ],
              "type": "string",
              "description": "Method used to calculate the revenue that is shared with developers.",
              "enumDescriptions": [
                "Revenue share type is not specified.",
                "Fixed percentage of the total revenue will be shared. The percentage to be shared can be configured by the API provider.",
                "Amount of revenue shared depends on the number of API calls. The API call volume ranges and the revenue share percentage for each volume can be configured by the API provider. **Note**: Not supported by Apigee at this time."
              ]
            },
            "fixedFeeFrequency": {
              "type": "integer",
              "format": "int32",
              "description": "Frequency at which the fixed fee is charged."
            },
            "fixedRecurringFee": {
              "id": "GoogleTypeMoney",
              "type": "object",
              "properties": {
                "nanos": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
                },
                "units": {
                  "type": "string",
                  "format": "int64",
                  "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
                },
                "currencyCode": {
                  "type": "string",
                  "description": "The three-letter currency code defined in ISO 4217."
                }
              },
              "description": "Fixed amount that is charged at a defined interval and billed in advance of use of the API product. The fee will be prorated for the first billing period."
            },
            "revenueShareRates": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1RevenueShareRange",
                "type": "object",
                "properties": {
                  "end": {
                    "type": "string",
                    "format": "int64",
                    "description": "Ending value of the range. Set to 0 or `null` for the last range of values."
                  },
                  "start": {
                    "type": "string",
                    "format": "int64",
                    "description": "Starting value of the range. Set to 0 or `null` for the initial range of values."
                  },
                  "sharePercentage": {
                    "type": "number",
                    "format": "double",
                    "description": "Percentage of the revenue to be shared with the developer. For example, to share 21 percent of the total revenue with the developer, set this value to 21. Specify a decimal number with a maximum of two digits following the decimal point."
                  }
                },
                "description": "API call volume range and the percentage of revenue to share with the developer when the total number of API calls is within the range."
              },
              "description": "Details of the revenue sharing model."
            },
            "paymentFundingModel": {
              "enum": [
                "PAYMENT_FUNDING_MODEL_UNSPECIFIED",
                "PREPAID",
                "POSTPAID"
              ],
              "type": "string",
              "description": "Flag that specifies the billing account type, prepaid or postpaid.",
              "enumDescriptions": [
                "Billing account type not specified.",
                "Prepaid billing account type. Developer pays in advance for the use of your API products. Funds are deducted from their prepaid account balance. **Note**: Not supported by Apigee at this time.",
                "Postpaid billing account type. Developer is billed through an invoice after using your API products."
              ]
            },
            "consumptionPricingType": {
              "enum": [
                "CONSUMPTION_PRICING_TYPE_UNSPECIFIED",
                "FIXED_PER_UNIT",
                "BANDED",
                "TIERED",
                "STAIRSTEP"
              ],
              "type": "string",
              "description": "Pricing model used for consumption-based charges.",
              "enumDescriptions": [
                "Pricing model not specified. This is the default.",
                "Fixed rate charged for each API call.",
                "Variable rate charged based on the total volume of API calls. Example: * 1-100 calls cost $2 per call * 101-200 calls cost $1.50 per call * 201-300 calls cost $1 per call * Total price for 50 calls: 50 x $2 = $100 * Total price for 150 calls: 150 x $1.5 = $225 * Total price for 250 calls: 250 x $1 = $250. **Note**: Not supported by Apigee at this time.",
                "Variable rate charged for each API call based on price tiers. Example: * 1-100 calls cost $2 per call * 101-200 calls cost $1.50 per call * 201-300 calls cost $1 per call * Total price for 50 calls: 50 x $2 = $100 * Total price for 150 calls: 100 x $2 + 50 x $1.5 = $275 * Total price for 250 calls: 100 x $2 + 100 x $1.5 + 50 x $1 = $400. **Note**: Not supported by Apigee at this time.",
                "Flat rate charged for a bundle of API calls whether or not the entire bundle is used. Example: * 1-100 calls cost $75 flat fee * 101-200 calls cost $100 flat free * 201-300 calls cost $150 flat fee * Total price for 1 call: $75 * Total price for 50 calls: $75 * Total price for 150 calls: $100 * Total price for 250 calls: $150. **Note**: Not supported by Apigee at this time."
              ]
            },
            "consumptionPricingRates": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1RateRange",
                "type": "object",
                "properties": {
                  "end": {
                    "type": "string",
                    "format": "int64",
                    "description": "Ending value of the range. Set to 0 or `null` for the last range of values."
                  },
                  "fee": {
                    "id": "GoogleTypeMoney",
                    "type": "object",
                    "properties": {
                      "nanos": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
                      },
                      "units": {
                        "type": "string",
                        "format": "int64",
                        "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
                      },
                      "currencyCode": {
                        "type": "string",
                        "description": "The three-letter currency code defined in ISO 4217."
                      }
                    },
                    "description": "Fee to charge when total number of API calls falls within this range."
                  },
                  "start": {
                    "type": "string",
                    "format": "int64",
                    "description": "Starting value of the range. Set to 0 or `null` for the initial range of values."
                  }
                },
                "description": "API call volume range and the fees charged when the total number of API calls is within the range."
              },
              "description": "API call volume ranges and the fees charged when the total number of API calls is within a given range. The method used to calculate the final fee depends on the selected pricing model. For example, if the pricing model is `STAIRSTEP` and the ranges are defined as follows: ``` { \"start\": 1, \"end\": 100, \"fee\": 75 }, { \"start\": 101, \"end\": 200, \"fee\": 100 }, } ``` Then the following fees would be charged based on the total number of API calls (assuming the currency selected is `USD`): * 1 call costs $75 * 50 calls cost $75 * 150 calls cost $100 The number of API calls cannot exceed 200."
            }
          },
          "description": "Rate plan details."
        }
      ]
      outputs: [
        {}
      ]
  organizations.apiproducts.update:
    description: |-
      Updates an existing API product. You must include all required values, whether or not you are updating them, as well as any optional values that you are updating. The API product name required in the request URL is the internal name of the product, not the Display Name. While they may be the same, it depends on whether the API product was created via UI or API. View the list of API products to identify their internal names.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.apiproducts/update
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1ApiProduct",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Internal name of the API product. Characters you can use in the name are restricted to: `A-Z0-9._\\-$ %`. **Note:** The internal name cannot be edited when updating the API product."
            },
            "quota": {
              "type": "string",
              "description": "Number of request messages permitted per app by this API product for the specified `quotaInterval` and `quotaTimeUnit`. For example, a `quota` of 50, for a `quotaInterval` of 12 and a `quotaTimeUnit` of hours means 50 requests are allowed every 12 hours."
            },
            "scopes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Comma-separated list of OAuth scopes that are validated at runtime. Apigee validates that the scopes in any access token presented match the scopes defined in the OAuth policy associated with the API product."
            },
            "proxies": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Comma-separated list of API proxy names to which this API product is bound. By specifying API proxies, you can associate resources in the API product with specific API proxies, preventing developers from accessing those resources through other API proxies. Apigee rejects requests to API proxies that are not listed. **Note:** The API proxy names must already exist in the specified environment as they will be validated upon creation."
            },
            "createdAt": {
              "type": "string",
              "format": "int64",
              "description": "Response only. Creation time of this environment as milliseconds since epoch."
            },
            "attributes": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Attribute",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "API key of the attribute."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of the attribute."
                  }
                },
                "description": "Key-value pair to store extra metadata."
              },
              "description": "Array of attributes that may be used to extend the default API product profile with customer-specific metadata. You can specify a maximum of 18 attributes. Use this property to specify the access level of the API product as either `public`, `private`, or `internal`. Only products marked `public` are available to developers in the Apigee developer portal. For example, you can set a product to `internal` while it is in development and then change access to `public` when it is ready to release on the portal. API products marked as `private` do not appear on the portal, but can be accessed by external developers."
            },
            "description": {
              "type": "string",
              "description": "Description of the API product. Include key information about the API product that is not captured by other fields. Comma-separated list of API resources to be bundled in the API product. By default, the resource paths are mapped from the `proxy.pathsuffix` variable. The proxy path suffix is defined as the URI fragment following the ProxyEndpoint base path. For example, if the `apiResources` element is defined to be `/forecastrss` and the base path defined for the API proxy is `/weather`, then only requests to `/weather/forecastrss` are permitted by the API product. You can select a specific path, or you can select all subpaths with the following wildcard: - `/**`: Indicates that all sub-URIs are included. - `/*` : Indicates that only URIs one level down are included. By default, / supports the same resources as /** as well as the base path defined by the API proxy. For example, if the base path of the API proxy is `/v1/weatherapikey`, then the API product supports requests to `/v1/weatherapikey` and to any sub-URIs, such as `/v1/weatherapikey/forecastrss`, `/v1/weatherapikey/region/CA`, and so on. For more information, see Managing API products."
            },
            "displayName": {
              "type": "string",
              "description": "Name displayed in the UI or developer portal to developers registering for API access."
            },
            "apiResources": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "approvalType": {
              "type": "string",
              "description": "Flag that specifies how API keys are approved to access the APIs defined by the API product. If set to `manual`, the consumer key is generated and returned in \"pending\" state. In this case, the API keys won't work until they have been explicitly approved. If set to `auto`, the consumer key is generated and returned in \"approved\" state and can be used immediately. **Note:** Typically, `auto` is used to provide access to free or trial API products that provide limited quota or capabilities."
            },
            "environments": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Comma-separated list of environment names to which the API product is bound. Requests to environments that are not listed are rejected. By specifying one or more environments, you can bind the resources listed in the API product to a specific environment, preventing developers from accessing those resources through API proxies deployed in another environment. This setting is used, for example, to prevent resources associated with API proxies in `prod` from being accessed by API proxies deployed in `test`."
            },
            "quotaInterval": {
              "type": "string",
              "description": "Time interval over which the number of request messages is calculated."
            },
            "quotaTimeUnit": {
              "type": "string",
              "description": "Time unit defined for the `quotaInterval`. Valid values include `minute`, `hour`, `day`, or `month`."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "int64",
              "description": "Response only. Modified time of this environment as milliseconds since epoch."
            },
            "operationGroup": {
              "id": "GoogleCloudApigeeV1OperationGroup",
              "type": "object",
              "properties": {
                "operationConfigs": {
                  "type": "array",
                  "items": {
                    "id": "GoogleCloudApigeeV1OperationConfig",
                    "type": "object",
                    "properties": {
                      "quota": {
                        "id": "GoogleCloudApigeeV1Quota",
                        "type": "object",
                        "properties": {
                          "limit": {
                            "type": "string",
                            "description": "Required. Upper limit allowed for the time interval and time unit specified. Requests exceeding this limit will be rejected."
                          },
                          "interval": {
                            "type": "string",
                            "description": "Required. Time interval over which the number of request messages is calculated."
                          },
                          "timeUnit": {
                            "type": "string",
                            "description": "Time unit defined for the `interval`. Valid values include `minute`, `hour`, `day`, or `month`. If `limit` and `interval` are valid, the default value is `hour`; otherwise, the default is null."
                          }
                        },
                        "description": "Quota parameters to be enforced for the resources, methods, api_source combination. If none are specified, quota enforcement will not be done."
                      },
                      "apiSource": {
                        "type": "string",
                        "description": "Required. API proxy or remote service name with which the resources, methods, and quota are associated."
                      },
                      "attributes": {
                        "type": "array",
                        "items": {
                          "id": "GoogleCloudApigeeV1Attribute",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "API key of the attribute."
                            },
                            "value": {
                              "type": "string",
                              "description": "Value of the attribute."
                            }
                          },
                          "description": "Key-value pair to store extra metadata."
                        },
                        "description": "Custom attributes associated with the operation."
                      },
                      "operations": {
                        "type": "array",
                        "items": {
                          "id": "GoogleCloudApigeeV1Operation",
                          "type": "object",
                          "properties": {
                            "methods": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "methods refers to the REST verbs as in https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html. When none specified, all verb types are allowed."
                            },
                            "resource": {
                              "type": "string",
                              "description": "Required. resource represents REST resource path associated with the proxy/remote service."
                            }
                          },
                          "description": "Operation represents the pairing of REST resource path and the actions (verbs) allowed on the resource path."
                        },
                        "description": "List of resource/method pairs for the proxy/remote service, upon which quota will applied. **Note**: Currently, you can specify only a single resource/method pair. The call will fail if more than one resource/method pair is provided."
                      }
                    },
                    "description": "OperationConfig binds the resources in a proxy or remote service with the allowed REST methods and its associated quota enforcement."
                  },
                  "description": "Required. List of operation configurations for either Apigee API proxies or other remote services that are associated with this API product."
                },
                "operationConfigType": {
                  "type": "string",
                  "description": "Flag that specifes whether the configuration is for Apigee API proxy or a remote service. Valid values are `proxy` or `remoteservice`. Defaults to `proxy`. Set to `proxy` when Apigee API proxies are associated with the API product. Set to `remoteservice` when non-Apigee proxies like Istio-Envoy are associated with the API product."
                }
              },
              "description": "Configuration used to group Apigee proxies or remote services with resources, method types, and quotas. The resource refers to the resource URI (excluding the base path). With this grouping, the API product creator is able to fine-tune and give precise control over which REST methods have access to specific resources and how many calls can be made (using the `quota` setting). **Note:** The `api_resources` setting cannot be specified for both the API product and operation group; otherwise the call will fail."
            },
            "graphqlOperationGroup": {
              "id": "GoogleCloudApigeeV1GraphQLOperationGroup",
              "type": "object",
              "properties": {
                "operationConfigs": {
                  "type": "array",
                  "items": {
                    "id": "GoogleCloudApigeeV1GraphQLOperationConfig",
                    "type": "object",
                    "properties": {
                      "quota": {
                        "id": "GoogleCloudApigeeV1Quota",
                        "type": "object",
                        "properties": {
                          "limit": {
                            "type": "string",
                            "description": "Required. Upper limit allowed for the time interval and time unit specified. Requests exceeding this limit will be rejected."
                          },
                          "interval": {
                            "type": "string",
                            "description": "Required. Time interval over which the number of request messages is calculated."
                          },
                          "timeUnit": {
                            "type": "string",
                            "description": "Time unit defined for the `interval`. Valid values include `minute`, `hour`, `day`, or `month`. If `limit` and `interval` are valid, the default value is `hour`; otherwise, the default is null."
                          }
                        },
                        "description": "Quota parameters to be enforced for the resources, methods, api_source combination. If none are specified, quota enforcement will not be done."
                      },
                      "apiSource": {
                        "type": "string",
                        "description": "Required. API proxy endpoint or remote service name with which the graphQL operation, and quota are associated."
                      },
                      "attributes": {
                        "type": "array",
                        "items": {
                          "id": "GoogleCloudApigeeV1Attribute",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "API key of the attribute."
                            },
                            "value": {
                              "type": "string",
                              "description": "Value of the attribute."
                            }
                          },
                          "description": "Key-value pair to store extra metadata."
                        },
                        "description": "Custom attributes associated with the operation."
                      },
                      "operations": {
                        "type": "array",
                        "items": {
                          "id": "GoogleCloudApigeeV1GraphQLOperation",
                          "type": "object",
                          "properties": {
                            "operation": {
                              "type": "string",
                              "description": "GraphQL operation name, along with operation type which will be used to associate quotas with. If no name is specified, the quota will be applied to all graphQL operations irrespective of their operation names in the payload."
                            },
                            "operationTypes": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Required. `query`, `mutation` and `subscription` are the three operation types offered by graphQL. Currently we support only `query` and `mutation`."
                            }
                          },
                          "description": "GraphQLOperation represents the pairing of graphQL operation types and the graphQL operation name."
                        },
                        "description": "Required. List of graphQL name/Operation type pairs for the proxy/remote service, upon which quota will applied. If GraphQLOperation operation has only the operation type(s), that would imply that quota will be applied on all graphQL requests irrespective of the graphQL name. **Note**: Currently, we can specify only a single GraphQLOperation. Specifying more than one will result in failure of the operation."
                      }
                    },
                    "description": "GraphQLOperationConfig binds the resources in a proxy or remote service with the graphQL operation and its associated quota enforcement."
                  },
                  "description": "Required. List of operation configurations for either Apigee API proxies or other remote services that are associated with this API product."
                },
                "operationConfigType": {
                  "type": "string",
                  "description": "Flag that specifes whether the configuration is for Apigee API proxy or a remote service. Valid values are `proxy` or `remoteservice`. Defaults to `proxy`. Set to `proxy` when Apigee API proxies are associated with the API product. Set to `remoteservice` when non-Apigee proxies like Istio-Envoy are associated with the API product."
                }
              },
              "description": "Configuration used to group Apigee proxies or remote services with graphQL operation name, graphQL operation type and quotas. This grouping allows us to precisely set quota for a particular combination of graphQL name and operation type for a particular proxy request. If graphQL name is not set, this would imply quota will be applied on all graphQL requests matching the operation type."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  organizations.apis.create:
    description: |-
      Creates an API proxy. The API proxy created will not be accessible at runtime until it is deployed to an environment. Create a new API proxy by setting the `name` query parameter to the name of the API proxy. Import an API proxy configuration bundle stored in zip format on your local machine to your organization by doing the following: * Set the `name` query parameter to the name of the API proxy. * Set the `action` query parameter to `import`. * Set the `Content-Type` header to `multipart/form-data`. * Pass as a file the name of API proxy configuration bundle stored in zip format on your local machine using the `file` form field. **Note**: To validate the API proxy configuration bundle only without importing it, set the `action` query parameter to `validate`. When importing an API proxy configuration bundle, if the API proxy does not exist, it will be created. If the API proxy exists, then a new revision is created. Invalid API proxy configurations are rejected, and a list of validation errors is returned to the client.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.apis/create
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ApiProxyRevision",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the API proxy."
            },
            "spec": {
              "type": "string",
              "description": "OpenAPI Specification that is associated with the API proxy. The value is set to a URL or to a path in the specification store."
            },
            "type": {
              "type": "string",
              "description": "Type. Set to `Application`. Maintained for compatibility with the Apigee Edge API."
            },
            "teams": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of the teams included in the API proxy revision."
            },
            "proxies": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of proxy names included in the API proxy revision."
            },
            "targets": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of the targets included in the API proxy revision."
            },
            "policies": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of policy names included in the API proxy revision.."
            },
            "revision": {
              "type": "string",
              "description": "API proxy revision."
            },
            "basepaths": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Base URL of the API proxy."
            },
            "createdAt": {
              "type": "string",
              "format": "int64",
              "description": "Time that the API proxy revision was created in milliseconds since epoch."
            },
            "resources": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of the resources included in the API proxy revision formatted as \"{type}://{name}\"."
            },
            "contextInfo": {
              "type": "string",
              "description": "Revision number, app name, and organization for the API proxy."
            },
            "description": {
              "type": "string",
              "description": "Description of the API proxy revision."
            },
            "displayName": {
              "type": "string",
              "description": "Human-readable name of the API proxy."
            },
            "sharedFlows": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of the shared flows included in the API proxy revision."
            },
            "resourceFiles": {
              "id": "GoogleCloudApigeeV1ResourceFiles",
              "type": "object",
              "properties": {
                "resourceFile": {
                  "type": "array",
                  "items": {
                    "id": "GoogleCloudApigeeV1ResourceFile",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "ID of the resource file."
                      },
                      "type": {
                        "type": "string",
                        "description": "Resource file type. {{ resource_file_type }}"
                      }
                    },
                    "description": "Metadata about a resource file."
                  },
                  "description": "List of resource files."
                }
              },
              "description": "List of resource files included in the API proxy revision."
            },
            "targetServers": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of TargetServers referenced in any TargetEndpoint in the API proxy. Typically, you will see this element only when the API proxy was created using the Edge UI. This is a 'manifest' setting designed to provide visibility into the contents of the API proxy."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "int64",
              "description": "Time that the API proxy revision was last modified in milliseconds since epoch."
            },
            "proxyEndpoints": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of ProxyEndpoints in the `/proxies` directory of the API proxy. Typically, this element is included only when the API proxy was created using the Edge UI. This is a 'manifest' setting designed to provide visibility into the contents of the API proxy."
            },
            "targetEndpoints": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of TargetEndpoints in the `/targets` directory of the API proxy. Typically, this element is included only when the API proxy was created using the Edge UI. This is a 'manifest' setting designed to provide visibility into the contents of the API proxy."
            },
            "configurationVersion": {
              "id": "GoogleCloudApigeeV1ConfigVersion",
              "type": "object",
              "properties": {
                "majorVersion": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Major version of the API proxy configuration schema."
                },
                "minorVersion": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Minor version of the API proxy configuration schema."
                }
              },
              "description": "Version of the API proxy configuration schema to which the API proxy conforms. Currently, the only supported value is 4.0 (`majorVersion.minorVersion`). This setting may be used in the future to track the evolution of the API proxy format."
            },
            "entityMetaDataAsProperties": {
              "type": "object",
              "description": "Metadata describing the API proxy revision as a key-value map.",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "description": "API proxy revision."
        }
      ]
  organizations.apis.delete:
    description: |-
      Deletes an API proxy and all associated endpoints, policies, resources, and revisions. The API proxy must be undeployed before you can delete it.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.apis/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ApiProxy",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the API proxy."
            },
            "metaData": {
              "id": "GoogleCloudApigeeV1EntityMetadata",
              "type": "object",
              "properties": {
                "subType": {
                  "type": "string",
                  "description": "The type of entity described"
                },
                "createdAt": {
                  "type": "string",
                  "format": "int64",
                  "description": "Time at which the API proxy was created, in milliseconds since epoch."
                },
                "lastModifiedAt": {
                  "type": "string",
                  "format": "int64",
                  "description": "Time at which the API proxy was most recently modified, in milliseconds since epoch."
                }
              },
              "description": "Metadata describing the API proxy."
            },
            "revision": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of revisons defined for the API proxy."
            },
            "latestRevisionId": {
              "type": "string",
              "description": "The id of the most recently created revision for this api proxy."
            }
          },
          "description": "Metadata describing the API proxy"
        }
      ]
  organizations.apis.deployments.list:
    description: |-
      Lists all deployments of an API proxy.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.apis.deployments/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ListDeploymentsResponse",
          "type": "object",
          "properties": {
            "deployments": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Deployment",
                "type": "object",
                "properties": {
                  "pods": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1PodStatus",
                      "type": "object",
                      "properties": {
                        "podName": {
                          "type": "string",
                          "description": "Name of the pod which is reporting the status."
                        },
                        "podStatus": {
                          "type": "string",
                          "description": "Overall status of the pod (not this specific deployment). Valid values include: - `active`: Up to date. - `stale` : Recently out of date. Pods that have not reported status in a long time are excluded from the output."
                        },
                        "appVersion": {
                          "type": "string",
                          "description": "Version of the application running in the pod."
                        },
                        "statusCode": {
                          "type": "string",
                          "description": "Code associated with the deployment status."
                        },
                        "podStatusTime": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the pod status was reported in milliseconds since epoch."
                        },
                        "deploymentTime": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the proxy was deployed in milliseconds since epoch."
                        },
                        "deploymentStatus": {
                          "type": "string",
                          "description": "Status of the deployment. Valid values include: - `deployed`: Successful. - `error` : Failed. - `pending` : Pod has not yet reported on the deployment."
                        },
                        "statusCodeDetails": {
                          "type": "string",
                          "description": "Human-readable message associated with the status code."
                        },
                        "deploymentStatusTime": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the deployment status was reported in milliseconds since epoch."
                        }
                      }
                    },
                    "description": "Status reported by runtime pods. This field is not populated for List APIs. **Note**: **This field is deprecated**. Runtime versions 1.3 and above report instance level status rather than pod status."
                  },
                  "state": {
                    "enum": [
                      "RUNTIME_STATE_UNSPECIFIED",
                      "READY",
                      "PROGRESSING",
                      "ERROR"
                    ],
                    "type": "string",
                    "description": "Current state of the deployment. This field is not populated in List APIs.",
                    "enumDescriptions": [
                      "This value should never be returned.",
                      "Runtime has loaded the deployment.",
                      "Deployment is not fully ready in the runtime.",
                      "Encountered an error with the deployment that requires intervention."
                    ]
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "id": "GoogleRpcStatus",
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The status code, which should be an enum value of google.rpc.Code."
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "any",
                              "description": "Properties of the object. Contains field @type with type URL."
                            }
                          },
                          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                        },
                        "message": {
                          "type": "string",
                          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                        }
                      },
                      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
                    },
                    "description": "Errors reported for this deployment. Populated only when state == ERROR. This field is not populated in List APIs."
                  },
                  "apiProxy": {
                    "type": "string",
                    "description": "API proxy."
                  },
                  "revision": {
                    "type": "string",
                    "description": "API proxy revision."
                  },
                  "instances": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1InstanceDeploymentStatus",
                      "type": "object",
                      "properties": {
                        "instance": {
                          "type": "string",
                          "description": "ID of the instance reporting the status."
                        },
                        "deployedRoutes": {
                          "type": "array",
                          "items": {
                            "id": "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute",
                            "type": "object",
                            "properties": {
                              "basepath": {
                                "type": "string",
                                "description": "Base path in the routing table."
                              },
                              "envgroup": {
                                "type": "string",
                                "description": "Environment group where this route is installed."
                              },
                              "percentage": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Percentage of ingress replicas reporting this route."
                              },
                              "environment": {
                                "type": "string",
                                "description": "Destination environment. This will be empty if the route is not yet reported."
                              }
                            },
                            "description": "Route deployed in the ingress routing table."
                          },
                          "description": "Current routes deployed in the ingress routing table. A route which is missing will appear in `missing_routes`."
                        },
                        "deployedRevisions": {
                          "type": "array",
                          "items": {
                            "id": "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision",
                            "type": "object",
                            "properties": {
                              "revision": {
                                "type": "string",
                                "description": "API proxy revision reported as deployed."
                              },
                              "percentage": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Percentage of MP replicas reporting this revision."
                              }
                            },
                            "description": "Revisions deployed in the MPs."
                          },
                          "description": "Revisions currently deployed in MPs."
                        }
                      },
                      "description": "The status of a deployment as reported by a single instance."
                    },
                    "description": "Status reported by each runtime instance. This field is not populated in List APIs."
                  },
                  "environment": {
                    "type": "string",
                    "description": "Environment."
                  },
                  "routeConflicts": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict",
                      "type": "object",
                      "properties": {
                        "description": {
                          "type": "string",
                          "description": "Human-readable description of this conflict."
                        },
                        "environmentGroup": {
                          "type": "string",
                          "description": "Name of the environment group in which this conflict exists."
                        },
                        "conflictingDeployment": {
                          "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment",
                          "type": "object",
                          "properties": {
                            "apiProxy": {
                              "type": "string",
                              "description": "Name of the deployed API proxy revision containing the base path."
                            },
                            "basepath": {
                              "type": "string",
                              "description": "Base path receiving traffic."
                            },
                            "revision": {
                              "type": "string",
                              "description": "Name of the deployed API proxy revision containing the base path."
                            },
                            "environment": {
                              "type": "string",
                              "description": "Name of the environment in which the proxy is deployed."
                            }
                          },
                          "description": "Existing base path/deployment causing the conflict."
                        }
                      },
                      "description": "Describes a routing conflict that may cause a deployment not to receive traffic at some base path."
                    },
                    "description": "Conflicts in the desired state routing configuration. The presence of conflicts does not cause the state to be `ERROR`, but it will mean that some of the deployment's base paths are not routed to its environment. If the conflicts change, the state will transition to `PROGRESSING` until the latest configuration is rolled out to all instances. This field is not populated in List APIs."
                  },
                  "deployStartTime": {
                    "type": "string",
                    "format": "int64",
                    "description": "Time the API proxy was marked `deployed` in the control plane in millisconds since epoch."
                  }
                }
              },
              "description": "List of deployments."
            }
          }
        }
      ]
  organizations.apis.get:
    description: |-
      Gets an API proxy including a list of existing revisions.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.apis/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ApiProxy",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the API proxy."
            },
            "metaData": {
              "id": "GoogleCloudApigeeV1EntityMetadata",
              "type": "object",
              "properties": {
                "subType": {
                  "type": "string",
                  "description": "The type of entity described"
                },
                "createdAt": {
                  "type": "string",
                  "format": "int64",
                  "description": "Time at which the API proxy was created, in milliseconds since epoch."
                },
                "lastModifiedAt": {
                  "type": "string",
                  "format": "int64",
                  "description": "Time at which the API proxy was most recently modified, in milliseconds since epoch."
                }
              },
              "description": "Metadata describing the API proxy."
            },
            "revision": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of revisons defined for the API proxy."
            },
            "latestRevisionId": {
              "type": "string",
              "description": "The id of the most recently created revision for this api proxy."
            }
          },
          "description": "Metadata describing the API proxy"
        }
      ]
  organizations.apis.keyvaluemaps.create:
    description: |-
      Creates a key value map in an api proxy.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.apis.keyvaluemaps/create
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1KeyValueMap",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Required. The id of the key value map."
            },
            "encrypted": {
              "type": "boolean",
              "description": "Optional. If `true` entry values will be encrypted."
            }
          },
          "description": "A collection of key, value string pairs"
        }
      ]
      outputs: [
        {}
      ]
  organizations.apis.keyvaluemaps.delete:
    description: |-
      Delete a key value map in an api proxy.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.apis.keyvaluemaps/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.apis.list:
    description: |-
      Lists the names of all API proxies in an organization. The names returned correspond to the names defined in the configuration files for each API proxy.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.apis/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ListApiProxiesResponse",
          "type": "object",
          "properties": {
            "proxies": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1ApiProxy",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the API proxy."
                  },
                  "metaData": {
                    "id": "GoogleCloudApigeeV1EntityMetadata",
                    "type": "object",
                    "properties": {
                      "subType": {
                        "type": "string",
                        "description": "The type of entity described"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "int64",
                        "description": "Time at which the API proxy was created, in milliseconds since epoch."
                      },
                      "lastModifiedAt": {
                        "type": "string",
                        "format": "int64",
                        "description": "Time at which the API proxy was most recently modified, in milliseconds since epoch."
                      }
                    },
                    "description": "Metadata describing the API proxy."
                  },
                  "revision": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of revisons defined for the API proxy."
                  },
                  "latestRevisionId": {
                    "type": "string",
                    "description": "The id of the most recently created revision for this api proxy."
                  }
                },
                "description": "Metadata describing the API proxy"
              }
            }
          }
        }
      ]
  organizations.apis.revisions.delete:
    description: |-
      Deletes an API proxy revision and all policies, resources, endpoints, and revisions associated with it. The API proxy revision must be undeployed before you can delete it.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.apis.revisions/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ApiProxyRevision",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the API proxy."
            },
            "spec": {
              "type": "string",
              "description": "OpenAPI Specification that is associated with the API proxy. The value is set to a URL or to a path in the specification store."
            },
            "type": {
              "type": "string",
              "description": "Type. Set to `Application`. Maintained for compatibility with the Apigee Edge API."
            },
            "teams": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of the teams included in the API proxy revision."
            },
            "proxies": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of proxy names included in the API proxy revision."
            },
            "targets": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of the targets included in the API proxy revision."
            },
            "policies": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of policy names included in the API proxy revision.."
            },
            "revision": {
              "type": "string",
              "description": "API proxy revision."
            },
            "basepaths": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Base URL of the API proxy."
            },
            "createdAt": {
              "type": "string",
              "format": "int64",
              "description": "Time that the API proxy revision was created in milliseconds since epoch."
            },
            "resources": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of the resources included in the API proxy revision formatted as \"{type}://{name}\"."
            },
            "contextInfo": {
              "type": "string",
              "description": "Revision number, app name, and organization for the API proxy."
            },
            "description": {
              "type": "string",
              "description": "Description of the API proxy revision."
            },
            "displayName": {
              "type": "string",
              "description": "Human-readable name of the API proxy."
            },
            "sharedFlows": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of the shared flows included in the API proxy revision."
            },
            "resourceFiles": {
              "id": "GoogleCloudApigeeV1ResourceFiles",
              "type": "object",
              "properties": {
                "resourceFile": {
                  "type": "array",
                  "items": {
                    "id": "GoogleCloudApigeeV1ResourceFile",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "ID of the resource file."
                      },
                      "type": {
                        "type": "string",
                        "description": "Resource file type. {{ resource_file_type }}"
                      }
                    },
                    "description": "Metadata about a resource file."
                  },
                  "description": "List of resource files."
                }
              },
              "description": "List of resource files included in the API proxy revision."
            },
            "targetServers": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of TargetServers referenced in any TargetEndpoint in the API proxy. Typically, you will see this element only when the API proxy was created using the Edge UI. This is a 'manifest' setting designed to provide visibility into the contents of the API proxy."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "int64",
              "description": "Time that the API proxy revision was last modified in milliseconds since epoch."
            },
            "proxyEndpoints": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of ProxyEndpoints in the `/proxies` directory of the API proxy. Typically, this element is included only when the API proxy was created using the Edge UI. This is a 'manifest' setting designed to provide visibility into the contents of the API proxy."
            },
            "targetEndpoints": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of TargetEndpoints in the `/targets` directory of the API proxy. Typically, this element is included only when the API proxy was created using the Edge UI. This is a 'manifest' setting designed to provide visibility into the contents of the API proxy."
            },
            "configurationVersion": {
              "id": "GoogleCloudApigeeV1ConfigVersion",
              "type": "object",
              "properties": {
                "majorVersion": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Major version of the API proxy configuration schema."
                },
                "minorVersion": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Minor version of the API proxy configuration schema."
                }
              },
              "description": "Version of the API proxy configuration schema to which the API proxy conforms. Currently, the only supported value is 4.0 (`majorVersion.minorVersion`). This setting may be used in the future to track the evolution of the API proxy format."
            },
            "entityMetaDataAsProperties": {
              "type": "object",
              "description": "Metadata describing the API proxy revision as a key-value map.",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "description": "API proxy revision."
        }
      ]
  organizations.apis.revisions.deployments.list:
    description: |-
      Lists all deployments of an API proxy revision.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.apis.revisions.deployments/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ListDeploymentsResponse",
          "type": "object",
          "properties": {
            "deployments": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Deployment",
                "type": "object",
                "properties": {
                  "pods": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1PodStatus",
                      "type": "object",
                      "properties": {
                        "podName": {
                          "type": "string",
                          "description": "Name of the pod which is reporting the status."
                        },
                        "podStatus": {
                          "type": "string",
                          "description": "Overall status of the pod (not this specific deployment). Valid values include: - `active`: Up to date. - `stale` : Recently out of date. Pods that have not reported status in a long time are excluded from the output."
                        },
                        "appVersion": {
                          "type": "string",
                          "description": "Version of the application running in the pod."
                        },
                        "statusCode": {
                          "type": "string",
                          "description": "Code associated with the deployment status."
                        },
                        "podStatusTime": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the pod status was reported in milliseconds since epoch."
                        },
                        "deploymentTime": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the proxy was deployed in milliseconds since epoch."
                        },
                        "deploymentStatus": {
                          "type": "string",
                          "description": "Status of the deployment. Valid values include: - `deployed`: Successful. - `error` : Failed. - `pending` : Pod has not yet reported on the deployment."
                        },
                        "statusCodeDetails": {
                          "type": "string",
                          "description": "Human-readable message associated with the status code."
                        },
                        "deploymentStatusTime": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the deployment status was reported in milliseconds since epoch."
                        }
                      }
                    },
                    "description": "Status reported by runtime pods. This field is not populated for List APIs. **Note**: **This field is deprecated**. Runtime versions 1.3 and above report instance level status rather than pod status."
                  },
                  "state": {
                    "enum": [
                      "RUNTIME_STATE_UNSPECIFIED",
                      "READY",
                      "PROGRESSING",
                      "ERROR"
                    ],
                    "type": "string",
                    "description": "Current state of the deployment. This field is not populated in List APIs.",
                    "enumDescriptions": [
                      "This value should never be returned.",
                      "Runtime has loaded the deployment.",
                      "Deployment is not fully ready in the runtime.",
                      "Encountered an error with the deployment that requires intervention."
                    ]
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "id": "GoogleRpcStatus",
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The status code, which should be an enum value of google.rpc.Code."
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "any",
                              "description": "Properties of the object. Contains field @type with type URL."
                            }
                          },
                          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                        },
                        "message": {
                          "type": "string",
                          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                        }
                      },
                      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
                    },
                    "description": "Errors reported for this deployment. Populated only when state == ERROR. This field is not populated in List APIs."
                  },
                  "apiProxy": {
                    "type": "string",
                    "description": "API proxy."
                  },
                  "revision": {
                    "type": "string",
                    "description": "API proxy revision."
                  },
                  "instances": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1InstanceDeploymentStatus",
                      "type": "object",
                      "properties": {
                        "instance": {
                          "type": "string",
                          "description": "ID of the instance reporting the status."
                        },
                        "deployedRoutes": {
                          "type": "array",
                          "items": {
                            "id": "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute",
                            "type": "object",
                            "properties": {
                              "basepath": {
                                "type": "string",
                                "description": "Base path in the routing table."
                              },
                              "envgroup": {
                                "type": "string",
                                "description": "Environment group where this route is installed."
                              },
                              "percentage": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Percentage of ingress replicas reporting this route."
                              },
                              "environment": {
                                "type": "string",
                                "description": "Destination environment. This will be empty if the route is not yet reported."
                              }
                            },
                            "description": "Route deployed in the ingress routing table."
                          },
                          "description": "Current routes deployed in the ingress routing table. A route which is missing will appear in `missing_routes`."
                        },
                        "deployedRevisions": {
                          "type": "array",
                          "items": {
                            "id": "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision",
                            "type": "object",
                            "properties": {
                              "revision": {
                                "type": "string",
                                "description": "API proxy revision reported as deployed."
                              },
                              "percentage": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Percentage of MP replicas reporting this revision."
                              }
                            },
                            "description": "Revisions deployed in the MPs."
                          },
                          "description": "Revisions currently deployed in MPs."
                        }
                      },
                      "description": "The status of a deployment as reported by a single instance."
                    },
                    "description": "Status reported by each runtime instance. This field is not populated in List APIs."
                  },
                  "environment": {
                    "type": "string",
                    "description": "Environment."
                  },
                  "routeConflicts": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict",
                      "type": "object",
                      "properties": {
                        "description": {
                          "type": "string",
                          "description": "Human-readable description of this conflict."
                        },
                        "environmentGroup": {
                          "type": "string",
                          "description": "Name of the environment group in which this conflict exists."
                        },
                        "conflictingDeployment": {
                          "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment",
                          "type": "object",
                          "properties": {
                            "apiProxy": {
                              "type": "string",
                              "description": "Name of the deployed API proxy revision containing the base path."
                            },
                            "basepath": {
                              "type": "string",
                              "description": "Base path receiving traffic."
                            },
                            "revision": {
                              "type": "string",
                              "description": "Name of the deployed API proxy revision containing the base path."
                            },
                            "environment": {
                              "type": "string",
                              "description": "Name of the environment in which the proxy is deployed."
                            }
                          },
                          "description": "Existing base path/deployment causing the conflict."
                        }
                      },
                      "description": "Describes a routing conflict that may cause a deployment not to receive traffic at some base path."
                    },
                    "description": "Conflicts in the desired state routing configuration. The presence of conflicts does not cause the state to be `ERROR`, but it will mean that some of the deployment's base paths are not routed to its environment. If the conflicts change, the state will transition to `PROGRESSING` until the latest configuration is rolled out to all instances. This field is not populated in List APIs."
                  },
                  "deployStartTime": {
                    "type": "string",
                    "format": "int64",
                    "description": "Time the API proxy was marked `deployed` in the control plane in millisconds since epoch."
                  }
                }
              },
              "description": "List of deployments."
            }
          }
        }
      ]
  organizations.apis.revisions.get:
    description: |-
      Gets an API proxy revision. To download the API proxy configuration bundle for the specified revision as a zip file, set the `format` query parameter to `bundle`. If you are using curl, specify `-o filename.zip` to save the output to a file; otherwise, it displays to `stdout`. Then, develop the API proxy configuration locally and upload the updated API proxy configuration revision, as described in [updateApiProxyRevision](updateApiProxyRevision).
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.apis.revisions/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleApiHttpBody",
          "type": "object",
          "properties": {
            "data": {
              "type": "string",
              "format": "byte",
              "description": "The HTTP request/response body as raw binary."
            },
            "extensions": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": {
                  "type": "any",
                  "description": "Properties of the object. Contains field @type with type URL."
                }
              },
              "description": "Application specific response metadata. Must be set in the first response for streaming APIs."
            },
            "contentType": {
              "type": "string",
              "description": "The HTTP Content-Type header value specifying the content type of the body."
            }
          },
          "description": "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged."
        }
      ]
  organizations.apis.revisions.updateApiProxyRevision:
    description: |-
      Updates an existing API proxy revision by uploading the API proxy configuration bundle as a zip file from your local machine. You can update only API proxy revisions that have never been deployed. After deployment, an API proxy revision becomes immutable, even if it is undeployed. Set the `Content-Type` header to either `multipart/form-data` or `application/octet-stream`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.apis.revisions/updateApiProxyRevision
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ApiProxyRevision",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the API proxy."
            },
            "spec": {
              "type": "string",
              "description": "OpenAPI Specification that is associated with the API proxy. The value is set to a URL or to a path in the specification store."
            },
            "type": {
              "type": "string",
              "description": "Type. Set to `Application`. Maintained for compatibility with the Apigee Edge API."
            },
            "teams": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of the teams included in the API proxy revision."
            },
            "proxies": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of proxy names included in the API proxy revision."
            },
            "targets": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of the targets included in the API proxy revision."
            },
            "policies": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of policy names included in the API proxy revision.."
            },
            "revision": {
              "type": "string",
              "description": "API proxy revision."
            },
            "basepaths": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Base URL of the API proxy."
            },
            "createdAt": {
              "type": "string",
              "format": "int64",
              "description": "Time that the API proxy revision was created in milliseconds since epoch."
            },
            "resources": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of the resources included in the API proxy revision formatted as \"{type}://{name}\"."
            },
            "contextInfo": {
              "type": "string",
              "description": "Revision number, app name, and organization for the API proxy."
            },
            "description": {
              "type": "string",
              "description": "Description of the API proxy revision."
            },
            "displayName": {
              "type": "string",
              "description": "Human-readable name of the API proxy."
            },
            "sharedFlows": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of the shared flows included in the API proxy revision."
            },
            "resourceFiles": {
              "id": "GoogleCloudApigeeV1ResourceFiles",
              "type": "object",
              "properties": {
                "resourceFile": {
                  "type": "array",
                  "items": {
                    "id": "GoogleCloudApigeeV1ResourceFile",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "ID of the resource file."
                      },
                      "type": {
                        "type": "string",
                        "description": "Resource file type. {{ resource_file_type }}"
                      }
                    },
                    "description": "Metadata about a resource file."
                  },
                  "description": "List of resource files."
                }
              },
              "description": "List of resource files included in the API proxy revision."
            },
            "targetServers": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of TargetServers referenced in any TargetEndpoint in the API proxy. Typically, you will see this element only when the API proxy was created using the Edge UI. This is a 'manifest' setting designed to provide visibility into the contents of the API proxy."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "int64",
              "description": "Time that the API proxy revision was last modified in milliseconds since epoch."
            },
            "proxyEndpoints": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of ProxyEndpoints in the `/proxies` directory of the API proxy. Typically, this element is included only when the API proxy was created using the Edge UI. This is a 'manifest' setting designed to provide visibility into the contents of the API proxy."
            },
            "targetEndpoints": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of TargetEndpoints in the `/targets` directory of the API proxy. Typically, this element is included only when the API proxy was created using the Edge UI. This is a 'manifest' setting designed to provide visibility into the contents of the API proxy."
            },
            "configurationVersion": {
              "id": "GoogleCloudApigeeV1ConfigVersion",
              "type": "object",
              "properties": {
                "majorVersion": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Major version of the API proxy configuration schema."
                },
                "minorVersion": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Minor version of the API proxy configuration schema."
                }
              },
              "description": "Version of the API proxy configuration schema to which the API proxy conforms. Currently, the only supported value is 4.0 (`majorVersion.minorVersion`). This setting may be used in the future to track the evolution of the API proxy format."
            },
            "entityMetaDataAsProperties": {
              "type": "object",
              "description": "Metadata describing the API proxy revision as a key-value map.",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "description": "API proxy revision."
        }
      ]
  organizations.apps.get:
    description: |-
      Gets the app profile for the specified app ID.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.apps/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1App",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the app."
            },
            "appId": {
              "type": "string",
              "description": "ID of the app."
            },
            "scopes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Scopes to apply to the app. The specified scope names must already exist on the API product that you associate with the app."
            },
            "status": {
              "type": "string",
              "description": "Status of the credential."
            },
            "createdAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Unix time when the app was created."
            },
            "attributes": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Attribute",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "API key of the attribute."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of the attribute."
                  }
                },
                "description": "Key-value pair to store extra metadata."
              },
              "description": "List of attributes."
            },
            "apiProducts": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1ApiProductRef",
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "Status of the API product."
                  },
                  "apiproduct": {
                    "type": "string",
                    "description": "Name of the API product."
                  }
                }
              },
              "description": "List of API products associated with the app."
            },
            "callbackUrl": {
              "type": "string",
              "description": "Callback URL used by OAuth 2.0 authorization servers to communicate authorization codes back to apps."
            },
            "companyName": {
              "type": "string",
              "description": "Name of the company that owns the app."
            },
            "credentials": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Credential",
                "type": "object",
                "properties": {
                  "scopes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of scopes to apply to the app. Specified scopes must already exist on the API product that you associate with the app."
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the credential."
                  },
                  "issuedAt": {
                    "type": "string",
                    "format": "int64",
                    "description": "Time the credential was issued in milliseconds since epoch."
                  },
                  "expiresAt": {
                    "type": "string",
                    "format": "int64",
                    "description": "Time the credential will expire in milliseconds since epoch."
                  },
                  "attributes": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1Attribute",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "API key of the attribute."
                        },
                        "value": {
                          "type": "string",
                          "description": "Value of the attribute."
                        }
                      },
                      "description": "Key-value pair to store extra metadata."
                    },
                    "description": "List of attributes associated with this credential."
                  },
                  "apiProducts": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1ApiProductRef",
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "Status of the API product."
                        },
                        "apiproduct": {
                          "type": "string",
                          "description": "Name of the API product."
                        }
                      }
                    },
                    "description": "List of API products this credential can be used for."
                  },
                  "consumerKey": {
                    "type": "string",
                    "description": "Consumer key."
                  },
                  "consumerSecret": {
                    "type": "string",
                    "description": "Secret key."
                  }
                }
              },
              "readOnly": true,
              "description": "Output only. Set of credentials for the app. Credentials are API key/secret pairs associated with API products."
            },
            "developerId": {
              "type": "string",
              "description": "ID of the developer."
            },
            "keyExpiresIn": {
              "type": "string",
              "format": "int64",
              "description": "Duration, in milliseconds, of the consumer key that will be generated for the app. The default value, -1, indicates an infinite validity period. Once set, the expiration can't be updated. json key: keyExpiresIn"
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Last modified time as milliseconds since epoch."
            }
          }
        }
      ]
  organizations.apps.list:
    description: |-
      Lists IDs of apps within an organization that have the specified app status (approved or revoked) or are of the specified app type (developer or company).
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.apps/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ListAppsResponse",
          "type": "object",
          "properties": {
            "app": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1App",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the app."
                  },
                  "appId": {
                    "type": "string",
                    "description": "ID of the app."
                  },
                  "scopes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Scopes to apply to the app. The specified scope names must already exist on the API product that you associate with the app."
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the credential."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "int64",
                    "readOnly": true,
                    "description": "Output only. Unix time when the app was created."
                  },
                  "attributes": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1Attribute",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "API key of the attribute."
                        },
                        "value": {
                          "type": "string",
                          "description": "Value of the attribute."
                        }
                      },
                      "description": "Key-value pair to store extra metadata."
                    },
                    "description": "List of attributes."
                  },
                  "apiProducts": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1ApiProductRef",
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "Status of the API product."
                        },
                        "apiproduct": {
                          "type": "string",
                          "description": "Name of the API product."
                        }
                      }
                    },
                    "description": "List of API products associated with the app."
                  },
                  "callbackUrl": {
                    "type": "string",
                    "description": "Callback URL used by OAuth 2.0 authorization servers to communicate authorization codes back to apps."
                  },
                  "companyName": {
                    "type": "string",
                    "description": "Name of the company that owns the app."
                  },
                  "credentials": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1Credential",
                      "type": "object",
                      "properties": {
                        "scopes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of scopes to apply to the app. Specified scopes must already exist on the API product that you associate with the app."
                        },
                        "status": {
                          "type": "string",
                          "description": "Status of the credential."
                        },
                        "issuedAt": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the credential was issued in milliseconds since epoch."
                        },
                        "expiresAt": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the credential will expire in milliseconds since epoch."
                        },
                        "attributes": {
                          "type": "array",
                          "items": {
                            "id": "GoogleCloudApigeeV1Attribute",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "API key of the attribute."
                              },
                              "value": {
                                "type": "string",
                                "description": "Value of the attribute."
                              }
                            },
                            "description": "Key-value pair to store extra metadata."
                          },
                          "description": "List of attributes associated with this credential."
                        },
                        "apiProducts": {
                          "type": "array",
                          "items": {
                            "id": "GoogleCloudApigeeV1ApiProductRef",
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "description": "Status of the API product."
                              },
                              "apiproduct": {
                                "type": "string",
                                "description": "Name of the API product."
                              }
                            }
                          },
                          "description": "List of API products this credential can be used for."
                        },
                        "consumerKey": {
                          "type": "string",
                          "description": "Consumer key."
                        },
                        "consumerSecret": {
                          "type": "string",
                          "description": "Secret key."
                        }
                      }
                    },
                    "readOnly": true,
                    "description": "Output only. Set of credentials for the app. Credentials are API key/secret pairs associated with API products."
                  },
                  "developerId": {
                    "type": "string",
                    "description": "ID of the developer."
                  },
                  "keyExpiresIn": {
                    "type": "string",
                    "format": "int64",
                    "description": "Duration, in milliseconds, of the consumer key that will be generated for the app. The default value, -1, indicates an infinite validity period. Once set, the expiration can't be updated. json key: keyExpiresIn"
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "int64",
                    "readOnly": true,
                    "description": "Output only. Last modified time as milliseconds since epoch."
                  }
                }
              }
            }
          }
        }
      ]
  organizations.create:
    description: |-
      Creates an Apigee organization. See [Create an Apigee organization](https://cloud.google.com/apigee/docs/api-platform/get-started/create-org).
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations/create
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1Organization",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Name of the Apigee organization."
            },
            "type": {
              "enum": [
                "TYPE_UNSPECIFIED",
                "TYPE_TRIAL",
                "TYPE_PAID",
                "TYPE_INTERNAL"
              ],
              "type": "string",
              "description": "Not used by Apigee.",
              "enumDescriptions": [
                "Subscription type not specified.",
                "Subscription to Apigee is free, limited, and used for evaluation purposes only.",
                "Full subscription to Apigee has been purchased. See [Apigee pricing](https://cloud.google.com/apigee/pricing/).",
                "For internal users only."
              ]
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "CREATING",
                "ACTIVE",
                "DELETING"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. State of the organization. Values other than ACTIVE means the resource is not ready to use.",
              "enumDescriptions": [
                "Resource is in an unspecified state.",
                "Resource is being created.",
                "Resource is provisioned and ready to use.",
                "The resource is being deleted."
              ]
            },
            "createdAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Time that the Apigee organization was created in milliseconds since epoch."
            },
            "expiresAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Time that the Apigee organization is scheduled for deletion."
            },
            "projectId": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Project ID associated with the Apigee organization."
            },
            "attributes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Not used by Apigee."
            },
            "properties": {
              "id": "GoogleCloudApigeeV1Properties",
              "type": "object",
              "properties": {
                "property": {
                  "type": "array",
                  "items": {
                    "id": "GoogleCloudApigeeV1Property",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The property key"
                      },
                      "value": {
                        "type": "string",
                        "description": "The property value"
                      }
                    },
                    "description": "A single property entry in the Properties message."
                  },
                  "description": "List of all properties in the object"
                }
              },
              "description": "Properties defined in the Apigee organization profile."
            },
            "billingType": {
              "enum": [
                "BILLING_TYPE_UNSPECIFIED",
                "SUBSCRIPTION",
                "EVALUATION"
              ],
              "type": "string",
              "description": "Billing type of the Apigee organization. See [Apigee pricing](https://cloud.google.com/apigee/pricing).",
              "enumDescriptions": [
                "Billing type not specified.",
                "A pre-paid subscription to Apigee.",
                "Free and limited access to Apigee for evaluation purposes only. only."
              ]
            },
            "description": {
              "type": "string",
              "description": "Description of the Apigee organization."
            },
            "displayName": {
              "type": "string"
            },
            "runtimeType": {
              "enum": [
                "RUNTIME_TYPE_UNSPECIFIED",
                "CLOUD",
                "HYBRID"
              ],
              "type": "string",
              "description": "Required. Runtime type of the Apigee organization based on the Apigee subscription purchased.",
              "enumDescriptions": [
                "Runtime type not specified.",
                "Google-managed Apigee runtime.",
                "User-managed Apigee hybrid runtime."
              ]
            },
            "addonsConfig": {
              "id": "GoogleCloudApigeeV1AddonsConfig",
              "type": "object",
              "properties": {
                "integrationConfig": {
                  "id": "GoogleCloudApigeeV1IntegrationConfig",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "Flag that specifies whether the Integration add-on is enabled."
                    }
                  },
                  "description": "Configuration for the Integration add-on."
                },
                "monetizationConfig": {
                  "id": "GoogleCloudApigeeV1MonetizationConfig",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "Flag that specifies whether the Monetization add-on is enabled."
                    }
                  },
                  "description": "Configuration for the Monetization add-on."
                },
                "advancedApiOpsConfig": {
                  "id": "GoogleCloudApigeeV1AdvancedApiOpsConfig",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "Flag that specifies whether the Advanced API Ops add-on is enabled."
                    }
                  },
                  "description": "Configuration for the Advanced API Ops add-on."
                }
              },
              "description": "Addon configurations of the Apigee organization."
            },
            "customerName": {
              "type": "string",
              "description": "Not used by Apigee."
            },
            "environments": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "Output only. List of environments in the Apigee organization."
            },
            "caCertificate": {
              "type": "string",
              "format": "byte",
              "readOnly": true,
              "description": "Output only. Base64-encoded public certificate for the root CA of the Apigee organization. Valid only when [RuntimeType](#RuntimeType) is `CLOUD`."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Time that the Apigee organization was last modified in milliseconds since epoch."
            },
            "analyticsRegion": {
              "type": "string",
              "description": "Required. Primary GCP region for analytics data storage. For valid values, see [Create an Apigee organization](https://cloud.google.com/apigee/docs/api-platform/get-started/create-org)."
            },
            "subscriptionType": {
              "enum": [
                "SUBSCRIPTION_TYPE_UNSPECIFIED",
                "PAID",
                "TRIAL"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. DEPRECATED: This will eventually be replaced by BillingType. Subscription type of the Apigee organization. Valid values include trial (free, limited, and for evaluation purposes only) or paid (full subscription has been purchased). See [Apigee pricing](https://cloud.google.com/apigee/pricing/).",
              "enumDescriptions": [
                "Subscription type not specified.",
                "Full subscription to Apigee has been purchased.",
                "Subscription to Apigee is free, limited, and used for evaluation purposes only."
              ]
            },
            "authorizedNetwork": {
              "type": "string",
              "description": "Compute Engine network used for Service Networking to be peered with Apigee runtime instances. See [Getting started with the Service Networking API](https://cloud.google.com/service-infrastructure/docs/service-networking/getting-started). Valid only when [RuntimeType](#RuntimeType) is set to `CLOUD`. The value must be set before the creation of a runtime instance and can be updated only when there are no runtime instances. For example: `default`. Apigee also supports shared VPC (that is, the host network project is not the same as the one that is peering with Apigee). See [Shared VPC overview](https://cloud.google.com/vpc/docs/shared-vpc). To use a shared VPC network, use the following format: `projects/{host-project-id}/{region}/networks/{network-name}`. For example: `projects/my-sharedvpc-host/global/networks/mynetwork` **Note:** Not supported for Apigee hybrid."
            },
            "runtimeDatabaseEncryptionKeyName": {
              "type": "string",
              "description": "Cloud KMS key name used for encrypting the data that is stored and replicated across runtime instances. Update is not allowed after the organization is created. Required when [RuntimeType](#RuntimeType) is `CLOUD`. If not specified when [RuntimeType](#RuntimeType) is `TRIAL`, a Google-Managed encryption key will be used. For example: \"projects/foo/locations/us/keyRings/bar/cryptoKeys/baz\". **Note:** Not supported for Apigee hybrid."
            }
          }
        }
      ]
      outputs: [
        {
          "id": "GoogleLongrunningOperation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "GoogleRpcStatus",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  organizations.datacollectors.create:
    description: |-
      Creates a new data collector.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.datacollectors/create
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1DataCollector",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "ID of the data collector. Must begin with `dc_`."
            },
            "type": {
              "enum": [
                "TYPE_UNSPECIFIED",
                "INTEGER",
                "FLOAT",
                "STRING",
                "BOOLEAN",
                "DATETIME"
              ],
              "type": "string",
              "description": "Immutable. The type of data this data collector will collect.",
              "enumDescriptions": [
                "For future compatibility.",
                "For integer values.",
                "For float values.",
                "For string values.",
                "For boolean values.",
                "For datetime values."
              ]
            },
            "createdAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. The time at which the data collector was created in milliseconds since the epoch."
            },
            "description": {
              "type": "string",
              "description": "A description of the data collector."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. The time at which the Data Collector was last updated in milliseconds since the epoch."
            }
          },
          "description": "Data collector configuration."
        }
      ]
      outputs: [
        {}
      ]
  organizations.datacollectors.delete:
    description: |-
      Deletes a data collector.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.datacollectors/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  organizations.datacollectors.get:
    description: |-
      Gets a data collector.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.datacollectors/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.datacollectors.list:
    description: |-
      Lists all data collectors.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.datacollectors/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ListDataCollectorsResponse",
          "type": "object",
          "properties": {
            "nextPageToken": {
              "type": "string",
              "description": "Page token that you can include in a ListDataCollectors request to retrieve the next page. If omitted, no subsequent pages exist."
            },
            "dataCollectors": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1DataCollector",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "ID of the data collector. Must begin with `dc_`."
                  },
                  "type": {
                    "enum": [
                      "TYPE_UNSPECIFIED",
                      "INTEGER",
                      "FLOAT",
                      "STRING",
                      "BOOLEAN",
                      "DATETIME"
                    ],
                    "type": "string",
                    "description": "Immutable. The type of data this data collector will collect.",
                    "enumDescriptions": [
                      "For future compatibility.",
                      "For integer values.",
                      "For float values.",
                      "For string values.",
                      "For boolean values.",
                      "For datetime values."
                    ]
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "int64",
                    "readOnly": true,
                    "description": "Output only. The time at which the data collector was created in milliseconds since the epoch."
                  },
                  "description": {
                    "type": "string",
                    "description": "A description of the data collector."
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "int64",
                    "readOnly": true,
                    "description": "Output only. The time at which the Data Collector was last updated in milliseconds since the epoch."
                  }
                },
                "description": "Data collector configuration."
              },
              "description": "Data collectors in the specified organization."
            }
          },
          "description": "Response for ListDataCollectors."
        }
      ]
  organizations.datacollectors.patch:
    description: |-
      Updates a data collector.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.datacollectors/patch
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1DataCollector",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "ID of the data collector. Must begin with `dc_`."
            },
            "type": {
              "enum": [
                "TYPE_UNSPECIFIED",
                "INTEGER",
                "FLOAT",
                "STRING",
                "BOOLEAN",
                "DATETIME"
              ],
              "type": "string",
              "description": "Immutable. The type of data this data collector will collect.",
              "enumDescriptions": [
                "For future compatibility.",
                "For integer values.",
                "For float values.",
                "For string values.",
                "For boolean values.",
                "For datetime values."
              ]
            },
            "createdAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. The time at which the data collector was created in milliseconds since the epoch."
            },
            "description": {
              "type": "string",
              "description": "A description of the data collector."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. The time at which the Data Collector was last updated in milliseconds since the epoch."
            }
          },
          "description": "Data collector configuration."
        }
      ]
      outputs: [
        {}
      ]
  organizations.delete:
    description: |-
      Delete an Apigee organization. Only supported for SubscriptionType TRIAL.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleLongrunningOperation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "GoogleRpcStatus",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  organizations.deployments.list:
    description: |-
      Lists all deployments of API proxies or shared flows.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.deployments/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ListDeploymentsResponse",
          "type": "object",
          "properties": {
            "deployments": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Deployment",
                "type": "object",
                "properties": {
                  "pods": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1PodStatus",
                      "type": "object",
                      "properties": {
                        "podName": {
                          "type": "string",
                          "description": "Name of the pod which is reporting the status."
                        },
                        "podStatus": {
                          "type": "string",
                          "description": "Overall status of the pod (not this specific deployment). Valid values include: - `active`: Up to date. - `stale` : Recently out of date. Pods that have not reported status in a long time are excluded from the output."
                        },
                        "appVersion": {
                          "type": "string",
                          "description": "Version of the application running in the pod."
                        },
                        "statusCode": {
                          "type": "string",
                          "description": "Code associated with the deployment status."
                        },
                        "podStatusTime": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the pod status was reported in milliseconds since epoch."
                        },
                        "deploymentTime": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the proxy was deployed in milliseconds since epoch."
                        },
                        "deploymentStatus": {
                          "type": "string",
                          "description": "Status of the deployment. Valid values include: - `deployed`: Successful. - `error` : Failed. - `pending` : Pod has not yet reported on the deployment."
                        },
                        "statusCodeDetails": {
                          "type": "string",
                          "description": "Human-readable message associated with the status code."
                        },
                        "deploymentStatusTime": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the deployment status was reported in milliseconds since epoch."
                        }
                      }
                    },
                    "description": "Status reported by runtime pods. This field is not populated for List APIs. **Note**: **This field is deprecated**. Runtime versions 1.3 and above report instance level status rather than pod status."
                  },
                  "state": {
                    "enum": [
                      "RUNTIME_STATE_UNSPECIFIED",
                      "READY",
                      "PROGRESSING",
                      "ERROR"
                    ],
                    "type": "string",
                    "description": "Current state of the deployment. This field is not populated in List APIs.",
                    "enumDescriptions": [
                      "This value should never be returned.",
                      "Runtime has loaded the deployment.",
                      "Deployment is not fully ready in the runtime.",
                      "Encountered an error with the deployment that requires intervention."
                    ]
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "id": "GoogleRpcStatus",
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The status code, which should be an enum value of google.rpc.Code."
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "any",
                              "description": "Properties of the object. Contains field @type with type URL."
                            }
                          },
                          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                        },
                        "message": {
                          "type": "string",
                          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                        }
                      },
                      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
                    },
                    "description": "Errors reported for this deployment. Populated only when state == ERROR. This field is not populated in List APIs."
                  },
                  "apiProxy": {
                    "type": "string",
                    "description": "API proxy."
                  },
                  "revision": {
                    "type": "string",
                    "description": "API proxy revision."
                  },
                  "instances": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1InstanceDeploymentStatus",
                      "type": "object",
                      "properties": {
                        "instance": {
                          "type": "string",
                          "description": "ID of the instance reporting the status."
                        },
                        "deployedRoutes": {
                          "type": "array",
                          "items": {
                            "id": "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute",
                            "type": "object",
                            "properties": {
                              "basepath": {
                                "type": "string",
                                "description": "Base path in the routing table."
                              },
                              "envgroup": {
                                "type": "string",
                                "description": "Environment group where this route is installed."
                              },
                              "percentage": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Percentage of ingress replicas reporting this route."
                              },
                              "environment": {
                                "type": "string",
                                "description": "Destination environment. This will be empty if the route is not yet reported."
                              }
                            },
                            "description": "Route deployed in the ingress routing table."
                          },
                          "description": "Current routes deployed in the ingress routing table. A route which is missing will appear in `missing_routes`."
                        },
                        "deployedRevisions": {
                          "type": "array",
                          "items": {
                            "id": "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision",
                            "type": "object",
                            "properties": {
                              "revision": {
                                "type": "string",
                                "description": "API proxy revision reported as deployed."
                              },
                              "percentage": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Percentage of MP replicas reporting this revision."
                              }
                            },
                            "description": "Revisions deployed in the MPs."
                          },
                          "description": "Revisions currently deployed in MPs."
                        }
                      },
                      "description": "The status of a deployment as reported by a single instance."
                    },
                    "description": "Status reported by each runtime instance. This field is not populated in List APIs."
                  },
                  "environment": {
                    "type": "string",
                    "description": "Environment."
                  },
                  "routeConflicts": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict",
                      "type": "object",
                      "properties": {
                        "description": {
                          "type": "string",
                          "description": "Human-readable description of this conflict."
                        },
                        "environmentGroup": {
                          "type": "string",
                          "description": "Name of the environment group in which this conflict exists."
                        },
                        "conflictingDeployment": {
                          "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment",
                          "type": "object",
                          "properties": {
                            "apiProxy": {
                              "type": "string",
                              "description": "Name of the deployed API proxy revision containing the base path."
                            },
                            "basepath": {
                              "type": "string",
                              "description": "Base path receiving traffic."
                            },
                            "revision": {
                              "type": "string",
                              "description": "Name of the deployed API proxy revision containing the base path."
                            },
                            "environment": {
                              "type": "string",
                              "description": "Name of the environment in which the proxy is deployed."
                            }
                          },
                          "description": "Existing base path/deployment causing the conflict."
                        }
                      },
                      "description": "Describes a routing conflict that may cause a deployment not to receive traffic at some base path."
                    },
                    "description": "Conflicts in the desired state routing configuration. The presence of conflicts does not cause the state to be `ERROR`, but it will mean that some of the deployment's base paths are not routed to its environment. If the conflicts change, the state will transition to `PROGRESSING` until the latest configuration is rolled out to all instances. This field is not populated in List APIs."
                  },
                  "deployStartTime": {
                    "type": "string",
                    "format": "int64",
                    "description": "Time the API proxy was marked `deployed` in the control plane in millisconds since epoch."
                  }
                }
              },
              "description": "List of deployments."
            }
          }
        }
      ]
  organizations.developers.apps.attributes:
    description: |-
      Updates attributes for a developer app. This API replaces the current attributes with those specified in the request.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers.apps/attributes
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1Attributes",
          "type": "object",
          "properties": {
            "attribute": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Attribute",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "API key of the attribute."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of the attribute."
                  }
                },
                "description": "Key-value pair to store extra metadata."
              },
              "description": "List of attributes."
            }
          }
        }
      ]
  organizations.developers.apps.attributes.delete:
    description: |-
      Deletes a developer app attribute.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers.apps.attributes/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1Attribute",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "API key of the attribute."
            },
            "value": {
              "type": "string",
              "description": "Value of the attribute."
            }
          },
          "description": "Key-value pair to store extra metadata."
        }
      ]
  organizations.developers.apps.attributes.get:
    description: |-
      Returns a developer app attribute.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers.apps.attributes/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1Attribute",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "API key of the attribute."
            },
            "value": {
              "type": "string",
              "description": "Value of the attribute."
            }
          },
          "description": "Key-value pair to store extra metadata."
        }
      ]
  organizations.developers.apps.attributes.list:
    description: |-
      Returns a list of all developer app attributes.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers.apps.attributes/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1Attributes",
          "type": "object",
          "properties": {
            "attribute": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Attribute",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "API key of the attribute."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of the attribute."
                  }
                },
                "description": "Key-value pair to store extra metadata."
              },
              "description": "List of attributes."
            }
          }
        }
      ]
  organizations.developers.apps.attributes.updateDeveloperAppAttribute:
    description: |-
      Updates a developer app attribute. **Note**: OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and API products) are cached for 180 seconds (current default). Any custom attributes associated with these entities are cached for at least 180 seconds after the entity is accessed at runtime. Therefore, an `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token in less than 180 seconds.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers.apps.attributes/updateDeveloperAppAttribute
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1Attribute",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "API key of the attribute."
            },
            "value": {
              "type": "string",
              "description": "Value of the attribute."
            }
          },
          "description": "Key-value pair to store extra metadata."
        }
      ]
  organizations.developers.apps.create:
    description: |-
      Creates an app associated with a developer. This API associates the developer app with the specified API product and auto-generates an API key for the app to use in calls to API proxies inside that API product. The `name` is the unique ID of the app that you can use in API calls. The `DisplayName` (set as an attribute) appears in the UI. If you don't set the `DisplayName` attribute, the `name` appears in the UI.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers.apps/create
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1DeveloperApp",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the developer app."
            },
            "appId": {
              "type": "string",
              "description": "ID of the developer app."
            },
            "scopes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Scopes to apply to the developer app. The specified scopes must already exist for the API product that you associate with the developer app."
            },
            "status": {
              "type": "string",
              "description": "Status of the credential. Valid values include `approved` or `revoked`."
            },
            "appFamily": {
              "type": "string",
              "description": "Developer app family."
            },
            "createdAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Time the developer app was created in milliseconds since epoch."
            },
            "attributes": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Attribute",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "API key of the attribute."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of the attribute."
                  }
                },
                "description": "Key-value pair to store extra metadata."
              },
              "description": "List of attributes for the developer app."
            },
            "apiProducts": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of API products associated with the developer app."
            },
            "callbackUrl": {
              "type": "string",
              "description": "Callback URL used by OAuth 2.0 authorization servers to communicate authorization codes back to developer apps."
            },
            "credentials": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Credential",
                "type": "object",
                "properties": {
                  "scopes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of scopes to apply to the app. Specified scopes must already exist on the API product that you associate with the app."
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the credential."
                  },
                  "issuedAt": {
                    "type": "string",
                    "format": "int64",
                    "description": "Time the credential was issued in milliseconds since epoch."
                  },
                  "expiresAt": {
                    "type": "string",
                    "format": "int64",
                    "description": "Time the credential will expire in milliseconds since epoch."
                  },
                  "attributes": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1Attribute",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "API key of the attribute."
                        },
                        "value": {
                          "type": "string",
                          "description": "Value of the attribute."
                        }
                      },
                      "description": "Key-value pair to store extra metadata."
                    },
                    "description": "List of attributes associated with this credential."
                  },
                  "apiProducts": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1ApiProductRef",
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "Status of the API product."
                        },
                        "apiproduct": {
                          "type": "string",
                          "description": "Name of the API product."
                        }
                      }
                    },
                    "description": "List of API products this credential can be used for."
                  },
                  "consumerKey": {
                    "type": "string",
                    "description": "Consumer key."
                  },
                  "consumerSecret": {
                    "type": "string",
                    "description": "Secret key."
                  }
                }
              },
              "readOnly": true,
              "description": "Output only. Set of credentials for the developer app consisting of the consumer key/secret pairs associated with the API products."
            },
            "developerId": {
              "type": "string",
              "description": "ID of the developer."
            },
            "keyExpiresIn": {
              "type": "string",
              "format": "int64",
              "description": "Expiration time, in milliseconds, for the consumer key that is generated for the developer app. If not set or left to the default value of `-1`, the API key never expires. The expiration time can't be updated after it is set."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Time the developer app was modified in milliseconds since epoch."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  organizations.developers.apps.delete:
    description: |-
      Deletes a developer app. **Note**: The delete operation is asynchronous. The developer app is deleted immediately, but its associated resources, such as app keys or access tokens, may take anywhere from a few seconds to a few minutes to be deleted.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers.apps/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.developers.apps.generateKeyPairOrUpdateDeveloperAppStatus:
    description: |-
      Manages access to a developer app by enabling you to: * Approve or revoke a developer app * Generate a new consumer key and secret for a developer app To approve or revoke a developer app, set the `action` query parameter to `approved` or `revoked`, respectively, and the `Content-Type` header to `application/octet-stream`. If a developer app is revoked, none of its API keys are valid for API calls even though the keys are still `approved`. If successful, the API call returns the following HTTP status code: `204 No Content` To generate a new consumer key and secret for a developer app, pass the new key/secret details. Rather than replace an existing key, this API generates a new key. In this case, multiple key pairs may be associated with a single developer app. Each key pair has an independent status (`approved` or `revoked`) and expiration time. Any approved, non-expired key can be used in an API call. For example, if you're using API key rotation, you can generate new keys with expiration times that overlap keys that are going to expire. You might also generate a new consumer key/secret if the security of the original key/secret is compromised. The `keyExpiresIn` property defines the expiration time for the API key in milliseconds. If you don't set this property or set it to `-1`, the API key never expires. **Notes**: * When generating a new key/secret, this API replaces the existing attributes, notes, and callback URLs with those specified in the request. Include or exclude any existing information that you want to retain or delete, respectively. * To migrate existing consumer keys and secrets to hybrid from another system, see the CreateDeveloperAppKey API.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers.apps/generateKeyPairOrUpdateDeveloperAppStatus
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1DeveloperApp",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the developer app."
            },
            "appId": {
              "type": "string",
              "description": "ID of the developer app."
            },
            "scopes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Scopes to apply to the developer app. The specified scopes must already exist for the API product that you associate with the developer app."
            },
            "status": {
              "type": "string",
              "description": "Status of the credential. Valid values include `approved` or `revoked`."
            },
            "appFamily": {
              "type": "string",
              "description": "Developer app family."
            },
            "createdAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Time the developer app was created in milliseconds since epoch."
            },
            "attributes": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Attribute",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "API key of the attribute."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of the attribute."
                  }
                },
                "description": "Key-value pair to store extra metadata."
              },
              "description": "List of attributes for the developer app."
            },
            "apiProducts": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of API products associated with the developer app."
            },
            "callbackUrl": {
              "type": "string",
              "description": "Callback URL used by OAuth 2.0 authorization servers to communicate authorization codes back to developer apps."
            },
            "credentials": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Credential",
                "type": "object",
                "properties": {
                  "scopes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of scopes to apply to the app. Specified scopes must already exist on the API product that you associate with the app."
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the credential."
                  },
                  "issuedAt": {
                    "type": "string",
                    "format": "int64",
                    "description": "Time the credential was issued in milliseconds since epoch."
                  },
                  "expiresAt": {
                    "type": "string",
                    "format": "int64",
                    "description": "Time the credential will expire in milliseconds since epoch."
                  },
                  "attributes": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1Attribute",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "API key of the attribute."
                        },
                        "value": {
                          "type": "string",
                          "description": "Value of the attribute."
                        }
                      },
                      "description": "Key-value pair to store extra metadata."
                    },
                    "description": "List of attributes associated with this credential."
                  },
                  "apiProducts": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1ApiProductRef",
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "Status of the API product."
                        },
                        "apiproduct": {
                          "type": "string",
                          "description": "Name of the API product."
                        }
                      }
                    },
                    "description": "List of API products this credential can be used for."
                  },
                  "consumerKey": {
                    "type": "string",
                    "description": "Consumer key."
                  },
                  "consumerSecret": {
                    "type": "string",
                    "description": "Secret key."
                  }
                }
              },
              "readOnly": true,
              "description": "Output only. Set of credentials for the developer app consisting of the consumer key/secret pairs associated with the API products."
            },
            "developerId": {
              "type": "string",
              "description": "ID of the developer."
            },
            "keyExpiresIn": {
              "type": "string",
              "format": "int64",
              "description": "Expiration time, in milliseconds, for the consumer key that is generated for the developer app. If not set or left to the default value of `-1`, the API key never expires. The expiration time can't be updated after it is set."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Time the developer app was modified in milliseconds since epoch."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  organizations.developers.apps.get:
    description: |-
      Returns the details for a developer app.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers.apps/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.developers.apps.keys.apiproducts.delete:
    description: |-
      Removes an API product from an app's consumer key. After the API product is removed, the app cannot access the API resources defined in that API product. **Note**: The consumer key is not removed, only its association with the API product.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers.apps.keys.apiproducts/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1DeveloperAppKey",
          "type": "object",
          "properties": {
            "scopes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Scopes to apply to the app. The specified scope names must already be defined for the API product that you associate with the app."
            },
            "status": {
              "type": "string",
              "description": "Status of the credential. Valid values include `approved` or `revoked`."
            },
            "issuedAt": {
              "type": "string",
              "format": "int64",
              "description": "Time the developer app was created in milliseconds since epoch."
            },
            "expiresAt": {
              "type": "string",
              "format": "int64",
              "description": "Time the developer app expires in milliseconds since epoch."
            },
            "attributes": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Attribute",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "API key of the attribute."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of the attribute."
                  }
                },
                "description": "Key-value pair to store extra metadata."
              },
              "description": "List of attributes associated with the credential."
            },
            "apiProducts": {
              "type": "array",
              "items": {
                "type": "any"
              },
              "description": "List of API products for which the credential can be used. **Note**: Do not specify the list of API products when creating a consumer key and secret for a developer app. Instead, use the UpdateDeveloperAppKey API to make the association after the consumer key and secret are created."
            },
            "consumerKey": {
              "type": "string",
              "description": "Consumer key."
            },
            "consumerSecret": {
              "type": "string",
              "description": "Secret key."
            },
            "expiresInSeconds": {
              "type": "string",
              "format": "int64",
              "description": "Input only. Expiration time, in seconds, for the consumer key. If not set or left to the default value of `-1`, the API key never expires. The expiration time can't be updated after it is set."
            }
          }
        }
      ]
  organizations.developers.apps.keys.apiproducts.updateDeveloperAppKeyApiProduct:
    description: |-
      Approve or revoke an app's consumer key. After a consumer key is approved, the app can use it to access APIs. A consumer key that is revoked or pending cannot be used to access an API. Any access tokens associated with a revoked consumer key will remain active. However, Apigee hybrid checks the status of the consumer key and if set to `revoked` will not allow access to the API.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers.apps.keys.apiproducts/updateDeveloperAppKeyApiProduct
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  organizations.developers.apps.keys.create:
    description: |-
      Creates a custom consumer key and secret for a developer app. This is particularly useful if you want to migrate existing consumer keys and secrets to Apigee hybrid from another system. Consumer keys and secrets can contain letters, numbers, underscores, and hyphens. No other special characters are allowed. To avoid service disruptions, a consumer key and secret should not exceed 2 KBs each. **Note**: When creating the consumer key and secret, an association to API products will not be made. Therefore, you should not specify the associated API products in your request. Instead, use the UpdateDeveloperAppKey API to make the association after the consumer key and secret are created. If a consumer key and secret already exist, you can keep them or delete them using the DeleteDeveloperAppKey API.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers.apps.keys/create
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1DeveloperAppKey",
          "type": "object",
          "properties": {
            "scopes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Scopes to apply to the app. The specified scope names must already be defined for the API product that you associate with the app."
            },
            "status": {
              "type": "string",
              "description": "Status of the credential. Valid values include `approved` or `revoked`."
            },
            "issuedAt": {
              "type": "string",
              "format": "int64",
              "description": "Time the developer app was created in milliseconds since epoch."
            },
            "expiresAt": {
              "type": "string",
              "format": "int64",
              "description": "Time the developer app expires in milliseconds since epoch."
            },
            "attributes": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Attribute",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "API key of the attribute."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of the attribute."
                  }
                },
                "description": "Key-value pair to store extra metadata."
              },
              "description": "List of attributes associated with the credential."
            },
            "apiProducts": {
              "type": "array",
              "items": {
                "type": "any"
              },
              "description": "List of API products for which the credential can be used. **Note**: Do not specify the list of API products when creating a consumer key and secret for a developer app. Instead, use the UpdateDeveloperAppKey API to make the association after the consumer key and secret are created."
            },
            "consumerKey": {
              "type": "string",
              "description": "Consumer key."
            },
            "consumerSecret": {
              "type": "string",
              "description": "Secret key."
            },
            "expiresInSeconds": {
              "type": "string",
              "format": "int64",
              "description": "Input only. Expiration time, in seconds, for the consumer key. If not set or left to the default value of `-1`, the API key never expires. The expiration time can't be updated after it is set."
            }
          }
        }
      ]
  organizations.developers.apps.keys.create.create:
    description: |-
      Creates a custom consumer key and secret for a developer app. This is particularly useful if you want to migrate existing consumer keys and secrets to Apigee hybrid from another system. Consumer keys and secrets can contain letters, numbers, underscores, and hyphens. No other special characters are allowed. To avoid service disruptions, a consumer key and secret should not exceed 2 KBs each. **Note**: When creating the consumer key and secret, an association to API products will not be made. Therefore, you should not specify the associated API products in your request. Instead, use the UpdateDeveloperAppKey API to make the association after the consumer key and secret are created. If a consumer key and secret already exist, you can keep them or delete them using the DeleteDeveloperAppKey API.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers.apps.keys.create/create
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1DeveloperAppKey",
          "type": "object",
          "properties": {
            "scopes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Scopes to apply to the app. The specified scope names must already be defined for the API product that you associate with the app."
            },
            "status": {
              "type": "string",
              "description": "Status of the credential. Valid values include `approved` or `revoked`."
            },
            "issuedAt": {
              "type": "string",
              "format": "int64",
              "description": "Time the developer app was created in milliseconds since epoch."
            },
            "expiresAt": {
              "type": "string",
              "format": "int64",
              "description": "Time the developer app expires in milliseconds since epoch."
            },
            "attributes": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Attribute",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "API key of the attribute."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of the attribute."
                  }
                },
                "description": "Key-value pair to store extra metadata."
              },
              "description": "List of attributes associated with the credential."
            },
            "apiProducts": {
              "type": "array",
              "items": {
                "type": "any"
              },
              "description": "List of API products for which the credential can be used. **Note**: Do not specify the list of API products when creating a consumer key and secret for a developer app. Instead, use the UpdateDeveloperAppKey API to make the association after the consumer key and secret are created."
            },
            "consumerKey": {
              "type": "string",
              "description": "Consumer key."
            },
            "consumerSecret": {
              "type": "string",
              "description": "Secret key."
            },
            "expiresInSeconds": {
              "type": "string",
              "format": "int64",
              "description": "Input only. Expiration time, in seconds, for the consumer key. If not set or left to the default value of `-1`, the API key never expires. The expiration time can't be updated after it is set."
            }
          }
        }
      ]
  organizations.developers.apps.keys.delete:
    description: |-
      Deletes an app's consumer key and removes all API products associated with the app. After the consumer key is deleted, it cannot be used to access any APIs. **Note**: After you delete a consumer key, you may want to: 1. Create a new consumer key and secret for the developer app using the CreateDeveloperAppKey API, and subsequently add an API product to the key using the UpdateDeveloperAppKey API. 2. Delete the developer app, if it is no longer required.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers.apps.keys/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1DeveloperAppKey",
          "type": "object",
          "properties": {
            "scopes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Scopes to apply to the app. The specified scope names must already be defined for the API product that you associate with the app."
            },
            "status": {
              "type": "string",
              "description": "Status of the credential. Valid values include `approved` or `revoked`."
            },
            "issuedAt": {
              "type": "string",
              "format": "int64",
              "description": "Time the developer app was created in milliseconds since epoch."
            },
            "expiresAt": {
              "type": "string",
              "format": "int64",
              "description": "Time the developer app expires in milliseconds since epoch."
            },
            "attributes": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Attribute",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "API key of the attribute."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of the attribute."
                  }
                },
                "description": "Key-value pair to store extra metadata."
              },
              "description": "List of attributes associated with the credential."
            },
            "apiProducts": {
              "type": "array",
              "items": {
                "type": "any"
              },
              "description": "List of API products for which the credential can be used. **Note**: Do not specify the list of API products when creating a consumer key and secret for a developer app. Instead, use the UpdateDeveloperAppKey API to make the association after the consumer key and secret are created."
            },
            "consumerKey": {
              "type": "string",
              "description": "Consumer key."
            },
            "consumerSecret": {
              "type": "string",
              "description": "Secret key."
            },
            "expiresInSeconds": {
              "type": "string",
              "format": "int64",
              "description": "Input only. Expiration time, in seconds, for the consumer key. If not set or left to the default value of `-1`, the API key never expires. The expiration time can't be updated after it is set."
            }
          }
        }
      ]
  organizations.developers.apps.keys.get:
    description: |-
      Returns details for a consumer key for a developer app, including the key and secret value, associated API products, and other information.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers.apps.keys/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1DeveloperAppKey",
          "type": "object",
          "properties": {
            "scopes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Scopes to apply to the app. The specified scope names must already be defined for the API product that you associate with the app."
            },
            "status": {
              "type": "string",
              "description": "Status of the credential. Valid values include `approved` or `revoked`."
            },
            "issuedAt": {
              "type": "string",
              "format": "int64",
              "description": "Time the developer app was created in milliseconds since epoch."
            },
            "expiresAt": {
              "type": "string",
              "format": "int64",
              "description": "Time the developer app expires in milliseconds since epoch."
            },
            "attributes": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Attribute",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "API key of the attribute."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of the attribute."
                  }
                },
                "description": "Key-value pair to store extra metadata."
              },
              "description": "List of attributes associated with the credential."
            },
            "apiProducts": {
              "type": "array",
              "items": {
                "type": "any"
              },
              "description": "List of API products for which the credential can be used. **Note**: Do not specify the list of API products when creating a consumer key and secret for a developer app. Instead, use the UpdateDeveloperAppKey API to make the association after the consumer key and secret are created."
            },
            "consumerKey": {
              "type": "string",
              "description": "Consumer key."
            },
            "consumerSecret": {
              "type": "string",
              "description": "Secret key."
            },
            "expiresInSeconds": {
              "type": "string",
              "format": "int64",
              "description": "Input only. Expiration time, in seconds, for the consumer key. If not set or left to the default value of `-1`, the API key never expires. The expiration time can't be updated after it is set."
            }
          }
        }
      ]
  organizations.developers.apps.keys.replaceDeveloperAppKey:
    description: |-
      Updates the scope of an app. This API replaces the existing scopes with those specified in the request. Include or exclude any existing scopes that you want to retain or delete, respectively. The specified scopes must already be defined for the API products associated with the app. This API sets the `scopes` element under the `apiProducts` element in the attributes of the app.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers.apps.keys/replaceDeveloperAppKey
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1DeveloperAppKey",
          "type": "object",
          "properties": {
            "scopes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Scopes to apply to the app. The specified scope names must already be defined for the API product that you associate with the app."
            },
            "status": {
              "type": "string",
              "description": "Status of the credential. Valid values include `approved` or `revoked`."
            },
            "issuedAt": {
              "type": "string",
              "format": "int64",
              "description": "Time the developer app was created in milliseconds since epoch."
            },
            "expiresAt": {
              "type": "string",
              "format": "int64",
              "description": "Time the developer app expires in milliseconds since epoch."
            },
            "attributes": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Attribute",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "API key of the attribute."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of the attribute."
                  }
                },
                "description": "Key-value pair to store extra metadata."
              },
              "description": "List of attributes associated with the credential."
            },
            "apiProducts": {
              "type": "array",
              "items": {
                "type": "any"
              },
              "description": "List of API products for which the credential can be used. **Note**: Do not specify the list of API products when creating a consumer key and secret for a developer app. Instead, use the UpdateDeveloperAppKey API to make the association after the consumer key and secret are created."
            },
            "consumerKey": {
              "type": "string",
              "description": "Consumer key."
            },
            "consumerSecret": {
              "type": "string",
              "description": "Secret key."
            },
            "expiresInSeconds": {
              "type": "string",
              "format": "int64",
              "description": "Input only. Expiration time, in seconds, for the consumer key. If not set or left to the default value of `-1`, the API key never expires. The expiration time can't be updated after it is set."
            }
          }
        }
      ]
  organizations.developers.apps.keys.updateDeveloperAppKey:
    description: |-
      Adds an API product to a developer app key, enabling the app that holds the key to access the API resources bundled in the API product. In addition, you can add attributes to a developer app key. This API replaces the existing attributes with those specified in the request. Include or exclude any existing attributes that you want to retain or delete, respectively. You can use the same key to access all API products associated with the app.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers.apps.keys/updateDeveloperAppKey
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1DeveloperAppKey",
          "type": "object",
          "properties": {
            "scopes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Scopes to apply to the app. The specified scope names must already be defined for the API product that you associate with the app."
            },
            "status": {
              "type": "string",
              "description": "Status of the credential. Valid values include `approved` or `revoked`."
            },
            "issuedAt": {
              "type": "string",
              "format": "int64",
              "description": "Time the developer app was created in milliseconds since epoch."
            },
            "expiresAt": {
              "type": "string",
              "format": "int64",
              "description": "Time the developer app expires in milliseconds since epoch."
            },
            "attributes": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Attribute",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "API key of the attribute."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of the attribute."
                  }
                },
                "description": "Key-value pair to store extra metadata."
              },
              "description": "List of attributes associated with the credential."
            },
            "apiProducts": {
              "type": "array",
              "items": {
                "type": "any"
              },
              "description": "List of API products for which the credential can be used. **Note**: Do not specify the list of API products when creating a consumer key and secret for a developer app. Instead, use the UpdateDeveloperAppKey API to make the association after the consumer key and secret are created."
            },
            "consumerKey": {
              "type": "string",
              "description": "Consumer key."
            },
            "consumerSecret": {
              "type": "string",
              "description": "Secret key."
            },
            "expiresInSeconds": {
              "type": "string",
              "format": "int64",
              "description": "Input only. Expiration time, in seconds, for the consumer key. If not set or left to the default value of `-1`, the API key never expires. The expiration time can't be updated after it is set."
            }
          }
        }
      ]
  organizations.developers.apps.list:
    description: |-
      Lists all apps created by a developer in an Apigee organization. Optionally, you can request an expanded view of the developer apps. A maximum of 100 developer apps are returned per API call. You can paginate the list of deveoper apps returned using the `startKey` and `count` query parameters.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers.apps/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ListDeveloperAppsResponse",
          "type": "object",
          "properties": {
            "app": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1DeveloperApp",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the developer app."
                  },
                  "appId": {
                    "type": "string",
                    "description": "ID of the developer app."
                  },
                  "scopes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Scopes to apply to the developer app. The specified scopes must already exist for the API product that you associate with the developer app."
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the credential. Valid values include `approved` or `revoked`."
                  },
                  "appFamily": {
                    "type": "string",
                    "description": "Developer app family."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "int64",
                    "readOnly": true,
                    "description": "Output only. Time the developer app was created in milliseconds since epoch."
                  },
                  "attributes": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1Attribute",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "API key of the attribute."
                        },
                        "value": {
                          "type": "string",
                          "description": "Value of the attribute."
                        }
                      },
                      "description": "Key-value pair to store extra metadata."
                    },
                    "description": "List of attributes for the developer app."
                  },
                  "apiProducts": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of API products associated with the developer app."
                  },
                  "callbackUrl": {
                    "type": "string",
                    "description": "Callback URL used by OAuth 2.0 authorization servers to communicate authorization codes back to developer apps."
                  },
                  "credentials": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1Credential",
                      "type": "object",
                      "properties": {
                        "scopes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of scopes to apply to the app. Specified scopes must already exist on the API product that you associate with the app."
                        },
                        "status": {
                          "type": "string",
                          "description": "Status of the credential."
                        },
                        "issuedAt": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the credential was issued in milliseconds since epoch."
                        },
                        "expiresAt": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the credential will expire in milliseconds since epoch."
                        },
                        "attributes": {
                          "type": "array",
                          "items": {
                            "id": "GoogleCloudApigeeV1Attribute",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "API key of the attribute."
                              },
                              "value": {
                                "type": "string",
                                "description": "Value of the attribute."
                              }
                            },
                            "description": "Key-value pair to store extra metadata."
                          },
                          "description": "List of attributes associated with this credential."
                        },
                        "apiProducts": {
                          "type": "array",
                          "items": {
                            "id": "GoogleCloudApigeeV1ApiProductRef",
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "description": "Status of the API product."
                              },
                              "apiproduct": {
                                "type": "string",
                                "description": "Name of the API product."
                              }
                            }
                          },
                          "description": "List of API products this credential can be used for."
                        },
                        "consumerKey": {
                          "type": "string",
                          "description": "Consumer key."
                        },
                        "consumerSecret": {
                          "type": "string",
                          "description": "Secret key."
                        }
                      }
                    },
                    "readOnly": true,
                    "description": "Output only. Set of credentials for the developer app consisting of the consumer key/secret pairs associated with the API products."
                  },
                  "developerId": {
                    "type": "string",
                    "description": "ID of the developer."
                  },
                  "keyExpiresIn": {
                    "type": "string",
                    "format": "int64",
                    "description": "Expiration time, in milliseconds, for the consumer key that is generated for the developer app. If not set or left to the default value of `-1`, the API key never expires. The expiration time can't be updated after it is set."
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "int64",
                    "readOnly": true,
                    "description": "Output only. Time the developer app was modified in milliseconds since epoch."
                  }
                }
              },
              "description": "List of developer apps and their credentials."
            }
          }
        }
      ]
  organizations.developers.apps.update:
    description: |-
      Updates the details for a developer app. In addition, you can add an API product to a developer app and automatically generate an API key for the app to use when calling APIs in the API product. If you want to use an existing API key for the API product, add the API product to the API key using the UpdateDeveloperAppKey API. Using this API, you cannot update the following: * App name as it is the primary key used to identify the app and cannot be changed. * Scopes associated with the app. Instead, use the ReplaceDeveloperAppKey API. This API replaces the existing attributes with those specified in the request. Include or exclude any existing attributes that you want to retain or delete, respectively.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers.apps/update
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1DeveloperApp",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the developer app."
            },
            "appId": {
              "type": "string",
              "description": "ID of the developer app."
            },
            "scopes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Scopes to apply to the developer app. The specified scopes must already exist for the API product that you associate with the developer app."
            },
            "status": {
              "type": "string",
              "description": "Status of the credential. Valid values include `approved` or `revoked`."
            },
            "appFamily": {
              "type": "string",
              "description": "Developer app family."
            },
            "createdAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Time the developer app was created in milliseconds since epoch."
            },
            "attributes": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Attribute",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "API key of the attribute."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of the attribute."
                  }
                },
                "description": "Key-value pair to store extra metadata."
              },
              "description": "List of attributes for the developer app."
            },
            "apiProducts": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of API products associated with the developer app."
            },
            "callbackUrl": {
              "type": "string",
              "description": "Callback URL used by OAuth 2.0 authorization servers to communicate authorization codes back to developer apps."
            },
            "credentials": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Credential",
                "type": "object",
                "properties": {
                  "scopes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of scopes to apply to the app. Specified scopes must already exist on the API product that you associate with the app."
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the credential."
                  },
                  "issuedAt": {
                    "type": "string",
                    "format": "int64",
                    "description": "Time the credential was issued in milliseconds since epoch."
                  },
                  "expiresAt": {
                    "type": "string",
                    "format": "int64",
                    "description": "Time the credential will expire in milliseconds since epoch."
                  },
                  "attributes": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1Attribute",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "API key of the attribute."
                        },
                        "value": {
                          "type": "string",
                          "description": "Value of the attribute."
                        }
                      },
                      "description": "Key-value pair to store extra metadata."
                    },
                    "description": "List of attributes associated with this credential."
                  },
                  "apiProducts": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1ApiProductRef",
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "Status of the API product."
                        },
                        "apiproduct": {
                          "type": "string",
                          "description": "Name of the API product."
                        }
                      }
                    },
                    "description": "List of API products this credential can be used for."
                  },
                  "consumerKey": {
                    "type": "string",
                    "description": "Consumer key."
                  },
                  "consumerSecret": {
                    "type": "string",
                    "description": "Secret key."
                  }
                }
              },
              "readOnly": true,
              "description": "Output only. Set of credentials for the developer app consisting of the consumer key/secret pairs associated with the API products."
            },
            "developerId": {
              "type": "string",
              "description": "ID of the developer."
            },
            "keyExpiresIn": {
              "type": "string",
              "format": "int64",
              "description": "Expiration time, in milliseconds, for the consumer key that is generated for the developer app. If not set or left to the default value of `-1`, the API key never expires. The expiration time can't be updated after it is set."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Time the developer app was modified in milliseconds since epoch."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  organizations.developers.attributes:
    description: |-
      Updates developer attributes. This API replaces the existing attributes with those specified in the request. Add new attributes, and include or exclude any existing attributes that you want to retain or remove, respectively. The custom attribute limit is 18. **Note**: OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and API products) are cached for 180 seconds (default). Any custom attributes associated with these entities are cached for at least 180 seconds after the entity is accessed at runtime. Therefore, an `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token in less than 180 seconds.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers/attributes
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1Attributes",
          "type": "object",
          "properties": {
            "attribute": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Attribute",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "API key of the attribute."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of the attribute."
                  }
                },
                "description": "Key-value pair to store extra metadata."
              },
              "description": "List of attributes."
            }
          }
        }
      ]
  organizations.developers.attributes.delete:
    description: |-
      Deletes a developer attribute.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers.attributes/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1Attribute",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "API key of the attribute."
            },
            "value": {
              "type": "string",
              "description": "Value of the attribute."
            }
          },
          "description": "Key-value pair to store extra metadata."
        }
      ]
  organizations.developers.attributes.get:
    description: |-
      Returns the value of the specified developer attribute.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers.attributes/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1Attribute",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "API key of the attribute."
            },
            "value": {
              "type": "string",
              "description": "Value of the attribute."
            }
          },
          "description": "Key-value pair to store extra metadata."
        }
      ]
  organizations.developers.attributes.list:
    description: |-
      Returns a list of all developer attributes.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers.attributes/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1Attributes",
          "type": "object",
          "properties": {
            "attribute": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Attribute",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "API key of the attribute."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of the attribute."
                  }
                },
                "description": "Key-value pair to store extra metadata."
              },
              "description": "List of attributes."
            }
          }
        }
      ]
  organizations.developers.attributes.updateDeveloperAttribute:
    description: |-
      Updates a developer attribute. **Note**: OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and API products) are cached for 180 seconds (default). Any custom attributes associated with these entities are cached for at least 180 seconds after the entity is accessed at runtime. Therefore, an `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token in less than 180 seconds.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers.attributes/updateDeveloperAttribute
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1Attribute",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "API key of the attribute."
            },
            "value": {
              "type": "string",
              "description": "Value of the attribute."
            }
          },
          "description": "Key-value pair to store extra metadata."
        }
      ]
  organizations.developers.create:
    description: |-
      Creates a developer. Once created, the developer can register an app and obtain an API key. At creation time, a developer is set as `active`. To change the developer status, use the SetDeveloperStatus API.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers/create
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1Developer",
          "type": "object",
          "properties": {
            "apps": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of apps associated with the developer."
            },
            "email": {
              "type": "string",
              "description": "Required. Email address of the developer. This value is used to uniquely identify the developer in Apigee hybrid. Note that the email address has to be in lowercase only."
            },
            "status": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Status of the developer. Valid values are `active` and `inactive`."
            },
            "lastName": {
              "type": "string",
              "description": "Required. Last name of the developer."
            },
            "userName": {
              "type": "string",
              "description": "Required. User name of the developer. Not used by Apigee hybrid."
            },
            "appFamily": {
              "type": "string",
              "description": "Developer app family."
            },
            "companies": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of companies associated with the developer."
            },
            "createdAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Time at which the developer was created in milliseconds since epoch."
            },
            "firstName": {
              "type": "string",
              "description": "Required. First name of the developer."
            },
            "accessType": {
              "type": "string",
              "description": "Access type."
            },
            "attributes": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Attribute",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "API key of the attribute."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of the attribute."
                  }
                },
                "description": "Key-value pair to store extra metadata."
              },
              "description": "Optional. Developer attributes (name/value pairs). The custom attribute limit is 18."
            },
            "developerId": {
              "type": "string",
              "description": "ID of the developer. **Note**: IDs are generated internally by Apigee and are not guaranteed to stay the same over time."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Time at which the developer was last modified in milliseconds since epoch."
            },
            "organizationName": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Name of the Apigee organization in which the developer resides."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  organizations.developers.delete:
    description: |-
      Deletes a developer. All apps and API keys associated with the developer are also removed. **Warning**: This API will permanently delete the developer and related artifacts. To avoid permanently deleting developers and their artifacts, set the developer status to `inactive` using the SetDeveloperStatus API. **Note**: The delete operation is asynchronous. The developer app is deleted immediately, but its associated resources, such as apps and API keys, may take anywhere from a few seconds to a few minutes to be deleted.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.developers.get:
    description: |-
      Returns the developer details, including the developer's name, email address, apps, and other information. **Note**: The response includes only the first 100 developer apps.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.developers.list:
    description: |-
      Lists all developers in an organization by email address. By default, the response does not include company developers. Set the `includeCompany` query parameter to `true` to include company developers. **Note**: A maximum of 1000 developers are returned in the response. You paginate the list of developers returned using the `startKey` and `count` query parameters.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ListOfDevelopersResponse",
          "type": "object",
          "properties": {
            "developer": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Developer",
                "type": "object",
                "properties": {
                  "apps": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of apps associated with the developer."
                  },
                  "email": {
                    "type": "string",
                    "description": "Required. Email address of the developer. This value is used to uniquely identify the developer in Apigee hybrid. Note that the email address has to be in lowercase only."
                  },
                  "status": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Status of the developer. Valid values are `active` and `inactive`."
                  },
                  "lastName": {
                    "type": "string",
                    "description": "Required. Last name of the developer."
                  },
                  "userName": {
                    "type": "string",
                    "description": "Required. User name of the developer. Not used by Apigee hybrid."
                  },
                  "appFamily": {
                    "type": "string",
                    "description": "Developer app family."
                  },
                  "companies": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of companies associated with the developer."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "int64",
                    "readOnly": true,
                    "description": "Output only. Time at which the developer was created in milliseconds since epoch."
                  },
                  "firstName": {
                    "type": "string",
                    "description": "Required. First name of the developer."
                  },
                  "accessType": {
                    "type": "string",
                    "description": "Access type."
                  },
                  "attributes": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1Attribute",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "API key of the attribute."
                        },
                        "value": {
                          "type": "string",
                          "description": "Value of the attribute."
                        }
                      },
                      "description": "Key-value pair to store extra metadata."
                    },
                    "description": "Optional. Developer attributes (name/value pairs). The custom attribute limit is 18."
                  },
                  "developerId": {
                    "type": "string",
                    "description": "ID of the developer. **Note**: IDs are generated internally by Apigee and are not guaranteed to stay the same over time."
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "int64",
                    "readOnly": true,
                    "description": "Output only. Time at which the developer was last modified in milliseconds since epoch."
                  },
                  "organizationName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Name of the Apigee organization in which the developer resides."
                  }
                }
              },
              "description": "List of developers."
            }
          }
        }
      ]
  organizations.developers.setDeveloperStatus:
    description: |-
      Sets the status of a developer. Valid values are `active` or `inactive`. A developer is `active` by default. If you set a developer's status to `inactive`, the API keys assigned to the developer apps are no longer valid even though the API keys are set to `approved`. Inactive developers can still sign in to the developer portal and create apps; however, any new API keys generated during app creation won't work. If successful, the API call returns the following HTTP status code: `204 No Content`
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers/setDeveloperStatus
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  organizations.developers.subscriptions.create:
    description: |-
      Creates a subscription to an API product. 
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers.subscriptions/create
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1DeveloperSubscription",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Name of the API product subscription."
            },
            "endTime": {
              "type": "string",
              "format": "int64",
              "description": "Time when the API product subscription ends in milliseconds since epoch."
            },
            "createdAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Time when the API product subscription was created in milliseconds since epoch."
            },
            "startTime": {
              "type": "string",
              "format": "int64",
              "description": "Time when the API product subscription starts in milliseconds since epoch."
            },
            "apiproduct": {
              "type": "string",
              "description": "Name of the API product for which the developer is purchasing a subscription."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Time when the API product subscription was last modified in milliseconds since epoch."
            }
          },
          "description": "Structure of a DeveloperSubscription."
        }
      ]
      outputs: [
        {}
      ]
  organizations.developers.subscriptions.expire:
    description: |-
      Expires an API product subscription immediately.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers.subscriptions/expire
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1ExpireDeveloperSubscriptionRequest",
          "type": "object",
          "properties": {},
          "description": "Request for ExpireDeveloperSubscription."
        }
      ]
      outputs: [
        {}
      ]
  organizations.developers.subscriptions.get:
    description: |-
      Gets details for an API product subscription.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers.subscriptions/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.developers.subscriptions.list:
    description: |-
      Lists all API product subscriptions for a developer.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers.subscriptions/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ListDeveloperSubscriptionsResponse",
          "type": "object",
          "properties": {
            "nextStartKey": {
              "type": "string",
              "description": "Value that can be sent as `startKey` to retrieve the next page of content. If this field is omitted, there are no subsequent pages."
            },
            "developerSubscriptions": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1DeveloperSubscription",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Name of the API product subscription."
                  },
                  "endTime": {
                    "type": "string",
                    "format": "int64",
                    "description": "Time when the API product subscription ends in milliseconds since epoch."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "int64",
                    "readOnly": true,
                    "description": "Output only. Time when the API product subscription was created in milliseconds since epoch."
                  },
                  "startTime": {
                    "type": "string",
                    "format": "int64",
                    "description": "Time when the API product subscription starts in milliseconds since epoch."
                  },
                  "apiproduct": {
                    "type": "string",
                    "description": "Name of the API product for which the developer is purchasing a subscription."
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "int64",
                    "readOnly": true,
                    "description": "Output only. Time when the API product subscription was last modified in milliseconds since epoch."
                  }
                },
                "description": "Structure of a DeveloperSubscription."
              },
              "description": "List of all subscriptions."
            }
          },
          "description": "Response for ListDeveloperSubscriptions."
        }
      ]
  organizations.developers.update:
    description: |-
      Updates a developer. This API replaces the existing developer details with those specified in the request. Include or exclude any existing details that you want to retain or delete, respectively. The custom attribute limit is 18. **Note**: OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and API products) are cached for 180 seconds (current default). Any custom attributes associated with these entities are cached for at least 180 seconds after the entity is accessed at runtime. Therefore, an `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token in less than 180 seconds.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.developers/update
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1Developer",
          "type": "object",
          "properties": {
            "apps": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of apps associated with the developer."
            },
            "email": {
              "type": "string",
              "description": "Required. Email address of the developer. This value is used to uniquely identify the developer in Apigee hybrid. Note that the email address has to be in lowercase only."
            },
            "status": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Status of the developer. Valid values are `active` and `inactive`."
            },
            "lastName": {
              "type": "string",
              "description": "Required. Last name of the developer."
            },
            "userName": {
              "type": "string",
              "description": "Required. User name of the developer. Not used by Apigee hybrid."
            },
            "appFamily": {
              "type": "string",
              "description": "Developer app family."
            },
            "companies": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of companies associated with the developer."
            },
            "createdAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Time at which the developer was created in milliseconds since epoch."
            },
            "firstName": {
              "type": "string",
              "description": "Required. First name of the developer."
            },
            "accessType": {
              "type": "string",
              "description": "Access type."
            },
            "attributes": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Attribute",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "API key of the attribute."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of the attribute."
                  }
                },
                "description": "Key-value pair to store extra metadata."
              },
              "description": "Optional. Developer attributes (name/value pairs). The custom attribute limit is 18."
            },
            "developerId": {
              "type": "string",
              "description": "ID of the developer. **Note**: IDs are generated internally by Apigee and are not guaranteed to stay the same over time."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Time at which the developer was last modified in milliseconds since epoch."
            },
            "organizationName": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Name of the Apigee organization in which the developer resides."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  organizations.envgroups.attachments.create:
    description: |-
      Creates a new attachment of an environment to an environment group.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.envgroups.attachments/create
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1EnvironmentGroupAttachment",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "ID of the environment group attachment."
            },
            "createdAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. The time at which the environment group attachment was created as milliseconds since epoch."
            },
            "environment": {
              "type": "string",
              "description": "Required. ID of the attached environment."
            }
          },
          "description": "EnvironmentGroupAttachment is a resource which defines an attachment of an environment to an environment group."
        }
      ]
      outputs: [
        {
          "id": "GoogleLongrunningOperation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "GoogleRpcStatus",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  organizations.envgroups.attachments.delete:
    description: |-
      Deletes an environment group attachment.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.envgroups.attachments/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleLongrunningOperation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "GoogleRpcStatus",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  organizations.envgroups.attachments.get:
    description: |-
      Gets an environment group attachment.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.envgroups.attachments/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.envgroups.attachments.list:
    description: |-
      Lists all attachments of an environment group.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.envgroups.attachments/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ListEnvironmentGroupAttachmentsResponse",
          "type": "object",
          "properties": {
            "nextPageToken": {
              "type": "string",
              "description": "Page token that you can include in a ListEnvironmentGroupAttachments request to retrieve the next page. If omitted, no subsequent pages exist."
            },
            "environmentGroupAttachments": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1EnvironmentGroupAttachment",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "ID of the environment group attachment."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "int64",
                    "readOnly": true,
                    "description": "Output only. The time at which the environment group attachment was created as milliseconds since epoch."
                  },
                  "environment": {
                    "type": "string",
                    "description": "Required. ID of the attached environment."
                  }
                },
                "description": "EnvironmentGroupAttachment is a resource which defines an attachment of an environment to an environment group."
              },
              "description": "EnvironmentGroupAttachments for the specified environment group."
            }
          },
          "description": "Response for ListEnvironmentGroupAttachments."
        }
      ]
  organizations.envgroups.create:
    description: |-
      Creates a new environment group.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.envgroups/create
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1EnvironmentGroup",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "ID of the environment group."
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "CREATING",
                "ACTIVE",
                "DELETING"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. State of the environment group. Values other than ACTIVE means the resource is not ready to use.",
              "enumDescriptions": [
                "Resource is in an unspecified state.",
                "Resource is being created.",
                "Resource is provisioned and ready to use.",
                "The resource is being deleted."
              ]
            },
            "createdAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. The time at which the environment group was created as milliseconds since epoch."
            },
            "hostnames": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Required. Host names for this environment group."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. The time at which the environment group was last updated as milliseconds since epoch."
            }
          },
          "description": "EnvironmentGroup configuration. An environment group is used to group one or more Apigee environments under a single host name."
        }
      ]
      outputs: [
        {
          "id": "GoogleLongrunningOperation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "GoogleRpcStatus",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  organizations.envgroups.delete:
    description: |-
      Deletes an environment group.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.envgroups/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleLongrunningOperation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "GoogleRpcStatus",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  organizations.envgroups.get:
    description: |-
      Gets an environment group.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.envgroups/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.envgroups.list:
    description: |-
      Lists all environment groups.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.envgroups/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ListEnvironmentGroupsResponse",
          "type": "object",
          "properties": {
            "nextPageToken": {
              "type": "string",
              "description": "Page token that you can include in a ListEnvironmentGroups request to retrieve the next page. If omitted, no subsequent pages exist."
            },
            "environmentGroups": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1EnvironmentGroup",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "ID of the environment group."
                  },
                  "state": {
                    "enum": [
                      "STATE_UNSPECIFIED",
                      "CREATING",
                      "ACTIVE",
                      "DELETING"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. State of the environment group. Values other than ACTIVE means the resource is not ready to use.",
                    "enumDescriptions": [
                      "Resource is in an unspecified state.",
                      "Resource is being created.",
                      "Resource is provisioned and ready to use.",
                      "The resource is being deleted."
                    ]
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "int64",
                    "readOnly": true,
                    "description": "Output only. The time at which the environment group was created as milliseconds since epoch."
                  },
                  "hostnames": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Required. Host names for this environment group."
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "int64",
                    "readOnly": true,
                    "description": "Output only. The time at which the environment group was last updated as milliseconds since epoch."
                  }
                },
                "description": "EnvironmentGroup configuration. An environment group is used to group one or more Apigee environments under a single host name."
              },
              "description": "EnvironmentGroups in the specified organization."
            }
          },
          "description": "Response for ListEnvironmentGroups."
        }
      ]
  organizations.envgroups.patch:
    description: |-
      Updates an environment group.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.envgroups/patch
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1EnvironmentGroup",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "ID of the environment group."
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "CREATING",
                "ACTIVE",
                "DELETING"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. State of the environment group. Values other than ACTIVE means the resource is not ready to use.",
              "enumDescriptions": [
                "Resource is in an unspecified state.",
                "Resource is being created.",
                "Resource is provisioned and ready to use.",
                "The resource is being deleted."
              ]
            },
            "createdAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. The time at which the environment group was created as milliseconds since epoch."
            },
            "hostnames": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Required. Host names for this environment group."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. The time at which the environment group was last updated as milliseconds since epoch."
            }
          },
          "description": "EnvironmentGroup configuration. An environment group is used to group one or more Apigee environments under a single host name."
        }
      ]
      outputs: [
        {
          "id": "GoogleLongrunningOperation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "GoogleRpcStatus",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  organizations.environments.analytics.admin.getSchemav2:
    description: |-
      Gets a list of metrics and dimensions that can be used to create analytics queries and reports. Each schema element contains the name of the field, its associated type, and a flag indicating whether it is a standard or custom field.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.analytics.admin/getSchemav2
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1Schema",
          "type": "object",
          "properties": {
            "meta": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Additional metadata associated with schema. This is a legacy field and usually consists of an empty array of strings."
            },
            "metrics": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1SchemaSchemaElement",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the field."
                  },
                  "properties": {
                    "id": "GoogleCloudApigeeV1SchemaSchemaProperty",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Data type of the field."
                      },
                      "custom": {
                        "type": "string",
                        "description": "Flag that specifies whether the field is standard in the dataset or a custom field created by the customer. `true` indicates that it is a custom field."
                      },
                      "createTime": {
                        "type": "string",
                        "description": "Time the field was created in RFC3339 string form. For example: `2016-02-26T10:23:09.592Z`."
                      }
                    },
                    "description": "Properties for the schema field. For example: { \"createTime\": \"2016-02-26T10:23:09.592Z\", \"custom\": \"false\", \"type\": \"string\" }"
                  }
                },
                "description": "Message type for the schema element"
              },
              "description": "List of schema fields grouped as dimensions that can be used with an aggregate function such as `sum`, `avg`, `min`, and `max`."
            },
            "dimensions": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1SchemaSchemaElement",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the field."
                  },
                  "properties": {
                    "id": "GoogleCloudApigeeV1SchemaSchemaProperty",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Data type of the field."
                      },
                      "custom": {
                        "type": "string",
                        "description": "Flag that specifies whether the field is standard in the dataset or a custom field created by the customer. `true` indicates that it is a custom field."
                      },
                      "createTime": {
                        "type": "string",
                        "description": "Time the field was created in RFC3339 string form. For example: `2016-02-26T10:23:09.592Z`."
                      }
                    },
                    "description": "Properties for the schema field. For example: { \"createTime\": \"2016-02-26T10:23:09.592Z\", \"custom\": \"false\", \"type\": \"string\" }"
                  }
                },
                "description": "Message type for the schema element"
              },
              "description": "List of schema fields grouped as dimensions."
            }
          },
          "description": "Response for Schema call"
        }
      ]
  organizations.environments.analytics.exports.create:
    description: |-
      Submit a data export job to be processed in the background. If the request is successful, the API returns a 201 status, a URI that can be used to retrieve the status of the export job, and the `state` value of "enqueued".
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.analytics.exports/create
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1ExportRequest",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Required. Display name of the export job."
            },
            "dateRange": {
              "id": "GoogleCloudApigeeV1DateRange",
              "type": "object",
              "properties": {
                "end": {
                  "type": "string",
                  "description": "Required. End date (exclusive) of the data to export in the format `yyyy-mm-dd`. The date range ends at 00:00:00 UTC on the end date- which will not be in the output."
                },
                "start": {
                  "type": "string",
                  "description": "Required. Start date of the data to export in the format `yyyy-mm-dd`. The date range begins at 00:00:00 UTC on the start date."
                }
              },
              "description": "Required. Date range of the data to export."
            },
            "description": {
              "type": "string",
              "description": "Optional. Description of the export job."
            },
            "csvDelimiter": {
              "type": "string",
              "description": "Optional. Delimiter used in the CSV file, if `outputFormat` is set to `csv`. Defaults to the `,` (comma) character. Supported delimiter characters include comma (`,`), pipe (`|`), and tab (`\\t`)."
            },
            "outputFormat": {
              "type": "string",
              "description": "Optional. Output format of the export. Valid values include: `csv` or `json`. Defaults to `json`. Note: Configure the delimiter for CSV output using the `csvDelimiter` property."
            },
            "datastoreName": {
              "type": "string",
              "description": "Required. Name of the preconfigured datastore."
            }
          },
          "description": "Request body for [CreateExportRequest]"
        }
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1Export",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Display name of the export job."
            },
            "self": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Self link of the export job. A URI that can be used to retrieve the status of an export job. Example: `/organizations/myorg/environments/myenv/analytics/exports/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd`"
            },
            "error": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Error is set when export fails"
            },
            "state": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Status of the export job. Valid values include `enqueued`, `running`, `completed`, and `failed`."
            },
            "created": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Time the export job was created."
            },
            "updated": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Time the export job was last updated."
            },
            "description": {
              "type": "string",
              "description": "Description of the export job."
            },
            "datastoreName": {
              "type": "string",
              "description": "Name of the datastore that is the destination of the export job [datastore]"
            },
            "executionTime": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Execution time for this export job. If the job is still in progress, it will be set to the amount of time that has elapsed since`created`, in seconds. Else, it will set to (`updated` - `created`), in seconds."
            }
          },
          "description": "Details of an export job."
        }
      ]
  organizations.environments.analytics.exports.get:
    description: |-
      Gets the details and status of an analytics export job. If the export job is still in progress, its `state` is set to "running". After the export job has completed successfully, its `state` is set to "completed". If the export job fails, its `state` is set to `failed`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.analytics.exports/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1Export",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Display name of the export job."
            },
            "self": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Self link of the export job. A URI that can be used to retrieve the status of an export job. Example: `/organizations/myorg/environments/myenv/analytics/exports/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd`"
            },
            "error": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Error is set when export fails"
            },
            "state": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Status of the export job. Valid values include `enqueued`, `running`, `completed`, and `failed`."
            },
            "created": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Time the export job was created."
            },
            "updated": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Time the export job was last updated."
            },
            "description": {
              "type": "string",
              "description": "Description of the export job."
            },
            "datastoreName": {
              "type": "string",
              "description": "Name of the datastore that is the destination of the export job [datastore]"
            },
            "executionTime": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Execution time for this export job. If the job is still in progress, it will be set to the amount of time that has elapsed since`created`, in seconds. Else, it will set to (`updated` - `created`), in seconds."
            }
          },
          "description": "Details of an export job."
        }
      ]
  organizations.environments.analytics.exports.list:
    description: |-
      Lists the details and status of all analytics export jobs belonging to the parent organization and environment.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.analytics.exports/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ListExportsResponse",
          "type": "object",
          "properties": {
            "exports": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Export",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Display name of the export job."
                  },
                  "self": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Self link of the export job. A URI that can be used to retrieve the status of an export job. Example: `/organizations/myorg/environments/myenv/analytics/exports/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd`"
                  },
                  "error": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Error is set when export fails"
                  },
                  "state": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Status of the export job. Valid values include `enqueued`, `running`, `completed`, and `failed`."
                  },
                  "created": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Time the export job was created."
                  },
                  "updated": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Time the export job was last updated."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the export job."
                  },
                  "datastoreName": {
                    "type": "string",
                    "description": "Name of the datastore that is the destination of the export job [datastore]"
                  },
                  "executionTime": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Execution time for this export job. If the job is still in progress, it will be set to the amount of time that has elapsed since`created`, in seconds. Else, it will set to (`updated` - `created`), in seconds."
                  }
                },
                "description": "Details of an export job."
              },
              "description": "Details of the export jobs."
            }
          },
          "description": "The response for ListExports"
        }
      ]
  organizations.environments.apis.deployments.list:
    description: |-
      Lists all deployments of an API proxy in an environment.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.apis.deployments/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ListDeploymentsResponse",
          "type": "object",
          "properties": {
            "deployments": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Deployment",
                "type": "object",
                "properties": {
                  "pods": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1PodStatus",
                      "type": "object",
                      "properties": {
                        "podName": {
                          "type": "string",
                          "description": "Name of the pod which is reporting the status."
                        },
                        "podStatus": {
                          "type": "string",
                          "description": "Overall status of the pod (not this specific deployment). Valid values include: - `active`: Up to date. - `stale` : Recently out of date. Pods that have not reported status in a long time are excluded from the output."
                        },
                        "appVersion": {
                          "type": "string",
                          "description": "Version of the application running in the pod."
                        },
                        "statusCode": {
                          "type": "string",
                          "description": "Code associated with the deployment status."
                        },
                        "podStatusTime": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the pod status was reported in milliseconds since epoch."
                        },
                        "deploymentTime": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the proxy was deployed in milliseconds since epoch."
                        },
                        "deploymentStatus": {
                          "type": "string",
                          "description": "Status of the deployment. Valid values include: - `deployed`: Successful. - `error` : Failed. - `pending` : Pod has not yet reported on the deployment."
                        },
                        "statusCodeDetails": {
                          "type": "string",
                          "description": "Human-readable message associated with the status code."
                        },
                        "deploymentStatusTime": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the deployment status was reported in milliseconds since epoch."
                        }
                      }
                    },
                    "description": "Status reported by runtime pods. This field is not populated for List APIs. **Note**: **This field is deprecated**. Runtime versions 1.3 and above report instance level status rather than pod status."
                  },
                  "state": {
                    "enum": [
                      "RUNTIME_STATE_UNSPECIFIED",
                      "READY",
                      "PROGRESSING",
                      "ERROR"
                    ],
                    "type": "string",
                    "description": "Current state of the deployment. This field is not populated in List APIs.",
                    "enumDescriptions": [
                      "This value should never be returned.",
                      "Runtime has loaded the deployment.",
                      "Deployment is not fully ready in the runtime.",
                      "Encountered an error with the deployment that requires intervention."
                    ]
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "id": "GoogleRpcStatus",
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The status code, which should be an enum value of google.rpc.Code."
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "any",
                              "description": "Properties of the object. Contains field @type with type URL."
                            }
                          },
                          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                        },
                        "message": {
                          "type": "string",
                          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                        }
                      },
                      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
                    },
                    "description": "Errors reported for this deployment. Populated only when state == ERROR. This field is not populated in List APIs."
                  },
                  "apiProxy": {
                    "type": "string",
                    "description": "API proxy."
                  },
                  "revision": {
                    "type": "string",
                    "description": "API proxy revision."
                  },
                  "instances": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1InstanceDeploymentStatus",
                      "type": "object",
                      "properties": {
                        "instance": {
                          "type": "string",
                          "description": "ID of the instance reporting the status."
                        },
                        "deployedRoutes": {
                          "type": "array",
                          "items": {
                            "id": "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute",
                            "type": "object",
                            "properties": {
                              "basepath": {
                                "type": "string",
                                "description": "Base path in the routing table."
                              },
                              "envgroup": {
                                "type": "string",
                                "description": "Environment group where this route is installed."
                              },
                              "percentage": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Percentage of ingress replicas reporting this route."
                              },
                              "environment": {
                                "type": "string",
                                "description": "Destination environment. This will be empty if the route is not yet reported."
                              }
                            },
                            "description": "Route deployed in the ingress routing table."
                          },
                          "description": "Current routes deployed in the ingress routing table. A route which is missing will appear in `missing_routes`."
                        },
                        "deployedRevisions": {
                          "type": "array",
                          "items": {
                            "id": "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision",
                            "type": "object",
                            "properties": {
                              "revision": {
                                "type": "string",
                                "description": "API proxy revision reported as deployed."
                              },
                              "percentage": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Percentage of MP replicas reporting this revision."
                              }
                            },
                            "description": "Revisions deployed in the MPs."
                          },
                          "description": "Revisions currently deployed in MPs."
                        }
                      },
                      "description": "The status of a deployment as reported by a single instance."
                    },
                    "description": "Status reported by each runtime instance. This field is not populated in List APIs."
                  },
                  "environment": {
                    "type": "string",
                    "description": "Environment."
                  },
                  "routeConflicts": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict",
                      "type": "object",
                      "properties": {
                        "description": {
                          "type": "string",
                          "description": "Human-readable description of this conflict."
                        },
                        "environmentGroup": {
                          "type": "string",
                          "description": "Name of the environment group in which this conflict exists."
                        },
                        "conflictingDeployment": {
                          "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment",
                          "type": "object",
                          "properties": {
                            "apiProxy": {
                              "type": "string",
                              "description": "Name of the deployed API proxy revision containing the base path."
                            },
                            "basepath": {
                              "type": "string",
                              "description": "Base path receiving traffic."
                            },
                            "revision": {
                              "type": "string",
                              "description": "Name of the deployed API proxy revision containing the base path."
                            },
                            "environment": {
                              "type": "string",
                              "description": "Name of the environment in which the proxy is deployed."
                            }
                          },
                          "description": "Existing base path/deployment causing the conflict."
                        }
                      },
                      "description": "Describes a routing conflict that may cause a deployment not to receive traffic at some base path."
                    },
                    "description": "Conflicts in the desired state routing configuration. The presence of conflicts does not cause the state to be `ERROR`, but it will mean that some of the deployment's base paths are not routed to its environment. If the conflicts change, the state will transition to `PROGRESSING` until the latest configuration is rolled out to all instances. This field is not populated in List APIs."
                  },
                  "deployStartTime": {
                    "type": "string",
                    "format": "int64",
                    "description": "Time the API proxy was marked `deployed` in the control plane in millisconds since epoch."
                  }
                }
              },
              "description": "List of deployments."
            }
          }
        }
      ]
  organizations.environments.apis.revisions.debugsessions.create:
    description: |-
      Creates a debug session for a deployed API Proxy revision.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.apis.revisions.debugsessions/create
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1DebugSession",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "A unique ID for this DebugSession."
            },
            "count": {
              "type": "integer",
              "format": "int32",
              "description": "Optional. The number of request to be traced. Min = 1, Max = 15, Default = 10."
            },
            "filter": {
              "type": "string",
              "description": "Optional. A conditional statement which is evaluated against the request message to determine if it should be traced. Syntax matches that of on API Proxy bundle flow Condition."
            },
            "timeout": {
              "type": "string",
              "format": "int64",
              "description": "Optional. The time in seconds after which this DebugSession should end. This value will override the value in query param, if both are provided."
            },
            "validity": {
              "type": "integer",
              "format": "int32",
              "description": "Optional. The length of time, in seconds, that this debug session is valid, starting from when it's received in the control plane. Min = 1, Max = 15, Default = 10."
            },
            "tracesize": {
              "type": "integer",
              "format": "int32",
              "description": "Optional. The maximum number of bytes captured from the response payload. Min = 0, Max = 5120, Default = 5120."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  organizations.environments.apis.revisions.debugsessions.data.get:
    description: |-
      Gets the debug data from a transaction.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.apis.revisions.debugsessions.data/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1DebugSessionTransaction",
          "type": "object",
          "properties": {
            "point": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Point",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Name of a step in the transaction."
                  },
                  "results": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1Result",
                      "type": "object",
                      "properties": {
                        "uRI": {
                          "type": "string",
                          "description": "The relative path of the api proxy. for example, `\"uRI\" : \"/iloveapis\"`"
                        },
                        "verb": {
                          "type": "string",
                          "description": "HTTP method verb"
                        },
                        "content": {
                          "type": "string",
                          "description": "Error message content. for example, \"content\" : \"{\\\"fault\\\":{\\\"faultstring\\\":\\\"API timed out\\\",\\\"detail\\\":{\\\"errorcode\\\":\\\"flow.APITimedOut\\\"}}}\""
                        },
                        "headers": {
                          "type": "array",
                          "items": {
                            "id": "GoogleCloudApigeeV1Property",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The property key"
                              },
                              "value": {
                                "type": "string",
                                "description": "The property value"
                              }
                            },
                            "description": "A single property entry in the Properties message."
                          },
                          "description": "A list of HTTP headers. for example, '\"headers\" : [ { \"name\" : \"Content-Length\", \"value\" : \"83\" }, { \"name\" : \"Content-Type\", \"value\" : \"application/json\" } ]'"
                        },
                        "timestamp": {
                          "type": "string",
                          "description": "Timestamp of when the result is recorded. Its format is dd-mm-yy hh:mm:ss:xxx. For example, `\"timestamp\" : \"12-08-19 00:31:59:960\"`"
                        },
                        "accessList": {
                          "type": "array",
                          "items": {
                            "id": "GoogleCloudApigeeV1Access",
                            "type": "object",
                            "properties": {
                              "Get": {
                                "id": "GoogleCloudApigeeV1AccessGet",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "description": "Get action. For example, \"Get\" : { \"name\" : \"target.name\", \"value\" : \"default\" }"
                              },
                              "Set": {
                                "id": "GoogleCloudApigeeV1AccessSet",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  },
                                  "success": {
                                    "type": "boolean"
                                  }
                                },
                                "description": "Set action. For example, \"Set\" : { \"name\" : \"target.name\", \"success\" : true, \"value\" : \"default\" }"
                              },
                              "Remove": {
                                "id": "GoogleCloudApigeeV1AccessRemove",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "success": {
                                    "type": "boolean"
                                  }
                                },
                                "description": "Remove action. For example, \"Remove\" : { \"name\" : \"target.name\", \"success\" : true }"
                              }
                            }
                          },
                          "description": "A list of variable access actions agaist the api proxy. Supported values: Get, Set, Remove."
                        },
                        "properties": {
                          "id": "GoogleCloudApigeeV1Properties",
                          "type": "object",
                          "properties": {
                            "property": {
                              "type": "array",
                              "items": {
                                "id": "GoogleCloudApigeeV1Property",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The property key"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "The property value"
                                  }
                                },
                                "description": "A single property entry in the Properties message."
                              },
                              "description": "List of all properties in the object"
                            }
                          },
                          "description": "Name value pairs used for DebugInfo ActionResult."
                        },
                        "statusCode": {
                          "type": "string",
                          "description": "HTTP response code"
                        },
                        "ActionResult": {
                          "type": "string",
                          "description": "Type of the action result. Can be one of the five: DebugInfo, RequestMessage, ResponseMessage, ErrorMessage, VariableAccess"
                        },
                        "reasonPhrase": {
                          "type": "string",
                          "description": "HTTP response phrase"
                        }
                      },
                      "description": "Result is short for \"action result\", could be different types identified by \"action_result\" field. Supported types: 1. DebugInfo : generic debug info collected by runtime recorded as a list of properties. For example, the contents could be virtual host info, state change result, or execution metadata. Required fields : properties, timestamp 2. RequestMessage: information of a http request. Contains headers, request URI and http methods type.Required fields : headers, uri, verb 3. ResponseMessage: information of a http response. Contains headers, reason phrase and http status code. Required fields : headers, reasonPhrase, statusCode 4. ErrorMessage: information of a http error message. Contains detail error message, reason phrase and status code. Required fields : content, headers, reasonPhrase, statusCode 5. VariableAccess: a list of variable access actions, can be Get, Set and Remove. Required fields : accessList"
                    },
                    "description": "List of results extracted from a given debug point."
                  }
                },
                "description": "Point is a group of information collected by runtime plane at critical points of the message flow of the processed API request. This is a list of supported point IDs, categorized to three major buckets. For each category, debug points that we are currently supporting are listed below: - Flow status debug points: StateChange FlowInfo Condition Execution DebugMask Error - Flow control debug points: FlowCallout Paused Resumed FlowReturn BreakFlow Error - Runtime debug points: ScriptExecutor FlowCalloutStepDefinition CustomTarget StepDefinition Oauth2ServicePoint RaiseFault NodeJS The detail information of the given debug point is stored in a list of results."
              },
              "description": "List of debug data collected by runtime plane at various defined points in the flow."
            },
            "completed": {
              "type": "boolean",
              "description": "Flag indicating whether a transaction is completed or not"
            }
          },
          "description": "A transaction contains all of the debug information of the entire message flow of an API call processed by the runtime plane. The information is collected and recorded at critical points of the message flow in the runtime apiproxy."
        }
      ]
  organizations.environments.apis.revisions.debugsessions.deleteData:
    description: |-
      Deletes the data from a debug session. This does not cancel the debug session or prevent further data from being collected if the session is still active in runtime pods.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.apis.revisions.debugsessions/deleteData
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  organizations.environments.apis.revisions.debugsessions.get:
    description: |-
      Retrieves a debug session.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.apis.revisions.debugsessions/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.environments.apis.revisions.debugsessions.list:
    description: |-
      Lists debug sessions that are currently active in the given API Proxy revision.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.apis.revisions.debugsessions/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ListDebugSessionsResponse",
          "type": "object",
          "properties": {
            "sessions": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Session",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The debug session ID."
                  },
                  "timestampMs": {
                    "type": "string",
                    "format": "int64",
                    "description": "The first transaction creation timestamp in millisecond, recoreded by UAP."
                  }
                },
                "description": "Session carries the debug session id and its creation time."
              },
              "description": "Session info that includes debug session ID and the first transaction creation timestamp."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Page token that you can include in a ListDebugSessionsRequest to retrieve the next page. If omitted, no subsequent pages exist."
            }
          }
        }
      ]
  organizations.environments.apis.revisions.deploy:
    description: |-
      Deploys a revision of an API proxy. If another revision of the same API proxy revision is currently deployed, set the `override` parameter to `true` to have this revision replace the currently deployed revision. You cannot invoke an API proxy until it has been deployed to an environment. After you deploy an API proxy revision, you cannot edit it. To edit the API proxy, you must create and deploy a new revision. For a request path `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}/deployments`, two permissions are required: * `apigee.deployments.create` on the resource `organizations/{org}/environments/{env}` * `apigee.proxyrevisions.deploy` on the resource `organizations/{org}/apis/{api}/revisions/{rev}` 
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.apis.revisions/deploy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1Deployment",
          "type": "object",
          "properties": {
            "pods": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1PodStatus",
                "type": "object",
                "properties": {
                  "podName": {
                    "type": "string",
                    "description": "Name of the pod which is reporting the status."
                  },
                  "podStatus": {
                    "type": "string",
                    "description": "Overall status of the pod (not this specific deployment). Valid values include: - `active`: Up to date. - `stale` : Recently out of date. Pods that have not reported status in a long time are excluded from the output."
                  },
                  "appVersion": {
                    "type": "string",
                    "description": "Version of the application running in the pod."
                  },
                  "statusCode": {
                    "type": "string",
                    "description": "Code associated with the deployment status."
                  },
                  "podStatusTime": {
                    "type": "string",
                    "format": "int64",
                    "description": "Time the pod status was reported in milliseconds since epoch."
                  },
                  "deploymentTime": {
                    "type": "string",
                    "format": "int64",
                    "description": "Time the proxy was deployed in milliseconds since epoch."
                  },
                  "deploymentStatus": {
                    "type": "string",
                    "description": "Status of the deployment. Valid values include: - `deployed`: Successful. - `error` : Failed. - `pending` : Pod has not yet reported on the deployment."
                  },
                  "statusCodeDetails": {
                    "type": "string",
                    "description": "Human-readable message associated with the status code."
                  },
                  "deploymentStatusTime": {
                    "type": "string",
                    "format": "int64",
                    "description": "Time the deployment status was reported in milliseconds since epoch."
                  }
                }
              },
              "description": "Status reported by runtime pods. This field is not populated for List APIs. **Note**: **This field is deprecated**. Runtime versions 1.3 and above report instance level status rather than pod status."
            },
            "state": {
              "enum": [
                "RUNTIME_STATE_UNSPECIFIED",
                "READY",
                "PROGRESSING",
                "ERROR"
              ],
              "type": "string",
              "description": "Current state of the deployment. This field is not populated in List APIs.",
              "enumDescriptions": [
                "This value should never be returned.",
                "Runtime has loaded the deployment.",
                "Deployment is not fully ready in the runtime.",
                "Encountered an error with the deployment that requires intervention."
              ]
            },
            "errors": {
              "type": "array",
              "items": {
                "id": "GoogleRpcStatus",
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The status code, which should be an enum value of google.rpc.Code."
                  },
                  "details": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "any",
                        "description": "Properties of the object. Contains field @type with type URL."
                      }
                    },
                    "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                  },
                  "message": {
                    "type": "string",
                    "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                  }
                },
                "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
              },
              "description": "Errors reported for this deployment. Populated only when state == ERROR. This field is not populated in List APIs."
            },
            "apiProxy": {
              "type": "string",
              "description": "API proxy."
            },
            "revision": {
              "type": "string",
              "description": "API proxy revision."
            },
            "instances": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1InstanceDeploymentStatus",
                "type": "object",
                "properties": {
                  "instance": {
                    "type": "string",
                    "description": "ID of the instance reporting the status."
                  },
                  "deployedRoutes": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute",
                      "type": "object",
                      "properties": {
                        "basepath": {
                          "type": "string",
                          "description": "Base path in the routing table."
                        },
                        "envgroup": {
                          "type": "string",
                          "description": "Environment group where this route is installed."
                        },
                        "percentage": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Percentage of ingress replicas reporting this route."
                        },
                        "environment": {
                          "type": "string",
                          "description": "Destination environment. This will be empty if the route is not yet reported."
                        }
                      },
                      "description": "Route deployed in the ingress routing table."
                    },
                    "description": "Current routes deployed in the ingress routing table. A route which is missing will appear in `missing_routes`."
                  },
                  "deployedRevisions": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision",
                      "type": "object",
                      "properties": {
                        "revision": {
                          "type": "string",
                          "description": "API proxy revision reported as deployed."
                        },
                        "percentage": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Percentage of MP replicas reporting this revision."
                        }
                      },
                      "description": "Revisions deployed in the MPs."
                    },
                    "description": "Revisions currently deployed in MPs."
                  }
                },
                "description": "The status of a deployment as reported by a single instance."
              },
              "description": "Status reported by each runtime instance. This field is not populated in List APIs."
            },
            "environment": {
              "type": "string",
              "description": "Environment."
            },
            "routeConflicts": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict",
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Human-readable description of this conflict."
                  },
                  "environmentGroup": {
                    "type": "string",
                    "description": "Name of the environment group in which this conflict exists."
                  },
                  "conflictingDeployment": {
                    "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment",
                    "type": "object",
                    "properties": {
                      "apiProxy": {
                        "type": "string",
                        "description": "Name of the deployed API proxy revision containing the base path."
                      },
                      "basepath": {
                        "type": "string",
                        "description": "Base path receiving traffic."
                      },
                      "revision": {
                        "type": "string",
                        "description": "Name of the deployed API proxy revision containing the base path."
                      },
                      "environment": {
                        "type": "string",
                        "description": "Name of the environment in which the proxy is deployed."
                      }
                    },
                    "description": "Existing base path/deployment causing the conflict."
                  }
                },
                "description": "Describes a routing conflict that may cause a deployment not to receive traffic at some base path."
              },
              "description": "Conflicts in the desired state routing configuration. The presence of conflicts does not cause the state to be `ERROR`, but it will mean that some of the deployment's base paths are not routed to its environment. If the conflicts change, the state will transition to `PROGRESSING` until the latest configuration is rolled out to all instances. This field is not populated in List APIs."
            },
            "deployStartTime": {
              "type": "string",
              "format": "int64",
              "description": "Time the API proxy was marked `deployed` in the control plane in millisconds since epoch."
            }
          }
        }
      ]
  organizations.environments.apis.revisions.deployments.generateDeployChangeReport:
    description: |-
      Generates a report for a dry run analysis of a DeployApiProxy request without committing the deployment. In addition to the standard validations performed when adding deployments, additional analysis will be done to detect possible traffic routing changes that would result from this deployment being created. Any potential routing conflicts or unsafe changes will be reported in the response. This routing analysis is not performed for a non-dry-run DeployApiProxy request. For a request path `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}/deployments:generateDeployChangeReport`, two permissions are required: * `apigee.deployments.create` on the resource `organizations/{org}/environments/{env}` * `apigee.proxyrevisions.deploy` on the resource `organizations/{org}/apis/{api}/revisions/{rev}`
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.apis.revisions.deployments/generateDeployChangeReport
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1DeploymentChangeReport",
          "type": "object",
          "properties": {
            "routingChanges": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingChange",
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Human-readable description of this routing change."
                  },
                  "toDeployment": {
                    "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment",
                    "type": "object",
                    "properties": {
                      "apiProxy": {
                        "type": "string",
                        "description": "Name of the deployed API proxy revision containing the base path."
                      },
                      "basepath": {
                        "type": "string",
                        "description": "Base path receiving traffic."
                      },
                      "revision": {
                        "type": "string",
                        "description": "Name of the deployed API proxy revision containing the base path."
                      },
                      "environment": {
                        "type": "string",
                        "description": "Name of the environment in which the proxy is deployed."
                      }
                    },
                    "description": "Base path/deployment that may start receiving that traffic. May be null if no deployment is able to receive the traffic."
                  },
                  "fromDeployment": {
                    "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment",
                    "type": "object",
                    "properties": {
                      "apiProxy": {
                        "type": "string",
                        "description": "Name of the deployed API proxy revision containing the base path."
                      },
                      "basepath": {
                        "type": "string",
                        "description": "Base path receiving traffic."
                      },
                      "revision": {
                        "type": "string",
                        "description": "Name of the deployed API proxy revision containing the base path."
                      },
                      "environment": {
                        "type": "string",
                        "description": "Name of the environment in which the proxy is deployed."
                      }
                    },
                    "description": "Base path/deployment that may stop receiving some traffic."
                  },
                  "environmentGroup": {
                    "type": "string",
                    "description": "Name of the environment group affected by this routing change."
                  },
                  "shouldSequenceRollout": {
                    "type": "boolean",
                    "description": "Set to `true` if using sequenced rollout would make this routing change safer. **Note**: This does not necessarily imply that automated sequenced rollout mode is supported for the operation."
                  }
                },
                "description": "Describes a potential routing change that may occur as a result of some deployment operation."
              },
              "description": "All routing changes that may result from a deployment request."
            },
            "routingConflicts": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict",
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Human-readable description of this conflict."
                  },
                  "environmentGroup": {
                    "type": "string",
                    "description": "Name of the environment group in which this conflict exists."
                  },
                  "conflictingDeployment": {
                    "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment",
                    "type": "object",
                    "properties": {
                      "apiProxy": {
                        "type": "string",
                        "description": "Name of the deployed API proxy revision containing the base path."
                      },
                      "basepath": {
                        "type": "string",
                        "description": "Base path receiving traffic."
                      },
                      "revision": {
                        "type": "string",
                        "description": "Name of the deployed API proxy revision containing the base path."
                      },
                      "environment": {
                        "type": "string",
                        "description": "Name of the environment in which the proxy is deployed."
                      }
                    },
                    "description": "Existing base path/deployment causing the conflict."
                  }
                },
                "description": "Describes a routing conflict that may cause a deployment not to receive traffic at some base path."
              },
              "description": "All base path conflicts detected for a deployment request."
            },
            "validationErrors": {
              "id": "GoogleRpcPreconditionFailure",
              "type": "object",
              "properties": {
                "violations": {
                  "type": "array",
                  "items": {
                    "id": "GoogleRpcPreconditionFailureViolation",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The type of PreconditionFailure. We recommend using a service-specific enum type to define the supported precondition violation subjects. For example, \"TOS\" for \"Terms of Service violation\"."
                      },
                      "subject": {
                        "type": "string",
                        "description": "The subject, relative to the type, that failed. For example, \"google.com/cloud\" relative to the \"TOS\" type would indicate which terms of service is being referenced."
                      },
                      "description": {
                        "type": "string",
                        "description": "A description of how the precondition failed. Developers can use this description to understand how to fix the failure. For example: \"Terms of service not accepted\"."
                      }
                    },
                    "description": "A message type used to describe a single precondition failure."
                  },
                  "description": "Describes all precondition violations."
                }
              },
              "description": "Validation errors that would cause the deployment change request to be rejected."
            }
          },
          "description": "Response for GenerateDeployChangeReport and GenerateUndeployChangeReport. This report contains any validation failures that would cause the deployment to be rejected, as well changes and conflicts in routing that may occur due to the new deployment. The existence of a routing warning does not necessarily imply that the deployment request is bad, if the desired state of the deployment request is to effect a routing change. The primary purposes of the routing messages are: 1) To inform users of routing changes that may have an effect on traffic currently being routed to other existing deployments. 2) To warn users if some base path in the proxy will not receive traffic due to an existing deployment having already claimed that base path. The presence of routing conflicts/changes will not cause non-dry-run DeployApiProxy/UndeployApiProxy requests to be rejected."
        }
      ]
  organizations.environments.apis.revisions.deployments.generateUndeployChangeReport:
    description: |-
      Generates a report for a dry run analysis of an UndeployApiProxy request without committing the undeploy. In addition to the standard validations performed when removing deployments, additional analysis will be done to detect possible traffic routing changes that would result from this deployment being removed. Any potential routing conflicts or unsafe changes will be reported in the response. This routing analysis is not performed for a non-dry-run UndeployApiProxy request. For a request path `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}/deployments:generateUndeployChangeReport`, two permissions are required: * `apigee.deployments.delete` on the resource `organizations/{org}/environments/{env}` * `apigee.proxyrevisions.undeploy` on the resource `organizations/{org}/apis/{api}/revisions/{rev}`
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.apis.revisions.deployments/generateUndeployChangeReport
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1DeploymentChangeReport",
          "type": "object",
          "properties": {
            "routingChanges": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingChange",
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Human-readable description of this routing change."
                  },
                  "toDeployment": {
                    "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment",
                    "type": "object",
                    "properties": {
                      "apiProxy": {
                        "type": "string",
                        "description": "Name of the deployed API proxy revision containing the base path."
                      },
                      "basepath": {
                        "type": "string",
                        "description": "Base path receiving traffic."
                      },
                      "revision": {
                        "type": "string",
                        "description": "Name of the deployed API proxy revision containing the base path."
                      },
                      "environment": {
                        "type": "string",
                        "description": "Name of the environment in which the proxy is deployed."
                      }
                    },
                    "description": "Base path/deployment that may start receiving that traffic. May be null if no deployment is able to receive the traffic."
                  },
                  "fromDeployment": {
                    "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment",
                    "type": "object",
                    "properties": {
                      "apiProxy": {
                        "type": "string",
                        "description": "Name of the deployed API proxy revision containing the base path."
                      },
                      "basepath": {
                        "type": "string",
                        "description": "Base path receiving traffic."
                      },
                      "revision": {
                        "type": "string",
                        "description": "Name of the deployed API proxy revision containing the base path."
                      },
                      "environment": {
                        "type": "string",
                        "description": "Name of the environment in which the proxy is deployed."
                      }
                    },
                    "description": "Base path/deployment that may stop receiving some traffic."
                  },
                  "environmentGroup": {
                    "type": "string",
                    "description": "Name of the environment group affected by this routing change."
                  },
                  "shouldSequenceRollout": {
                    "type": "boolean",
                    "description": "Set to `true` if using sequenced rollout would make this routing change safer. **Note**: This does not necessarily imply that automated sequenced rollout mode is supported for the operation."
                  }
                },
                "description": "Describes a potential routing change that may occur as a result of some deployment operation."
              },
              "description": "All routing changes that may result from a deployment request."
            },
            "routingConflicts": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict",
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Human-readable description of this conflict."
                  },
                  "environmentGroup": {
                    "type": "string",
                    "description": "Name of the environment group in which this conflict exists."
                  },
                  "conflictingDeployment": {
                    "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment",
                    "type": "object",
                    "properties": {
                      "apiProxy": {
                        "type": "string",
                        "description": "Name of the deployed API proxy revision containing the base path."
                      },
                      "basepath": {
                        "type": "string",
                        "description": "Base path receiving traffic."
                      },
                      "revision": {
                        "type": "string",
                        "description": "Name of the deployed API proxy revision containing the base path."
                      },
                      "environment": {
                        "type": "string",
                        "description": "Name of the environment in which the proxy is deployed."
                      }
                    },
                    "description": "Existing base path/deployment causing the conflict."
                  }
                },
                "description": "Describes a routing conflict that may cause a deployment not to receive traffic at some base path."
              },
              "description": "All base path conflicts detected for a deployment request."
            },
            "validationErrors": {
              "id": "GoogleRpcPreconditionFailure",
              "type": "object",
              "properties": {
                "violations": {
                  "type": "array",
                  "items": {
                    "id": "GoogleRpcPreconditionFailureViolation",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The type of PreconditionFailure. We recommend using a service-specific enum type to define the supported precondition violation subjects. For example, \"TOS\" for \"Terms of Service violation\"."
                      },
                      "subject": {
                        "type": "string",
                        "description": "The subject, relative to the type, that failed. For example, \"google.com/cloud\" relative to the \"TOS\" type would indicate which terms of service is being referenced."
                      },
                      "description": {
                        "type": "string",
                        "description": "A description of how the precondition failed. Developers can use this description to understand how to fix the failure. For example: \"Terms of service not accepted\"."
                      }
                    },
                    "description": "A message type used to describe a single precondition failure."
                  },
                  "description": "Describes all precondition violations."
                }
              },
              "description": "Validation errors that would cause the deployment change request to be rejected."
            }
          },
          "description": "Response for GenerateDeployChangeReport and GenerateUndeployChangeReport. This report contains any validation failures that would cause the deployment to be rejected, as well changes and conflicts in routing that may occur due to the new deployment. The existence of a routing warning does not necessarily imply that the deployment request is bad, if the desired state of the deployment request is to effect a routing change. The primary purposes of the routing messages are: 1) To inform users of routing changes that may have an effect on traffic currently being routed to other existing deployments. 2) To warn users if some base path in the proxy will not receive traffic due to an existing deployment having already claimed that base path. The presence of routing conflicts/changes will not cause non-dry-run DeployApiProxy/UndeployApiProxy requests to be rejected."
        }
      ]
  organizations.environments.apis.revisions.getDeployments:
    description: |-
      Gets the deployment of an API proxy revision and actual state reported by runtime pods.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.apis.revisions/getDeployments
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1Deployment",
          "type": "object",
          "properties": {
            "pods": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1PodStatus",
                "type": "object",
                "properties": {
                  "podName": {
                    "type": "string",
                    "description": "Name of the pod which is reporting the status."
                  },
                  "podStatus": {
                    "type": "string",
                    "description": "Overall status of the pod (not this specific deployment). Valid values include: - `active`: Up to date. - `stale` : Recently out of date. Pods that have not reported status in a long time are excluded from the output."
                  },
                  "appVersion": {
                    "type": "string",
                    "description": "Version of the application running in the pod."
                  },
                  "statusCode": {
                    "type": "string",
                    "description": "Code associated with the deployment status."
                  },
                  "podStatusTime": {
                    "type": "string",
                    "format": "int64",
                    "description": "Time the pod status was reported in milliseconds since epoch."
                  },
                  "deploymentTime": {
                    "type": "string",
                    "format": "int64",
                    "description": "Time the proxy was deployed in milliseconds since epoch."
                  },
                  "deploymentStatus": {
                    "type": "string",
                    "description": "Status of the deployment. Valid values include: - `deployed`: Successful. - `error` : Failed. - `pending` : Pod has not yet reported on the deployment."
                  },
                  "statusCodeDetails": {
                    "type": "string",
                    "description": "Human-readable message associated with the status code."
                  },
                  "deploymentStatusTime": {
                    "type": "string",
                    "format": "int64",
                    "description": "Time the deployment status was reported in milliseconds since epoch."
                  }
                }
              },
              "description": "Status reported by runtime pods. This field is not populated for List APIs. **Note**: **This field is deprecated**. Runtime versions 1.3 and above report instance level status rather than pod status."
            },
            "state": {
              "enum": [
                "RUNTIME_STATE_UNSPECIFIED",
                "READY",
                "PROGRESSING",
                "ERROR"
              ],
              "type": "string",
              "description": "Current state of the deployment. This field is not populated in List APIs.",
              "enumDescriptions": [
                "This value should never be returned.",
                "Runtime has loaded the deployment.",
                "Deployment is not fully ready in the runtime.",
                "Encountered an error with the deployment that requires intervention."
              ]
            },
            "errors": {
              "type": "array",
              "items": {
                "id": "GoogleRpcStatus",
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The status code, which should be an enum value of google.rpc.Code."
                  },
                  "details": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "any",
                        "description": "Properties of the object. Contains field @type with type URL."
                      }
                    },
                    "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                  },
                  "message": {
                    "type": "string",
                    "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                  }
                },
                "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
              },
              "description": "Errors reported for this deployment. Populated only when state == ERROR. This field is not populated in List APIs."
            },
            "apiProxy": {
              "type": "string",
              "description": "API proxy."
            },
            "revision": {
              "type": "string",
              "description": "API proxy revision."
            },
            "instances": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1InstanceDeploymentStatus",
                "type": "object",
                "properties": {
                  "instance": {
                    "type": "string",
                    "description": "ID of the instance reporting the status."
                  },
                  "deployedRoutes": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute",
                      "type": "object",
                      "properties": {
                        "basepath": {
                          "type": "string",
                          "description": "Base path in the routing table."
                        },
                        "envgroup": {
                          "type": "string",
                          "description": "Environment group where this route is installed."
                        },
                        "percentage": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Percentage of ingress replicas reporting this route."
                        },
                        "environment": {
                          "type": "string",
                          "description": "Destination environment. This will be empty if the route is not yet reported."
                        }
                      },
                      "description": "Route deployed in the ingress routing table."
                    },
                    "description": "Current routes deployed in the ingress routing table. A route which is missing will appear in `missing_routes`."
                  },
                  "deployedRevisions": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision",
                      "type": "object",
                      "properties": {
                        "revision": {
                          "type": "string",
                          "description": "API proxy revision reported as deployed."
                        },
                        "percentage": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Percentage of MP replicas reporting this revision."
                        }
                      },
                      "description": "Revisions deployed in the MPs."
                    },
                    "description": "Revisions currently deployed in MPs."
                  }
                },
                "description": "The status of a deployment as reported by a single instance."
              },
              "description": "Status reported by each runtime instance. This field is not populated in List APIs."
            },
            "environment": {
              "type": "string",
              "description": "Environment."
            },
            "routeConflicts": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict",
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Human-readable description of this conflict."
                  },
                  "environmentGroup": {
                    "type": "string",
                    "description": "Name of the environment group in which this conflict exists."
                  },
                  "conflictingDeployment": {
                    "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment",
                    "type": "object",
                    "properties": {
                      "apiProxy": {
                        "type": "string",
                        "description": "Name of the deployed API proxy revision containing the base path."
                      },
                      "basepath": {
                        "type": "string",
                        "description": "Base path receiving traffic."
                      },
                      "revision": {
                        "type": "string",
                        "description": "Name of the deployed API proxy revision containing the base path."
                      },
                      "environment": {
                        "type": "string",
                        "description": "Name of the environment in which the proxy is deployed."
                      }
                    },
                    "description": "Existing base path/deployment causing the conflict."
                  }
                },
                "description": "Describes a routing conflict that may cause a deployment not to receive traffic at some base path."
              },
              "description": "Conflicts in the desired state routing configuration. The presence of conflicts does not cause the state to be `ERROR`, but it will mean that some of the deployment's base paths are not routed to its environment. If the conflicts change, the state will transition to `PROGRESSING` until the latest configuration is rolled out to all instances. This field is not populated in List APIs."
            },
            "deployStartTime": {
              "type": "string",
              "format": "int64",
              "description": "Time the API proxy was marked `deployed` in the control plane in millisconds since epoch."
            }
          }
        }
      ]
  organizations.environments.apis.revisions.undeploy:
    description: |-
      Undeploys an API proxy revision from an environment. For a request path `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}/deployments`, two permissions are required: * `apigee.deployments.delete` on the resource `organizations/{org}/environments/{env}` * `apigee.proxyrevisions.undeploy` on the resource `organizations/{org}/apis/{api}/revisions/{rev}`
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.apis.revisions/undeploy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  organizations.environments.caches.delete:
    description: |-
      Deletes a cache.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.caches/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  organizations.environments.create:
    description: |-
      Creates an environment in an organization.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments/create
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1Environment",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Required. Name of the environment. Values must match the regular expression `^[.\\\\p{Alnum}-_]{1,255}$`"
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "CREATING",
                "ACTIVE",
                "DELETING"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. State of the environment. Values other than ACTIVE means the resource is not ready to use.",
              "enumDescriptions": [
                "Resource is in an unspecified state.",
                "Resource is being created.",
                "Resource is provisioned and ready to use.",
                "The resource is being deleted."
              ]
            },
            "createdAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Creation time of this environment as milliseconds since epoch."
            },
            "properties": {
              "id": "GoogleCloudApigeeV1Properties",
              "type": "object",
              "properties": {
                "property": {
                  "type": "array",
                  "items": {
                    "id": "GoogleCloudApigeeV1Property",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The property key"
                      },
                      "value": {
                        "type": "string",
                        "description": "The property value"
                      }
                    },
                    "description": "A single property entry in the Properties message."
                  },
                  "description": "List of all properties in the object"
                }
              },
              "description": "Optional. Key-value pairs that may be used for customizing the environment."
            },
            "description": {
              "type": "string",
              "description": "Optional. Description of the environment."
            },
            "displayName": {
              "type": "string",
              "description": "Optional. Display name for this environment."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Last modification time of this environment as milliseconds since epoch."
            }
          }
        }
      ]
      outputs: [
        {
          "id": "GoogleLongrunningOperation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "GoogleRpcStatus",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  organizations.environments.delete:
    description: |-
      Deletes an environment from an organization.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleLongrunningOperation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "GoogleRpcStatus",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  organizations.environments.deployments.list:
    description: |-
      Lists all deployments of API proxies or shared flows in an environment.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.deployments/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ListDeploymentsResponse",
          "type": "object",
          "properties": {
            "deployments": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Deployment",
                "type": "object",
                "properties": {
                  "pods": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1PodStatus",
                      "type": "object",
                      "properties": {
                        "podName": {
                          "type": "string",
                          "description": "Name of the pod which is reporting the status."
                        },
                        "podStatus": {
                          "type": "string",
                          "description": "Overall status of the pod (not this specific deployment). Valid values include: - `active`: Up to date. - `stale` : Recently out of date. Pods that have not reported status in a long time are excluded from the output."
                        },
                        "appVersion": {
                          "type": "string",
                          "description": "Version of the application running in the pod."
                        },
                        "statusCode": {
                          "type": "string",
                          "description": "Code associated with the deployment status."
                        },
                        "podStatusTime": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the pod status was reported in milliseconds since epoch."
                        },
                        "deploymentTime": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the proxy was deployed in milliseconds since epoch."
                        },
                        "deploymentStatus": {
                          "type": "string",
                          "description": "Status of the deployment. Valid values include: - `deployed`: Successful. - `error` : Failed. - `pending` : Pod has not yet reported on the deployment."
                        },
                        "statusCodeDetails": {
                          "type": "string",
                          "description": "Human-readable message associated with the status code."
                        },
                        "deploymentStatusTime": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the deployment status was reported in milliseconds since epoch."
                        }
                      }
                    },
                    "description": "Status reported by runtime pods. This field is not populated for List APIs. **Note**: **This field is deprecated**. Runtime versions 1.3 and above report instance level status rather than pod status."
                  },
                  "state": {
                    "enum": [
                      "RUNTIME_STATE_UNSPECIFIED",
                      "READY",
                      "PROGRESSING",
                      "ERROR"
                    ],
                    "type": "string",
                    "description": "Current state of the deployment. This field is not populated in List APIs.",
                    "enumDescriptions": [
                      "This value should never be returned.",
                      "Runtime has loaded the deployment.",
                      "Deployment is not fully ready in the runtime.",
                      "Encountered an error with the deployment that requires intervention."
                    ]
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "id": "GoogleRpcStatus",
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The status code, which should be an enum value of google.rpc.Code."
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "any",
                              "description": "Properties of the object. Contains field @type with type URL."
                            }
                          },
                          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                        },
                        "message": {
                          "type": "string",
                          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                        }
                      },
                      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
                    },
                    "description": "Errors reported for this deployment. Populated only when state == ERROR. This field is not populated in List APIs."
                  },
                  "apiProxy": {
                    "type": "string",
                    "description": "API proxy."
                  },
                  "revision": {
                    "type": "string",
                    "description": "API proxy revision."
                  },
                  "instances": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1InstanceDeploymentStatus",
                      "type": "object",
                      "properties": {
                        "instance": {
                          "type": "string",
                          "description": "ID of the instance reporting the status."
                        },
                        "deployedRoutes": {
                          "type": "array",
                          "items": {
                            "id": "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute",
                            "type": "object",
                            "properties": {
                              "basepath": {
                                "type": "string",
                                "description": "Base path in the routing table."
                              },
                              "envgroup": {
                                "type": "string",
                                "description": "Environment group where this route is installed."
                              },
                              "percentage": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Percentage of ingress replicas reporting this route."
                              },
                              "environment": {
                                "type": "string",
                                "description": "Destination environment. This will be empty if the route is not yet reported."
                              }
                            },
                            "description": "Route deployed in the ingress routing table."
                          },
                          "description": "Current routes deployed in the ingress routing table. A route which is missing will appear in `missing_routes`."
                        },
                        "deployedRevisions": {
                          "type": "array",
                          "items": {
                            "id": "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision",
                            "type": "object",
                            "properties": {
                              "revision": {
                                "type": "string",
                                "description": "API proxy revision reported as deployed."
                              },
                              "percentage": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Percentage of MP replicas reporting this revision."
                              }
                            },
                            "description": "Revisions deployed in the MPs."
                          },
                          "description": "Revisions currently deployed in MPs."
                        }
                      },
                      "description": "The status of a deployment as reported by a single instance."
                    },
                    "description": "Status reported by each runtime instance. This field is not populated in List APIs."
                  },
                  "environment": {
                    "type": "string",
                    "description": "Environment."
                  },
                  "routeConflicts": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict",
                      "type": "object",
                      "properties": {
                        "description": {
                          "type": "string",
                          "description": "Human-readable description of this conflict."
                        },
                        "environmentGroup": {
                          "type": "string",
                          "description": "Name of the environment group in which this conflict exists."
                        },
                        "conflictingDeployment": {
                          "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment",
                          "type": "object",
                          "properties": {
                            "apiProxy": {
                              "type": "string",
                              "description": "Name of the deployed API proxy revision containing the base path."
                            },
                            "basepath": {
                              "type": "string",
                              "description": "Base path receiving traffic."
                            },
                            "revision": {
                              "type": "string",
                              "description": "Name of the deployed API proxy revision containing the base path."
                            },
                            "environment": {
                              "type": "string",
                              "description": "Name of the environment in which the proxy is deployed."
                            }
                          },
                          "description": "Existing base path/deployment causing the conflict."
                        }
                      },
                      "description": "Describes a routing conflict that may cause a deployment not to receive traffic at some base path."
                    },
                    "description": "Conflicts in the desired state routing configuration. The presence of conflicts does not cause the state to be `ERROR`, but it will mean that some of the deployment's base paths are not routed to its environment. If the conflicts change, the state will transition to `PROGRESSING` until the latest configuration is rolled out to all instances. This field is not populated in List APIs."
                  },
                  "deployStartTime": {
                    "type": "string",
                    "format": "int64",
                    "description": "Time the API proxy was marked `deployed` in the control plane in millisconds since epoch."
                  }
                }
              },
              "description": "List of deployments."
            }
          }
        }
      ]
  organizations.environments.flowhooks.attachSharedFlowToFlowHook:
    description: |-
      Attaches a shared flow to a flow hook.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.flowhooks/attachSharedFlowToFlowHook
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1FlowHook",
          "type": "object",
          "properties": {
            "sharedFlow": {
              "type": "string",
              "description": "Shared flow attached to this flow hook, or empty if there is none attached."
            },
            "description": {
              "type": "string",
              "description": "Description of the flow hook."
            },
            "flowHookPoint": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Where in the API call flow the flow hook is invoked. Must be one of `PreProxyFlowHook`, `PostProxyFlowHook`, `PreTargetFlowHook`, or `PostTargetFlowHook`."
            },
            "continueOnError": {
              "type": "boolean",
              "description": "Optional. Flag that specifies whether execution should continue if the flow hook throws an exception. Set to `true` to continue execution. Set to `false` to stop execution if the flow hook throws an exception. Defaults to `true`."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  organizations.environments.flowhooks.detachSharedFlowFromFlowHook:
    description: |-
      Detaches a shared flow from a flow hook.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.flowhooks/detachSharedFlowFromFlowHook
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.environments.flowhooks.get:
    description: |-
      Returns the name of the shared flow attached to the specified flow hook. If there's no shared flow attached to the flow hook, the API does not return an error; it simply does not return a name in the response.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.flowhooks/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.environments.get:
    description: |-
      Gets environment details.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.environments.getDebugmask:
    description: |-
      Gets the debug mask singleton resource for an environment.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments/getDebugmask
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1DebugMask",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the debug mask."
            },
            "variables": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of variables that should be masked from the debug output."
            },
            "namespaces": {
              "type": "object",
              "description": "Map of namespaces to URIs.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "faultXPaths": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of XPaths that specify the XML elements to be filtered from XML payloads in error flows."
            },
            "requestXPaths": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of XPaths that specify the XML elements to be filtered from XML request message payloads."
            },
            "faultJSONPaths": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of JSON paths that specify the JSON elements to be filtered from JSON payloads in error flows."
            },
            "responseXPaths": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of XPaths that specify the XML elements to be filtered from XML response message payloads."
            },
            "requestJSONPaths": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of JSON paths that specify the JSON elements to be filtered from JSON request message payloads."
            },
            "responseJSONPaths": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of JSON paths that specify the JSON elements to be filtered from JSON response message payloads."
            }
          }
        }
      ]
  organizations.environments.getDeployedConfig:
    description: |-
      Gets the deployed configuration for an environment.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments/getDeployedConfig
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1EnvironmentConfig",
          "type": "object",
          "properties": {
            "uid": {
              "type": "string",
              "description": "Unique ID for the environment configuration. The ID will only change if the environment is deleted and recreated."
            },
            "name": {
              "type": "string",
              "description": "Name of the environment configuration in the following format: `organizations/{org}/environments/{env}/configs/{config}`"
            },
            "targets": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1TargetServerConfig",
                "type": "object",
                "properties": {
                  "host": {
                    "type": "string",
                    "description": "Host name of the target server."
                  },
                  "name": {
                    "type": "string",
                    "description": "Target server revision name in the following format: `organizations/{org}/environments/{env}/targetservers/{targetserver}/revisions/{rev}`"
                  },
                  "port": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Port number for the target server."
                  },
                  "tlsInfo": {
                    "id": "GoogleCloudApigeeV1TlsInfoConfig",
                    "type": "object",
                    "properties": {
                      "ciphers": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of ciphers that are granted access."
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "Flag that specifies whether one-way TLS is enabled. Set to `true` to enable one-way TLS."
                      },
                      "keyAlias": {
                        "type": "string",
                        "description": "Name of the alias used for client-side authentication in the following format: `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`"
                      },
                      "protocols": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of TLS protocols that are granted access."
                      },
                      "commonName": {
                        "id": "GoogleCloudApigeeV1CommonNameConfig",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "matchWildCards": {
                            "type": "boolean"
                          }
                        },
                        "description": "Common name to validate the target server against."
                      },
                      "trustStore": {
                        "type": "string",
                        "description": "Name of the keystore or keystore reference containing trusted certificates for the server in the following format: `organizations/{org}/environments/{env}/keystores/{keystore}` or `organizations/{org}/environments/{env}/references/{reference}`"
                      },
                      "clientAuthEnabled": {
                        "type": "boolean",
                        "description": "Flag that specifies whether client-side authentication is enabled for the target server. Enables two-way TLS."
                      },
                      "keyAliasReference": {
                        "id": "GoogleCloudApigeeV1KeyAliasReference",
                        "type": "object",
                        "properties": {
                          "aliasId": {
                            "type": "string",
                            "description": "Alias ID. Must exist in the keystore referred to by the reference."
                          },
                          "reference": {
                            "type": "string",
                            "description": "Reference name in the following format: `organizations/{org}/environments/{env}/references/{reference}`"
                          }
                        },
                        "description": "Reference name and alias pair to use for client-side authentication."
                      },
                      "ignoreValidationErrors": {
                        "type": "boolean",
                        "description": "Flag that specifies whether to ignore TLS certificate validation errors. Set to `true` to ignore errors."
                      }
                    },
                    "description": "TLS settings for the target server."
                  },
                  "protocol": {
                    "enum": [
                      "PROTOCOL_UNSPECIFIED",
                      "HTTP",
                      "GRPC"
                    ],
                    "type": "string",
                    "description": "The protocol used by this target server.",
                    "enumDescriptions": [
                      "UNSPECIFIED defaults to HTTP for backwards compatibility.",
                      "The TargetServer uses HTTP.",
                      "The TargetServer uses GRPC."
                    ]
                  }
                }
              },
              "description": "List of target servers in the environment. Disabled target servers are not displayed."
            },
            "provider": {
              "type": "string",
              "description": "Used by the Control plane to add context information to help detect the source of the document during diagnostics and debugging."
            },
            "debugMask": {
              "id": "GoogleCloudApigeeV1DebugMask",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the debug mask."
                },
                "variables": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of variables that should be masked from the debug output."
                },
                "namespaces": {
                  "type": "object",
                  "description": "Map of namespaces to URIs.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "faultXPaths": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of XPaths that specify the XML elements to be filtered from XML payloads in error flows."
                },
                "requestXPaths": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of XPaths that specify the XML elements to be filtered from XML request message payloads."
                },
                "faultJSONPaths": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of JSON paths that specify the JSON elements to be filtered from JSON payloads in error flows."
                },
                "responseXPaths": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of XPaths that specify the XML elements to be filtered from XML response message payloads."
                },
                "requestJSONPaths": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of JSON paths that specify the JSON elements to be filtered from JSON request message payloads."
                },
                "responseJSONPaths": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of JSON paths that specify the JSON elements to be filtered from JSON response message payloads."
                }
              },
              "description": "Debug mask that applies to all deployments in the environment."
            },
            "flowhooks": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1FlowHookConfig",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the flow hook in the following format: `organizations/{org}/environments/{env}/flowhooks/{point}`. Valid `point` values include: `PreProxyFlowHook`, `PostProxyFlowHook`, `PreTargetFlowHook`, and `PostTargetFlowHook`"
                  },
                  "sharedFlowName": {
                    "type": "string",
                    "description": "Name of the shared flow to invoke in the following format: `organizations/{org}/sharedflows/{sharedflow}`"
                  },
                  "continueOnError": {
                    "type": "boolean",
                    "description": "Flag that specifies whether the flow should abort after an error in the flow hook. Defaults to `true` (continue on error)."
                  }
                }
              },
              "description": "List of flow hooks in the environment."
            },
            "keystores": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1KeystoreConfig",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Resource name in the following format: `organizations/{org}/environments/{env}/keystores/{keystore}`"
                  },
                  "aliases": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1AliasRevisionConfig",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the alias revision included in the keystore in the following format: `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}/revisions/{rev}`"
                        },
                        "type": {
                          "enum": [
                            "ALIAS_TYPE_UNSPECIFIED",
                            "CERT",
                            "KEY_CERT"
                          ],
                          "type": "string",
                          "enumDescriptions": [
                            "Alias type is not specified.",
                            "Certificate.",
                            "Key/certificate pair."
                          ]
                        },
                        "location": {
                          "type": "string",
                          "description": "Location of the alias file. For example, a Google Cloud Storage URI."
                        }
                      }
                    },
                    "description": "Aliases in the keystore."
                  }
                }
              },
              "description": "List of keystores in the environment."
            },
            "resources": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1ResourceConfig",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Resource name in the following format: `organizations/{org}/environments/{env}/resourcefiles/{type}/{file}/revisions/{rev}` Only environment-scoped resource files are supported."
                  },
                  "location": {
                    "type": "string",
                    "description": "Location of the resource as a URI."
                  }
                }
              },
              "description": "List of resource versions in the environment."
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Time that the environment configuration was created."
            },
            "revisionId": {
              "type": "string",
              "format": "int64",
              "description": "Revision ID of the environment configuration. The higher the value, the more recently the configuration was deployed."
            },
            "deployments": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1DeploymentConfig",
                "type": "object",
                "properties": {
                  "uid": {
                    "type": "string",
                    "description": "Unique ID. The ID will only change if the deployment is deleted and recreated."
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the API or shared flow revision to be deployed in the following format: `organizations/{org}/apis/{api}/revisions/{rev}` or `organizations/{org}/sharedflows/{sharedflow}/revisions/{rev}`"
                  },
                  "basePath": {
                    "type": "string",
                    "description": "Base path where the application will be hosted. Defaults to \"/\"."
                  },
                  "location": {
                    "type": "string",
                    "description": "Location of the API proxy bundle as a URI."
                  },
                  "proxyUid": {
                    "type": "string",
                    "description": "Unique ID of the API proxy revision."
                  },
                  "attributes": {
                    "type": "object",
                    "description": "Additional key-value metadata for the deployment.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              },
              "description": "List of deployments in the environment."
            },
            "pubsubTopic": {
              "type": "string",
              "description": "Name of the PubSub topic for the environment."
            },
            "traceConfig": {
              "id": "GoogleCloudApigeeV1RuntimeTraceConfig",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the trace config in the following format: `organizations/{org}/environment/{env}/traceConfig`"
                },
                "endpoint": {
                  "type": "string",
                  "description": "Endpoint of the exporter."
                },
                "exporter": {
                  "enum": [
                    "EXPORTER_UNSPECIFIED",
                    "JAEGER",
                    "CLOUD_TRACE"
                  ],
                  "type": "string",
                  "description": "Exporter that is used to view the distributed trace captured using OpenCensus. An exporter sends traces to any backend that is capable of consuming them. Recorded spans can be exported by registered exporters.",
                  "enumDescriptions": [
                    "Exporter unspecified",
                    "Jaeger exporter",
                    "Cloudtrace exporter"
                  ]
                },
                "overrides": {
                  "type": "array",
                  "items": {
                    "id": "GoogleCloudApigeeV1RuntimeTraceConfigOverride",
                    "type": "object",
                    "properties": {
                      "uid": {
                        "type": "string",
                        "description": "Unique ID for the configuration override. The ID will only change if the override is deleted and recreated. Corresponds to name's \"override\" field."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the trace config override in the following format: `organizations/{org}/environment/{env}/traceConfig/overrides/{override}`"
                      },
                      "apiProxy": {
                        "type": "string",
                        "description": "Name of the API proxy that will have its trace configuration overridden following format: `organizations/{org}/apis/{api}`"
                      },
                      "revisionId": {
                        "type": "string",
                        "description": "Revision number which can be used by the runtime to detect if the trace config override has changed between two versions."
                      },
                      "samplingConfig": {
                        "id": "GoogleCloudApigeeV1RuntimeTraceSamplingConfig",
                        "type": "object",
                        "properties": {
                          "sampler": {
                            "enum": [
                              "SAMPLER_UNSPECIFIED",
                              "OFF",
                              "PROBABILITY"
                            ],
                            "type": "string",
                            "description": "Sampler of distributed tracing. OFF is the default value.",
                            "enumDescriptions": [
                              "Sampler unspecified.",
                              "OFF means distributed trace is disabled, or the sampling probability is 0.",
                              "PROBABILITY means traces are captured on a probability that defined by sampling_rate. The sampling rate is limited to 0 to 0.5 when this is set."
                            ]
                          },
                          "samplingRate": {
                            "type": "number",
                            "format": "float",
                            "description": "Field sampling rate. This value is only applicable when using the PROBABILITY sampler. The supported values are > 0 and <= 0.5."
                          }
                        },
                        "description": "Trace configuration override for a specific API proxy in an environment."
                      },
                      "revisionCreateTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "The timestamp that the revision was created or updated."
                      }
                    },
                    "description": "NEXT ID: 7 Trace configuration override for a specific API proxy in an environment."
                  },
                  "description": "List of trace configuration overrides for spicific API proxies."
                },
                "revisionId": {
                  "type": "string",
                  "description": "Revision number which can be used by the runtime to detect if the trace config has changed between two versions."
                },
                "samplingConfig": {
                  "id": "GoogleCloudApigeeV1RuntimeTraceSamplingConfig",
                  "type": "object",
                  "properties": {
                    "sampler": {
                      "enum": [
                        "SAMPLER_UNSPECIFIED",
                        "OFF",
                        "PROBABILITY"
                      ],
                      "type": "string",
                      "description": "Sampler of distributed tracing. OFF is the default value.",
                      "enumDescriptions": [
                        "Sampler unspecified.",
                        "OFF means distributed trace is disabled, or the sampling probability is 0.",
                        "PROBABILITY means traces are captured on a probability that defined by sampling_rate. The sampling rate is limited to 0 to 0.5 when this is set."
                      ]
                    },
                    "samplingRate": {
                      "type": "number",
                      "format": "float",
                      "description": "Field sampling rate. This value is only applicable when using the PROBABILITY sampler. The supported values are > 0 and <= 0.5."
                    }
                  },
                  "description": "Trace configuration for all API proxies in an environment."
                },
                "revisionCreateTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "The timestamp that the revision was created or updated."
                }
              },
              "description": "Trace configurations. Contains config for the environment and config overrides for specific API proxies."
            },
            "featureFlags": {
              "type": "object",
              "description": "Feature flags inherited from the organization and environment.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "dataCollectors": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1DataCollectorConfig",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the data collector in the following format: `organizations/{org}/datacollectors/{datacollector}`"
                  },
                  "type": {
                    "enum": [
                      "TYPE_UNSPECIFIED",
                      "INTEGER",
                      "FLOAT",
                      "STRING",
                      "BOOLEAN",
                      "DATETIME"
                    ],
                    "type": "string",
                    "description": "Data type accepted by the data collector.",
                    "enumDescriptions": [
                      "For future compatibility.",
                      "For integer values.",
                      "For float values.",
                      "For string values.",
                      "For boolean values.",
                      "For datetime values."
                    ]
                  }
                },
                "description": "Data collector and its configuration."
              },
              "description": "List of data collectors used by the deployments in the environment."
            },
            "sequenceNumber": {
              "type": "string",
              "format": "int64",
              "description": "DEPRECATED: Use revision_id."
            },
            "resourceReferences": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1ReferenceConfig",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the reference in the following format: `organizations/{org}/environments/{env}/references/{reference}`"
                  },
                  "resourceName": {
                    "type": "string",
                    "description": "Name of the referenced resource in the following format: `organizations/{org}/environments/{env}/keystores/{keystore}` Only references to keystore resources are supported."
                  }
                }
              },
              "description": "List of resource references in the environment."
            }
          }
        }
      ]
  organizations.environments.getIamPolicy:
    description: |-
      Gets the IAM policy on an environment. For more information, see [Manage users, roles, and permissions using the API](https://cloud.google.com/apigee/docs/api-platform/system-administration/manage-users-roles). You must have the `apigee.environments.getIamPolicy` permission to call this API.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments/getIamPolicy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleIamV1Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "GoogleIamV1Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "GoogleTypeExpr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            },
            "auditConfigs": {
              "type": "array",
              "items": {
                "id": "GoogleIamV1AuditConfig",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                  },
                  "auditLogConfigs": {
                    "type": "array",
                    "items": {
                      "id": "GoogleIamV1AuditLogConfig",
                      "type": "object",
                      "properties": {
                        "logType": {
                          "enum": [
                            "LOG_TYPE_UNSPECIFIED",
                            "ADMIN_READ",
                            "DATA_WRITE",
                            "DATA_READ"
                          ],
                          "type": "string",
                          "description": "The log type that this config enables.",
                          "enumDescriptions": [
                            "Default case. Should never be this.",
                            "Admin reads. Example: CloudIAM getIamPolicy",
                            "Data writes. Example: CloudSQL Users create",
                            "Data reads. Example: CloudSQL Users list"
                          ]
                        },
                        "exemptedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                        }
                      },
                      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                    },
                    "description": "The configuration for logging of each type of permission."
                  }
                },
                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
              },
              "description": "Specifies cloud audit logging configuration for this policy."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  organizations.environments.getTraceConfig:
    description: |-
      Get distributed trace configuration in an environment.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments/getTraceConfig
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1TraceConfig",
          "type": "object",
          "properties": {
            "endpoint": {
              "type": "string",
              "description": "Required. Endpoint of the exporter."
            },
            "exporter": {
              "enum": [
                "EXPORTER_UNSPECIFIED",
                "JAEGER",
                "CLOUD_TRACE"
              ],
              "type": "string",
              "description": "Required. Exporter that is used to view the distributed trace captured using OpenCensus. An exporter sends traces to any backend that is capable of consuming them. Recorded spans can be exported by registered exporters.",
              "enumDescriptions": [
                "Exporter unspecified",
                "Jaeger exporter",
                "Cloudtrace exporter"
              ]
            },
            "samplingConfig": {
              "id": "GoogleCloudApigeeV1TraceSamplingConfig",
              "type": "object",
              "properties": {
                "sampler": {
                  "enum": [
                    "SAMPLER_UNSPECIFIED",
                    "OFF",
                    "PROBABILITY"
                  ],
                  "type": "string",
                  "description": "Sampler of distributed tracing. OFF is the default value.",
                  "enumDescriptions": [
                    "Sampler unspecified.",
                    "OFF means distributed trace is disabled, or the sampling probability is 0.",
                    "PROBABILITY means traces are captured on a probability that defined by sampling_rate. The sampling rate is limited to 0 to 0.5 when this is set."
                  ]
                },
                "samplingRate": {
                  "type": "number",
                  "format": "float",
                  "description": "Field sampling rate. This value is only applicable when using the PROBABILITY sampler. The supported values are > 0 and <= 0.5."
                }
              },
              "description": "Distributed trace configuration for all API proxies in an environment. You can also override the configuration for a specific API proxy using the distributed trace configuration overrides API."
            }
          },
          "description": "TraceConfig defines the configurations in an environment of distributed trace."
        }
      ]
  organizations.environments.keystores.aliases.create:
    description: |-
      Creates an alias from a key/certificate pair. The structure of the request is controlled by the `format` query parameter: - `keycertfile` - Separate PEM-encoded key and certificate files are uploaded. Set `Content-Type: multipart/form-data` and include the `keyFile`, `certFile`, and `password` (if keys are encrypted) fields in the request body. If uploading to a truststore, omit `keyFile`. - `pkcs12` - A PKCS12 file is uploaded. Set `Content-Type: multipart/form-data`, provide the file in the `file` field, and include the `password` field if the file is encrypted in the request body. - `selfsignedcert` - A new private key and certificate are generated. Set `Content-Type: application/json` and include CertificateGenerationSpec in the request body.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.keystores.aliases/create
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1Alias",
          "type": "object",
          "properties": {
            "type": {
              "enum": [
                "ALIAS_TYPE_UNSPECIFIED",
                "CERT",
                "KEY_CERT"
              ],
              "type": "string",
              "description": "Type of alias.",
              "enumDescriptions": [
                "Alias type is not specified.",
                "Certificate.",
                "Key/certificate pair."
              ]
            },
            "alias": {
              "type": "string",
              "description": "Resource ID for this alias. Values must match the regular expression `[^/]{1,255}`."
            },
            "certsInfo": {
              "id": "GoogleCloudApigeeV1Certificate",
              "type": "object",
              "properties": {
                "certInfo": {
                  "type": "array",
                  "items": {
                    "id": "GoogleCloudApigeeV1CertInfo",
                    "type": "object",
                    "properties": {
                      "issuer": {
                        "type": "string",
                        "description": "X.509 issuer."
                      },
                      "isValid": {
                        "type": "string",
                        "description": "Flag that specifies whether the certificate is valid. Flag is set to `Yes` if the certificate is valid, `No` if expired, or `Not yet` if not yet valid."
                      },
                      "subject": {
                        "type": "string",
                        "description": "X.509 subject."
                      },
                      "version": {
                        "type": "integer",
                        "format": "int32",
                        "description": "X.509 version."
                      },
                      "publicKey": {
                        "type": "string",
                        "description": "Public key component of the X.509 subject public key info."
                      },
                      "validFrom": {
                        "type": "string",
                        "format": "int64",
                        "description": "X.509 `notBefore` validity period in milliseconds since epoch."
                      },
                      "expiryDate": {
                        "type": "string",
                        "format": "int64",
                        "description": "X.509 `notAfter` validity period in milliseconds since epoch."
                      },
                      "sigAlgName": {
                        "type": "string",
                        "description": "X.509 signatureAlgorithm."
                      },
                      "serialNumber": {
                        "type": "string",
                        "description": "X.509 serial number."
                      },
                      "basicConstraints": {
                        "type": "string",
                        "description": "X.509 basic constraints extension."
                      },
                      "subjectAlternativeNames": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "X.509 subject alternative names (SANs) extension."
                      }
                    },
                    "description": "X.509 certificate as defined in RFC 5280."
                  },
                  "description": "Chain of certificates under this name."
                }
              },
              "description": "Chain of certificates under this alias."
            }
          },
          "description": "Reference to a certificate or key/certificate pair."
        }
      ]
  organizations.environments.keystores.aliases.csr:
    description: |-
      Generates a PKCS #10 Certificate Signing Request for the private key in an alias.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.keystores.aliases/csr
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleApiHttpBody",
          "type": "object",
          "properties": {
            "data": {
              "type": "string",
              "format": "byte",
              "description": "The HTTP request/response body as raw binary."
            },
            "extensions": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": {
                  "type": "any",
                  "description": "Properties of the object. Contains field @type with type URL."
                }
              },
              "description": "Application specific response metadata. Must be set in the first response for streaming APIs."
            },
            "contentType": {
              "type": "string",
              "description": "The HTTP Content-Type header value specifying the content type of the body."
            }
          },
          "description": "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged."
        }
      ]
  organizations.environments.keystores.aliases.delete:
    description: |-
      Deletes an alias.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.keystores.aliases/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1Alias",
          "type": "object",
          "properties": {
            "type": {
              "enum": [
                "ALIAS_TYPE_UNSPECIFIED",
                "CERT",
                "KEY_CERT"
              ],
              "type": "string",
              "description": "Type of alias.",
              "enumDescriptions": [
                "Alias type is not specified.",
                "Certificate.",
                "Key/certificate pair."
              ]
            },
            "alias": {
              "type": "string",
              "description": "Resource ID for this alias. Values must match the regular expression `[^/]{1,255}`."
            },
            "certsInfo": {
              "id": "GoogleCloudApigeeV1Certificate",
              "type": "object",
              "properties": {
                "certInfo": {
                  "type": "array",
                  "items": {
                    "id": "GoogleCloudApigeeV1CertInfo",
                    "type": "object",
                    "properties": {
                      "issuer": {
                        "type": "string",
                        "description": "X.509 issuer."
                      },
                      "isValid": {
                        "type": "string",
                        "description": "Flag that specifies whether the certificate is valid. Flag is set to `Yes` if the certificate is valid, `No` if expired, or `Not yet` if not yet valid."
                      },
                      "subject": {
                        "type": "string",
                        "description": "X.509 subject."
                      },
                      "version": {
                        "type": "integer",
                        "format": "int32",
                        "description": "X.509 version."
                      },
                      "publicKey": {
                        "type": "string",
                        "description": "Public key component of the X.509 subject public key info."
                      },
                      "validFrom": {
                        "type": "string",
                        "format": "int64",
                        "description": "X.509 `notBefore` validity period in milliseconds since epoch."
                      },
                      "expiryDate": {
                        "type": "string",
                        "format": "int64",
                        "description": "X.509 `notAfter` validity period in milliseconds since epoch."
                      },
                      "sigAlgName": {
                        "type": "string",
                        "description": "X.509 signatureAlgorithm."
                      },
                      "serialNumber": {
                        "type": "string",
                        "description": "X.509 serial number."
                      },
                      "basicConstraints": {
                        "type": "string",
                        "description": "X.509 basic constraints extension."
                      },
                      "subjectAlternativeNames": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "X.509 subject alternative names (SANs) extension."
                      }
                    },
                    "description": "X.509 certificate as defined in RFC 5280."
                  },
                  "description": "Chain of certificates under this name."
                }
              },
              "description": "Chain of certificates under this alias."
            }
          },
          "description": "Reference to a certificate or key/certificate pair."
        }
      ]
  organizations.environments.keystores.aliases.get:
    description: |-
      Gets an alias.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.keystores.aliases/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1Alias",
          "type": "object",
          "properties": {
            "type": {
              "enum": [
                "ALIAS_TYPE_UNSPECIFIED",
                "CERT",
                "KEY_CERT"
              ],
              "type": "string",
              "description": "Type of alias.",
              "enumDescriptions": [
                "Alias type is not specified.",
                "Certificate.",
                "Key/certificate pair."
              ]
            },
            "alias": {
              "type": "string",
              "description": "Resource ID for this alias. Values must match the regular expression `[^/]{1,255}`."
            },
            "certsInfo": {
              "id": "GoogleCloudApigeeV1Certificate",
              "type": "object",
              "properties": {
                "certInfo": {
                  "type": "array",
                  "items": {
                    "id": "GoogleCloudApigeeV1CertInfo",
                    "type": "object",
                    "properties": {
                      "issuer": {
                        "type": "string",
                        "description": "X.509 issuer."
                      },
                      "isValid": {
                        "type": "string",
                        "description": "Flag that specifies whether the certificate is valid. Flag is set to `Yes` if the certificate is valid, `No` if expired, or `Not yet` if not yet valid."
                      },
                      "subject": {
                        "type": "string",
                        "description": "X.509 subject."
                      },
                      "version": {
                        "type": "integer",
                        "format": "int32",
                        "description": "X.509 version."
                      },
                      "publicKey": {
                        "type": "string",
                        "description": "Public key component of the X.509 subject public key info."
                      },
                      "validFrom": {
                        "type": "string",
                        "format": "int64",
                        "description": "X.509 `notBefore` validity period in milliseconds since epoch."
                      },
                      "expiryDate": {
                        "type": "string",
                        "format": "int64",
                        "description": "X.509 `notAfter` validity period in milliseconds since epoch."
                      },
                      "sigAlgName": {
                        "type": "string",
                        "description": "X.509 signatureAlgorithm."
                      },
                      "serialNumber": {
                        "type": "string",
                        "description": "X.509 serial number."
                      },
                      "basicConstraints": {
                        "type": "string",
                        "description": "X.509 basic constraints extension."
                      },
                      "subjectAlternativeNames": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "X.509 subject alternative names (SANs) extension."
                      }
                    },
                    "description": "X.509 certificate as defined in RFC 5280."
                  },
                  "description": "Chain of certificates under this name."
                }
              },
              "description": "Chain of certificates under this alias."
            }
          },
          "description": "Reference to a certificate or key/certificate pair."
        }
      ]
  organizations.environments.keystores.aliases.getCertificate:
    description: |-
      Gets the certificate from an alias in PEM-encoded form.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.keystores.aliases/getCertificate
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleApiHttpBody",
          "type": "object",
          "properties": {
            "data": {
              "type": "string",
              "format": "byte",
              "description": "The HTTP request/response body as raw binary."
            },
            "extensions": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": {
                  "type": "any",
                  "description": "Properties of the object. Contains field @type with type URL."
                }
              },
              "description": "Application specific response metadata. Must be set in the first response for streaming APIs."
            },
            "contentType": {
              "type": "string",
              "description": "The HTTP Content-Type header value specifying the content type of the body."
            }
          },
          "description": "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged."
        }
      ]
  organizations.environments.keystores.aliases.update:
    description: |-
      Updates the certificate in an alias.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.keystores.aliases/update
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1Alias",
          "type": "object",
          "properties": {
            "type": {
              "enum": [
                "ALIAS_TYPE_UNSPECIFIED",
                "CERT",
                "KEY_CERT"
              ],
              "type": "string",
              "description": "Type of alias.",
              "enumDescriptions": [
                "Alias type is not specified.",
                "Certificate.",
                "Key/certificate pair."
              ]
            },
            "alias": {
              "type": "string",
              "description": "Resource ID for this alias. Values must match the regular expression `[^/]{1,255}`."
            },
            "certsInfo": {
              "id": "GoogleCloudApigeeV1Certificate",
              "type": "object",
              "properties": {
                "certInfo": {
                  "type": "array",
                  "items": {
                    "id": "GoogleCloudApigeeV1CertInfo",
                    "type": "object",
                    "properties": {
                      "issuer": {
                        "type": "string",
                        "description": "X.509 issuer."
                      },
                      "isValid": {
                        "type": "string",
                        "description": "Flag that specifies whether the certificate is valid. Flag is set to `Yes` if the certificate is valid, `No` if expired, or `Not yet` if not yet valid."
                      },
                      "subject": {
                        "type": "string",
                        "description": "X.509 subject."
                      },
                      "version": {
                        "type": "integer",
                        "format": "int32",
                        "description": "X.509 version."
                      },
                      "publicKey": {
                        "type": "string",
                        "description": "Public key component of the X.509 subject public key info."
                      },
                      "validFrom": {
                        "type": "string",
                        "format": "int64",
                        "description": "X.509 `notBefore` validity period in milliseconds since epoch."
                      },
                      "expiryDate": {
                        "type": "string",
                        "format": "int64",
                        "description": "X.509 `notAfter` validity period in milliseconds since epoch."
                      },
                      "sigAlgName": {
                        "type": "string",
                        "description": "X.509 signatureAlgorithm."
                      },
                      "serialNumber": {
                        "type": "string",
                        "description": "X.509 serial number."
                      },
                      "basicConstraints": {
                        "type": "string",
                        "description": "X.509 basic constraints extension."
                      },
                      "subjectAlternativeNames": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "X.509 subject alternative names (SANs) extension."
                      }
                    },
                    "description": "X.509 certificate as defined in RFC 5280."
                  },
                  "description": "Chain of certificates under this name."
                }
              },
              "description": "Chain of certificates under this alias."
            }
          },
          "description": "Reference to a certificate or key/certificate pair."
        }
      ]
  organizations.environments.keystores.create:
    description: |-
      Creates a keystore or truststore. - Keystore: Contains certificates and their associated keys. - Truststore: Contains trusted certificates used to validate a server's certificate. These certificates are typically self-signed certificates or certificates that are not signed by a trusted CA.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.keystores/create
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1Keystore",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Required. Resource ID for this keystore. Values must match the regular expression `[\\w[:space:]-.]{1,255}`."
            },
            "aliases": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "Output only. Aliases in this keystore."
            }
          },
          "description": "Datastore for Certificates and Aliases."
        }
      ]
      outputs: [
        {}
      ]
  organizations.environments.keystores.delete:
    description: |-
      Deletes a keystore or truststore.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.keystores/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.environments.keystores.get:
    description: |-
      Gets a keystore or truststore.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.keystores/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.environments.keyvaluemaps.create:
    description: |-
      Creates a key value map in an environment.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.keyvaluemaps/create
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1KeyValueMap",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Required. The id of the key value map."
            },
            "encrypted": {
              "type": "boolean",
              "description": "Optional. If `true` entry values will be encrypted."
            }
          },
          "description": "A collection of key, value string pairs"
        }
      ]
      outputs: [
        {}
      ]
  organizations.environments.keyvaluemaps.delete:
    description: |-
      Delete a key value map in an environment.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.keyvaluemaps/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.environments.optimizedStats.get:
    description: |-
      This api is similar to GetStats except that the response is less verbose. In the current scheme, a query parameter _optimized instructs Edge Analytics to change the response but since this behavior is not possible with protocol buffer and since this parameter is predominantly used by Edge UI, we are introducing a separate api.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.optimizedStats/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1OptimizedStats",
          "type": "object",
          "properties": {
            "Response": {
              "id": "GoogleCloudApigeeV1OptimizedStatsResponse",
              "type": "object",
              "properties": {
                "stats": {
                  "id": "GoogleCloudApigeeV1OptimizedStatsNode",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "any"
                      }
                    }
                  },
                  "description": "This field contains a stats results."
                },
                "TimeUnit": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "int64"
                  },
                  "description": "This field contains a list of time unit values. Time unit refers to an epoch timestamp value."
                },
                "metaData": {
                  "id": "GoogleCloudApigeeV1Metadata",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of error messages as strings."
                    },
                    "notices": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of additional information such as data source, if result was truncated etc. E.g \"notices\": [ \"Source:Postgres\", \"PG Host:uappg0rw.e2e.apigeeks.net\", \"query served by:4b64601e-40de-4eb1-bfb9-eeee7ac929ed\", \"Table used: edge.api.uapgroup2.agg_api\" ]"
                    }
                  },
                  "description": "This field contains metadata information about the query executed"
                },
                "resultTruncated": {
                  "type": "boolean",
                  "description": "This ia a boolean field to indicate if the results were truncated based on the limit parameter."
                }
              },
              "description": "This field wraps the stats response for Js Optimized Scenario with a Response key. E.g. { \"Response\": { \"TimeUnit\": [], \"metaData\": { \"errors\": [], \"notices\": [ \"Source:Postgres\", \"Table used: edge.api.aaxgroup001.agg_api\", \"PG Host:ruappg08-ro.production.apigeeks.net\", \"query served by:80c4ebca-6a10-4a2e-8faf-c60c1ee306ca\" ] }, \"resultTruncated\": false, \"stats\": { \"data\": [ { \"identifier\": { \"names\": [ \"apiproxy\" ], \"values\": [ \"sirjee\" ] }, \"metric\": [ { \"env\": \"prod\", \"name\": \"sum(message_count)\", \"values\": [ 36.0 ] }, { \"env\": \"prod\", \"name\": \"sum(is_error)\", \"values\": [ 36.0 ] } ] } ] } } }"
            }
          }
        }
      ]
  organizations.environments.queries.create:
    description: |-
      Submit a query to be processed in the background. If the submission of the query succeeds, the API returns a 201 status and an ID that refer to the query. In addition to the HTTP status 201, the `state` of "enqueued" means that the request succeeded.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.queries/create
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1Query",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Asynchronous Query Name."
            },
            "limit": {
              "type": "integer",
              "format": "int32",
              "description": "Maximum number of rows that can be returned in the result."
            },
            "filter": {
              "type": "string",
              "description": "Boolean expression that can be used to filter data. Filter expressions can be combined using AND/OR terms and should be fully parenthesized to avoid ambiguity. See Analytics metrics, dimensions, and filters reference https://docs.apigee.com/api-platform/analytics/analytics-reference for more information on the fields available to filter on. For more information on the tokens that you use to build filter expressions, see Filter expression syntax. https://docs.apigee.com/api-platform/analytics/asynch-reports-api#filter-expression-syntax"
            },
            "metrics": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1QueryMetric",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Required. Metric name."
                  },
                  "alias": {
                    "type": "string",
                    "description": "Alias for the metric. Alias will be used to replace metric name in query results."
                  },
                  "value": {
                    "type": "string",
                    "description": "Operand value should be provided when operator is set."
                  },
                  "function": {
                    "type": "string",
                    "description": "Aggregation function: avg, min, max, or sum."
                  },
                  "operator": {
                    "type": "string",
                    "description": "One of `+`, `-`, `/`, `%`, `*`."
                  }
                },
                "description": "More info about Metric: https://docs.apigee.com/api-platform/analytics/analytics-reference#metrics"
              },
              "description": "A list of Metrics."
            },
            "timeRange": {
              "type": "any",
              "description": "Required. Time range for the query. Can use the following predefined strings to specify the time range: `last60minutes` `last24hours` `last7days` Or, specify the timeRange as a structure describing start and end timestamps in the ISO format: yyyy-mm-ddThh:mm:ssZ. Example: \"timeRange\": { \"start\": \"2018-07-29T00:13:00Z\", \"end\": \"2018-08-01T00:18:00Z\" }"
            },
            "dimensions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of dimensions. https://docs.apigee.com/api-platform/analytics/analytics-reference#dimensions"
            },
            "csvDelimiter": {
              "type": "string",
              "description": "Delimiter used in the CSV file, if `outputFormat` is set to `csv`. Defaults to the `,` (comma) character. Supported delimiter characters include comma (`,`), pipe (`|`), and tab (`\\t`)."
            },
            "outputFormat": {
              "type": "string",
              "description": "Valid values include: `csv` or `json`. Defaults to `json`. Note: Configure the delimiter for CSV output using the csvDelimiter property."
            },
            "groupByTimeUnit": {
              "type": "string",
              "description": "Time unit used to group the result set. Valid values include: second, minute, hour, day, week, or month. If a query includes groupByTimeUnit, then the result is an aggregation based on the specified time unit and the resultant timestamp does not include milliseconds precision. If a query omits groupByTimeUnit, then the resultant timestamp includes milliseconds precision."
            },
            "envgroupHostname": {
              "type": "string",
              "description": "Hostname needs to be specified if query intends to run at host level. This field is only allowed when query is submitted by CreateHostAsyncQuery where analytics data will be grouped by organization and hostname."
            },
            "reportDefinitionId": {
              "type": "string",
              "description": "Asynchronous Report ID."
            }
          }
        }
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1AsyncQuery",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Asynchronous Query Name."
            },
            "self": {
              "type": "string",
              "description": "Self link of the query. Example: `/organizations/myorg/environments/myenv/queries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd` or following format if query is running at host level: `/organizations/myorg/hostQueries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd`"
            },
            "error": {
              "type": "string",
              "description": "Error is set when query fails."
            },
            "state": {
              "type": "string",
              "description": "Query state could be \"enqueued\", \"running\", \"completed\", \"failed\"."
            },
            "result": {
              "id": "GoogleCloudApigeeV1AsyncQueryResult",
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "description": "Self link of the query results. Example: `/organizations/myorg/environments/myenv/queries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd/result` or following format if query is running at host level: `/organizations/myorg/hostQueries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd/result`"
                },
                "expires": {
                  "type": "string",
                  "description": "Query result will be unaccessable after this time."
                }
              },
              "description": "Result is available only after the query is completed."
            },
            "created": {
              "type": "string",
              "description": "Creation time of the query."
            },
            "updated": {
              "type": "string",
              "description": "Last updated timestamp for the query."
            },
            "resultRows": {
              "type": "string",
              "format": "int64",
              "description": "ResultRows is available only after the query is completed."
            },
            "queryParams": {
              "id": "GoogleCloudApigeeV1QueryMetadata",
              "type": "object",
              "properties": {
                "metrics": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Metrics of the AsyncQuery. Example: [\"name:message_count,func:sum,alias:sum_message_count\"]"
                },
                "timeUnit": {
                  "type": "string",
                  "description": "Query GroupBy time unit."
                },
                "dimensions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Dimensions of the AsyncQuery."
                },
                "endTimestamp": {
                  "type": "string",
                  "description": "End timestamp of the query range."
                },
                "outputFormat": {
                  "type": "string",
                  "description": "Output format."
                },
                "startTimestamp": {
                  "type": "string",
                  "description": "Start timestamp of the query range."
                }
              },
              "description": "Contains information like metrics, dimenstions etc of the AsyncQuery."
            },
            "executionTime": {
              "type": "string",
              "description": "ExecutionTime is available only after the query is completed."
            },
            "resultFileSize": {
              "type": "string",
              "description": "ResultFileSize is available only after the query is completed."
            },
            "envgroupHostname": {
              "type": "string",
              "description": "Hostname is available only when query is executed at host level."
            },
            "reportDefinitionId": {
              "type": "string",
              "description": "Asynchronous Report ID."
            }
          }
        }
      ]
  organizations.environments.queries.get:
    description: |-
      Get query status If the query is still in progress, the `state` is set to "running" After the query has completed successfully, `state` is set to "completed"
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.queries/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1AsyncQuery",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Asynchronous Query Name."
            },
            "self": {
              "type": "string",
              "description": "Self link of the query. Example: `/organizations/myorg/environments/myenv/queries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd` or following format if query is running at host level: `/organizations/myorg/hostQueries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd`"
            },
            "error": {
              "type": "string",
              "description": "Error is set when query fails."
            },
            "state": {
              "type": "string",
              "description": "Query state could be \"enqueued\", \"running\", \"completed\", \"failed\"."
            },
            "result": {
              "id": "GoogleCloudApigeeV1AsyncQueryResult",
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "description": "Self link of the query results. Example: `/organizations/myorg/environments/myenv/queries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd/result` or following format if query is running at host level: `/organizations/myorg/hostQueries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd/result`"
                },
                "expires": {
                  "type": "string",
                  "description": "Query result will be unaccessable after this time."
                }
              },
              "description": "Result is available only after the query is completed."
            },
            "created": {
              "type": "string",
              "description": "Creation time of the query."
            },
            "updated": {
              "type": "string",
              "description": "Last updated timestamp for the query."
            },
            "resultRows": {
              "type": "string",
              "format": "int64",
              "description": "ResultRows is available only after the query is completed."
            },
            "queryParams": {
              "id": "GoogleCloudApigeeV1QueryMetadata",
              "type": "object",
              "properties": {
                "metrics": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Metrics of the AsyncQuery. Example: [\"name:message_count,func:sum,alias:sum_message_count\"]"
                },
                "timeUnit": {
                  "type": "string",
                  "description": "Query GroupBy time unit."
                },
                "dimensions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Dimensions of the AsyncQuery."
                },
                "endTimestamp": {
                  "type": "string",
                  "description": "End timestamp of the query range."
                },
                "outputFormat": {
                  "type": "string",
                  "description": "Output format."
                },
                "startTimestamp": {
                  "type": "string",
                  "description": "Start timestamp of the query range."
                }
              },
              "description": "Contains information like metrics, dimenstions etc of the AsyncQuery."
            },
            "executionTime": {
              "type": "string",
              "description": "ExecutionTime is available only after the query is completed."
            },
            "resultFileSize": {
              "type": "string",
              "description": "ResultFileSize is available only after the query is completed."
            },
            "envgroupHostname": {
              "type": "string",
              "description": "Hostname is available only when query is executed at host level."
            },
            "reportDefinitionId": {
              "type": "string",
              "description": "Asynchronous Report ID."
            }
          }
        }
      ]
  organizations.environments.queries.getResult:
    description: |-
      After the query is completed, use this API to retrieve the results. If the request succeeds, and there is a non-zero result set, the result is downloaded to the client as a zipped JSON file. The name of the downloaded file will be: OfflineQueryResult-.zip Example: `OfflineQueryResult-9cfc0d85-0f30-46d6-ae6f-318d0cb961bd.zip`
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.queries/getResult
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleApiHttpBody",
          "type": "object",
          "properties": {
            "data": {
              "type": "string",
              "format": "byte",
              "description": "The HTTP request/response body as raw binary."
            },
            "extensions": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": {
                  "type": "any",
                  "description": "Properties of the object. Contains field @type with type URL."
                }
              },
              "description": "Application specific response metadata. Must be set in the first response for streaming APIs."
            },
            "contentType": {
              "type": "string",
              "description": "The HTTP Content-Type header value specifying the content type of the body."
            }
          },
          "description": "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged."
        }
      ]
  organizations.environments.queries.list:
    description: |-
      Return a list of Asynchronous Queries
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.queries/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ListAsyncQueriesResponse",
          "type": "object",
          "properties": {
            "queries": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1AsyncQuery",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Asynchronous Query Name."
                  },
                  "self": {
                    "type": "string",
                    "description": "Self link of the query. Example: `/organizations/myorg/environments/myenv/queries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd` or following format if query is running at host level: `/organizations/myorg/hostQueries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd`"
                  },
                  "error": {
                    "type": "string",
                    "description": "Error is set when query fails."
                  },
                  "state": {
                    "type": "string",
                    "description": "Query state could be \"enqueued\", \"running\", \"completed\", \"failed\"."
                  },
                  "result": {
                    "id": "GoogleCloudApigeeV1AsyncQueryResult",
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "description": "Self link of the query results. Example: `/organizations/myorg/environments/myenv/queries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd/result` or following format if query is running at host level: `/organizations/myorg/hostQueries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd/result`"
                      },
                      "expires": {
                        "type": "string",
                        "description": "Query result will be unaccessable after this time."
                      }
                    },
                    "description": "Result is available only after the query is completed."
                  },
                  "created": {
                    "type": "string",
                    "description": "Creation time of the query."
                  },
                  "updated": {
                    "type": "string",
                    "description": "Last updated timestamp for the query."
                  },
                  "resultRows": {
                    "type": "string",
                    "format": "int64",
                    "description": "ResultRows is available only after the query is completed."
                  },
                  "queryParams": {
                    "id": "GoogleCloudApigeeV1QueryMetadata",
                    "type": "object",
                    "properties": {
                      "metrics": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Metrics of the AsyncQuery. Example: [\"name:message_count,func:sum,alias:sum_message_count\"]"
                      },
                      "timeUnit": {
                        "type": "string",
                        "description": "Query GroupBy time unit."
                      },
                      "dimensions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Dimensions of the AsyncQuery."
                      },
                      "endTimestamp": {
                        "type": "string",
                        "description": "End timestamp of the query range."
                      },
                      "outputFormat": {
                        "type": "string",
                        "description": "Output format."
                      },
                      "startTimestamp": {
                        "type": "string",
                        "description": "Start timestamp of the query range."
                      }
                    },
                    "description": "Contains information like metrics, dimenstions etc of the AsyncQuery."
                  },
                  "executionTime": {
                    "type": "string",
                    "description": "ExecutionTime is available only after the query is completed."
                  },
                  "resultFileSize": {
                    "type": "string",
                    "description": "ResultFileSize is available only after the query is completed."
                  },
                  "envgroupHostname": {
                    "type": "string",
                    "description": "Hostname is available only when query is executed at host level."
                  },
                  "reportDefinitionId": {
                    "type": "string",
                    "description": "Asynchronous Report ID."
                  }
                }
              },
              "description": "The asynchronous queries belong to requested resource name."
            }
          },
          "description": "The response for ListAsyncQueries."
        }
      ]
  organizations.environments.references.create:
    description: |-
      Creates a Reference in the specified environment.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.references/create
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1Reference",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Required. The resource id of this reference. Values must match the regular expression [\\w\\s\\-.]+."
            },
            "refers": {
              "type": "string",
              "description": "Required. The id of the resource to which this reference refers. Must be the id of a resource that exists in the parent environment and is of the given resource_type."
            },
            "description": {
              "type": "string",
              "description": "Optional. A human-readable description of this reference."
            },
            "resourceType": {
              "type": "string",
              "description": "The type of resource referred to by this reference. Valid values are 'KeyStore' or 'TrustStore'."
            }
          },
          "description": "A Reference configuration. References must refer to a keystore that also exists in the parent environment."
        }
      ]
      outputs: [
        {}
      ]
  organizations.environments.references.delete:
    description: |-
      Deletes a Reference from an environment. Returns the deleted Reference resource.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.references/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.environments.references.get:
    description: |-
      Gets a Reference resource.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.references/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.environments.references.update:
    description: |-
      Updates an existing Reference. Note that this operation has PUT semantics; it will replace the entirety of the existing Reference with the resource in the request body.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.references/update
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1Reference",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Required. The resource id of this reference. Values must match the regular expression [\\w\\s\\-.]+."
            },
            "refers": {
              "type": "string",
              "description": "Required. The id of the resource to which this reference refers. Must be the id of a resource that exists in the parent environment and is of the given resource_type."
            },
            "description": {
              "type": "string",
              "description": "Optional. A human-readable description of this reference."
            },
            "resourceType": {
              "type": "string",
              "description": "The type of resource referred to by this reference. Valid values are 'KeyStore' or 'TrustStore'."
            }
          },
          "description": "A Reference configuration. References must refer to a keystore that also exists in the parent environment."
        }
      ]
      outputs: [
        {}
      ]
  organizations.environments.resourcefiles.create:
    description: |-
      Creates a resource file. Specify the `Content-Type` as `application/octet-stream` or `multipart/form-data`. For more information about resource files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.resourcefiles/create
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ResourceFile",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "ID of the resource file."
            },
            "type": {
              "type": "string",
              "description": "Resource file type. {{ resource_file_type }}"
            }
          },
          "description": "Metadata about a resource file."
        }
      ]
  organizations.environments.resourcefiles.delete:
    description: |-
      Deletes a resource file. For more information about resource files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.resourcefiles/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ResourceFile",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "ID of the resource file."
            },
            "type": {
              "type": "string",
              "description": "Resource file type. {{ resource_file_type }}"
            }
          },
          "description": "Metadata about a resource file."
        }
      ]
  organizations.environments.resourcefiles.get:
    description: |-
      Gets the contents of a resource file. For more information about resource files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.resourcefiles/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleApiHttpBody",
          "type": "object",
          "properties": {
            "data": {
              "type": "string",
              "format": "byte",
              "description": "The HTTP request/response body as raw binary."
            },
            "extensions": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": {
                  "type": "any",
                  "description": "Properties of the object. Contains field @type with type URL."
                }
              },
              "description": "Application specific response metadata. Must be set in the first response for streaming APIs."
            },
            "contentType": {
              "type": "string",
              "description": "The HTTP Content-Type header value specifying the content type of the body."
            }
          },
          "description": "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged."
        }
      ]
  organizations.environments.resourcefiles.list:
    description: |-
      Lists all resource files, optionally filtering by type. For more information about resource files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.resourcefiles/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ListEnvironmentResourcesResponse",
          "type": "object",
          "properties": {
            "resourceFile": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1ResourceFile",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "ID of the resource file."
                  },
                  "type": {
                    "type": "string",
                    "description": "Resource file type. {{ resource_file_type }}"
                  }
                },
                "description": "Metadata about a resource file."
              },
              "description": "List of resources files."
            }
          },
          "description": "Response for ListEnvironmentResources"
        }
      ]
  organizations.environments.resourcefiles.listEnvironmentResources:
    description: |-
      Lists all resource files, optionally filtering by type. For more information about resource files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.resourcefiles/listEnvironmentResources
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ListEnvironmentResourcesResponse",
          "type": "object",
          "properties": {
            "resourceFile": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1ResourceFile",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "ID of the resource file."
                  },
                  "type": {
                    "type": "string",
                    "description": "Resource file type. {{ resource_file_type }}"
                  }
                },
                "description": "Metadata about a resource file."
              },
              "description": "List of resources files."
            }
          },
          "description": "Response for ListEnvironmentResources"
        }
      ]
  organizations.environments.resourcefiles.update:
    description: |-
      Updates a resource file. Specify the `Content-Type` as `application/octet-stream` or `multipart/form-data`. For more information about resource files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.resourcefiles/update
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ResourceFile",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "ID of the resource file."
            },
            "type": {
              "type": "string",
              "description": "Resource file type. {{ resource_file_type }}"
            }
          },
          "description": "Metadata about a resource file."
        }
      ]
  organizations.environments.setIamPolicy:
    description: |-
      Sets the IAM policy on an environment, if the policy already exists it will be replaced. For more information, see [Manage users, roles, and permissions using the API](https://cloud.google.com/apigee/docs/api-platform/system-administration/manage-users-roles). You must have the `apigee.environments.setIamPolicy` permission to call this API.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments/setIamPolicy
    example:
      inputs: [
        {
          "id": "GoogleIamV1SetIamPolicyRequest",
          "type": "object",
          "properties": {
            "policy": {
              "id": "GoogleIamV1Policy",
              "type": "object",
              "properties": {
                "etag": {
                  "type": "string",
                  "format": "byte",
                  "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
                },
                "version": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                },
                "bindings": {
                  "type": "array",
                  "items": {
                    "id": "GoogleIamV1Binding",
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                      },
                      "members": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                      },
                      "condition": {
                        "id": "GoogleTypeExpr",
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                          },
                          "location": {
                            "type": "string",
                            "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                          },
                          "expression": {
                            "type": "string",
                            "description": "Textual representation of an expression in Common Expression Language syntax."
                          },
                          "description": {
                            "type": "string",
                            "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                          }
                        },
                        "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                      }
                    },
                    "description": "Associates `members` with a `role`."
                  },
                  "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
                },
                "auditConfigs": {
                  "type": "array",
                  "items": {
                    "id": "GoogleIamV1AuditConfig",
                    "type": "object",
                    "properties": {
                      "service": {
                        "type": "string",
                        "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                      },
                      "auditLogConfigs": {
                        "type": "array",
                        "items": {
                          "id": "GoogleIamV1AuditLogConfig",
                          "type": "object",
                          "properties": {
                            "logType": {
                              "enum": [
                                "LOG_TYPE_UNSPECIFIED",
                                "ADMIN_READ",
                                "DATA_WRITE",
                                "DATA_READ"
                              ],
                              "type": "string",
                              "description": "The log type that this config enables.",
                              "enumDescriptions": [
                                "Default case. Should never be this.",
                                "Admin reads. Example: CloudIAM getIamPolicy",
                                "Data writes. Example: CloudSQL Users create",
                                "Data reads. Example: CloudSQL Users list"
                              ]
                            },
                            "exemptedMembers": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                            }
                          },
                          "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                        },
                        "description": "The configuration for logging of each type of permission."
                      }
                    },
                    "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
                  },
                  "description": "Specifies cloud audit logging configuration for this policy."
                }
              },
              "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
            },
            "updateMask": {
              "type": "string",
              "format": "google-fieldmask",
              "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`"
            }
          },
          "description": "Request message for `SetIamPolicy` method."
        }
      ]
      outputs: [
        {
          "id": "GoogleIamV1Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "GoogleIamV1Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "GoogleTypeExpr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            },
            "auditConfigs": {
              "type": "array",
              "items": {
                "id": "GoogleIamV1AuditConfig",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                  },
                  "auditLogConfigs": {
                    "type": "array",
                    "items": {
                      "id": "GoogleIamV1AuditLogConfig",
                      "type": "object",
                      "properties": {
                        "logType": {
                          "enum": [
                            "LOG_TYPE_UNSPECIFIED",
                            "ADMIN_READ",
                            "DATA_WRITE",
                            "DATA_READ"
                          ],
                          "type": "string",
                          "description": "The log type that this config enables.",
                          "enumDescriptions": [
                            "Default case. Should never be this.",
                            "Admin reads. Example: CloudIAM getIamPolicy",
                            "Data writes. Example: CloudSQL Users create",
                            "Data reads. Example: CloudSQL Users list"
                          ]
                        },
                        "exemptedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                        }
                      },
                      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                    },
                    "description": "The configuration for logging of each type of permission."
                  }
                },
                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
              },
              "description": "Specifies cloud audit logging configuration for this policy."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  organizations.environments.sharedflows.deployments.list:
    description: |-
      Lists all deployments of a shared flow in an environment.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.sharedflows.deployments/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ListDeploymentsResponse",
          "type": "object",
          "properties": {
            "deployments": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Deployment",
                "type": "object",
                "properties": {
                  "pods": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1PodStatus",
                      "type": "object",
                      "properties": {
                        "podName": {
                          "type": "string",
                          "description": "Name of the pod which is reporting the status."
                        },
                        "podStatus": {
                          "type": "string",
                          "description": "Overall status of the pod (not this specific deployment). Valid values include: - `active`: Up to date. - `stale` : Recently out of date. Pods that have not reported status in a long time are excluded from the output."
                        },
                        "appVersion": {
                          "type": "string",
                          "description": "Version of the application running in the pod."
                        },
                        "statusCode": {
                          "type": "string",
                          "description": "Code associated with the deployment status."
                        },
                        "podStatusTime": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the pod status was reported in milliseconds since epoch."
                        },
                        "deploymentTime": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the proxy was deployed in milliseconds since epoch."
                        },
                        "deploymentStatus": {
                          "type": "string",
                          "description": "Status of the deployment. Valid values include: - `deployed`: Successful. - `error` : Failed. - `pending` : Pod has not yet reported on the deployment."
                        },
                        "statusCodeDetails": {
                          "type": "string",
                          "description": "Human-readable message associated with the status code."
                        },
                        "deploymentStatusTime": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the deployment status was reported in milliseconds since epoch."
                        }
                      }
                    },
                    "description": "Status reported by runtime pods. This field is not populated for List APIs. **Note**: **This field is deprecated**. Runtime versions 1.3 and above report instance level status rather than pod status."
                  },
                  "state": {
                    "enum": [
                      "RUNTIME_STATE_UNSPECIFIED",
                      "READY",
                      "PROGRESSING",
                      "ERROR"
                    ],
                    "type": "string",
                    "description": "Current state of the deployment. This field is not populated in List APIs.",
                    "enumDescriptions": [
                      "This value should never be returned.",
                      "Runtime has loaded the deployment.",
                      "Deployment is not fully ready in the runtime.",
                      "Encountered an error with the deployment that requires intervention."
                    ]
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "id": "GoogleRpcStatus",
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The status code, which should be an enum value of google.rpc.Code."
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "any",
                              "description": "Properties of the object. Contains field @type with type URL."
                            }
                          },
                          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                        },
                        "message": {
                          "type": "string",
                          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                        }
                      },
                      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
                    },
                    "description": "Errors reported for this deployment. Populated only when state == ERROR. This field is not populated in List APIs."
                  },
                  "apiProxy": {
                    "type": "string",
                    "description": "API proxy."
                  },
                  "revision": {
                    "type": "string",
                    "description": "API proxy revision."
                  },
                  "instances": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1InstanceDeploymentStatus",
                      "type": "object",
                      "properties": {
                        "instance": {
                          "type": "string",
                          "description": "ID of the instance reporting the status."
                        },
                        "deployedRoutes": {
                          "type": "array",
                          "items": {
                            "id": "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute",
                            "type": "object",
                            "properties": {
                              "basepath": {
                                "type": "string",
                                "description": "Base path in the routing table."
                              },
                              "envgroup": {
                                "type": "string",
                                "description": "Environment group where this route is installed."
                              },
                              "percentage": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Percentage of ingress replicas reporting this route."
                              },
                              "environment": {
                                "type": "string",
                                "description": "Destination environment. This will be empty if the route is not yet reported."
                              }
                            },
                            "description": "Route deployed in the ingress routing table."
                          },
                          "description": "Current routes deployed in the ingress routing table. A route which is missing will appear in `missing_routes`."
                        },
                        "deployedRevisions": {
                          "type": "array",
                          "items": {
                            "id": "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision",
                            "type": "object",
                            "properties": {
                              "revision": {
                                "type": "string",
                                "description": "API proxy revision reported as deployed."
                              },
                              "percentage": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Percentage of MP replicas reporting this revision."
                              }
                            },
                            "description": "Revisions deployed in the MPs."
                          },
                          "description": "Revisions currently deployed in MPs."
                        }
                      },
                      "description": "The status of a deployment as reported by a single instance."
                    },
                    "description": "Status reported by each runtime instance. This field is not populated in List APIs."
                  },
                  "environment": {
                    "type": "string",
                    "description": "Environment."
                  },
                  "routeConflicts": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict",
                      "type": "object",
                      "properties": {
                        "description": {
                          "type": "string",
                          "description": "Human-readable description of this conflict."
                        },
                        "environmentGroup": {
                          "type": "string",
                          "description": "Name of the environment group in which this conflict exists."
                        },
                        "conflictingDeployment": {
                          "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment",
                          "type": "object",
                          "properties": {
                            "apiProxy": {
                              "type": "string",
                              "description": "Name of the deployed API proxy revision containing the base path."
                            },
                            "basepath": {
                              "type": "string",
                              "description": "Base path receiving traffic."
                            },
                            "revision": {
                              "type": "string",
                              "description": "Name of the deployed API proxy revision containing the base path."
                            },
                            "environment": {
                              "type": "string",
                              "description": "Name of the environment in which the proxy is deployed."
                            }
                          },
                          "description": "Existing base path/deployment causing the conflict."
                        }
                      },
                      "description": "Describes a routing conflict that may cause a deployment not to receive traffic at some base path."
                    },
                    "description": "Conflicts in the desired state routing configuration. The presence of conflicts does not cause the state to be `ERROR`, but it will mean that some of the deployment's base paths are not routed to its environment. If the conflicts change, the state will transition to `PROGRESSING` until the latest configuration is rolled out to all instances. This field is not populated in List APIs."
                  },
                  "deployStartTime": {
                    "type": "string",
                    "format": "int64",
                    "description": "Time the API proxy was marked `deployed` in the control plane in millisconds since epoch."
                  }
                }
              },
              "description": "List of deployments."
            }
          }
        }
      ]
  organizations.environments.sharedflows.revisions.deploy:
    description: |-
      Deploys a revision of a shared flow. If another revision of the same shared flow is currently deployed, set the `override` parameter to `true` to have this revision replace the currently deployed revision. You cannot use a shared flow until it has been deployed to an environment. For a request path `organizations/{org}/environments/{env}/sharedflows/{sf}/revisions/{rev}/deployments`, two permissions are required: * `apigee.deployments.create` on the resource `organizations/{org}/environments/{env}` * `apigee.sharedflowrevisions.deploy` on the resource `organizations/{org}/sharedflows/{sf}/revisions/{rev}`
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.sharedflows.revisions/deploy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1Deployment",
          "type": "object",
          "properties": {
            "pods": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1PodStatus",
                "type": "object",
                "properties": {
                  "podName": {
                    "type": "string",
                    "description": "Name of the pod which is reporting the status."
                  },
                  "podStatus": {
                    "type": "string",
                    "description": "Overall status of the pod (not this specific deployment). Valid values include: - `active`: Up to date. - `stale` : Recently out of date. Pods that have not reported status in a long time are excluded from the output."
                  },
                  "appVersion": {
                    "type": "string",
                    "description": "Version of the application running in the pod."
                  },
                  "statusCode": {
                    "type": "string",
                    "description": "Code associated with the deployment status."
                  },
                  "podStatusTime": {
                    "type": "string",
                    "format": "int64",
                    "description": "Time the pod status was reported in milliseconds since epoch."
                  },
                  "deploymentTime": {
                    "type": "string",
                    "format": "int64",
                    "description": "Time the proxy was deployed in milliseconds since epoch."
                  },
                  "deploymentStatus": {
                    "type": "string",
                    "description": "Status of the deployment. Valid values include: - `deployed`: Successful. - `error` : Failed. - `pending` : Pod has not yet reported on the deployment."
                  },
                  "statusCodeDetails": {
                    "type": "string",
                    "description": "Human-readable message associated with the status code."
                  },
                  "deploymentStatusTime": {
                    "type": "string",
                    "format": "int64",
                    "description": "Time the deployment status was reported in milliseconds since epoch."
                  }
                }
              },
              "description": "Status reported by runtime pods. This field is not populated for List APIs. **Note**: **This field is deprecated**. Runtime versions 1.3 and above report instance level status rather than pod status."
            },
            "state": {
              "enum": [
                "RUNTIME_STATE_UNSPECIFIED",
                "READY",
                "PROGRESSING",
                "ERROR"
              ],
              "type": "string",
              "description": "Current state of the deployment. This field is not populated in List APIs.",
              "enumDescriptions": [
                "This value should never be returned.",
                "Runtime has loaded the deployment.",
                "Deployment is not fully ready in the runtime.",
                "Encountered an error with the deployment that requires intervention."
              ]
            },
            "errors": {
              "type": "array",
              "items": {
                "id": "GoogleRpcStatus",
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The status code, which should be an enum value of google.rpc.Code."
                  },
                  "details": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "any",
                        "description": "Properties of the object. Contains field @type with type URL."
                      }
                    },
                    "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                  },
                  "message": {
                    "type": "string",
                    "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                  }
                },
                "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
              },
              "description": "Errors reported for this deployment. Populated only when state == ERROR. This field is not populated in List APIs."
            },
            "apiProxy": {
              "type": "string",
              "description": "API proxy."
            },
            "revision": {
              "type": "string",
              "description": "API proxy revision."
            },
            "instances": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1InstanceDeploymentStatus",
                "type": "object",
                "properties": {
                  "instance": {
                    "type": "string",
                    "description": "ID of the instance reporting the status."
                  },
                  "deployedRoutes": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute",
                      "type": "object",
                      "properties": {
                        "basepath": {
                          "type": "string",
                          "description": "Base path in the routing table."
                        },
                        "envgroup": {
                          "type": "string",
                          "description": "Environment group where this route is installed."
                        },
                        "percentage": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Percentage of ingress replicas reporting this route."
                        },
                        "environment": {
                          "type": "string",
                          "description": "Destination environment. This will be empty if the route is not yet reported."
                        }
                      },
                      "description": "Route deployed in the ingress routing table."
                    },
                    "description": "Current routes deployed in the ingress routing table. A route which is missing will appear in `missing_routes`."
                  },
                  "deployedRevisions": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision",
                      "type": "object",
                      "properties": {
                        "revision": {
                          "type": "string",
                          "description": "API proxy revision reported as deployed."
                        },
                        "percentage": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Percentage of MP replicas reporting this revision."
                        }
                      },
                      "description": "Revisions deployed in the MPs."
                    },
                    "description": "Revisions currently deployed in MPs."
                  }
                },
                "description": "The status of a deployment as reported by a single instance."
              },
              "description": "Status reported by each runtime instance. This field is not populated in List APIs."
            },
            "environment": {
              "type": "string",
              "description": "Environment."
            },
            "routeConflicts": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict",
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Human-readable description of this conflict."
                  },
                  "environmentGroup": {
                    "type": "string",
                    "description": "Name of the environment group in which this conflict exists."
                  },
                  "conflictingDeployment": {
                    "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment",
                    "type": "object",
                    "properties": {
                      "apiProxy": {
                        "type": "string",
                        "description": "Name of the deployed API proxy revision containing the base path."
                      },
                      "basepath": {
                        "type": "string",
                        "description": "Base path receiving traffic."
                      },
                      "revision": {
                        "type": "string",
                        "description": "Name of the deployed API proxy revision containing the base path."
                      },
                      "environment": {
                        "type": "string",
                        "description": "Name of the environment in which the proxy is deployed."
                      }
                    },
                    "description": "Existing base path/deployment causing the conflict."
                  }
                },
                "description": "Describes a routing conflict that may cause a deployment not to receive traffic at some base path."
              },
              "description": "Conflicts in the desired state routing configuration. The presence of conflicts does not cause the state to be `ERROR`, but it will mean that some of the deployment's base paths are not routed to its environment. If the conflicts change, the state will transition to `PROGRESSING` until the latest configuration is rolled out to all instances. This field is not populated in List APIs."
            },
            "deployStartTime": {
              "type": "string",
              "format": "int64",
              "description": "Time the API proxy was marked `deployed` in the control plane in millisconds since epoch."
            }
          }
        }
      ]
  organizations.environments.sharedflows.revisions.getDeployments:
    description: |-
      Gets the deployment of a shared flow revision and actual state reported by runtime pods.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.sharedflows.revisions/getDeployments
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1Deployment",
          "type": "object",
          "properties": {
            "pods": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1PodStatus",
                "type": "object",
                "properties": {
                  "podName": {
                    "type": "string",
                    "description": "Name of the pod which is reporting the status."
                  },
                  "podStatus": {
                    "type": "string",
                    "description": "Overall status of the pod (not this specific deployment). Valid values include: - `active`: Up to date. - `stale` : Recently out of date. Pods that have not reported status in a long time are excluded from the output."
                  },
                  "appVersion": {
                    "type": "string",
                    "description": "Version of the application running in the pod."
                  },
                  "statusCode": {
                    "type": "string",
                    "description": "Code associated with the deployment status."
                  },
                  "podStatusTime": {
                    "type": "string",
                    "format": "int64",
                    "description": "Time the pod status was reported in milliseconds since epoch."
                  },
                  "deploymentTime": {
                    "type": "string",
                    "format": "int64",
                    "description": "Time the proxy was deployed in milliseconds since epoch."
                  },
                  "deploymentStatus": {
                    "type": "string",
                    "description": "Status of the deployment. Valid values include: - `deployed`: Successful. - `error` : Failed. - `pending` : Pod has not yet reported on the deployment."
                  },
                  "statusCodeDetails": {
                    "type": "string",
                    "description": "Human-readable message associated with the status code."
                  },
                  "deploymentStatusTime": {
                    "type": "string",
                    "format": "int64",
                    "description": "Time the deployment status was reported in milliseconds since epoch."
                  }
                }
              },
              "description": "Status reported by runtime pods. This field is not populated for List APIs. **Note**: **This field is deprecated**. Runtime versions 1.3 and above report instance level status rather than pod status."
            },
            "state": {
              "enum": [
                "RUNTIME_STATE_UNSPECIFIED",
                "READY",
                "PROGRESSING",
                "ERROR"
              ],
              "type": "string",
              "description": "Current state of the deployment. This field is not populated in List APIs.",
              "enumDescriptions": [
                "This value should never be returned.",
                "Runtime has loaded the deployment.",
                "Deployment is not fully ready in the runtime.",
                "Encountered an error with the deployment that requires intervention."
              ]
            },
            "errors": {
              "type": "array",
              "items": {
                "id": "GoogleRpcStatus",
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The status code, which should be an enum value of google.rpc.Code."
                  },
                  "details": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "any",
                        "description": "Properties of the object. Contains field @type with type URL."
                      }
                    },
                    "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                  },
                  "message": {
                    "type": "string",
                    "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                  }
                },
                "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
              },
              "description": "Errors reported for this deployment. Populated only when state == ERROR. This field is not populated in List APIs."
            },
            "apiProxy": {
              "type": "string",
              "description": "API proxy."
            },
            "revision": {
              "type": "string",
              "description": "API proxy revision."
            },
            "instances": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1InstanceDeploymentStatus",
                "type": "object",
                "properties": {
                  "instance": {
                    "type": "string",
                    "description": "ID of the instance reporting the status."
                  },
                  "deployedRoutes": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute",
                      "type": "object",
                      "properties": {
                        "basepath": {
                          "type": "string",
                          "description": "Base path in the routing table."
                        },
                        "envgroup": {
                          "type": "string",
                          "description": "Environment group where this route is installed."
                        },
                        "percentage": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Percentage of ingress replicas reporting this route."
                        },
                        "environment": {
                          "type": "string",
                          "description": "Destination environment. This will be empty if the route is not yet reported."
                        }
                      },
                      "description": "Route deployed in the ingress routing table."
                    },
                    "description": "Current routes deployed in the ingress routing table. A route which is missing will appear in `missing_routes`."
                  },
                  "deployedRevisions": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision",
                      "type": "object",
                      "properties": {
                        "revision": {
                          "type": "string",
                          "description": "API proxy revision reported as deployed."
                        },
                        "percentage": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Percentage of MP replicas reporting this revision."
                        }
                      },
                      "description": "Revisions deployed in the MPs."
                    },
                    "description": "Revisions currently deployed in MPs."
                  }
                },
                "description": "The status of a deployment as reported by a single instance."
              },
              "description": "Status reported by each runtime instance. This field is not populated in List APIs."
            },
            "environment": {
              "type": "string",
              "description": "Environment."
            },
            "routeConflicts": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict",
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Human-readable description of this conflict."
                  },
                  "environmentGroup": {
                    "type": "string",
                    "description": "Name of the environment group in which this conflict exists."
                  },
                  "conflictingDeployment": {
                    "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment",
                    "type": "object",
                    "properties": {
                      "apiProxy": {
                        "type": "string",
                        "description": "Name of the deployed API proxy revision containing the base path."
                      },
                      "basepath": {
                        "type": "string",
                        "description": "Base path receiving traffic."
                      },
                      "revision": {
                        "type": "string",
                        "description": "Name of the deployed API proxy revision containing the base path."
                      },
                      "environment": {
                        "type": "string",
                        "description": "Name of the environment in which the proxy is deployed."
                      }
                    },
                    "description": "Existing base path/deployment causing the conflict."
                  }
                },
                "description": "Describes a routing conflict that may cause a deployment not to receive traffic at some base path."
              },
              "description": "Conflicts in the desired state routing configuration. The presence of conflicts does not cause the state to be `ERROR`, but it will mean that some of the deployment's base paths are not routed to its environment. If the conflicts change, the state will transition to `PROGRESSING` until the latest configuration is rolled out to all instances. This field is not populated in List APIs."
            },
            "deployStartTime": {
              "type": "string",
              "format": "int64",
              "description": "Time the API proxy was marked `deployed` in the control plane in millisconds since epoch."
            }
          }
        }
      ]
  organizations.environments.sharedflows.revisions.undeploy:
    description: |-
      Undeploys a shared flow revision from an environment. For a request path `organizations/{org}/environments/{env}/sharedflows/{sf}/revisions/{rev}/deployments`, two permissions are required: * `apigee.deployments.delete` on the resource `organizations/{org}/environments/{env}` * `apigee.sharedflowrevisions.undeploy` on the resource `organizations/{org}/sharedflows/{sf}/revisions/{rev}`
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.sharedflows.revisions/undeploy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  organizations.environments.stats.get:
    description: |-
      Retrieve metrics grouped by dimensions. The types of metrics you can retrieve include traffic, message counts, API call latency, response size, and cache hits and counts. Dimensions let you view metrics in meaningful groups. The stats api does accept dimensions as path params. The dimensions are optional in which case the metrics are computed on the entire data for the given timerange.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.stats/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1Stats",
          "type": "object",
          "properties": {
            "hosts": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1StatsHostStats",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "This field contains the hostname used in query."
                  },
                  "metrics": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1Metric",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "This field contains the metric name."
                        },
                        "values": {
                          "type": "array",
                          "items": {
                            "type": "any"
                          },
                          "description": "List of metric values. Possible value format: \"values\":[\"39.0\"] or \"values\":[ { \"value\": \"39.0\", \"timestamp\": 1232434354} ]"
                        }
                      },
                      "description": "This message type encapsulates the metric data point. Example: { \"name\": \"sum(message_count)\", \"values\" : [ { \"timestamp\": 1549004400000, \"value\": \"39.0\" }, { \"timestamp\" : 1548997200000, \"value\" : \"0.0\" } ] } or { \"name\": \"sum(message_count)\", \"values\" : [\"39.0\"] }"
                    },
                    "description": "In the final response, only one of the following fields will be present based on the dimensions provided. If no dimensions are provided, then only a top level metrics is provided. If dimensions are included, then there will be a top level dimensions field under hostnames which will contain metrics values and the dimension name. Example: \"hosts\": [ { \"dimensions\": [ { \"metrics\": [ { \"name\": \"sum(message_count)\", \"values\": [ \"2.14049521E8\" ] } ], \"name\": \"nit_proxy\" } ], \"name\": \"example.com\" } ] OR \"hosts\": [ { \"metrics\": [ { \"name\": \"sum(message_count)\", \"values\": [ \"2.19026331E8\" ] } ], \"name\": \"example.com\" } ] This field contains the list of metric values."
                  },
                  "dimensions": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1DimensionMetric",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "This field contains the name of the dimension."
                        },
                        "metrics": {
                          "type": "array",
                          "items": {
                            "id": "GoogleCloudApigeeV1Metric",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "This field contains the metric name."
                              },
                              "values": {
                                "type": "array",
                                "items": {
                                  "type": "any"
                                },
                                "description": "List of metric values. Possible value format: \"values\":[\"39.0\"] or \"values\":[ { \"value\": \"39.0\", \"timestamp\": 1232434354} ]"
                              }
                            },
                            "description": "This message type encapsulates the metric data point. Example: { \"name\": \"sum(message_count)\", \"values\" : [ { \"timestamp\": 1549004400000, \"value\": \"39.0\" }, { \"timestamp\" : 1548997200000, \"value\" : \"0.0\" } ] } or { \"name\": \"sum(message_count)\", \"values\" : [\"39.0\"] }"
                          },
                          "description": "This field contains a list of metrics."
                        }
                      },
                      "description": "This message type encapsulates a metric grouped by dimension."
                    },
                    "description": "This field contains the list of metrics grouped under dimensions."
                  }
                },
                "description": "This message type encapsulates the hostname wrapper: \"hosts\": [ { \"metrics\": [ { \"name\": \"sum(message_count)\", \"values\": [ \"2.52056245E8\" ] } ], \"name\": \"example.com\" } ]"
              },
              "description": "This field contains a list of query results grouped by host."
            },
            "metaData": {
              "id": "GoogleCloudApigeeV1Metadata",
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of error messages as strings."
                },
                "notices": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of additional information such as data source, if result was truncated etc. E.g \"notices\": [ \"Source:Postgres\", \"PG Host:uappg0rw.e2e.apigeeks.net\", \"query served by:4b64601e-40de-4eb1-bfb9-eeee7ac929ed\", \"Table used: edge.api.uapgroup2.agg_api\" ]"
                }
              },
              "description": "This field contains the metadata information."
            },
            "environments": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1StatsEnvironmentStats",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "metrics": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1Metric",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "This field contains the metric name."
                        },
                        "values": {
                          "type": "array",
                          "items": {
                            "type": "any"
                          },
                          "description": "List of metric values. Possible value format: \"values\":[\"39.0\"] or \"values\":[ { \"value\": \"39.0\", \"timestamp\": 1232434354} ]"
                        }
                      },
                      "description": "This message type encapsulates the metric data point. Example: { \"name\": \"sum(message_count)\", \"values\" : [ { \"timestamp\": 1549004400000, \"value\": \"39.0\" }, { \"timestamp\" : 1548997200000, \"value\" : \"0.0\" } ] } or { \"name\": \"sum(message_count)\", \"values\" : [\"39.0\"] }"
                    },
                    "description": "In the final response, only one of the following fields will be present based on the dimensions provided. If no dimensions are provided, then only a top level metrics is provided. If dimensions are included, then there will be a top level dimensions field under environments which will contain metrics values and the dimension name. Example: \"environments\": [ { \"dimensions\": [ { \"metrics\": [ { \"name\": \"sum(message_count)\", \"values\": [ \"2.14049521E8\" ] } ], \"name\": \"nit_proxy\" } ], \"name\": \"prod\" } ] OR \"environments\": [ { \"metrics\": [ { \"name\": \"sum(message_count)\", \"values\": [ \"2.19026331E8\" ] } ], \"name\": \"prod\" } ] This field contains the list of metric values."
                  },
                  "dimensions": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1DimensionMetric",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "This field contains the name of the dimension."
                        },
                        "metrics": {
                          "type": "array",
                          "items": {
                            "id": "GoogleCloudApigeeV1Metric",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "This field contains the metric name."
                              },
                              "values": {
                                "type": "array",
                                "items": {
                                  "type": "any"
                                },
                                "description": "List of metric values. Possible value format: \"values\":[\"39.0\"] or \"values\":[ { \"value\": \"39.0\", \"timestamp\": 1232434354} ]"
                              }
                            },
                            "description": "This message type encapsulates the metric data point. Example: { \"name\": \"sum(message_count)\", \"values\" : [ { \"timestamp\": 1549004400000, \"value\": \"39.0\" }, { \"timestamp\" : 1548997200000, \"value\" : \"0.0\" } ] } or { \"name\": \"sum(message_count)\", \"values\" : [\"39.0\"] }"
                          },
                          "description": "This field contains a list of metrics."
                        }
                      },
                      "description": "This message type encapsulates a metric grouped by dimension."
                    },
                    "description": "This field contains the list of metrics grouped under dimensions."
                  }
                },
                "description": "This message type encapsulates the environment wrapper: \"environments\": [ { \"metrics\": [ { \"name\": \"sum(message_count)\", \"values\": [ \"2.52056245E8\" ] } ], \"name\": \"prod\" } ]"
              },
              "description": "This field contains a list of query results on environment level."
            }
          },
          "description": "This message type encapsulates a stats response."
        }
      ]
  organizations.environments.subscribe:
    description: |-
      Creates a subscription for the environment's Pub/Sub topic. The server will assign a random name for this subscription. The "name" and "push_config" must *not* be specified.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments/subscribe
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1Subscription",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Full name of the Pub/Sub subcription. Use the following structure in your request: `subscription \"projects/foo/subscription/bar\"`"
            }
          },
          "description": "Pub/Sub subscription of an environment."
        }
      ]
  organizations.environments.targetservers.create:
    description: |-
      Creates a TargetServer in the specified environment.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.targetservers/create
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1TargetServer",
          "type": "object",
          "properties": {
            "host": {
              "type": "string",
              "description": "Required. The host name this target connects to. Value must be a valid hostname as described by RFC-1123."
            },
            "name": {
              "type": "string",
              "description": "Required. The resource id of this target server. Values must match the regular expression "
            },
            "port": {
              "type": "integer",
              "format": "int32",
              "description": "Required. The port number this target connects to on the given host. Value must be between 1 and 65535, inclusive."
            },
            "sSLInfo": {
              "id": "GoogleCloudApigeeV1TlsInfo",
              "type": "object",
              "properties": {
                "ciphers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The SSL/TLS cipher suites to be used. Must be one of the cipher suite names listed in: http://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#ciphersuites"
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Required. Enables TLS. If false, neither one-way nor two-way TLS will be enabled."
                },
                "keyAlias": {
                  "type": "string",
                  "description": "Required if `client_auth_enabled` is true. The resource ID for the alias containing the private key and cert."
                },
                "keyStore": {
                  "type": "string",
                  "description": "Required if `client_auth_enabled` is true. The resource ID of the keystore. References not yet supported."
                },
                "protocols": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The TLS versioins to be used."
                },
                "commonName": {
                  "id": "GoogleCloudApigeeV1TlsInfoCommonName",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The TLS Common Name string of the certificate."
                    },
                    "wildcardMatch": {
                      "type": "boolean",
                      "description": "Indicates whether the cert should be matched against as a wildcard cert."
                    }
                  },
                  "description": "The TLS Common Name of the certificate."
                },
                "trustStore": {
                  "type": "string",
                  "description": "The resource ID of the truststore. References not yet supported."
                },
                "clientAuthEnabled": {
                  "type": "boolean",
                  "description": "Optional. Enables two-way TLS."
                },
                "ignoreValidationErrors": {
                  "type": "boolean",
                  "description": "If true, Edge ignores TLS certificate errors. Valid when configuring TLS for target servers and target endpoints, and when configuring virtual hosts that use 2-way TLS. When used with a target endpoint/target server, if the backend system uses SNI and returns a cert with a subject Distinguished Name (DN) that does not match the hostname, there is no way to ignore the error and the connection fails."
                }
              },
              "description": "Optional. Specifies TLS configuration info for this TargetServer. The JSON name is `sSLInfo` for legacy/backwards compatibility reasons -- Edge originally supported SSL, and the name is still used for TLS configuration."
            },
            "protocol": {
              "enum": [
                "PROTOCOL_UNSPECIFIED",
                "HTTP",
                "GRPC"
              ],
              "type": "string",
              "description": "Immutable. The protocol used by this TargetServer.",
              "enumDescriptions": [
                "UNSPECIFIED defaults to HTTP for backwards compatibility.",
                "The TargetServer uses HTTP.",
                "The TargetServer uses GRPC."
              ]
            },
            "isEnabled": {
              "type": "boolean",
              "description": "Optional. Enabling/disabling a TargetServer is useful when TargetServers are used in load balancing configurations, and one or more TargetServers need to taken out of rotation periodically. Defaults to true."
            },
            "description": {
              "type": "string",
              "description": "Optional. A human-readable description of this TargetServer."
            }
          },
          "description": "TargetServer configuration. TargetServers are used to decouple a proxy's TargetEndpoint HTTPTargetConnections from concrete URLs for backend services."
        }
      ]
      outputs: [
        {}
      ]
  organizations.environments.targetservers.delete:
    description: |-
      Deletes a TargetServer from an environment. Returns the deleted TargetServer resource.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.targetservers/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.environments.targetservers.get:
    description: |-
      Gets a TargetServer resource.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.targetservers/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.environments.targetservers.update:
    description: |-
      Updates an existing TargetServer. Note that this operation has PUT semantics; it will replace the entirety of the existing TargetServer with the resource in the request body.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.targetservers/update
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1TargetServer",
          "type": "object",
          "properties": {
            "host": {
              "type": "string",
              "description": "Required. The host name this target connects to. Value must be a valid hostname as described by RFC-1123."
            },
            "name": {
              "type": "string",
              "description": "Required. The resource id of this target server. Values must match the regular expression "
            },
            "port": {
              "type": "integer",
              "format": "int32",
              "description": "Required. The port number this target connects to on the given host. Value must be between 1 and 65535, inclusive."
            },
            "sSLInfo": {
              "id": "GoogleCloudApigeeV1TlsInfo",
              "type": "object",
              "properties": {
                "ciphers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The SSL/TLS cipher suites to be used. Must be one of the cipher suite names listed in: http://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#ciphersuites"
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Required. Enables TLS. If false, neither one-way nor two-way TLS will be enabled."
                },
                "keyAlias": {
                  "type": "string",
                  "description": "Required if `client_auth_enabled` is true. The resource ID for the alias containing the private key and cert."
                },
                "keyStore": {
                  "type": "string",
                  "description": "Required if `client_auth_enabled` is true. The resource ID of the keystore. References not yet supported."
                },
                "protocols": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The TLS versioins to be used."
                },
                "commonName": {
                  "id": "GoogleCloudApigeeV1TlsInfoCommonName",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The TLS Common Name string of the certificate."
                    },
                    "wildcardMatch": {
                      "type": "boolean",
                      "description": "Indicates whether the cert should be matched against as a wildcard cert."
                    }
                  },
                  "description": "The TLS Common Name of the certificate."
                },
                "trustStore": {
                  "type": "string",
                  "description": "The resource ID of the truststore. References not yet supported."
                },
                "clientAuthEnabled": {
                  "type": "boolean",
                  "description": "Optional. Enables two-way TLS."
                },
                "ignoreValidationErrors": {
                  "type": "boolean",
                  "description": "If true, Edge ignores TLS certificate errors. Valid when configuring TLS for target servers and target endpoints, and when configuring virtual hosts that use 2-way TLS. When used with a target endpoint/target server, if the backend system uses SNI and returns a cert with a subject Distinguished Name (DN) that does not match the hostname, there is no way to ignore the error and the connection fails."
                }
              },
              "description": "Optional. Specifies TLS configuration info for this TargetServer. The JSON name is `sSLInfo` for legacy/backwards compatibility reasons -- Edge originally supported SSL, and the name is still used for TLS configuration."
            },
            "protocol": {
              "enum": [
                "PROTOCOL_UNSPECIFIED",
                "HTTP",
                "GRPC"
              ],
              "type": "string",
              "description": "Immutable. The protocol used by this TargetServer.",
              "enumDescriptions": [
                "UNSPECIFIED defaults to HTTP for backwards compatibility.",
                "The TargetServer uses HTTP.",
                "The TargetServer uses GRPC."
              ]
            },
            "isEnabled": {
              "type": "boolean",
              "description": "Optional. Enabling/disabling a TargetServer is useful when TargetServers are used in load balancing configurations, and one or more TargetServers need to taken out of rotation periodically. Defaults to true."
            },
            "description": {
              "type": "string",
              "description": "Optional. A human-readable description of this TargetServer."
            }
          },
          "description": "TargetServer configuration. TargetServers are used to decouple a proxy's TargetEndpoint HTTPTargetConnections from concrete URLs for backend services."
        }
      ]
      outputs: [
        {}
      ]
  organizations.environments.testIamPermissions:
    description: |-
      Tests the permissions of a user on an environment, and returns a subset of permissions that the user has on the environment. If the environment does not exist, an empty permission set is returned (a NOT_FOUND error is not returned).
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments/testIamPermissions
    example:
      inputs: [
        {
          "id": "GoogleIamV1TestIamPermissionsRequest",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
            }
          },
          "description": "Request message for `TestIamPermissions` method."
        }
      ]
      outputs: [
        {
          "id": "GoogleIamV1TestIamPermissionsResponse",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
            }
          },
          "description": "Response message for `TestIamPermissions` method."
        }
      ]
  organizations.environments.traceConfig.overrides.create:
    description: |-
      Creates a trace configuration override. The response contains a system-generated UUID, that can be used to view, update, or delete the configuration override. Use the List API to view the existing trace configuration overrides.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.traceConfig.overrides/create
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1TraceConfigOverride",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "ID of the trace configuration override specified as a system-generated UUID."
            },
            "apiProxy": {
              "type": "string",
              "description": "ID of the API proxy that will have its trace configuration overridden."
            },
            "samplingConfig": {
              "id": "GoogleCloudApigeeV1TraceSamplingConfig",
              "type": "object",
              "properties": {
                "sampler": {
                  "enum": [
                    "SAMPLER_UNSPECIFIED",
                    "OFF",
                    "PROBABILITY"
                  ],
                  "type": "string",
                  "description": "Sampler of distributed tracing. OFF is the default value.",
                  "enumDescriptions": [
                    "Sampler unspecified.",
                    "OFF means distributed trace is disabled, or the sampling probability is 0.",
                    "PROBABILITY means traces are captured on a probability that defined by sampling_rate. The sampling rate is limited to 0 to 0.5 when this is set."
                  ]
                },
                "samplingRate": {
                  "type": "number",
                  "format": "float",
                  "description": "Field sampling rate. This value is only applicable when using the PROBABILITY sampler. The supported values are > 0 and <= 0.5."
                }
              },
              "description": "Trace configuration to override."
            }
          },
          "description": "A representation of a configuration override."
        }
      ]
      outputs: [
        {}
      ]
  organizations.environments.traceConfig.overrides.delete:
    description: |-
      Deletes a distributed trace configuration override.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.traceConfig.overrides/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  organizations.environments.traceConfig.overrides.get:
    description: |-
      Gets a trace configuration override.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.traceConfig.overrides/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.environments.traceConfig.overrides.list:
    description: |-
      Lists all of the distributed trace configuration overrides in an environment.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.traceConfig.overrides/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ListTraceConfigOverridesResponse",
          "type": "object",
          "properties": {
            "nextPageToken": {
              "type": "string",
              "description": "Token value that can be passed as `page_token` to retrieve the next page of content."
            },
            "traceConfigOverrides": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1TraceConfigOverride",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "ID of the trace configuration override specified as a system-generated UUID."
                  },
                  "apiProxy": {
                    "type": "string",
                    "description": "ID of the API proxy that will have its trace configuration overridden."
                  },
                  "samplingConfig": {
                    "id": "GoogleCloudApigeeV1TraceSamplingConfig",
                    "type": "object",
                    "properties": {
                      "sampler": {
                        "enum": [
                          "SAMPLER_UNSPECIFIED",
                          "OFF",
                          "PROBABILITY"
                        ],
                        "type": "string",
                        "description": "Sampler of distributed tracing. OFF is the default value.",
                        "enumDescriptions": [
                          "Sampler unspecified.",
                          "OFF means distributed trace is disabled, or the sampling probability is 0.",
                          "PROBABILITY means traces are captured on a probability that defined by sampling_rate. The sampling rate is limited to 0 to 0.5 when this is set."
                        ]
                      },
                      "samplingRate": {
                        "type": "number",
                        "format": "float",
                        "description": "Field sampling rate. This value is only applicable when using the PROBABILITY sampler. The supported values are > 0 and <= 0.5."
                      }
                    },
                    "description": "Trace configuration to override."
                  }
                },
                "description": "A representation of a configuration override."
              },
              "description": "List all trace configuration overrides in an environment."
            }
          },
          "description": "Response for ListTraceConfigOverrides."
        }
      ]
  organizations.environments.traceConfig.overrides.patch:
    description: |-
      Updates a distributed trace configuration override. Note that the repeated fields have replace semantics when included in the field mask and that they will be overwritten by the value of the fields in the request body.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.traceConfig.overrides/patch
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1TraceConfigOverride",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "ID of the trace configuration override specified as a system-generated UUID."
            },
            "apiProxy": {
              "type": "string",
              "description": "ID of the API proxy that will have its trace configuration overridden."
            },
            "samplingConfig": {
              "id": "GoogleCloudApigeeV1TraceSamplingConfig",
              "type": "object",
              "properties": {
                "sampler": {
                  "enum": [
                    "SAMPLER_UNSPECIFIED",
                    "OFF",
                    "PROBABILITY"
                  ],
                  "type": "string",
                  "description": "Sampler of distributed tracing. OFF is the default value.",
                  "enumDescriptions": [
                    "Sampler unspecified.",
                    "OFF means distributed trace is disabled, or the sampling probability is 0.",
                    "PROBABILITY means traces are captured on a probability that defined by sampling_rate. The sampling rate is limited to 0 to 0.5 when this is set."
                  ]
                },
                "samplingRate": {
                  "type": "number",
                  "format": "float",
                  "description": "Field sampling rate. This value is only applicable when using the PROBABILITY sampler. The supported values are > 0 and <= 0.5."
                }
              },
              "description": "Trace configuration to override."
            }
          },
          "description": "A representation of a configuration override."
        }
      ]
      outputs: [
        {}
      ]
  organizations.environments.unsubscribe:
    description: |-
      Deletes a subscription for the environment's Pub/Sub topic.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments/unsubscribe
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  organizations.environments.update:
    description: |-
      Updates an existing environment. When updating properties, you must pass all existing properties to the API, even if they are not being changed. If you omit properties from the payload, the properties are removed. To get the current list of properties for the environment, use the [Get Environment API](get).
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments/update
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1Environment",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Required. Name of the environment. Values must match the regular expression `^[.\\\\p{Alnum}-_]{1,255}$`"
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "CREATING",
                "ACTIVE",
                "DELETING"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. State of the environment. Values other than ACTIVE means the resource is not ready to use.",
              "enumDescriptions": [
                "Resource is in an unspecified state.",
                "Resource is being created.",
                "Resource is provisioned and ready to use.",
                "The resource is being deleted."
              ]
            },
            "createdAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Creation time of this environment as milliseconds since epoch."
            },
            "properties": {
              "id": "GoogleCloudApigeeV1Properties",
              "type": "object",
              "properties": {
                "property": {
                  "type": "array",
                  "items": {
                    "id": "GoogleCloudApigeeV1Property",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The property key"
                      },
                      "value": {
                        "type": "string",
                        "description": "The property value"
                      }
                    },
                    "description": "A single property entry in the Properties message."
                  },
                  "description": "List of all properties in the object"
                }
              },
              "description": "Optional. Key-value pairs that may be used for customizing the environment."
            },
            "description": {
              "type": "string",
              "description": "Optional. Description of the environment."
            },
            "displayName": {
              "type": "string",
              "description": "Optional. Display name for this environment."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Last modification time of this environment as milliseconds since epoch."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  organizations.environments.updateDebugmask:
    description: |-
      Updates the debug mask singleton resource for an environment.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments/updateDebugmask
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1DebugMask",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the debug mask."
            },
            "variables": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of variables that should be masked from the debug output."
            },
            "namespaces": {
              "type": "object",
              "description": "Map of namespaces to URIs.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "faultXPaths": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of XPaths that specify the XML elements to be filtered from XML payloads in error flows."
            },
            "requestXPaths": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of XPaths that specify the XML elements to be filtered from XML request message payloads."
            },
            "faultJSONPaths": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of JSON paths that specify the JSON elements to be filtered from JSON payloads in error flows."
            },
            "responseXPaths": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of XPaths that specify the XML elements to be filtered from XML response message payloads."
            },
            "requestJSONPaths": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of JSON paths that specify the JSON elements to be filtered from JSON request message payloads."
            },
            "responseJSONPaths": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of JSON paths that specify the JSON elements to be filtered from JSON response message payloads."
            }
          }
        }
      ]
  organizations.environments.updateEnvironment:
    description: |-
      Updates an existing environment. When updating properties, you must pass all existing properties to the API, even if they are not being changed. If you omit properties from the payload, the properties are removed. To get the current list of properties for the environment, use the [Get Environment API](get).
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments/updateEnvironment
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1Environment",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Required. Name of the environment. Values must match the regular expression `^[.\\\\p{Alnum}-_]{1,255}$`"
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "CREATING",
                "ACTIVE",
                "DELETING"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. State of the environment. Values other than ACTIVE means the resource is not ready to use.",
              "enumDescriptions": [
                "Resource is in an unspecified state.",
                "Resource is being created.",
                "Resource is provisioned and ready to use.",
                "The resource is being deleted."
              ]
            },
            "createdAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Creation time of this environment as milliseconds since epoch."
            },
            "properties": {
              "id": "GoogleCloudApigeeV1Properties",
              "type": "object",
              "properties": {
                "property": {
                  "type": "array",
                  "items": {
                    "id": "GoogleCloudApigeeV1Property",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The property key"
                      },
                      "value": {
                        "type": "string",
                        "description": "The property value"
                      }
                    },
                    "description": "A single property entry in the Properties message."
                  },
                  "description": "List of all properties in the object"
                }
              },
              "description": "Optional. Key-value pairs that may be used for customizing the environment."
            },
            "description": {
              "type": "string",
              "description": "Optional. Description of the environment."
            },
            "displayName": {
              "type": "string",
              "description": "Optional. Display name for this environment."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Last modification time of this environment as milliseconds since epoch."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  organizations.environments.updateTraceConfig:
    description: |-
      Updates the trace configurations in an environment. Note that the repeated fields have replace semantics when included in the field mask and that they will be overwritten by the value of the fields in the request body.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments/updateTraceConfig
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1TraceConfig",
          "type": "object",
          "properties": {
            "endpoint": {
              "type": "string",
              "description": "Required. Endpoint of the exporter."
            },
            "exporter": {
              "enum": [
                "EXPORTER_UNSPECIFIED",
                "JAEGER",
                "CLOUD_TRACE"
              ],
              "type": "string",
              "description": "Required. Exporter that is used to view the distributed trace captured using OpenCensus. An exporter sends traces to any backend that is capable of consuming them. Recorded spans can be exported by registered exporters.",
              "enumDescriptions": [
                "Exporter unspecified",
                "Jaeger exporter",
                "Cloudtrace exporter"
              ]
            },
            "samplingConfig": {
              "id": "GoogleCloudApigeeV1TraceSamplingConfig",
              "type": "object",
              "properties": {
                "sampler": {
                  "enum": [
                    "SAMPLER_UNSPECIFIED",
                    "OFF",
                    "PROBABILITY"
                  ],
                  "type": "string",
                  "description": "Sampler of distributed tracing. OFF is the default value.",
                  "enumDescriptions": [
                    "Sampler unspecified.",
                    "OFF means distributed trace is disabled, or the sampling probability is 0.",
                    "PROBABILITY means traces are captured on a probability that defined by sampling_rate. The sampling rate is limited to 0 to 0.5 when this is set."
                  ]
                },
                "samplingRate": {
                  "type": "number",
                  "format": "float",
                  "description": "Field sampling rate. This value is only applicable when using the PROBABILITY sampler. The supported values are > 0 and <= 0.5."
                }
              },
              "description": "Distributed trace configuration for all API proxies in an environment. You can also override the configuration for a specific API proxy using the distributed trace configuration overrides API."
            }
          },
          "description": "TraceConfig defines the configurations in an environment of distributed trace."
        }
      ]
  organizations.get:
    description: |-
      Gets the profile for an Apigee organization. See [Understanding organizations](https://cloud.google.com/apigee/docs/api-platform/fundamentals/organization-structure).
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.getDeployedIngressConfig:
    description: |-
      Gets the deployed ingress configuration for an organization.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations/getDeployedIngressConfig
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1IngressConfig",
          "type": "object",
          "properties": {
            "uid": {
              "type": "string",
              "description": "A unique id for the ingress config that will only change if the organization is deleted and recreated."
            },
            "name": {
              "type": "string",
              "description": "Name of the resource in the following format: `organizations/{org}/deployedIngressConfig`."
            },
            "revisionId": {
              "type": "string",
              "format": "int64",
              "description": "Revision id that defines the ordering on IngressConfig resources. The higher the revision, the more recently the configuration was deployed."
            },
            "environmentGroups": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1EnvironmentGroupConfig",
                "type": "object",
                "properties": {
                  "uid": {
                    "type": "string",
                    "description": "A unique id for the environment group config that will only change if the environment group is deleted and recreated."
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the environment group in the following format: `organizations/{org}/envgroups/{envgroup}`."
                  },
                  "hostnames": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Host names for the environment group."
                  },
                  "revisionId": {
                    "type": "string",
                    "format": "int64",
                    "description": "Revision id that defines the ordering of the EnvironmentGroupConfig resource. The higher the revision, the more recently the configuration was deployed."
                  },
                  "routingRules": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1RoutingRule",
                      "type": "object",
                      "properties": {
                        "basepath": {
                          "type": "string",
                          "description": "URI path prefix used to route to the specified environment. May contain one or more wildcards. For example, path segments consisting of a single `*` character will match any string."
                        },
                        "receiver": {
                          "type": "string",
                          "description": "The resource name of the proxy revision that is receiving this basepath in the following format: `organizations/{org}/apis/{api}/revisions/{rev}`. This field is omitted from the IngressConfig unless the GetDeployedIngressConfig API is called with view=FULL."
                        },
                        "updateTime": {
                          "type": "string",
                          "format": "google-datetime",
                          "description": "The unix timestamp when this rule was updated. This is updated whenever env_group_revision is updated. This field is omitted from the IngressConfig unless the GetDeployedIngressConfig API is called with view=FULL."
                        },
                        "environment": {
                          "type": "string",
                          "description": "Name of an environment bound to the environment group in the following format: `organizations/{org}/environments/{env}`."
                        },
                        "envGroupRevision": {
                          "type": "string",
                          "format": "int64",
                          "description": "The env group config revision_id when this rule was added or last updated. This value is set when the rule is created and will only update if the the environment_id changes. It is used to determine if the runtime is up to date with respect to this rule. This field is omitted from the IngressConfig unless the GetDeployedIngressConfig API is called with view=FULL."
                        }
                      }
                    },
                    "description": "Ordered list of routing rules defining how traffic to this environment group's hostnames should be routed to different environments."
                  }
                },
                "description": "EnvironmentGroupConfig is a revisioned snapshot of an EnvironmentGroup and its associated routing rules."
              },
              "description": "List of environment groups in the organization."
            },
            "revisionCreateTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Time at which the IngressConfig revision was created."
            }
          }
        }
      ]
  organizations.getSyncAuthorization:
    description: |-
      Lists the service accounts with the permissions required to allow the Synchronizer to download environment data from the control plane. An ETag is returned in the response to `getSyncAuthorization`. Pass that ETag when calling [setSyncAuthorization](setSyncAuthorization) to ensure that you are updating the correct version. If you don't pass the ETag in the call to `setSyncAuthorization`, then the existing authorization is overwritten indiscriminately. For more information, see [Configure the Synchronizer](https://cloud.google.com/apigee/docs/hybrid/latest/synchronizer-access). **Note**: Available to Apigee hybrid only.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations/getSyncAuthorization
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1GetSyncAuthorizationRequest",
          "type": "object",
          "properties": {},
          "description": "Request for GetSyncAuthorization."
        }
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1SyncAuthorization",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "Entity tag (ETag) used for optimistic concurrency control as a way to help prevent simultaneous updates from overwriting each other. For example, when you call [getSyncAuthorization](organizations/getSyncAuthorization) an ETag is returned in the response. Pass that ETag when calling the [setSyncAuthorization](organizations/setSyncAuthorization) to ensure that you are updating the correct version. If you don't pass the ETag in the call to `setSyncAuthorization`, then the existing authorization is overwritten indiscriminately. **Note**: We strongly recommend that you use the ETag in the read-modify-write cycle to avoid race conditions."
            },
            "identities": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Required. Array of service accounts to grant access to control plane resources, each specified using the following format: `serviceAccount:` service-account-name. The service-account-name is formatted like an email address. For example: `my-synchronizer-manager-service_account@my_project_id.iam.gserviceaccount.com` You might specify multiple service accounts, for example, if you have multiple environments and wish to assign a unique service account to each one. The service accounts must have **Apigee Synchronizer Manager** role. See also [Create service accounts](https://cloud.google.com/apigee/docs/hybrid/latest/sa-about#create-the-service-accounts)."
            }
          }
        }
      ]
  organizations.hostQueries.create:
    description: |-
      Submit a query at host level to be processed in the background. If the submission of the query succeeds, the API returns a 201 status and an ID that refer to the query. In addition to the HTTP status 201, the `state` of "enqueued" means that the request succeeded.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.hostQueries/create
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1Query",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Asynchronous Query Name."
            },
            "limit": {
              "type": "integer",
              "format": "int32",
              "description": "Maximum number of rows that can be returned in the result."
            },
            "filter": {
              "type": "string",
              "description": "Boolean expression that can be used to filter data. Filter expressions can be combined using AND/OR terms and should be fully parenthesized to avoid ambiguity. See Analytics metrics, dimensions, and filters reference https://docs.apigee.com/api-platform/analytics/analytics-reference for more information on the fields available to filter on. For more information on the tokens that you use to build filter expressions, see Filter expression syntax. https://docs.apigee.com/api-platform/analytics/asynch-reports-api#filter-expression-syntax"
            },
            "metrics": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1QueryMetric",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Required. Metric name."
                  },
                  "alias": {
                    "type": "string",
                    "description": "Alias for the metric. Alias will be used to replace metric name in query results."
                  },
                  "value": {
                    "type": "string",
                    "description": "Operand value should be provided when operator is set."
                  },
                  "function": {
                    "type": "string",
                    "description": "Aggregation function: avg, min, max, or sum."
                  },
                  "operator": {
                    "type": "string",
                    "description": "One of `+`, `-`, `/`, `%`, `*`."
                  }
                },
                "description": "More info about Metric: https://docs.apigee.com/api-platform/analytics/analytics-reference#metrics"
              },
              "description": "A list of Metrics."
            },
            "timeRange": {
              "type": "any",
              "description": "Required. Time range for the query. Can use the following predefined strings to specify the time range: `last60minutes` `last24hours` `last7days` Or, specify the timeRange as a structure describing start and end timestamps in the ISO format: yyyy-mm-ddThh:mm:ssZ. Example: \"timeRange\": { \"start\": \"2018-07-29T00:13:00Z\", \"end\": \"2018-08-01T00:18:00Z\" }"
            },
            "dimensions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of dimensions. https://docs.apigee.com/api-platform/analytics/analytics-reference#dimensions"
            },
            "csvDelimiter": {
              "type": "string",
              "description": "Delimiter used in the CSV file, if `outputFormat` is set to `csv`. Defaults to the `,` (comma) character. Supported delimiter characters include comma (`,`), pipe (`|`), and tab (`\\t`)."
            },
            "outputFormat": {
              "type": "string",
              "description": "Valid values include: `csv` or `json`. Defaults to `json`. Note: Configure the delimiter for CSV output using the csvDelimiter property."
            },
            "groupByTimeUnit": {
              "type": "string",
              "description": "Time unit used to group the result set. Valid values include: second, minute, hour, day, week, or month. If a query includes groupByTimeUnit, then the result is an aggregation based on the specified time unit and the resultant timestamp does not include milliseconds precision. If a query omits groupByTimeUnit, then the resultant timestamp includes milliseconds precision."
            },
            "envgroupHostname": {
              "type": "string",
              "description": "Hostname needs to be specified if query intends to run at host level. This field is only allowed when query is submitted by CreateHostAsyncQuery where analytics data will be grouped by organization and hostname."
            },
            "reportDefinitionId": {
              "type": "string",
              "description": "Asynchronous Report ID."
            }
          }
        }
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1AsyncQuery",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Asynchronous Query Name."
            },
            "self": {
              "type": "string",
              "description": "Self link of the query. Example: `/organizations/myorg/environments/myenv/queries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd` or following format if query is running at host level: `/organizations/myorg/hostQueries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd`"
            },
            "error": {
              "type": "string",
              "description": "Error is set when query fails."
            },
            "state": {
              "type": "string",
              "description": "Query state could be \"enqueued\", \"running\", \"completed\", \"failed\"."
            },
            "result": {
              "id": "GoogleCloudApigeeV1AsyncQueryResult",
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "description": "Self link of the query results. Example: `/organizations/myorg/environments/myenv/queries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd/result` or following format if query is running at host level: `/organizations/myorg/hostQueries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd/result`"
                },
                "expires": {
                  "type": "string",
                  "description": "Query result will be unaccessable after this time."
                }
              },
              "description": "Result is available only after the query is completed."
            },
            "created": {
              "type": "string",
              "description": "Creation time of the query."
            },
            "updated": {
              "type": "string",
              "description": "Last updated timestamp for the query."
            },
            "resultRows": {
              "type": "string",
              "format": "int64",
              "description": "ResultRows is available only after the query is completed."
            },
            "queryParams": {
              "id": "GoogleCloudApigeeV1QueryMetadata",
              "type": "object",
              "properties": {
                "metrics": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Metrics of the AsyncQuery. Example: [\"name:message_count,func:sum,alias:sum_message_count\"]"
                },
                "timeUnit": {
                  "type": "string",
                  "description": "Query GroupBy time unit."
                },
                "dimensions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Dimensions of the AsyncQuery."
                },
                "endTimestamp": {
                  "type": "string",
                  "description": "End timestamp of the query range."
                },
                "outputFormat": {
                  "type": "string",
                  "description": "Output format."
                },
                "startTimestamp": {
                  "type": "string",
                  "description": "Start timestamp of the query range."
                }
              },
              "description": "Contains information like metrics, dimenstions etc of the AsyncQuery."
            },
            "executionTime": {
              "type": "string",
              "description": "ExecutionTime is available only after the query is completed."
            },
            "resultFileSize": {
              "type": "string",
              "description": "ResultFileSize is available only after the query is completed."
            },
            "envgroupHostname": {
              "type": "string",
              "description": "Hostname is available only when query is executed at host level."
            },
            "reportDefinitionId": {
              "type": "string",
              "description": "Asynchronous Report ID."
            }
          }
        }
      ]
  organizations.hostQueries.get:
    description: |-
      Get status of a query submitted at host level. If the query is still in progress, the `state` is set to "running" After the query has completed successfully, `state` is set to "completed"
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.hostQueries/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1AsyncQuery",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Asynchronous Query Name."
            },
            "self": {
              "type": "string",
              "description": "Self link of the query. Example: `/organizations/myorg/environments/myenv/queries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd` or following format if query is running at host level: `/organizations/myorg/hostQueries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd`"
            },
            "error": {
              "type": "string",
              "description": "Error is set when query fails."
            },
            "state": {
              "type": "string",
              "description": "Query state could be \"enqueued\", \"running\", \"completed\", \"failed\"."
            },
            "result": {
              "id": "GoogleCloudApigeeV1AsyncQueryResult",
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "description": "Self link of the query results. Example: `/organizations/myorg/environments/myenv/queries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd/result` or following format if query is running at host level: `/organizations/myorg/hostQueries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd/result`"
                },
                "expires": {
                  "type": "string",
                  "description": "Query result will be unaccessable after this time."
                }
              },
              "description": "Result is available only after the query is completed."
            },
            "created": {
              "type": "string",
              "description": "Creation time of the query."
            },
            "updated": {
              "type": "string",
              "description": "Last updated timestamp for the query."
            },
            "resultRows": {
              "type": "string",
              "format": "int64",
              "description": "ResultRows is available only after the query is completed."
            },
            "queryParams": {
              "id": "GoogleCloudApigeeV1QueryMetadata",
              "type": "object",
              "properties": {
                "metrics": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Metrics of the AsyncQuery. Example: [\"name:message_count,func:sum,alias:sum_message_count\"]"
                },
                "timeUnit": {
                  "type": "string",
                  "description": "Query GroupBy time unit."
                },
                "dimensions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Dimensions of the AsyncQuery."
                },
                "endTimestamp": {
                  "type": "string",
                  "description": "End timestamp of the query range."
                },
                "outputFormat": {
                  "type": "string",
                  "description": "Output format."
                },
                "startTimestamp": {
                  "type": "string",
                  "description": "Start timestamp of the query range."
                }
              },
              "description": "Contains information like metrics, dimenstions etc of the AsyncQuery."
            },
            "executionTime": {
              "type": "string",
              "description": "ExecutionTime is available only after the query is completed."
            },
            "resultFileSize": {
              "type": "string",
              "description": "ResultFileSize is available only after the query is completed."
            },
            "envgroupHostname": {
              "type": "string",
              "description": "Hostname is available only when query is executed at host level."
            },
            "reportDefinitionId": {
              "type": "string",
              "description": "Asynchronous Report ID."
            }
          }
        }
      ]
  organizations.hostQueries.getResult:
    description: |-
      After the query is completed, use this API to retrieve the results. If the request succeeds, and there is a non-zero result set, the result is downloaded to the client as a zipped JSON file. The name of the downloaded file will be: OfflineQueryResult-.zip Example: `OfflineQueryResult-9cfc0d85-0f30-46d6-ae6f-318d0cb961bd.zip`
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.hostQueries/getResult
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleApiHttpBody",
          "type": "object",
          "properties": {
            "data": {
              "type": "string",
              "format": "byte",
              "description": "The HTTP request/response body as raw binary."
            },
            "extensions": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": {
                  "type": "any",
                  "description": "Properties of the object. Contains field @type with type URL."
                }
              },
              "description": "Application specific response metadata. Must be set in the first response for streaming APIs."
            },
            "contentType": {
              "type": "string",
              "description": "The HTTP Content-Type header value specifying the content type of the body."
            }
          },
          "description": "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged."
        }
      ]
  organizations.hostQueries.getResultView:
    description: ''
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.hostQueries/getResultView
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1AsyncQueryResultView",
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "format": "int32",
              "description": "Error code when there is a failure."
            },
            "rows": {
              "type": "array",
              "items": {
                "type": "any"
              },
              "description": "Rows of query result. Each row is a JSON object. Example: {sum(message_count): 1, developer_app: \"(not set)\",…}"
            },
            "error": {
              "type": "string",
              "description": "Error message when there is a failure."
            },
            "state": {
              "type": "string",
              "description": "State of retrieving ResultView."
            },
            "metadata": {
              "id": "GoogleCloudApigeeV1QueryMetadata",
              "type": "object",
              "properties": {
                "metrics": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Metrics of the AsyncQuery. Example: [\"name:message_count,func:sum,alias:sum_message_count\"]"
                },
                "timeUnit": {
                  "type": "string",
                  "description": "Query GroupBy time unit."
                },
                "dimensions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Dimensions of the AsyncQuery."
                },
                "endTimestamp": {
                  "type": "string",
                  "description": "End timestamp of the query range."
                },
                "outputFormat": {
                  "type": "string",
                  "description": "Output format."
                },
                "startTimestamp": {
                  "type": "string",
                  "description": "Start timestamp of the query range."
                }
              },
              "description": "Metadata contains information like metrics, dimenstions etc of the AsyncQuery."
            }
          }
        }
      ]
  organizations.hostQueries.list:
    description: |-
      Return a list of Asynchronous Queries at host level.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.hostQueries/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ListAsyncQueriesResponse",
          "type": "object",
          "properties": {
            "queries": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1AsyncQuery",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Asynchronous Query Name."
                  },
                  "self": {
                    "type": "string",
                    "description": "Self link of the query. Example: `/organizations/myorg/environments/myenv/queries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd` or following format if query is running at host level: `/organizations/myorg/hostQueries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd`"
                  },
                  "error": {
                    "type": "string",
                    "description": "Error is set when query fails."
                  },
                  "state": {
                    "type": "string",
                    "description": "Query state could be \"enqueued\", \"running\", \"completed\", \"failed\"."
                  },
                  "result": {
                    "id": "GoogleCloudApigeeV1AsyncQueryResult",
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "description": "Self link of the query results. Example: `/organizations/myorg/environments/myenv/queries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd/result` or following format if query is running at host level: `/organizations/myorg/hostQueries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd/result`"
                      },
                      "expires": {
                        "type": "string",
                        "description": "Query result will be unaccessable after this time."
                      }
                    },
                    "description": "Result is available only after the query is completed."
                  },
                  "created": {
                    "type": "string",
                    "description": "Creation time of the query."
                  },
                  "updated": {
                    "type": "string",
                    "description": "Last updated timestamp for the query."
                  },
                  "resultRows": {
                    "type": "string",
                    "format": "int64",
                    "description": "ResultRows is available only after the query is completed."
                  },
                  "queryParams": {
                    "id": "GoogleCloudApigeeV1QueryMetadata",
                    "type": "object",
                    "properties": {
                      "metrics": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Metrics of the AsyncQuery. Example: [\"name:message_count,func:sum,alias:sum_message_count\"]"
                      },
                      "timeUnit": {
                        "type": "string",
                        "description": "Query GroupBy time unit."
                      },
                      "dimensions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Dimensions of the AsyncQuery."
                      },
                      "endTimestamp": {
                        "type": "string",
                        "description": "End timestamp of the query range."
                      },
                      "outputFormat": {
                        "type": "string",
                        "description": "Output format."
                      },
                      "startTimestamp": {
                        "type": "string",
                        "description": "Start timestamp of the query range."
                      }
                    },
                    "description": "Contains information like metrics, dimenstions etc of the AsyncQuery."
                  },
                  "executionTime": {
                    "type": "string",
                    "description": "ExecutionTime is available only after the query is completed."
                  },
                  "resultFileSize": {
                    "type": "string",
                    "description": "ResultFileSize is available only after the query is completed."
                  },
                  "envgroupHostname": {
                    "type": "string",
                    "description": "Hostname is available only when query is executed at host level."
                  },
                  "reportDefinitionId": {
                    "type": "string",
                    "description": "Asynchronous Report ID."
                  }
                }
              },
              "description": "The asynchronous queries belong to requested resource name."
            }
          },
          "description": "The response for ListAsyncQueries."
        }
      ]
  organizations.hostStats.get:
    description: |-
      Retrieve metrics grouped by dimensions in host level. The types of metrics you can retrieve include traffic, message counts, API call latency, response size, and cache hits and counts. Dimensions let you view metrics in meaningful groups. The stats api does accept dimensions as path params. The dimensions are optional in which case the metrics are computed on the entire data for the given timerange.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.hostStats/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1Stats",
          "type": "object",
          "properties": {
            "hosts": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1StatsHostStats",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "This field contains the hostname used in query."
                  },
                  "metrics": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1Metric",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "This field contains the metric name."
                        },
                        "values": {
                          "type": "array",
                          "items": {
                            "type": "any"
                          },
                          "description": "List of metric values. Possible value format: \"values\":[\"39.0\"] or \"values\":[ { \"value\": \"39.0\", \"timestamp\": 1232434354} ]"
                        }
                      },
                      "description": "This message type encapsulates the metric data point. Example: { \"name\": \"sum(message_count)\", \"values\" : [ { \"timestamp\": 1549004400000, \"value\": \"39.0\" }, { \"timestamp\" : 1548997200000, \"value\" : \"0.0\" } ] } or { \"name\": \"sum(message_count)\", \"values\" : [\"39.0\"] }"
                    },
                    "description": "In the final response, only one of the following fields will be present based on the dimensions provided. If no dimensions are provided, then only a top level metrics is provided. If dimensions are included, then there will be a top level dimensions field under hostnames which will contain metrics values and the dimension name. Example: \"hosts\": [ { \"dimensions\": [ { \"metrics\": [ { \"name\": \"sum(message_count)\", \"values\": [ \"2.14049521E8\" ] } ], \"name\": \"nit_proxy\" } ], \"name\": \"example.com\" } ] OR \"hosts\": [ { \"metrics\": [ { \"name\": \"sum(message_count)\", \"values\": [ \"2.19026331E8\" ] } ], \"name\": \"example.com\" } ] This field contains the list of metric values."
                  },
                  "dimensions": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1DimensionMetric",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "This field contains the name of the dimension."
                        },
                        "metrics": {
                          "type": "array",
                          "items": {
                            "id": "GoogleCloudApigeeV1Metric",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "This field contains the metric name."
                              },
                              "values": {
                                "type": "array",
                                "items": {
                                  "type": "any"
                                },
                                "description": "List of metric values. Possible value format: \"values\":[\"39.0\"] or \"values\":[ { \"value\": \"39.0\", \"timestamp\": 1232434354} ]"
                              }
                            },
                            "description": "This message type encapsulates the metric data point. Example: { \"name\": \"sum(message_count)\", \"values\" : [ { \"timestamp\": 1549004400000, \"value\": \"39.0\" }, { \"timestamp\" : 1548997200000, \"value\" : \"0.0\" } ] } or { \"name\": \"sum(message_count)\", \"values\" : [\"39.0\"] }"
                          },
                          "description": "This field contains a list of metrics."
                        }
                      },
                      "description": "This message type encapsulates a metric grouped by dimension."
                    },
                    "description": "This field contains the list of metrics grouped under dimensions."
                  }
                },
                "description": "This message type encapsulates the hostname wrapper: \"hosts\": [ { \"metrics\": [ { \"name\": \"sum(message_count)\", \"values\": [ \"2.52056245E8\" ] } ], \"name\": \"example.com\" } ]"
              },
              "description": "This field contains a list of query results grouped by host."
            },
            "metaData": {
              "id": "GoogleCloudApigeeV1Metadata",
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of error messages as strings."
                },
                "notices": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of additional information such as data source, if result was truncated etc. E.g \"notices\": [ \"Source:Postgres\", \"PG Host:uappg0rw.e2e.apigeeks.net\", \"query served by:4b64601e-40de-4eb1-bfb9-eeee7ac929ed\", \"Table used: edge.api.uapgroup2.agg_api\" ]"
                }
              },
              "description": "This field contains the metadata information."
            },
            "environments": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1StatsEnvironmentStats",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "metrics": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1Metric",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "This field contains the metric name."
                        },
                        "values": {
                          "type": "array",
                          "items": {
                            "type": "any"
                          },
                          "description": "List of metric values. Possible value format: \"values\":[\"39.0\"] or \"values\":[ { \"value\": \"39.0\", \"timestamp\": 1232434354} ]"
                        }
                      },
                      "description": "This message type encapsulates the metric data point. Example: { \"name\": \"sum(message_count)\", \"values\" : [ { \"timestamp\": 1549004400000, \"value\": \"39.0\" }, { \"timestamp\" : 1548997200000, \"value\" : \"0.0\" } ] } or { \"name\": \"sum(message_count)\", \"values\" : [\"39.0\"] }"
                    },
                    "description": "In the final response, only one of the following fields will be present based on the dimensions provided. If no dimensions are provided, then only a top level metrics is provided. If dimensions are included, then there will be a top level dimensions field under environments which will contain metrics values and the dimension name. Example: \"environments\": [ { \"dimensions\": [ { \"metrics\": [ { \"name\": \"sum(message_count)\", \"values\": [ \"2.14049521E8\" ] } ], \"name\": \"nit_proxy\" } ], \"name\": \"prod\" } ] OR \"environments\": [ { \"metrics\": [ { \"name\": \"sum(message_count)\", \"values\": [ \"2.19026331E8\" ] } ], \"name\": \"prod\" } ] This field contains the list of metric values."
                  },
                  "dimensions": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1DimensionMetric",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "This field contains the name of the dimension."
                        },
                        "metrics": {
                          "type": "array",
                          "items": {
                            "id": "GoogleCloudApigeeV1Metric",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "This field contains the metric name."
                              },
                              "values": {
                                "type": "array",
                                "items": {
                                  "type": "any"
                                },
                                "description": "List of metric values. Possible value format: \"values\":[\"39.0\"] or \"values\":[ { \"value\": \"39.0\", \"timestamp\": 1232434354} ]"
                              }
                            },
                            "description": "This message type encapsulates the metric data point. Example: { \"name\": \"sum(message_count)\", \"values\" : [ { \"timestamp\": 1549004400000, \"value\": \"39.0\" }, { \"timestamp\" : 1548997200000, \"value\" : \"0.0\" } ] } or { \"name\": \"sum(message_count)\", \"values\" : [\"39.0\"] }"
                          },
                          "description": "This field contains a list of metrics."
                        }
                      },
                      "description": "This message type encapsulates a metric grouped by dimension."
                    },
                    "description": "This field contains the list of metrics grouped under dimensions."
                  }
                },
                "description": "This message type encapsulates the environment wrapper: \"environments\": [ { \"metrics\": [ { \"name\": \"sum(message_count)\", \"values\": [ \"2.52056245E8\" ] } ], \"name\": \"prod\" } ]"
              },
              "description": "This field contains a list of query results on environment level."
            }
          },
          "description": "This message type encapsulates a stats response."
        }
      ]
  organizations.instances.attachments.create:
    description: |-
      Creates a new attachment of an environment to an instance. **Note:** Not supported for Apigee hybrid.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances.attachments/create
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1InstanceAttachment",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. ID of the attachment."
            },
            "createdAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Time the attachment was created in milliseconds since epoch."
            },
            "environment": {
              "type": "string",
              "description": "ID of the attached environment."
            }
          },
          "description": "InstanceAttachment represents the installation of an environment onto an instance."
        }
      ]
      outputs: [
        {
          "id": "GoogleLongrunningOperation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "GoogleRpcStatus",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  organizations.instances.attachments.delete:
    description: |-
      Deletes an attachment. **Note:** Not supported for Apigee hybrid.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances.attachments/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleLongrunningOperation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "GoogleRpcStatus",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  organizations.instances.attachments.get:
    description: |-
      Gets an attachment. **Note:** Not supported for Apigee hybrid.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances.attachments/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.instances.attachments.list:
    description: |-
      Lists all attachments to an instance. **Note:** Not supported for Apigee hybrid.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances.attachments/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ListInstanceAttachmentsResponse",
          "type": "object",
          "properties": {
            "attachments": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1InstanceAttachment",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. ID of the attachment."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "int64",
                    "readOnly": true,
                    "description": "Output only. Time the attachment was created in milliseconds since epoch."
                  },
                  "environment": {
                    "type": "string",
                    "description": "ID of the attached environment."
                  }
                },
                "description": "InstanceAttachment represents the installation of an environment onto an instance."
              },
              "description": "Attachments for the instance."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Page token that you can include in a ListInstanceAttachments request to retrieve the next page of content. If omitted, no subsequent pages exist."
            }
          },
          "description": "Response for ListInstanceAttachments."
        }
      ]
  organizations.instances.canaryevaluations.create:
    description: |-
      Creates a new canary evaluation for an organization.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances.canaryevaluations/create
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1CanaryEvaluation",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Name of the canary evalution."
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "RUNNING",
                "SUCCEEDED"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. The current state of the canary evaluation.",
              "enumDescriptions": [
                "No state has been specified.",
                "The canary evaluation is still in progress.",
                "The canary evaluation has finished."
              ]
            },
            "control": {
              "type": "string",
              "description": "Required. The stable version that is serving requests."
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Required. End time for the evaluation's analysis."
            },
            "verdict": {
              "enum": [
                "VERDICT_UNSPECIFIED",
                "NONE",
                "FAIL",
                "PASS"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. The resulting verdict of the canary evaluations: NONE, PASS, or FAIL.",
              "enumDescriptions": [
                "Verdict is not available yet.",
                "No verdict reached.",
                "Evaluation is not good.",
                "Evaluation is good."
              ]
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Required. Start time for the canary evaluation's analysis."
            },
            "treatment": {
              "type": "string",
              "description": "Required. The newer version that is serving requests."
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Create time of the canary evaluation."
            },
            "metricLabels": {
              "id": "GoogleCloudApigeeV1CanaryEvaluationMetricLabels",
              "type": "object",
              "properties": {
                "env": {
                  "type": "string",
                  "description": "The environment ID associated with the metrics."
                },
                "location": {
                  "type": "string",
                  "description": "Required. The location associated with the metrics."
                },
                "instance_id": {
                  "type": "string",
                  "description": "Required. The instance ID associated with the metrics. In Apigee Hybrid, the value is configured during installation."
                }
              },
              "description": "Required. Labels used to filter the metrics used for a canary evaluation."
            }
          },
          "description": "CanaryEvaluation represents the canary analysis between two versions of the runtime that is serving requests."
        }
      ]
      outputs: [
        {
          "id": "GoogleLongrunningOperation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "GoogleRpcStatus",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  organizations.instances.canaryevaluations.get:
    description: |-
      Gets a CanaryEvaluation for an organization.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances.canaryevaluations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.instances.create:
    description: |-
      Creates an Apigee runtime instance. The instance is accessible from the authorized network configured on the organization. **Note:** Not supported for Apigee hybrid.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances/create
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1Instance",
          "type": "object",
          "properties": {
            "host": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Internal hostname or IP address of the Apigee endpoint used by clients to connect to the service."
            },
            "name": {
              "type": "string",
              "description": "Required. Resource ID of the instance. Values must match the regular expression `^a-z{0,30}[a-z\\d]$`."
            },
            "port": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Port number of the exposed Apigee endpoint."
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "CREATING",
                "ACTIVE",
                "DELETING"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. State of the instance. Values other than `ACTIVE` means the resource is not ready to use.",
              "enumDescriptions": [
                "Resource is in an unspecified state.",
                "Resource is being created.",
                "Resource is provisioned and ready to use.",
                "The resource is being deleted."
              ]
            },
            "location": {
              "type": "string",
              "description": "Required. Compute Engine location where the instance resides."
            },
            "createdAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Time the instance was created in milliseconds since epoch."
            },
            "description": {
              "type": "string",
              "description": "Optional. Description of the instance."
            },
            "displayName": {
              "type": "string",
              "description": "Optional. Display name for the instance."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Time the instance was last modified in milliseconds since epoch."
            },
            "peeringCidrRange": {
              "enum": [
                "CIDR_RANGE_UNSPECIFIED",
                "SLASH_16",
                "SLASH_17",
                "SLASH_18",
                "SLASH_19",
                "SLASH_20",
                "SLASH_23"
              ],
              "type": "string",
              "description": "Optional. Size of the CIDR block range that will be reserved by the instance. PAID organizations support `SLASH_16` to `SLASH_20` and defaults to `SLASH_16`. Evaluation organizations support only `SLASH_23`.",
              "enumDescriptions": [
                "Range not specified.",
                "`/16` CIDR range.",
                "`/17` CIDR range.",
                "`/18` CIDR range.",
                "`/19` CIDR range.",
                "`/20` CIDR range.",
                "`/23` CIDR range. Supported for evaluation only."
              ]
            },
            "diskEncryptionKeyName": {
              "type": "string",
              "description": "Customer Managed Encryption Key (CMEK) used for disk and volume encryption. Required for Apigee paid subscriptions only. Use the following format: `projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)`"
            }
          },
          "description": "Apigee runtime instance."
        }
      ]
      outputs: [
        {
          "id": "GoogleLongrunningOperation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "GoogleRpcStatus",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  organizations.instances.delete:
    description: |-
      Deletes an Apigee runtime instance. The instance stops serving requests and the runtime data is deleted. **Note:** Not supported for Apigee hybrid.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleLongrunningOperation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "GoogleRpcStatus",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  organizations.instances.get:
    description: |-
      Gets the details for an Apigee runtime instance. **Note:** Not supported for Apigee hybrid.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.instances.list:
    description: |-
      Lists all Apigee runtime instances for the organization. **Note:** Not supported for Apigee hybrid.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ListInstancesResponse",
          "type": "object",
          "properties": {
            "instances": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Instance",
                "type": "object",
                "properties": {
                  "host": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Internal hostname or IP address of the Apigee endpoint used by clients to connect to the service."
                  },
                  "name": {
                    "type": "string",
                    "description": "Required. Resource ID of the instance. Values must match the regular expression `^a-z{0,30}[a-z\\d]$`."
                  },
                  "port": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Port number of the exposed Apigee endpoint."
                  },
                  "state": {
                    "enum": [
                      "STATE_UNSPECIFIED",
                      "CREATING",
                      "ACTIVE",
                      "DELETING"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. State of the instance. Values other than `ACTIVE` means the resource is not ready to use.",
                    "enumDescriptions": [
                      "Resource is in an unspecified state.",
                      "Resource is being created.",
                      "Resource is provisioned and ready to use.",
                      "The resource is being deleted."
                    ]
                  },
                  "location": {
                    "type": "string",
                    "description": "Required. Compute Engine location where the instance resides."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "int64",
                    "readOnly": true,
                    "description": "Output only. Time the instance was created in milliseconds since epoch."
                  },
                  "description": {
                    "type": "string",
                    "description": "Optional. Description of the instance."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Optional. Display name for the instance."
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "int64",
                    "readOnly": true,
                    "description": "Output only. Time the instance was last modified in milliseconds since epoch."
                  },
                  "peeringCidrRange": {
                    "enum": [
                      "CIDR_RANGE_UNSPECIFIED",
                      "SLASH_16",
                      "SLASH_17",
                      "SLASH_18",
                      "SLASH_19",
                      "SLASH_20",
                      "SLASH_23"
                    ],
                    "type": "string",
                    "description": "Optional. Size of the CIDR block range that will be reserved by the instance. PAID organizations support `SLASH_16` to `SLASH_20` and defaults to `SLASH_16`. Evaluation organizations support only `SLASH_23`.",
                    "enumDescriptions": [
                      "Range not specified.",
                      "`/16` CIDR range.",
                      "`/17` CIDR range.",
                      "`/18` CIDR range.",
                      "`/19` CIDR range.",
                      "`/20` CIDR range.",
                      "`/23` CIDR range. Supported for evaluation only."
                    ]
                  },
                  "diskEncryptionKeyName": {
                    "type": "string",
                    "description": "Customer Managed Encryption Key (CMEK) used for disk and volume encryption. Required for Apigee paid subscriptions only. Use the following format: `projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)`"
                  }
                },
                "description": "Apigee runtime instance."
              },
              "description": "Instances in the specified organization."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Page token that you can include in a ListInstance request to retrieve the next page of content. If omitted, no subsequent pages exist."
            }
          },
          "description": "Response for ListInstances."
        }
      ]
  organizations.instances.natAddresses.activate:
    description: |-
      Activates the NAT address. The Apigee instance can now use this for Internet egress traffic. **Note:** Not supported for Apigee hybrid.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances.natAddresses/activate
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1ActivateNatAddressRequest",
          "type": "object",
          "properties": {},
          "description": "Request for ActivateNatAddressRequest. Activate the nat address request."
        }
      ]
      outputs: [
        {
          "id": "GoogleLongrunningOperation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "GoogleRpcStatus",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  organizations.instances.natAddresses.create:
    description: |-
      Creates a NAT address. The address is created in the RESERVED state and a static external IP address will be provisioned. At this time, the instance will not use this IP address for Internet egress traffic. The address can be activated for use once any required firewall IP whitelisting has been completed. **Note:** Not supported for Apigee hybrid.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances.natAddresses/create
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1NatAddress",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Required. Resource ID of the NAT address."
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "CREATING",
                "RESERVED",
                "ACTIVE",
                "DELETING"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. State of the nat address.",
              "enumDescriptions": [
                "The resource is in an unspecified state.",
                "The NAT address is being created.",
                "The NAT address is reserved but not yet used for Internet egress.",
                "The NAT address is active and used for Internet egress.",
                "The NAT address is being deleted."
              ]
            },
            "ipAddress": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The static IPV4 address."
            }
          },
          "description": "Apigee NAT(network address translation) address. A NAT address is a static external IP address used for Internet egress traffic."
        }
      ]
      outputs: [
        {
          "id": "GoogleLongrunningOperation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "GoogleRpcStatus",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  organizations.instances.natAddresses.delete:
    description: |-
      Deletes the NAT address. Connections that are actively using the address are drained before it is removed. **Note:** Not supported for Apigee hybrid.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances.natAddresses/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleLongrunningOperation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "GoogleRpcStatus",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  organizations.instances.natAddresses.get:
    description: |-
      Gets the details of a NAT address. **Note:** Not supported for Apigee hybrid.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances.natAddresses/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.instances.natAddresses.list:
    description: |-
      Lists the NAT addresses for an Apigee instance. **Note:** Not supported for Apigee hybrid.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances.natAddresses/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ListNatAddressesResponse",
          "type": "object",
          "properties": {
            "natAddresses": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1NatAddress",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Required. Resource ID of the NAT address."
                  },
                  "state": {
                    "enum": [
                      "STATE_UNSPECIFIED",
                      "CREATING",
                      "RESERVED",
                      "ACTIVE",
                      "DELETING"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. State of the nat address.",
                    "enumDescriptions": [
                      "The resource is in an unspecified state.",
                      "The NAT address is being created.",
                      "The NAT address is reserved but not yet used for Internet egress.",
                      "The NAT address is active and used for Internet egress.",
                      "The NAT address is being deleted."
                    ]
                  },
                  "ipAddress": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The static IPV4 address."
                  }
                },
                "description": "Apigee NAT(network address translation) address. A NAT address is a static external IP address used for Internet egress traffic."
              },
              "description": "List of NAT Addresses for the instance."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Page token that you can include in a ListNatAddresses request to retrieve the next page of content. If omitted, no subsequent pages exist."
            }
          },
          "description": "Response for ListNatAddresses."
        }
      ]
  organizations.instances.reportStatus:
    description: |-
      Reports the latest status for a runtime instance.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances/reportStatus
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1ReportInstanceStatusRequest",
          "type": "object",
          "properties": {
            "resources": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1ResourceStatus",
                "type": "object",
                "properties": {
                  "uid": {
                    "type": "string",
                    "description": "The uid of the resource. In the unexpected case that the instance has multiple uids for the same name, they should be reported under separate ResourceStatuses."
                  },
                  "resource": {
                    "type": "string",
                    "description": "The resource name. Currently only two resources are supported: EnvironmentGroup - organizations/{org}/envgroups/{envgroup} EnvironmentConfig - organizations/{org}/environments/{environment}/deployedConfig"
                  },
                  "revisions": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1RevisionStatus",
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "id": "GoogleCloudApigeeV1UpdateError",
                            "type": "object",
                            "properties": {
                              "code": {
                                "enum": [
                                  "OK",
                                  "CANCELLED",
                                  "UNKNOWN",
                                  "INVALID_ARGUMENT",
                                  "DEADLINE_EXCEEDED",
                                  "NOT_FOUND",
                                  "ALREADY_EXISTS",
                                  "PERMISSION_DENIED",
                                  "UNAUTHENTICATED",
                                  "RESOURCE_EXHAUSTED",
                                  "FAILED_PRECONDITION",
                                  "ABORTED",
                                  "OUT_OF_RANGE",
                                  "UNIMPLEMENTED",
                                  "INTERNAL",
                                  "UNAVAILABLE",
                                  "DATA_LOSS"
                                ],
                                "type": "string",
                                "description": "Status code.",
                                "enumDescriptions": [
                                  "Not an error; returned on success HTTP Mapping: 200 OK",
                                  "The operation was cancelled, typically by the caller. HTTP Mapping: 499 Client Closed Request",
                                  "Unknown error. For example, this error may be returned when a `Status` value received from another address space belongs to an error space that is not known in this address space. Also errors raised by APIs that do not return enough error information may be converted to this error. HTTP Mapping: 500 Internal Server Error",
                                  "The client specified an invalid argument. Note that this differs from `FAILED_PRECONDITION`. `INVALID_ARGUMENT` indicates arguments that are problematic regardless of the state of the system (e.g., a malformed file name). HTTP Mapping: 400 Bad Request",
                                  "The deadline expired before the operation could complete. For operations that change the state of the system, this error may be returned even if the operation has completed successfully. For example, a successful response from a server could have been delayed long enough for the deadline to expire. HTTP Mapping: 504 Gateway Timeout",
                                  "Some requested entity (e.g., file or directory) was not found. Note to server developers: if a request is denied for an entire class of users, such as gradual feature rollout or undocumented allowlist, `NOT_FOUND` may be used. If a request is denied for some users within a class of users, such as user-based access control, `PERMISSION_DENIED` must be used. HTTP Mapping: 404 Not Found",
                                  "The entity that a client attempted to create (e.g., file or directory) already exists. HTTP Mapping: 409 Conflict",
                                  "The caller does not have permission to execute the specified operation. `PERMISSION_DENIED` must not be used for rejections caused by exhausting some resource (use `RESOURCE_EXHAUSTED` instead for those errors). `PERMISSION_DENIED` must not be used if the caller can not be identified (use `UNAUTHENTICATED` instead for those errors). This error code does not imply the request is valid or the requested entity exists or satisfies other pre-conditions. HTTP Mapping: 403 Forbidden",
                                  "The request does not have valid authentication credentials for the operation. HTTP Mapping: 401 Unauthorized",
                                  "Some resource has been exhausted, perhaps a per-user quota, or perhaps the entire file system is out of space. HTTP Mapping: 429 Too Many Requests",
                                  "The operation was rejected because the system is not in a state required for the operation's execution. For example, the directory to be deleted is non-empty, an rmdir operation is applied to a non-directory, etc. Service implementors can use the following guidelines to decide between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`: (a) Use `UNAVAILABLE` if the client can retry just the failing call. (b) Use `ABORTED` if the client should retry at a higher level. For example, when a client-specified test-and-set fails, indicating the client should restart a read-modify-write sequence. (c) Use `FAILED_PRECONDITION` if the client should not retry until the system state has been explicitly fixed. For example, if an \"rmdir\" fails because the directory is non-empty, `FAILED_PRECONDITION` should be returned since the client should not retry unless the files are deleted from the directory. HTTP Mapping: 400 Bad Request",
                                  "The operation was aborted, typically due to a concurrency issue such as a sequencer check failure or transaction abort. See the guidelines above for deciding between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`. HTTP Mapping: 409 Conflict",
                                  "The operation was attempted past the valid range. E.g., seeking or reading past end-of-file. Unlike `INVALID_ARGUMENT`, this error indicates a problem that may be fixed if the system state changes. For example, a 32-bit file system will generate `INVALID_ARGUMENT` if asked to read at an offset that is not in the range [0,2^32-1], but it will generate `OUT_OF_RANGE` if asked to read from an offset past the current file size. There is a fair bit of overlap between `FAILED_PRECONDITION` and `OUT_OF_RANGE`. We recommend using `OUT_OF_RANGE` (the more specific error) when it applies so that callers who are iterating through a space can easily look for an `OUT_OF_RANGE` error to detect when they are done. HTTP Mapping: 400 Bad Request",
                                  "The operation is not implemented or is not supported/enabled in this service. HTTP Mapping: 501 Not Implemented",
                                  "Internal errors. This means that some invariants expected by the underlying system have been broken. This error code is reserved for serious errors. HTTP Mapping: 500 Internal Server Error",
                                  "The service is currently unavailable. This is most likely a transient condition, which can be corrected by retrying with a backoff. Note that it is not always safe to retry non-idempotent operations. See the guidelines above for deciding between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`. HTTP Mapping: 503 Service Unavailable",
                                  "Unrecoverable data loss or corruption. HTTP Mapping: 500 Internal Server Error"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "description": "A string that uniquely identifies the type of error. This provides a more reliable means to deduplicate errors across revisions and instances."
                              },
                              "message": {
                                "type": "string",
                                "description": "User-friendly error message."
                              },
                              "resource": {
                                "type": "string",
                                "description": "The sub resource specific to this error (e.g. a proxy deployed within the EnvironmentConfig). If empty the error refers to the top level resource."
                              }
                            },
                            "description": "Details on why a resource update failed in the runtime."
                          },
                          "description": "Errors reported when attempting to load this revision."
                        },
                        "jsonSpec": {
                          "type": "string",
                          "description": "The json content of the resource revision."
                        },
                        "replicas": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The number of replicas that have successfully loaded this revision."
                        },
                        "revisionId": {
                          "type": "string",
                          "description": "The revision of the resource."
                        }
                      },
                      "description": "The status of a specific resource revision."
                    },
                    "description": "Revisions of the resource currently deployed in the instance."
                  },
                  "totalReplicas": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total number of replicas that should have this resource."
                  }
                },
                "description": "The status of a resource loaded in the runtime."
              },
              "description": "Status for config resources"
            },
            "reportTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time the report was generated in the runtime. Used to prevent an old status from overwriting a newer one. An instance should space out it's status reports so that clock skew does not play a factor."
            },
            "instanceUid": {
              "type": "string",
              "description": "A unique ID for the instance which is guaranteed to be unique in case the user installs multiple hybrid runtimes with the same instance ID."
            }
          },
          "description": "Request for ReportInstanceStatus."
        }
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ReportInstanceStatusResponse",
          "type": "object",
          "properties": {},
          "description": "Placeholder for future enhancements to status reporting protocol"
        }
      ]
  organizations.keyvaluemaps.create:
    description: |-
      Creates a key value map in an organization.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.keyvaluemaps/create
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1KeyValueMap",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Required. The id of the key value map."
            },
            "encrypted": {
              "type": "boolean",
              "description": "Optional. If `true` entry values will be encrypted."
            }
          },
          "description": "A collection of key, value string pairs"
        }
      ]
      outputs: [
        {}
      ]
  organizations.keyvaluemaps.delete:
    description: |-
      Delete a key value map in an organization.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.keyvaluemaps/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.list:
    description: |-
      Lists the Apigee organizations and associated GCP projects that you have permission to access. See [Understanding organizations](https://cloud.google.com/apigee/docs/api-platform/fundamentals/organization-structure).
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ListOrganizationsResponse",
          "type": "object",
          "properties": {
            "organizations": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1OrganizationProjectMapping",
                "type": "object",
                "properties": {
                  "projectIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of GCP projects associated with the Apigee organization."
                  },
                  "organization": {
                    "type": "string",
                    "description": "Name of the Apigee organization."
                  }
                }
              },
              "description": "List of Apigee organizations and associated GCP projects."
            }
          }
        }
      ]
  organizations.operations.get:
    description: |-
      Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.operations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleLongrunningOperation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "GoogleRpcStatus",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  organizations.operations.list:
    description: |-
      Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.operations/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleLongrunningListOperationsResponse",
          "type": "object",
          "properties": {
            "operations": {
              "type": "array",
              "items": {
                "id": "GoogleLongrunningOperation",
                "type": "object",
                "properties": {
                  "done": {
                    "type": "boolean",
                    "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
                  },
                  "name": {
                    "type": "string",
                    "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
                  },
                  "error": {
                    "id": "GoogleRpcStatus",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The status code, which should be an enum value of google.rpc.Code."
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object. Contains field @type with type URL."
                          }
                        },
                        "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                      },
                      "message": {
                        "type": "string",
                        "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                      }
                    },
                    "description": "The error result of the operation in case of failure or cancellation."
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "response": {
                    "type": "object",
                    "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  }
                },
                "description": "This resource represents a long-running operation that is the result of a network API call."
              },
              "description": "A list of operations that matches the specified filter in the request."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The standard List next-page token."
            }
          },
          "description": "The response message for Operations.ListOperations."
        }
      ]
  organizations.optimizedHostStats.get:
    description: |-
      This api is similar to GetHostStats except that the response is less verbose.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.optimizedHostStats/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1OptimizedStats",
          "type": "object",
          "properties": {
            "Response": {
              "id": "GoogleCloudApigeeV1OptimizedStatsResponse",
              "type": "object",
              "properties": {
                "stats": {
                  "id": "GoogleCloudApigeeV1OptimizedStatsNode",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "any"
                      }
                    }
                  },
                  "description": "This field contains a stats results."
                },
                "TimeUnit": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "int64"
                  },
                  "description": "This field contains a list of time unit values. Time unit refers to an epoch timestamp value."
                },
                "metaData": {
                  "id": "GoogleCloudApigeeV1Metadata",
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of error messages as strings."
                    },
                    "notices": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of additional information such as data source, if result was truncated etc. E.g \"notices\": [ \"Source:Postgres\", \"PG Host:uappg0rw.e2e.apigeeks.net\", \"query served by:4b64601e-40de-4eb1-bfb9-eeee7ac929ed\", \"Table used: edge.api.uapgroup2.agg_api\" ]"
                    }
                  },
                  "description": "This field contains metadata information about the query executed"
                },
                "resultTruncated": {
                  "type": "boolean",
                  "description": "This ia a boolean field to indicate if the results were truncated based on the limit parameter."
                }
              },
              "description": "This field wraps the stats response for Js Optimized Scenario with a Response key. E.g. { \"Response\": { \"TimeUnit\": [], \"metaData\": { \"errors\": [], \"notices\": [ \"Source:Postgres\", \"Table used: edge.api.aaxgroup001.agg_api\", \"PG Host:ruappg08-ro.production.apigeeks.net\", \"query served by:80c4ebca-6a10-4a2e-8faf-c60c1ee306ca\" ] }, \"resultTruncated\": false, \"stats\": { \"data\": [ { \"identifier\": { \"names\": [ \"apiproxy\" ], \"values\": [ \"sirjee\" ] }, \"metric\": [ { \"env\": \"prod\", \"name\": \"sum(message_count)\", \"values\": [ 36.0 ] }, { \"env\": \"prod\", \"name\": \"sum(is_error)\", \"values\": [ 36.0 ] } ] } ] } } }"
            }
          }
        }
      ]
  organizations.reports.create:
    description: |-
      Creates a Custom Report for an Organization. A Custom Report provides Apigee Customers to create custom dashboards in addition to the standard dashboards which are provided. The Custom Report in its simplest form contains specifications about metrics, dimensions and filters. It is important to note that the custom report by itself does not provide an executable entity. The Edge UI converts the custom report definition into an analytics query and displays the result in a chart.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.reports/create
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1CustomReport",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Required. Unique identifier for the report T his is a legacy field used to encode custom report unique id"
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Legacy field: not used. This field contains a list of tags associated with custom report"
            },
            "topk": {
              "type": "string",
              "description": "Legacy field: not used. This field contains the top k parameter value for restricting the result"
            },
            "limit": {
              "type": "string",
              "description": "Legacy field: not used This field contains the limit for the result retrieved"
            },
            "filter": {
              "type": "string",
              "description": "This field contains the filter expression"
            },
            "offset": {
              "type": "string",
              "description": "Legacy field: not used. This field contains the offset for the data"
            },
            "toTime": {
              "type": "string",
              "description": "Legacy field: not used. Contains the end time for the report"
            },
            "metrics": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1CustomReportMetric",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "name of the metric"
                  },
                  "function": {
                    "type": "string",
                    "description": "aggregate function"
                  }
                },
                "description": "This encapsulates a metric property of the form sum(message_count) where name is message_count and function is sum"
              },
              "description": "Required. This contains the list of metrics"
            },
            "comments": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Legacy field: not used. This field contains a list of comments associated with custom report"
            },
            "fromTime": {
              "type": "string",
              "description": "Legacy field: not used. Contains the from time for the report"
            },
            "timeUnit": {
              "type": "string",
              "description": "This field contains the time unit of aggregation for the report"
            },
            "chartType": {
              "type": "string",
              "description": "This field contains the chart type for the report"
            },
            "createdAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Unix time when the app was created json key: createdAt"
            },
            "sortOrder": {
              "type": "string",
              "description": "Legacy field: not used much. Contains the sort order for the sort columns"
            },
            "dimensions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "This contains the list of dimensions for the report"
            },
            "properties": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1ReportProperty",
                "type": "object",
                "properties": {
                  "value": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1Attribute",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "API key of the attribute."
                        },
                        "value": {
                          "type": "string",
                          "description": "Value of the attribute."
                        }
                      },
                      "description": "Key-value pair to store extra metadata."
                    },
                    "description": "property values"
                  },
                  "property": {
                    "type": "string",
                    "description": "name of the property"
                  }
                }
              },
              "description": "This field contains report properties such as ui metadata etc."
            },
            "sortByCols": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Legacy field: not used much. Contains the list of sort by columns"
            },
            "displayName": {
              "type": "string",
              "description": "This is the display name for the report"
            },
            "environment": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Environment name"
            },
            "lastViewedAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Last viewed time of this entity as milliseconds since epoch"
            },
            "organization": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Organization name"
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Modified time of this entity as milliseconds since epoch. json key: lastModifiedAt"
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  organizations.reports.delete:
    description: |-
      Deletes an existing custom report definition
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.reports/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1DeleteCustomReportResponse",
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "description": "The response contains only a message field."
            }
          }
        }
      ]
  organizations.reports.get:
    description: |-
      Retrieve a custom report definition.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.reports/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.reports.list:
    description: |-
      Return a list of Custom Reports
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.reports/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ListCustomReportsResponse",
          "type": "object",
          "properties": {
            "qualifier": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1CustomReport",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Required. Unique identifier for the report T his is a legacy field used to encode custom report unique id"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Legacy field: not used. This field contains a list of tags associated with custom report"
                  },
                  "topk": {
                    "type": "string",
                    "description": "Legacy field: not used. This field contains the top k parameter value for restricting the result"
                  },
                  "limit": {
                    "type": "string",
                    "description": "Legacy field: not used This field contains the limit for the result retrieved"
                  },
                  "filter": {
                    "type": "string",
                    "description": "This field contains the filter expression"
                  },
                  "offset": {
                    "type": "string",
                    "description": "Legacy field: not used. This field contains the offset for the data"
                  },
                  "toTime": {
                    "type": "string",
                    "description": "Legacy field: not used. Contains the end time for the report"
                  },
                  "metrics": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1CustomReportMetric",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "name of the metric"
                        },
                        "function": {
                          "type": "string",
                          "description": "aggregate function"
                        }
                      },
                      "description": "This encapsulates a metric property of the form sum(message_count) where name is message_count and function is sum"
                    },
                    "description": "Required. This contains the list of metrics"
                  },
                  "comments": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Legacy field: not used. This field contains a list of comments associated with custom report"
                  },
                  "fromTime": {
                    "type": "string",
                    "description": "Legacy field: not used. Contains the from time for the report"
                  },
                  "timeUnit": {
                    "type": "string",
                    "description": "This field contains the time unit of aggregation for the report"
                  },
                  "chartType": {
                    "type": "string",
                    "description": "This field contains the chart type for the report"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "int64",
                    "readOnly": true,
                    "description": "Output only. Unix time when the app was created json key: createdAt"
                  },
                  "sortOrder": {
                    "type": "string",
                    "description": "Legacy field: not used much. Contains the sort order for the sort columns"
                  },
                  "dimensions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "This contains the list of dimensions for the report"
                  },
                  "properties": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1ReportProperty",
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "array",
                          "items": {
                            "id": "GoogleCloudApigeeV1Attribute",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "API key of the attribute."
                              },
                              "value": {
                                "type": "string",
                                "description": "Value of the attribute."
                              }
                            },
                            "description": "Key-value pair to store extra metadata."
                          },
                          "description": "property values"
                        },
                        "property": {
                          "type": "string",
                          "description": "name of the property"
                        }
                      }
                    },
                    "description": "This field contains report properties such as ui metadata etc."
                  },
                  "sortByCols": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Legacy field: not used much. Contains the list of sort by columns"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "This is the display name for the report"
                  },
                  "environment": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Environment name"
                  },
                  "lastViewedAt": {
                    "type": "string",
                    "format": "int64",
                    "readOnly": true,
                    "description": "Output only. Last viewed time of this entity as milliseconds since epoch"
                  },
                  "organization": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Organization name"
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "int64",
                    "readOnly": true,
                    "description": "Output only. Modified time of this entity as milliseconds since epoch. json key: lastModifiedAt"
                  }
                }
              }
            }
          },
          "description": "This message encapsulates a list of custom report definitions"
        }
      ]
  organizations.reports.update:
    description: |-
      Update an existing custom report definition
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.reports/update
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1CustomReport",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Required. Unique identifier for the report T his is a legacy field used to encode custom report unique id"
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Legacy field: not used. This field contains a list of tags associated with custom report"
            },
            "topk": {
              "type": "string",
              "description": "Legacy field: not used. This field contains the top k parameter value for restricting the result"
            },
            "limit": {
              "type": "string",
              "description": "Legacy field: not used This field contains the limit for the result retrieved"
            },
            "filter": {
              "type": "string",
              "description": "This field contains the filter expression"
            },
            "offset": {
              "type": "string",
              "description": "Legacy field: not used. This field contains the offset for the data"
            },
            "toTime": {
              "type": "string",
              "description": "Legacy field: not used. Contains the end time for the report"
            },
            "metrics": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1CustomReportMetric",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "name of the metric"
                  },
                  "function": {
                    "type": "string",
                    "description": "aggregate function"
                  }
                },
                "description": "This encapsulates a metric property of the form sum(message_count) where name is message_count and function is sum"
              },
              "description": "Required. This contains the list of metrics"
            },
            "comments": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Legacy field: not used. This field contains a list of comments associated with custom report"
            },
            "fromTime": {
              "type": "string",
              "description": "Legacy field: not used. Contains the from time for the report"
            },
            "timeUnit": {
              "type": "string",
              "description": "This field contains the time unit of aggregation for the report"
            },
            "chartType": {
              "type": "string",
              "description": "This field contains the chart type for the report"
            },
            "createdAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Unix time when the app was created json key: createdAt"
            },
            "sortOrder": {
              "type": "string",
              "description": "Legacy field: not used much. Contains the sort order for the sort columns"
            },
            "dimensions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "This contains the list of dimensions for the report"
            },
            "properties": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1ReportProperty",
                "type": "object",
                "properties": {
                  "value": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1Attribute",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "API key of the attribute."
                        },
                        "value": {
                          "type": "string",
                          "description": "Value of the attribute."
                        }
                      },
                      "description": "Key-value pair to store extra metadata."
                    },
                    "description": "property values"
                  },
                  "property": {
                    "type": "string",
                    "description": "name of the property"
                  }
                }
              },
              "description": "This field contains report properties such as ui metadata etc."
            },
            "sortByCols": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Legacy field: not used much. Contains the list of sort by columns"
            },
            "displayName": {
              "type": "string",
              "description": "This is the display name for the report"
            },
            "environment": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Environment name"
            },
            "lastViewedAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Last viewed time of this entity as milliseconds since epoch"
            },
            "organization": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Organization name"
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Modified time of this entity as milliseconds since epoch. json key: lastModifiedAt"
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  organizations.setAddons:
    description: |-
      Configures the add-ons for the Apigee organization. The existing add-on configuration will be fully replaced.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations/setAddons
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1SetAddonsRequest",
          "type": "object",
          "properties": {
            "addonsConfig": {
              "id": "GoogleCloudApigeeV1AddonsConfig",
              "type": "object",
              "properties": {
                "integrationConfig": {
                  "id": "GoogleCloudApigeeV1IntegrationConfig",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "Flag that specifies whether the Integration add-on is enabled."
                    }
                  },
                  "description": "Configuration for the Integration add-on."
                },
                "monetizationConfig": {
                  "id": "GoogleCloudApigeeV1MonetizationConfig",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "Flag that specifies whether the Monetization add-on is enabled."
                    }
                  },
                  "description": "Configuration for the Monetization add-on."
                },
                "advancedApiOpsConfig": {
                  "id": "GoogleCloudApigeeV1AdvancedApiOpsConfig",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "Flag that specifies whether the Advanced API Ops add-on is enabled."
                    }
                  },
                  "description": "Configuration for the Advanced API Ops add-on."
                }
              },
              "description": "Required. Add-on configurations."
            }
          },
          "description": "Request for SetAddons."
        }
      ]
      outputs: [
        {
          "id": "GoogleLongrunningOperation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "GoogleRpcStatus",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  organizations.setSyncAuthorization:
    description: |-
      Sets the permissions required to allow the Synchronizer to download environment data from the control plane. You must call this API to enable proper functioning of hybrid. Pass the ETag when calling `setSyncAuthorization` to ensure that you are updating the correct version. To get an ETag, call [getSyncAuthorization](getSyncAuthorization). If you don't pass the ETag in the call to `setSyncAuthorization`, then the existing authorization is overwritten indiscriminately. For more information, see [Configure the Synchronizer](https://cloud.google.com/apigee/docs/hybrid/latest/synchronizer-access). **Note**: Available to Apigee hybrid only.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations/setSyncAuthorization
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1SyncAuthorization",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "Entity tag (ETag) used for optimistic concurrency control as a way to help prevent simultaneous updates from overwriting each other. For example, when you call [getSyncAuthorization](organizations/getSyncAuthorization) an ETag is returned in the response. Pass that ETag when calling the [setSyncAuthorization](organizations/setSyncAuthorization) to ensure that you are updating the correct version. If you don't pass the ETag in the call to `setSyncAuthorization`, then the existing authorization is overwritten indiscriminately. **Note**: We strongly recommend that you use the ETag in the read-modify-write cycle to avoid race conditions."
            },
            "identities": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Required. Array of service accounts to grant access to control plane resources, each specified using the following format: `serviceAccount:` service-account-name. The service-account-name is formatted like an email address. For example: `my-synchronizer-manager-service_account@my_project_id.iam.gserviceaccount.com` You might specify multiple service accounts, for example, if you have multiple environments and wish to assign a unique service account to each one. The service accounts must have **Apigee Synchronizer Manager** role. See also [Create service accounts](https://cloud.google.com/apigee/docs/hybrid/latest/sa-about#create-the-service-accounts)."
            }
          }
        }
      ]
  organizations.sharedflows.create:
    description: |-
      Uploads a ZIP-formatted shared flow configuration bundle to an organization. If the shared flow already exists, this creates a new revision of it. If the shared flow does not exist, this creates it. Once imported, the shared flow revision must be deployed before it can be accessed at runtime. The size limit of a shared flow bundle is 15 MB.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.sharedflows/create
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1SharedFlowRevision",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The resource ID of the parent shared flow."
            },
            "type": {
              "type": "string",
              "description": "The string \"Application\""
            },
            "policies": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of policy names included in this shared flow revision."
            },
            "revision": {
              "type": "string",
              "description": "The resource ID of this revision."
            },
            "createdAt": {
              "type": "string",
              "format": "int64",
              "description": "Time at which this shared flow revision was created, in milliseconds since epoch."
            },
            "resources": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of the resources included in this shared flow revision formatted as \"{type}://{name}\"."
            },
            "contextInfo": {
              "type": "string",
              "description": "A textual description of the shared flow revision."
            },
            "description": {
              "type": "string",
              "description": "Description of the shared flow revision."
            },
            "displayName": {
              "type": "string",
              "description": "The human readable name of this shared flow."
            },
            "sharedFlows": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of the shared flow names included in this shared flow revision."
            },
            "resourceFiles": {
              "id": "GoogleCloudApigeeV1ResourceFiles",
              "type": "object",
              "properties": {
                "resourceFile": {
                  "type": "array",
                  "items": {
                    "id": "GoogleCloudApigeeV1ResourceFile",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "ID of the resource file."
                      },
                      "type": {
                        "type": "string",
                        "description": "Resource file type. {{ resource_file_type }}"
                      }
                    },
                    "description": "Metadata about a resource file."
                  },
                  "description": "List of resource files."
                }
              },
              "description": "The resource files included in this shared flow revision."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "int64",
              "description": "Time at which this shared flow revision was most recently modified, in milliseconds since epoch."
            },
            "configurationVersion": {
              "id": "GoogleCloudApigeeV1ConfigVersion",
              "type": "object",
              "properties": {
                "majorVersion": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Major version of the API proxy configuration schema."
                },
                "minorVersion": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Minor version of the API proxy configuration schema."
                }
              },
              "description": "The version of the configuration schema to which this shared flow conforms. The only supported value currently is majorVersion 4 and minorVersion 0. This setting may be used in the future to enable evolution of the shared flow format."
            },
            "entityMetaDataAsProperties": {
              "type": "object",
              "description": "A Key-Value map of metadata about this shared flow revision.",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "description": "The metadata describing a shared flow revision."
        }
      ]
  organizations.sharedflows.delete:
    description: |-
      Deletes a shared flow and all it's revisions. The shared flow must be undeployed before you can delete it.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.sharedflows/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1SharedFlow",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The ID of the shared flow."
            },
            "metaData": {
              "id": "GoogleCloudApigeeV1EntityMetadata",
              "type": "object",
              "properties": {
                "subType": {
                  "type": "string",
                  "description": "The type of entity described"
                },
                "createdAt": {
                  "type": "string",
                  "format": "int64",
                  "description": "Time at which the API proxy was created, in milliseconds since epoch."
                },
                "lastModifiedAt": {
                  "type": "string",
                  "format": "int64",
                  "description": "Time at which the API proxy was most recently modified, in milliseconds since epoch."
                }
              },
              "description": "Metadata describing the shared flow."
            },
            "revision": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of revisions of this shared flow."
            },
            "latestRevisionId": {
              "type": "string",
              "description": "The id of the most recently created revision for this shared flow."
            }
          },
          "description": "The metadata describing a shared flow"
        }
      ]
  organizations.sharedflows.deployments.list:
    description: |-
      Lists all deployments of a shared flow.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.sharedflows.deployments/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ListDeploymentsResponse",
          "type": "object",
          "properties": {
            "deployments": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Deployment",
                "type": "object",
                "properties": {
                  "pods": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1PodStatus",
                      "type": "object",
                      "properties": {
                        "podName": {
                          "type": "string",
                          "description": "Name of the pod which is reporting the status."
                        },
                        "podStatus": {
                          "type": "string",
                          "description": "Overall status of the pod (not this specific deployment). Valid values include: - `active`: Up to date. - `stale` : Recently out of date. Pods that have not reported status in a long time are excluded from the output."
                        },
                        "appVersion": {
                          "type": "string",
                          "description": "Version of the application running in the pod."
                        },
                        "statusCode": {
                          "type": "string",
                          "description": "Code associated with the deployment status."
                        },
                        "podStatusTime": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the pod status was reported in milliseconds since epoch."
                        },
                        "deploymentTime": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the proxy was deployed in milliseconds since epoch."
                        },
                        "deploymentStatus": {
                          "type": "string",
                          "description": "Status of the deployment. Valid values include: - `deployed`: Successful. - `error` : Failed. - `pending` : Pod has not yet reported on the deployment."
                        },
                        "statusCodeDetails": {
                          "type": "string",
                          "description": "Human-readable message associated with the status code."
                        },
                        "deploymentStatusTime": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the deployment status was reported in milliseconds since epoch."
                        }
                      }
                    },
                    "description": "Status reported by runtime pods. This field is not populated for List APIs. **Note**: **This field is deprecated**. Runtime versions 1.3 and above report instance level status rather than pod status."
                  },
                  "state": {
                    "enum": [
                      "RUNTIME_STATE_UNSPECIFIED",
                      "READY",
                      "PROGRESSING",
                      "ERROR"
                    ],
                    "type": "string",
                    "description": "Current state of the deployment. This field is not populated in List APIs.",
                    "enumDescriptions": [
                      "This value should never be returned.",
                      "Runtime has loaded the deployment.",
                      "Deployment is not fully ready in the runtime.",
                      "Encountered an error with the deployment that requires intervention."
                    ]
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "id": "GoogleRpcStatus",
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The status code, which should be an enum value of google.rpc.Code."
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "any",
                              "description": "Properties of the object. Contains field @type with type URL."
                            }
                          },
                          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                        },
                        "message": {
                          "type": "string",
                          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                        }
                      },
                      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
                    },
                    "description": "Errors reported for this deployment. Populated only when state == ERROR. This field is not populated in List APIs."
                  },
                  "apiProxy": {
                    "type": "string",
                    "description": "API proxy."
                  },
                  "revision": {
                    "type": "string",
                    "description": "API proxy revision."
                  },
                  "instances": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1InstanceDeploymentStatus",
                      "type": "object",
                      "properties": {
                        "instance": {
                          "type": "string",
                          "description": "ID of the instance reporting the status."
                        },
                        "deployedRoutes": {
                          "type": "array",
                          "items": {
                            "id": "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute",
                            "type": "object",
                            "properties": {
                              "basepath": {
                                "type": "string",
                                "description": "Base path in the routing table."
                              },
                              "envgroup": {
                                "type": "string",
                                "description": "Environment group where this route is installed."
                              },
                              "percentage": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Percentage of ingress replicas reporting this route."
                              },
                              "environment": {
                                "type": "string",
                                "description": "Destination environment. This will be empty if the route is not yet reported."
                              }
                            },
                            "description": "Route deployed in the ingress routing table."
                          },
                          "description": "Current routes deployed in the ingress routing table. A route which is missing will appear in `missing_routes`."
                        },
                        "deployedRevisions": {
                          "type": "array",
                          "items": {
                            "id": "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision",
                            "type": "object",
                            "properties": {
                              "revision": {
                                "type": "string",
                                "description": "API proxy revision reported as deployed."
                              },
                              "percentage": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Percentage of MP replicas reporting this revision."
                              }
                            },
                            "description": "Revisions deployed in the MPs."
                          },
                          "description": "Revisions currently deployed in MPs."
                        }
                      },
                      "description": "The status of a deployment as reported by a single instance."
                    },
                    "description": "Status reported by each runtime instance. This field is not populated in List APIs."
                  },
                  "environment": {
                    "type": "string",
                    "description": "Environment."
                  },
                  "routeConflicts": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict",
                      "type": "object",
                      "properties": {
                        "description": {
                          "type": "string",
                          "description": "Human-readable description of this conflict."
                        },
                        "environmentGroup": {
                          "type": "string",
                          "description": "Name of the environment group in which this conflict exists."
                        },
                        "conflictingDeployment": {
                          "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment",
                          "type": "object",
                          "properties": {
                            "apiProxy": {
                              "type": "string",
                              "description": "Name of the deployed API proxy revision containing the base path."
                            },
                            "basepath": {
                              "type": "string",
                              "description": "Base path receiving traffic."
                            },
                            "revision": {
                              "type": "string",
                              "description": "Name of the deployed API proxy revision containing the base path."
                            },
                            "environment": {
                              "type": "string",
                              "description": "Name of the environment in which the proxy is deployed."
                            }
                          },
                          "description": "Existing base path/deployment causing the conflict."
                        }
                      },
                      "description": "Describes a routing conflict that may cause a deployment not to receive traffic at some base path."
                    },
                    "description": "Conflicts in the desired state routing configuration. The presence of conflicts does not cause the state to be `ERROR`, but it will mean that some of the deployment's base paths are not routed to its environment. If the conflicts change, the state will transition to `PROGRESSING` until the latest configuration is rolled out to all instances. This field is not populated in List APIs."
                  },
                  "deployStartTime": {
                    "type": "string",
                    "format": "int64",
                    "description": "Time the API proxy was marked `deployed` in the control plane in millisconds since epoch."
                  }
                }
              },
              "description": "List of deployments."
            }
          }
        }
      ]
  organizations.sharedflows.get:
    description: |-
      Gets a shared flow by name, including a list of its revisions.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.sharedflows/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1SharedFlow",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The ID of the shared flow."
            },
            "metaData": {
              "id": "GoogleCloudApigeeV1EntityMetadata",
              "type": "object",
              "properties": {
                "subType": {
                  "type": "string",
                  "description": "The type of entity described"
                },
                "createdAt": {
                  "type": "string",
                  "format": "int64",
                  "description": "Time at which the API proxy was created, in milliseconds since epoch."
                },
                "lastModifiedAt": {
                  "type": "string",
                  "format": "int64",
                  "description": "Time at which the API proxy was most recently modified, in milliseconds since epoch."
                }
              },
              "description": "Metadata describing the shared flow."
            },
            "revision": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of revisions of this shared flow."
            },
            "latestRevisionId": {
              "type": "string",
              "description": "The id of the most recently created revision for this shared flow."
            }
          },
          "description": "The metadata describing a shared flow"
        }
      ]
  organizations.sharedflows.list:
    description: |-
      Lists all shared flows in the organization.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.sharedflows/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ListSharedFlowsResponse",
          "type": "object",
          "properties": {
            "sharedFlows": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1SharedFlow",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The ID of the shared flow."
                  },
                  "metaData": {
                    "id": "GoogleCloudApigeeV1EntityMetadata",
                    "type": "object",
                    "properties": {
                      "subType": {
                        "type": "string",
                        "description": "The type of entity described"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "int64",
                        "description": "Time at which the API proxy was created, in milliseconds since epoch."
                      },
                      "lastModifiedAt": {
                        "type": "string",
                        "format": "int64",
                        "description": "Time at which the API proxy was most recently modified, in milliseconds since epoch."
                      }
                    },
                    "description": "Metadata describing the shared flow."
                  },
                  "revision": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "A list of revisions of this shared flow."
                  },
                  "latestRevisionId": {
                    "type": "string",
                    "description": "The id of the most recently created revision for this shared flow."
                  }
                },
                "description": "The metadata describing a shared flow"
              }
            }
          }
        }
      ]
  organizations.sharedflows.revisions.delete:
    description: |-
      Deletes a shared flow and all associated policies, resources, and revisions. You must undeploy the shared flow before deleting it.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.sharedflows.revisions/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1SharedFlowRevision",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The resource ID of the parent shared flow."
            },
            "type": {
              "type": "string",
              "description": "The string \"Application\""
            },
            "policies": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of policy names included in this shared flow revision."
            },
            "revision": {
              "type": "string",
              "description": "The resource ID of this revision."
            },
            "createdAt": {
              "type": "string",
              "format": "int64",
              "description": "Time at which this shared flow revision was created, in milliseconds since epoch."
            },
            "resources": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of the resources included in this shared flow revision formatted as \"{type}://{name}\"."
            },
            "contextInfo": {
              "type": "string",
              "description": "A textual description of the shared flow revision."
            },
            "description": {
              "type": "string",
              "description": "Description of the shared flow revision."
            },
            "displayName": {
              "type": "string",
              "description": "The human readable name of this shared flow."
            },
            "sharedFlows": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of the shared flow names included in this shared flow revision."
            },
            "resourceFiles": {
              "id": "GoogleCloudApigeeV1ResourceFiles",
              "type": "object",
              "properties": {
                "resourceFile": {
                  "type": "array",
                  "items": {
                    "id": "GoogleCloudApigeeV1ResourceFile",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "ID of the resource file."
                      },
                      "type": {
                        "type": "string",
                        "description": "Resource file type. {{ resource_file_type }}"
                      }
                    },
                    "description": "Metadata about a resource file."
                  },
                  "description": "List of resource files."
                }
              },
              "description": "The resource files included in this shared flow revision."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "int64",
              "description": "Time at which this shared flow revision was most recently modified, in milliseconds since epoch."
            },
            "configurationVersion": {
              "id": "GoogleCloudApigeeV1ConfigVersion",
              "type": "object",
              "properties": {
                "majorVersion": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Major version of the API proxy configuration schema."
                },
                "minorVersion": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Minor version of the API proxy configuration schema."
                }
              },
              "description": "The version of the configuration schema to which this shared flow conforms. The only supported value currently is majorVersion 4 and minorVersion 0. This setting may be used in the future to enable evolution of the shared flow format."
            },
            "entityMetaDataAsProperties": {
              "type": "object",
              "description": "A Key-Value map of metadata about this shared flow revision.",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "description": "The metadata describing a shared flow revision."
        }
      ]
  organizations.sharedflows.revisions.deployments.list:
    description: |-
      Lists all deployments of a shared flow revision.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.sharedflows.revisions.deployments/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ListDeploymentsResponse",
          "type": "object",
          "properties": {
            "deployments": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1Deployment",
                "type": "object",
                "properties": {
                  "pods": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1PodStatus",
                      "type": "object",
                      "properties": {
                        "podName": {
                          "type": "string",
                          "description": "Name of the pod which is reporting the status."
                        },
                        "podStatus": {
                          "type": "string",
                          "description": "Overall status of the pod (not this specific deployment). Valid values include: - `active`: Up to date. - `stale` : Recently out of date. Pods that have not reported status in a long time are excluded from the output."
                        },
                        "appVersion": {
                          "type": "string",
                          "description": "Version of the application running in the pod."
                        },
                        "statusCode": {
                          "type": "string",
                          "description": "Code associated with the deployment status."
                        },
                        "podStatusTime": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the pod status was reported in milliseconds since epoch."
                        },
                        "deploymentTime": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the proxy was deployed in milliseconds since epoch."
                        },
                        "deploymentStatus": {
                          "type": "string",
                          "description": "Status of the deployment. Valid values include: - `deployed`: Successful. - `error` : Failed. - `pending` : Pod has not yet reported on the deployment."
                        },
                        "statusCodeDetails": {
                          "type": "string",
                          "description": "Human-readable message associated with the status code."
                        },
                        "deploymentStatusTime": {
                          "type": "string",
                          "format": "int64",
                          "description": "Time the deployment status was reported in milliseconds since epoch."
                        }
                      }
                    },
                    "description": "Status reported by runtime pods. This field is not populated for List APIs. **Note**: **This field is deprecated**. Runtime versions 1.3 and above report instance level status rather than pod status."
                  },
                  "state": {
                    "enum": [
                      "RUNTIME_STATE_UNSPECIFIED",
                      "READY",
                      "PROGRESSING",
                      "ERROR"
                    ],
                    "type": "string",
                    "description": "Current state of the deployment. This field is not populated in List APIs.",
                    "enumDescriptions": [
                      "This value should never be returned.",
                      "Runtime has loaded the deployment.",
                      "Deployment is not fully ready in the runtime.",
                      "Encountered an error with the deployment that requires intervention."
                    ]
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "id": "GoogleRpcStatus",
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The status code, which should be an enum value of google.rpc.Code."
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "any",
                              "description": "Properties of the object. Contains field @type with type URL."
                            }
                          },
                          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                        },
                        "message": {
                          "type": "string",
                          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                        }
                      },
                      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
                    },
                    "description": "Errors reported for this deployment. Populated only when state == ERROR. This field is not populated in List APIs."
                  },
                  "apiProxy": {
                    "type": "string",
                    "description": "API proxy."
                  },
                  "revision": {
                    "type": "string",
                    "description": "API proxy revision."
                  },
                  "instances": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1InstanceDeploymentStatus",
                      "type": "object",
                      "properties": {
                        "instance": {
                          "type": "string",
                          "description": "ID of the instance reporting the status."
                        },
                        "deployedRoutes": {
                          "type": "array",
                          "items": {
                            "id": "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute",
                            "type": "object",
                            "properties": {
                              "basepath": {
                                "type": "string",
                                "description": "Base path in the routing table."
                              },
                              "envgroup": {
                                "type": "string",
                                "description": "Environment group where this route is installed."
                              },
                              "percentage": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Percentage of ingress replicas reporting this route."
                              },
                              "environment": {
                                "type": "string",
                                "description": "Destination environment. This will be empty if the route is not yet reported."
                              }
                            },
                            "description": "Route deployed in the ingress routing table."
                          },
                          "description": "Current routes deployed in the ingress routing table. A route which is missing will appear in `missing_routes`."
                        },
                        "deployedRevisions": {
                          "type": "array",
                          "items": {
                            "id": "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision",
                            "type": "object",
                            "properties": {
                              "revision": {
                                "type": "string",
                                "description": "API proxy revision reported as deployed."
                              },
                              "percentage": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Percentage of MP replicas reporting this revision."
                              }
                            },
                            "description": "Revisions deployed in the MPs."
                          },
                          "description": "Revisions currently deployed in MPs."
                        }
                      },
                      "description": "The status of a deployment as reported by a single instance."
                    },
                    "description": "Status reported by each runtime instance. This field is not populated in List APIs."
                  },
                  "environment": {
                    "type": "string",
                    "description": "Environment."
                  },
                  "routeConflicts": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict",
                      "type": "object",
                      "properties": {
                        "description": {
                          "type": "string",
                          "description": "Human-readable description of this conflict."
                        },
                        "environmentGroup": {
                          "type": "string",
                          "description": "Name of the environment group in which this conflict exists."
                        },
                        "conflictingDeployment": {
                          "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment",
                          "type": "object",
                          "properties": {
                            "apiProxy": {
                              "type": "string",
                              "description": "Name of the deployed API proxy revision containing the base path."
                            },
                            "basepath": {
                              "type": "string",
                              "description": "Base path receiving traffic."
                            },
                            "revision": {
                              "type": "string",
                              "description": "Name of the deployed API proxy revision containing the base path."
                            },
                            "environment": {
                              "type": "string",
                              "description": "Name of the environment in which the proxy is deployed."
                            }
                          },
                          "description": "Existing base path/deployment causing the conflict."
                        }
                      },
                      "description": "Describes a routing conflict that may cause a deployment not to receive traffic at some base path."
                    },
                    "description": "Conflicts in the desired state routing configuration. The presence of conflicts does not cause the state to be `ERROR`, but it will mean that some of the deployment's base paths are not routed to its environment. If the conflicts change, the state will transition to `PROGRESSING` until the latest configuration is rolled out to all instances. This field is not populated in List APIs."
                  },
                  "deployStartTime": {
                    "type": "string",
                    "format": "int64",
                    "description": "Time the API proxy was marked `deployed` in the control plane in millisconds since epoch."
                  }
                }
              },
              "description": "List of deployments."
            }
          }
        }
      ]
  organizations.sharedflows.revisions.get:
    description: |-
      Gets a revision of a shared flow. To download the shared flow configuration bundle for the specified revision as a zip file, set the `format` query parameter to `bundle`. If you are using curl, specify `-o filename.zip` to save the output to a file; otherwise, it displays to `stdout`. Then, develop the shared flow configuration locally and upload the updated sharedFlow configuration revision, as described in [updateSharedFlowRevision](updateSharedFlowRevision).
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.sharedflows.revisions/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleApiHttpBody",
          "type": "object",
          "properties": {
            "data": {
              "type": "string",
              "format": "byte",
              "description": "The HTTP request/response body as raw binary."
            },
            "extensions": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": {
                  "type": "any",
                  "description": "Properties of the object. Contains field @type with type URL."
                }
              },
              "description": "Application specific response metadata. Must be set in the first response for streaming APIs."
            },
            "contentType": {
              "type": "string",
              "description": "The HTTP Content-Type header value specifying the content type of the body."
            }
          },
          "description": "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged."
        }
      ]
  organizations.sharedflows.revisions.updateSharedFlowRevision:
    description: |-
      Updates a shared flow revision. This operation is only allowed on revisions which have never been deployed. After deployment a revision becomes immutable, even if it becomes undeployed. The payload is a ZIP-formatted shared flow. Content type must be either multipart/form-data or application/octet-stream.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.sharedflows.revisions/updateSharedFlowRevision
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1SharedFlowRevision",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The resource ID of the parent shared flow."
            },
            "type": {
              "type": "string",
              "description": "The string \"Application\""
            },
            "policies": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of policy names included in this shared flow revision."
            },
            "revision": {
              "type": "string",
              "description": "The resource ID of this revision."
            },
            "createdAt": {
              "type": "string",
              "format": "int64",
              "description": "Time at which this shared flow revision was created, in milliseconds since epoch."
            },
            "resources": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of the resources included in this shared flow revision formatted as \"{type}://{name}\"."
            },
            "contextInfo": {
              "type": "string",
              "description": "A textual description of the shared flow revision."
            },
            "description": {
              "type": "string",
              "description": "Description of the shared flow revision."
            },
            "displayName": {
              "type": "string",
              "description": "The human readable name of this shared flow."
            },
            "sharedFlows": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of the shared flow names included in this shared flow revision."
            },
            "resourceFiles": {
              "id": "GoogleCloudApigeeV1ResourceFiles",
              "type": "object",
              "properties": {
                "resourceFile": {
                  "type": "array",
                  "items": {
                    "id": "GoogleCloudApigeeV1ResourceFile",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "ID of the resource file."
                      },
                      "type": {
                        "type": "string",
                        "description": "Resource file type. {{ resource_file_type }}"
                      }
                    },
                    "description": "Metadata about a resource file."
                  },
                  "description": "List of resource files."
                }
              },
              "description": "The resource files included in this shared flow revision."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "int64",
              "description": "Time at which this shared flow revision was most recently modified, in milliseconds since epoch."
            },
            "configurationVersion": {
              "id": "GoogleCloudApigeeV1ConfigVersion",
              "type": "object",
              "properties": {
                "majorVersion": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Major version of the API proxy configuration schema."
                },
                "minorVersion": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Minor version of the API proxy configuration schema."
                }
              },
              "description": "The version of the configuration schema to which this shared flow conforms. The only supported value currently is majorVersion 4 and minorVersion 0. This setting may be used in the future to enable evolution of the shared flow format."
            },
            "entityMetaDataAsProperties": {
              "type": "object",
              "description": "A Key-Value map of metadata about this shared flow revision.",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "description": "The metadata describing a shared flow revision."
        }
      ]
  organizations.sites.apicategories.create:
    description: |-
      Creates a new category on the portal.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.sites.apicategories/create
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1ApiCategoryData",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "ID of the category (a UUID)."
            },
            "name": {
              "type": "string",
              "description": "Name of the category."
            },
            "siteId": {
              "type": "string",
              "description": "Name of the portal."
            },
            "updateTime": {
              "type": "string",
              "format": "int64",
              "description": "Time the category was last modified in milliseconds since epoch."
            }
          },
          "description": "the Api category resource."
        }
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ApiCategory",
          "type": "object",
          "properties": {
            "data": {
              "id": "GoogleCloudApigeeV1ApiCategoryData",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "ID of the category (a UUID)."
                },
                "name": {
                  "type": "string",
                  "description": "Name of the category."
                },
                "siteId": {
                  "type": "string",
                  "description": "Name of the portal."
                },
                "updateTime": {
                  "type": "string",
                  "format": "int64",
                  "description": "Time the category was last modified in milliseconds since epoch."
                }
              },
              "description": "the Api category resource."
            },
            "status": {
              "type": "string",
              "description": "Status of the operation."
            },
            "message": {
              "type": "string",
              "description": "Description of the operation."
            },
            "errorCode": {
              "type": "string",
              "description": "ID that can be used to find errors in the log files."
            },
            "requestId": {
              "type": "string",
              "description": "ID that can be used to find request details in the log files."
            }
          },
          "description": "the Api category resource wrapped with response status, error_code etc."
        }
      ]
  organizations.sites.apicategories.delete:
    description: |-
      Deletes a category from the portal.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.sites.apicategories/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ApiResponseWrapper",
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "Status of the operation."
            },
            "message": {
              "type": "string",
              "description": "Description of the operation."
            },
            "errorCode": {
              "type": "string",
              "description": "ID that can be used to find errors in the log files."
            },
            "requestId": {
              "type": "string",
              "description": "ID that can be used to find request details in the log files."
            }
          }
        }
      ]
  organizations.sites.apicategories.get:
    description: |-
      Gets a category on the portal.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.sites.apicategories/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ApiCategory",
          "type": "object",
          "properties": {
            "data": {
              "id": "GoogleCloudApigeeV1ApiCategoryData",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "ID of the category (a UUID)."
                },
                "name": {
                  "type": "string",
                  "description": "Name of the category."
                },
                "siteId": {
                  "type": "string",
                  "description": "Name of the portal."
                },
                "updateTime": {
                  "type": "string",
                  "format": "int64",
                  "description": "Time the category was last modified in milliseconds since epoch."
                }
              },
              "description": "the Api category resource."
            },
            "status": {
              "type": "string",
              "description": "Status of the operation."
            },
            "message": {
              "type": "string",
              "description": "Description of the operation."
            },
            "errorCode": {
              "type": "string",
              "description": "ID that can be used to find errors in the log files."
            },
            "requestId": {
              "type": "string",
              "description": "ID that can be used to find request details in the log files."
            }
          },
          "description": "the Api category resource wrapped with response status, error_code etc."
        }
      ]
  organizations.sites.apicategories.list:
    description: |-
      Lists the categories on the portal.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.sites.apicategories/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ListApiCategoriesResponse",
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "id": "GoogleCloudApigeeV1ApiCategoryData",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "ID of the category (a UUID)."
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the category."
                  },
                  "siteId": {
                    "type": "string",
                    "description": "Name of the portal."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "int64",
                    "description": "Time the category was last modified in milliseconds since epoch."
                  }
                },
                "description": "the Api category resource."
              },
              "description": "Details of categories."
            },
            "status": {
              "type": "string",
              "description": "Status of the operation."
            },
            "message": {
              "type": "string",
              "description": "Description of the operation."
            },
            "errorCode": {
              "type": "string",
              "description": "ID that can be used to find errors in the log files."
            },
            "requestId": {
              "type": "string",
              "description": "ID that can be used to find request details in the log files."
            }
          },
          "description": "the response for ListApiCategoriesRequest."
        }
      ]
  organizations.sites.apicategories.patch:
    description: |-
      Updates a category on the portal.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.sites.apicategories/patch
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1ApiCategoryData",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "ID of the category (a UUID)."
            },
            "name": {
              "type": "string",
              "description": "Name of the category."
            },
            "siteId": {
              "type": "string",
              "description": "Name of the portal."
            },
            "updateTime": {
              "type": "string",
              "format": "int64",
              "description": "Time the category was last modified in milliseconds since epoch."
            }
          },
          "description": "the Api category resource."
        }
      ]
      outputs: [
        {
          "id": "GoogleCloudApigeeV1ApiCategory",
          "type": "object",
          "properties": {
            "data": {
              "id": "GoogleCloudApigeeV1ApiCategoryData",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "ID of the category (a UUID)."
                },
                "name": {
                  "type": "string",
                  "description": "Name of the category."
                },
                "siteId": {
                  "type": "string",
                  "description": "Name of the portal."
                },
                "updateTime": {
                  "type": "string",
                  "format": "int64",
                  "description": "Time the category was last modified in milliseconds since epoch."
                }
              },
              "description": "the Api category resource."
            },
            "status": {
              "type": "string",
              "description": "Status of the operation."
            },
            "message": {
              "type": "string",
              "description": "Description of the operation."
            },
            "errorCode": {
              "type": "string",
              "description": "ID that can be used to find errors in the log files."
            },
            "requestId": {
              "type": "string",
              "description": "ID that can be used to find request details in the log files."
            }
          },
          "description": "the Api category resource wrapped with response status, error_code etc."
        }
      ]
  organizations.update:
    description: |-
      Updates the properties for an Apigee organization. No other fields in the organization profile will be updated.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations/update
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1Organization",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Name of the Apigee organization."
            },
            "type": {
              "enum": [
                "TYPE_UNSPECIFIED",
                "TYPE_TRIAL",
                "TYPE_PAID",
                "TYPE_INTERNAL"
              ],
              "type": "string",
              "description": "Not used by Apigee.",
              "enumDescriptions": [
                "Subscription type not specified.",
                "Subscription to Apigee is free, limited, and used for evaluation purposes only.",
                "Full subscription to Apigee has been purchased. See [Apigee pricing](https://cloud.google.com/apigee/pricing/).",
                "For internal users only."
              ]
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "CREATING",
                "ACTIVE",
                "DELETING"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. State of the organization. Values other than ACTIVE means the resource is not ready to use.",
              "enumDescriptions": [
                "Resource is in an unspecified state.",
                "Resource is being created.",
                "Resource is provisioned and ready to use.",
                "The resource is being deleted."
              ]
            },
            "createdAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Time that the Apigee organization was created in milliseconds since epoch."
            },
            "expiresAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Time that the Apigee organization is scheduled for deletion."
            },
            "projectId": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Project ID associated with the Apigee organization."
            },
            "attributes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Not used by Apigee."
            },
            "properties": {
              "id": "GoogleCloudApigeeV1Properties",
              "type": "object",
              "properties": {
                "property": {
                  "type": "array",
                  "items": {
                    "id": "GoogleCloudApigeeV1Property",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The property key"
                      },
                      "value": {
                        "type": "string",
                        "description": "The property value"
                      }
                    },
                    "description": "A single property entry in the Properties message."
                  },
                  "description": "List of all properties in the object"
                }
              },
              "description": "Properties defined in the Apigee organization profile."
            },
            "billingType": {
              "enum": [
                "BILLING_TYPE_UNSPECIFIED",
                "SUBSCRIPTION",
                "EVALUATION"
              ],
              "type": "string",
              "description": "Billing type of the Apigee organization. See [Apigee pricing](https://cloud.google.com/apigee/pricing).",
              "enumDescriptions": [
                "Billing type not specified.",
                "A pre-paid subscription to Apigee.",
                "Free and limited access to Apigee for evaluation purposes only. only."
              ]
            },
            "description": {
              "type": "string",
              "description": "Description of the Apigee organization."
            },
            "displayName": {
              "type": "string"
            },
            "runtimeType": {
              "enum": [
                "RUNTIME_TYPE_UNSPECIFIED",
                "CLOUD",
                "HYBRID"
              ],
              "type": "string",
              "description": "Required. Runtime type of the Apigee organization based on the Apigee subscription purchased.",
              "enumDescriptions": [
                "Runtime type not specified.",
                "Google-managed Apigee runtime.",
                "User-managed Apigee hybrid runtime."
              ]
            },
            "addonsConfig": {
              "id": "GoogleCloudApigeeV1AddonsConfig",
              "type": "object",
              "properties": {
                "integrationConfig": {
                  "id": "GoogleCloudApigeeV1IntegrationConfig",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "Flag that specifies whether the Integration add-on is enabled."
                    }
                  },
                  "description": "Configuration for the Integration add-on."
                },
                "monetizationConfig": {
                  "id": "GoogleCloudApigeeV1MonetizationConfig",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "Flag that specifies whether the Monetization add-on is enabled."
                    }
                  },
                  "description": "Configuration for the Monetization add-on."
                },
                "advancedApiOpsConfig": {
                  "id": "GoogleCloudApigeeV1AdvancedApiOpsConfig",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "Flag that specifies whether the Advanced API Ops add-on is enabled."
                    }
                  },
                  "description": "Configuration for the Advanced API Ops add-on."
                }
              },
              "description": "Addon configurations of the Apigee organization."
            },
            "customerName": {
              "type": "string",
              "description": "Not used by Apigee."
            },
            "environments": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "Output only. List of environments in the Apigee organization."
            },
            "caCertificate": {
              "type": "string",
              "format": "byte",
              "readOnly": true,
              "description": "Output only. Base64-encoded public certificate for the root CA of the Apigee organization. Valid only when [RuntimeType](#RuntimeType) is `CLOUD`."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "int64",
              "readOnly": true,
              "description": "Output only. Time that the Apigee organization was last modified in milliseconds since epoch."
            },
            "analyticsRegion": {
              "type": "string",
              "description": "Required. Primary GCP region for analytics data storage. For valid values, see [Create an Apigee organization](https://cloud.google.com/apigee/docs/api-platform/get-started/create-org)."
            },
            "subscriptionType": {
              "enum": [
                "SUBSCRIPTION_TYPE_UNSPECIFIED",
                "PAID",
                "TRIAL"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. DEPRECATED: This will eventually be replaced by BillingType. Subscription type of the Apigee organization. Valid values include trial (free, limited, and for evaluation purposes only) or paid (full subscription has been purchased). See [Apigee pricing](https://cloud.google.com/apigee/pricing/).",
              "enumDescriptions": [
                "Subscription type not specified.",
                "Full subscription to Apigee has been purchased.",
                "Subscription to Apigee is free, limited, and used for evaluation purposes only."
              ]
            },
            "authorizedNetwork": {
              "type": "string",
              "description": "Compute Engine network used for Service Networking to be peered with Apigee runtime instances. See [Getting started with the Service Networking API](https://cloud.google.com/service-infrastructure/docs/service-networking/getting-started). Valid only when [RuntimeType](#RuntimeType) is set to `CLOUD`. The value must be set before the creation of a runtime instance and can be updated only when there are no runtime instances. For example: `default`. Apigee also supports shared VPC (that is, the host network project is not the same as the one that is peering with Apigee). See [Shared VPC overview](https://cloud.google.com/vpc/docs/shared-vpc). To use a shared VPC network, use the following format: `projects/{host-project-id}/{region}/networks/{network-name}`. For example: `projects/my-sharedvpc-host/global/networks/mynetwork` **Note:** Not supported for Apigee hybrid."
            },
            "runtimeDatabaseEncryptionKeyName": {
              "type": "string",
              "description": "Cloud KMS key name used for encrypting the data that is stored and replicated across runtime instances. Update is not allowed after the organization is created. Required when [RuntimeType](#RuntimeType) is `CLOUD`. If not specified when [RuntimeType](#RuntimeType) is `TRIAL`, a Google-Managed encryption key will be used. For example: \"projects/foo/locations/us/keyRings/bar/cryptoKeys/baz\". **Note:** Not supported for Apigee hybrid."
            }
          }
        }
      ]
      outputs: [
        {}
      ]
  projects.provisionOrganization:
    description: |-
      Provisions a new Apigee organization with a functioning runtime. This is the standard way to create trial organizations for a free Apigee trial.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/projects/provisionOrganization
    example:
      inputs: [
        {
          "id": "GoogleCloudApigeeV1ProvisionOrganizationRequest",
          "type": "object",
          "properties": {
            "analyticsRegion": {
              "type": "string",
              "description": "Primary Cloud Platform region for analytics data storage. For valid values, see [Create an organization](https://cloud.google.com/apigee/docs/hybrid/latest/precog-provision). Defaults to `us-west1`."
            },
            "runtimeLocation": {
              "type": "string",
              "description": "Cloud Platform location for the runtime instance. Defaults to zone `us-west1-a`. If a region is provided, `EVAL` organizations will use the region for automatically selecting a zone for the runtime instance."
            },
            "authorizedNetwork": {
              "type": "string",
              "description": "Name of the customer project's VPC network. If provided, the network needs to be peered through Service Networking. If none is provided, the organization will have access only to the public internet."
            }
          },
          "description": "Request for ProvisionOrganization."
        }
      ]
      outputs: [
        {
          "id": "GoogleLongrunningOperation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "GoogleRpcStatus",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]