Product:
  name: GCP Run
  versions: [1.0.0]
  package: google.gcp.run
  description: |-
    Cloud Run Admin
  link: https://cloud.google.com/run
  contentType: json
Operations:
  namespaces.authorizeddomains.list:
    description: |-
      List authorized domains.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/namespaces.authorizeddomains/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListAuthorizedDomainsResponse",
          "type": "object",
          "properties": {
            "domains": {
              "type": "array",
              "items": {
                "id": "AuthorizedDomain",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Relative name of the domain authorized for use. Example: `example.com`."
                  },
                  "name": {
                    "type": "string",
                    "description": "Deprecated Read only. Full path to the `AuthorizedDomain` resource in the API. Example: `projects/myproject/authorizedDomains/example.com`."
                  }
                },
                "description": "A domain that a user has been authorized to administer. To authorize use of a domain, verify ownership via [Webmaster Central](https://www.google.com/webmasters/verification/home)."
              },
              "description": "The authorized domains belonging to the user."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Continuation token for fetching the next page of results."
            }
          },
          "description": "A list of Authorized Domains."
        }
      ]
  namespaces.configurations.get:
    description: |-
      Get information about a configuration.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/namespaces.configurations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  namespaces.configurations.list:
    description: |-
      List configurations.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/namespaces.configurations/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  namespaces.domainmappings.create:
    description: |-
      Create a new domain mapping.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/namespaces.domainmappings/create
    example:
      inputs: [
        {
          "id": "DomainMapping",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "The kind of resource, in this case \"DomainMapping\"."
            },
            "spec": {
              "id": "DomainMappingSpec",
              "type": "object",
              "properties": {
                "routeName": {
                  "type": "string",
                  "description": "The name of the Knative Route that this DomainMapping applies to. The route must exist."
                },
                "forceOverride": {
                  "type": "boolean",
                  "description": "If set, the mapping will override any mapping set before this spec was set. It is recommended that the user leaves this empty to receive an error warning about a potential conflict and only set it once the respective UI has given such a warning."
                },
                "certificateMode": {
                  "enum": [
                    "CERTIFICATE_MODE_UNSPECIFIED",
                    "NONE",
                    "AUTOMATIC"
                  ],
                  "type": "string",
                  "description": "The mode of the certificate.",
                  "enumDescriptions": [
                    "",
                    "Do not provision an HTTPS certificate.",
                    "Automatically provisions an HTTPS certificate via GoogleCA or LetsEncrypt."
                  ]
                }
              },
              "description": "The spec for this DomainMapping."
            },
            "status": {
              "id": "DomainMappingStatus",
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "description": "Cloud Run fully managed: not supported Cloud Run on GKE: supported Holds the URL that will serve the traffic of the DomainMapping. +optional"
                },
                "conditions": {
                  "type": "array",
                  "items": {
                    "id": "GoogleCloudRunV1Condition",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "type is used to communicate the status of the reconciliation process. See also: https://github.com/knative/serving/blob/master/docs/spec/errors.md#error-conditions-and-reporting Types common to all resources include: * \"Ready\": True when the Resource is ready."
                      },
                      "reason": {
                        "type": "string",
                        "description": "Optional. One-word CamelCase reason for the condition's last transition."
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the condition, one of True, False, Unknown."
                      },
                      "message": {
                        "type": "string",
                        "description": "Optional. Human readable message indicating details about the current status."
                      },
                      "severity": {
                        "type": "string",
                        "description": "Optional. How to interpret failures of this condition, one of Error, Warning, Info"
                      },
                      "lastTransitionTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "Optional. Last time the condition transitioned from one status to another."
                      }
                    },
                    "description": "Condition defines a generic condition for a Resource"
                  },
                  "description": "Array of observed DomainMappingConditions, indicating the current state of the DomainMapping."
                },
                "mappedRouteName": {
                  "type": "string",
                  "description": "The name of the route that the mapping currently points to."
                },
                "resourceRecords": {
                  "type": "array",
                  "items": {
                    "id": "ResourceRecord",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Relative name of the object affected by this record. Only applicable for `CNAME` records. Example: 'www'."
                      },
                      "type": {
                        "enum": [
                          "RECORD_TYPE_UNSPECIFIED",
                          "A",
                          "AAAA",
                          "CNAME"
                        ],
                        "type": "string",
                        "description": "Resource record type. Example: `AAAA`.",
                        "enumDescriptions": [
                          "An unknown resource record.",
                          "An A resource record. Data is an IPv4 address.",
                          "An AAAA resource record. Data is an IPv6 address.",
                          "A CNAME resource record. Data is a domain name to be aliased."
                        ]
                      },
                      "rrdata": {
                        "type": "string",
                        "description": "Data for this record. Values vary by record type, as defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1)."
                      }
                    },
                    "description": "A DNS resource record."
                  },
                  "description": "The resource records required to configure this domain mapping. These records must be added to the domain's DNS configuration in order to serve the application via this domain mapping."
                },
                "observedGeneration": {
                  "type": "integer",
                  "format": "int32",
                  "description": "ObservedGeneration is the 'Generation' of the DomainMapping that was last processed by the controller. Clients polling for completed reconciliation should poll until observedGeneration = metadata.generation and the Ready condition's status is True or False."
                }
              },
              "description": "The current status of the DomainMapping."
            },
            "metadata": {
              "id": "ObjectMeta",
              "type": "object",
              "properties": {
                "uid": {
                  "type": "string",
                  "description": "(Optional) UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations. Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                },
                "name": {
                  "type": "string",
                  "description": "Name must be unique within a namespace, within a Cloud Run region. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names +optional"
                },
                "labels": {
                  "type": "object",
                  "description": "(Optional) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and routes. More info: http://kubernetes.io/docs/user-guide/labels",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "selfLink": {
                  "type": "string",
                  "description": "(Optional) SelfLink is a URL representing this object. Populated by the system. Read-only. string selfLink = 4;"
                },
                "namespace": {
                  "type": "string",
                  "description": "Namespace defines the space within each name must be unique, within a Cloud Run region. In Cloud Run the namespace must be equal to either the project ID or project number."
                },
                "finalizers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. +patchStrategy=merge"
                },
                "generation": {
                  "type": "integer",
                  "format": "int32",
                  "description": "(Optional) A sequence number representing a specific generation of the desired state. Populated by the system. Read-only."
                },
                "annotations": {
                  "type": "object",
                  "description": "(Optional) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "clusterName": {
                  "type": "string",
                  "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request."
                },
                "generateName": {
                  "type": "string",
                  "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server. If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header). Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency string generateName = 2;"
                },
                "ownerReferences": {
                  "type": "array",
                  "items": {
                    "id": "OwnerReference",
                    "type": "object",
                    "properties": {
                      "uid": {
                        "type": "string",
                        "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                      },
                      "kind": {
                        "type": "string",
                        "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                      },
                      "apiVersion": {
                        "type": "string",
                        "description": "API version of the referent."
                      },
                      "controller": {
                        "type": "boolean",
                        "description": "If true, this reference points to the managing controller. +optional"
                      },
                      "blockOwnerDeletion": {
                        "type": "boolean",
                        "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned. +optional"
                      }
                    },
                    "description": "OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field."
                  },
                  "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported List of objects that own this object. If ALL objects in the list have been deleted, this object will be garbage collected."
                },
                "resourceVersion": {
                  "type": "string",
                  "description": "Optional. An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server or omit the value to disable conflict-detection. They may only be valid for a particular resource or set of resources. Populated by the system. Read-only. Value must be treated as opaque by clients or omitted. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
                },
                "creationTimestamp": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "(Optional) CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
                },
                "deletionTimestamp": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested. Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
                },
                "deletionGracePeriodSeconds": {
                  "type": "integer",
                  "format": "int32",
                  "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only."
                }
              },
              "description": "Metadata associated with this BuildTemplate."
            },
            "apiVersion": {
              "type": "string",
              "description": "The API version for this call such as \"domains.cloudrun.com/v1\"."
            }
          },
          "description": "Resource to hold the state and status of a user's domain mapping. NOTE: This resource is currently in Beta."
        }
      ]
      outputs: [
        {}
      ]
  namespaces.domainmappings.delete:
    description: |-
      Delete a domain mapping.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/namespaces.domainmappings/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Status",
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "format": "int32",
              "description": "Suggested HTTP return code for this status, 0 if not set. +optional"
            },
            "reason": {
              "type": "string",
              "description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it. +optional"
            },
            "status": {
              "type": "string",
              "description": "Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status +optional"
            },
            "details": {
              "id": "StatusDetails",
              "type": "object",
              "properties": {
                "uid": {
                  "type": "string",
                  "description": "UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids +optional"
                },
                "kind": {
                  "type": "string",
                  "description": "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds +optional"
                },
                "name": {
                  "type": "string",
                  "description": "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described). +optional"
                },
                "group": {
                  "type": "string",
                  "description": "The group attribute of the resource associated with the status StatusReason. +optional"
                },
                "causes": {
                  "type": "array",
                  "items": {
                    "id": "StatusCause",
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string",
                        "description": "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed. Fields may appear more than once in an array of causes due to fields having multiple errors. Optional. Examples: \"name\" - the field \"name\" on the current resource \"items[0].name\" - the field \"name\" on the first array entry in \"items\" +optional"
                      },
                      "reason": {
                        "type": "string",
                        "description": "A machine-readable description of the cause of the error. If this value is empty there is no information available. +optional"
                      },
                      "message": {
                        "type": "string",
                        "description": "A human-readable description of the cause of the error. This field may be presented as-is to a reader. +optional"
                      }
                    },
                    "description": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered."
                  },
                  "description": "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes. +optional"
                },
                "retryAfterSeconds": {
                  "type": "integer",
                  "format": "int32",
                  "description": "If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action. +optional"
                }
              },
              "description": "Extended data associated with the reason. Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type. +optional"
            },
            "message": {
              "type": "string",
              "description": "A human-readable description of the status of this operation. +optional"
            },
            "metadata": {
              "id": "ListMeta",
              "type": "object",
              "properties": {
                "continue": {
                  "type": "string",
                  "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response."
                },
                "selfLink": {
                  "type": "string",
                  "description": "SelfLink is a URL representing this object. Populated by the system. Read-only. +optional"
                },
                "resourceVersion": {
                  "type": "string",
                  "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency +optional"
                }
              },
              "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds +optional"
            }
          },
          "description": "Status is a return value for calls that don't return other objects"
        }
      ]
  namespaces.domainmappings.get:
    description: |-
      Get information about a domain mapping.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/namespaces.domainmappings/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  namespaces.domainmappings.list:
    description: |-
      List domain mappings.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/namespaces.domainmappings/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListDomainMappingsResponse",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "The kind of this resource, in this case \"DomainMappingList\"."
            },
            "items": {
              "type": "array",
              "items": {
                "id": "DomainMapping",
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "description": "The kind of resource, in this case \"DomainMapping\"."
                  },
                  "spec": {
                    "id": "DomainMappingSpec",
                    "type": "object",
                    "properties": {
                      "routeName": {
                        "type": "string",
                        "description": "The name of the Knative Route that this DomainMapping applies to. The route must exist."
                      },
                      "forceOverride": {
                        "type": "boolean",
                        "description": "If set, the mapping will override any mapping set before this spec was set. It is recommended that the user leaves this empty to receive an error warning about a potential conflict and only set it once the respective UI has given such a warning."
                      },
                      "certificateMode": {
                        "enum": [
                          "CERTIFICATE_MODE_UNSPECIFIED",
                          "NONE",
                          "AUTOMATIC"
                        ],
                        "type": "string",
                        "description": "The mode of the certificate.",
                        "enumDescriptions": [
                          "",
                          "Do not provision an HTTPS certificate.",
                          "Automatically provisions an HTTPS certificate via GoogleCA or LetsEncrypt."
                        ]
                      }
                    },
                    "description": "The spec for this DomainMapping."
                  },
                  "status": {
                    "id": "DomainMappingStatus",
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string",
                        "description": "Cloud Run fully managed: not supported Cloud Run on GKE: supported Holds the URL that will serve the traffic of the DomainMapping. +optional"
                      },
                      "conditions": {
                        "type": "array",
                        "items": {
                          "id": "GoogleCloudRunV1Condition",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "type is used to communicate the status of the reconciliation process. See also: https://github.com/knative/serving/blob/master/docs/spec/errors.md#error-conditions-and-reporting Types common to all resources include: * \"Ready\": True when the Resource is ready."
                            },
                            "reason": {
                              "type": "string",
                              "description": "Optional. One-word CamelCase reason for the condition's last transition."
                            },
                            "status": {
                              "type": "string",
                              "description": "Status of the condition, one of True, False, Unknown."
                            },
                            "message": {
                              "type": "string",
                              "description": "Optional. Human readable message indicating details about the current status."
                            },
                            "severity": {
                              "type": "string",
                              "description": "Optional. How to interpret failures of this condition, one of Error, Warning, Info"
                            },
                            "lastTransitionTime": {
                              "type": "string",
                              "format": "google-datetime",
                              "description": "Optional. Last time the condition transitioned from one status to another."
                            }
                          },
                          "description": "Condition defines a generic condition for a Resource"
                        },
                        "description": "Array of observed DomainMappingConditions, indicating the current state of the DomainMapping."
                      },
                      "mappedRouteName": {
                        "type": "string",
                        "description": "The name of the route that the mapping currently points to."
                      },
                      "resourceRecords": {
                        "type": "array",
                        "items": {
                          "id": "ResourceRecord",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Relative name of the object affected by this record. Only applicable for `CNAME` records. Example: 'www'."
                            },
                            "type": {
                              "enum": [
                                "RECORD_TYPE_UNSPECIFIED",
                                "A",
                                "AAAA",
                                "CNAME"
                              ],
                              "type": "string",
                              "description": "Resource record type. Example: `AAAA`.",
                              "enumDescriptions": [
                                "An unknown resource record.",
                                "An A resource record. Data is an IPv4 address.",
                                "An AAAA resource record. Data is an IPv6 address.",
                                "A CNAME resource record. Data is a domain name to be aliased."
                              ]
                            },
                            "rrdata": {
                              "type": "string",
                              "description": "Data for this record. Values vary by record type, as defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1)."
                            }
                          },
                          "description": "A DNS resource record."
                        },
                        "description": "The resource records required to configure this domain mapping. These records must be added to the domain's DNS configuration in order to serve the application via this domain mapping."
                      },
                      "observedGeneration": {
                        "type": "integer",
                        "format": "int32",
                        "description": "ObservedGeneration is the 'Generation' of the DomainMapping that was last processed by the controller. Clients polling for completed reconciliation should poll until observedGeneration = metadata.generation and the Ready condition's status is True or False."
                      }
                    },
                    "description": "The current status of the DomainMapping."
                  },
                  "metadata": {
                    "id": "ObjectMeta",
                    "type": "object",
                    "properties": {
                      "uid": {
                        "type": "string",
                        "description": "(Optional) UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations. Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name must be unique within a namespace, within a Cloud Run region. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names +optional"
                      },
                      "labels": {
                        "type": "object",
                        "description": "(Optional) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and routes. More info: http://kubernetes.io/docs/user-guide/labels",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "selfLink": {
                        "type": "string",
                        "description": "(Optional) SelfLink is a URL representing this object. Populated by the system. Read-only. string selfLink = 4;"
                      },
                      "namespace": {
                        "type": "string",
                        "description": "Namespace defines the space within each name must be unique, within a Cloud Run region. In Cloud Run the namespace must be equal to either the project ID or project number."
                      },
                      "finalizers": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. +patchStrategy=merge"
                      },
                      "generation": {
                        "type": "integer",
                        "format": "int32",
                        "description": "(Optional) A sequence number representing a specific generation of the desired state. Populated by the system. Read-only."
                      },
                      "annotations": {
                        "type": "object",
                        "description": "(Optional) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "clusterName": {
                        "type": "string",
                        "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request."
                      },
                      "generateName": {
                        "type": "string",
                        "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server. If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header). Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency string generateName = 2;"
                      },
                      "ownerReferences": {
                        "type": "array",
                        "items": {
                          "id": "OwnerReference",
                          "type": "object",
                          "properties": {
                            "uid": {
                              "type": "string",
                              "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                            },
                            "kind": {
                              "type": "string",
                              "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                            },
                            "apiVersion": {
                              "type": "string",
                              "description": "API version of the referent."
                            },
                            "controller": {
                              "type": "boolean",
                              "description": "If true, this reference points to the managing controller. +optional"
                            },
                            "blockOwnerDeletion": {
                              "type": "boolean",
                              "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned. +optional"
                            }
                          },
                          "description": "OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field."
                        },
                        "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported List of objects that own this object. If ALL objects in the list have been deleted, this object will be garbage collected."
                      },
                      "resourceVersion": {
                        "type": "string",
                        "description": "Optional. An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server or omit the value to disable conflict-detection. They may only be valid for a particular resource or set of resources. Populated by the system. Read-only. Value must be treated as opaque by clients or omitted. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
                      },
                      "creationTimestamp": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "(Optional) CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
                      },
                      "deletionTimestamp": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested. Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
                      },
                      "deletionGracePeriodSeconds": {
                        "type": "integer",
                        "format": "int32",
                        "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only."
                      }
                    },
                    "description": "Metadata associated with this BuildTemplate."
                  },
                  "apiVersion": {
                    "type": "string",
                    "description": "The API version for this call such as \"domains.cloudrun.com/v1\"."
                  }
                },
                "description": "Resource to hold the state and status of a user's domain mapping. NOTE: This resource is currently in Beta."
              },
              "description": "List of DomainMappings."
            },
            "metadata": {
              "id": "ListMeta",
              "type": "object",
              "properties": {
                "continue": {
                  "type": "string",
                  "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response."
                },
                "selfLink": {
                  "type": "string",
                  "description": "SelfLink is a URL representing this object. Populated by the system. Read-only. +optional"
                },
                "resourceVersion": {
                  "type": "string",
                  "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency +optional"
                }
              },
              "description": "Metadata associated with this DomainMapping list."
            },
            "apiVersion": {
              "type": "string",
              "description": "The API version for this call such as \"domains.cloudrun.com/v1\"."
            },
            "unreachable": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Locations that could not be reached."
            }
          },
          "description": "ListDomainMappingsResponse is a list of DomainMapping resources."
        }
      ]
  namespaces.revisions.delete:
    description: |-
      Delete a revision.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/namespaces.revisions/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Status",
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "format": "int32",
              "description": "Suggested HTTP return code for this status, 0 if not set. +optional"
            },
            "reason": {
              "type": "string",
              "description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it. +optional"
            },
            "status": {
              "type": "string",
              "description": "Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status +optional"
            },
            "details": {
              "id": "StatusDetails",
              "type": "object",
              "properties": {
                "uid": {
                  "type": "string",
                  "description": "UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids +optional"
                },
                "kind": {
                  "type": "string",
                  "description": "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds +optional"
                },
                "name": {
                  "type": "string",
                  "description": "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described). +optional"
                },
                "group": {
                  "type": "string",
                  "description": "The group attribute of the resource associated with the status StatusReason. +optional"
                },
                "causes": {
                  "type": "array",
                  "items": {
                    "id": "StatusCause",
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string",
                        "description": "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed. Fields may appear more than once in an array of causes due to fields having multiple errors. Optional. Examples: \"name\" - the field \"name\" on the current resource \"items[0].name\" - the field \"name\" on the first array entry in \"items\" +optional"
                      },
                      "reason": {
                        "type": "string",
                        "description": "A machine-readable description of the cause of the error. If this value is empty there is no information available. +optional"
                      },
                      "message": {
                        "type": "string",
                        "description": "A human-readable description of the cause of the error. This field may be presented as-is to a reader. +optional"
                      }
                    },
                    "description": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered."
                  },
                  "description": "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes. +optional"
                },
                "retryAfterSeconds": {
                  "type": "integer",
                  "format": "int32",
                  "description": "If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action. +optional"
                }
              },
              "description": "Extended data associated with the reason. Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type. +optional"
            },
            "message": {
              "type": "string",
              "description": "A human-readable description of the status of this operation. +optional"
            },
            "metadata": {
              "id": "ListMeta",
              "type": "object",
              "properties": {
                "continue": {
                  "type": "string",
                  "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response."
                },
                "selfLink": {
                  "type": "string",
                  "description": "SelfLink is a URL representing this object. Populated by the system. Read-only. +optional"
                },
                "resourceVersion": {
                  "type": "string",
                  "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency +optional"
                }
              },
              "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds +optional"
            }
          },
          "description": "Status is a return value for calls that don't return other objects"
        }
      ]
  namespaces.revisions.get:
    description: |-
      Get information about a revision.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/namespaces.revisions/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  namespaces.revisions.list:
    description: |-
      List revisions.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/namespaces.revisions/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  namespaces.routes.get:
    description: |-
      Get information about a route.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/namespaces.routes/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Route",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "The kind of this resource, in this case always \"Route\"."
            },
            "spec": {
              "id": "RouteSpec",
              "type": "object",
              "properties": {
                "traffic": {
                  "type": "array",
                  "items": {
                    "id": "TrafficTarget",
                    "type": "object",
                    "properties": {
                      "tag": {
                        "type": "string",
                        "description": "Tag is optionally used to expose a dedicated url for referencing this target exclusively. +optional"
                      },
                      "url": {
                        "type": "string",
                        "description": "Output only. URL displays the URL for accessing tagged traffic targets. URL is displayed in status, and is disallowed on spec. URL must contain a scheme (e.g. http://) and a hostname, but may not contain anything else (e.g. basic auth, url path, etc.)"
                      },
                      "percent": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Percent specifies percent of the traffic to this Revision or Configuration. This defaults to zero if unspecified. Cloud Run currently requires 100 percent for a single ConfigurationName TrafficTarget entry."
                      },
                      "revisionName": {
                        "type": "string",
                        "description": "RevisionName of a specific revision to which to send this portion of traffic. This is mutually exclusive with ConfigurationName. Providing RevisionName in spec is not currently supported by Cloud Run."
                      },
                      "latestRevision": {
                        "type": "boolean",
                        "description": "LatestRevision may be optionally provided to indicate that the latest ready Revision of the Configuration should be used for this traffic target. When provided LatestRevision must be true if RevisionName is empty; it must be false when RevisionName is non-empty. +optional"
                      },
                      "configurationName": {
                        "type": "string",
                        "description": "ConfigurationName of a configuration to whose latest revision we will send this portion of traffic. When the \"status.latestReadyRevisionName\" of the referenced configuration changes, we will automatically migrate traffic from the prior \"latest ready\" revision to the new one. This field is never set in Route's status, only its spec. This is mutually exclusive with RevisionName. Cloud Run currently supports a single ConfigurationName."
                      }
                    },
                    "description": "TrafficTarget holds a single entry of the routing table for a Route."
                  },
                  "description": "Traffic specifies how to distribute traffic over a collection of Knative Revisions and Configurations. Cloud Run currently supports a single configurationName."
                }
              },
              "description": "Spec holds the desired state of the Route (from the client)."
            },
            "status": {
              "id": "RouteStatus",
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "description": "URL holds the url that will distribute traffic over the provided traffic targets. It generally has the form: https://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app"
                },
                "address": {
                  "id": "Addressable",
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string"
                    }
                  },
                  "description": "Similar to url, information on where the service is available on HTTP."
                },
                "traffic": {
                  "type": "array",
                  "items": {
                    "id": "TrafficTarget",
                    "type": "object",
                    "properties": {
                      "tag": {
                        "type": "string",
                        "description": "Tag is optionally used to expose a dedicated url for referencing this target exclusively. +optional"
                      },
                      "url": {
                        "type": "string",
                        "description": "Output only. URL displays the URL for accessing tagged traffic targets. URL is displayed in status, and is disallowed on spec. URL must contain a scheme (e.g. http://) and a hostname, but may not contain anything else (e.g. basic auth, url path, etc.)"
                      },
                      "percent": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Percent specifies percent of the traffic to this Revision or Configuration. This defaults to zero if unspecified. Cloud Run currently requires 100 percent for a single ConfigurationName TrafficTarget entry."
                      },
                      "revisionName": {
                        "type": "string",
                        "description": "RevisionName of a specific revision to which to send this portion of traffic. This is mutually exclusive with ConfigurationName. Providing RevisionName in spec is not currently supported by Cloud Run."
                      },
                      "latestRevision": {
                        "type": "boolean",
                        "description": "LatestRevision may be optionally provided to indicate that the latest ready Revision of the Configuration should be used for this traffic target. When provided LatestRevision must be true if RevisionName is empty; it must be false when RevisionName is non-empty. +optional"
                      },
                      "configurationName": {
                        "type": "string",
                        "description": "ConfigurationName of a configuration to whose latest revision we will send this portion of traffic. When the \"status.latestReadyRevisionName\" of the referenced configuration changes, we will automatically migrate traffic from the prior \"latest ready\" revision to the new one. This field is never set in Route's status, only its spec. This is mutually exclusive with RevisionName. Cloud Run currently supports a single ConfigurationName."
                      }
                    },
                    "description": "TrafficTarget holds a single entry of the routing table for a Route."
                  },
                  "description": "Traffic holds the configured traffic distribution. These entries will always contain RevisionName references. When ConfigurationName appears in the spec, this will hold the LatestReadyRevisionName that we last observed."
                },
                "conditions": {
                  "type": "array",
                  "items": {
                    "id": "GoogleCloudRunV1Condition",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "type is used to communicate the status of the reconciliation process. See also: https://github.com/knative/serving/blob/master/docs/spec/errors.md#error-conditions-and-reporting Types common to all resources include: * \"Ready\": True when the Resource is ready."
                      },
                      "reason": {
                        "type": "string",
                        "description": "Optional. One-word CamelCase reason for the condition's last transition."
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the condition, one of True, False, Unknown."
                      },
                      "message": {
                        "type": "string",
                        "description": "Optional. Human readable message indicating details about the current status."
                      },
                      "severity": {
                        "type": "string",
                        "description": "Optional. How to interpret failures of this condition, one of Error, Warning, Info"
                      },
                      "lastTransitionTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "Optional. Last time the condition transitioned from one status to another."
                      }
                    },
                    "description": "Condition defines a generic condition for a Resource"
                  },
                  "description": "Conditions communicates information about ongoing/complete reconciliation processes that bring the \"spec\" inline with the observed state of the world."
                },
                "observedGeneration": {
                  "type": "integer",
                  "format": "int32",
                  "description": "ObservedGeneration is the 'Generation' of the Route that was last processed by the controller. Clients polling for completed reconciliation should poll until observedGeneration = metadata.generation and the Ready condition's status is True or False. Note that providing a trafficTarget that only has a configurationName will result in a Route that does not increment either its metadata.generation or its observedGeneration, as new \"latest ready\" revisions from the Configuration are processed without an update to the Route's spec."
                }
              },
              "description": "Status communicates the observed state of the Route (from the controller)."
            },
            "metadata": {
              "id": "ObjectMeta",
              "type": "object",
              "properties": {
                "uid": {
                  "type": "string",
                  "description": "(Optional) UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations. Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                },
                "name": {
                  "type": "string",
                  "description": "Name must be unique within a namespace, within a Cloud Run region. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names +optional"
                },
                "labels": {
                  "type": "object",
                  "description": "(Optional) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and routes. More info: http://kubernetes.io/docs/user-guide/labels",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "selfLink": {
                  "type": "string",
                  "description": "(Optional) SelfLink is a URL representing this object. Populated by the system. Read-only. string selfLink = 4;"
                },
                "namespace": {
                  "type": "string",
                  "description": "Namespace defines the space within each name must be unique, within a Cloud Run region. In Cloud Run the namespace must be equal to either the project ID or project number."
                },
                "finalizers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. +patchStrategy=merge"
                },
                "generation": {
                  "type": "integer",
                  "format": "int32",
                  "description": "(Optional) A sequence number representing a specific generation of the desired state. Populated by the system. Read-only."
                },
                "annotations": {
                  "type": "object",
                  "description": "(Optional) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "clusterName": {
                  "type": "string",
                  "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request."
                },
                "generateName": {
                  "type": "string",
                  "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server. If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header). Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency string generateName = 2;"
                },
                "ownerReferences": {
                  "type": "array",
                  "items": {
                    "id": "OwnerReference",
                    "type": "object",
                    "properties": {
                      "uid": {
                        "type": "string",
                        "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                      },
                      "kind": {
                        "type": "string",
                        "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                      },
                      "apiVersion": {
                        "type": "string",
                        "description": "API version of the referent."
                      },
                      "controller": {
                        "type": "boolean",
                        "description": "If true, this reference points to the managing controller. +optional"
                      },
                      "blockOwnerDeletion": {
                        "type": "boolean",
                        "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned. +optional"
                      }
                    },
                    "description": "OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field."
                  },
                  "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported List of objects that own this object. If ALL objects in the list have been deleted, this object will be garbage collected."
                },
                "resourceVersion": {
                  "type": "string",
                  "description": "Optional. An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server or omit the value to disable conflict-detection. They may only be valid for a particular resource or set of resources. Populated by the system. Read-only. Value must be treated as opaque by clients or omitted. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
                },
                "creationTimestamp": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "(Optional) CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
                },
                "deletionTimestamp": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested. Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
                },
                "deletionGracePeriodSeconds": {
                  "type": "integer",
                  "format": "int32",
                  "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only."
                }
              },
              "description": "Metadata associated with this Route, including name, namespace, labels, and annotations."
            },
            "apiVersion": {
              "type": "string",
              "description": "The API version for this call such as \"serving.knative.dev/v1\"."
            }
          },
          "description": "Route is responsible for configuring ingress over a collection of Revisions. Some of the Revisions a Route distributes traffic over may be specified by referencing the Configuration responsible for creating them; in these cases the Route is additionally responsible for monitoring the Configuration for \"latest ready\" revision changes, and smoothly rolling out latest revisions. See also: https://github.com/knative/serving/blob/master/docs/spec/overview.md#route Cloud Run currently supports referencing a single Configuration to automatically deploy the \"latest ready\" Revision from that Configuration."
        }
      ]
  namespaces.routes.list:
    description: |-
      List routes.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/namespaces.routes/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListRoutesResponse",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "The kind of this resource, in this case always \"RouteList\"."
            },
            "items": {
              "type": "array",
              "items": {
                "id": "Route",
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "description": "The kind of this resource, in this case always \"Route\"."
                  },
                  "spec": {
                    "id": "RouteSpec",
                    "type": "object",
                    "properties": {
                      "traffic": {
                        "type": "array",
                        "items": {
                          "id": "TrafficTarget",
                          "type": "object",
                          "properties": {
                            "tag": {
                              "type": "string",
                              "description": "Tag is optionally used to expose a dedicated url for referencing this target exclusively. +optional"
                            },
                            "url": {
                              "type": "string",
                              "description": "Output only. URL displays the URL for accessing tagged traffic targets. URL is displayed in status, and is disallowed on spec. URL must contain a scheme (e.g. http://) and a hostname, but may not contain anything else (e.g. basic auth, url path, etc.)"
                            },
                            "percent": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Percent specifies percent of the traffic to this Revision or Configuration. This defaults to zero if unspecified. Cloud Run currently requires 100 percent for a single ConfigurationName TrafficTarget entry."
                            },
                            "revisionName": {
                              "type": "string",
                              "description": "RevisionName of a specific revision to which to send this portion of traffic. This is mutually exclusive with ConfigurationName. Providing RevisionName in spec is not currently supported by Cloud Run."
                            },
                            "latestRevision": {
                              "type": "boolean",
                              "description": "LatestRevision may be optionally provided to indicate that the latest ready Revision of the Configuration should be used for this traffic target. When provided LatestRevision must be true if RevisionName is empty; it must be false when RevisionName is non-empty. +optional"
                            },
                            "configurationName": {
                              "type": "string",
                              "description": "ConfigurationName of a configuration to whose latest revision we will send this portion of traffic. When the \"status.latestReadyRevisionName\" of the referenced configuration changes, we will automatically migrate traffic from the prior \"latest ready\" revision to the new one. This field is never set in Route's status, only its spec. This is mutually exclusive with RevisionName. Cloud Run currently supports a single ConfigurationName."
                            }
                          },
                          "description": "TrafficTarget holds a single entry of the routing table for a Route."
                        },
                        "description": "Traffic specifies how to distribute traffic over a collection of Knative Revisions and Configurations. Cloud Run currently supports a single configurationName."
                      }
                    },
                    "description": "Spec holds the desired state of the Route (from the client)."
                  },
                  "status": {
                    "id": "RouteStatus",
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string",
                        "description": "URL holds the url that will distribute traffic over the provided traffic targets. It generally has the form: https://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app"
                      },
                      "address": {
                        "id": "Addressable",
                        "type": "object",
                        "properties": {
                          "url": {
                            "type": "string"
                          }
                        },
                        "description": "Similar to url, information on where the service is available on HTTP."
                      },
                      "traffic": {
                        "type": "array",
                        "items": {
                          "id": "TrafficTarget",
                          "type": "object",
                          "properties": {
                            "tag": {
                              "type": "string",
                              "description": "Tag is optionally used to expose a dedicated url for referencing this target exclusively. +optional"
                            },
                            "url": {
                              "type": "string",
                              "description": "Output only. URL displays the URL for accessing tagged traffic targets. URL is displayed in status, and is disallowed on spec. URL must contain a scheme (e.g. http://) and a hostname, but may not contain anything else (e.g. basic auth, url path, etc.)"
                            },
                            "percent": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Percent specifies percent of the traffic to this Revision or Configuration. This defaults to zero if unspecified. Cloud Run currently requires 100 percent for a single ConfigurationName TrafficTarget entry."
                            },
                            "revisionName": {
                              "type": "string",
                              "description": "RevisionName of a specific revision to which to send this portion of traffic. This is mutually exclusive with ConfigurationName. Providing RevisionName in spec is not currently supported by Cloud Run."
                            },
                            "latestRevision": {
                              "type": "boolean",
                              "description": "LatestRevision may be optionally provided to indicate that the latest ready Revision of the Configuration should be used for this traffic target. When provided LatestRevision must be true if RevisionName is empty; it must be false when RevisionName is non-empty. +optional"
                            },
                            "configurationName": {
                              "type": "string",
                              "description": "ConfigurationName of a configuration to whose latest revision we will send this portion of traffic. When the \"status.latestReadyRevisionName\" of the referenced configuration changes, we will automatically migrate traffic from the prior \"latest ready\" revision to the new one. This field is never set in Route's status, only its spec. This is mutually exclusive with RevisionName. Cloud Run currently supports a single ConfigurationName."
                            }
                          },
                          "description": "TrafficTarget holds a single entry of the routing table for a Route."
                        },
                        "description": "Traffic holds the configured traffic distribution. These entries will always contain RevisionName references. When ConfigurationName appears in the spec, this will hold the LatestReadyRevisionName that we last observed."
                      },
                      "conditions": {
                        "type": "array",
                        "items": {
                          "id": "GoogleCloudRunV1Condition",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "type is used to communicate the status of the reconciliation process. See also: https://github.com/knative/serving/blob/master/docs/spec/errors.md#error-conditions-and-reporting Types common to all resources include: * \"Ready\": True when the Resource is ready."
                            },
                            "reason": {
                              "type": "string",
                              "description": "Optional. One-word CamelCase reason for the condition's last transition."
                            },
                            "status": {
                              "type": "string",
                              "description": "Status of the condition, one of True, False, Unknown."
                            },
                            "message": {
                              "type": "string",
                              "description": "Optional. Human readable message indicating details about the current status."
                            },
                            "severity": {
                              "type": "string",
                              "description": "Optional. How to interpret failures of this condition, one of Error, Warning, Info"
                            },
                            "lastTransitionTime": {
                              "type": "string",
                              "format": "google-datetime",
                              "description": "Optional. Last time the condition transitioned from one status to another."
                            }
                          },
                          "description": "Condition defines a generic condition for a Resource"
                        },
                        "description": "Conditions communicates information about ongoing/complete reconciliation processes that bring the \"spec\" inline with the observed state of the world."
                      },
                      "observedGeneration": {
                        "type": "integer",
                        "format": "int32",
                        "description": "ObservedGeneration is the 'Generation' of the Route that was last processed by the controller. Clients polling for completed reconciliation should poll until observedGeneration = metadata.generation and the Ready condition's status is True or False. Note that providing a trafficTarget that only has a configurationName will result in a Route that does not increment either its metadata.generation or its observedGeneration, as new \"latest ready\" revisions from the Configuration are processed without an update to the Route's spec."
                      }
                    },
                    "description": "Status communicates the observed state of the Route (from the controller)."
                  },
                  "metadata": {
                    "id": "ObjectMeta",
                    "type": "object",
                    "properties": {
                      "uid": {
                        "type": "string",
                        "description": "(Optional) UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations. Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name must be unique within a namespace, within a Cloud Run region. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names +optional"
                      },
                      "labels": {
                        "type": "object",
                        "description": "(Optional) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and routes. More info: http://kubernetes.io/docs/user-guide/labels",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "selfLink": {
                        "type": "string",
                        "description": "(Optional) SelfLink is a URL representing this object. Populated by the system. Read-only. string selfLink = 4;"
                      },
                      "namespace": {
                        "type": "string",
                        "description": "Namespace defines the space within each name must be unique, within a Cloud Run region. In Cloud Run the namespace must be equal to either the project ID or project number."
                      },
                      "finalizers": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. +patchStrategy=merge"
                      },
                      "generation": {
                        "type": "integer",
                        "format": "int32",
                        "description": "(Optional) A sequence number representing a specific generation of the desired state. Populated by the system. Read-only."
                      },
                      "annotations": {
                        "type": "object",
                        "description": "(Optional) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "clusterName": {
                        "type": "string",
                        "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request."
                      },
                      "generateName": {
                        "type": "string",
                        "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server. If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header). Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency string generateName = 2;"
                      },
                      "ownerReferences": {
                        "type": "array",
                        "items": {
                          "id": "OwnerReference",
                          "type": "object",
                          "properties": {
                            "uid": {
                              "type": "string",
                              "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                            },
                            "kind": {
                              "type": "string",
                              "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                            },
                            "apiVersion": {
                              "type": "string",
                              "description": "API version of the referent."
                            },
                            "controller": {
                              "type": "boolean",
                              "description": "If true, this reference points to the managing controller. +optional"
                            },
                            "blockOwnerDeletion": {
                              "type": "boolean",
                              "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned. +optional"
                            }
                          },
                          "description": "OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field."
                        },
                        "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported List of objects that own this object. If ALL objects in the list have been deleted, this object will be garbage collected."
                      },
                      "resourceVersion": {
                        "type": "string",
                        "description": "Optional. An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server or omit the value to disable conflict-detection. They may only be valid for a particular resource or set of resources. Populated by the system. Read-only. Value must be treated as opaque by clients or omitted. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
                      },
                      "creationTimestamp": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "(Optional) CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
                      },
                      "deletionTimestamp": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested. Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
                      },
                      "deletionGracePeriodSeconds": {
                        "type": "integer",
                        "format": "int32",
                        "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only."
                      }
                    },
                    "description": "Metadata associated with this Route, including name, namespace, labels, and annotations."
                  },
                  "apiVersion": {
                    "type": "string",
                    "description": "The API version for this call such as \"serving.knative.dev/v1\"."
                  }
                },
                "description": "Route is responsible for configuring ingress over a collection of Revisions. Some of the Revisions a Route distributes traffic over may be specified by referencing the Configuration responsible for creating them; in these cases the Route is additionally responsible for monitoring the Configuration for \"latest ready\" revision changes, and smoothly rolling out latest revisions. See also: https://github.com/knative/serving/blob/master/docs/spec/overview.md#route Cloud Run currently supports referencing a single Configuration to automatically deploy the \"latest ready\" Revision from that Configuration."
              },
              "description": "List of Routes."
            },
            "metadata": {
              "id": "ListMeta",
              "type": "object",
              "properties": {
                "continue": {
                  "type": "string",
                  "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response."
                },
                "selfLink": {
                  "type": "string",
                  "description": "SelfLink is a URL representing this object. Populated by the system. Read-only. +optional"
                },
                "resourceVersion": {
                  "type": "string",
                  "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency +optional"
                }
              },
              "description": "Metadata associated with this Route list."
            },
            "apiVersion": {
              "type": "string",
              "description": "The API version for this call such as \"serving.knative.dev/v1\"."
            },
            "unreachable": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Locations that could not be reached."
            }
          },
          "description": "ListRoutesResponse is a list of Route resources."
        }
      ]
  namespaces.services.create:
    description: |-
      Create a service.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/namespaces.services/create
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  namespaces.services.delete:
    description: |-
      Delete a service. This will cause the Service to stop serving traffic and will delete the child entities like Routes, Configurations and Revisions.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/namespaces.services/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Status",
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "format": "int32",
              "description": "Suggested HTTP return code for this status, 0 if not set. +optional"
            },
            "reason": {
              "type": "string",
              "description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it. +optional"
            },
            "status": {
              "type": "string",
              "description": "Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status +optional"
            },
            "details": {
              "id": "StatusDetails",
              "type": "object",
              "properties": {
                "uid": {
                  "type": "string",
                  "description": "UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids +optional"
                },
                "kind": {
                  "type": "string",
                  "description": "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds +optional"
                },
                "name": {
                  "type": "string",
                  "description": "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described). +optional"
                },
                "group": {
                  "type": "string",
                  "description": "The group attribute of the resource associated with the status StatusReason. +optional"
                },
                "causes": {
                  "type": "array",
                  "items": {
                    "id": "StatusCause",
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string",
                        "description": "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed. Fields may appear more than once in an array of causes due to fields having multiple errors. Optional. Examples: \"name\" - the field \"name\" on the current resource \"items[0].name\" - the field \"name\" on the first array entry in \"items\" +optional"
                      },
                      "reason": {
                        "type": "string",
                        "description": "A machine-readable description of the cause of the error. If this value is empty there is no information available. +optional"
                      },
                      "message": {
                        "type": "string",
                        "description": "A human-readable description of the cause of the error. This field may be presented as-is to a reader. +optional"
                      }
                    },
                    "description": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered."
                  },
                  "description": "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes. +optional"
                },
                "retryAfterSeconds": {
                  "type": "integer",
                  "format": "int32",
                  "description": "If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action. +optional"
                }
              },
              "description": "Extended data associated with the reason. Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type. +optional"
            },
            "message": {
              "type": "string",
              "description": "A human-readable description of the status of this operation. +optional"
            },
            "metadata": {
              "id": "ListMeta",
              "type": "object",
              "properties": {
                "continue": {
                  "type": "string",
                  "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response."
                },
                "selfLink": {
                  "type": "string",
                  "description": "SelfLink is a URL representing this object. Populated by the system. Read-only. +optional"
                },
                "resourceVersion": {
                  "type": "string",
                  "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency +optional"
                }
              },
              "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds +optional"
            }
          },
          "description": "Status is a return value for calls that don't return other objects"
        }
      ]
  namespaces.services.get:
    description: |-
      Get information about a service.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/namespaces.services/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  namespaces.services.list:
    description: |-
      List services.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/namespaces.services/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  namespaces.services.replaceService:
    description: |-
      Replace a service. Only the spec and metadata labels and annotations are modifiable. After the Update request, Cloud Run will work to make the 'status' match the requested 'spec'. May provide metadata.resourceVersion to enforce update from last read for optimistic concurrency control.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/namespaces.services/replaceService
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.authorizeddomains.list:
    description: |-
      List authorized domains.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/projects.authorizeddomains/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListAuthorizedDomainsResponse",
          "type": "object",
          "properties": {
            "domains": {
              "type": "array",
              "items": {
                "id": "AuthorizedDomain",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Relative name of the domain authorized for use. Example: `example.com`."
                  },
                  "name": {
                    "type": "string",
                    "description": "Deprecated Read only. Full path to the `AuthorizedDomain` resource in the API. Example: `projects/myproject/authorizedDomains/example.com`."
                  }
                },
                "description": "A domain that a user has been authorized to administer. To authorize use of a domain, verify ownership via [Webmaster Central](https://www.google.com/webmasters/verification/home)."
              },
              "description": "The authorized domains belonging to the user."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Continuation token for fetching the next page of results."
            }
          },
          "description": "A list of Authorized Domains."
        }
      ]
  projects.locations.authorizeddomains.list:
    description: |-
      List authorized domains.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/projects.locations.authorizeddomains/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListAuthorizedDomainsResponse",
          "type": "object",
          "properties": {
            "domains": {
              "type": "array",
              "items": {
                "id": "AuthorizedDomain",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Relative name of the domain authorized for use. Example: `example.com`."
                  },
                  "name": {
                    "type": "string",
                    "description": "Deprecated Read only. Full path to the `AuthorizedDomain` resource in the API. Example: `projects/myproject/authorizedDomains/example.com`."
                  }
                },
                "description": "A domain that a user has been authorized to administer. To authorize use of a domain, verify ownership via [Webmaster Central](https://www.google.com/webmasters/verification/home)."
              },
              "description": "The authorized domains belonging to the user."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Continuation token for fetching the next page of results."
            }
          },
          "description": "A list of Authorized Domains."
        }
      ]
  projects.locations.configurations.get:
    description: |-
      Get information about a configuration.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/projects.locations.configurations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.configurations.list:
    description: |-
      List configurations.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/projects.locations.configurations/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.domainmappings.create:
    description: |-
      Create a new domain mapping.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/projects.locations.domainmappings/create
    example:
      inputs: [
        {
          "id": "DomainMapping",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "The kind of resource, in this case \"DomainMapping\"."
            },
            "spec": {
              "id": "DomainMappingSpec",
              "type": "object",
              "properties": {
                "routeName": {
                  "type": "string",
                  "description": "The name of the Knative Route that this DomainMapping applies to. The route must exist."
                },
                "forceOverride": {
                  "type": "boolean",
                  "description": "If set, the mapping will override any mapping set before this spec was set. It is recommended that the user leaves this empty to receive an error warning about a potential conflict and only set it once the respective UI has given such a warning."
                },
                "certificateMode": {
                  "enum": [
                    "CERTIFICATE_MODE_UNSPECIFIED",
                    "NONE",
                    "AUTOMATIC"
                  ],
                  "type": "string",
                  "description": "The mode of the certificate.",
                  "enumDescriptions": [
                    "",
                    "Do not provision an HTTPS certificate.",
                    "Automatically provisions an HTTPS certificate via GoogleCA or LetsEncrypt."
                  ]
                }
              },
              "description": "The spec for this DomainMapping."
            },
            "status": {
              "id": "DomainMappingStatus",
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "description": "Cloud Run fully managed: not supported Cloud Run on GKE: supported Holds the URL that will serve the traffic of the DomainMapping. +optional"
                },
                "conditions": {
                  "type": "array",
                  "items": {
                    "id": "GoogleCloudRunV1Condition",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "type is used to communicate the status of the reconciliation process. See also: https://github.com/knative/serving/blob/master/docs/spec/errors.md#error-conditions-and-reporting Types common to all resources include: * \"Ready\": True when the Resource is ready."
                      },
                      "reason": {
                        "type": "string",
                        "description": "Optional. One-word CamelCase reason for the condition's last transition."
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the condition, one of True, False, Unknown."
                      },
                      "message": {
                        "type": "string",
                        "description": "Optional. Human readable message indicating details about the current status."
                      },
                      "severity": {
                        "type": "string",
                        "description": "Optional. How to interpret failures of this condition, one of Error, Warning, Info"
                      },
                      "lastTransitionTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "Optional. Last time the condition transitioned from one status to another."
                      }
                    },
                    "description": "Condition defines a generic condition for a Resource"
                  },
                  "description": "Array of observed DomainMappingConditions, indicating the current state of the DomainMapping."
                },
                "mappedRouteName": {
                  "type": "string",
                  "description": "The name of the route that the mapping currently points to."
                },
                "resourceRecords": {
                  "type": "array",
                  "items": {
                    "id": "ResourceRecord",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Relative name of the object affected by this record. Only applicable for `CNAME` records. Example: 'www'."
                      },
                      "type": {
                        "enum": [
                          "RECORD_TYPE_UNSPECIFIED",
                          "A",
                          "AAAA",
                          "CNAME"
                        ],
                        "type": "string",
                        "description": "Resource record type. Example: `AAAA`.",
                        "enumDescriptions": [
                          "An unknown resource record.",
                          "An A resource record. Data is an IPv4 address.",
                          "An AAAA resource record. Data is an IPv6 address.",
                          "A CNAME resource record. Data is a domain name to be aliased."
                        ]
                      },
                      "rrdata": {
                        "type": "string",
                        "description": "Data for this record. Values vary by record type, as defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1)."
                      }
                    },
                    "description": "A DNS resource record."
                  },
                  "description": "The resource records required to configure this domain mapping. These records must be added to the domain's DNS configuration in order to serve the application via this domain mapping."
                },
                "observedGeneration": {
                  "type": "integer",
                  "format": "int32",
                  "description": "ObservedGeneration is the 'Generation' of the DomainMapping that was last processed by the controller. Clients polling for completed reconciliation should poll until observedGeneration = metadata.generation and the Ready condition's status is True or False."
                }
              },
              "description": "The current status of the DomainMapping."
            },
            "metadata": {
              "id": "ObjectMeta",
              "type": "object",
              "properties": {
                "uid": {
                  "type": "string",
                  "description": "(Optional) UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations. Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                },
                "name": {
                  "type": "string",
                  "description": "Name must be unique within a namespace, within a Cloud Run region. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names +optional"
                },
                "labels": {
                  "type": "object",
                  "description": "(Optional) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and routes. More info: http://kubernetes.io/docs/user-guide/labels",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "selfLink": {
                  "type": "string",
                  "description": "(Optional) SelfLink is a URL representing this object. Populated by the system. Read-only. string selfLink = 4;"
                },
                "namespace": {
                  "type": "string",
                  "description": "Namespace defines the space within each name must be unique, within a Cloud Run region. In Cloud Run the namespace must be equal to either the project ID or project number."
                },
                "finalizers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. +patchStrategy=merge"
                },
                "generation": {
                  "type": "integer",
                  "format": "int32",
                  "description": "(Optional) A sequence number representing a specific generation of the desired state. Populated by the system. Read-only."
                },
                "annotations": {
                  "type": "object",
                  "description": "(Optional) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "clusterName": {
                  "type": "string",
                  "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request."
                },
                "generateName": {
                  "type": "string",
                  "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server. If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header). Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency string generateName = 2;"
                },
                "ownerReferences": {
                  "type": "array",
                  "items": {
                    "id": "OwnerReference",
                    "type": "object",
                    "properties": {
                      "uid": {
                        "type": "string",
                        "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                      },
                      "kind": {
                        "type": "string",
                        "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                      },
                      "apiVersion": {
                        "type": "string",
                        "description": "API version of the referent."
                      },
                      "controller": {
                        "type": "boolean",
                        "description": "If true, this reference points to the managing controller. +optional"
                      },
                      "blockOwnerDeletion": {
                        "type": "boolean",
                        "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned. +optional"
                      }
                    },
                    "description": "OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field."
                  },
                  "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported List of objects that own this object. If ALL objects in the list have been deleted, this object will be garbage collected."
                },
                "resourceVersion": {
                  "type": "string",
                  "description": "Optional. An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server or omit the value to disable conflict-detection. They may only be valid for a particular resource or set of resources. Populated by the system. Read-only. Value must be treated as opaque by clients or omitted. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
                },
                "creationTimestamp": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "(Optional) CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
                },
                "deletionTimestamp": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested. Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
                },
                "deletionGracePeriodSeconds": {
                  "type": "integer",
                  "format": "int32",
                  "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only."
                }
              },
              "description": "Metadata associated with this BuildTemplate."
            },
            "apiVersion": {
              "type": "string",
              "description": "The API version for this call such as \"domains.cloudrun.com/v1\"."
            }
          },
          "description": "Resource to hold the state and status of a user's domain mapping. NOTE: This resource is currently in Beta."
        }
      ]
      outputs: [
        {}
      ]
  projects.locations.domainmappings.delete:
    description: |-
      Delete a domain mapping.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/projects.locations.domainmappings/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Status",
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "format": "int32",
              "description": "Suggested HTTP return code for this status, 0 if not set. +optional"
            },
            "reason": {
              "type": "string",
              "description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it. +optional"
            },
            "status": {
              "type": "string",
              "description": "Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status +optional"
            },
            "details": {
              "id": "StatusDetails",
              "type": "object",
              "properties": {
                "uid": {
                  "type": "string",
                  "description": "UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids +optional"
                },
                "kind": {
                  "type": "string",
                  "description": "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds +optional"
                },
                "name": {
                  "type": "string",
                  "description": "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described). +optional"
                },
                "group": {
                  "type": "string",
                  "description": "The group attribute of the resource associated with the status StatusReason. +optional"
                },
                "causes": {
                  "type": "array",
                  "items": {
                    "id": "StatusCause",
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string",
                        "description": "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed. Fields may appear more than once in an array of causes due to fields having multiple errors. Optional. Examples: \"name\" - the field \"name\" on the current resource \"items[0].name\" - the field \"name\" on the first array entry in \"items\" +optional"
                      },
                      "reason": {
                        "type": "string",
                        "description": "A machine-readable description of the cause of the error. If this value is empty there is no information available. +optional"
                      },
                      "message": {
                        "type": "string",
                        "description": "A human-readable description of the cause of the error. This field may be presented as-is to a reader. +optional"
                      }
                    },
                    "description": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered."
                  },
                  "description": "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes. +optional"
                },
                "retryAfterSeconds": {
                  "type": "integer",
                  "format": "int32",
                  "description": "If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action. +optional"
                }
              },
              "description": "Extended data associated with the reason. Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type. +optional"
            },
            "message": {
              "type": "string",
              "description": "A human-readable description of the status of this operation. +optional"
            },
            "metadata": {
              "id": "ListMeta",
              "type": "object",
              "properties": {
                "continue": {
                  "type": "string",
                  "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response."
                },
                "selfLink": {
                  "type": "string",
                  "description": "SelfLink is a URL representing this object. Populated by the system. Read-only. +optional"
                },
                "resourceVersion": {
                  "type": "string",
                  "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency +optional"
                }
              },
              "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds +optional"
            }
          },
          "description": "Status is a return value for calls that don't return other objects"
        }
      ]
  projects.locations.domainmappings.get:
    description: |-
      Get information about a domain mapping.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/projects.locations.domainmappings/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.domainmappings.list:
    description: |-
      List domain mappings.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/projects.locations.domainmappings/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListDomainMappingsResponse",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "The kind of this resource, in this case \"DomainMappingList\"."
            },
            "items": {
              "type": "array",
              "items": {
                "id": "DomainMapping",
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "description": "The kind of resource, in this case \"DomainMapping\"."
                  },
                  "spec": {
                    "id": "DomainMappingSpec",
                    "type": "object",
                    "properties": {
                      "routeName": {
                        "type": "string",
                        "description": "The name of the Knative Route that this DomainMapping applies to. The route must exist."
                      },
                      "forceOverride": {
                        "type": "boolean",
                        "description": "If set, the mapping will override any mapping set before this spec was set. It is recommended that the user leaves this empty to receive an error warning about a potential conflict and only set it once the respective UI has given such a warning."
                      },
                      "certificateMode": {
                        "enum": [
                          "CERTIFICATE_MODE_UNSPECIFIED",
                          "NONE",
                          "AUTOMATIC"
                        ],
                        "type": "string",
                        "description": "The mode of the certificate.",
                        "enumDescriptions": [
                          "",
                          "Do not provision an HTTPS certificate.",
                          "Automatically provisions an HTTPS certificate via GoogleCA or LetsEncrypt."
                        ]
                      }
                    },
                    "description": "The spec for this DomainMapping."
                  },
                  "status": {
                    "id": "DomainMappingStatus",
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string",
                        "description": "Cloud Run fully managed: not supported Cloud Run on GKE: supported Holds the URL that will serve the traffic of the DomainMapping. +optional"
                      },
                      "conditions": {
                        "type": "array",
                        "items": {
                          "id": "GoogleCloudRunV1Condition",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "type is used to communicate the status of the reconciliation process. See also: https://github.com/knative/serving/blob/master/docs/spec/errors.md#error-conditions-and-reporting Types common to all resources include: * \"Ready\": True when the Resource is ready."
                            },
                            "reason": {
                              "type": "string",
                              "description": "Optional. One-word CamelCase reason for the condition's last transition."
                            },
                            "status": {
                              "type": "string",
                              "description": "Status of the condition, one of True, False, Unknown."
                            },
                            "message": {
                              "type": "string",
                              "description": "Optional. Human readable message indicating details about the current status."
                            },
                            "severity": {
                              "type": "string",
                              "description": "Optional. How to interpret failures of this condition, one of Error, Warning, Info"
                            },
                            "lastTransitionTime": {
                              "type": "string",
                              "format": "google-datetime",
                              "description": "Optional. Last time the condition transitioned from one status to another."
                            }
                          },
                          "description": "Condition defines a generic condition for a Resource"
                        },
                        "description": "Array of observed DomainMappingConditions, indicating the current state of the DomainMapping."
                      },
                      "mappedRouteName": {
                        "type": "string",
                        "description": "The name of the route that the mapping currently points to."
                      },
                      "resourceRecords": {
                        "type": "array",
                        "items": {
                          "id": "ResourceRecord",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Relative name of the object affected by this record. Only applicable for `CNAME` records. Example: 'www'."
                            },
                            "type": {
                              "enum": [
                                "RECORD_TYPE_UNSPECIFIED",
                                "A",
                                "AAAA",
                                "CNAME"
                              ],
                              "type": "string",
                              "description": "Resource record type. Example: `AAAA`.",
                              "enumDescriptions": [
                                "An unknown resource record.",
                                "An A resource record. Data is an IPv4 address.",
                                "An AAAA resource record. Data is an IPv6 address.",
                                "A CNAME resource record. Data is a domain name to be aliased."
                              ]
                            },
                            "rrdata": {
                              "type": "string",
                              "description": "Data for this record. Values vary by record type, as defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1)."
                            }
                          },
                          "description": "A DNS resource record."
                        },
                        "description": "The resource records required to configure this domain mapping. These records must be added to the domain's DNS configuration in order to serve the application via this domain mapping."
                      },
                      "observedGeneration": {
                        "type": "integer",
                        "format": "int32",
                        "description": "ObservedGeneration is the 'Generation' of the DomainMapping that was last processed by the controller. Clients polling for completed reconciliation should poll until observedGeneration = metadata.generation and the Ready condition's status is True or False."
                      }
                    },
                    "description": "The current status of the DomainMapping."
                  },
                  "metadata": {
                    "id": "ObjectMeta",
                    "type": "object",
                    "properties": {
                      "uid": {
                        "type": "string",
                        "description": "(Optional) UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations. Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name must be unique within a namespace, within a Cloud Run region. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names +optional"
                      },
                      "labels": {
                        "type": "object",
                        "description": "(Optional) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and routes. More info: http://kubernetes.io/docs/user-guide/labels",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "selfLink": {
                        "type": "string",
                        "description": "(Optional) SelfLink is a URL representing this object. Populated by the system. Read-only. string selfLink = 4;"
                      },
                      "namespace": {
                        "type": "string",
                        "description": "Namespace defines the space within each name must be unique, within a Cloud Run region. In Cloud Run the namespace must be equal to either the project ID or project number."
                      },
                      "finalizers": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. +patchStrategy=merge"
                      },
                      "generation": {
                        "type": "integer",
                        "format": "int32",
                        "description": "(Optional) A sequence number representing a specific generation of the desired state. Populated by the system. Read-only."
                      },
                      "annotations": {
                        "type": "object",
                        "description": "(Optional) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "clusterName": {
                        "type": "string",
                        "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request."
                      },
                      "generateName": {
                        "type": "string",
                        "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server. If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header). Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency string generateName = 2;"
                      },
                      "ownerReferences": {
                        "type": "array",
                        "items": {
                          "id": "OwnerReference",
                          "type": "object",
                          "properties": {
                            "uid": {
                              "type": "string",
                              "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                            },
                            "kind": {
                              "type": "string",
                              "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                            },
                            "apiVersion": {
                              "type": "string",
                              "description": "API version of the referent."
                            },
                            "controller": {
                              "type": "boolean",
                              "description": "If true, this reference points to the managing controller. +optional"
                            },
                            "blockOwnerDeletion": {
                              "type": "boolean",
                              "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned. +optional"
                            }
                          },
                          "description": "OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field."
                        },
                        "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported List of objects that own this object. If ALL objects in the list have been deleted, this object will be garbage collected."
                      },
                      "resourceVersion": {
                        "type": "string",
                        "description": "Optional. An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server or omit the value to disable conflict-detection. They may only be valid for a particular resource or set of resources. Populated by the system. Read-only. Value must be treated as opaque by clients or omitted. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
                      },
                      "creationTimestamp": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "(Optional) CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
                      },
                      "deletionTimestamp": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested. Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
                      },
                      "deletionGracePeriodSeconds": {
                        "type": "integer",
                        "format": "int32",
                        "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only."
                      }
                    },
                    "description": "Metadata associated with this BuildTemplate."
                  },
                  "apiVersion": {
                    "type": "string",
                    "description": "The API version for this call such as \"domains.cloudrun.com/v1\"."
                  }
                },
                "description": "Resource to hold the state and status of a user's domain mapping. NOTE: This resource is currently in Beta."
              },
              "description": "List of DomainMappings."
            },
            "metadata": {
              "id": "ListMeta",
              "type": "object",
              "properties": {
                "continue": {
                  "type": "string",
                  "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response."
                },
                "selfLink": {
                  "type": "string",
                  "description": "SelfLink is a URL representing this object. Populated by the system. Read-only. +optional"
                },
                "resourceVersion": {
                  "type": "string",
                  "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency +optional"
                }
              },
              "description": "Metadata associated with this DomainMapping list."
            },
            "apiVersion": {
              "type": "string",
              "description": "The API version for this call such as \"domains.cloudrun.com/v1\"."
            },
            "unreachable": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Locations that could not be reached."
            }
          },
          "description": "ListDomainMappingsResponse is a list of DomainMapping resources."
        }
      ]
  projects.locations.list:
    description: |-
      Lists information about the supported locations for this service.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/projects.locations/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListLocationsResponse",
          "type": "object",
          "properties": {
            "locations": {
              "type": "array",
              "items": {
                "id": "Location",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
                  },
                  "labels": {
                    "type": "object",
                    "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Service-specific metadata. For example the available capacity at the given location.",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "locationId": {
                    "type": "string",
                    "description": "The canonical id for this location. For example: `\"us-east1\"`."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
                  }
                },
                "description": "A resource that represents Google Cloud Platform location."
              },
              "description": "A list of locations that matches the specified filter in the request."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The standard List next-page token."
            }
          },
          "description": "The response message for Locations.ListLocations."
        }
      ]
  projects.locations.revisions.delete:
    description: |-
      Delete a revision.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/projects.locations.revisions/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Status",
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "format": "int32",
              "description": "Suggested HTTP return code for this status, 0 if not set. +optional"
            },
            "reason": {
              "type": "string",
              "description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it. +optional"
            },
            "status": {
              "type": "string",
              "description": "Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status +optional"
            },
            "details": {
              "id": "StatusDetails",
              "type": "object",
              "properties": {
                "uid": {
                  "type": "string",
                  "description": "UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids +optional"
                },
                "kind": {
                  "type": "string",
                  "description": "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds +optional"
                },
                "name": {
                  "type": "string",
                  "description": "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described). +optional"
                },
                "group": {
                  "type": "string",
                  "description": "The group attribute of the resource associated with the status StatusReason. +optional"
                },
                "causes": {
                  "type": "array",
                  "items": {
                    "id": "StatusCause",
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string",
                        "description": "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed. Fields may appear more than once in an array of causes due to fields having multiple errors. Optional. Examples: \"name\" - the field \"name\" on the current resource \"items[0].name\" - the field \"name\" on the first array entry in \"items\" +optional"
                      },
                      "reason": {
                        "type": "string",
                        "description": "A machine-readable description of the cause of the error. If this value is empty there is no information available. +optional"
                      },
                      "message": {
                        "type": "string",
                        "description": "A human-readable description of the cause of the error. This field may be presented as-is to a reader. +optional"
                      }
                    },
                    "description": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered."
                  },
                  "description": "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes. +optional"
                },
                "retryAfterSeconds": {
                  "type": "integer",
                  "format": "int32",
                  "description": "If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action. +optional"
                }
              },
              "description": "Extended data associated with the reason. Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type. +optional"
            },
            "message": {
              "type": "string",
              "description": "A human-readable description of the status of this operation. +optional"
            },
            "metadata": {
              "id": "ListMeta",
              "type": "object",
              "properties": {
                "continue": {
                  "type": "string",
                  "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response."
                },
                "selfLink": {
                  "type": "string",
                  "description": "SelfLink is a URL representing this object. Populated by the system. Read-only. +optional"
                },
                "resourceVersion": {
                  "type": "string",
                  "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency +optional"
                }
              },
              "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds +optional"
            }
          },
          "description": "Status is a return value for calls that don't return other objects"
        }
      ]
  projects.locations.revisions.get:
    description: |-
      Get information about a revision.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/projects.locations.revisions/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.revisions.list:
    description: |-
      List revisions.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/projects.locations.revisions/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.routes.get:
    description: |-
      Get information about a route.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/projects.locations.routes/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Route",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "The kind of this resource, in this case always \"Route\"."
            },
            "spec": {
              "id": "RouteSpec",
              "type": "object",
              "properties": {
                "traffic": {
                  "type": "array",
                  "items": {
                    "id": "TrafficTarget",
                    "type": "object",
                    "properties": {
                      "tag": {
                        "type": "string",
                        "description": "Tag is optionally used to expose a dedicated url for referencing this target exclusively. +optional"
                      },
                      "url": {
                        "type": "string",
                        "description": "Output only. URL displays the URL for accessing tagged traffic targets. URL is displayed in status, and is disallowed on spec. URL must contain a scheme (e.g. http://) and a hostname, but may not contain anything else (e.g. basic auth, url path, etc.)"
                      },
                      "percent": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Percent specifies percent of the traffic to this Revision or Configuration. This defaults to zero if unspecified. Cloud Run currently requires 100 percent for a single ConfigurationName TrafficTarget entry."
                      },
                      "revisionName": {
                        "type": "string",
                        "description": "RevisionName of a specific revision to which to send this portion of traffic. This is mutually exclusive with ConfigurationName. Providing RevisionName in spec is not currently supported by Cloud Run."
                      },
                      "latestRevision": {
                        "type": "boolean",
                        "description": "LatestRevision may be optionally provided to indicate that the latest ready Revision of the Configuration should be used for this traffic target. When provided LatestRevision must be true if RevisionName is empty; it must be false when RevisionName is non-empty. +optional"
                      },
                      "configurationName": {
                        "type": "string",
                        "description": "ConfigurationName of a configuration to whose latest revision we will send this portion of traffic. When the \"status.latestReadyRevisionName\" of the referenced configuration changes, we will automatically migrate traffic from the prior \"latest ready\" revision to the new one. This field is never set in Route's status, only its spec. This is mutually exclusive with RevisionName. Cloud Run currently supports a single ConfigurationName."
                      }
                    },
                    "description": "TrafficTarget holds a single entry of the routing table for a Route."
                  },
                  "description": "Traffic specifies how to distribute traffic over a collection of Knative Revisions and Configurations. Cloud Run currently supports a single configurationName."
                }
              },
              "description": "Spec holds the desired state of the Route (from the client)."
            },
            "status": {
              "id": "RouteStatus",
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "description": "URL holds the url that will distribute traffic over the provided traffic targets. It generally has the form: https://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app"
                },
                "address": {
                  "id": "Addressable",
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string"
                    }
                  },
                  "description": "Similar to url, information on where the service is available on HTTP."
                },
                "traffic": {
                  "type": "array",
                  "items": {
                    "id": "TrafficTarget",
                    "type": "object",
                    "properties": {
                      "tag": {
                        "type": "string",
                        "description": "Tag is optionally used to expose a dedicated url for referencing this target exclusively. +optional"
                      },
                      "url": {
                        "type": "string",
                        "description": "Output only. URL displays the URL for accessing tagged traffic targets. URL is displayed in status, and is disallowed on spec. URL must contain a scheme (e.g. http://) and a hostname, but may not contain anything else (e.g. basic auth, url path, etc.)"
                      },
                      "percent": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Percent specifies percent of the traffic to this Revision or Configuration. This defaults to zero if unspecified. Cloud Run currently requires 100 percent for a single ConfigurationName TrafficTarget entry."
                      },
                      "revisionName": {
                        "type": "string",
                        "description": "RevisionName of a specific revision to which to send this portion of traffic. This is mutually exclusive with ConfigurationName. Providing RevisionName in spec is not currently supported by Cloud Run."
                      },
                      "latestRevision": {
                        "type": "boolean",
                        "description": "LatestRevision may be optionally provided to indicate that the latest ready Revision of the Configuration should be used for this traffic target. When provided LatestRevision must be true if RevisionName is empty; it must be false when RevisionName is non-empty. +optional"
                      },
                      "configurationName": {
                        "type": "string",
                        "description": "ConfigurationName of a configuration to whose latest revision we will send this portion of traffic. When the \"status.latestReadyRevisionName\" of the referenced configuration changes, we will automatically migrate traffic from the prior \"latest ready\" revision to the new one. This field is never set in Route's status, only its spec. This is mutually exclusive with RevisionName. Cloud Run currently supports a single ConfigurationName."
                      }
                    },
                    "description": "TrafficTarget holds a single entry of the routing table for a Route."
                  },
                  "description": "Traffic holds the configured traffic distribution. These entries will always contain RevisionName references. When ConfigurationName appears in the spec, this will hold the LatestReadyRevisionName that we last observed."
                },
                "conditions": {
                  "type": "array",
                  "items": {
                    "id": "GoogleCloudRunV1Condition",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "type is used to communicate the status of the reconciliation process. See also: https://github.com/knative/serving/blob/master/docs/spec/errors.md#error-conditions-and-reporting Types common to all resources include: * \"Ready\": True when the Resource is ready."
                      },
                      "reason": {
                        "type": "string",
                        "description": "Optional. One-word CamelCase reason for the condition's last transition."
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the condition, one of True, False, Unknown."
                      },
                      "message": {
                        "type": "string",
                        "description": "Optional. Human readable message indicating details about the current status."
                      },
                      "severity": {
                        "type": "string",
                        "description": "Optional. How to interpret failures of this condition, one of Error, Warning, Info"
                      },
                      "lastTransitionTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "Optional. Last time the condition transitioned from one status to another."
                      }
                    },
                    "description": "Condition defines a generic condition for a Resource"
                  },
                  "description": "Conditions communicates information about ongoing/complete reconciliation processes that bring the \"spec\" inline with the observed state of the world."
                },
                "observedGeneration": {
                  "type": "integer",
                  "format": "int32",
                  "description": "ObservedGeneration is the 'Generation' of the Route that was last processed by the controller. Clients polling for completed reconciliation should poll until observedGeneration = metadata.generation and the Ready condition's status is True or False. Note that providing a trafficTarget that only has a configurationName will result in a Route that does not increment either its metadata.generation or its observedGeneration, as new \"latest ready\" revisions from the Configuration are processed without an update to the Route's spec."
                }
              },
              "description": "Status communicates the observed state of the Route (from the controller)."
            },
            "metadata": {
              "id": "ObjectMeta",
              "type": "object",
              "properties": {
                "uid": {
                  "type": "string",
                  "description": "(Optional) UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations. Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                },
                "name": {
                  "type": "string",
                  "description": "Name must be unique within a namespace, within a Cloud Run region. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names +optional"
                },
                "labels": {
                  "type": "object",
                  "description": "(Optional) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and routes. More info: http://kubernetes.io/docs/user-guide/labels",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "selfLink": {
                  "type": "string",
                  "description": "(Optional) SelfLink is a URL representing this object. Populated by the system. Read-only. string selfLink = 4;"
                },
                "namespace": {
                  "type": "string",
                  "description": "Namespace defines the space within each name must be unique, within a Cloud Run region. In Cloud Run the namespace must be equal to either the project ID or project number."
                },
                "finalizers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. +patchStrategy=merge"
                },
                "generation": {
                  "type": "integer",
                  "format": "int32",
                  "description": "(Optional) A sequence number representing a specific generation of the desired state. Populated by the system. Read-only."
                },
                "annotations": {
                  "type": "object",
                  "description": "(Optional) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "clusterName": {
                  "type": "string",
                  "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request."
                },
                "generateName": {
                  "type": "string",
                  "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server. If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header). Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency string generateName = 2;"
                },
                "ownerReferences": {
                  "type": "array",
                  "items": {
                    "id": "OwnerReference",
                    "type": "object",
                    "properties": {
                      "uid": {
                        "type": "string",
                        "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                      },
                      "kind": {
                        "type": "string",
                        "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                      },
                      "apiVersion": {
                        "type": "string",
                        "description": "API version of the referent."
                      },
                      "controller": {
                        "type": "boolean",
                        "description": "If true, this reference points to the managing controller. +optional"
                      },
                      "blockOwnerDeletion": {
                        "type": "boolean",
                        "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned. +optional"
                      }
                    },
                    "description": "OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field."
                  },
                  "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported List of objects that own this object. If ALL objects in the list have been deleted, this object will be garbage collected."
                },
                "resourceVersion": {
                  "type": "string",
                  "description": "Optional. An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server or omit the value to disable conflict-detection. They may only be valid for a particular resource or set of resources. Populated by the system. Read-only. Value must be treated as opaque by clients or omitted. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
                },
                "creationTimestamp": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "(Optional) CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
                },
                "deletionTimestamp": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested. Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
                },
                "deletionGracePeriodSeconds": {
                  "type": "integer",
                  "format": "int32",
                  "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only."
                }
              },
              "description": "Metadata associated with this Route, including name, namespace, labels, and annotations."
            },
            "apiVersion": {
              "type": "string",
              "description": "The API version for this call such as \"serving.knative.dev/v1\"."
            }
          },
          "description": "Route is responsible for configuring ingress over a collection of Revisions. Some of the Revisions a Route distributes traffic over may be specified by referencing the Configuration responsible for creating them; in these cases the Route is additionally responsible for monitoring the Configuration for \"latest ready\" revision changes, and smoothly rolling out latest revisions. See also: https://github.com/knative/serving/blob/master/docs/spec/overview.md#route Cloud Run currently supports referencing a single Configuration to automatically deploy the \"latest ready\" Revision from that Configuration."
        }
      ]
  projects.locations.routes.list:
    description: |-
      List routes.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/projects.locations.routes/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListRoutesResponse",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "The kind of this resource, in this case always \"RouteList\"."
            },
            "items": {
              "type": "array",
              "items": {
                "id": "Route",
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "description": "The kind of this resource, in this case always \"Route\"."
                  },
                  "spec": {
                    "id": "RouteSpec",
                    "type": "object",
                    "properties": {
                      "traffic": {
                        "type": "array",
                        "items": {
                          "id": "TrafficTarget",
                          "type": "object",
                          "properties": {
                            "tag": {
                              "type": "string",
                              "description": "Tag is optionally used to expose a dedicated url for referencing this target exclusively. +optional"
                            },
                            "url": {
                              "type": "string",
                              "description": "Output only. URL displays the URL for accessing tagged traffic targets. URL is displayed in status, and is disallowed on spec. URL must contain a scheme (e.g. http://) and a hostname, but may not contain anything else (e.g. basic auth, url path, etc.)"
                            },
                            "percent": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Percent specifies percent of the traffic to this Revision or Configuration. This defaults to zero if unspecified. Cloud Run currently requires 100 percent for a single ConfigurationName TrafficTarget entry."
                            },
                            "revisionName": {
                              "type": "string",
                              "description": "RevisionName of a specific revision to which to send this portion of traffic. This is mutually exclusive with ConfigurationName. Providing RevisionName in spec is not currently supported by Cloud Run."
                            },
                            "latestRevision": {
                              "type": "boolean",
                              "description": "LatestRevision may be optionally provided to indicate that the latest ready Revision of the Configuration should be used for this traffic target. When provided LatestRevision must be true if RevisionName is empty; it must be false when RevisionName is non-empty. +optional"
                            },
                            "configurationName": {
                              "type": "string",
                              "description": "ConfigurationName of a configuration to whose latest revision we will send this portion of traffic. When the \"status.latestReadyRevisionName\" of the referenced configuration changes, we will automatically migrate traffic from the prior \"latest ready\" revision to the new one. This field is never set in Route's status, only its spec. This is mutually exclusive with RevisionName. Cloud Run currently supports a single ConfigurationName."
                            }
                          },
                          "description": "TrafficTarget holds a single entry of the routing table for a Route."
                        },
                        "description": "Traffic specifies how to distribute traffic over a collection of Knative Revisions and Configurations. Cloud Run currently supports a single configurationName."
                      }
                    },
                    "description": "Spec holds the desired state of the Route (from the client)."
                  },
                  "status": {
                    "id": "RouteStatus",
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string",
                        "description": "URL holds the url that will distribute traffic over the provided traffic targets. It generally has the form: https://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app"
                      },
                      "address": {
                        "id": "Addressable",
                        "type": "object",
                        "properties": {
                          "url": {
                            "type": "string"
                          }
                        },
                        "description": "Similar to url, information on where the service is available on HTTP."
                      },
                      "traffic": {
                        "type": "array",
                        "items": {
                          "id": "TrafficTarget",
                          "type": "object",
                          "properties": {
                            "tag": {
                              "type": "string",
                              "description": "Tag is optionally used to expose a dedicated url for referencing this target exclusively. +optional"
                            },
                            "url": {
                              "type": "string",
                              "description": "Output only. URL displays the URL for accessing tagged traffic targets. URL is displayed in status, and is disallowed on spec. URL must contain a scheme (e.g. http://) and a hostname, but may not contain anything else (e.g. basic auth, url path, etc.)"
                            },
                            "percent": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Percent specifies percent of the traffic to this Revision or Configuration. This defaults to zero if unspecified. Cloud Run currently requires 100 percent for a single ConfigurationName TrafficTarget entry."
                            },
                            "revisionName": {
                              "type": "string",
                              "description": "RevisionName of a specific revision to which to send this portion of traffic. This is mutually exclusive with ConfigurationName. Providing RevisionName in spec is not currently supported by Cloud Run."
                            },
                            "latestRevision": {
                              "type": "boolean",
                              "description": "LatestRevision may be optionally provided to indicate that the latest ready Revision of the Configuration should be used for this traffic target. When provided LatestRevision must be true if RevisionName is empty; it must be false when RevisionName is non-empty. +optional"
                            },
                            "configurationName": {
                              "type": "string",
                              "description": "ConfigurationName of a configuration to whose latest revision we will send this portion of traffic. When the \"status.latestReadyRevisionName\" of the referenced configuration changes, we will automatically migrate traffic from the prior \"latest ready\" revision to the new one. This field is never set in Route's status, only its spec. This is mutually exclusive with RevisionName. Cloud Run currently supports a single ConfigurationName."
                            }
                          },
                          "description": "TrafficTarget holds a single entry of the routing table for a Route."
                        },
                        "description": "Traffic holds the configured traffic distribution. These entries will always contain RevisionName references. When ConfigurationName appears in the spec, this will hold the LatestReadyRevisionName that we last observed."
                      },
                      "conditions": {
                        "type": "array",
                        "items": {
                          "id": "GoogleCloudRunV1Condition",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "type is used to communicate the status of the reconciliation process. See also: https://github.com/knative/serving/blob/master/docs/spec/errors.md#error-conditions-and-reporting Types common to all resources include: * \"Ready\": True when the Resource is ready."
                            },
                            "reason": {
                              "type": "string",
                              "description": "Optional. One-word CamelCase reason for the condition's last transition."
                            },
                            "status": {
                              "type": "string",
                              "description": "Status of the condition, one of True, False, Unknown."
                            },
                            "message": {
                              "type": "string",
                              "description": "Optional. Human readable message indicating details about the current status."
                            },
                            "severity": {
                              "type": "string",
                              "description": "Optional. How to interpret failures of this condition, one of Error, Warning, Info"
                            },
                            "lastTransitionTime": {
                              "type": "string",
                              "format": "google-datetime",
                              "description": "Optional. Last time the condition transitioned from one status to another."
                            }
                          },
                          "description": "Condition defines a generic condition for a Resource"
                        },
                        "description": "Conditions communicates information about ongoing/complete reconciliation processes that bring the \"spec\" inline with the observed state of the world."
                      },
                      "observedGeneration": {
                        "type": "integer",
                        "format": "int32",
                        "description": "ObservedGeneration is the 'Generation' of the Route that was last processed by the controller. Clients polling for completed reconciliation should poll until observedGeneration = metadata.generation and the Ready condition's status is True or False. Note that providing a trafficTarget that only has a configurationName will result in a Route that does not increment either its metadata.generation or its observedGeneration, as new \"latest ready\" revisions from the Configuration are processed without an update to the Route's spec."
                      }
                    },
                    "description": "Status communicates the observed state of the Route (from the controller)."
                  },
                  "metadata": {
                    "id": "ObjectMeta",
                    "type": "object",
                    "properties": {
                      "uid": {
                        "type": "string",
                        "description": "(Optional) UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations. Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name must be unique within a namespace, within a Cloud Run region. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names +optional"
                      },
                      "labels": {
                        "type": "object",
                        "description": "(Optional) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and routes. More info: http://kubernetes.io/docs/user-guide/labels",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "selfLink": {
                        "type": "string",
                        "description": "(Optional) SelfLink is a URL representing this object. Populated by the system. Read-only. string selfLink = 4;"
                      },
                      "namespace": {
                        "type": "string",
                        "description": "Namespace defines the space within each name must be unique, within a Cloud Run region. In Cloud Run the namespace must be equal to either the project ID or project number."
                      },
                      "finalizers": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. +patchStrategy=merge"
                      },
                      "generation": {
                        "type": "integer",
                        "format": "int32",
                        "description": "(Optional) A sequence number representing a specific generation of the desired state. Populated by the system. Read-only."
                      },
                      "annotations": {
                        "type": "object",
                        "description": "(Optional) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "clusterName": {
                        "type": "string",
                        "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request."
                      },
                      "generateName": {
                        "type": "string",
                        "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server. If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header). Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency string generateName = 2;"
                      },
                      "ownerReferences": {
                        "type": "array",
                        "items": {
                          "id": "OwnerReference",
                          "type": "object",
                          "properties": {
                            "uid": {
                              "type": "string",
                              "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                            },
                            "kind": {
                              "type": "string",
                              "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
                            },
                            "apiVersion": {
                              "type": "string",
                              "description": "API version of the referent."
                            },
                            "controller": {
                              "type": "boolean",
                              "description": "If true, this reference points to the managing controller. +optional"
                            },
                            "blockOwnerDeletion": {
                              "type": "boolean",
                              "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned. +optional"
                            }
                          },
                          "description": "OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field."
                        },
                        "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported List of objects that own this object. If ALL objects in the list have been deleted, this object will be garbage collected."
                      },
                      "resourceVersion": {
                        "type": "string",
                        "description": "Optional. An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server or omit the value to disable conflict-detection. They may only be valid for a particular resource or set of resources. Populated by the system. Read-only. Value must be treated as opaque by clients or omitted. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
                      },
                      "creationTimestamp": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "(Optional) CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
                      },
                      "deletionTimestamp": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested. Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
                      },
                      "deletionGracePeriodSeconds": {
                        "type": "integer",
                        "format": "int32",
                        "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only."
                      }
                    },
                    "description": "Metadata associated with this Route, including name, namespace, labels, and annotations."
                  },
                  "apiVersion": {
                    "type": "string",
                    "description": "The API version for this call such as \"serving.knative.dev/v1\"."
                  }
                },
                "description": "Route is responsible for configuring ingress over a collection of Revisions. Some of the Revisions a Route distributes traffic over may be specified by referencing the Configuration responsible for creating them; in these cases the Route is additionally responsible for monitoring the Configuration for \"latest ready\" revision changes, and smoothly rolling out latest revisions. See also: https://github.com/knative/serving/blob/master/docs/spec/overview.md#route Cloud Run currently supports referencing a single Configuration to automatically deploy the \"latest ready\" Revision from that Configuration."
              },
              "description": "List of Routes."
            },
            "metadata": {
              "id": "ListMeta",
              "type": "object",
              "properties": {
                "continue": {
                  "type": "string",
                  "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response."
                },
                "selfLink": {
                  "type": "string",
                  "description": "SelfLink is a URL representing this object. Populated by the system. Read-only. +optional"
                },
                "resourceVersion": {
                  "type": "string",
                  "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency +optional"
                }
              },
              "description": "Metadata associated with this Route list."
            },
            "apiVersion": {
              "type": "string",
              "description": "The API version for this call such as \"serving.knative.dev/v1\"."
            },
            "unreachable": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Locations that could not be reached."
            }
          },
          "description": "ListRoutesResponse is a list of Route resources."
        }
      ]
  projects.locations.services.create:
    description: |-
      Create a service.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/projects.locations.services/create
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.services.delete:
    description: |-
      Delete a service. This will cause the Service to stop serving traffic and will delete the child entities like Routes, Configurations and Revisions.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/projects.locations.services/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Status",
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "format": "int32",
              "description": "Suggested HTTP return code for this status, 0 if not set. +optional"
            },
            "reason": {
              "type": "string",
              "description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it. +optional"
            },
            "status": {
              "type": "string",
              "description": "Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status +optional"
            },
            "details": {
              "id": "StatusDetails",
              "type": "object",
              "properties": {
                "uid": {
                  "type": "string",
                  "description": "UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids +optional"
                },
                "kind": {
                  "type": "string",
                  "description": "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds +optional"
                },
                "name": {
                  "type": "string",
                  "description": "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described). +optional"
                },
                "group": {
                  "type": "string",
                  "description": "The group attribute of the resource associated with the status StatusReason. +optional"
                },
                "causes": {
                  "type": "array",
                  "items": {
                    "id": "StatusCause",
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string",
                        "description": "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed. Fields may appear more than once in an array of causes due to fields having multiple errors. Optional. Examples: \"name\" - the field \"name\" on the current resource \"items[0].name\" - the field \"name\" on the first array entry in \"items\" +optional"
                      },
                      "reason": {
                        "type": "string",
                        "description": "A machine-readable description of the cause of the error. If this value is empty there is no information available. +optional"
                      },
                      "message": {
                        "type": "string",
                        "description": "A human-readable description of the cause of the error. This field may be presented as-is to a reader. +optional"
                      }
                    },
                    "description": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered."
                  },
                  "description": "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes. +optional"
                },
                "retryAfterSeconds": {
                  "type": "integer",
                  "format": "int32",
                  "description": "If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action. +optional"
                }
              },
              "description": "Extended data associated with the reason. Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type. +optional"
            },
            "message": {
              "type": "string",
              "description": "A human-readable description of the status of this operation. +optional"
            },
            "metadata": {
              "id": "ListMeta",
              "type": "object",
              "properties": {
                "continue": {
                  "type": "string",
                  "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response."
                },
                "selfLink": {
                  "type": "string",
                  "description": "SelfLink is a URL representing this object. Populated by the system. Read-only. +optional"
                },
                "resourceVersion": {
                  "type": "string",
                  "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency +optional"
                }
              },
              "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds +optional"
            }
          },
          "description": "Status is a return value for calls that don't return other objects"
        }
      ]
  projects.locations.services.get:
    description: |-
      Get information about a service.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/projects.locations.services/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.services.getIamPolicy:
    description: |-
      Get the IAM Access Control policy currently in effect for the given Cloud Run service. This result does not include any inherited policies.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/projects.locations.services/getIamPolicy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            },
            "auditConfigs": {
              "type": "array",
              "items": {
                "id": "AuditConfig",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                  },
                  "auditLogConfigs": {
                    "type": "array",
                    "items": {
                      "id": "AuditLogConfig",
                      "type": "object",
                      "properties": {
                        "logType": {
                          "enum": [
                            "LOG_TYPE_UNSPECIFIED",
                            "ADMIN_READ",
                            "DATA_WRITE",
                            "DATA_READ"
                          ],
                          "type": "string",
                          "description": "The log type that this config enables.",
                          "enumDescriptions": [
                            "Default case. Should never be this.",
                            "Admin reads. Example: CloudIAM getIamPolicy",
                            "Data writes. Example: CloudSQL Users create",
                            "Data reads. Example: CloudSQL Users list"
                          ]
                        },
                        "exemptedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                        }
                      },
                      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                    },
                    "description": "The configuration for logging of each type of permission."
                  }
                },
                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
              },
              "description": "Specifies cloud audit logging configuration for this policy."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  projects.locations.services.list:
    description: |-
      List services.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/projects.locations.services/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.services.replaceService:
    description: |-
      Replace a service. Only the spec and metadata labels and annotations are modifiable. After the Update request, Cloud Run will work to make the 'status' match the requested 'spec'. May provide metadata.resourceVersion to enforce update from last read for optimistic concurrency control.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/projects.locations.services/replaceService
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.services.setIamPolicy:
    description: |-
      Sets the IAM Access control policy for the specified Service. Overwrites any existing policy.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/projects.locations.services/setIamPolicy
    example:
      inputs: [
        {
          "id": "SetIamPolicyRequest",
          "type": "object",
          "properties": {
            "policy": {
              "id": "Policy",
              "type": "object",
              "properties": {
                "etag": {
                  "type": "string",
                  "format": "byte",
                  "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
                },
                "version": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                },
                "bindings": {
                  "type": "array",
                  "items": {
                    "id": "Binding",
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                      },
                      "members": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                      },
                      "condition": {
                        "id": "Expr",
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                          },
                          "location": {
                            "type": "string",
                            "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                          },
                          "expression": {
                            "type": "string",
                            "description": "Textual representation of an expression in Common Expression Language syntax."
                          },
                          "description": {
                            "type": "string",
                            "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                          }
                        },
                        "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                      }
                    },
                    "description": "Associates `members` with a `role`."
                  },
                  "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
                },
                "auditConfigs": {
                  "type": "array",
                  "items": {
                    "id": "AuditConfig",
                    "type": "object",
                    "properties": {
                      "service": {
                        "type": "string",
                        "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                      },
                      "auditLogConfigs": {
                        "type": "array",
                        "items": {
                          "id": "AuditLogConfig",
                          "type": "object",
                          "properties": {
                            "logType": {
                              "enum": [
                                "LOG_TYPE_UNSPECIFIED",
                                "ADMIN_READ",
                                "DATA_WRITE",
                                "DATA_READ"
                              ],
                              "type": "string",
                              "description": "The log type that this config enables.",
                              "enumDescriptions": [
                                "Default case. Should never be this.",
                                "Admin reads. Example: CloudIAM getIamPolicy",
                                "Data writes. Example: CloudSQL Users create",
                                "Data reads. Example: CloudSQL Users list"
                              ]
                            },
                            "exemptedMembers": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                            }
                          },
                          "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                        },
                        "description": "The configuration for logging of each type of permission."
                      }
                    },
                    "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
                  },
                  "description": "Specifies cloud audit logging configuration for this policy."
                }
              },
              "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
            },
            "updateMask": {
              "type": "string",
              "format": "google-fieldmask",
              "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`"
            }
          },
          "description": "Request message for `SetIamPolicy` method."
        }
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            },
            "auditConfigs": {
              "type": "array",
              "items": {
                "id": "AuditConfig",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                  },
                  "auditLogConfigs": {
                    "type": "array",
                    "items": {
                      "id": "AuditLogConfig",
                      "type": "object",
                      "properties": {
                        "logType": {
                          "enum": [
                            "LOG_TYPE_UNSPECIFIED",
                            "ADMIN_READ",
                            "DATA_WRITE",
                            "DATA_READ"
                          ],
                          "type": "string",
                          "description": "The log type that this config enables.",
                          "enumDescriptions": [
                            "Default case. Should never be this.",
                            "Admin reads. Example: CloudIAM getIamPolicy",
                            "Data writes. Example: CloudSQL Users create",
                            "Data reads. Example: CloudSQL Users list"
                          ]
                        },
                        "exemptedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                        }
                      },
                      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                    },
                    "description": "The configuration for logging of each type of permission."
                  }
                },
                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
              },
              "description": "Specifies cloud audit logging configuration for this policy."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  projects.locations.services.testIamPermissions:
    description: |-
      Returns permissions that a caller has on the specified Project. There are no permissions required for making this API call.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/run/docs/reference/rest/v1/projects.locations.services/testIamPermissions
    example:
      inputs: [
        {
          "id": "TestIamPermissionsRequest",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
            }
          },
          "description": "Request message for `TestIamPermissions` method."
        }
      ]
      outputs: [
        {
          "id": "TestIamPermissionsResponse",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
            }
          },
          "description": "Response message for `TestIamPermissions` method."
        }
      ]