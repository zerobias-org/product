Product:
  name: GCP Storage Transfer
  versions: [1.0.0]
  package: google.gcp.storagetransfer
  description: |-
    Storage Transfer
  link: https://cloud.google.com/storage-transfer
  contentType: json
Operations:
  googleServiceAccounts.get:
    description: |-
      Returns the Google service account that is used by Storage Transfer Service to access buckets in the project where transfers run or in other projects. Each Google service account is associated with one Google Cloud Platform Console project. Users should add this service account to the Google Cloud Storage bucket ACLs to grant access to Storage Transfer Service. This service account is created and owned by Storage Transfer Service and can only be used by Storage Transfer Service.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage-transfer/docs/reference/rest/v1/googleServiceAccounts/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleServiceAccount",
          "type": "object",
          "properties": {
            "accountEmail": {
              "type": "string",
              "description": "Email address of the service account."
            }
          },
          "description": "Google service account"
        }
      ]
  transferJobs.create:
    description: |-
      Creates a transfer job that runs periodically.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage-transfer/docs/reference/rest/v1/transferJobs/create
    example:
      inputs: [
        {
          "id": "TransferJob",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "A unique name (within the transfer project) assigned when the job is created. If this field is empty in a CreateTransferJobRequest, Storage Transfer Service will assign a unique name. Otherwise, the specified name is used as the unique name for this job. If the specified name is in use by a job, the creation request fails with an ALREADY_EXISTS error. This name must start with `\"transferJobs/\"` prefix and end with a letter or a number, and should be no more than 128 characters. This name must not start with 'transferJobs/OPI'. 'transferJobs/OPI' is a reserved prefix. Example: `\"transferJobs/^(?!OPI)[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` Invalid job names will fail with an INVALID_ARGUMENT error."
            },
            "status": {
              "enum": [
                "STATUS_UNSPECIFIED",
                "ENABLED",
                "DISABLED",
                "DELETED"
              ],
              "type": "string",
              "description": "Status of the job. This value MUST be specified for `CreateTransferJobRequests`. **Note:** The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.",
              "enumDescriptions": [
                "Zero is an illegal value.",
                "New transfers will be performed based on the schedule.",
                "New transfers will not be scheduled.",
                "This is a soft delete state. After a transfer job is set to this state, the job and all the transfer executions are subject to garbage collection. Transfer jobs become eligible for garbage collection 30 days after their status is set to `DELETED`."
              ]
            },
            "schedule": {
              "id": "Schedule",
              "type": "object",
              "properties": {
                "endTimeOfDay": {
                  "id": "TimeOfDay",
                  "type": "object",
                  "properties": {
                    "hours": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time."
                    },
                    "nanos": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999."
                    },
                    "minutes": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Minutes of hour of day. Must be from 0 to 59."
                    },
                    "seconds": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds."
                    }
                  },
                  "description": "The time in UTC that no further transfer operations are scheduled. Combined with schedule_end_date, `end_time_of_day` specifies the end date and time for starting new transfer operations. This field must be greater than or equal to the timestamp corresponding to the combintation of schedule_start_date and start_time_of_day, and is subject to the following: * If `end_time_of_day` is not set and `schedule_end_date` is set, then a default value of `23:59:59` is used for `end_time_of_day`. * If `end_time_of_day` is set and `schedule_end_date` is not set, then INVALID_ARGUMENT is returned."
                },
                "repeatInterval": {
                  "type": "string",
                  "format": "google-duration",
                  "description": "Interval between the start of each scheduled TransferOperation. If unspecified, the default value is 24 hours. This value may not be less than 1 hour."
                },
                "startTimeOfDay": {
                  "id": "TimeOfDay",
                  "type": "object",
                  "properties": {
                    "hours": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time."
                    },
                    "nanos": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999."
                    },
                    "minutes": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Minutes of hour of day. Must be from 0 to 59."
                    },
                    "seconds": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds."
                    }
                  },
                  "description": "The time in UTC that a transfer job is scheduled to run. Transfers may start later than this time. If `start_time_of_day` is not specified: * One-time transfers run immediately. * Recurring transfers run immediately, and each day at midnight UTC, through schedule_end_date. If `start_time_of_day` is specified: * One-time transfers run at the specified time. * Recurring transfers run at the specified time each day, through `schedule_end_date`."
                },
                "scheduleEndDate": {
                  "id": "Date",
                  "type": "object",
                  "properties": {
                    "day": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
                    },
                    "year": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
                    },
                    "month": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
                    }
                  },
                  "description": "The last day a transfer runs. Date boundaries are determined relative to UTC time. A job will run once per 24 hours within the following guidelines: * If `schedule_end_date` and schedule_start_date are the same and in the future relative to UTC, the transfer is executed only one time. * If `schedule_end_date` is later than `schedule_start_date` and `schedule_end_date` is in the future relative to UTC, the job will run each day at start_time_of_day through `schedule_end_date`."
                },
                "scheduleStartDate": {
                  "id": "Date",
                  "type": "object",
                  "properties": {
                    "day": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
                    },
                    "year": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
                    },
                    "month": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
                    }
                  },
                  "description": "Required. The start date of a transfer. Date boundaries are determined relative to UTC time. If `schedule_start_date` and start_time_of_day are in the past relative to the job's creation time, the transfer starts the day after you schedule the transfer request. **Note:** When starting jobs at or near midnight UTC it is possible that a job will start later than expected. For example, if you send an outbound request on June 1 one millisecond prior to midnight UTC and the Storage Transfer Service server receives the request on June 2, then it will create a TransferJob with `schedule_start_date` set to June 2 and a `start_time_of_day` set to midnight UTC. The first scheduled TransferOperation will take place on June 3 at midnight UTC."
                }
              },
              "description": "Specifies schedule for the transfer job. This is an optional field. When the field is not set, the job will never execute a transfer, unless you invoke RunTransferJob or update the job to have a non-empty schedule."
            },
            "projectId": {
              "type": "string",
              "description": "The ID of the Google Cloud Platform Project that owns the job."
            },
            "description": {
              "type": "string",
              "description": "A description provided by the user for the job. Its max length is 1024 bytes when Unicode-encoded."
            },
            "creationTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The time that the transfer job was created."
            },
            "deletionTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The time that the transfer job was deleted."
            },
            "transferSpec": {
              "id": "TransferSpec",
              "type": "object",
              "properties": {
                "gcsDataSink": {
                  "id": "GcsData",
                  "type": "object",
                  "properties": {
                    "path": {
                      "type": "string",
                      "description": "Root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'. (must meet Object Name Requirements](https://cloud.google.com/storage/docs/naming#objectnames))."
                    },
                    "bucketName": {
                      "type": "string",
                      "description": "Required. Cloud Storage bucket name (see [Bucket Name Requirements](https://cloud.google.com/storage/docs/naming#requirements))."
                    }
                  },
                  "description": "A Cloud Storage data sink."
                },
                "gcsDataSource": {
                  "id": "GcsData",
                  "type": "object",
                  "properties": {
                    "path": {
                      "type": "string",
                      "description": "Root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'. (must meet Object Name Requirements](https://cloud.google.com/storage/docs/naming#objectnames))."
                    },
                    "bucketName": {
                      "type": "string",
                      "description": "Required. Cloud Storage bucket name (see [Bucket Name Requirements](https://cloud.google.com/storage/docs/naming#requirements))."
                    }
                  },
                  "description": "A Cloud Storage data source."
                },
                "httpDataSource": {
                  "id": "HttpData",
                  "type": "object",
                  "properties": {
                    "listUrl": {
                      "type": "string",
                      "description": "Required. The URL that points to the file that stores the object list entries. This file must allow public access. Currently, only URLs with HTTP and HTTPS schemes are supported."
                    }
                  },
                  "description": "An HTTP URL data source."
                },
                "awsS3DataSource": {
                  "id": "AwsS3Data",
                  "type": "object",
                  "properties": {
                    "path": {
                      "type": "string",
                      "description": "Root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'."
                    },
                    "bucketName": {
                      "type": "string",
                      "description": "Required. S3 Bucket name (see [Creating a bucket](https://docs.aws.amazon.com/AmazonS3/latest/dev/create-bucket-get-location-example.html))."
                    },
                    "awsAccessKey": {
                      "id": "AwsAccessKey",
                      "type": "object",
                      "properties": {
                        "accessKeyId": {
                          "type": "string",
                          "description": "Required. AWS access key ID."
                        },
                        "secretAccessKey": {
                          "type": "string",
                          "description": "Required. AWS secret access key. This field is not returned in RPC responses."
                        }
                      },
                      "description": "Required. Input only. AWS access key used to sign the API requests to the AWS S3 bucket. Permissions on the bucket must be granted to the access ID of the AWS access key. For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials)."
                    }
                  },
                  "description": "An AWS S3 data source."
                },
                "transferOptions": {
                  "id": "TransferOptions",
                  "type": "object",
                  "properties": {
                    "deleteObjectsUniqueInSink": {
                      "type": "boolean",
                      "description": "Whether objects that exist only in the sink should be deleted. **Note:** This option and delete_objects_from_source_after_transfer are mutually exclusive."
                    },
                    "deleteObjectsFromSourceAfterTransfer": {
                      "type": "boolean",
                      "description": "Whether objects should be deleted from the source after they are transferred to the sink. **Note:** This option and delete_objects_unique_in_sink are mutually exclusive."
                    },
                    "overwriteObjectsAlreadyExistingInSink": {
                      "type": "boolean",
                      "description": "When to overwrite objects that already exist in the sink. The default is that only objects that are different from the source are ovewritten. If true, all objects in the sink whose name matches an object in the source will be overwritten with the source object."
                    }
                  },
                  "description": "If the option delete_objects_unique_in_sink is `true` and time-based object conditions such as 'last modification time' are specified, the request fails with an INVALID_ARGUMENT error."
                },
                "objectConditions": {
                  "id": "ObjectConditions",
                  "type": "object",
                  "properties": {
                    "excludePrefixes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "If you specify `exclude_prefixes`, Storage Transfer Service uses the items in the `exclude_prefixes` array to determine which objects to exclude from a transfer. Objects must not start with one of the matching `exclude_prefixes` for inclusion in a transfer. The following are requirements of `exclude_prefixes`: * Each exclude-prefix can contain any sequence of Unicode characters, to a max length of 1024 bytes when UTF8-encoded, and must not contain Carriage Return or Line Feed characters. Wildcard matching and regular expression matching are not supported. * Each exclude-prefix must omit the leading slash. For example, to exclude the object `s3://my-aws-bucket/logs/y=2015/requests.gz`, specify the exclude-prefix as `logs/y=2015/requests.gz`. * None of the exclude-prefix values can be empty, if specified. * Each exclude-prefix must exclude a distinct portion of the object namespace. No exclude-prefix may be a prefix of another exclude-prefix. * If include_prefixes is specified, then each exclude-prefix must start with the value of a path explicitly included by `include_prefixes`. The max size of `exclude_prefixes` is 1000. For more information, see [Filtering objects from transfers](/storage-transfer/docs/filtering-objects-from-transfers)."
                    },
                    "includePrefixes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "If you specify `include_prefixes`, Storage Transfer Service uses the items in the `include_prefixes` array to determine which objects to include in a transfer. Objects must start with one of the matching `include_prefixes` for inclusion in the transfer. If exclude_prefixes is specified, objects must not start with any of the `exclude_prefixes` specified for inclusion in the transfer. The following are requirements of `include_prefixes`: * Each include-prefix can contain any sequence of Unicode characters, to a max length of 1024 bytes when UTF8-encoded, and must not contain Carriage Return or Line Feed characters. Wildcard matching and regular expression matching are not supported. * Each include-prefix must omit the leading slash. For example, to include the object `s3://my-aws-bucket/logs/y=2015/requests.gz`, specify the include-prefix as `logs/y=2015/requests.gz`. * None of the include-prefix values can be empty, if specified. * Each include-prefix must include a distinct portion of the object namespace. No include-prefix may be a prefix of another include-prefix. The max size of `include_prefixes` is 1000. For more information, see [Filtering objects from transfers](/storage-transfer/docs/filtering-objects-from-transfers)."
                    },
                    "lastModifiedSince": {
                      "type": "string",
                      "format": "google-datetime",
                      "description": "If specified, only objects with a \"last modification time\" on or after this timestamp and objects that don't have a \"last modification time\" are transferred. The `last_modified_since` and `last_modified_before` fields can be used together for chunked data processing. For example, consider a script that processes each day's worth of data at a time. For that you'd set each of the fields as follows: * `last_modified_since` to the start of the day * `last_modified_before` to the end of the day"
                    },
                    "lastModifiedBefore": {
                      "type": "string",
                      "format": "google-datetime",
                      "description": "If specified, only objects with a \"last modification time\" before this timestamp and objects that don't have a \"last modification time\" will be transferred."
                    },
                    "maxTimeElapsedSinceLastModification": {
                      "type": "string",
                      "format": "google-duration",
                      "description": "If specified, only objects with a \"last modification time\" on or after `NOW` - `max_time_elapsed_since_last_modification` and objects that don't have a \"last modification time\" are transferred. For each TransferOperation started by this TransferJob, `NOW` refers to the start_time of the `TransferOperation`."
                    },
                    "minTimeElapsedSinceLastModification": {
                      "type": "string",
                      "format": "google-duration",
                      "description": "If specified, only objects with a \"last modification time\" before `NOW` - `min_time_elapsed_since_last_modification` and objects that don't have a \"last modification time\" are transferred. For each TransferOperation started by this TransferJob, `NOW` refers to the start_time of the `TransferOperation`."
                    }
                  },
                  "description": "Only objects that satisfy these object conditions are included in the set of data source and data sink objects. Object conditions based on objects' \"last modification time\" do not exclude objects in a data sink."
                },
                "azureBlobStorageDataSource": {
                  "id": "AzureBlobStorageData",
                  "type": "object",
                  "properties": {
                    "path": {
                      "type": "string",
                      "description": "Root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'."
                    },
                    "container": {
                      "type": "string",
                      "description": "Required. The container to transfer from the Azure Storage account."
                    },
                    "storageAccount": {
                      "type": "string",
                      "description": "Required. The name of the Azure Storage account."
                    },
                    "azureCredentials": {
                      "id": "AzureCredentials",
                      "type": "object",
                      "properties": {
                        "sasToken": {
                          "type": "string",
                          "description": "Required. Azure shared access signature. (see [Grant limited access to Azure Storage resources using shared access signatures (SAS)](https://docs.microsoft.com/en-us/azure/storage/common/storage-sas-overview))."
                        }
                      },
                      "description": "Required. Input only. Credentials used to authenticate API requests to Azure. For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials)."
                    }
                  },
                  "description": "An Azure Blob Storage data source."
                }
              },
              "description": "Transfer specification."
            },
            "notificationConfig": {
              "id": "NotificationConfig",
              "type": "object",
              "properties": {
                "eventTypes": {
                  "type": "array",
                  "items": {
                    "enum": [
                      "EVENT_TYPE_UNSPECIFIED",
                      "TRANSFER_OPERATION_SUCCESS",
                      "TRANSFER_OPERATION_FAILED",
                      "TRANSFER_OPERATION_ABORTED"
                    ],
                    "type": "string",
                    "enumDescriptions": [
                      "Illegal value, to avoid allowing a default.",
                      "`TransferOperation` completed with status SUCCESS.",
                      "`TransferOperation` completed with status FAILED.",
                      "`TransferOperation` completed with status ABORTED."
                    ]
                  },
                  "description": "Event types for which a notification is desired. If empty, send notifications for all event types."
                },
                "pubsubTopic": {
                  "type": "string",
                  "description": "Required. The `Topic.name` of the Cloud Pub/Sub topic to which to publish notifications. Must be of the format: `projects/{project}/topics/{topic}`. Not matching this format will result in an INVALID_ARGUMENT error."
                },
                "payloadFormat": {
                  "enum": [
                    "PAYLOAD_FORMAT_UNSPECIFIED",
                    "NONE",
                    "JSON"
                  ],
                  "type": "string",
                  "description": "Required. The desired format of the notification message payloads.",
                  "enumDescriptions": [
                    "Illegal value, to avoid allowing a default.",
                    "No payload is included with the notification.",
                    "`TransferOperation` is [formatted as a JSON response](https://developers.google.com/protocol-buffers/docs/proto3#json), in application/json."
                  ]
                }
              },
              "description": "Notification configuration."
            },
            "latestOperationName": {
              "type": "string",
              "description": "The name of the most recently started TransferOperation of this JobConfig. Present if a TransferOperation has been created for this JobConfig."
            },
            "lastModificationTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The time that the transfer job was last modified."
            }
          },
          "description": "This resource represents the configuration of a transfer job that runs periodically."
        }
      ]
      outputs: [
        {}
      ]
  transferJobs.get:
    description: |-
      Gets a transfer job.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage-transfer/docs/reference/rest/v1/transferJobs/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  transferJobs.list:
    description: |-
      Lists transfer jobs.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage-transfer/docs/reference/rest/v1/transferJobs/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListTransferJobsResponse",
          "type": "object",
          "properties": {
            "transferJobs": {
              "type": "array",
              "items": {
                "id": "TransferJob",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "A unique name (within the transfer project) assigned when the job is created. If this field is empty in a CreateTransferJobRequest, Storage Transfer Service will assign a unique name. Otherwise, the specified name is used as the unique name for this job. If the specified name is in use by a job, the creation request fails with an ALREADY_EXISTS error. This name must start with `\"transferJobs/\"` prefix and end with a letter or a number, and should be no more than 128 characters. This name must not start with 'transferJobs/OPI'. 'transferJobs/OPI' is a reserved prefix. Example: `\"transferJobs/^(?!OPI)[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` Invalid job names will fail with an INVALID_ARGUMENT error."
                  },
                  "status": {
                    "enum": [
                      "STATUS_UNSPECIFIED",
                      "ENABLED",
                      "DISABLED",
                      "DELETED"
                    ],
                    "type": "string",
                    "description": "Status of the job. This value MUST be specified for `CreateTransferJobRequests`. **Note:** The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.",
                    "enumDescriptions": [
                      "Zero is an illegal value.",
                      "New transfers will be performed based on the schedule.",
                      "New transfers will not be scheduled.",
                      "This is a soft delete state. After a transfer job is set to this state, the job and all the transfer executions are subject to garbage collection. Transfer jobs become eligible for garbage collection 30 days after their status is set to `DELETED`."
                    ]
                  },
                  "schedule": {
                    "id": "Schedule",
                    "type": "object",
                    "properties": {
                      "endTimeOfDay": {
                        "id": "TimeOfDay",
                        "type": "object",
                        "properties": {
                          "hours": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time."
                          },
                          "nanos": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999."
                          },
                          "minutes": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Minutes of hour of day. Must be from 0 to 59."
                          },
                          "seconds": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds."
                          }
                        },
                        "description": "The time in UTC that no further transfer operations are scheduled. Combined with schedule_end_date, `end_time_of_day` specifies the end date and time for starting new transfer operations. This field must be greater than or equal to the timestamp corresponding to the combintation of schedule_start_date and start_time_of_day, and is subject to the following: * If `end_time_of_day` is not set and `schedule_end_date` is set, then a default value of `23:59:59` is used for `end_time_of_day`. * If `end_time_of_day` is set and `schedule_end_date` is not set, then INVALID_ARGUMENT is returned."
                      },
                      "repeatInterval": {
                        "type": "string",
                        "format": "google-duration",
                        "description": "Interval between the start of each scheduled TransferOperation. If unspecified, the default value is 24 hours. This value may not be less than 1 hour."
                      },
                      "startTimeOfDay": {
                        "id": "TimeOfDay",
                        "type": "object",
                        "properties": {
                          "hours": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time."
                          },
                          "nanos": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999."
                          },
                          "minutes": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Minutes of hour of day. Must be from 0 to 59."
                          },
                          "seconds": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds."
                          }
                        },
                        "description": "The time in UTC that a transfer job is scheduled to run. Transfers may start later than this time. If `start_time_of_day` is not specified: * One-time transfers run immediately. * Recurring transfers run immediately, and each day at midnight UTC, through schedule_end_date. If `start_time_of_day` is specified: * One-time transfers run at the specified time. * Recurring transfers run at the specified time each day, through `schedule_end_date`."
                      },
                      "scheduleEndDate": {
                        "id": "Date",
                        "type": "object",
                        "properties": {
                          "day": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
                          },
                          "year": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
                          },
                          "month": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
                          }
                        },
                        "description": "The last day a transfer runs. Date boundaries are determined relative to UTC time. A job will run once per 24 hours within the following guidelines: * If `schedule_end_date` and schedule_start_date are the same and in the future relative to UTC, the transfer is executed only one time. * If `schedule_end_date` is later than `schedule_start_date` and `schedule_end_date` is in the future relative to UTC, the job will run each day at start_time_of_day through `schedule_end_date`."
                      },
                      "scheduleStartDate": {
                        "id": "Date",
                        "type": "object",
                        "properties": {
                          "day": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
                          },
                          "year": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
                          },
                          "month": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
                          }
                        },
                        "description": "Required. The start date of a transfer. Date boundaries are determined relative to UTC time. If `schedule_start_date` and start_time_of_day are in the past relative to the job's creation time, the transfer starts the day after you schedule the transfer request. **Note:** When starting jobs at or near midnight UTC it is possible that a job will start later than expected. For example, if you send an outbound request on June 1 one millisecond prior to midnight UTC and the Storage Transfer Service server receives the request on June 2, then it will create a TransferJob with `schedule_start_date` set to June 2 and a `start_time_of_day` set to midnight UTC. The first scheduled TransferOperation will take place on June 3 at midnight UTC."
                      }
                    },
                    "description": "Specifies schedule for the transfer job. This is an optional field. When the field is not set, the job will never execute a transfer, unless you invoke RunTransferJob or update the job to have a non-empty schedule."
                  },
                  "projectId": {
                    "type": "string",
                    "description": "The ID of the Google Cloud Platform Project that owns the job."
                  },
                  "description": {
                    "type": "string",
                    "description": "A description provided by the user for the job. Its max length is 1024 bytes when Unicode-encoded."
                  },
                  "creationTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The time that the transfer job was created."
                  },
                  "deletionTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The time that the transfer job was deleted."
                  },
                  "transferSpec": {
                    "id": "TransferSpec",
                    "type": "object",
                    "properties": {
                      "gcsDataSink": {
                        "id": "GcsData",
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string",
                            "description": "Root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'. (must meet Object Name Requirements](https://cloud.google.com/storage/docs/naming#objectnames))."
                          },
                          "bucketName": {
                            "type": "string",
                            "description": "Required. Cloud Storage bucket name (see [Bucket Name Requirements](https://cloud.google.com/storage/docs/naming#requirements))."
                          }
                        },
                        "description": "A Cloud Storage data sink."
                      },
                      "gcsDataSource": {
                        "id": "GcsData",
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string",
                            "description": "Root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'. (must meet Object Name Requirements](https://cloud.google.com/storage/docs/naming#objectnames))."
                          },
                          "bucketName": {
                            "type": "string",
                            "description": "Required. Cloud Storage bucket name (see [Bucket Name Requirements](https://cloud.google.com/storage/docs/naming#requirements))."
                          }
                        },
                        "description": "A Cloud Storage data source."
                      },
                      "httpDataSource": {
                        "id": "HttpData",
                        "type": "object",
                        "properties": {
                          "listUrl": {
                            "type": "string",
                            "description": "Required. The URL that points to the file that stores the object list entries. This file must allow public access. Currently, only URLs with HTTP and HTTPS schemes are supported."
                          }
                        },
                        "description": "An HTTP URL data source."
                      },
                      "awsS3DataSource": {
                        "id": "AwsS3Data",
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string",
                            "description": "Root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'."
                          },
                          "bucketName": {
                            "type": "string",
                            "description": "Required. S3 Bucket name (see [Creating a bucket](https://docs.aws.amazon.com/AmazonS3/latest/dev/create-bucket-get-location-example.html))."
                          },
                          "awsAccessKey": {
                            "id": "AwsAccessKey",
                            "type": "object",
                            "properties": {
                              "accessKeyId": {
                                "type": "string",
                                "description": "Required. AWS access key ID."
                              },
                              "secretAccessKey": {
                                "type": "string",
                                "description": "Required. AWS secret access key. This field is not returned in RPC responses."
                              }
                            },
                            "description": "Required. Input only. AWS access key used to sign the API requests to the AWS S3 bucket. Permissions on the bucket must be granted to the access ID of the AWS access key. For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials)."
                          }
                        },
                        "description": "An AWS S3 data source."
                      },
                      "transferOptions": {
                        "id": "TransferOptions",
                        "type": "object",
                        "properties": {
                          "deleteObjectsUniqueInSink": {
                            "type": "boolean",
                            "description": "Whether objects that exist only in the sink should be deleted. **Note:** This option and delete_objects_from_source_after_transfer are mutually exclusive."
                          },
                          "deleteObjectsFromSourceAfterTransfer": {
                            "type": "boolean",
                            "description": "Whether objects should be deleted from the source after they are transferred to the sink. **Note:** This option and delete_objects_unique_in_sink are mutually exclusive."
                          },
                          "overwriteObjectsAlreadyExistingInSink": {
                            "type": "boolean",
                            "description": "When to overwrite objects that already exist in the sink. The default is that only objects that are different from the source are ovewritten. If true, all objects in the sink whose name matches an object in the source will be overwritten with the source object."
                          }
                        },
                        "description": "If the option delete_objects_unique_in_sink is `true` and time-based object conditions such as 'last modification time' are specified, the request fails with an INVALID_ARGUMENT error."
                      },
                      "objectConditions": {
                        "id": "ObjectConditions",
                        "type": "object",
                        "properties": {
                          "excludePrefixes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "If you specify `exclude_prefixes`, Storage Transfer Service uses the items in the `exclude_prefixes` array to determine which objects to exclude from a transfer. Objects must not start with one of the matching `exclude_prefixes` for inclusion in a transfer. The following are requirements of `exclude_prefixes`: * Each exclude-prefix can contain any sequence of Unicode characters, to a max length of 1024 bytes when UTF8-encoded, and must not contain Carriage Return or Line Feed characters. Wildcard matching and regular expression matching are not supported. * Each exclude-prefix must omit the leading slash. For example, to exclude the object `s3://my-aws-bucket/logs/y=2015/requests.gz`, specify the exclude-prefix as `logs/y=2015/requests.gz`. * None of the exclude-prefix values can be empty, if specified. * Each exclude-prefix must exclude a distinct portion of the object namespace. No exclude-prefix may be a prefix of another exclude-prefix. * If include_prefixes is specified, then each exclude-prefix must start with the value of a path explicitly included by `include_prefixes`. The max size of `exclude_prefixes` is 1000. For more information, see [Filtering objects from transfers](/storage-transfer/docs/filtering-objects-from-transfers)."
                          },
                          "includePrefixes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "If you specify `include_prefixes`, Storage Transfer Service uses the items in the `include_prefixes` array to determine which objects to include in a transfer. Objects must start with one of the matching `include_prefixes` for inclusion in the transfer. If exclude_prefixes is specified, objects must not start with any of the `exclude_prefixes` specified for inclusion in the transfer. The following are requirements of `include_prefixes`: * Each include-prefix can contain any sequence of Unicode characters, to a max length of 1024 bytes when UTF8-encoded, and must not contain Carriage Return or Line Feed characters. Wildcard matching and regular expression matching are not supported. * Each include-prefix must omit the leading slash. For example, to include the object `s3://my-aws-bucket/logs/y=2015/requests.gz`, specify the include-prefix as `logs/y=2015/requests.gz`. * None of the include-prefix values can be empty, if specified. * Each include-prefix must include a distinct portion of the object namespace. No include-prefix may be a prefix of another include-prefix. The max size of `include_prefixes` is 1000. For more information, see [Filtering objects from transfers](/storage-transfer/docs/filtering-objects-from-transfers)."
                          },
                          "lastModifiedSince": {
                            "type": "string",
                            "format": "google-datetime",
                            "description": "If specified, only objects with a \"last modification time\" on or after this timestamp and objects that don't have a \"last modification time\" are transferred. The `last_modified_since` and `last_modified_before` fields can be used together for chunked data processing. For example, consider a script that processes each day's worth of data at a time. For that you'd set each of the fields as follows: * `last_modified_since` to the start of the day * `last_modified_before` to the end of the day"
                          },
                          "lastModifiedBefore": {
                            "type": "string",
                            "format": "google-datetime",
                            "description": "If specified, only objects with a \"last modification time\" before this timestamp and objects that don't have a \"last modification time\" will be transferred."
                          },
                          "maxTimeElapsedSinceLastModification": {
                            "type": "string",
                            "format": "google-duration",
                            "description": "If specified, only objects with a \"last modification time\" on or after `NOW` - `max_time_elapsed_since_last_modification` and objects that don't have a \"last modification time\" are transferred. For each TransferOperation started by this TransferJob, `NOW` refers to the start_time of the `TransferOperation`."
                          },
                          "minTimeElapsedSinceLastModification": {
                            "type": "string",
                            "format": "google-duration",
                            "description": "If specified, only objects with a \"last modification time\" before `NOW` - `min_time_elapsed_since_last_modification` and objects that don't have a \"last modification time\" are transferred. For each TransferOperation started by this TransferJob, `NOW` refers to the start_time of the `TransferOperation`."
                          }
                        },
                        "description": "Only objects that satisfy these object conditions are included in the set of data source and data sink objects. Object conditions based on objects' \"last modification time\" do not exclude objects in a data sink."
                      },
                      "azureBlobStorageDataSource": {
                        "id": "AzureBlobStorageData",
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string",
                            "description": "Root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'."
                          },
                          "container": {
                            "type": "string",
                            "description": "Required. The container to transfer from the Azure Storage account."
                          },
                          "storageAccount": {
                            "type": "string",
                            "description": "Required. The name of the Azure Storage account."
                          },
                          "azureCredentials": {
                            "id": "AzureCredentials",
                            "type": "object",
                            "properties": {
                              "sasToken": {
                                "type": "string",
                                "description": "Required. Azure shared access signature. (see [Grant limited access to Azure Storage resources using shared access signatures (SAS)](https://docs.microsoft.com/en-us/azure/storage/common/storage-sas-overview))."
                              }
                            },
                            "description": "Required. Input only. Credentials used to authenticate API requests to Azure. For information on our data retention policy for user credentials, see [User credentials](/storage-transfer/docs/data-retention#user-credentials)."
                          }
                        },
                        "description": "An Azure Blob Storage data source."
                      }
                    },
                    "description": "Transfer specification."
                  },
                  "notificationConfig": {
                    "id": "NotificationConfig",
                    "type": "object",
                    "properties": {
                      "eventTypes": {
                        "type": "array",
                        "items": {
                          "enum": [
                            "EVENT_TYPE_UNSPECIFIED",
                            "TRANSFER_OPERATION_SUCCESS",
                            "TRANSFER_OPERATION_FAILED",
                            "TRANSFER_OPERATION_ABORTED"
                          ],
                          "type": "string",
                          "enumDescriptions": [
                            "Illegal value, to avoid allowing a default.",
                            "`TransferOperation` completed with status SUCCESS.",
                            "`TransferOperation` completed with status FAILED.",
                            "`TransferOperation` completed with status ABORTED."
                          ]
                        },
                        "description": "Event types for which a notification is desired. If empty, send notifications for all event types."
                      },
                      "pubsubTopic": {
                        "type": "string",
                        "description": "Required. The `Topic.name` of the Cloud Pub/Sub topic to which to publish notifications. Must be of the format: `projects/{project}/topics/{topic}`. Not matching this format will result in an INVALID_ARGUMENT error."
                      },
                      "payloadFormat": {
                        "enum": [
                          "PAYLOAD_FORMAT_UNSPECIFIED",
                          "NONE",
                          "JSON"
                        ],
                        "type": "string",
                        "description": "Required. The desired format of the notification message payloads.",
                        "enumDescriptions": [
                          "Illegal value, to avoid allowing a default.",
                          "No payload is included with the notification.",
                          "`TransferOperation` is [formatted as a JSON response](https://developers.google.com/protocol-buffers/docs/proto3#json), in application/json."
                        ]
                      }
                    },
                    "description": "Notification configuration."
                  },
                  "latestOperationName": {
                    "type": "string",
                    "description": "The name of the most recently started TransferOperation of this JobConfig. Present if a TransferOperation has been created for this JobConfig."
                  },
                  "lastModificationTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The time that the transfer job was last modified."
                  }
                },
                "description": "This resource represents the configuration of a transfer job that runs periodically."
              },
              "description": "A list of transfer jobs."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The list next page token."
            }
          },
          "description": "Response from ListTransferJobs."
        }
      ]
  transferJobs.patch:
    description: |-
      Updates a transfer job. Updating a job's transfer spec does not affect transfer operations that are running already. **Note:** The job's status field can be modified using this RPC (for example, to set a job's status to DELETED, DISABLED, or ENABLED).
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage-transfer/docs/reference/rest/v1/transferJobs/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  transferJobs.run:
    description: |-
      Attempts to start a new TransferOperation for the current TransferJob. A TransferJob has a maximum of one active TransferOperation. If this method is called while a TransferOperation is active, an error wil be returned.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage-transfer/docs/reference/rest/v1/transferJobs/run
    example:
      inputs: [
        {
          "id": "RunTransferJobRequest",
          "type": "object",
          "properties": {
            "projectId": {
              "type": "string",
              "description": "Required. The ID of the Google Cloud Platform Console project that owns the transfer job."
            }
          },
          "description": "Request passed to RunTransferJob."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned unique name. The format of `name` is `transferOperations/some/unique/name`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Represents the transfer operation object. To request a TransferOperation object, use transferOperations.get.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  transferOperations.cancel:
    description: |-
      Cancels a transfer. Use the transferOperations.get method to check if the cancellation succeeded or if the operation completed despite the `cancel` request. When you cancel an operation, the currently running transfer is interrupted. For recurring transfer jobs, the next instance of the transfer job will still run. For example, if your job is configured to run every day at 1pm and you cancel Monday's operation at 1:05pm, Monday's transfer will stop. However, a transfer job will still be attempted on Tuesday. This applies only to currently running operations. If an operation is not currently running, `cancel` does nothing. *Caution:* Canceling a transfer job can leave your data in an unknown state. We recommend that you restore the state at both the destination and the source after the `cancel` request completes so that your data is in a consistent state. When you cancel a job, the next job computes a delta of files and may repair any inconsistent state. For instance, if you run a job every day, and today's job found 10 new files and transferred five files before you canceled the job, tomorrow's transfer operation will compute a new delta with the five files that were not copied today plus any new files discovered tomorrow.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage-transfer/docs/reference/rest/v1/transferOperations/cancel
    example:
      inputs: [
        {
          "id": "CancelOperationRequest",
          "type": "object",
          "properties": {},
          "description": "The request message for Operations.CancelOperation."
        }
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  transferOperations.get:
    description: |-
      Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage-transfer/docs/reference/rest/v1/transferOperations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned unique name. The format of `name` is `transferOperations/some/unique/name`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Represents the transfer operation object. To request a TransferOperation object, use transferOperations.get.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  transferOperations.list:
    description: |-
      Lists transfer operations. Operations are ordered by their creation time in reverse chronological order.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage-transfer/docs/reference/rest/v1/transferOperations/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListOperationsResponse",
          "type": "object",
          "properties": {
            "operations": {
              "type": "array",
              "items": {
                "id": "Operation",
                "type": "object",
                "properties": {
                  "done": {
                    "type": "boolean",
                    "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
                  },
                  "name": {
                    "type": "string",
                    "description": "The server-assigned unique name. The format of `name` is `transferOperations/some/unique/name`."
                  },
                  "error": {
                    "id": "Status",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The status code, which should be an enum value of google.rpc.Code."
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object. Contains field @type with type URL."
                          }
                        },
                        "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                      },
                      "message": {
                        "type": "string",
                        "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                      }
                    },
                    "description": "The error result of the operation in case of failure or cancellation."
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Represents the transfer operation object. To request a TransferOperation object, use transferOperations.get.",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "response": {
                    "type": "object",
                    "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  }
                },
                "description": "This resource represents a long-running operation that is the result of a network API call."
              },
              "description": "A list of operations that matches the specified filter in the request."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The standard List next-page token."
            }
          },
          "description": "The response message for Operations.ListOperations."
        }
      ]
  transferOperations.pause:
    description: |-
      Pauses a transfer operation.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage-transfer/docs/reference/rest/v1/transferOperations/pause
    example:
      inputs: [
        {
          "id": "PauseTransferOperationRequest",
          "type": "object",
          "properties": {},
          "description": "Request passed to PauseTransferOperation."
        }
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  transferOperations.resume:
    description: |-
      Resumes a transfer operation that is paused.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage-transfer/docs/reference/rest/v1/transferOperations/resume
    example:
      inputs: [
        {
          "id": "ResumeTransferOperationRequest",
          "type": "object",
          "properties": {},
          "description": "Request passed to ResumeTransferOperation."
        }
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]