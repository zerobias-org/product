Product:
  name: GCP Video Intelligence
  versions: [1.0.0]
  package: google.gcp.videointelligence
  description: |-
    Cloud Video Intelligence
  link: https://cloud.google.com/video-intelligence
  contentType: json
Operations:
  operations.projects.locations.operations.cancel:
    description: |-
      Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/video-intelligence/docs/reference/rest/v1/operations.projects.locations.operations/cancel
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobuf_Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  operations.projects.locations.operations.delete:
    description: |-
      Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/video-intelligence/docs/reference/rest/v1/operations.projects.locations.operations/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobuf_Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  operations.projects.locations.operations.get:
    description: |-
      Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/video-intelligence/docs/reference/rest/v1/operations.projects.locations.operations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleLongrunning_Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "GoogleRpc_Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.operations.cancel:
    description: |-
      Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/video-intelligence/docs/reference/rest/v1/projects.locations.operations/cancel
    example:
      inputs: [
        {
          "id": "GoogleLongrunning_CancelOperationRequest",
          "type": "object",
          "properties": {},
          "description": "The request message for Operations.CancelOperation."
        }
      ]
      outputs: [
        {
          "id": "GoogleProtobuf_Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  projects.locations.operations.delete:
    description: |-
      Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/video-intelligence/docs/reference/rest/v1/projects.locations.operations/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobuf_Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  projects.locations.operations.get:
    description: |-
      Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/video-intelligence/docs/reference/rest/v1/projects.locations.operations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleLongrunning_Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "GoogleRpc_Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.operations.list:
    description: |-
      Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/video-intelligence/docs/reference/rest/v1/projects.locations.operations/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleLongrunning_ListOperationsResponse",
          "type": "object",
          "properties": {
            "operations": {
              "type": "array",
              "items": {
                "id": "GoogleLongrunning_Operation",
                "type": "object",
                "properties": {
                  "done": {
                    "type": "boolean",
                    "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
                  },
                  "name": {
                    "type": "string",
                    "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
                  },
                  "error": {
                    "id": "GoogleRpc_Status",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The status code, which should be an enum value of google.rpc.Code."
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object. Contains field @type with type URL."
                          }
                        },
                        "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                      },
                      "message": {
                        "type": "string",
                        "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                      }
                    },
                    "description": "The error result of the operation in case of failure or cancellation."
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "response": {
                    "type": "object",
                    "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  }
                },
                "description": "This resource represents a long-running operation that is the result of a network API call."
              },
              "description": "A list of operations that matches the specified filter in the request."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The standard List next-page token."
            }
          },
          "description": "The response message for Operations.ListOperations."
        }
      ]
  videos.annotate:
    description: |-
      Performs asynchronous video annotation. Progress and results can be retrieved through the `google.longrunning.Operations` interface. `Operation.metadata` contains `AnnotateVideoProgress` (progress). `Operation.response` contains `AnnotateVideoResponse` (results).
    versions:
      from: 1.0.0
    link: https://cloud.google.com/video-intelligence/docs/reference/rest/v1/videos/annotate
    example:
      inputs: [
        {
          "id": "GoogleCloudVideointelligenceV1_AnnotateVideoRequest",
          "type": "object",
          "properties": {
            "features": {
              "type": "array",
              "items": {
                "enum": [
                  "FEATURE_UNSPECIFIED",
                  "LABEL_DETECTION",
                  "SHOT_CHANGE_DETECTION",
                  "EXPLICIT_CONTENT_DETECTION",
                  "FACE_DETECTION",
                  "SPEECH_TRANSCRIPTION",
                  "TEXT_DETECTION",
                  "OBJECT_TRACKING",
                  "LOGO_RECOGNITION",
                  "PERSON_DETECTION"
                ],
                "type": "string",
                "enumDescriptions": [
                  "Unspecified.",
                  "Label detection. Detect objects, such as dog or flower.",
                  "Shot change detection.",
                  "Explicit content detection.",
                  "Human face detection.",
                  "Speech transcription.",
                  "OCR text detection and tracking.",
                  "Object detection and tracking.",
                  "Logo detection, tracking, and recognition.",
                  "Person detection."
                ]
              },
              "description": "Required. Requested video annotation features."
            },
            "inputUri": {
              "type": "string",
              "description": "Input video location. Currently, only [Cloud Storage](https://cloud.google.com/storage/) URIs are supported. URIs must be specified in the following format: `gs://bucket-id/object-id` (other URI formats return google.rpc.Code.INVALID_ARGUMENT). For more information, see [Request URIs](https://cloud.google.com/storage/docs/request-endpoints). To identify multiple videos, a video URI may include wildcards in the `object-id`. Supported wildcards: '*' to match 0 or more characters; '?' to match 1 character. If unset, the input video should be embedded in the request as `input_content`. If set, `input_content` must be unset."
            },
            "outputUri": {
              "type": "string",
              "description": "Optional. Location where the output (in JSON format) should be stored. Currently, only [Cloud Storage](https://cloud.google.com/storage/) URIs are supported. These must be specified in the following format: `gs://bucket-id/object-id` (other URI formats return google.rpc.Code.INVALID_ARGUMENT). For more information, see [Request URIs](https://cloud.google.com/storage/docs/request-endpoints)."
            },
            "locationId": {
              "type": "string",
              "description": "Optional. Cloud region where annotation should take place. Supported cloud regions are: `us-east1`, `us-west1`, `europe-west1`, `asia-east1`. If no region is specified, the region will be determined based on video file location."
            },
            "inputContent": {
              "type": "string",
              "format": "byte",
              "description": "The video data bytes. If unset, the input video(s) should be specified via the `input_uri`. If set, `input_uri` must be unset."
            },
            "videoContext": {
              "id": "GoogleCloudVideointelligenceV1_VideoContext",
              "type": "object",
              "properties": {
                "segments": {
                  "type": "array",
                  "items": {
                    "id": "GoogleCloudVideointelligenceV1_VideoSegment",
                    "type": "object",
                    "properties": {
                      "endTimeOffset": {
                        "type": "string",
                        "format": "google-duration",
                        "description": "Time-offset, relative to the beginning of the video, corresponding to the end of the segment (inclusive)."
                      },
                      "startTimeOffset": {
                        "type": "string",
                        "format": "google-duration",
                        "description": "Time-offset, relative to the beginning of the video, corresponding to the start of the segment (inclusive)."
                      }
                    },
                    "description": "Video segment."
                  },
                  "description": "Video segments to annotate. The segments may overlap and are not required to be contiguous or span the whole video. If unspecified, each video is treated as a single segment."
                },
                "faceDetectionConfig": {
                  "id": "GoogleCloudVideointelligenceV1_FaceDetectionConfig",
                  "type": "object",
                  "properties": {
                    "model": {
                      "type": "string",
                      "description": "Model to use for face detection. Supported values: \"builtin/stable\" (the default if unset) and \"builtin/latest\"."
                    },
                    "includeAttributes": {
                      "type": "boolean",
                      "description": "Whether to enable face attributes detection, such as glasses, dark_glasses, mouth_open etc. Ignored if 'include_bounding_boxes' is set to false."
                    },
                    "includeBoundingBoxes": {
                      "type": "boolean",
                      "description": "Whether bounding boxes are included in the face annotation output."
                    }
                  },
                  "description": "Config for FACE_DETECTION."
                },
                "textDetectionConfig": {
                  "id": "GoogleCloudVideointelligenceV1_TextDetectionConfig",
                  "type": "object",
                  "properties": {
                    "model": {
                      "type": "string",
                      "description": "Model to use for text detection. Supported values: \"builtin/stable\" (the default if unset) and \"builtin/latest\"."
                    },
                    "languageHints": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Language hint can be specified if the language to be detected is known a priori. It can increase the accuracy of the detection. Language hint must be language code in BCP-47 format. Automatic language detection is performed if no hint is provided."
                    }
                  },
                  "description": "Config for TEXT_DETECTION."
                },
                "labelDetectionConfig": {
                  "id": "GoogleCloudVideointelligenceV1_LabelDetectionConfig",
                  "type": "object",
                  "properties": {
                    "model": {
                      "type": "string",
                      "description": "Model to use for label detection. Supported values: \"builtin/stable\" (the default if unset) and \"builtin/latest\"."
                    },
                    "stationaryCamera": {
                      "type": "boolean",
                      "description": "Whether the video has been shot from a stationary (i.e., non-moving) camera. When set to true, might improve detection accuracy for moving objects. Should be used with `SHOT_AND_FRAME_MODE` enabled."
                    },
                    "labelDetectionMode": {
                      "enum": [
                        "LABEL_DETECTION_MODE_UNSPECIFIED",
                        "SHOT_MODE",
                        "FRAME_MODE",
                        "SHOT_AND_FRAME_MODE"
                      ],
                      "type": "string",
                      "description": "What labels should be detected with LABEL_DETECTION, in addition to video-level labels or segment-level labels. If unspecified, defaults to `SHOT_MODE`.",
                      "enumDescriptions": [
                        "Unspecified.",
                        "Detect shot-level labels.",
                        "Detect frame-level labels.",
                        "Detect both shot-level and frame-level labels."
                      ]
                    },
                    "frameConfidenceThreshold": {
                      "type": "number",
                      "format": "float",
                      "description": "The confidence threshold we perform filtering on the labels from frame-level detection. If not set, it is set to 0.4 by default. The valid range for this threshold is [0.1, 0.9]. Any value set outside of this range will be clipped. Note: For best results, follow the default threshold. We will update the default threshold everytime when we release a new model."
                    },
                    "videoConfidenceThreshold": {
                      "type": "number",
                      "format": "float",
                      "description": "The confidence threshold we perform filtering on the labels from video-level and shot-level detections. If not set, it's set to 0.3 by default. The valid range for this threshold is [0.1, 0.9]. Any value set outside of this range will be clipped. Note: For best results, follow the default threshold. We will update the default threshold everytime when we release a new model."
                    }
                  },
                  "description": "Config for LABEL_DETECTION."
                },
                "objectTrackingConfig": {
                  "id": "GoogleCloudVideointelligenceV1_ObjectTrackingConfig",
                  "type": "object",
                  "properties": {
                    "model": {
                      "type": "string",
                      "description": "Model to use for object tracking. Supported values: \"builtin/stable\" (the default if unset) and \"builtin/latest\"."
                    }
                  },
                  "description": "Config for OBJECT_TRACKING."
                },
                "personDetectionConfig": {
                  "id": "GoogleCloudVideointelligenceV1_PersonDetectionConfig",
                  "type": "object",
                  "properties": {
                    "includeAttributes": {
                      "type": "boolean",
                      "description": "Whether to enable person attributes detection, such as cloth color (black, blue, etc), type (coat, dress, etc), pattern (plain, floral, etc), hair, etc. Ignored if 'include_bounding_boxes' is set to false."
                    },
                    "includeBoundingBoxes": {
                      "type": "boolean",
                      "description": "Whether bounding boxes are included in the person detection annotation output."
                    },
                    "includePoseLandmarks": {
                      "type": "boolean",
                      "description": "Whether to enable pose landmarks detection. Ignored if 'include_bounding_boxes' is set to false."
                    }
                  },
                  "description": "Config for PERSON_DETECTION."
                },
                "shotChangeDetectionConfig": {
                  "id": "GoogleCloudVideointelligenceV1_ShotChangeDetectionConfig",
                  "type": "object",
                  "properties": {
                    "model": {
                      "type": "string",
                      "description": "Model to use for shot change detection. Supported values: \"builtin/stable\" (the default if unset) and \"builtin/latest\"."
                    }
                  },
                  "description": "Config for SHOT_CHANGE_DETECTION."
                },
                "speechTranscriptionConfig": {
                  "id": "GoogleCloudVideointelligenceV1_SpeechTranscriptionConfig",
                  "type": "object",
                  "properties": {
                    "audioTracks": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "Optional. For file formats, such as MXF or MKV, supporting multiple audio tracks, specify up to two tracks. Default: track 0."
                    },
                    "languageCode": {
                      "type": "string",
                      "description": "Required. *Required* The language of the supplied audio as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\". See [Language Support](https://cloud.google.com/speech/docs/languages) for a list of the currently supported language codes."
                    },
                    "speechContexts": {
                      "type": "array",
                      "items": {
                        "id": "GoogleCloudVideointelligenceV1_SpeechContext",
                        "type": "object",
                        "properties": {
                          "phrases": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Optional. A list of strings containing words and phrases \"hints\" so that the speech recognition is more likely to recognize them. This can be used to improve the accuracy for specific words and phrases, for example, if specific commands are typically spoken by the user. This can also be used to add additional words to the vocabulary of the recognizer. See [usage limits](https://cloud.google.com/speech/limits#content)."
                          }
                        },
                        "description": "Provides \"hints\" to the speech recognizer to favor specific words and phrases in the results."
                      },
                      "description": "Optional. A means to provide context to assist the speech recognition."
                    },
                    "filterProfanity": {
                      "type": "boolean",
                      "description": "Optional. If set to `true`, the server will attempt to filter out profanities, replacing all but the initial character in each filtered word with asterisks, e.g. \"f***\". If set to `false` or omitted, profanities won't be filtered out."
                    },
                    "maxAlternatives": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Optional. Maximum number of recognition hypotheses to be returned. Specifically, the maximum number of `SpeechRecognitionAlternative` messages within each `SpeechTranscription`. The server may return fewer than `max_alternatives`. Valid values are `0`-`30`. A value of `0` or `1` will return a maximum of one. If omitted, will return a maximum of one."
                    },
                    "enableWordConfidence": {
                      "type": "boolean",
                      "description": "Optional. If `true`, the top result includes a list of words and the confidence for those words. If `false`, no word-level confidence information is returned. The default is `false`."
                    },
                    "diarizationSpeakerCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Optional. If set, specifies the estimated number of speakers in the conversation. If not set, defaults to '2'. Ignored unless enable_speaker_diarization is set to true."
                    },
                    "enableSpeakerDiarization": {
                      "type": "boolean",
                      "description": "Optional. If 'true', enables speaker detection for each recognized word in the top alternative of the recognition result using a speaker_tag provided in the WordInfo. Note: When this is true, we send all the words from the beginning of the audio for the top alternative in every consecutive response. This is done in order to improve our speaker tags as our models learn to identify the speakers in the conversation over time."
                    },
                    "enableAutomaticPunctuation": {
                      "type": "boolean",
                      "description": "Optional. If 'true', adds punctuation to recognition result hypotheses. This feature is only available in select languages. Setting this for requests in other languages has no effect at all. The default 'false' value does not add punctuation to result hypotheses. NOTE: \"This is currently offered as an experimental service, complimentary to all users. In the future this may be exclusively available as a premium feature.\""
                    }
                  },
                  "description": "Config for SPEECH_TRANSCRIPTION."
                },
                "explicitContentDetectionConfig": {
                  "id": "GoogleCloudVideointelligenceV1_ExplicitContentDetectionConfig",
                  "type": "object",
                  "properties": {
                    "model": {
                      "type": "string",
                      "description": "Model to use for explicit content detection. Supported values: \"builtin/stable\" (the default if unset) and \"builtin/latest\"."
                    }
                  },
                  "description": "Config for EXPLICIT_CONTENT_DETECTION."
                }
              },
              "description": "Additional video context and/or feature-specific parameters."
            }
          },
          "description": "Video annotation request."
        }
      ]
      outputs: [
        {
          "id": "GoogleLongrunning_Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "GoogleRpc_Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]