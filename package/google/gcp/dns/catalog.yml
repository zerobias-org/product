Product:
  name: GCP Cloud DNS
  versions: [1.0.0]
  package: google.gcp.dns
  description: |-
    Cloud DNS
  link: https://cloud.google.com/dns
  contentType: json
Operations:
  changes.create:
    description: |-
      Atomically updates the ResourceRecordSet collection.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dns/docs/reference/v1/changes/create
    example:
      inputs: [
        {
          "id": "Change",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique identifier for the resource; defined by the server (output only)."
            },
            "kind": {
              "type": "string",
              "default": "dns#change"
            },
            "status": {
              "enum": [
                "pending",
                "done"
              ],
              "type": "string",
              "description": "Status of the operation (output only). A status of \"done\" means that the request to update the authoritative servers has been sent, but the servers might not be updated yet.",
              "enumDescriptions": [
                "",
                ""
              ]
            },
            "additions": {
              "type": "array",
              "items": {
                "id": "ResourceRecordSet",
                "type": "object",
                "properties": {
                  "ttl": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of seconds that this ResourceRecordSet can be cached by resolvers."
                  },
                  "kind": {
                    "type": "string",
                    "default": "dns#resourceRecordSet"
                  },
                  "name": {
                    "type": "string",
                    "description": "For example, www.example.com."
                  },
                  "type": {
                    "type": "string",
                    "description": "The identifier of a supported record type. See the list of Supported DNS record types."
                  },
                  "rrdatas": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "As defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1) -- see examples."
                  },
                  "signatureRrdatas": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "As defined in RFC 4034 (section 3.2)."
                  }
                },
                "description": "A unit of data that is returned by the DNS servers."
              },
              "description": "Which ResourceRecordSets to add?"
            },
            "deletions": {
              "type": "array",
              "items": {
                "id": "ResourceRecordSet",
                "type": "object",
                "properties": {
                  "ttl": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of seconds that this ResourceRecordSet can be cached by resolvers."
                  },
                  "kind": {
                    "type": "string",
                    "default": "dns#resourceRecordSet"
                  },
                  "name": {
                    "type": "string",
                    "description": "For example, www.example.com."
                  },
                  "type": {
                    "type": "string",
                    "description": "The identifier of a supported record type. See the list of Supported DNS record types."
                  },
                  "rrdatas": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "As defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1) -- see examples."
                  },
                  "signatureRrdatas": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "As defined in RFC 4034 (section 3.2)."
                  }
                },
                "description": "A unit of data that is returned by the DNS servers."
              },
              "description": "Which ResourceRecordSets to remove? Must match existing data exactly."
            },
            "isServing": {
              "type": "boolean",
              "description": "If the DNS queries for the zone will be served."
            },
            "startTime": {
              "type": "string",
              "description": "The time that this operation was started by the server (output only). This is in RFC3339 text format."
            }
          },
          "description": "A Change represents a set of ResourceRecordSet additions and deletions applied atomically to a ManagedZone. ResourceRecordSets within a ManagedZone are modified by creating a new Change element in the Changes collection. In turn the Changes collection also records the past modifications to the ResourceRecordSets in a ManagedZone. The current state of the ManagedZone is the sum effect of applying all Change elements in the Changes collection in sequence."
        }
      ]
      outputs: [
        {}
      ]
  changes.get:
    description: |-
      Fetches the representation of an existing Change.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dns/docs/reference/v1/changes/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  changes.list:
    description: |-
      Enumerates Changes to a ResourceRecordSet collection.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dns/docs/reference/v1/changes/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ChangesListResponse",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "dns#changesListResponse",
              "description": "Type of resource."
            },
            "header": {
              "id": "ResponseHeader",
              "type": "object",
              "properties": {
                "operationId": {
                  "type": "string",
                  "description": "For mutating operation requests that completed successfully. This is the client_operation_id if the client specified it, otherwise it is generated by the server (output only)."
                }
              },
              "description": "Elements common to every response."
            },
            "changes": {
              "type": "array",
              "items": {
                "id": "Change",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique identifier for the resource; defined by the server (output only)."
                  },
                  "kind": {
                    "type": "string",
                    "default": "dns#change"
                  },
                  "status": {
                    "enum": [
                      "pending",
                      "done"
                    ],
                    "type": "string",
                    "description": "Status of the operation (output only). A status of \"done\" means that the request to update the authoritative servers has been sent, but the servers might not be updated yet.",
                    "enumDescriptions": [
                      "",
                      ""
                    ]
                  },
                  "additions": {
                    "type": "array",
                    "items": {
                      "id": "ResourceRecordSet",
                      "type": "object",
                      "properties": {
                        "ttl": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Number of seconds that this ResourceRecordSet can be cached by resolvers."
                        },
                        "kind": {
                          "type": "string",
                          "default": "dns#resourceRecordSet"
                        },
                        "name": {
                          "type": "string",
                          "description": "For example, www.example.com."
                        },
                        "type": {
                          "type": "string",
                          "description": "The identifier of a supported record type. See the list of Supported DNS record types."
                        },
                        "rrdatas": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "As defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1) -- see examples."
                        },
                        "signatureRrdatas": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "As defined in RFC 4034 (section 3.2)."
                        }
                      },
                      "description": "A unit of data that is returned by the DNS servers."
                    },
                    "description": "Which ResourceRecordSets to add?"
                  },
                  "deletions": {
                    "type": "array",
                    "items": {
                      "id": "ResourceRecordSet",
                      "type": "object",
                      "properties": {
                        "ttl": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Number of seconds that this ResourceRecordSet can be cached by resolvers."
                        },
                        "kind": {
                          "type": "string",
                          "default": "dns#resourceRecordSet"
                        },
                        "name": {
                          "type": "string",
                          "description": "For example, www.example.com."
                        },
                        "type": {
                          "type": "string",
                          "description": "The identifier of a supported record type. See the list of Supported DNS record types."
                        },
                        "rrdatas": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "As defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1) -- see examples."
                        },
                        "signatureRrdatas": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "As defined in RFC 4034 (section 3.2)."
                        }
                      },
                      "description": "A unit of data that is returned by the DNS servers."
                    },
                    "description": "Which ResourceRecordSets to remove? Must match existing data exactly."
                  },
                  "isServing": {
                    "type": "boolean",
                    "description": "If the DNS queries for the zone will be served."
                  },
                  "startTime": {
                    "type": "string",
                    "description": "The time that this operation was started by the server (output only). This is in RFC3339 text format."
                  }
                },
                "description": "A Change represents a set of ResourceRecordSet additions and deletions applied atomically to a ManagedZone. ResourceRecordSets within a ManagedZone are modified by creating a new Change element in the Changes collection. In turn the Changes collection also records the past modifications to the ResourceRecordSets in a ManagedZone. The current state of the ManagedZone is the sum effect of applying all Change elements in the Changes collection in sequence."
              },
              "description": "The requested changes."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your pagination token. This lets you retrieve the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a \"snapshot\" of collections larger than the maximum page size."
            }
          },
          "description": "The response to a request to enumerate Changes to a ResourceRecordSets collection."
        }
      ]
  dnsKeys.get:
    description: |-
      Fetches the representation of an existing DnsKey.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dns/docs/reference/v1/dnsKeys/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "DnsKey",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique identifier for the resource; defined by the server (output only)."
            },
            "kind": {
              "type": "string",
              "default": "dns#dnsKey"
            },
            "type": {
              "enum": [
                "keySigning",
                "zoneSigning"
              ],
              "type": "string",
              "description": "One of \"KEY_SIGNING\" or \"ZONE_SIGNING\". Keys of type KEY_SIGNING have the Secure Entry Point flag set and, when active, are used to sign only resource record sets of type DNSKEY. Otherwise, the Secure Entry Point flag is cleared, and this key is used to sign only resource record sets of other types. Immutable after creation time.",
              "enumDescriptions": [
                "",
                ""
              ]
            },
            "keyTag": {
              "type": "integer",
              "format": "int32",
              "description": "The key tag is a non-cryptographic hash of the a DNSKEY resource record associated with this DnsKey. The key tag can be used to identify a DNSKEY more quickly (but it is not a unique identifier). In particular, the key tag is used in a parent zone's DS record to point at the DNSKEY in this child ManagedZone. The key tag is a number in the range [0, 65535] and the algorithm to calculate it is specified in RFC4034 Appendix B. Output only."
            },
            "digests": {
              "type": "array",
              "items": {
                "id": "DnsKeyDigest",
                "type": "object",
                "properties": {
                  "type": {
                    "enum": [
                      "sha1",
                      "sha256",
                      "sha384"
                    ],
                    "type": "string",
                    "description": "Specifies the algorithm used to calculate this digest.",
                    "enumDescriptions": [
                      "",
                      "",
                      ""
                    ]
                  },
                  "digest": {
                    "type": "string",
                    "description": "The base-16 encoded bytes of this digest. Suitable for use in a DS resource record."
                  }
                }
              },
              "description": "Cryptographic hashes of the DNSKEY resource record associated with this DnsKey. These digests are needed to construct a DS record that points at this DNS key. Output only."
            },
            "isActive": {
              "type": "boolean",
              "description": "Active keys are used to sign subsequent changes to the ManagedZone. Inactive keys are still present as DNSKEY Resource Records for the use of resolvers validating existing signatures."
            },
            "algorithm": {
              "enum": [
                "rsasha1",
                "rsasha256",
                "rsasha512",
                "ecdsap256sha256",
                "ecdsap384sha384"
              ],
              "type": "string",
              "description": "String mnemonic specifying the DNSSEC algorithm of this key. Immutable after creation time.",
              "enumDescriptions": [
                "",
                "",
                "",
                "",
                ""
              ]
            },
            "keyLength": {
              "type": "integer",
              "format": "uint32",
              "description": "Length of the key in bits. Specified at creation time, and then immutable."
            },
            "publicKey": {
              "type": "string",
              "description": "Base64 encoded public half of this key. Output only."
            },
            "description": {
              "type": "string",
              "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the resource's function."
            },
            "creationTime": {
              "type": "string",
              "description": "The time that this resource was created in the control plane. This is in RFC3339 text format. Output only."
            }
          },
          "description": "A DNSSEC key pair."
        }
      ]
  dnsKeys.list:
    description: |-
      Enumerates DnsKeys to a ResourceRecordSet collection.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dns/docs/reference/v1/dnsKeys/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "DnsKeysListResponse",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "dns#dnsKeysListResponse",
              "description": "Type of resource."
            },
            "header": {
              "id": "ResponseHeader",
              "type": "object",
              "properties": {
                "operationId": {
                  "type": "string",
                  "description": "For mutating operation requests that completed successfully. This is the client_operation_id if the client specified it, otherwise it is generated by the server (output only)."
                }
              },
              "description": "Elements common to every response."
            },
            "dnsKeys": {
              "type": "array",
              "items": {
                "id": "DnsKey",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique identifier for the resource; defined by the server (output only)."
                  },
                  "kind": {
                    "type": "string",
                    "default": "dns#dnsKey"
                  },
                  "type": {
                    "enum": [
                      "keySigning",
                      "zoneSigning"
                    ],
                    "type": "string",
                    "description": "One of \"KEY_SIGNING\" or \"ZONE_SIGNING\". Keys of type KEY_SIGNING have the Secure Entry Point flag set and, when active, are used to sign only resource record sets of type DNSKEY. Otherwise, the Secure Entry Point flag is cleared, and this key is used to sign only resource record sets of other types. Immutable after creation time.",
                    "enumDescriptions": [
                      "",
                      ""
                    ]
                  },
                  "keyTag": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The key tag is a non-cryptographic hash of the a DNSKEY resource record associated with this DnsKey. The key tag can be used to identify a DNSKEY more quickly (but it is not a unique identifier). In particular, the key tag is used in a parent zone's DS record to point at the DNSKEY in this child ManagedZone. The key tag is a number in the range [0, 65535] and the algorithm to calculate it is specified in RFC4034 Appendix B. Output only."
                  },
                  "digests": {
                    "type": "array",
                    "items": {
                      "id": "DnsKeyDigest",
                      "type": "object",
                      "properties": {
                        "type": {
                          "enum": [
                            "sha1",
                            "sha256",
                            "sha384"
                          ],
                          "type": "string",
                          "description": "Specifies the algorithm used to calculate this digest.",
                          "enumDescriptions": [
                            "",
                            "",
                            ""
                          ]
                        },
                        "digest": {
                          "type": "string",
                          "description": "The base-16 encoded bytes of this digest. Suitable for use in a DS resource record."
                        }
                      }
                    },
                    "description": "Cryptographic hashes of the DNSKEY resource record associated with this DnsKey. These digests are needed to construct a DS record that points at this DNS key. Output only."
                  },
                  "isActive": {
                    "type": "boolean",
                    "description": "Active keys are used to sign subsequent changes to the ManagedZone. Inactive keys are still present as DNSKEY Resource Records for the use of resolvers validating existing signatures."
                  },
                  "algorithm": {
                    "enum": [
                      "rsasha1",
                      "rsasha256",
                      "rsasha512",
                      "ecdsap256sha256",
                      "ecdsap384sha384"
                    ],
                    "type": "string",
                    "description": "String mnemonic specifying the DNSSEC algorithm of this key. Immutable after creation time.",
                    "enumDescriptions": [
                      "",
                      "",
                      "",
                      "",
                      ""
                    ]
                  },
                  "keyLength": {
                    "type": "integer",
                    "format": "uint32",
                    "description": "Length of the key in bits. Specified at creation time, and then immutable."
                  },
                  "publicKey": {
                    "type": "string",
                    "description": "Base64 encoded public half of this key. Output only."
                  },
                  "description": {
                    "type": "string",
                    "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the resource's function."
                  },
                  "creationTime": {
                    "type": "string",
                    "description": "The time that this resource was created in the control plane. This is in RFC3339 text format. Output only."
                  }
                },
                "description": "A DNSSEC key pair."
              },
              "description": "The requested resources."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your pagination token. In this way you can retrieve the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. There is no way to retrieve a \"snapshot\" of collections larger than the maximum page size."
            }
          },
          "description": "The response to a request to enumerate DnsKeys in a ManagedZone."
        }
      ]
  managedZoneOperations.get:
    description: |-
      Fetches the representation of an existing Operation.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dns/docs/reference/v1/managedZoneOperations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique identifier for the resource. This is the client_operation_id if the client specified it when the mutation was initiated, otherwise, it is generated by the server. The name must be 1-63 characters long and match the regular expression [-a-z0-9]? (output only)"
            },
            "kind": {
              "type": "string",
              "default": "dns#operation"
            },
            "type": {
              "type": "string",
              "description": "Type of the operation. Operations include insert, update, and delete (output only)."
            },
            "user": {
              "type": "string",
              "description": "User who requested the operation, for example: user@example.com. cloud-dns-system for operations automatically done by the system. (output only)"
            },
            "status": {
              "enum": [
                "pending",
                "done"
              ],
              "type": "string",
              "description": "Status of the operation. Can be one of the following: \"PENDING\" or \"DONE\" (output only). A status of \"DONE\" means that the request to update the authoritative servers has been sent, but the servers might not be updated yet.",
              "enumDescriptions": [
                "",
                ""
              ]
            },
            "startTime": {
              "type": "string",
              "description": "The time that this operation was started by the server. This is in RFC3339 text format (output only)."
            },
            "zoneContext": {
              "id": "OperationManagedZoneContext",
              "type": "object",
              "properties": {
                "newValue": {
                  "id": "ManagedZone",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uint64",
                      "description": "Unique identifier for the resource; defined by the server (output only)"
                    },
                    "kind": {
                      "type": "string",
                      "default": "dns#managedZone"
                    },
                    "name": {
                      "type": "string",
                      "description": "User assigned name for this resource. Must be unique within the project. The name must be 1-63 characters long, must begin with a letter, end with a letter or digit, and only contain lowercase letters, digits or dashes."
                    },
                    "labels": {
                      "type": "object",
                      "description": "User labels.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "dnsName": {
                      "type": "string",
                      "description": "The DNS name of this managed zone, for instance \"example.com.\"."
                    },
                    "visibility": {
                      "enum": [
                        "public",
                        "private"
                      ],
                      "type": "string",
                      "description": "The zone's visibility: public zones are exposed to the Internet, while private zones are visible only to Virtual Private Cloud resources.",
                      "enumDescriptions": [
                        "",
                        ""
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the managed zone's function."
                    },
                    "nameServers": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Delegate your managed_zone to these virtual name servers; defined by the server (output only)"
                    },
                    "creationTime": {
                      "type": "string",
                      "description": "The time that this resource was created on the server. This is in RFC3339 text format. Output only."
                    },
                    "dnssecConfig": {
                      "id": "ManagedZoneDnsSecConfig",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "type": "string",
                          "default": "dns#managedZoneDnsSecConfig"
                        },
                        "state": {
                          "enum": [
                            "off",
                            "on",
                            "transfer"
                          ],
                          "type": "string",
                          "description": "Specifies whether DNSSEC is enabled, and what mode it is in.",
                          "enumDescriptions": [
                            "DNSSEC is disabled; the zone is not signed.",
                            "DNSSEC is enabled; the zone is signed and fully managed.",
                            "DNSSEC is enabled, but in a \"transfer\" mode."
                          ]
                        },
                        "nonExistence": {
                          "enum": [
                            "nsec",
                            "nsec3"
                          ],
                          "type": "string",
                          "description": "Specifies the mechanism for authenticated denial-of-existence responses. Can only be changed while the state is OFF.",
                          "enumDescriptions": [
                            "",
                            ""
                          ]
                        },
                        "defaultKeySpecs": {
                          "type": "array",
                          "items": {
                            "id": "DnsKeySpec",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "default": "dns#dnsKeySpec"
                              },
                              "keyType": {
                                "enum": [
                                  "keySigning",
                                  "zoneSigning"
                                ],
                                "type": "string",
                                "description": "Specifies whether this is a key signing key (KSK) or a zone signing key (ZSK). Key signing keys have the Secure Entry Point flag set and, when active, are only used to sign resource record sets of type DNSKEY. Zone signing keys do not have the Secure Entry Point flag set and are used to sign all other types of resource record sets.",
                                "enumDescriptions": [
                                  "",
                                  ""
                                ]
                              },
                              "algorithm": {
                                "enum": [
                                  "rsasha1",
                                  "rsasha256",
                                  "rsasha512",
                                  "ecdsap256sha256",
                                  "ecdsap384sha384"
                                ],
                                "type": "string",
                                "description": "String mnemonic specifying the DNSSEC algorithm of this key.",
                                "enumDescriptions": [
                                  "",
                                  "",
                                  "",
                                  "",
                                  ""
                                ]
                              },
                              "keyLength": {
                                "type": "integer",
                                "format": "uint32",
                                "description": "Length of the keys in bits."
                              }
                            },
                            "description": "Parameters for DnsKey key generation. Used for generating initial keys for a new ManagedZone and as default when adding a new DnsKey."
                          },
                          "description": "Specifies parameters for generating initial DnsKeys for this ManagedZone. Can only be changed while the state is OFF."
                        }
                      },
                      "description": "DNSSEC configuration."
                    },
                    "nameServerSet": {
                      "type": "string",
                      "description": "Optionally specifies the NameServerSet for this ManagedZone. A NameServerSet is a set of DNS name servers that all host the same ManagedZones. Most users leave this field unset. If you need to use this field, contact your account team."
                    },
                    "peeringConfig": {
                      "id": "ManagedZonePeeringConfig",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "type": "string",
                          "default": "dns#managedZonePeeringConfig"
                        },
                        "targetNetwork": {
                          "id": "ManagedZonePeeringConfigTargetNetwork",
                          "type": "object",
                          "properties": {
                            "kind": {
                              "type": "string",
                              "default": "dns#managedZonePeeringConfigTargetNetwork"
                            },
                            "networkUrl": {
                              "type": "string",
                              "description": "The fully qualified URL of the VPC network to forward queries to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}"
                            },
                            "deactivateTime": {
                              "type": "string",
                              "description": "The time at which the zone was deactivated, in RFC 3339 date-time format. An empty string indicates that the peering connection is active. The producer network can deactivate a zone. The zone is automatically deactivated if the producer network that the zone targeted is deleted. Output only."
                            }
                          },
                          "description": "The network with which to peer."
                        }
                      },
                      "description": "The presence of this field indicates that DNS Peering is enabled for this zone. The value of this field contains the network to peer with."
                    },
                    "forwardingConfig": {
                      "id": "ManagedZoneForwardingConfig",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "type": "string",
                          "default": "dns#managedZoneForwardingConfig"
                        },
                        "targetNameServers": {
                          "type": "array",
                          "items": {
                            "id": "ManagedZoneForwardingConfigNameServerTarget",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "default": "dns#managedZoneForwardingConfigNameServerTarget"
                              },
                              "ipv4Address": {
                                "type": "string",
                                "description": "IPv4 address of a target name server."
                              },
                              "forwardingPath": {
                                "enum": [
                                  "default",
                                  "private"
                                ],
                                "type": "string",
                                "description": "Forwarding path for this NameServerTarget. If unset or set to DEFAULT, Cloud DNS makes forwarding decisions based on IP address ranges; that is, RFC1918 addresses go to the VPC network, non-RFC1918 addresses go to the internet. When set to PRIVATE, Cloud DNS always sends queries through the VPC network for this target.",
                                "enumDescriptions": [
                                  "Cloud DNS makes forwarding decisions based on address ranges; that is, RFC1918 addresses forward to the target through the VPC and non-RFC1918 addresses forward to the target through the internet",
                                  "Cloud DNS always forwards to this target through the VPC."
                                ]
                              }
                            }
                          },
                          "description": "List of target name servers to forward to. Cloud DNS selects the best available name server if more than one target is given."
                        }
                      },
                      "description": "The presence for this field indicates that outbound forwarding is enabled for this zone. The value of this field contains the set of destinations to forward to."
                    },
                    "reverseLookupConfig": {
                      "id": "ManagedZoneReverseLookupConfig",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "type": "string",
                          "default": "dns#managedZoneReverseLookupConfig"
                        }
                      },
                      "description": "The presence of this field indicates that this is a managed reverse lookup zone and Cloud DNS resolves reverse lookup queries using automatically configured records for VPC resources. This only applies to networks listed under private_visibility_config."
                    },
                    "serviceDirectoryConfig": {
                      "id": "ManagedZoneServiceDirectoryConfig",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "type": "string",
                          "default": "dns#managedZoneServiceDirectoryConfig"
                        },
                        "namespace": {
                          "id": "ManagedZoneServiceDirectoryConfigNamespace",
                          "type": "object",
                          "properties": {
                            "kind": {
                              "type": "string",
                              "default": "dns#managedZoneServiceDirectoryConfigNamespace"
                            },
                            "deletionTime": {
                              "type": "string",
                              "description": "The time that the namespace backing this zone was deleted; an empty string if it still exists. This is in RFC3339 text format. Output only."
                            },
                            "namespaceUrl": {
                              "type": "string",
                              "description": "The fully qualified URL of the namespace associated with the zone. Format must be https://servicedirectory.googleapis.com/v1/projects/{project}/locations/{location}/namespaces/{namespace}"
                            }
                          },
                          "description": "Contains information about the namespace associated with the zone."
                        }
                      },
                      "description": "This field links to the associated service directory namespace. Do not set this field for public zones or forwarding zones."
                    },
                    "privateVisibilityConfig": {
                      "id": "ManagedZonePrivateVisibilityConfig",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "type": "string",
                          "default": "dns#managedZonePrivateVisibilityConfig"
                        },
                        "networks": {
                          "type": "array",
                          "items": {
                            "id": "ManagedZonePrivateVisibilityConfigNetwork",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "default": "dns#managedZonePrivateVisibilityConfigNetwork"
                              },
                              "networkUrl": {
                                "type": "string",
                                "description": "The fully qualified URL of the VPC network to bind to. Format this URL like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}"
                              }
                            }
                          },
                          "description": "The list of VPC networks that can see this zone."
                        }
                      },
                      "description": "For privately visible zones, the set of Virtual Private Cloud resources that the zone is visible from."
                    }
                  },
                  "description": "The post-operation ManagedZone resource."
                },
                "oldValue": {
                  "id": "ManagedZone",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uint64",
                      "description": "Unique identifier for the resource; defined by the server (output only)"
                    },
                    "kind": {
                      "type": "string",
                      "default": "dns#managedZone"
                    },
                    "name": {
                      "type": "string",
                      "description": "User assigned name for this resource. Must be unique within the project. The name must be 1-63 characters long, must begin with a letter, end with a letter or digit, and only contain lowercase letters, digits or dashes."
                    },
                    "labels": {
                      "type": "object",
                      "description": "User labels.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "dnsName": {
                      "type": "string",
                      "description": "The DNS name of this managed zone, for instance \"example.com.\"."
                    },
                    "visibility": {
                      "enum": [
                        "public",
                        "private"
                      ],
                      "type": "string",
                      "description": "The zone's visibility: public zones are exposed to the Internet, while private zones are visible only to Virtual Private Cloud resources.",
                      "enumDescriptions": [
                        "",
                        ""
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the managed zone's function."
                    },
                    "nameServers": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Delegate your managed_zone to these virtual name servers; defined by the server (output only)"
                    },
                    "creationTime": {
                      "type": "string",
                      "description": "The time that this resource was created on the server. This is in RFC3339 text format. Output only."
                    },
                    "dnssecConfig": {
                      "id": "ManagedZoneDnsSecConfig",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "type": "string",
                          "default": "dns#managedZoneDnsSecConfig"
                        },
                        "state": {
                          "enum": [
                            "off",
                            "on",
                            "transfer"
                          ],
                          "type": "string",
                          "description": "Specifies whether DNSSEC is enabled, and what mode it is in.",
                          "enumDescriptions": [
                            "DNSSEC is disabled; the zone is not signed.",
                            "DNSSEC is enabled; the zone is signed and fully managed.",
                            "DNSSEC is enabled, but in a \"transfer\" mode."
                          ]
                        },
                        "nonExistence": {
                          "enum": [
                            "nsec",
                            "nsec3"
                          ],
                          "type": "string",
                          "description": "Specifies the mechanism for authenticated denial-of-existence responses. Can only be changed while the state is OFF.",
                          "enumDescriptions": [
                            "",
                            ""
                          ]
                        },
                        "defaultKeySpecs": {
                          "type": "array",
                          "items": {
                            "id": "DnsKeySpec",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "default": "dns#dnsKeySpec"
                              },
                              "keyType": {
                                "enum": [
                                  "keySigning",
                                  "zoneSigning"
                                ],
                                "type": "string",
                                "description": "Specifies whether this is a key signing key (KSK) or a zone signing key (ZSK). Key signing keys have the Secure Entry Point flag set and, when active, are only used to sign resource record sets of type DNSKEY. Zone signing keys do not have the Secure Entry Point flag set and are used to sign all other types of resource record sets.",
                                "enumDescriptions": [
                                  "",
                                  ""
                                ]
                              },
                              "algorithm": {
                                "enum": [
                                  "rsasha1",
                                  "rsasha256",
                                  "rsasha512",
                                  "ecdsap256sha256",
                                  "ecdsap384sha384"
                                ],
                                "type": "string",
                                "description": "String mnemonic specifying the DNSSEC algorithm of this key.",
                                "enumDescriptions": [
                                  "",
                                  "",
                                  "",
                                  "",
                                  ""
                                ]
                              },
                              "keyLength": {
                                "type": "integer",
                                "format": "uint32",
                                "description": "Length of the keys in bits."
                              }
                            },
                            "description": "Parameters for DnsKey key generation. Used for generating initial keys for a new ManagedZone and as default when adding a new DnsKey."
                          },
                          "description": "Specifies parameters for generating initial DnsKeys for this ManagedZone. Can only be changed while the state is OFF."
                        }
                      },
                      "description": "DNSSEC configuration."
                    },
                    "nameServerSet": {
                      "type": "string",
                      "description": "Optionally specifies the NameServerSet for this ManagedZone. A NameServerSet is a set of DNS name servers that all host the same ManagedZones. Most users leave this field unset. If you need to use this field, contact your account team."
                    },
                    "peeringConfig": {
                      "id": "ManagedZonePeeringConfig",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "type": "string",
                          "default": "dns#managedZonePeeringConfig"
                        },
                        "targetNetwork": {
                          "id": "ManagedZonePeeringConfigTargetNetwork",
                          "type": "object",
                          "properties": {
                            "kind": {
                              "type": "string",
                              "default": "dns#managedZonePeeringConfigTargetNetwork"
                            },
                            "networkUrl": {
                              "type": "string",
                              "description": "The fully qualified URL of the VPC network to forward queries to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}"
                            },
                            "deactivateTime": {
                              "type": "string",
                              "description": "The time at which the zone was deactivated, in RFC 3339 date-time format. An empty string indicates that the peering connection is active. The producer network can deactivate a zone. The zone is automatically deactivated if the producer network that the zone targeted is deleted. Output only."
                            }
                          },
                          "description": "The network with which to peer."
                        }
                      },
                      "description": "The presence of this field indicates that DNS Peering is enabled for this zone. The value of this field contains the network to peer with."
                    },
                    "forwardingConfig": {
                      "id": "ManagedZoneForwardingConfig",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "type": "string",
                          "default": "dns#managedZoneForwardingConfig"
                        },
                        "targetNameServers": {
                          "type": "array",
                          "items": {
                            "id": "ManagedZoneForwardingConfigNameServerTarget",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "default": "dns#managedZoneForwardingConfigNameServerTarget"
                              },
                              "ipv4Address": {
                                "type": "string",
                                "description": "IPv4 address of a target name server."
                              },
                              "forwardingPath": {
                                "enum": [
                                  "default",
                                  "private"
                                ],
                                "type": "string",
                                "description": "Forwarding path for this NameServerTarget. If unset or set to DEFAULT, Cloud DNS makes forwarding decisions based on IP address ranges; that is, RFC1918 addresses go to the VPC network, non-RFC1918 addresses go to the internet. When set to PRIVATE, Cloud DNS always sends queries through the VPC network for this target.",
                                "enumDescriptions": [
                                  "Cloud DNS makes forwarding decisions based on address ranges; that is, RFC1918 addresses forward to the target through the VPC and non-RFC1918 addresses forward to the target through the internet",
                                  "Cloud DNS always forwards to this target through the VPC."
                                ]
                              }
                            }
                          },
                          "description": "List of target name servers to forward to. Cloud DNS selects the best available name server if more than one target is given."
                        }
                      },
                      "description": "The presence for this field indicates that outbound forwarding is enabled for this zone. The value of this field contains the set of destinations to forward to."
                    },
                    "reverseLookupConfig": {
                      "id": "ManagedZoneReverseLookupConfig",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "type": "string",
                          "default": "dns#managedZoneReverseLookupConfig"
                        }
                      },
                      "description": "The presence of this field indicates that this is a managed reverse lookup zone and Cloud DNS resolves reverse lookup queries using automatically configured records for VPC resources. This only applies to networks listed under private_visibility_config."
                    },
                    "serviceDirectoryConfig": {
                      "id": "ManagedZoneServiceDirectoryConfig",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "type": "string",
                          "default": "dns#managedZoneServiceDirectoryConfig"
                        },
                        "namespace": {
                          "id": "ManagedZoneServiceDirectoryConfigNamespace",
                          "type": "object",
                          "properties": {
                            "kind": {
                              "type": "string",
                              "default": "dns#managedZoneServiceDirectoryConfigNamespace"
                            },
                            "deletionTime": {
                              "type": "string",
                              "description": "The time that the namespace backing this zone was deleted; an empty string if it still exists. This is in RFC3339 text format. Output only."
                            },
                            "namespaceUrl": {
                              "type": "string",
                              "description": "The fully qualified URL of the namespace associated with the zone. Format must be https://servicedirectory.googleapis.com/v1/projects/{project}/locations/{location}/namespaces/{namespace}"
                            }
                          },
                          "description": "Contains information about the namespace associated with the zone."
                        }
                      },
                      "description": "This field links to the associated service directory namespace. Do not set this field for public zones or forwarding zones."
                    },
                    "privateVisibilityConfig": {
                      "id": "ManagedZonePrivateVisibilityConfig",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "type": "string",
                          "default": "dns#managedZonePrivateVisibilityConfig"
                        },
                        "networks": {
                          "type": "array",
                          "items": {
                            "id": "ManagedZonePrivateVisibilityConfigNetwork",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "default": "dns#managedZonePrivateVisibilityConfigNetwork"
                              },
                              "networkUrl": {
                                "type": "string",
                                "description": "The fully qualified URL of the VPC network to bind to. Format this URL like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}"
                              }
                            }
                          },
                          "description": "The list of VPC networks that can see this zone."
                        }
                      },
                      "description": "For privately visible zones, the set of Virtual Private Cloud resources that the zone is visible from."
                    }
                  },
                  "description": "The pre-operation ManagedZone resource."
                }
              },
              "description": "Only populated if the operation targeted a ManagedZone (output only)."
            },
            "dnsKeyContext": {
              "id": "OperationDnsKeyContext",
              "type": "object",
              "properties": {
                "newValue": {
                  "id": "DnsKey",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the resource; defined by the server (output only)."
                    },
                    "kind": {
                      "type": "string",
                      "default": "dns#dnsKey"
                    },
                    "type": {
                      "enum": [
                        "keySigning",
                        "zoneSigning"
                      ],
                      "type": "string",
                      "description": "One of \"KEY_SIGNING\" or \"ZONE_SIGNING\". Keys of type KEY_SIGNING have the Secure Entry Point flag set and, when active, are used to sign only resource record sets of type DNSKEY. Otherwise, the Secure Entry Point flag is cleared, and this key is used to sign only resource record sets of other types. Immutable after creation time.",
                      "enumDescriptions": [
                        "",
                        ""
                      ]
                    },
                    "keyTag": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The key tag is a non-cryptographic hash of the a DNSKEY resource record associated with this DnsKey. The key tag can be used to identify a DNSKEY more quickly (but it is not a unique identifier). In particular, the key tag is used in a parent zone's DS record to point at the DNSKEY in this child ManagedZone. The key tag is a number in the range [0, 65535] and the algorithm to calculate it is specified in RFC4034 Appendix B. Output only."
                    },
                    "digests": {
                      "type": "array",
                      "items": {
                        "id": "DnsKeyDigest",
                        "type": "object",
                        "properties": {
                          "type": {
                            "enum": [
                              "sha1",
                              "sha256",
                              "sha384"
                            ],
                            "type": "string",
                            "description": "Specifies the algorithm used to calculate this digest.",
                            "enumDescriptions": [
                              "",
                              "",
                              ""
                            ]
                          },
                          "digest": {
                            "type": "string",
                            "description": "The base-16 encoded bytes of this digest. Suitable for use in a DS resource record."
                          }
                        }
                      },
                      "description": "Cryptographic hashes of the DNSKEY resource record associated with this DnsKey. These digests are needed to construct a DS record that points at this DNS key. Output only."
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Active keys are used to sign subsequent changes to the ManagedZone. Inactive keys are still present as DNSKEY Resource Records for the use of resolvers validating existing signatures."
                    },
                    "algorithm": {
                      "enum": [
                        "rsasha1",
                        "rsasha256",
                        "rsasha512",
                        "ecdsap256sha256",
                        "ecdsap384sha384"
                      ],
                      "type": "string",
                      "description": "String mnemonic specifying the DNSSEC algorithm of this key. Immutable after creation time.",
                      "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                      ]
                    },
                    "keyLength": {
                      "type": "integer",
                      "format": "uint32",
                      "description": "Length of the key in bits. Specified at creation time, and then immutable."
                    },
                    "publicKey": {
                      "type": "string",
                      "description": "Base64 encoded public half of this key. Output only."
                    },
                    "description": {
                      "type": "string",
                      "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the resource's function."
                    },
                    "creationTime": {
                      "type": "string",
                      "description": "The time that this resource was created in the control plane. This is in RFC3339 text format. Output only."
                    }
                  },
                  "description": "A DNSSEC key pair."
                },
                "oldValue": {
                  "id": "DnsKey",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the resource; defined by the server (output only)."
                    },
                    "kind": {
                      "type": "string",
                      "default": "dns#dnsKey"
                    },
                    "type": {
                      "enum": [
                        "keySigning",
                        "zoneSigning"
                      ],
                      "type": "string",
                      "description": "One of \"KEY_SIGNING\" or \"ZONE_SIGNING\". Keys of type KEY_SIGNING have the Secure Entry Point flag set and, when active, are used to sign only resource record sets of type DNSKEY. Otherwise, the Secure Entry Point flag is cleared, and this key is used to sign only resource record sets of other types. Immutable after creation time.",
                      "enumDescriptions": [
                        "",
                        ""
                      ]
                    },
                    "keyTag": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The key tag is a non-cryptographic hash of the a DNSKEY resource record associated with this DnsKey. The key tag can be used to identify a DNSKEY more quickly (but it is not a unique identifier). In particular, the key tag is used in a parent zone's DS record to point at the DNSKEY in this child ManagedZone. The key tag is a number in the range [0, 65535] and the algorithm to calculate it is specified in RFC4034 Appendix B. Output only."
                    },
                    "digests": {
                      "type": "array",
                      "items": {
                        "id": "DnsKeyDigest",
                        "type": "object",
                        "properties": {
                          "type": {
                            "enum": [
                              "sha1",
                              "sha256",
                              "sha384"
                            ],
                            "type": "string",
                            "description": "Specifies the algorithm used to calculate this digest.",
                            "enumDescriptions": [
                              "",
                              "",
                              ""
                            ]
                          },
                          "digest": {
                            "type": "string",
                            "description": "The base-16 encoded bytes of this digest. Suitable for use in a DS resource record."
                          }
                        }
                      },
                      "description": "Cryptographic hashes of the DNSKEY resource record associated with this DnsKey. These digests are needed to construct a DS record that points at this DNS key. Output only."
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Active keys are used to sign subsequent changes to the ManagedZone. Inactive keys are still present as DNSKEY Resource Records for the use of resolvers validating existing signatures."
                    },
                    "algorithm": {
                      "enum": [
                        "rsasha1",
                        "rsasha256",
                        "rsasha512",
                        "ecdsap256sha256",
                        "ecdsap384sha384"
                      ],
                      "type": "string",
                      "description": "String mnemonic specifying the DNSSEC algorithm of this key. Immutable after creation time.",
                      "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                      ]
                    },
                    "keyLength": {
                      "type": "integer",
                      "format": "uint32",
                      "description": "Length of the key in bits. Specified at creation time, and then immutable."
                    },
                    "publicKey": {
                      "type": "string",
                      "description": "Base64 encoded public half of this key. Output only."
                    },
                    "description": {
                      "type": "string",
                      "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the resource's function."
                    },
                    "creationTime": {
                      "type": "string",
                      "description": "The time that this resource was created in the control plane. This is in RFC3339 text format. Output only."
                    }
                  },
                  "description": "A DNSSEC key pair."
                }
              },
              "description": "Only populated if the operation targeted a DnsKey (output only)."
            }
          },
          "description": "An operation represents a successful mutation performed on a Cloud DNS resource. Operations provide: - An audit log of server resource mutations. - A way to recover/retry API calls in the case where the response is never received by the caller. Use the caller specified client_operation_id."
        }
      ]
  managedZoneOperations.list:
    description: |-
      Enumerates Operations for the given ManagedZone.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dns/docs/reference/v1/managedZoneOperations/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ManagedZoneOperationsListResponse",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "dns#managedZoneOperationsListResponse"
            },
            "header": {
              "id": "ResponseHeader",
              "type": "object",
              "properties": {
                "operationId": {
                  "type": "string",
                  "description": "For mutating operation requests that completed successfully. This is the client_operation_id if the client specified it, otherwise it is generated by the server (output only)."
                }
              },
              "description": "Elements common to every response."
            },
            "operations": {
              "type": "array",
              "items": {
                "id": "Operation",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique identifier for the resource. This is the client_operation_id if the client specified it when the mutation was initiated, otherwise, it is generated by the server. The name must be 1-63 characters long and match the regular expression [-a-z0-9]? (output only)"
                  },
                  "kind": {
                    "type": "string",
                    "default": "dns#operation"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the operation. Operations include insert, update, and delete (output only)."
                  },
                  "user": {
                    "type": "string",
                    "description": "User who requested the operation, for example: user@example.com. cloud-dns-system for operations automatically done by the system. (output only)"
                  },
                  "status": {
                    "enum": [
                      "pending",
                      "done"
                    ],
                    "type": "string",
                    "description": "Status of the operation. Can be one of the following: \"PENDING\" or \"DONE\" (output only). A status of \"DONE\" means that the request to update the authoritative servers has been sent, but the servers might not be updated yet.",
                    "enumDescriptions": [
                      "",
                      ""
                    ]
                  },
                  "startTime": {
                    "type": "string",
                    "description": "The time that this operation was started by the server. This is in RFC3339 text format (output only)."
                  },
                  "zoneContext": {
                    "id": "OperationManagedZoneContext",
                    "type": "object",
                    "properties": {
                      "newValue": {
                        "id": "ManagedZone",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uint64",
                            "description": "Unique identifier for the resource; defined by the server (output only)"
                          },
                          "kind": {
                            "type": "string",
                            "default": "dns#managedZone"
                          },
                          "name": {
                            "type": "string",
                            "description": "User assigned name for this resource. Must be unique within the project. The name must be 1-63 characters long, must begin with a letter, end with a letter or digit, and only contain lowercase letters, digits or dashes."
                          },
                          "labels": {
                            "type": "object",
                            "description": "User labels.",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "dnsName": {
                            "type": "string",
                            "description": "The DNS name of this managed zone, for instance \"example.com.\"."
                          },
                          "visibility": {
                            "enum": [
                              "public",
                              "private"
                            ],
                            "type": "string",
                            "description": "The zone's visibility: public zones are exposed to the Internet, while private zones are visible only to Virtual Private Cloud resources.",
                            "enumDescriptions": [
                              "",
                              ""
                            ]
                          },
                          "description": {
                            "type": "string",
                            "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the managed zone's function."
                          },
                          "nameServers": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Delegate your managed_zone to these virtual name servers; defined by the server (output only)"
                          },
                          "creationTime": {
                            "type": "string",
                            "description": "The time that this resource was created on the server. This is in RFC3339 text format. Output only."
                          },
                          "dnssecConfig": {
                            "id": "ManagedZoneDnsSecConfig",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "default": "dns#managedZoneDnsSecConfig"
                              },
                              "state": {
                                "enum": [
                                  "off",
                                  "on",
                                  "transfer"
                                ],
                                "type": "string",
                                "description": "Specifies whether DNSSEC is enabled, and what mode it is in.",
                                "enumDescriptions": [
                                  "DNSSEC is disabled; the zone is not signed.",
                                  "DNSSEC is enabled; the zone is signed and fully managed.",
                                  "DNSSEC is enabled, but in a \"transfer\" mode."
                                ]
                              },
                              "nonExistence": {
                                "enum": [
                                  "nsec",
                                  "nsec3"
                                ],
                                "type": "string",
                                "description": "Specifies the mechanism for authenticated denial-of-existence responses. Can only be changed while the state is OFF.",
                                "enumDescriptions": [
                                  "",
                                  ""
                                ]
                              },
                              "defaultKeySpecs": {
                                "type": "array",
                                "items": {
                                  "id": "DnsKeySpec",
                                  "type": "object",
                                  "properties": {
                                    "kind": {
                                      "type": "string",
                                      "default": "dns#dnsKeySpec"
                                    },
                                    "keyType": {
                                      "enum": [
                                        "keySigning",
                                        "zoneSigning"
                                      ],
                                      "type": "string",
                                      "description": "Specifies whether this is a key signing key (KSK) or a zone signing key (ZSK). Key signing keys have the Secure Entry Point flag set and, when active, are only used to sign resource record sets of type DNSKEY. Zone signing keys do not have the Secure Entry Point flag set and are used to sign all other types of resource record sets.",
                                      "enumDescriptions": [
                                        "",
                                        ""
                                      ]
                                    },
                                    "algorithm": {
                                      "enum": [
                                        "rsasha1",
                                        "rsasha256",
                                        "rsasha512",
                                        "ecdsap256sha256",
                                        "ecdsap384sha384"
                                      ],
                                      "type": "string",
                                      "description": "String mnemonic specifying the DNSSEC algorithm of this key.",
                                      "enumDescriptions": [
                                        "",
                                        "",
                                        "",
                                        "",
                                        ""
                                      ]
                                    },
                                    "keyLength": {
                                      "type": "integer",
                                      "format": "uint32",
                                      "description": "Length of the keys in bits."
                                    }
                                  },
                                  "description": "Parameters for DnsKey key generation. Used for generating initial keys for a new ManagedZone and as default when adding a new DnsKey."
                                },
                                "description": "Specifies parameters for generating initial DnsKeys for this ManagedZone. Can only be changed while the state is OFF."
                              }
                            },
                            "description": "DNSSEC configuration."
                          },
                          "nameServerSet": {
                            "type": "string",
                            "description": "Optionally specifies the NameServerSet for this ManagedZone. A NameServerSet is a set of DNS name servers that all host the same ManagedZones. Most users leave this field unset. If you need to use this field, contact your account team."
                          },
                          "peeringConfig": {
                            "id": "ManagedZonePeeringConfig",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "default": "dns#managedZonePeeringConfig"
                              },
                              "targetNetwork": {
                                "id": "ManagedZonePeeringConfigTargetNetwork",
                                "type": "object",
                                "properties": {
                                  "kind": {
                                    "type": "string",
                                    "default": "dns#managedZonePeeringConfigTargetNetwork"
                                  },
                                  "networkUrl": {
                                    "type": "string",
                                    "description": "The fully qualified URL of the VPC network to forward queries to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}"
                                  },
                                  "deactivateTime": {
                                    "type": "string",
                                    "description": "The time at which the zone was deactivated, in RFC 3339 date-time format. An empty string indicates that the peering connection is active. The producer network can deactivate a zone. The zone is automatically deactivated if the producer network that the zone targeted is deleted. Output only."
                                  }
                                },
                                "description": "The network with which to peer."
                              }
                            },
                            "description": "The presence of this field indicates that DNS Peering is enabled for this zone. The value of this field contains the network to peer with."
                          },
                          "forwardingConfig": {
                            "id": "ManagedZoneForwardingConfig",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "default": "dns#managedZoneForwardingConfig"
                              },
                              "targetNameServers": {
                                "type": "array",
                                "items": {
                                  "id": "ManagedZoneForwardingConfigNameServerTarget",
                                  "type": "object",
                                  "properties": {
                                    "kind": {
                                      "type": "string",
                                      "default": "dns#managedZoneForwardingConfigNameServerTarget"
                                    },
                                    "ipv4Address": {
                                      "type": "string",
                                      "description": "IPv4 address of a target name server."
                                    },
                                    "forwardingPath": {
                                      "enum": [
                                        "default",
                                        "private"
                                      ],
                                      "type": "string",
                                      "description": "Forwarding path for this NameServerTarget. If unset or set to DEFAULT, Cloud DNS makes forwarding decisions based on IP address ranges; that is, RFC1918 addresses go to the VPC network, non-RFC1918 addresses go to the internet. When set to PRIVATE, Cloud DNS always sends queries through the VPC network for this target.",
                                      "enumDescriptions": [
                                        "Cloud DNS makes forwarding decisions based on address ranges; that is, RFC1918 addresses forward to the target through the VPC and non-RFC1918 addresses forward to the target through the internet",
                                        "Cloud DNS always forwards to this target through the VPC."
                                      ]
                                    }
                                  }
                                },
                                "description": "List of target name servers to forward to. Cloud DNS selects the best available name server if more than one target is given."
                              }
                            },
                            "description": "The presence for this field indicates that outbound forwarding is enabled for this zone. The value of this field contains the set of destinations to forward to."
                          },
                          "reverseLookupConfig": {
                            "id": "ManagedZoneReverseLookupConfig",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "default": "dns#managedZoneReverseLookupConfig"
                              }
                            },
                            "description": "The presence of this field indicates that this is a managed reverse lookup zone and Cloud DNS resolves reverse lookup queries using automatically configured records for VPC resources. This only applies to networks listed under private_visibility_config."
                          },
                          "serviceDirectoryConfig": {
                            "id": "ManagedZoneServiceDirectoryConfig",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "default": "dns#managedZoneServiceDirectoryConfig"
                              },
                              "namespace": {
                                "id": "ManagedZoneServiceDirectoryConfigNamespace",
                                "type": "object",
                                "properties": {
                                  "kind": {
                                    "type": "string",
                                    "default": "dns#managedZoneServiceDirectoryConfigNamespace"
                                  },
                                  "deletionTime": {
                                    "type": "string",
                                    "description": "The time that the namespace backing this zone was deleted; an empty string if it still exists. This is in RFC3339 text format. Output only."
                                  },
                                  "namespaceUrl": {
                                    "type": "string",
                                    "description": "The fully qualified URL of the namespace associated with the zone. Format must be https://servicedirectory.googleapis.com/v1/projects/{project}/locations/{location}/namespaces/{namespace}"
                                  }
                                },
                                "description": "Contains information about the namespace associated with the zone."
                              }
                            },
                            "description": "This field links to the associated service directory namespace. Do not set this field for public zones or forwarding zones."
                          },
                          "privateVisibilityConfig": {
                            "id": "ManagedZonePrivateVisibilityConfig",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "default": "dns#managedZonePrivateVisibilityConfig"
                              },
                              "networks": {
                                "type": "array",
                                "items": {
                                  "id": "ManagedZonePrivateVisibilityConfigNetwork",
                                  "type": "object",
                                  "properties": {
                                    "kind": {
                                      "type": "string",
                                      "default": "dns#managedZonePrivateVisibilityConfigNetwork"
                                    },
                                    "networkUrl": {
                                      "type": "string",
                                      "description": "The fully qualified URL of the VPC network to bind to. Format this URL like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}"
                                    }
                                  }
                                },
                                "description": "The list of VPC networks that can see this zone."
                              }
                            },
                            "description": "For privately visible zones, the set of Virtual Private Cloud resources that the zone is visible from."
                          }
                        },
                        "description": "The post-operation ManagedZone resource."
                      },
                      "oldValue": {
                        "id": "ManagedZone",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uint64",
                            "description": "Unique identifier for the resource; defined by the server (output only)"
                          },
                          "kind": {
                            "type": "string",
                            "default": "dns#managedZone"
                          },
                          "name": {
                            "type": "string",
                            "description": "User assigned name for this resource. Must be unique within the project. The name must be 1-63 characters long, must begin with a letter, end with a letter or digit, and only contain lowercase letters, digits or dashes."
                          },
                          "labels": {
                            "type": "object",
                            "description": "User labels.",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "dnsName": {
                            "type": "string",
                            "description": "The DNS name of this managed zone, for instance \"example.com.\"."
                          },
                          "visibility": {
                            "enum": [
                              "public",
                              "private"
                            ],
                            "type": "string",
                            "description": "The zone's visibility: public zones are exposed to the Internet, while private zones are visible only to Virtual Private Cloud resources.",
                            "enumDescriptions": [
                              "",
                              ""
                            ]
                          },
                          "description": {
                            "type": "string",
                            "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the managed zone's function."
                          },
                          "nameServers": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Delegate your managed_zone to these virtual name servers; defined by the server (output only)"
                          },
                          "creationTime": {
                            "type": "string",
                            "description": "The time that this resource was created on the server. This is in RFC3339 text format. Output only."
                          },
                          "dnssecConfig": {
                            "id": "ManagedZoneDnsSecConfig",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "default": "dns#managedZoneDnsSecConfig"
                              },
                              "state": {
                                "enum": [
                                  "off",
                                  "on",
                                  "transfer"
                                ],
                                "type": "string",
                                "description": "Specifies whether DNSSEC is enabled, and what mode it is in.",
                                "enumDescriptions": [
                                  "DNSSEC is disabled; the zone is not signed.",
                                  "DNSSEC is enabled; the zone is signed and fully managed.",
                                  "DNSSEC is enabled, but in a \"transfer\" mode."
                                ]
                              },
                              "nonExistence": {
                                "enum": [
                                  "nsec",
                                  "nsec3"
                                ],
                                "type": "string",
                                "description": "Specifies the mechanism for authenticated denial-of-existence responses. Can only be changed while the state is OFF.",
                                "enumDescriptions": [
                                  "",
                                  ""
                                ]
                              },
                              "defaultKeySpecs": {
                                "type": "array",
                                "items": {
                                  "id": "DnsKeySpec",
                                  "type": "object",
                                  "properties": {
                                    "kind": {
                                      "type": "string",
                                      "default": "dns#dnsKeySpec"
                                    },
                                    "keyType": {
                                      "enum": [
                                        "keySigning",
                                        "zoneSigning"
                                      ],
                                      "type": "string",
                                      "description": "Specifies whether this is a key signing key (KSK) or a zone signing key (ZSK). Key signing keys have the Secure Entry Point flag set and, when active, are only used to sign resource record sets of type DNSKEY. Zone signing keys do not have the Secure Entry Point flag set and are used to sign all other types of resource record sets.",
                                      "enumDescriptions": [
                                        "",
                                        ""
                                      ]
                                    },
                                    "algorithm": {
                                      "enum": [
                                        "rsasha1",
                                        "rsasha256",
                                        "rsasha512",
                                        "ecdsap256sha256",
                                        "ecdsap384sha384"
                                      ],
                                      "type": "string",
                                      "description": "String mnemonic specifying the DNSSEC algorithm of this key.",
                                      "enumDescriptions": [
                                        "",
                                        "",
                                        "",
                                        "",
                                        ""
                                      ]
                                    },
                                    "keyLength": {
                                      "type": "integer",
                                      "format": "uint32",
                                      "description": "Length of the keys in bits."
                                    }
                                  },
                                  "description": "Parameters for DnsKey key generation. Used for generating initial keys for a new ManagedZone and as default when adding a new DnsKey."
                                },
                                "description": "Specifies parameters for generating initial DnsKeys for this ManagedZone. Can only be changed while the state is OFF."
                              }
                            },
                            "description": "DNSSEC configuration."
                          },
                          "nameServerSet": {
                            "type": "string",
                            "description": "Optionally specifies the NameServerSet for this ManagedZone. A NameServerSet is a set of DNS name servers that all host the same ManagedZones. Most users leave this field unset. If you need to use this field, contact your account team."
                          },
                          "peeringConfig": {
                            "id": "ManagedZonePeeringConfig",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "default": "dns#managedZonePeeringConfig"
                              },
                              "targetNetwork": {
                                "id": "ManagedZonePeeringConfigTargetNetwork",
                                "type": "object",
                                "properties": {
                                  "kind": {
                                    "type": "string",
                                    "default": "dns#managedZonePeeringConfigTargetNetwork"
                                  },
                                  "networkUrl": {
                                    "type": "string",
                                    "description": "The fully qualified URL of the VPC network to forward queries to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}"
                                  },
                                  "deactivateTime": {
                                    "type": "string",
                                    "description": "The time at which the zone was deactivated, in RFC 3339 date-time format. An empty string indicates that the peering connection is active. The producer network can deactivate a zone. The zone is automatically deactivated if the producer network that the zone targeted is deleted. Output only."
                                  }
                                },
                                "description": "The network with which to peer."
                              }
                            },
                            "description": "The presence of this field indicates that DNS Peering is enabled for this zone. The value of this field contains the network to peer with."
                          },
                          "forwardingConfig": {
                            "id": "ManagedZoneForwardingConfig",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "default": "dns#managedZoneForwardingConfig"
                              },
                              "targetNameServers": {
                                "type": "array",
                                "items": {
                                  "id": "ManagedZoneForwardingConfigNameServerTarget",
                                  "type": "object",
                                  "properties": {
                                    "kind": {
                                      "type": "string",
                                      "default": "dns#managedZoneForwardingConfigNameServerTarget"
                                    },
                                    "ipv4Address": {
                                      "type": "string",
                                      "description": "IPv4 address of a target name server."
                                    },
                                    "forwardingPath": {
                                      "enum": [
                                        "default",
                                        "private"
                                      ],
                                      "type": "string",
                                      "description": "Forwarding path for this NameServerTarget. If unset or set to DEFAULT, Cloud DNS makes forwarding decisions based on IP address ranges; that is, RFC1918 addresses go to the VPC network, non-RFC1918 addresses go to the internet. When set to PRIVATE, Cloud DNS always sends queries through the VPC network for this target.",
                                      "enumDescriptions": [
                                        "Cloud DNS makes forwarding decisions based on address ranges; that is, RFC1918 addresses forward to the target through the VPC and non-RFC1918 addresses forward to the target through the internet",
                                        "Cloud DNS always forwards to this target through the VPC."
                                      ]
                                    }
                                  }
                                },
                                "description": "List of target name servers to forward to. Cloud DNS selects the best available name server if more than one target is given."
                              }
                            },
                            "description": "The presence for this field indicates that outbound forwarding is enabled for this zone. The value of this field contains the set of destinations to forward to."
                          },
                          "reverseLookupConfig": {
                            "id": "ManagedZoneReverseLookupConfig",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "default": "dns#managedZoneReverseLookupConfig"
                              }
                            },
                            "description": "The presence of this field indicates that this is a managed reverse lookup zone and Cloud DNS resolves reverse lookup queries using automatically configured records for VPC resources. This only applies to networks listed under private_visibility_config."
                          },
                          "serviceDirectoryConfig": {
                            "id": "ManagedZoneServiceDirectoryConfig",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "default": "dns#managedZoneServiceDirectoryConfig"
                              },
                              "namespace": {
                                "id": "ManagedZoneServiceDirectoryConfigNamespace",
                                "type": "object",
                                "properties": {
                                  "kind": {
                                    "type": "string",
                                    "default": "dns#managedZoneServiceDirectoryConfigNamespace"
                                  },
                                  "deletionTime": {
                                    "type": "string",
                                    "description": "The time that the namespace backing this zone was deleted; an empty string if it still exists. This is in RFC3339 text format. Output only."
                                  },
                                  "namespaceUrl": {
                                    "type": "string",
                                    "description": "The fully qualified URL of the namespace associated with the zone. Format must be https://servicedirectory.googleapis.com/v1/projects/{project}/locations/{location}/namespaces/{namespace}"
                                  }
                                },
                                "description": "Contains information about the namespace associated with the zone."
                              }
                            },
                            "description": "This field links to the associated service directory namespace. Do not set this field for public zones or forwarding zones."
                          },
                          "privateVisibilityConfig": {
                            "id": "ManagedZonePrivateVisibilityConfig",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "default": "dns#managedZonePrivateVisibilityConfig"
                              },
                              "networks": {
                                "type": "array",
                                "items": {
                                  "id": "ManagedZonePrivateVisibilityConfigNetwork",
                                  "type": "object",
                                  "properties": {
                                    "kind": {
                                      "type": "string",
                                      "default": "dns#managedZonePrivateVisibilityConfigNetwork"
                                    },
                                    "networkUrl": {
                                      "type": "string",
                                      "description": "The fully qualified URL of the VPC network to bind to. Format this URL like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}"
                                    }
                                  }
                                },
                                "description": "The list of VPC networks that can see this zone."
                              }
                            },
                            "description": "For privately visible zones, the set of Virtual Private Cloud resources that the zone is visible from."
                          }
                        },
                        "description": "The pre-operation ManagedZone resource."
                      }
                    },
                    "description": "Only populated if the operation targeted a ManagedZone (output only)."
                  },
                  "dnsKeyContext": {
                    "id": "OperationDnsKeyContext",
                    "type": "object",
                    "properties": {
                      "newValue": {
                        "id": "DnsKey",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for the resource; defined by the server (output only)."
                          },
                          "kind": {
                            "type": "string",
                            "default": "dns#dnsKey"
                          },
                          "type": {
                            "enum": [
                              "keySigning",
                              "zoneSigning"
                            ],
                            "type": "string",
                            "description": "One of \"KEY_SIGNING\" or \"ZONE_SIGNING\". Keys of type KEY_SIGNING have the Secure Entry Point flag set and, when active, are used to sign only resource record sets of type DNSKEY. Otherwise, the Secure Entry Point flag is cleared, and this key is used to sign only resource record sets of other types. Immutable after creation time.",
                            "enumDescriptions": [
                              "",
                              ""
                            ]
                          },
                          "keyTag": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The key tag is a non-cryptographic hash of the a DNSKEY resource record associated with this DnsKey. The key tag can be used to identify a DNSKEY more quickly (but it is not a unique identifier). In particular, the key tag is used in a parent zone's DS record to point at the DNSKEY in this child ManagedZone. The key tag is a number in the range [0, 65535] and the algorithm to calculate it is specified in RFC4034 Appendix B. Output only."
                          },
                          "digests": {
                            "type": "array",
                            "items": {
                              "id": "DnsKeyDigest",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "enum": [
                                    "sha1",
                                    "sha256",
                                    "sha384"
                                  ],
                                  "type": "string",
                                  "description": "Specifies the algorithm used to calculate this digest.",
                                  "enumDescriptions": [
                                    "",
                                    "",
                                    ""
                                  ]
                                },
                                "digest": {
                                  "type": "string",
                                  "description": "The base-16 encoded bytes of this digest. Suitable for use in a DS resource record."
                                }
                              }
                            },
                            "description": "Cryptographic hashes of the DNSKEY resource record associated with this DnsKey. These digests are needed to construct a DS record that points at this DNS key. Output only."
                          },
                          "isActive": {
                            "type": "boolean",
                            "description": "Active keys are used to sign subsequent changes to the ManagedZone. Inactive keys are still present as DNSKEY Resource Records for the use of resolvers validating existing signatures."
                          },
                          "algorithm": {
                            "enum": [
                              "rsasha1",
                              "rsasha256",
                              "rsasha512",
                              "ecdsap256sha256",
                              "ecdsap384sha384"
                            ],
                            "type": "string",
                            "description": "String mnemonic specifying the DNSSEC algorithm of this key. Immutable after creation time.",
                            "enumDescriptions": [
                              "",
                              "",
                              "",
                              "",
                              ""
                            ]
                          },
                          "keyLength": {
                            "type": "integer",
                            "format": "uint32",
                            "description": "Length of the key in bits. Specified at creation time, and then immutable."
                          },
                          "publicKey": {
                            "type": "string",
                            "description": "Base64 encoded public half of this key. Output only."
                          },
                          "description": {
                            "type": "string",
                            "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the resource's function."
                          },
                          "creationTime": {
                            "type": "string",
                            "description": "The time that this resource was created in the control plane. This is in RFC3339 text format. Output only."
                          }
                        },
                        "description": "A DNSSEC key pair."
                      },
                      "oldValue": {
                        "id": "DnsKey",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for the resource; defined by the server (output only)."
                          },
                          "kind": {
                            "type": "string",
                            "default": "dns#dnsKey"
                          },
                          "type": {
                            "enum": [
                              "keySigning",
                              "zoneSigning"
                            ],
                            "type": "string",
                            "description": "One of \"KEY_SIGNING\" or \"ZONE_SIGNING\". Keys of type KEY_SIGNING have the Secure Entry Point flag set and, when active, are used to sign only resource record sets of type DNSKEY. Otherwise, the Secure Entry Point flag is cleared, and this key is used to sign only resource record sets of other types. Immutable after creation time.",
                            "enumDescriptions": [
                              "",
                              ""
                            ]
                          },
                          "keyTag": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The key tag is a non-cryptographic hash of the a DNSKEY resource record associated with this DnsKey. The key tag can be used to identify a DNSKEY more quickly (but it is not a unique identifier). In particular, the key tag is used in a parent zone's DS record to point at the DNSKEY in this child ManagedZone. The key tag is a number in the range [0, 65535] and the algorithm to calculate it is specified in RFC4034 Appendix B. Output only."
                          },
                          "digests": {
                            "type": "array",
                            "items": {
                              "id": "DnsKeyDigest",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "enum": [
                                    "sha1",
                                    "sha256",
                                    "sha384"
                                  ],
                                  "type": "string",
                                  "description": "Specifies the algorithm used to calculate this digest.",
                                  "enumDescriptions": [
                                    "",
                                    "",
                                    ""
                                  ]
                                },
                                "digest": {
                                  "type": "string",
                                  "description": "The base-16 encoded bytes of this digest. Suitable for use in a DS resource record."
                                }
                              }
                            },
                            "description": "Cryptographic hashes of the DNSKEY resource record associated with this DnsKey. These digests are needed to construct a DS record that points at this DNS key. Output only."
                          },
                          "isActive": {
                            "type": "boolean",
                            "description": "Active keys are used to sign subsequent changes to the ManagedZone. Inactive keys are still present as DNSKEY Resource Records for the use of resolvers validating existing signatures."
                          },
                          "algorithm": {
                            "enum": [
                              "rsasha1",
                              "rsasha256",
                              "rsasha512",
                              "ecdsap256sha256",
                              "ecdsap384sha384"
                            ],
                            "type": "string",
                            "description": "String mnemonic specifying the DNSSEC algorithm of this key. Immutable after creation time.",
                            "enumDescriptions": [
                              "",
                              "",
                              "",
                              "",
                              ""
                            ]
                          },
                          "keyLength": {
                            "type": "integer",
                            "format": "uint32",
                            "description": "Length of the key in bits. Specified at creation time, and then immutable."
                          },
                          "publicKey": {
                            "type": "string",
                            "description": "Base64 encoded public half of this key. Output only."
                          },
                          "description": {
                            "type": "string",
                            "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the resource's function."
                          },
                          "creationTime": {
                            "type": "string",
                            "description": "The time that this resource was created in the control plane. This is in RFC3339 text format. Output only."
                          }
                        },
                        "description": "A DNSSEC key pair."
                      }
                    },
                    "description": "Only populated if the operation targeted a DnsKey (output only)."
                  }
                },
                "description": "An operation represents a successful mutation performed on a Cloud DNS resource. Operations provide: - An audit log of server resource mutations. - A way to recover/retry API calls in the case where the response is never received by the caller. Use the caller specified client_operation_id."
              },
              "description": "The operation resources."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. This lets you retrieve the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size."
            }
          }
        }
      ]
  managedZones.create:
    description: |-
      Creates a new ManagedZone.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dns/docs/reference/v1/managedZones/create
    example:
      inputs: [
        {
          "id": "ManagedZone",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uint64",
              "description": "Unique identifier for the resource; defined by the server (output only)"
            },
            "kind": {
              "type": "string",
              "default": "dns#managedZone"
            },
            "name": {
              "type": "string",
              "description": "User assigned name for this resource. Must be unique within the project. The name must be 1-63 characters long, must begin with a letter, end with a letter or digit, and only contain lowercase letters, digits or dashes."
            },
            "labels": {
              "type": "object",
              "description": "User labels.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "dnsName": {
              "type": "string",
              "description": "The DNS name of this managed zone, for instance \"example.com.\"."
            },
            "visibility": {
              "enum": [
                "public",
                "private"
              ],
              "type": "string",
              "description": "The zone's visibility: public zones are exposed to the Internet, while private zones are visible only to Virtual Private Cloud resources.",
              "enumDescriptions": [
                "",
                ""
              ]
            },
            "description": {
              "type": "string",
              "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the managed zone's function."
            },
            "nameServers": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Delegate your managed_zone to these virtual name servers; defined by the server (output only)"
            },
            "creationTime": {
              "type": "string",
              "description": "The time that this resource was created on the server. This is in RFC3339 text format. Output only."
            },
            "dnssecConfig": {
              "id": "ManagedZoneDnsSecConfig",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "dns#managedZoneDnsSecConfig"
                },
                "state": {
                  "enum": [
                    "off",
                    "on",
                    "transfer"
                  ],
                  "type": "string",
                  "description": "Specifies whether DNSSEC is enabled, and what mode it is in.",
                  "enumDescriptions": [
                    "DNSSEC is disabled; the zone is not signed.",
                    "DNSSEC is enabled; the zone is signed and fully managed.",
                    "DNSSEC is enabled, but in a \"transfer\" mode."
                  ]
                },
                "nonExistence": {
                  "enum": [
                    "nsec",
                    "nsec3"
                  ],
                  "type": "string",
                  "description": "Specifies the mechanism for authenticated denial-of-existence responses. Can only be changed while the state is OFF.",
                  "enumDescriptions": [
                    "",
                    ""
                  ]
                },
                "defaultKeySpecs": {
                  "type": "array",
                  "items": {
                    "id": "DnsKeySpec",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "default": "dns#dnsKeySpec"
                      },
                      "keyType": {
                        "enum": [
                          "keySigning",
                          "zoneSigning"
                        ],
                        "type": "string",
                        "description": "Specifies whether this is a key signing key (KSK) or a zone signing key (ZSK). Key signing keys have the Secure Entry Point flag set and, when active, are only used to sign resource record sets of type DNSKEY. Zone signing keys do not have the Secure Entry Point flag set and are used to sign all other types of resource record sets.",
                        "enumDescriptions": [
                          "",
                          ""
                        ]
                      },
                      "algorithm": {
                        "enum": [
                          "rsasha1",
                          "rsasha256",
                          "rsasha512",
                          "ecdsap256sha256",
                          "ecdsap384sha384"
                        ],
                        "type": "string",
                        "description": "String mnemonic specifying the DNSSEC algorithm of this key.",
                        "enumDescriptions": [
                          "",
                          "",
                          "",
                          "",
                          ""
                        ]
                      },
                      "keyLength": {
                        "type": "integer",
                        "format": "uint32",
                        "description": "Length of the keys in bits."
                      }
                    },
                    "description": "Parameters for DnsKey key generation. Used for generating initial keys for a new ManagedZone and as default when adding a new DnsKey."
                  },
                  "description": "Specifies parameters for generating initial DnsKeys for this ManagedZone. Can only be changed while the state is OFF."
                }
              },
              "description": "DNSSEC configuration."
            },
            "nameServerSet": {
              "type": "string",
              "description": "Optionally specifies the NameServerSet for this ManagedZone. A NameServerSet is a set of DNS name servers that all host the same ManagedZones. Most users leave this field unset. If you need to use this field, contact your account team."
            },
            "peeringConfig": {
              "id": "ManagedZonePeeringConfig",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "dns#managedZonePeeringConfig"
                },
                "targetNetwork": {
                  "id": "ManagedZonePeeringConfigTargetNetwork",
                  "type": "object",
                  "properties": {
                    "kind": {
                      "type": "string",
                      "default": "dns#managedZonePeeringConfigTargetNetwork"
                    },
                    "networkUrl": {
                      "type": "string",
                      "description": "The fully qualified URL of the VPC network to forward queries to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}"
                    },
                    "deactivateTime": {
                      "type": "string",
                      "description": "The time at which the zone was deactivated, in RFC 3339 date-time format. An empty string indicates that the peering connection is active. The producer network can deactivate a zone. The zone is automatically deactivated if the producer network that the zone targeted is deleted. Output only."
                    }
                  },
                  "description": "The network with which to peer."
                }
              },
              "description": "The presence of this field indicates that DNS Peering is enabled for this zone. The value of this field contains the network to peer with."
            },
            "forwardingConfig": {
              "id": "ManagedZoneForwardingConfig",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "dns#managedZoneForwardingConfig"
                },
                "targetNameServers": {
                  "type": "array",
                  "items": {
                    "id": "ManagedZoneForwardingConfigNameServerTarget",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "default": "dns#managedZoneForwardingConfigNameServerTarget"
                      },
                      "ipv4Address": {
                        "type": "string",
                        "description": "IPv4 address of a target name server."
                      },
                      "forwardingPath": {
                        "enum": [
                          "default",
                          "private"
                        ],
                        "type": "string",
                        "description": "Forwarding path for this NameServerTarget. If unset or set to DEFAULT, Cloud DNS makes forwarding decisions based on IP address ranges; that is, RFC1918 addresses go to the VPC network, non-RFC1918 addresses go to the internet. When set to PRIVATE, Cloud DNS always sends queries through the VPC network for this target.",
                        "enumDescriptions": [
                          "Cloud DNS makes forwarding decisions based on address ranges; that is, RFC1918 addresses forward to the target through the VPC and non-RFC1918 addresses forward to the target through the internet",
                          "Cloud DNS always forwards to this target through the VPC."
                        ]
                      }
                    }
                  },
                  "description": "List of target name servers to forward to. Cloud DNS selects the best available name server if more than one target is given."
                }
              },
              "description": "The presence for this field indicates that outbound forwarding is enabled for this zone. The value of this field contains the set of destinations to forward to."
            },
            "reverseLookupConfig": {
              "id": "ManagedZoneReverseLookupConfig",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "dns#managedZoneReverseLookupConfig"
                }
              },
              "description": "The presence of this field indicates that this is a managed reverse lookup zone and Cloud DNS resolves reverse lookup queries using automatically configured records for VPC resources. This only applies to networks listed under private_visibility_config."
            },
            "serviceDirectoryConfig": {
              "id": "ManagedZoneServiceDirectoryConfig",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "dns#managedZoneServiceDirectoryConfig"
                },
                "namespace": {
                  "id": "ManagedZoneServiceDirectoryConfigNamespace",
                  "type": "object",
                  "properties": {
                    "kind": {
                      "type": "string",
                      "default": "dns#managedZoneServiceDirectoryConfigNamespace"
                    },
                    "deletionTime": {
                      "type": "string",
                      "description": "The time that the namespace backing this zone was deleted; an empty string if it still exists. This is in RFC3339 text format. Output only."
                    },
                    "namespaceUrl": {
                      "type": "string",
                      "description": "The fully qualified URL of the namespace associated with the zone. Format must be https://servicedirectory.googleapis.com/v1/projects/{project}/locations/{location}/namespaces/{namespace}"
                    }
                  },
                  "description": "Contains information about the namespace associated with the zone."
                }
              },
              "description": "This field links to the associated service directory namespace. Do not set this field for public zones or forwarding zones."
            },
            "privateVisibilityConfig": {
              "id": "ManagedZonePrivateVisibilityConfig",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "dns#managedZonePrivateVisibilityConfig"
                },
                "networks": {
                  "type": "array",
                  "items": {
                    "id": "ManagedZonePrivateVisibilityConfigNetwork",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "default": "dns#managedZonePrivateVisibilityConfigNetwork"
                      },
                      "networkUrl": {
                        "type": "string",
                        "description": "The fully qualified URL of the VPC network to bind to. Format this URL like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}"
                      }
                    }
                  },
                  "description": "The list of VPC networks that can see this zone."
                }
              },
              "description": "For privately visible zones, the set of Virtual Private Cloud resources that the zone is visible from."
            }
          },
          "description": "A zone is a subtree of the DNS namespace under one administrative responsibility. A ManagedZone is a resource that represents a DNS zone hosted by the Cloud DNS service."
        }
      ]
      outputs: [
        {}
      ]
  managedZones.delete:
    description: |-
      Deletes a previously created ManagedZone.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dns/docs/reference/v1/managedZones/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  managedZones.get:
    description: |-
      Fetches the representation of an existing ManagedZone.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dns/docs/reference/v1/managedZones/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  managedZones.list:
    description: |-
      Enumerates ManagedZones that have been created but not yet deleted.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dns/docs/reference/v1/managedZones/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ManagedZonesListResponse",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "dns#managedZonesListResponse",
              "description": "Type of resource."
            },
            "header": {
              "id": "ResponseHeader",
              "type": "object",
              "properties": {
                "operationId": {
                  "type": "string",
                  "description": "For mutating operation requests that completed successfully. This is the client_operation_id if the client specified it, otherwise it is generated by the server (output only)."
                }
              },
              "description": "Elements common to every response."
            },
            "managedZones": {
              "type": "array",
              "items": {
                "id": "ManagedZone",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uint64",
                    "description": "Unique identifier for the resource; defined by the server (output only)"
                  },
                  "kind": {
                    "type": "string",
                    "default": "dns#managedZone"
                  },
                  "name": {
                    "type": "string",
                    "description": "User assigned name for this resource. Must be unique within the project. The name must be 1-63 characters long, must begin with a letter, end with a letter or digit, and only contain lowercase letters, digits or dashes."
                  },
                  "labels": {
                    "type": "object",
                    "description": "User labels.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "dnsName": {
                    "type": "string",
                    "description": "The DNS name of this managed zone, for instance \"example.com.\"."
                  },
                  "visibility": {
                    "enum": [
                      "public",
                      "private"
                    ],
                    "type": "string",
                    "description": "The zone's visibility: public zones are exposed to the Internet, while private zones are visible only to Virtual Private Cloud resources.",
                    "enumDescriptions": [
                      "",
                      ""
                    ]
                  },
                  "description": {
                    "type": "string",
                    "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the managed zone's function."
                  },
                  "nameServers": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Delegate your managed_zone to these virtual name servers; defined by the server (output only)"
                  },
                  "creationTime": {
                    "type": "string",
                    "description": "The time that this resource was created on the server. This is in RFC3339 text format. Output only."
                  },
                  "dnssecConfig": {
                    "id": "ManagedZoneDnsSecConfig",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "default": "dns#managedZoneDnsSecConfig"
                      },
                      "state": {
                        "enum": [
                          "off",
                          "on",
                          "transfer"
                        ],
                        "type": "string",
                        "description": "Specifies whether DNSSEC is enabled, and what mode it is in.",
                        "enumDescriptions": [
                          "DNSSEC is disabled; the zone is not signed.",
                          "DNSSEC is enabled; the zone is signed and fully managed.",
                          "DNSSEC is enabled, but in a \"transfer\" mode."
                        ]
                      },
                      "nonExistence": {
                        "enum": [
                          "nsec",
                          "nsec3"
                        ],
                        "type": "string",
                        "description": "Specifies the mechanism for authenticated denial-of-existence responses. Can only be changed while the state is OFF.",
                        "enumDescriptions": [
                          "",
                          ""
                        ]
                      },
                      "defaultKeySpecs": {
                        "type": "array",
                        "items": {
                          "id": "DnsKeySpec",
                          "type": "object",
                          "properties": {
                            "kind": {
                              "type": "string",
                              "default": "dns#dnsKeySpec"
                            },
                            "keyType": {
                              "enum": [
                                "keySigning",
                                "zoneSigning"
                              ],
                              "type": "string",
                              "description": "Specifies whether this is a key signing key (KSK) or a zone signing key (ZSK). Key signing keys have the Secure Entry Point flag set and, when active, are only used to sign resource record sets of type DNSKEY. Zone signing keys do not have the Secure Entry Point flag set and are used to sign all other types of resource record sets.",
                              "enumDescriptions": [
                                "",
                                ""
                              ]
                            },
                            "algorithm": {
                              "enum": [
                                "rsasha1",
                                "rsasha256",
                                "rsasha512",
                                "ecdsap256sha256",
                                "ecdsap384sha384"
                              ],
                              "type": "string",
                              "description": "String mnemonic specifying the DNSSEC algorithm of this key.",
                              "enumDescriptions": [
                                "",
                                "",
                                "",
                                "",
                                ""
                              ]
                            },
                            "keyLength": {
                              "type": "integer",
                              "format": "uint32",
                              "description": "Length of the keys in bits."
                            }
                          },
                          "description": "Parameters for DnsKey key generation. Used for generating initial keys for a new ManagedZone and as default when adding a new DnsKey."
                        },
                        "description": "Specifies parameters for generating initial DnsKeys for this ManagedZone. Can only be changed while the state is OFF."
                      }
                    },
                    "description": "DNSSEC configuration."
                  },
                  "nameServerSet": {
                    "type": "string",
                    "description": "Optionally specifies the NameServerSet for this ManagedZone. A NameServerSet is a set of DNS name servers that all host the same ManagedZones. Most users leave this field unset. If you need to use this field, contact your account team."
                  },
                  "peeringConfig": {
                    "id": "ManagedZonePeeringConfig",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "default": "dns#managedZonePeeringConfig"
                      },
                      "targetNetwork": {
                        "id": "ManagedZonePeeringConfigTargetNetwork",
                        "type": "object",
                        "properties": {
                          "kind": {
                            "type": "string",
                            "default": "dns#managedZonePeeringConfigTargetNetwork"
                          },
                          "networkUrl": {
                            "type": "string",
                            "description": "The fully qualified URL of the VPC network to forward queries to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}"
                          },
                          "deactivateTime": {
                            "type": "string",
                            "description": "The time at which the zone was deactivated, in RFC 3339 date-time format. An empty string indicates that the peering connection is active. The producer network can deactivate a zone. The zone is automatically deactivated if the producer network that the zone targeted is deleted. Output only."
                          }
                        },
                        "description": "The network with which to peer."
                      }
                    },
                    "description": "The presence of this field indicates that DNS Peering is enabled for this zone. The value of this field contains the network to peer with."
                  },
                  "forwardingConfig": {
                    "id": "ManagedZoneForwardingConfig",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "default": "dns#managedZoneForwardingConfig"
                      },
                      "targetNameServers": {
                        "type": "array",
                        "items": {
                          "id": "ManagedZoneForwardingConfigNameServerTarget",
                          "type": "object",
                          "properties": {
                            "kind": {
                              "type": "string",
                              "default": "dns#managedZoneForwardingConfigNameServerTarget"
                            },
                            "ipv4Address": {
                              "type": "string",
                              "description": "IPv4 address of a target name server."
                            },
                            "forwardingPath": {
                              "enum": [
                                "default",
                                "private"
                              ],
                              "type": "string",
                              "description": "Forwarding path for this NameServerTarget. If unset or set to DEFAULT, Cloud DNS makes forwarding decisions based on IP address ranges; that is, RFC1918 addresses go to the VPC network, non-RFC1918 addresses go to the internet. When set to PRIVATE, Cloud DNS always sends queries through the VPC network for this target.",
                              "enumDescriptions": [
                                "Cloud DNS makes forwarding decisions based on address ranges; that is, RFC1918 addresses forward to the target through the VPC and non-RFC1918 addresses forward to the target through the internet",
                                "Cloud DNS always forwards to this target through the VPC."
                              ]
                            }
                          }
                        },
                        "description": "List of target name servers to forward to. Cloud DNS selects the best available name server if more than one target is given."
                      }
                    },
                    "description": "The presence for this field indicates that outbound forwarding is enabled for this zone. The value of this field contains the set of destinations to forward to."
                  },
                  "reverseLookupConfig": {
                    "id": "ManagedZoneReverseLookupConfig",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "default": "dns#managedZoneReverseLookupConfig"
                      }
                    },
                    "description": "The presence of this field indicates that this is a managed reverse lookup zone and Cloud DNS resolves reverse lookup queries using automatically configured records for VPC resources. This only applies to networks listed under private_visibility_config."
                  },
                  "serviceDirectoryConfig": {
                    "id": "ManagedZoneServiceDirectoryConfig",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "default": "dns#managedZoneServiceDirectoryConfig"
                      },
                      "namespace": {
                        "id": "ManagedZoneServiceDirectoryConfigNamespace",
                        "type": "object",
                        "properties": {
                          "kind": {
                            "type": "string",
                            "default": "dns#managedZoneServiceDirectoryConfigNamespace"
                          },
                          "deletionTime": {
                            "type": "string",
                            "description": "The time that the namespace backing this zone was deleted; an empty string if it still exists. This is in RFC3339 text format. Output only."
                          },
                          "namespaceUrl": {
                            "type": "string",
                            "description": "The fully qualified URL of the namespace associated with the zone. Format must be https://servicedirectory.googleapis.com/v1/projects/{project}/locations/{location}/namespaces/{namespace}"
                          }
                        },
                        "description": "Contains information about the namespace associated with the zone."
                      }
                    },
                    "description": "This field links to the associated service directory namespace. Do not set this field for public zones or forwarding zones."
                  },
                  "privateVisibilityConfig": {
                    "id": "ManagedZonePrivateVisibilityConfig",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "default": "dns#managedZonePrivateVisibilityConfig"
                      },
                      "networks": {
                        "type": "array",
                        "items": {
                          "id": "ManagedZonePrivateVisibilityConfigNetwork",
                          "type": "object",
                          "properties": {
                            "kind": {
                              "type": "string",
                              "default": "dns#managedZonePrivateVisibilityConfigNetwork"
                            },
                            "networkUrl": {
                              "type": "string",
                              "description": "The fully qualified URL of the VPC network to bind to. Format this URL like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}"
                            }
                          }
                        },
                        "description": "The list of VPC networks that can see this zone."
                      }
                    },
                    "description": "For privately visible zones, the set of Virtual Private Cloud resources that the zone is visible from."
                  }
                },
                "description": "A zone is a subtree of the DNS namespace under one administrative responsibility. A ManagedZone is a resource that represents a DNS zone hosted by the Cloud DNS service."
              },
              "description": "The managed zone resources."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. This lets you the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size."
            }
          }
        }
      ]
  managedZones.patch:
    description: |-
      Applies a partial update to an existing ManagedZone.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dns/docs/reference/v1/managedZones/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  managedZones.update:
    description: |-
      Updates an existing ManagedZone.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dns/docs/reference/v1/managedZones/update
    example:
      inputs: [
        {
          "id": "ManagedZone",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uint64",
              "description": "Unique identifier for the resource; defined by the server (output only)"
            },
            "kind": {
              "type": "string",
              "default": "dns#managedZone"
            },
            "name": {
              "type": "string",
              "description": "User assigned name for this resource. Must be unique within the project. The name must be 1-63 characters long, must begin with a letter, end with a letter or digit, and only contain lowercase letters, digits or dashes."
            },
            "labels": {
              "type": "object",
              "description": "User labels.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "dnsName": {
              "type": "string",
              "description": "The DNS name of this managed zone, for instance \"example.com.\"."
            },
            "visibility": {
              "enum": [
                "public",
                "private"
              ],
              "type": "string",
              "description": "The zone's visibility: public zones are exposed to the Internet, while private zones are visible only to Virtual Private Cloud resources.",
              "enumDescriptions": [
                "",
                ""
              ]
            },
            "description": {
              "type": "string",
              "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the managed zone's function."
            },
            "nameServers": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Delegate your managed_zone to these virtual name servers; defined by the server (output only)"
            },
            "creationTime": {
              "type": "string",
              "description": "The time that this resource was created on the server. This is in RFC3339 text format. Output only."
            },
            "dnssecConfig": {
              "id": "ManagedZoneDnsSecConfig",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "dns#managedZoneDnsSecConfig"
                },
                "state": {
                  "enum": [
                    "off",
                    "on",
                    "transfer"
                  ],
                  "type": "string",
                  "description": "Specifies whether DNSSEC is enabled, and what mode it is in.",
                  "enumDescriptions": [
                    "DNSSEC is disabled; the zone is not signed.",
                    "DNSSEC is enabled; the zone is signed and fully managed.",
                    "DNSSEC is enabled, but in a \"transfer\" mode."
                  ]
                },
                "nonExistence": {
                  "enum": [
                    "nsec",
                    "nsec3"
                  ],
                  "type": "string",
                  "description": "Specifies the mechanism for authenticated denial-of-existence responses. Can only be changed while the state is OFF.",
                  "enumDescriptions": [
                    "",
                    ""
                  ]
                },
                "defaultKeySpecs": {
                  "type": "array",
                  "items": {
                    "id": "DnsKeySpec",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "default": "dns#dnsKeySpec"
                      },
                      "keyType": {
                        "enum": [
                          "keySigning",
                          "zoneSigning"
                        ],
                        "type": "string",
                        "description": "Specifies whether this is a key signing key (KSK) or a zone signing key (ZSK). Key signing keys have the Secure Entry Point flag set and, when active, are only used to sign resource record sets of type DNSKEY. Zone signing keys do not have the Secure Entry Point flag set and are used to sign all other types of resource record sets.",
                        "enumDescriptions": [
                          "",
                          ""
                        ]
                      },
                      "algorithm": {
                        "enum": [
                          "rsasha1",
                          "rsasha256",
                          "rsasha512",
                          "ecdsap256sha256",
                          "ecdsap384sha384"
                        ],
                        "type": "string",
                        "description": "String mnemonic specifying the DNSSEC algorithm of this key.",
                        "enumDescriptions": [
                          "",
                          "",
                          "",
                          "",
                          ""
                        ]
                      },
                      "keyLength": {
                        "type": "integer",
                        "format": "uint32",
                        "description": "Length of the keys in bits."
                      }
                    },
                    "description": "Parameters for DnsKey key generation. Used for generating initial keys for a new ManagedZone and as default when adding a new DnsKey."
                  },
                  "description": "Specifies parameters for generating initial DnsKeys for this ManagedZone. Can only be changed while the state is OFF."
                }
              },
              "description": "DNSSEC configuration."
            },
            "nameServerSet": {
              "type": "string",
              "description": "Optionally specifies the NameServerSet for this ManagedZone. A NameServerSet is a set of DNS name servers that all host the same ManagedZones. Most users leave this field unset. If you need to use this field, contact your account team."
            },
            "peeringConfig": {
              "id": "ManagedZonePeeringConfig",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "dns#managedZonePeeringConfig"
                },
                "targetNetwork": {
                  "id": "ManagedZonePeeringConfigTargetNetwork",
                  "type": "object",
                  "properties": {
                    "kind": {
                      "type": "string",
                      "default": "dns#managedZonePeeringConfigTargetNetwork"
                    },
                    "networkUrl": {
                      "type": "string",
                      "description": "The fully qualified URL of the VPC network to forward queries to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}"
                    },
                    "deactivateTime": {
                      "type": "string",
                      "description": "The time at which the zone was deactivated, in RFC 3339 date-time format. An empty string indicates that the peering connection is active. The producer network can deactivate a zone. The zone is automatically deactivated if the producer network that the zone targeted is deleted. Output only."
                    }
                  },
                  "description": "The network with which to peer."
                }
              },
              "description": "The presence of this field indicates that DNS Peering is enabled for this zone. The value of this field contains the network to peer with."
            },
            "forwardingConfig": {
              "id": "ManagedZoneForwardingConfig",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "dns#managedZoneForwardingConfig"
                },
                "targetNameServers": {
                  "type": "array",
                  "items": {
                    "id": "ManagedZoneForwardingConfigNameServerTarget",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "default": "dns#managedZoneForwardingConfigNameServerTarget"
                      },
                      "ipv4Address": {
                        "type": "string",
                        "description": "IPv4 address of a target name server."
                      },
                      "forwardingPath": {
                        "enum": [
                          "default",
                          "private"
                        ],
                        "type": "string",
                        "description": "Forwarding path for this NameServerTarget. If unset or set to DEFAULT, Cloud DNS makes forwarding decisions based on IP address ranges; that is, RFC1918 addresses go to the VPC network, non-RFC1918 addresses go to the internet. When set to PRIVATE, Cloud DNS always sends queries through the VPC network for this target.",
                        "enumDescriptions": [
                          "Cloud DNS makes forwarding decisions based on address ranges; that is, RFC1918 addresses forward to the target through the VPC and non-RFC1918 addresses forward to the target through the internet",
                          "Cloud DNS always forwards to this target through the VPC."
                        ]
                      }
                    }
                  },
                  "description": "List of target name servers to forward to. Cloud DNS selects the best available name server if more than one target is given."
                }
              },
              "description": "The presence for this field indicates that outbound forwarding is enabled for this zone. The value of this field contains the set of destinations to forward to."
            },
            "reverseLookupConfig": {
              "id": "ManagedZoneReverseLookupConfig",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "dns#managedZoneReverseLookupConfig"
                }
              },
              "description": "The presence of this field indicates that this is a managed reverse lookup zone and Cloud DNS resolves reverse lookup queries using automatically configured records for VPC resources. This only applies to networks listed under private_visibility_config."
            },
            "serviceDirectoryConfig": {
              "id": "ManagedZoneServiceDirectoryConfig",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "dns#managedZoneServiceDirectoryConfig"
                },
                "namespace": {
                  "id": "ManagedZoneServiceDirectoryConfigNamespace",
                  "type": "object",
                  "properties": {
                    "kind": {
                      "type": "string",
                      "default": "dns#managedZoneServiceDirectoryConfigNamespace"
                    },
                    "deletionTime": {
                      "type": "string",
                      "description": "The time that the namespace backing this zone was deleted; an empty string if it still exists. This is in RFC3339 text format. Output only."
                    },
                    "namespaceUrl": {
                      "type": "string",
                      "description": "The fully qualified URL of the namespace associated with the zone. Format must be https://servicedirectory.googleapis.com/v1/projects/{project}/locations/{location}/namespaces/{namespace}"
                    }
                  },
                  "description": "Contains information about the namespace associated with the zone."
                }
              },
              "description": "This field links to the associated service directory namespace. Do not set this field for public zones or forwarding zones."
            },
            "privateVisibilityConfig": {
              "id": "ManagedZonePrivateVisibilityConfig",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "dns#managedZonePrivateVisibilityConfig"
                },
                "networks": {
                  "type": "array",
                  "items": {
                    "id": "ManagedZonePrivateVisibilityConfigNetwork",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "default": "dns#managedZonePrivateVisibilityConfigNetwork"
                      },
                      "networkUrl": {
                        "type": "string",
                        "description": "The fully qualified URL of the VPC network to bind to. Format this URL like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}"
                      }
                    }
                  },
                  "description": "The list of VPC networks that can see this zone."
                }
              },
              "description": "For privately visible zones, the set of Virtual Private Cloud resources that the zone is visible from."
            }
          },
          "description": "A zone is a subtree of the DNS namespace under one administrative responsibility. A ManagedZone is a resource that represents a DNS zone hosted by the Cloud DNS service."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique identifier for the resource. This is the client_operation_id if the client specified it when the mutation was initiated, otherwise, it is generated by the server. The name must be 1-63 characters long and match the regular expression [-a-z0-9]? (output only)"
            },
            "kind": {
              "type": "string",
              "default": "dns#operation"
            },
            "type": {
              "type": "string",
              "description": "Type of the operation. Operations include insert, update, and delete (output only)."
            },
            "user": {
              "type": "string",
              "description": "User who requested the operation, for example: user@example.com. cloud-dns-system for operations automatically done by the system. (output only)"
            },
            "status": {
              "enum": [
                "pending",
                "done"
              ],
              "type": "string",
              "description": "Status of the operation. Can be one of the following: \"PENDING\" or \"DONE\" (output only). A status of \"DONE\" means that the request to update the authoritative servers has been sent, but the servers might not be updated yet.",
              "enumDescriptions": [
                "",
                ""
              ]
            },
            "startTime": {
              "type": "string",
              "description": "The time that this operation was started by the server. This is in RFC3339 text format (output only)."
            },
            "zoneContext": {
              "id": "OperationManagedZoneContext",
              "type": "object",
              "properties": {
                "newValue": {
                  "id": "ManagedZone",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uint64",
                      "description": "Unique identifier for the resource; defined by the server (output only)"
                    },
                    "kind": {
                      "type": "string",
                      "default": "dns#managedZone"
                    },
                    "name": {
                      "type": "string",
                      "description": "User assigned name for this resource. Must be unique within the project. The name must be 1-63 characters long, must begin with a letter, end with a letter or digit, and only contain lowercase letters, digits or dashes."
                    },
                    "labels": {
                      "type": "object",
                      "description": "User labels.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "dnsName": {
                      "type": "string",
                      "description": "The DNS name of this managed zone, for instance \"example.com.\"."
                    },
                    "visibility": {
                      "enum": [
                        "public",
                        "private"
                      ],
                      "type": "string",
                      "description": "The zone's visibility: public zones are exposed to the Internet, while private zones are visible only to Virtual Private Cloud resources.",
                      "enumDescriptions": [
                        "",
                        ""
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the managed zone's function."
                    },
                    "nameServers": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Delegate your managed_zone to these virtual name servers; defined by the server (output only)"
                    },
                    "creationTime": {
                      "type": "string",
                      "description": "The time that this resource was created on the server. This is in RFC3339 text format. Output only."
                    },
                    "dnssecConfig": {
                      "id": "ManagedZoneDnsSecConfig",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "type": "string",
                          "default": "dns#managedZoneDnsSecConfig"
                        },
                        "state": {
                          "enum": [
                            "off",
                            "on",
                            "transfer"
                          ],
                          "type": "string",
                          "description": "Specifies whether DNSSEC is enabled, and what mode it is in.",
                          "enumDescriptions": [
                            "DNSSEC is disabled; the zone is not signed.",
                            "DNSSEC is enabled; the zone is signed and fully managed.",
                            "DNSSEC is enabled, but in a \"transfer\" mode."
                          ]
                        },
                        "nonExistence": {
                          "enum": [
                            "nsec",
                            "nsec3"
                          ],
                          "type": "string",
                          "description": "Specifies the mechanism for authenticated denial-of-existence responses. Can only be changed while the state is OFF.",
                          "enumDescriptions": [
                            "",
                            ""
                          ]
                        },
                        "defaultKeySpecs": {
                          "type": "array",
                          "items": {
                            "id": "DnsKeySpec",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "default": "dns#dnsKeySpec"
                              },
                              "keyType": {
                                "enum": [
                                  "keySigning",
                                  "zoneSigning"
                                ],
                                "type": "string",
                                "description": "Specifies whether this is a key signing key (KSK) or a zone signing key (ZSK). Key signing keys have the Secure Entry Point flag set and, when active, are only used to sign resource record sets of type DNSKEY. Zone signing keys do not have the Secure Entry Point flag set and are used to sign all other types of resource record sets.",
                                "enumDescriptions": [
                                  "",
                                  ""
                                ]
                              },
                              "algorithm": {
                                "enum": [
                                  "rsasha1",
                                  "rsasha256",
                                  "rsasha512",
                                  "ecdsap256sha256",
                                  "ecdsap384sha384"
                                ],
                                "type": "string",
                                "description": "String mnemonic specifying the DNSSEC algorithm of this key.",
                                "enumDescriptions": [
                                  "",
                                  "",
                                  "",
                                  "",
                                  ""
                                ]
                              },
                              "keyLength": {
                                "type": "integer",
                                "format": "uint32",
                                "description": "Length of the keys in bits."
                              }
                            },
                            "description": "Parameters for DnsKey key generation. Used for generating initial keys for a new ManagedZone and as default when adding a new DnsKey."
                          },
                          "description": "Specifies parameters for generating initial DnsKeys for this ManagedZone. Can only be changed while the state is OFF."
                        }
                      },
                      "description": "DNSSEC configuration."
                    },
                    "nameServerSet": {
                      "type": "string",
                      "description": "Optionally specifies the NameServerSet for this ManagedZone. A NameServerSet is a set of DNS name servers that all host the same ManagedZones. Most users leave this field unset. If you need to use this field, contact your account team."
                    },
                    "peeringConfig": {
                      "id": "ManagedZonePeeringConfig",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "type": "string",
                          "default": "dns#managedZonePeeringConfig"
                        },
                        "targetNetwork": {
                          "id": "ManagedZonePeeringConfigTargetNetwork",
                          "type": "object",
                          "properties": {
                            "kind": {
                              "type": "string",
                              "default": "dns#managedZonePeeringConfigTargetNetwork"
                            },
                            "networkUrl": {
                              "type": "string",
                              "description": "The fully qualified URL of the VPC network to forward queries to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}"
                            },
                            "deactivateTime": {
                              "type": "string",
                              "description": "The time at which the zone was deactivated, in RFC 3339 date-time format. An empty string indicates that the peering connection is active. The producer network can deactivate a zone. The zone is automatically deactivated if the producer network that the zone targeted is deleted. Output only."
                            }
                          },
                          "description": "The network with which to peer."
                        }
                      },
                      "description": "The presence of this field indicates that DNS Peering is enabled for this zone. The value of this field contains the network to peer with."
                    },
                    "forwardingConfig": {
                      "id": "ManagedZoneForwardingConfig",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "type": "string",
                          "default": "dns#managedZoneForwardingConfig"
                        },
                        "targetNameServers": {
                          "type": "array",
                          "items": {
                            "id": "ManagedZoneForwardingConfigNameServerTarget",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "default": "dns#managedZoneForwardingConfigNameServerTarget"
                              },
                              "ipv4Address": {
                                "type": "string",
                                "description": "IPv4 address of a target name server."
                              },
                              "forwardingPath": {
                                "enum": [
                                  "default",
                                  "private"
                                ],
                                "type": "string",
                                "description": "Forwarding path for this NameServerTarget. If unset or set to DEFAULT, Cloud DNS makes forwarding decisions based on IP address ranges; that is, RFC1918 addresses go to the VPC network, non-RFC1918 addresses go to the internet. When set to PRIVATE, Cloud DNS always sends queries through the VPC network for this target.",
                                "enumDescriptions": [
                                  "Cloud DNS makes forwarding decisions based on address ranges; that is, RFC1918 addresses forward to the target through the VPC and non-RFC1918 addresses forward to the target through the internet",
                                  "Cloud DNS always forwards to this target through the VPC."
                                ]
                              }
                            }
                          },
                          "description": "List of target name servers to forward to. Cloud DNS selects the best available name server if more than one target is given."
                        }
                      },
                      "description": "The presence for this field indicates that outbound forwarding is enabled for this zone. The value of this field contains the set of destinations to forward to."
                    },
                    "reverseLookupConfig": {
                      "id": "ManagedZoneReverseLookupConfig",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "type": "string",
                          "default": "dns#managedZoneReverseLookupConfig"
                        }
                      },
                      "description": "The presence of this field indicates that this is a managed reverse lookup zone and Cloud DNS resolves reverse lookup queries using automatically configured records for VPC resources. This only applies to networks listed under private_visibility_config."
                    },
                    "serviceDirectoryConfig": {
                      "id": "ManagedZoneServiceDirectoryConfig",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "type": "string",
                          "default": "dns#managedZoneServiceDirectoryConfig"
                        },
                        "namespace": {
                          "id": "ManagedZoneServiceDirectoryConfigNamespace",
                          "type": "object",
                          "properties": {
                            "kind": {
                              "type": "string",
                              "default": "dns#managedZoneServiceDirectoryConfigNamespace"
                            },
                            "deletionTime": {
                              "type": "string",
                              "description": "The time that the namespace backing this zone was deleted; an empty string if it still exists. This is in RFC3339 text format. Output only."
                            },
                            "namespaceUrl": {
                              "type": "string",
                              "description": "The fully qualified URL of the namespace associated with the zone. Format must be https://servicedirectory.googleapis.com/v1/projects/{project}/locations/{location}/namespaces/{namespace}"
                            }
                          },
                          "description": "Contains information about the namespace associated with the zone."
                        }
                      },
                      "description": "This field links to the associated service directory namespace. Do not set this field for public zones or forwarding zones."
                    },
                    "privateVisibilityConfig": {
                      "id": "ManagedZonePrivateVisibilityConfig",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "type": "string",
                          "default": "dns#managedZonePrivateVisibilityConfig"
                        },
                        "networks": {
                          "type": "array",
                          "items": {
                            "id": "ManagedZonePrivateVisibilityConfigNetwork",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "default": "dns#managedZonePrivateVisibilityConfigNetwork"
                              },
                              "networkUrl": {
                                "type": "string",
                                "description": "The fully qualified URL of the VPC network to bind to. Format this URL like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}"
                              }
                            }
                          },
                          "description": "The list of VPC networks that can see this zone."
                        }
                      },
                      "description": "For privately visible zones, the set of Virtual Private Cloud resources that the zone is visible from."
                    }
                  },
                  "description": "The post-operation ManagedZone resource."
                },
                "oldValue": {
                  "id": "ManagedZone",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uint64",
                      "description": "Unique identifier for the resource; defined by the server (output only)"
                    },
                    "kind": {
                      "type": "string",
                      "default": "dns#managedZone"
                    },
                    "name": {
                      "type": "string",
                      "description": "User assigned name for this resource. Must be unique within the project. The name must be 1-63 characters long, must begin with a letter, end with a letter or digit, and only contain lowercase letters, digits or dashes."
                    },
                    "labels": {
                      "type": "object",
                      "description": "User labels.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "dnsName": {
                      "type": "string",
                      "description": "The DNS name of this managed zone, for instance \"example.com.\"."
                    },
                    "visibility": {
                      "enum": [
                        "public",
                        "private"
                      ],
                      "type": "string",
                      "description": "The zone's visibility: public zones are exposed to the Internet, while private zones are visible only to Virtual Private Cloud resources.",
                      "enumDescriptions": [
                        "",
                        ""
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the managed zone's function."
                    },
                    "nameServers": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Delegate your managed_zone to these virtual name servers; defined by the server (output only)"
                    },
                    "creationTime": {
                      "type": "string",
                      "description": "The time that this resource was created on the server. This is in RFC3339 text format. Output only."
                    },
                    "dnssecConfig": {
                      "id": "ManagedZoneDnsSecConfig",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "type": "string",
                          "default": "dns#managedZoneDnsSecConfig"
                        },
                        "state": {
                          "enum": [
                            "off",
                            "on",
                            "transfer"
                          ],
                          "type": "string",
                          "description": "Specifies whether DNSSEC is enabled, and what mode it is in.",
                          "enumDescriptions": [
                            "DNSSEC is disabled; the zone is not signed.",
                            "DNSSEC is enabled; the zone is signed and fully managed.",
                            "DNSSEC is enabled, but in a \"transfer\" mode."
                          ]
                        },
                        "nonExistence": {
                          "enum": [
                            "nsec",
                            "nsec3"
                          ],
                          "type": "string",
                          "description": "Specifies the mechanism for authenticated denial-of-existence responses. Can only be changed while the state is OFF.",
                          "enumDescriptions": [
                            "",
                            ""
                          ]
                        },
                        "defaultKeySpecs": {
                          "type": "array",
                          "items": {
                            "id": "DnsKeySpec",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "default": "dns#dnsKeySpec"
                              },
                              "keyType": {
                                "enum": [
                                  "keySigning",
                                  "zoneSigning"
                                ],
                                "type": "string",
                                "description": "Specifies whether this is a key signing key (KSK) or a zone signing key (ZSK). Key signing keys have the Secure Entry Point flag set and, when active, are only used to sign resource record sets of type DNSKEY. Zone signing keys do not have the Secure Entry Point flag set and are used to sign all other types of resource record sets.",
                                "enumDescriptions": [
                                  "",
                                  ""
                                ]
                              },
                              "algorithm": {
                                "enum": [
                                  "rsasha1",
                                  "rsasha256",
                                  "rsasha512",
                                  "ecdsap256sha256",
                                  "ecdsap384sha384"
                                ],
                                "type": "string",
                                "description": "String mnemonic specifying the DNSSEC algorithm of this key.",
                                "enumDescriptions": [
                                  "",
                                  "",
                                  "",
                                  "",
                                  ""
                                ]
                              },
                              "keyLength": {
                                "type": "integer",
                                "format": "uint32",
                                "description": "Length of the keys in bits."
                              }
                            },
                            "description": "Parameters for DnsKey key generation. Used for generating initial keys for a new ManagedZone and as default when adding a new DnsKey."
                          },
                          "description": "Specifies parameters for generating initial DnsKeys for this ManagedZone. Can only be changed while the state is OFF."
                        }
                      },
                      "description": "DNSSEC configuration."
                    },
                    "nameServerSet": {
                      "type": "string",
                      "description": "Optionally specifies the NameServerSet for this ManagedZone. A NameServerSet is a set of DNS name servers that all host the same ManagedZones. Most users leave this field unset. If you need to use this field, contact your account team."
                    },
                    "peeringConfig": {
                      "id": "ManagedZonePeeringConfig",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "type": "string",
                          "default": "dns#managedZonePeeringConfig"
                        },
                        "targetNetwork": {
                          "id": "ManagedZonePeeringConfigTargetNetwork",
                          "type": "object",
                          "properties": {
                            "kind": {
                              "type": "string",
                              "default": "dns#managedZonePeeringConfigTargetNetwork"
                            },
                            "networkUrl": {
                              "type": "string",
                              "description": "The fully qualified URL of the VPC network to forward queries to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}"
                            },
                            "deactivateTime": {
                              "type": "string",
                              "description": "The time at which the zone was deactivated, in RFC 3339 date-time format. An empty string indicates that the peering connection is active. The producer network can deactivate a zone. The zone is automatically deactivated if the producer network that the zone targeted is deleted. Output only."
                            }
                          },
                          "description": "The network with which to peer."
                        }
                      },
                      "description": "The presence of this field indicates that DNS Peering is enabled for this zone. The value of this field contains the network to peer with."
                    },
                    "forwardingConfig": {
                      "id": "ManagedZoneForwardingConfig",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "type": "string",
                          "default": "dns#managedZoneForwardingConfig"
                        },
                        "targetNameServers": {
                          "type": "array",
                          "items": {
                            "id": "ManagedZoneForwardingConfigNameServerTarget",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "default": "dns#managedZoneForwardingConfigNameServerTarget"
                              },
                              "ipv4Address": {
                                "type": "string",
                                "description": "IPv4 address of a target name server."
                              },
                              "forwardingPath": {
                                "enum": [
                                  "default",
                                  "private"
                                ],
                                "type": "string",
                                "description": "Forwarding path for this NameServerTarget. If unset or set to DEFAULT, Cloud DNS makes forwarding decisions based on IP address ranges; that is, RFC1918 addresses go to the VPC network, non-RFC1918 addresses go to the internet. When set to PRIVATE, Cloud DNS always sends queries through the VPC network for this target.",
                                "enumDescriptions": [
                                  "Cloud DNS makes forwarding decisions based on address ranges; that is, RFC1918 addresses forward to the target through the VPC and non-RFC1918 addresses forward to the target through the internet",
                                  "Cloud DNS always forwards to this target through the VPC."
                                ]
                              }
                            }
                          },
                          "description": "List of target name servers to forward to. Cloud DNS selects the best available name server if more than one target is given."
                        }
                      },
                      "description": "The presence for this field indicates that outbound forwarding is enabled for this zone. The value of this field contains the set of destinations to forward to."
                    },
                    "reverseLookupConfig": {
                      "id": "ManagedZoneReverseLookupConfig",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "type": "string",
                          "default": "dns#managedZoneReverseLookupConfig"
                        }
                      },
                      "description": "The presence of this field indicates that this is a managed reverse lookup zone and Cloud DNS resolves reverse lookup queries using automatically configured records for VPC resources. This only applies to networks listed under private_visibility_config."
                    },
                    "serviceDirectoryConfig": {
                      "id": "ManagedZoneServiceDirectoryConfig",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "type": "string",
                          "default": "dns#managedZoneServiceDirectoryConfig"
                        },
                        "namespace": {
                          "id": "ManagedZoneServiceDirectoryConfigNamespace",
                          "type": "object",
                          "properties": {
                            "kind": {
                              "type": "string",
                              "default": "dns#managedZoneServiceDirectoryConfigNamespace"
                            },
                            "deletionTime": {
                              "type": "string",
                              "description": "The time that the namespace backing this zone was deleted; an empty string if it still exists. This is in RFC3339 text format. Output only."
                            },
                            "namespaceUrl": {
                              "type": "string",
                              "description": "The fully qualified URL of the namespace associated with the zone. Format must be https://servicedirectory.googleapis.com/v1/projects/{project}/locations/{location}/namespaces/{namespace}"
                            }
                          },
                          "description": "Contains information about the namespace associated with the zone."
                        }
                      },
                      "description": "This field links to the associated service directory namespace. Do not set this field for public zones or forwarding zones."
                    },
                    "privateVisibilityConfig": {
                      "id": "ManagedZonePrivateVisibilityConfig",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "type": "string",
                          "default": "dns#managedZonePrivateVisibilityConfig"
                        },
                        "networks": {
                          "type": "array",
                          "items": {
                            "id": "ManagedZonePrivateVisibilityConfigNetwork",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "default": "dns#managedZonePrivateVisibilityConfigNetwork"
                              },
                              "networkUrl": {
                                "type": "string",
                                "description": "The fully qualified URL of the VPC network to bind to. Format this URL like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}"
                              }
                            }
                          },
                          "description": "The list of VPC networks that can see this zone."
                        }
                      },
                      "description": "For privately visible zones, the set of Virtual Private Cloud resources that the zone is visible from."
                    }
                  },
                  "description": "The pre-operation ManagedZone resource."
                }
              },
              "description": "Only populated if the operation targeted a ManagedZone (output only)."
            },
            "dnsKeyContext": {
              "id": "OperationDnsKeyContext",
              "type": "object",
              "properties": {
                "newValue": {
                  "id": "DnsKey",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the resource; defined by the server (output only)."
                    },
                    "kind": {
                      "type": "string",
                      "default": "dns#dnsKey"
                    },
                    "type": {
                      "enum": [
                        "keySigning",
                        "zoneSigning"
                      ],
                      "type": "string",
                      "description": "One of \"KEY_SIGNING\" or \"ZONE_SIGNING\". Keys of type KEY_SIGNING have the Secure Entry Point flag set and, when active, are used to sign only resource record sets of type DNSKEY. Otherwise, the Secure Entry Point flag is cleared, and this key is used to sign only resource record sets of other types. Immutable after creation time.",
                      "enumDescriptions": [
                        "",
                        ""
                      ]
                    },
                    "keyTag": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The key tag is a non-cryptographic hash of the a DNSKEY resource record associated with this DnsKey. The key tag can be used to identify a DNSKEY more quickly (but it is not a unique identifier). In particular, the key tag is used in a parent zone's DS record to point at the DNSKEY in this child ManagedZone. The key tag is a number in the range [0, 65535] and the algorithm to calculate it is specified in RFC4034 Appendix B. Output only."
                    },
                    "digests": {
                      "type": "array",
                      "items": {
                        "id": "DnsKeyDigest",
                        "type": "object",
                        "properties": {
                          "type": {
                            "enum": [
                              "sha1",
                              "sha256",
                              "sha384"
                            ],
                            "type": "string",
                            "description": "Specifies the algorithm used to calculate this digest.",
                            "enumDescriptions": [
                              "",
                              "",
                              ""
                            ]
                          },
                          "digest": {
                            "type": "string",
                            "description": "The base-16 encoded bytes of this digest. Suitable for use in a DS resource record."
                          }
                        }
                      },
                      "description": "Cryptographic hashes of the DNSKEY resource record associated with this DnsKey. These digests are needed to construct a DS record that points at this DNS key. Output only."
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Active keys are used to sign subsequent changes to the ManagedZone. Inactive keys are still present as DNSKEY Resource Records for the use of resolvers validating existing signatures."
                    },
                    "algorithm": {
                      "enum": [
                        "rsasha1",
                        "rsasha256",
                        "rsasha512",
                        "ecdsap256sha256",
                        "ecdsap384sha384"
                      ],
                      "type": "string",
                      "description": "String mnemonic specifying the DNSSEC algorithm of this key. Immutable after creation time.",
                      "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                      ]
                    },
                    "keyLength": {
                      "type": "integer",
                      "format": "uint32",
                      "description": "Length of the key in bits. Specified at creation time, and then immutable."
                    },
                    "publicKey": {
                      "type": "string",
                      "description": "Base64 encoded public half of this key. Output only."
                    },
                    "description": {
                      "type": "string",
                      "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the resource's function."
                    },
                    "creationTime": {
                      "type": "string",
                      "description": "The time that this resource was created in the control plane. This is in RFC3339 text format. Output only."
                    }
                  },
                  "description": "A DNSSEC key pair."
                },
                "oldValue": {
                  "id": "DnsKey",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the resource; defined by the server (output only)."
                    },
                    "kind": {
                      "type": "string",
                      "default": "dns#dnsKey"
                    },
                    "type": {
                      "enum": [
                        "keySigning",
                        "zoneSigning"
                      ],
                      "type": "string",
                      "description": "One of \"KEY_SIGNING\" or \"ZONE_SIGNING\". Keys of type KEY_SIGNING have the Secure Entry Point flag set and, when active, are used to sign only resource record sets of type DNSKEY. Otherwise, the Secure Entry Point flag is cleared, and this key is used to sign only resource record sets of other types. Immutable after creation time.",
                      "enumDescriptions": [
                        "",
                        ""
                      ]
                    },
                    "keyTag": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The key tag is a non-cryptographic hash of the a DNSKEY resource record associated with this DnsKey. The key tag can be used to identify a DNSKEY more quickly (but it is not a unique identifier). In particular, the key tag is used in a parent zone's DS record to point at the DNSKEY in this child ManagedZone. The key tag is a number in the range [0, 65535] and the algorithm to calculate it is specified in RFC4034 Appendix B. Output only."
                    },
                    "digests": {
                      "type": "array",
                      "items": {
                        "id": "DnsKeyDigest",
                        "type": "object",
                        "properties": {
                          "type": {
                            "enum": [
                              "sha1",
                              "sha256",
                              "sha384"
                            ],
                            "type": "string",
                            "description": "Specifies the algorithm used to calculate this digest.",
                            "enumDescriptions": [
                              "",
                              "",
                              ""
                            ]
                          },
                          "digest": {
                            "type": "string",
                            "description": "The base-16 encoded bytes of this digest. Suitable for use in a DS resource record."
                          }
                        }
                      },
                      "description": "Cryptographic hashes of the DNSKEY resource record associated with this DnsKey. These digests are needed to construct a DS record that points at this DNS key. Output only."
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Active keys are used to sign subsequent changes to the ManagedZone. Inactive keys are still present as DNSKEY Resource Records for the use of resolvers validating existing signatures."
                    },
                    "algorithm": {
                      "enum": [
                        "rsasha1",
                        "rsasha256",
                        "rsasha512",
                        "ecdsap256sha256",
                        "ecdsap384sha384"
                      ],
                      "type": "string",
                      "description": "String mnemonic specifying the DNSSEC algorithm of this key. Immutable after creation time.",
                      "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                      ]
                    },
                    "keyLength": {
                      "type": "integer",
                      "format": "uint32",
                      "description": "Length of the key in bits. Specified at creation time, and then immutable."
                    },
                    "publicKey": {
                      "type": "string",
                      "description": "Base64 encoded public half of this key. Output only."
                    },
                    "description": {
                      "type": "string",
                      "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the resource's function."
                    },
                    "creationTime": {
                      "type": "string",
                      "description": "The time that this resource was created in the control plane. This is in RFC3339 text format. Output only."
                    }
                  },
                  "description": "A DNSSEC key pair."
                }
              },
              "description": "Only populated if the operation targeted a DnsKey (output only)."
            }
          },
          "description": "An operation represents a successful mutation performed on a Cloud DNS resource. Operations provide: - An audit log of server resource mutations. - A way to recover/retry API calls in the case where the response is never received by the caller. Use the caller specified client_operation_id."
        }
      ]
  policies.create:
    description: |-
      Creates a new Policy.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dns/docs/reference/v1/policies/create
    example:
      inputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uint64",
              "description": "Unique identifier for the resource; defined by the server (output only)."
            },
            "kind": {
              "type": "string",
              "default": "dns#policy"
            },
            "name": {
              "type": "string",
              "description": "User-assigned name for this policy."
            },
            "networks": {
              "type": "array",
              "items": {
                "id": "PolicyNetwork",
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "default": "dns#policyNetwork"
                  },
                  "networkUrl": {
                    "type": "string",
                    "description": "The fully qualified URL of the VPC network to bind to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}"
                  }
                }
              },
              "description": "List of network names specifying networks to which this policy is applied."
            },
            "description": {
              "type": "string",
              "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the policy's function."
            },
            "enableLogging": {
              "type": "boolean",
              "description": "Controls whether logging is enabled for the networks bound to this policy. Defaults to no logging if not set."
            },
            "enableInboundForwarding": {
              "type": "boolean",
              "description": "Allows networks bound to this policy to receive DNS queries sent by VMs or applications over VPN connections. When enabled, a virtual IP address is allocated from each of the subnetworks that are bound to this policy."
            },
            "alternativeNameServerConfig": {
              "id": "PolicyAlternativeNameServerConfig",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "dns#policyAlternativeNameServerConfig"
                },
                "targetNameServers": {
                  "type": "array",
                  "items": {
                    "id": "PolicyAlternativeNameServerConfigTargetNameServer",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "default": "dns#policyAlternativeNameServerConfigTargetNameServer"
                      },
                      "ipv4Address": {
                        "type": "string",
                        "description": "IPv4 address to forward to."
                      },
                      "forwardingPath": {
                        "enum": [
                          "default",
                          "private"
                        ],
                        "type": "string",
                        "description": "Forwarding path for this TargetNameServer. If unset or set to DEFAULT, Cloud DNS makes forwarding decisions based on address ranges; that is, RFC1918 addresses go to the VPC network, non-RFC1918 addresses go to the internet. When set to PRIVATE, Cloud DNS always sends queries through the VPC network for this target.",
                        "enumDescriptions": [
                          "Cloud DNS makes forwarding decision based on IP address ranges; that is, RFC1918 addresses forward to the target through the VPC and non-RFC1918 addresses forward to the target through the internet",
                          "Cloud DNS always forwards to this target through the VPC."
                        ]
                      }
                    }
                  },
                  "description": "Sets an alternative name server for the associated networks. When specified, all DNS queries are forwarded to a name server that you choose. Names such as .internal are not available when an alternative name server is specified."
                }
              },
              "description": "Sets an alternative name server for the associated networks. When specified, all DNS queries are forwarded to a name server that you choose. Names such as .internal are not available when an alternative name server is specified."
            }
          },
          "description": "A policy is a collection of DNS rules applied to one or more Virtual Private Cloud resources."
        }
      ]
      outputs: [
        {}
      ]
  policies.delete:
    description: |-
      Deletes a previously created Policy. Fails if the policy is still being referenced by a network.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dns/docs/reference/v1/policies/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  policies.get:
    description: |-
      Fetches the representation of an existing Policy.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dns/docs/reference/v1/policies/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  policies.list:
    description: |-
      Enumerates all Policies associated with a project.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dns/docs/reference/v1/policies/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "PoliciesListResponse",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "dns#policiesListResponse",
              "description": "Type of resource."
            },
            "header": {
              "id": "ResponseHeader",
              "type": "object",
              "properties": {
                "operationId": {
                  "type": "string",
                  "description": "For mutating operation requests that completed successfully. This is the client_operation_id if the client specified it, otherwise it is generated by the server (output only)."
                }
              },
              "description": "Elements common to every response."
            },
            "policies": {
              "type": "array",
              "items": {
                "id": "Policy",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uint64",
                    "description": "Unique identifier for the resource; defined by the server (output only)."
                  },
                  "kind": {
                    "type": "string",
                    "default": "dns#policy"
                  },
                  "name": {
                    "type": "string",
                    "description": "User-assigned name for this policy."
                  },
                  "networks": {
                    "type": "array",
                    "items": {
                      "id": "PolicyNetwork",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "type": "string",
                          "default": "dns#policyNetwork"
                        },
                        "networkUrl": {
                          "type": "string",
                          "description": "The fully qualified URL of the VPC network to bind to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}"
                        }
                      }
                    },
                    "description": "List of network names specifying networks to which this policy is applied."
                  },
                  "description": {
                    "type": "string",
                    "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the policy's function."
                  },
                  "enableLogging": {
                    "type": "boolean",
                    "description": "Controls whether logging is enabled for the networks bound to this policy. Defaults to no logging if not set."
                  },
                  "enableInboundForwarding": {
                    "type": "boolean",
                    "description": "Allows networks bound to this policy to receive DNS queries sent by VMs or applications over VPN connections. When enabled, a virtual IP address is allocated from each of the subnetworks that are bound to this policy."
                  },
                  "alternativeNameServerConfig": {
                    "id": "PolicyAlternativeNameServerConfig",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "default": "dns#policyAlternativeNameServerConfig"
                      },
                      "targetNameServers": {
                        "type": "array",
                        "items": {
                          "id": "PolicyAlternativeNameServerConfigTargetNameServer",
                          "type": "object",
                          "properties": {
                            "kind": {
                              "type": "string",
                              "default": "dns#policyAlternativeNameServerConfigTargetNameServer"
                            },
                            "ipv4Address": {
                              "type": "string",
                              "description": "IPv4 address to forward to."
                            },
                            "forwardingPath": {
                              "enum": [
                                "default",
                                "private"
                              ],
                              "type": "string",
                              "description": "Forwarding path for this TargetNameServer. If unset or set to DEFAULT, Cloud DNS makes forwarding decisions based on address ranges; that is, RFC1918 addresses go to the VPC network, non-RFC1918 addresses go to the internet. When set to PRIVATE, Cloud DNS always sends queries through the VPC network for this target.",
                              "enumDescriptions": [
                                "Cloud DNS makes forwarding decision based on IP address ranges; that is, RFC1918 addresses forward to the target through the VPC and non-RFC1918 addresses forward to the target through the internet",
                                "Cloud DNS always forwards to this target through the VPC."
                              ]
                            }
                          }
                        },
                        "description": "Sets an alternative name server for the associated networks. When specified, all DNS queries are forwarded to a name server that you choose. Names such as .internal are not available when an alternative name server is specified."
                      }
                    },
                    "description": "Sets an alternative name server for the associated networks. When specified, all DNS queries are forwarded to a name server that you choose. Names such as .internal are not available when an alternative name server is specified."
                  }
                },
                "description": "A policy is a collection of DNS rules applied to one or more Virtual Private Cloud resources."
              },
              "description": "The policy resources."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. This lets you the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size."
            }
          }
        }
      ]
  policies.patch:
    description: |-
      Applies a partial update to an existing Policy.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dns/docs/reference/v1/policies/patch
    example:
      inputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uint64",
              "description": "Unique identifier for the resource; defined by the server (output only)."
            },
            "kind": {
              "type": "string",
              "default": "dns#policy"
            },
            "name": {
              "type": "string",
              "description": "User-assigned name for this policy."
            },
            "networks": {
              "type": "array",
              "items": {
                "id": "PolicyNetwork",
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "default": "dns#policyNetwork"
                  },
                  "networkUrl": {
                    "type": "string",
                    "description": "The fully qualified URL of the VPC network to bind to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}"
                  }
                }
              },
              "description": "List of network names specifying networks to which this policy is applied."
            },
            "description": {
              "type": "string",
              "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the policy's function."
            },
            "enableLogging": {
              "type": "boolean",
              "description": "Controls whether logging is enabled for the networks bound to this policy. Defaults to no logging if not set."
            },
            "enableInboundForwarding": {
              "type": "boolean",
              "description": "Allows networks bound to this policy to receive DNS queries sent by VMs or applications over VPN connections. When enabled, a virtual IP address is allocated from each of the subnetworks that are bound to this policy."
            },
            "alternativeNameServerConfig": {
              "id": "PolicyAlternativeNameServerConfig",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "dns#policyAlternativeNameServerConfig"
                },
                "targetNameServers": {
                  "type": "array",
                  "items": {
                    "id": "PolicyAlternativeNameServerConfigTargetNameServer",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "default": "dns#policyAlternativeNameServerConfigTargetNameServer"
                      },
                      "ipv4Address": {
                        "type": "string",
                        "description": "IPv4 address to forward to."
                      },
                      "forwardingPath": {
                        "enum": [
                          "default",
                          "private"
                        ],
                        "type": "string",
                        "description": "Forwarding path for this TargetNameServer. If unset or set to DEFAULT, Cloud DNS makes forwarding decisions based on address ranges; that is, RFC1918 addresses go to the VPC network, non-RFC1918 addresses go to the internet. When set to PRIVATE, Cloud DNS always sends queries through the VPC network for this target.",
                        "enumDescriptions": [
                          "Cloud DNS makes forwarding decision based on IP address ranges; that is, RFC1918 addresses forward to the target through the VPC and non-RFC1918 addresses forward to the target through the internet",
                          "Cloud DNS always forwards to this target through the VPC."
                        ]
                      }
                    }
                  },
                  "description": "Sets an alternative name server for the associated networks. When specified, all DNS queries are forwarded to a name server that you choose. Names such as .internal are not available when an alternative name server is specified."
                }
              },
              "description": "Sets an alternative name server for the associated networks. When specified, all DNS queries are forwarded to a name server that you choose. Names such as .internal are not available when an alternative name server is specified."
            }
          },
          "description": "A policy is a collection of DNS rules applied to one or more Virtual Private Cloud resources."
        }
      ]
      outputs: [
        {
          "id": "PoliciesPatchResponse",
          "type": "object",
          "properties": {
            "header": {
              "id": "ResponseHeader",
              "type": "object",
              "properties": {
                "operationId": {
                  "type": "string",
                  "description": "For mutating operation requests that completed successfully. This is the client_operation_id if the client specified it, otherwise it is generated by the server (output only)."
                }
              },
              "description": "Elements common to every response."
            },
            "policy": {
              "id": "Policy",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uint64",
                  "description": "Unique identifier for the resource; defined by the server (output only)."
                },
                "kind": {
                  "type": "string",
                  "default": "dns#policy"
                },
                "name": {
                  "type": "string",
                  "description": "User-assigned name for this policy."
                },
                "networks": {
                  "type": "array",
                  "items": {
                    "id": "PolicyNetwork",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "default": "dns#policyNetwork"
                      },
                      "networkUrl": {
                        "type": "string",
                        "description": "The fully qualified URL of the VPC network to bind to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}"
                      }
                    }
                  },
                  "description": "List of network names specifying networks to which this policy is applied."
                },
                "description": {
                  "type": "string",
                  "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the policy's function."
                },
                "enableLogging": {
                  "type": "boolean",
                  "description": "Controls whether logging is enabled for the networks bound to this policy. Defaults to no logging if not set."
                },
                "enableInboundForwarding": {
                  "type": "boolean",
                  "description": "Allows networks bound to this policy to receive DNS queries sent by VMs or applications over VPN connections. When enabled, a virtual IP address is allocated from each of the subnetworks that are bound to this policy."
                },
                "alternativeNameServerConfig": {
                  "id": "PolicyAlternativeNameServerConfig",
                  "type": "object",
                  "properties": {
                    "kind": {
                      "type": "string",
                      "default": "dns#policyAlternativeNameServerConfig"
                    },
                    "targetNameServers": {
                      "type": "array",
                      "items": {
                        "id": "PolicyAlternativeNameServerConfigTargetNameServer",
                        "type": "object",
                        "properties": {
                          "kind": {
                            "type": "string",
                            "default": "dns#policyAlternativeNameServerConfigTargetNameServer"
                          },
                          "ipv4Address": {
                            "type": "string",
                            "description": "IPv4 address to forward to."
                          },
                          "forwardingPath": {
                            "enum": [
                              "default",
                              "private"
                            ],
                            "type": "string",
                            "description": "Forwarding path for this TargetNameServer. If unset or set to DEFAULT, Cloud DNS makes forwarding decisions based on address ranges; that is, RFC1918 addresses go to the VPC network, non-RFC1918 addresses go to the internet. When set to PRIVATE, Cloud DNS always sends queries through the VPC network for this target.",
                            "enumDescriptions": [
                              "Cloud DNS makes forwarding decision based on IP address ranges; that is, RFC1918 addresses forward to the target through the VPC and non-RFC1918 addresses forward to the target through the internet",
                              "Cloud DNS always forwards to this target through the VPC."
                            ]
                          }
                        }
                      },
                      "description": "Sets an alternative name server for the associated networks. When specified, all DNS queries are forwarded to a name server that you choose. Names such as .internal are not available when an alternative name server is specified."
                    }
                  },
                  "description": "Sets an alternative name server for the associated networks. When specified, all DNS queries are forwarded to a name server that you choose. Names such as .internal are not available when an alternative name server is specified."
                }
              },
              "description": "A policy is a collection of DNS rules applied to one or more Virtual Private Cloud resources."
            }
          }
        }
      ]
  policies.update:
    description: |-
      Updates an existing Policy.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dns/docs/reference/v1/policies/update
    example:
      inputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uint64",
              "description": "Unique identifier for the resource; defined by the server (output only)."
            },
            "kind": {
              "type": "string",
              "default": "dns#policy"
            },
            "name": {
              "type": "string",
              "description": "User-assigned name for this policy."
            },
            "networks": {
              "type": "array",
              "items": {
                "id": "PolicyNetwork",
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "default": "dns#policyNetwork"
                  },
                  "networkUrl": {
                    "type": "string",
                    "description": "The fully qualified URL of the VPC network to bind to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}"
                  }
                }
              },
              "description": "List of network names specifying networks to which this policy is applied."
            },
            "description": {
              "type": "string",
              "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the policy's function."
            },
            "enableLogging": {
              "type": "boolean",
              "description": "Controls whether logging is enabled for the networks bound to this policy. Defaults to no logging if not set."
            },
            "enableInboundForwarding": {
              "type": "boolean",
              "description": "Allows networks bound to this policy to receive DNS queries sent by VMs or applications over VPN connections. When enabled, a virtual IP address is allocated from each of the subnetworks that are bound to this policy."
            },
            "alternativeNameServerConfig": {
              "id": "PolicyAlternativeNameServerConfig",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "dns#policyAlternativeNameServerConfig"
                },
                "targetNameServers": {
                  "type": "array",
                  "items": {
                    "id": "PolicyAlternativeNameServerConfigTargetNameServer",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "default": "dns#policyAlternativeNameServerConfigTargetNameServer"
                      },
                      "ipv4Address": {
                        "type": "string",
                        "description": "IPv4 address to forward to."
                      },
                      "forwardingPath": {
                        "enum": [
                          "default",
                          "private"
                        ],
                        "type": "string",
                        "description": "Forwarding path for this TargetNameServer. If unset or set to DEFAULT, Cloud DNS makes forwarding decisions based on address ranges; that is, RFC1918 addresses go to the VPC network, non-RFC1918 addresses go to the internet. When set to PRIVATE, Cloud DNS always sends queries through the VPC network for this target.",
                        "enumDescriptions": [
                          "Cloud DNS makes forwarding decision based on IP address ranges; that is, RFC1918 addresses forward to the target through the VPC and non-RFC1918 addresses forward to the target through the internet",
                          "Cloud DNS always forwards to this target through the VPC."
                        ]
                      }
                    }
                  },
                  "description": "Sets an alternative name server for the associated networks. When specified, all DNS queries are forwarded to a name server that you choose. Names such as .internal are not available when an alternative name server is specified."
                }
              },
              "description": "Sets an alternative name server for the associated networks. When specified, all DNS queries are forwarded to a name server that you choose. Names such as .internal are not available when an alternative name server is specified."
            }
          },
          "description": "A policy is a collection of DNS rules applied to one or more Virtual Private Cloud resources."
        }
      ]
      outputs: [
        {
          "id": "PoliciesUpdateResponse",
          "type": "object",
          "properties": {
            "header": {
              "id": "ResponseHeader",
              "type": "object",
              "properties": {
                "operationId": {
                  "type": "string",
                  "description": "For mutating operation requests that completed successfully. This is the client_operation_id if the client specified it, otherwise it is generated by the server (output only)."
                }
              },
              "description": "Elements common to every response."
            },
            "policy": {
              "id": "Policy",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uint64",
                  "description": "Unique identifier for the resource; defined by the server (output only)."
                },
                "kind": {
                  "type": "string",
                  "default": "dns#policy"
                },
                "name": {
                  "type": "string",
                  "description": "User-assigned name for this policy."
                },
                "networks": {
                  "type": "array",
                  "items": {
                    "id": "PolicyNetwork",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "default": "dns#policyNetwork"
                      },
                      "networkUrl": {
                        "type": "string",
                        "description": "The fully qualified URL of the VPC network to bind to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}"
                      }
                    }
                  },
                  "description": "List of network names specifying networks to which this policy is applied."
                },
                "description": {
                  "type": "string",
                  "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the policy's function."
                },
                "enableLogging": {
                  "type": "boolean",
                  "description": "Controls whether logging is enabled for the networks bound to this policy. Defaults to no logging if not set."
                },
                "enableInboundForwarding": {
                  "type": "boolean",
                  "description": "Allows networks bound to this policy to receive DNS queries sent by VMs or applications over VPN connections. When enabled, a virtual IP address is allocated from each of the subnetworks that are bound to this policy."
                },
                "alternativeNameServerConfig": {
                  "id": "PolicyAlternativeNameServerConfig",
                  "type": "object",
                  "properties": {
                    "kind": {
                      "type": "string",
                      "default": "dns#policyAlternativeNameServerConfig"
                    },
                    "targetNameServers": {
                      "type": "array",
                      "items": {
                        "id": "PolicyAlternativeNameServerConfigTargetNameServer",
                        "type": "object",
                        "properties": {
                          "kind": {
                            "type": "string",
                            "default": "dns#policyAlternativeNameServerConfigTargetNameServer"
                          },
                          "ipv4Address": {
                            "type": "string",
                            "description": "IPv4 address to forward to."
                          },
                          "forwardingPath": {
                            "enum": [
                              "default",
                              "private"
                            ],
                            "type": "string",
                            "description": "Forwarding path for this TargetNameServer. If unset or set to DEFAULT, Cloud DNS makes forwarding decisions based on address ranges; that is, RFC1918 addresses go to the VPC network, non-RFC1918 addresses go to the internet. When set to PRIVATE, Cloud DNS always sends queries through the VPC network for this target.",
                            "enumDescriptions": [
                              "Cloud DNS makes forwarding decision based on IP address ranges; that is, RFC1918 addresses forward to the target through the VPC and non-RFC1918 addresses forward to the target through the internet",
                              "Cloud DNS always forwards to this target through the VPC."
                            ]
                          }
                        }
                      },
                      "description": "Sets an alternative name server for the associated networks. When specified, all DNS queries are forwarded to a name server that you choose. Names such as .internal are not available when an alternative name server is specified."
                    }
                  },
                  "description": "Sets an alternative name server for the associated networks. When specified, all DNS queries are forwarded to a name server that you choose. Names such as .internal are not available when an alternative name server is specified."
                }
              },
              "description": "A policy is a collection of DNS rules applied to one or more Virtual Private Cloud resources."
            }
          }
        }
      ]
  projects.get:
    description: |-
      Fetches the representation of an existing Project.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dns/docs/reference/v1/projects/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Project",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "User assigned unique identifier for the resource (output only)."
            },
            "kind": {
              "type": "string",
              "default": "dns#project"
            },
            "quota": {
              "id": "Quota",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "default": "dns#quota"
                },
                "policies": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Maximum allowed number of policies per project."
                },
                "managedZones": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Maximum allowed number of managed zones in the project."
                },
                "networksPerPolicy": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Maximum allowed number of networks per policy."
                },
                "whitelistedKeySpecs": {
                  "type": "array",
                  "items": {
                    "id": "DnsKeySpec",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "default": "dns#dnsKeySpec"
                      },
                      "keyType": {
                        "enum": [
                          "keySigning",
                          "zoneSigning"
                        ],
                        "type": "string",
                        "description": "Specifies whether this is a key signing key (KSK) or a zone signing key (ZSK). Key signing keys have the Secure Entry Point flag set and, when active, are only used to sign resource record sets of type DNSKEY. Zone signing keys do not have the Secure Entry Point flag set and are used to sign all other types of resource record sets.",
                        "enumDescriptions": [
                          "",
                          ""
                        ]
                      },
                      "algorithm": {
                        "enum": [
                          "rsasha1",
                          "rsasha256",
                          "rsasha512",
                          "ecdsap256sha256",
                          "ecdsap384sha384"
                        ],
                        "type": "string",
                        "description": "String mnemonic specifying the DNSSEC algorithm of this key.",
                        "enumDescriptions": [
                          "",
                          "",
                          "",
                          "",
                          ""
                        ]
                      },
                      "keyLength": {
                        "type": "integer",
                        "format": "uint32",
                        "description": "Length of the keys in bits."
                      }
                    },
                    "description": "Parameters for DnsKey key generation. Used for generating initial keys for a new ManagedZone and as default when adding a new DnsKey."
                  },
                  "description": "DNSSEC algorithm and key length types that can be used for DnsKeys."
                },
                "rrsetsPerManagedZone": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Maximum allowed number of ResourceRecordSets per zone in the project."
                },
                "dnsKeysPerManagedZone": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Maximum allowed number of DnsKeys per ManagedZone."
                },
                "managedZonesPerNetwork": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Maximum allowed number of managed zones which can be attached to a network."
                },
                "networksPerManagedZone": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Maximum allowed number of networks to which a privately scoped zone can be attached."
                },
                "resourceRecordsPerRrset": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Maximum allowed number of ResourceRecords per ResourceRecordSet."
                },
                "rrsetAdditionsPerChange": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Maximum allowed number of ResourceRecordSets to add per ChangesCreateRequest."
                },
                "rrsetDeletionsPerChange": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Maximum allowed number of ResourceRecordSets to delete per ChangesCreateRequest."
                },
                "totalRrdataSizePerChange": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Maximum allowed size for total rrdata in one ChangesCreateRequest in bytes."
                },
                "targetNameServersPerPolicy": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Maximum allowed number of alternative target name servers per policy."
                },
                "targetNameServersPerManagedZone": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Maximum allowed number of target name servers per managed forwarding zone."
                }
              },
              "description": "Quotas assigned to this project (output only)."
            },
            "number": {
              "type": "string",
              "format": "uint64",
              "description": "Unique numeric identifier for the resource; defined by the server (output only)."
            }
          },
          "description": "A project resource. The project is a top level container for resources including Cloud DNS ManagedZones. Projects can be created only in the APIs console. Next tag: 7."
        }
      ]
  projects.managedZones.rrsets.create:
    description: |-
      Creates a new ResourceRecordSet.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dns/docs/reference/v1/projects.managedZones.rrsets/create
    example:
      inputs: [
        {
          "id": "ResourceRecordSet",
          "type": "object",
          "properties": {
            "ttl": {
              "type": "integer",
              "format": "int32",
              "description": "Number of seconds that this ResourceRecordSet can be cached by resolvers."
            },
            "kind": {
              "type": "string",
              "default": "dns#resourceRecordSet"
            },
            "name": {
              "type": "string",
              "description": "For example, www.example.com."
            },
            "type": {
              "type": "string",
              "description": "The identifier of a supported record type. See the list of Supported DNS record types."
            },
            "rrdatas": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "As defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1) -- see examples."
            },
            "signatureRrdatas": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "As defined in RFC 4034 (section 3.2)."
            }
          },
          "description": "A unit of data that is returned by the DNS servers."
        }
      ]
      outputs: [
        {}
      ]
  projects.managedZones.rrsets.delete:
    description: |-
      Deletes a previously created ResourceRecordSet.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dns/docs/reference/v1/projects.managedZones.rrsets/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ResourceRecordSetsDeleteResponse",
          "type": "object",
          "properties": {}
        }
      ]
  projects.managedZones.rrsets.get:
    description: |-
      Fetches the representation of an existing ResourceRecordSet.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dns/docs/reference/v1/projects.managedZones.rrsets/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.managedZones.rrsets.patch:
    description: |-
      Applies a partial update to an existing ResourceRecordSet.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dns/docs/reference/v1/projects.managedZones.rrsets/patch
    example:
      inputs: [
        {
          "id": "ResourceRecordSet",
          "type": "object",
          "properties": {
            "ttl": {
              "type": "integer",
              "format": "int32",
              "description": "Number of seconds that this ResourceRecordSet can be cached by resolvers."
            },
            "kind": {
              "type": "string",
              "default": "dns#resourceRecordSet"
            },
            "name": {
              "type": "string",
              "description": "For example, www.example.com."
            },
            "type": {
              "type": "string",
              "description": "The identifier of a supported record type. See the list of Supported DNS record types."
            },
            "rrdatas": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "As defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1) -- see examples."
            },
            "signatureRrdatas": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "As defined in RFC 4034 (section 3.2)."
            }
          },
          "description": "A unit of data that is returned by the DNS servers."
        }
      ]
      outputs: [
        {}
      ]
  resourceRecordSets.list:
    description: |-
      Enumerates ResourceRecordSets that you have created but not yet deleted.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/dns/docs/reference/v1/resourceRecordSets/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ResourceRecordSetsListResponse",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "dns#resourceRecordSetsListResponse",
              "description": "Type of resource."
            },
            "header": {
              "id": "ResponseHeader",
              "type": "object",
              "properties": {
                "operationId": {
                  "type": "string",
                  "description": "For mutating operation requests that completed successfully. This is the client_operation_id if the client specified it, otherwise it is generated by the server (output only)."
                }
              },
              "description": "Elements common to every response."
            },
            "rrsets": {
              "type": "array",
              "items": {
                "id": "ResourceRecordSet",
                "type": "object",
                "properties": {
                  "ttl": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of seconds that this ResourceRecordSet can be cached by resolvers."
                  },
                  "kind": {
                    "type": "string",
                    "default": "dns#resourceRecordSet"
                  },
                  "name": {
                    "type": "string",
                    "description": "For example, www.example.com."
                  },
                  "type": {
                    "type": "string",
                    "description": "The identifier of a supported record type. See the list of Supported DNS record types."
                  },
                  "rrdatas": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "As defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1) -- see examples."
                  },
                  "signatureRrdatas": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "As defined in RFC 4034 (section 3.2)."
                  }
                },
                "description": "A unit of data that is returned by the DNS servers."
              },
              "description": "The resource record set resources."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your pagination token. This lets you retrieve complete contents of even larger collections, one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size."
            }
          }
        }
      ]