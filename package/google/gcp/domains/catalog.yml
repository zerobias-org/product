Product:
  name: GCP Domains
  versions: [1.0.0]
  package: google.gcp.domains
  description: |-
    Cloud Domains
  link: https://cloud.google.com/domains
  contentType: json
Operations:
  projects.locations.get:
    description: |-
      Gets information about a location.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/domains/docs/reference/rest/v1beta1/projects.locations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Location",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
            },
            "labels": {
              "type": "object",
              "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
              "additionalProperties": {
                "type": "string"
              }
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata. For example the available capacity at the given location.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "locationId": {
              "type": "string",
              "description": "The canonical id for this location. For example: `\"us-east1\"`."
            },
            "displayName": {
              "type": "string",
              "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
            }
          },
          "description": "A resource that represents Google Cloud Platform location."
        }
      ]
  projects.locations.list:
    description: |-
      Lists information about the supported locations for this service.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/domains/docs/reference/rest/v1beta1/projects.locations/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListLocationsResponse",
          "type": "object",
          "properties": {
            "locations": {
              "type": "array",
              "items": {
                "id": "Location",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
                  },
                  "labels": {
                    "type": "object",
                    "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Service-specific metadata. For example the available capacity at the given location.",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "locationId": {
                    "type": "string",
                    "description": "The canonical id for this location. For example: `\"us-east1\"`."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
                  }
                },
                "description": "A resource that represents Google Cloud Platform location."
              },
              "description": "A list of locations that matches the specified filter in the request."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The standard List next-page token."
            }
          },
          "description": "The response message for Locations.ListLocations."
        }
      ]
  projects.locations.operations.get:
    description: |-
      Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/domains/docs/reference/rest/v1beta1/projects.locations.operations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.operations.list:
    description: |-
      Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/domains/docs/reference/rest/v1beta1/projects.locations.operations/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListOperationsResponse",
          "type": "object",
          "properties": {
            "operations": {
              "type": "array",
              "items": {
                "id": "Operation",
                "type": "object",
                "properties": {
                  "done": {
                    "type": "boolean",
                    "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
                  },
                  "name": {
                    "type": "string",
                    "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
                  },
                  "error": {
                    "id": "Status",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The status code, which should be an enum value of google.rpc.Code."
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object. Contains field @type with type URL."
                          }
                        },
                        "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                      },
                      "message": {
                        "type": "string",
                        "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                      }
                    },
                    "description": "The error result of the operation in case of failure or cancellation."
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "response": {
                    "type": "object",
                    "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  }
                },
                "description": "This resource represents a long-running operation that is the result of a network API call."
              },
              "description": "A list of operations that matches the specified filter in the request."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The standard List next-page token."
            }
          },
          "description": "The response message for Operations.ListOperations."
        }
      ]
  projects.locations.registrations.configureContactSettings:
    description: |-
      Updates a `Registration`'s contact settings. Some changes require confirmation by the domain's registrant contact .
    versions:
      from: 1.0.0
    link: https://cloud.google.com/domains/docs/reference/rest/v1beta1/projects.locations.registrations/configureContactSettings
    example:
      inputs: [
        {
          "id": "ConfigureContactSettingsRequest",
          "type": "object",
          "properties": {
            "updateMask": {
              "type": "string",
              "format": "google-fieldmask",
              "description": "Required. The field mask describing which fields to update as a comma-separated list. For example, if only the registrant contact is being updated, the `update_mask` would be `\"registrant_contact\"`."
            },
            "validateOnly": {
              "type": "boolean",
              "description": "Validate the request without actually updating the contact settings."
            },
            "contactNotices": {
              "type": "array",
              "items": {
                "enum": [
                  "CONTACT_NOTICE_UNSPECIFIED",
                  "PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT"
                ],
                "type": "string",
                "enumDescriptions": [
                  "The notice is undefined.",
                  "Required when setting the `privacy` field of `ContactSettings` to `PUBLIC_CONTACT_DATA`, which exposes contact data publicly."
                ]
              },
              "description": "The list of contact notices that the caller acknowledges. The notices needed here depend on the values specified in `contact_settings`."
            },
            "contactSettings": {
              "id": "ContactSettings",
              "type": "object",
              "properties": {
                "privacy": {
                  "enum": [
                    "CONTACT_PRIVACY_UNSPECIFIED",
                    "PUBLIC_CONTACT_DATA",
                    "PRIVATE_CONTACT_DATA",
                    "REDACTED_CONTACT_DATA"
                  ],
                  "type": "string",
                  "description": "Required. Privacy setting for the contacts associated with the `Registration`.",
                  "enumDescriptions": [
                    "The contact privacy settings are undefined.",
                    "All the data from `ContactSettings` is publicly available. When setting this option, you must also provide a `PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT` in the `contact_notices` field of the request.",
                    "None of the data from `ContactSettings` is publicly available. Instead, proxy contact data is published for your domain. Email sent to the proxy email address is forwarded to the registrant's email address. Cloud Domains provides this privacy proxy service at no additional cost.",
                    "Some data from `ContactSettings` is publicly available. The actual information redacted depends on the domain. For details, see [the registration privacy article](https://support.google.com/domains/answer/3251242)."
                  ]
                },
                "adminContact": {
                  "id": "Contact",
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "description": "Required. Email address of the contact."
                    },
                    "faxNumber": {
                      "type": "string",
                      "description": "Fax number of the contact in international format. For example, `\"+1-800-555-0123\"`."
                    },
                    "phoneNumber": {
                      "type": "string",
                      "description": "Required. Phone number of the contact in international format. For example, `\"+1-800-555-0123\"`."
                    },
                    "postalAddress": {
                      "id": "PostalAddress",
                      "type": "object",
                      "properties": {
                        "locality": {
                          "type": "string",
                          "description": "Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines."
                        },
                        "revision": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The schema revision of the `PostalAddress`. This must be set to 0, which is the latest revision. All new revisions **must** be backward compatible with old revisions."
                        },
                        "postalCode": {
                          "type": "string",
                          "description": "Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.)."
                        },
                        "recipients": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information."
                        },
                        "regionCode": {
                          "type": "string",
                          "description": "Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland."
                        },
                        "sortingCode": {
                          "type": "string",
                          "description": "Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. Côte d'Ivoire)."
                        },
                        "sublocality": {
                          "type": "string",
                          "description": "Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts."
                        },
                        "addressLines": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas)."
                        },
                        "languageCode": {
                          "type": "string",
                          "description": "Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\"."
                        },
                        "organization": {
                          "type": "string",
                          "description": "Optional. The name of the organization at the address."
                        },
                        "administrativeArea": {
                          "type": "string",
                          "description": "Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated."
                        }
                      },
                      "description": "Required. Postal address of the contact."
                    }
                  },
                  "description": "Required. The administrative contact for the `Registration`."
                },
                "technicalContact": {
                  "id": "Contact",
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "description": "Required. Email address of the contact."
                    },
                    "faxNumber": {
                      "type": "string",
                      "description": "Fax number of the contact in international format. For example, `\"+1-800-555-0123\"`."
                    },
                    "phoneNumber": {
                      "type": "string",
                      "description": "Required. Phone number of the contact in international format. For example, `\"+1-800-555-0123\"`."
                    },
                    "postalAddress": {
                      "id": "PostalAddress",
                      "type": "object",
                      "properties": {
                        "locality": {
                          "type": "string",
                          "description": "Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines."
                        },
                        "revision": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The schema revision of the `PostalAddress`. This must be set to 0, which is the latest revision. All new revisions **must** be backward compatible with old revisions."
                        },
                        "postalCode": {
                          "type": "string",
                          "description": "Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.)."
                        },
                        "recipients": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information."
                        },
                        "regionCode": {
                          "type": "string",
                          "description": "Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland."
                        },
                        "sortingCode": {
                          "type": "string",
                          "description": "Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. Côte d'Ivoire)."
                        },
                        "sublocality": {
                          "type": "string",
                          "description": "Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts."
                        },
                        "addressLines": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas)."
                        },
                        "languageCode": {
                          "type": "string",
                          "description": "Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\"."
                        },
                        "organization": {
                          "type": "string",
                          "description": "Optional. The name of the organization at the address."
                        },
                        "administrativeArea": {
                          "type": "string",
                          "description": "Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated."
                        }
                      },
                      "description": "Required. Postal address of the contact."
                    }
                  },
                  "description": "Required. The technical contact for the `Registration`."
                },
                "registrantContact": {
                  "id": "Contact",
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "description": "Required. Email address of the contact."
                    },
                    "faxNumber": {
                      "type": "string",
                      "description": "Fax number of the contact in international format. For example, `\"+1-800-555-0123\"`."
                    },
                    "phoneNumber": {
                      "type": "string",
                      "description": "Required. Phone number of the contact in international format. For example, `\"+1-800-555-0123\"`."
                    },
                    "postalAddress": {
                      "id": "PostalAddress",
                      "type": "object",
                      "properties": {
                        "locality": {
                          "type": "string",
                          "description": "Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines."
                        },
                        "revision": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The schema revision of the `PostalAddress`. This must be set to 0, which is the latest revision. All new revisions **must** be backward compatible with old revisions."
                        },
                        "postalCode": {
                          "type": "string",
                          "description": "Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.)."
                        },
                        "recipients": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information."
                        },
                        "regionCode": {
                          "type": "string",
                          "description": "Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland."
                        },
                        "sortingCode": {
                          "type": "string",
                          "description": "Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. Côte d'Ivoire)."
                        },
                        "sublocality": {
                          "type": "string",
                          "description": "Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts."
                        },
                        "addressLines": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas)."
                        },
                        "languageCode": {
                          "type": "string",
                          "description": "Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\"."
                        },
                        "organization": {
                          "type": "string",
                          "description": "Optional. The name of the organization at the address."
                        },
                        "administrativeArea": {
                          "type": "string",
                          "description": "Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated."
                        }
                      },
                      "description": "Required. Postal address of the contact."
                    }
                  },
                  "description": "Required. The registrant contact for the `Registration`. *Caution: Anyone with access to this email address, phone number, and/or postal address can take control of the domain.* *Warning: For new `Registration`s, the registrant will receive an email confirmation that they must complete within 15 days to avoid domain suspension.*"
                }
              },
              "description": "Fields of the `ContactSettings` to update."
            }
          },
          "description": "Request for the `ConfigureContactSettings` method."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.registrations.configureDnsSettings:
    description: |-
      Updates a `Registration`'s DNS settings.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/domains/docs/reference/rest/v1beta1/projects.locations.registrations/configureDnsSettings
    example:
      inputs: [
        {
          "id": "ConfigureDnsSettingsRequest",
          "type": "object",
          "properties": {
            "updateMask": {
              "type": "string",
              "format": "google-fieldmask",
              "description": "Required. The field mask describing which fields to update as a comma-separated list. For example, if only the name servers are being updated for an existing Custom DNS configuration, the `update_mask` would be `\"custom_dns.name_servers\"`. When changing the DNS provider from one type to another, pass the new provider's field name as part of the field mask. For example, when changing from a Google Domains DNS configuration to a Custom DNS configuration, the `update_mask` would be `\"custom_dns\"`. //"
            },
            "dnsSettings": {
              "id": "DnsSettings",
              "type": "object",
              "properties": {
                "customDns": {
                  "id": "CustomDns",
                  "type": "object",
                  "properties": {
                    "dsRecords": {
                      "type": "array",
                      "items": {
                        "id": "DsRecord",
                        "type": "object",
                        "properties": {
                          "digest": {
                            "type": "string",
                            "description": "The digest generated from the referenced DNSKEY."
                          },
                          "keyTag": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The key tag of the record. Must be set in range 0 -- 65535."
                          },
                          "algorithm": {
                            "enum": [
                              "ALGORITHM_UNSPECIFIED",
                              "DSA",
                              "ECC",
                              "RSASHA1",
                              "DSANSEC3SHA1",
                              "RSASHA1NSEC3SHA1",
                              "RSASHA256",
                              "RSASHA512",
                              "ECCGOST",
                              "ECDSAP256SHA256",
                              "ECDSAP384SHA384",
                              "ED25519",
                              "ED448"
                            ],
                            "type": "string",
                            "description": "The algorithm used to generate the referenced DNSKEY.",
                            "enumDescriptions": [
                              "The algorithm is unspecified.",
                              "DSA/SHA1. Not recommended for new deployments.",
                              "ECC. Not recommended for new deployments.",
                              "RSA/SHA-1. Not recommended for new deployments.",
                              "DSA-NSEC3-SHA1. Not recommended for new deployments.",
                              "RSA/SHA1-NSEC3-SHA1. Not recommended for new deployments.",
                              "RSA/SHA-256.",
                              "RSA/SHA-512.",
                              "GOST R 34.10-2001.",
                              "ECDSA Curve P-256 with SHA-256.",
                              "ECDSA Curve P-384 with SHA-384.",
                              "Ed25519.",
                              "Ed448."
                            ]
                          },
                          "digestType": {
                            "enum": [
                              "DIGEST_TYPE_UNSPECIFIED",
                              "SHA1",
                              "SHA256",
                              "GOST3411",
                              "SHA384"
                            ],
                            "type": "string",
                            "description": "The hash function used to generate the digest of the referenced DNSKEY.",
                            "enumDescriptions": [
                              "The DigestType is unspecified.",
                              "SHA-1. Not recommended for new deployments.",
                              "SHA-256.",
                              "GOST R 34.11-94.",
                              "SHA-384."
                            ]
                          }
                        },
                        "description": "Defines a Delegation Signer (DS) record, which is needed to enable DNSSEC for a domain. It contains a digest (hash) of a DNSKEY record that must be present in the domain's DNS zone."
                      },
                      "description": "The list of DS records for this domain, which are used to enable DNSSEC. The domain's DNS provider can provide the values to set here. If this field is empty, DNSSEC is disabled."
                    },
                    "nameServers": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Required. A list of name servers that store the DNS zone for this domain. Each name server is a domain name, with Unicode domain names expressed in Punycode format."
                    }
                  },
                  "description": "An arbitrary DNS provider identified by its name servers."
                },
                "glueRecords": {
                  "type": "array",
                  "items": {
                    "id": "GlueRecord",
                    "type": "object",
                    "properties": {
                      "hostName": {
                        "type": "string",
                        "description": "Required. Domain name of the host in Punycode format."
                      },
                      "ipv4Addresses": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of IPv4 addresses corresponding to this host in the standard decimal format (e.g. `198.51.100.1`). At least one of `ipv4_address` and `ipv6_address` must be set."
                      },
                      "ipv6Addresses": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of IPv6 addresses corresponding to this host in the standard hexadecimal format (e.g. `2001:db8::`). At least one of `ipv4_address` and `ipv6_address` must be set."
                      }
                    },
                    "description": "Defines a host on your domain that is a DNS name server for your domain and/or other domains. Glue records are a way of making the IP address of a name server known, even when it serves DNS queries for its parent domain. For example, when `ns.example.com` is a name server for `example.com`, the host `ns.example.com` must have a glue record to break the circular DNS reference."
                  },
                  "description": "The list of glue records for this `Registration`. Commonly empty."
                },
                "googleDomainsDns": {
                  "id": "GoogleDomainsDns",
                  "type": "object",
                  "properties": {
                    "dsState": {
                      "enum": [
                        "DS_STATE_UNSPECIFIED",
                        "DS_RECORDS_UNPUBLISHED",
                        "DS_RECORDS_PUBLISHED"
                      ],
                      "type": "string",
                      "description": "Required. The state of DS records for this domain. Used to enable or disable automatic DNSSEC.",
                      "enumDescriptions": [
                        "DS state is unspecified.",
                        "DNSSEC is disabled for this domain. No DS records for this domain are published in the parent DNS zone.",
                        "DNSSEC is enabled for this domain. Appropriate DS records for this domain are published in the parent DNS zone. This option is valid only if the DNS zone referenced in the `Registration`'s `dns_provider` field is already DNSSEC-signed."
                      ]
                    },
                    "dsRecords": {
                      "type": "array",
                      "items": {
                        "id": "DsRecord",
                        "type": "object",
                        "properties": {
                          "digest": {
                            "type": "string",
                            "description": "The digest generated from the referenced DNSKEY."
                          },
                          "keyTag": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The key tag of the record. Must be set in range 0 -- 65535."
                          },
                          "algorithm": {
                            "enum": [
                              "ALGORITHM_UNSPECIFIED",
                              "DSA",
                              "ECC",
                              "RSASHA1",
                              "DSANSEC3SHA1",
                              "RSASHA1NSEC3SHA1",
                              "RSASHA256",
                              "RSASHA512",
                              "ECCGOST",
                              "ECDSAP256SHA256",
                              "ECDSAP384SHA384",
                              "ED25519",
                              "ED448"
                            ],
                            "type": "string",
                            "description": "The algorithm used to generate the referenced DNSKEY.",
                            "enumDescriptions": [
                              "The algorithm is unspecified.",
                              "DSA/SHA1. Not recommended for new deployments.",
                              "ECC. Not recommended for new deployments.",
                              "RSA/SHA-1. Not recommended for new deployments.",
                              "DSA-NSEC3-SHA1. Not recommended for new deployments.",
                              "RSA/SHA1-NSEC3-SHA1. Not recommended for new deployments.",
                              "RSA/SHA-256.",
                              "RSA/SHA-512.",
                              "GOST R 34.10-2001.",
                              "ECDSA Curve P-256 with SHA-256.",
                              "ECDSA Curve P-384 with SHA-384.",
                              "Ed25519.",
                              "Ed448."
                            ]
                          },
                          "digestType": {
                            "enum": [
                              "DIGEST_TYPE_UNSPECIFIED",
                              "SHA1",
                              "SHA256",
                              "GOST3411",
                              "SHA384"
                            ],
                            "type": "string",
                            "description": "The hash function used to generate the digest of the referenced DNSKEY.",
                            "enumDescriptions": [
                              "The DigestType is unspecified.",
                              "SHA-1. Not recommended for new deployments.",
                              "SHA-256.",
                              "GOST R 34.11-94.",
                              "SHA-384."
                            ]
                          }
                        },
                        "description": "Defines a Delegation Signer (DS) record, which is needed to enable DNSSEC for a domain. It contains a digest (hash) of a DNSKEY record that must be present in the domain's DNS zone."
                      },
                      "readOnly": true,
                      "description": "Output only. The list of DS records published for this domain. The list is automatically populated when `ds_state` is `DS_RECORDS_PUBLISHED`, otherwise it remains empty."
                    },
                    "nameServers": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true,
                      "description": "Output only. A list of name servers that store the DNS zone for this domain. Each name server is a domain name, with Unicode domain names expressed in Punycode format. This field is automatically populated with the name servers assigned to the Google Domains DNS zone."
                    }
                  },
                  "description": "The free DNS zone provided by [Google Domains](https://domains.google/)."
                }
              },
              "description": "Fields of the `DnsSettings` to update."
            },
            "validateOnly": {
              "type": "boolean",
              "description": "Validate the request without actually updating the DNS settings."
            }
          },
          "description": "Request for the `ConfigureDnsSettings` method."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.registrations.configureManagementSettings:
    description: |-
      Updates a `Registration`'s management settings.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/domains/docs/reference/rest/v1beta1/projects.locations.registrations/configureManagementSettings
    example:
      inputs: [
        {
          "id": "ConfigureManagementSettingsRequest",
          "type": "object",
          "properties": {
            "updateMask": {
              "type": "string",
              "format": "google-fieldmask",
              "description": "Required. The field mask describing which fields to update as a comma-separated list. For example, if only the transfer lock is being updated, the `update_mask` would be `\"transfer_lock_state\"`."
            },
            "managementSettings": {
              "id": "ManagementSettings",
              "type": "object",
              "properties": {
                "renewalMethod": {
                  "enum": [
                    "RENEWAL_METHOD_UNSPECIFIED",
                    "AUTOMATIC_RENEWAL",
                    "MANUAL_RENEWAL"
                  ],
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. The renewal method for this `Registration`.",
                  "enumDescriptions": [
                    "The renewal method is undefined.",
                    "The domain is automatically renewed each year . To disable automatic renewals, export the domain by calling `ExportRegistration` .",
                    "The domain must be explicitly renewed each year before its `expire_time`. This option is only available when the `Registration` is in state `EXPORTED`. To manage the domain's current billing and renewal settings, go to [Google Domains](https://domains.google/)."
                  ]
                },
                "transferLockState": {
                  "enum": [
                    "TRANSFER_LOCK_STATE_UNSPECIFIED",
                    "UNLOCKED",
                    "LOCKED"
                  ],
                  "type": "string",
                  "description": "Controls whether the domain can be transferred to another registrar.",
                  "enumDescriptions": [
                    "The state is unspecified.",
                    "The domain is unlocked and can be transferred to another registrar.",
                    "The domain is locked and cannot be transferred to another registrar."
                  ]
                }
              },
              "description": "Fields of the `ManagementSettings` to update."
            }
          },
          "description": "Request for the `ConfigureManagementSettings` method."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.registrations.delete:
    description: |-
      Deletes a `Registration` resource. This method only works on resources in one of the following states: * `state` is `EXPORTED` with `expire_time` in the past * `state` is `REGISTRATION_FAILED`
    versions:
      from: 1.0.0
    link: https://cloud.google.com/domains/docs/reference/rest/v1beta1/projects.locations.registrations/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.registrations.export:
    description: |-
      Exports a `Registration` that you no longer want to use with Cloud Domains. You can continue to use the domain in [Google Domains](https://domains.google/) until it expires. If the export is successful: * The resource's `state` becomes `EXPORTED`, meaning that it is no longer managed by Cloud Domains * Because individual users can own domains in Google Domains, the calling user becomes the domain's sole owner. Permissions for the domain are subsequently managed in Google Domains. * Without further action, the domain does not renew automatically. The new owner can set up billing in Google Domains to renew the domain if needed.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/domains/docs/reference/rest/v1beta1/projects.locations.registrations/export
    example:
      inputs: [
        {
          "id": "ExportRegistrationRequest",
          "type": "object",
          "properties": {},
          "description": "Request for the `ExportRegistration` method."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.registrations.get:
    description: |-
      Gets the details of a `Registration` resource.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/domains/docs/reference/rest/v1beta1/projects.locations.registrations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.registrations.getIamPolicy:
    description: |-
      Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/domains/docs/reference/rest/v1beta1/projects.locations.registrations/getIamPolicy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            },
            "auditConfigs": {
              "type": "array",
              "items": {
                "id": "AuditConfig",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                  },
                  "auditLogConfigs": {
                    "type": "array",
                    "items": {
                      "id": "AuditLogConfig",
                      "type": "object",
                      "properties": {
                        "logType": {
                          "enum": [
                            "LOG_TYPE_UNSPECIFIED",
                            "ADMIN_READ",
                            "DATA_WRITE",
                            "DATA_READ"
                          ],
                          "type": "string",
                          "description": "The log type that this config enables.",
                          "enumDescriptions": [
                            "Default case. Should never be this.",
                            "Admin reads. Example: CloudIAM getIamPolicy",
                            "Data writes. Example: CloudSQL Users create",
                            "Data reads. Example: CloudSQL Users list"
                          ]
                        },
                        "exemptedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                        }
                      },
                      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                    },
                    "description": "The configuration for logging of each type of permission."
                  }
                },
                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
              },
              "description": "Specifies cloud audit logging configuration for this policy."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  projects.locations.registrations.list:
    description: |-
      Lists the `Registration` resources in a project.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/domains/docs/reference/rest/v1beta1/projects.locations.registrations/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.registrations.patch:
    description: |-
      Updates select fields of a `Registration` resource, notably `labels`. To update other fields, use the appropriate custom update method: * To update management settings, see `ConfigureManagementSettings` * To update DNS configuration, see `ConfigureDnsSettings` * To update contact information, see `ConfigureContactSettings`
    versions:
      from: 1.0.0
    link: https://cloud.google.com/domains/docs/reference/rest/v1beta1/projects.locations.registrations/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.registrations.register:
    description: |-
      Registers a new domain name and creates a corresponding `Registration` resource. Call `RetrieveRegisterParameters` first to check availability of the domain name and determine parameters like price that are needed to build a call to this method. A successful call creates a `Registration` resource in state `REGISTRATION_PENDING`, which resolves to `ACTIVE` within 1-2 minutes, indicating that the domain was successfully registered. If the resource ends up in state `REGISTRATION_FAILED`, it indicates that the domain was not registered successfully, and you can safely delete the resource and retry registration.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/domains/docs/reference/rest/v1beta1/projects.locations.registrations/register
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.registrations.resetAuthorizationCode:
    description: |-
      Resets the authorization code of the `Registration` to a new random string. You can call this method only after 60 days have elapsed since the initial domain registration.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/domains/docs/reference/rest/v1beta1/projects.locations.registrations/resetAuthorizationCode
    example:
      inputs: [
        {
          "id": "ResetAuthorizationCodeRequest",
          "type": "object",
          "properties": {},
          "description": "Request for the `ResetAuthorizationCode` method."
        }
      ]
      outputs: [
        {
          "id": "AuthorizationCode",
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "The Authorization Code in ASCII. It can be used to transfer the domain to or from another registrar."
            }
          },
          "description": "Defines an authorization code."
        }
      ]
  projects.locations.registrations.retrieveAuthorizationCode:
    description: |-
      Gets the authorization code of the `Registration` for the purpose of transferring the domain to another registrar. You can call this method only after 60 days have elapsed since the initial domain registration.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/domains/docs/reference/rest/v1beta1/projects.locations.registrations/retrieveAuthorizationCode
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "AuthorizationCode",
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "The Authorization Code in ASCII. It can be used to transfer the domain to or from another registrar."
            }
          },
          "description": "Defines an authorization code."
        }
      ]
  projects.locations.registrations.retrieveRegisterParameters:
    description: |-
      Gets parameters needed to register a new domain name, including price and up-to-date availability. Use the returned values to call `RegisterDomain`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/domains/docs/reference/rest/v1beta1/projects.locations.registrations/retrieveRegisterParameters
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "RetrieveRegisterParametersResponse",
          "type": "object",
          "properties": {
            "registerParameters": {
              "id": "RegisterParameters",
              "type": "object",
              "properties": {
                "domainName": {
                  "type": "string",
                  "description": "The domain name. Unicode domain names are expressed in Punycode format."
                },
                "yearlyPrice": {
                  "id": "Money",
                  "type": "object",
                  "properties": {
                    "nanos": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
                    },
                    "units": {
                      "type": "string",
                      "format": "int64",
                      "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
                    },
                    "currencyCode": {
                      "type": "string",
                      "description": "The three-letter currency code defined in ISO 4217."
                    }
                  },
                  "description": "Price to register or renew the domain for one year."
                },
                "availability": {
                  "enum": [
                    "AVAILABILITY_UNSPECIFIED",
                    "AVAILABLE",
                    "UNAVAILABLE",
                    "UNSUPPORTED",
                    "UNKNOWN"
                  ],
                  "type": "string",
                  "description": "Indicates whether the domain is available for registration. This value is accurate when obtained by calling `RetrieveRegisterParameters`, but is approximate when obtained by calling `SearchDomains`.",
                  "enumDescriptions": [
                    "The availability is unspecified.",
                    "The domain is available for registration.",
                    "The domain is not available for registration. Generally this means it is already registered to another party.",
                    "The domain is not currently supported by Cloud Domains, but may be available elsewhere.",
                    "Cloud Domains is unable to determine domain availability, generally due to system maintenance at the domain name registry."
                  ]
                },
                "domainNotices": {
                  "type": "array",
                  "items": {
                    "enum": [
                      "DOMAIN_NOTICE_UNSPECIFIED",
                      "HSTS_PRELOADED"
                    ],
                    "type": "string",
                    "enumDescriptions": [
                      "The notice is undefined.",
                      "Indicates that the domain is preloaded on the HTTP Strict Transport Security list in browsers. Serving a website on such domain requires an SSL certificate. For details, see [how to get an SSL certificate](https://support.google.com/domains/answer/7638036)."
                    ]
                  },
                  "description": "Notices about special properties of the domain."
                },
                "supportedPrivacy": {
                  "type": "array",
                  "items": {
                    "enum": [
                      "CONTACT_PRIVACY_UNSPECIFIED",
                      "PUBLIC_CONTACT_DATA",
                      "PRIVATE_CONTACT_DATA",
                      "REDACTED_CONTACT_DATA"
                    ],
                    "type": "string",
                    "enumDescriptions": [
                      "The contact privacy settings are undefined.",
                      "All the data from `ContactSettings` is publicly available. When setting this option, you must also provide a `PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT` in the `contact_notices` field of the request.",
                      "None of the data from `ContactSettings` is publicly available. Instead, proxy contact data is published for your domain. Email sent to the proxy email address is forwarded to the registrant's email address. Cloud Domains provides this privacy proxy service at no additional cost.",
                      "Some data from `ContactSettings` is publicly available. The actual information redacted depends on the domain. For details, see [the registration privacy article](https://support.google.com/domains/answer/3251242)."
                    ]
                  },
                  "description": "Contact privacy options that the domain supports."
                }
              },
              "description": "Parameters to use when calling the `RegisterDomain` method."
            }
          },
          "description": "Response for the `RetrieveRegisterParameters` method."
        }
      ]
  projects.locations.registrations.searchDomains:
    description: |-
      Searches for available domain names similar to the provided query. Availability results from this method are approximate; call `RetrieveRegisterParameters` on a domain before registering to confirm availability.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/domains/docs/reference/rest/v1beta1/projects.locations.registrations/searchDomains
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "SearchDomainsResponse",
          "type": "object",
          "properties": {
            "registerParameters": {
              "type": "array",
              "items": {
                "id": "RegisterParameters",
                "type": "object",
                "properties": {
                  "domainName": {
                    "type": "string",
                    "description": "The domain name. Unicode domain names are expressed in Punycode format."
                  },
                  "yearlyPrice": {
                    "id": "Money",
                    "type": "object",
                    "properties": {
                      "nanos": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
                      },
                      "units": {
                        "type": "string",
                        "format": "int64",
                        "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
                      },
                      "currencyCode": {
                        "type": "string",
                        "description": "The three-letter currency code defined in ISO 4217."
                      }
                    },
                    "description": "Price to register or renew the domain for one year."
                  },
                  "availability": {
                    "enum": [
                      "AVAILABILITY_UNSPECIFIED",
                      "AVAILABLE",
                      "UNAVAILABLE",
                      "UNSUPPORTED",
                      "UNKNOWN"
                    ],
                    "type": "string",
                    "description": "Indicates whether the domain is available for registration. This value is accurate when obtained by calling `RetrieveRegisterParameters`, but is approximate when obtained by calling `SearchDomains`.",
                    "enumDescriptions": [
                      "The availability is unspecified.",
                      "The domain is available for registration.",
                      "The domain is not available for registration. Generally this means it is already registered to another party.",
                      "The domain is not currently supported by Cloud Domains, but may be available elsewhere.",
                      "Cloud Domains is unable to determine domain availability, generally due to system maintenance at the domain name registry."
                    ]
                  },
                  "domainNotices": {
                    "type": "array",
                    "items": {
                      "enum": [
                        "DOMAIN_NOTICE_UNSPECIFIED",
                        "HSTS_PRELOADED"
                      ],
                      "type": "string",
                      "enumDescriptions": [
                        "The notice is undefined.",
                        "Indicates that the domain is preloaded on the HTTP Strict Transport Security list in browsers. Serving a website on such domain requires an SSL certificate. For details, see [how to get an SSL certificate](https://support.google.com/domains/answer/7638036)."
                      ]
                    },
                    "description": "Notices about special properties of the domain."
                  },
                  "supportedPrivacy": {
                    "type": "array",
                    "items": {
                      "enum": [
                        "CONTACT_PRIVACY_UNSPECIFIED",
                        "PUBLIC_CONTACT_DATA",
                        "PRIVATE_CONTACT_DATA",
                        "REDACTED_CONTACT_DATA"
                      ],
                      "type": "string",
                      "enumDescriptions": [
                        "The contact privacy settings are undefined.",
                        "All the data from `ContactSettings` is publicly available. When setting this option, you must also provide a `PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT` in the `contact_notices` field of the request.",
                        "None of the data from `ContactSettings` is publicly available. Instead, proxy contact data is published for your domain. Email sent to the proxy email address is forwarded to the registrant's email address. Cloud Domains provides this privacy proxy service at no additional cost.",
                        "Some data from `ContactSettings` is publicly available. The actual information redacted depends on the domain. For details, see [the registration privacy article](https://support.google.com/domains/answer/3251242)."
                      ]
                    },
                    "description": "Contact privacy options that the domain supports."
                  }
                },
                "description": "Parameters required to register a new domain."
              },
              "description": "Results of the domain name search."
            }
          },
          "description": "Response for the `SearchDomains` method."
        }
      ]
  projects.locations.registrations.setIamPolicy:
    description: |-
      Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/domains/docs/reference/rest/v1beta1/projects.locations.registrations/setIamPolicy
    example:
      inputs: [
        {
          "id": "SetIamPolicyRequest",
          "type": "object",
          "properties": {
            "policy": {
              "id": "Policy",
              "type": "object",
              "properties": {
                "etag": {
                  "type": "string",
                  "format": "byte",
                  "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
                },
                "version": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                },
                "bindings": {
                  "type": "array",
                  "items": {
                    "id": "Binding",
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                      },
                      "members": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                      },
                      "condition": {
                        "id": "Expr",
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                          },
                          "location": {
                            "type": "string",
                            "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                          },
                          "expression": {
                            "type": "string",
                            "description": "Textual representation of an expression in Common Expression Language syntax."
                          },
                          "description": {
                            "type": "string",
                            "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                          }
                        },
                        "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                      }
                    },
                    "description": "Associates `members` with a `role`."
                  },
                  "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
                },
                "auditConfigs": {
                  "type": "array",
                  "items": {
                    "id": "AuditConfig",
                    "type": "object",
                    "properties": {
                      "service": {
                        "type": "string",
                        "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                      },
                      "auditLogConfigs": {
                        "type": "array",
                        "items": {
                          "id": "AuditLogConfig",
                          "type": "object",
                          "properties": {
                            "logType": {
                              "enum": [
                                "LOG_TYPE_UNSPECIFIED",
                                "ADMIN_READ",
                                "DATA_WRITE",
                                "DATA_READ"
                              ],
                              "type": "string",
                              "description": "The log type that this config enables.",
                              "enumDescriptions": [
                                "Default case. Should never be this.",
                                "Admin reads. Example: CloudIAM getIamPolicy",
                                "Data writes. Example: CloudSQL Users create",
                                "Data reads. Example: CloudSQL Users list"
                              ]
                            },
                            "exemptedMembers": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                            }
                          },
                          "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                        },
                        "description": "The configuration for logging of each type of permission."
                      }
                    },
                    "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
                  },
                  "description": "Specifies cloud audit logging configuration for this policy."
                }
              },
              "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
            },
            "updateMask": {
              "type": "string",
              "format": "google-fieldmask",
              "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`"
            }
          },
          "description": "Request message for `SetIamPolicy` method."
        }
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            },
            "auditConfigs": {
              "type": "array",
              "items": {
                "id": "AuditConfig",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                  },
                  "auditLogConfigs": {
                    "type": "array",
                    "items": {
                      "id": "AuditLogConfig",
                      "type": "object",
                      "properties": {
                        "logType": {
                          "enum": [
                            "LOG_TYPE_UNSPECIFIED",
                            "ADMIN_READ",
                            "DATA_WRITE",
                            "DATA_READ"
                          ],
                          "type": "string",
                          "description": "The log type that this config enables.",
                          "enumDescriptions": [
                            "Default case. Should never be this.",
                            "Admin reads. Example: CloudIAM getIamPolicy",
                            "Data writes. Example: CloudSQL Users create",
                            "Data reads. Example: CloudSQL Users list"
                          ]
                        },
                        "exemptedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                        }
                      },
                      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                    },
                    "description": "The configuration for logging of each type of permission."
                  }
                },
                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
              },
              "description": "Specifies cloud audit logging configuration for this policy."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  projects.locations.registrations.testIamPermissions:
    description: |-
      Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/domains/docs/reference/rest/v1beta1/projects.locations.registrations/testIamPermissions
    example:
      inputs: [
        {
          "id": "TestIamPermissionsRequest",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
            }
          },
          "description": "Request message for `TestIamPermissions` method."
        }
      ]
      outputs: [
        {
          "id": "TestIamPermissionsResponse",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
            }
          },
          "description": "Response message for `TestIamPermissions` method."
        }
      ]