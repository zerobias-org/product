Product:
  name: GCP Service Infrastructure
  versions: [1.0.0]
  package: google.gcp.serviceinfrastructure
  description: |-
    Service Infrastructure
  link: https://cloud.google.com/service-infrastructure/docs/overview
  contentType: json
Operations:
  serviceconsumermanagement.operations.cancel:
    description: |-
      Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-consumer-management/reference/rest/v1/operations/cancel
    example:
      inputs: [
        {
          "id": "CancelOperationRequest",
          "type": "object",
          "properties": {},
          "description": "The request message for Operations.CancelOperation."
        }
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  serviceconsumermanagement.operations.delete:
    description: |-
      Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-consumer-management/reference/rest/v1/operations/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  serviceconsumermanagement.operations.get:
    description: |-
      Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-consumer-management/reference/rest/v1/operations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  serviceconsumermanagement.operations.list:
    description: |-
      Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-consumer-management/reference/rest/v1/operations/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListOperationsResponse",
          "type": "object",
          "properties": {
            "operations": {
              "type": "array",
              "items": {
                "id": "Operation",
                "type": "object",
                "properties": {
                  "done": {
                    "type": "boolean",
                    "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
                  },
                  "name": {
                    "type": "string",
                    "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
                  },
                  "error": {
                    "id": "Status",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The status code, which should be an enum value of google.rpc.Code."
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object. Contains field @type with type URL."
                          }
                        },
                        "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                      },
                      "message": {
                        "type": "string",
                        "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                      }
                    },
                    "description": "The error result of the operation in case of failure or cancellation."
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "response": {
                    "type": "object",
                    "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  }
                },
                "description": "This resource represents a long-running operation that is the result of a network API call."
              },
              "description": "A list of operations that matches the specified filter in the request."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The standard List next-page token."
            }
          },
          "description": "The response message for Operations.ListOperations."
        }
      ]
  serviceconsumermanagement.services.search:
    description: |-
      Search tenancy units for a managed service.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-consumer-management/reference/rest/v1/services/search
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "SearchTenancyUnitsResponse",
          "type": "object",
          "properties": {
            "tenancyUnits": {
              "type": "array",
              "items": {
                "id": "TenancyUnit",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Globally unique identifier of this tenancy unit \"services/{service}/{collection id}/{resource id}/tenancyUnits/{unit}\""
                  },
                  "service": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Google Cloud API name of the managed service owning this tenancy unit. For example 'serviceconsumermanagement.googleapis.com'."
                  },
                  "consumer": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. @OutputOnly Cloud resource name of the consumer of this service. For example 'projects/123456'."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. @OutputOnly The time this tenancy unit was created."
                  },
                  "tenantResources": {
                    "type": "array",
                    "items": {
                      "id": "TenantResource",
                      "type": "object",
                      "properties": {
                        "tag": {
                          "type": "string",
                          "description": "Unique per single tenancy unit."
                        },
                        "status": {
                          "enum": [
                            "STATUS_UNSPECIFIED",
                            "PENDING_CREATE",
                            "ACTIVE",
                            "PENDING_DELETE",
                            "FAILED",
                            "DELETED"
                          ],
                          "type": "string",
                          "description": "Status of tenant resource.",
                          "enumDescriptions": [
                            "Unspecified status is the default unset value.",
                            "Creation of the tenant resource is ongoing.",
                            "Active resource.",
                            "Deletion of the resource is ongoing.",
                            "Tenant resource creation or deletion has failed.",
                            "Tenant resource has been deleted."
                          ]
                        },
                        "resource": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Output only. @OutputOnly Identifier of the tenant resource. For cloud projects, it is in the form 'projects/{number}'. For example 'projects/123456'."
                        }
                      },
                      "description": "Resource constituting the TenancyUnit."
                    },
                    "description": "Resources constituting the tenancy unit. There can be at most 512 tenant resources in a tenancy unit."
                  }
                },
                "description": "Representation of a tenancy unit."
              },
              "description": "Tenancy Units matching the request."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Pagination token for large results."
            }
          },
          "description": "Response for the search query."
        }
      ]
  serviceconsumermanagement.services.tenancyUnits.addProject:
    description: |-
      Add a new tenant project to the tenancy unit. There can be a maximum of 1024 tenant projects in a tenancy unit. If there are previously failed `AddTenantProject` calls, you might need to call `RemoveTenantProject` first to resolve them before you can make another call to `AddTenantProject` with the same tag. Operation.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-consumer-management/reference/rest/v1/services.tenancyUnits/addProject
    example:
      inputs: [
        {
          "id": "AddTenantProjectRequest",
          "type": "object",
          "properties": {
            "tag": {
              "type": "string",
              "description": "Required. Tag of the added project. Must be less than 128 characters. Required."
            },
            "projectConfig": {
              "id": "TenantProjectConfig",
              "type": "object",
              "properties": {
                "folder": {
                  "type": "string",
                  "description": "Folder where project in this tenancy unit must be located This folder must have been previously created with the required permissions for the caller to create and configure a project in it. Valid folder resource names have the format `folders/{folder_number}` (for example, `folders/123456`)."
                },
                "labels": {
                  "type": "object",
                  "description": "Labels that are applied to this project.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "services": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Google Cloud API names of services that are activated on this project during provisioning. If any of these services can't be activated, the request fails. For example: 'compute.googleapis.com','cloudfunctions.googleapis.com'"
                },
                "billingConfig": {
                  "id": "BillingConfig",
                  "type": "object",
                  "properties": {
                    "billingAccount": {
                      "type": "string",
                      "description": "Name of the billing account. For example `billingAccounts/012345-567890-ABCDEF`."
                    }
                  },
                  "description": "Billing account properties. The billing account must be specified."
                },
                "tenantProjectPolicy": {
                  "id": "TenantProjectPolicy",
                  "type": "object",
                  "properties": {
                    "policyBindings": {
                      "type": "array",
                      "items": {
                        "id": "PolicyBinding",
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "description": "Role. (https://cloud.google.com/iam/docs/understanding-roles) For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                          },
                          "members": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Uses the same format as in IAM policy. `member` must include both a prefix and ID. For example, `user:{emailId}`, `serviceAccount:{emailId}`, `group:{emailId}`."
                          }
                        },
                        "description": "Translates to IAM Policy bindings (without auditing at this level)"
                      },
                      "description": "Policy bindings to be applied to the tenant project, in addition to the 'roles/owner' role granted to the Service Consumer Management service account. At least one binding must have the role `roles/owner`."
                    }
                  },
                  "description": "Describes ownership and policies for the new tenant project. Required."
                },
                "serviceAccountConfig": {
                  "id": "ServiceAccountConfig",
                  "type": "object",
                  "properties": {
                    "accountId": {
                      "type": "string",
                      "description": "ID of the IAM service account to be created in tenant project. The email format of the service account is \"@.iam.gserviceaccount.com\". This account ID must be unique within tenant project and service producers have to guarantee it. The ID must be 6-30 characters long, and match the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])`."
                    },
                    "tenantProjectRoles": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Roles for the associated service account for the tenant project."
                    }
                  },
                  "description": "Configuration for the IAM service account on the tenant project."
                }
              },
              "description": "Configuration of the new tenant project to be added to tenancy unit resources."
            }
          },
          "description": "Request to add a newly created and configured tenant project to a tenancy unit."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  serviceconsumermanagement.services.tenancyUnits.applyProjectConfig:
    description: |-
      Apply a configuration to an existing tenant project. This project must exist in an active state and have the original owner account. The caller must have permission to add a project to the given tenancy unit. The configuration is applied, but any existing settings on the project aren't modified. Specified policy bindings are applied. Existing bindings aren't modified. Specified services are activated. No service is deactivated. If specified, new billing configuration is applied. Omit a billing configuration to keep the existing one. A service account in the project is created if previously non existed. Specified labels will be appended to tenant project, note that the value of existing label key will be updated if the same label key is requested. The specified folder is ignored, as moving a tenant project to a different folder isn't supported. The operation fails if any of the steps fail, but no rollback of already applied configuration changes is attempted. Operation.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-consumer-management/reference/rest/v1/services.tenancyUnits/applyProjectConfig
    example:
      inputs: [
        {
          "id": "ApplyTenantProjectConfigRequest",
          "type": "object",
          "properties": {
            "tag": {
              "type": "string",
              "description": "Required. Tag of the project. Must be less than 128 characters. Required."
            },
            "projectConfig": {
              "id": "TenantProjectConfig",
              "type": "object",
              "properties": {
                "folder": {
                  "type": "string",
                  "description": "Folder where project in this tenancy unit must be located This folder must have been previously created with the required permissions for the caller to create and configure a project in it. Valid folder resource names have the format `folders/{folder_number}` (for example, `folders/123456`)."
                },
                "labels": {
                  "type": "object",
                  "description": "Labels that are applied to this project.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "services": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Google Cloud API names of services that are activated on this project during provisioning. If any of these services can't be activated, the request fails. For example: 'compute.googleapis.com','cloudfunctions.googleapis.com'"
                },
                "billingConfig": {
                  "id": "BillingConfig",
                  "type": "object",
                  "properties": {
                    "billingAccount": {
                      "type": "string",
                      "description": "Name of the billing account. For example `billingAccounts/012345-567890-ABCDEF`."
                    }
                  },
                  "description": "Billing account properties. The billing account must be specified."
                },
                "tenantProjectPolicy": {
                  "id": "TenantProjectPolicy",
                  "type": "object",
                  "properties": {
                    "policyBindings": {
                      "type": "array",
                      "items": {
                        "id": "PolicyBinding",
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "description": "Role. (https://cloud.google.com/iam/docs/understanding-roles) For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                          },
                          "members": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Uses the same format as in IAM policy. `member` must include both a prefix and ID. For example, `user:{emailId}`, `serviceAccount:{emailId}`, `group:{emailId}`."
                          }
                        },
                        "description": "Translates to IAM Policy bindings (without auditing at this level)"
                      },
                      "description": "Policy bindings to be applied to the tenant project, in addition to the 'roles/owner' role granted to the Service Consumer Management service account. At least one binding must have the role `roles/owner`."
                    }
                  },
                  "description": "Describes ownership and policies for the new tenant project. Required."
                },
                "serviceAccountConfig": {
                  "id": "ServiceAccountConfig",
                  "type": "object",
                  "properties": {
                    "accountId": {
                      "type": "string",
                      "description": "ID of the IAM service account to be created in tenant project. The email format of the service account is \"@.iam.gserviceaccount.com\". This account ID must be unique within tenant project and service producers have to guarantee it. The ID must be 6-30 characters long, and match the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])`."
                    },
                    "tenantProjectRoles": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Roles for the associated service account for the tenant project."
                    }
                  },
                  "description": "Configuration for the IAM service account on the tenant project."
                }
              },
              "description": "Configuration that should be applied to the existing tenant project."
            }
          },
          "description": "Request to apply configuration to an existing tenant project."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  serviceconsumermanagement.services.tenancyUnits.attachProject:
    description: |-
      Attach an existing project to the tenancy unit as a new tenant resource. The project could either be the tenant project reserved by calling `AddTenantProject` under a tenancy unit of a service producer's project of a managed service, or from a separate project. The caller is checked against a set of permissions as if calling `AddTenantProject` on the same service consumer. To trigger the attachment, the targeted tenant project must be in a folder. Make sure the ServiceConsumerManagement service account is the owner of that project. These two requirements are already met if the project is reserved by calling `AddTenantProject`. Operation.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-consumer-management/reference/rest/v1/services.tenancyUnits/attachProject
    example:
      inputs: [
        {
          "id": "AttachTenantProjectRequest",
          "type": "object",
          "properties": {
            "tag": {
              "type": "string",
              "description": "Required. Tag of the tenant resource after attachment. Must be less than 128 characters. Required."
            },
            "externalResource": {
              "type": "string",
              "description": "When attaching an external project, this is in the format of `projects/{project_number}`."
            },
            "reservedResource": {
              "type": "string",
              "description": "When attaching a reserved project already in tenancy units, this is the tag of a tenant resource under the tenancy unit for the managed service's service producer project. The reserved tenant resource must be in an active state."
            }
          },
          "description": "Request to attach an existing project to the tenancy unit as a new tenant resource."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  serviceconsumermanagement.services.tenancyUnits.create:
    description: |-
      Creates a tenancy unit with no tenant resources. If tenancy unit already exists, it will be returned, however, in this case, returned TenancyUnit does not have tenant_resources field set and ListTenancyUnits has to be used to get a complete TenancyUnit with all fields populated.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-consumer-management/reference/rest/v1/services.tenancyUnits/create
    example:
      inputs: [
        {
          "id": "CreateTenancyUnitRequest",
          "type": "object",
          "properties": {
            "tenancyUnitId": {
              "type": "string",
              "description": "Optional. Optional service producer-provided identifier of the tenancy unit. Must be no longer than 40 characters and preferably URI friendly. If it isn't provided, a UID for the tenancy unit is automatically generated. The identifier must be unique across a managed service. If the tenancy unit already exists for the managed service and service consumer pair, calling `CreateTenancyUnit` returns the existing tenancy unit if the provided identifier is identical or empty, otherwise the call fails."
            }
          },
          "description": "Request to create a tenancy unit for a service consumer of a managed service."
        }
      ]
      outputs: [
        {
          "id": "TenancyUnit",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Globally unique identifier of this tenancy unit \"services/{service}/{collection id}/{resource id}/tenancyUnits/{unit}\""
            },
            "service": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Google Cloud API name of the managed service owning this tenancy unit. For example 'serviceconsumermanagement.googleapis.com'."
            },
            "consumer": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. @OutputOnly Cloud resource name of the consumer of this service. For example 'projects/123456'."
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. @OutputOnly The time this tenancy unit was created."
            },
            "tenantResources": {
              "type": "array",
              "items": {
                "id": "TenantResource",
                "type": "object",
                "properties": {
                  "tag": {
                    "type": "string",
                    "description": "Unique per single tenancy unit."
                  },
                  "status": {
                    "enum": [
                      "STATUS_UNSPECIFIED",
                      "PENDING_CREATE",
                      "ACTIVE",
                      "PENDING_DELETE",
                      "FAILED",
                      "DELETED"
                    ],
                    "type": "string",
                    "description": "Status of tenant resource.",
                    "enumDescriptions": [
                      "Unspecified status is the default unset value.",
                      "Creation of the tenant resource is ongoing.",
                      "Active resource.",
                      "Deletion of the resource is ongoing.",
                      "Tenant resource creation or deletion has failed.",
                      "Tenant resource has been deleted."
                    ]
                  },
                  "resource": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. @OutputOnly Identifier of the tenant resource. For cloud projects, it is in the form 'projects/{number}'. For example 'projects/123456'."
                  }
                },
                "description": "Resource constituting the TenancyUnit."
              },
              "description": "Resources constituting the tenancy unit. There can be at most 512 tenant resources in a tenancy unit."
            }
          },
          "description": "Representation of a tenancy unit."
        }
      ]
  serviceconsumermanagement.services.tenancyUnits.delete:
    description: |-
      Delete a tenancy unit. Before you delete the tenancy unit, there should be no tenant resources in it that aren't in a DELETED state. Operation.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-consumer-management/reference/rest/v1/services.tenancyUnits/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  serviceconsumermanagement.services.tenancyUnits.deleteProject:
    description: |-
      Deletes the specified project resource identified by a tenant resource tag. The mothod removes a project lien with a 'TenantManager' origin if that was added. It will then attempt to delete the project. If that operation fails, this method also fails. After the project has been deleted, the tenant resource state is set to DELETED. To permanently remove resource metadata, call the `RemoveTenantProject` method. New resources with the same tag can't be added if there are existing resources in a DELETED state. Operation.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-consumer-management/reference/rest/v1/services.tenancyUnits/deleteProject
    example:
      inputs: [
        {
          "id": "DeleteTenantProjectRequest",
          "type": "object",
          "properties": {
            "tag": {
              "type": "string",
              "description": "Required. Tag of the resource within the tenancy unit."
            }
          },
          "description": "Request message to delete tenant project resource from the tenancy unit."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  serviceconsumermanagement.services.tenancyUnits.list:
    description: |-
      Find the tenancy unit for a managed service and service consumer. This method shouldn't be used in a service producer's runtime path, for example to find the tenant project number when creating VMs. Service producers must persist the tenant project's information after the project is created.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-consumer-management/reference/rest/v1/services.tenancyUnits/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListTenancyUnitsResponse",
          "type": "object",
          "properties": {
            "tenancyUnits": {
              "type": "array",
              "items": {
                "id": "TenancyUnit",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Globally unique identifier of this tenancy unit \"services/{service}/{collection id}/{resource id}/tenancyUnits/{unit}\""
                  },
                  "service": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Google Cloud API name of the managed service owning this tenancy unit. For example 'serviceconsumermanagement.googleapis.com'."
                  },
                  "consumer": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. @OutputOnly Cloud resource name of the consumer of this service. For example 'projects/123456'."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. @OutputOnly The time this tenancy unit was created."
                  },
                  "tenantResources": {
                    "type": "array",
                    "items": {
                      "id": "TenantResource",
                      "type": "object",
                      "properties": {
                        "tag": {
                          "type": "string",
                          "description": "Unique per single tenancy unit."
                        },
                        "status": {
                          "enum": [
                            "STATUS_UNSPECIFIED",
                            "PENDING_CREATE",
                            "ACTIVE",
                            "PENDING_DELETE",
                            "FAILED",
                            "DELETED"
                          ],
                          "type": "string",
                          "description": "Status of tenant resource.",
                          "enumDescriptions": [
                            "Unspecified status is the default unset value.",
                            "Creation of the tenant resource is ongoing.",
                            "Active resource.",
                            "Deletion of the resource is ongoing.",
                            "Tenant resource creation or deletion has failed.",
                            "Tenant resource has been deleted."
                          ]
                        },
                        "resource": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Output only. @OutputOnly Identifier of the tenant resource. For cloud projects, it is in the form 'projects/{number}'. For example 'projects/123456'."
                        }
                      },
                      "description": "Resource constituting the TenancyUnit."
                    },
                    "description": "Resources constituting the tenancy unit. There can be at most 512 tenant resources in a tenancy unit."
                  }
                },
                "description": "Representation of a tenancy unit."
              },
              "description": "Tenancy units matching the request."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Pagination token for large results."
            }
          },
          "description": "Response for the list request."
        }
      ]
  serviceconsumermanagement.services.tenancyUnits.removeProject:
    description: |-
      Removes the specified project resource identified by a tenant resource tag. The method removes the project lien with 'TenantManager' origin if that was added. It then attempts to delete the project. If that operation fails, this method also fails. Calls to remove already removed or non-existent tenant project succeed. After the project has been deleted, or if was already in a DELETED state, resource metadata is permanently removed from the tenancy unit. Operation.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-consumer-management/reference/rest/v1/services.tenancyUnits/removeProject
    example:
      inputs: [
        {
          "id": "RemoveTenantProjectRequest",
          "type": "object",
          "properties": {
            "tag": {
              "type": "string",
              "description": "Required. Tag of the resource within the tenancy unit."
            }
          },
          "description": "Request message to remove a tenant project resource from the tenancy unit."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  serviceconsumermanagement.services.tenancyUnits.undeleteProject:
    description: |-
      Attempts to undelete a previously deleted tenant project. The project must be in a DELETED state. There are no guarantees that an undeleted project will be in a fully restored and functional state. Call the `ApplyTenantProjectConfig` method to update its configuration and then validate all managed service resources. Operation.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-consumer-management/reference/rest/v1/services.tenancyUnits/undeleteProject
    example:
      inputs: [
        {
          "id": "UndeleteTenantProjectRequest",
          "type": "object",
          "properties": {
            "tag": {
              "type": "string",
              "description": "Required. Tag of the resource within the tenancy unit."
            }
          },
          "description": "Request message to undelete tenant project resource previously deleted from the tenancy unit."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  servicecontrol.services.check:
    description: |-
      Private Preview. This feature is only available for approved services. This method provides admission control for services that are integrated with [Service Infrastructure](/service-infrastructure). It checks whether an operation should be allowed based on the service configuration and relevant policies. It must be called before the operation is executed. For more information, see [Admission Control](/service-infrastructure/docs/admission-control). NOTE: The admission control has an expected policy propagation delay of 60s. The caller **must** not depend on the most recent policy changes. NOTE: The admission control has a hard limit of 1 referenced resources per call. If an operation refers to more than 1 resources, the caller must call the Check method multiple times. This method requires the `servicemanagement.services.check` permission on the specified service. For more information, see [Service Control API Access Control](https://cloud.google.com/service-infrastructure/docs/service-control/access-control).
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-control/reference/rest/v2/services/check
    example:
      inputs: [
        {
          "id": "CheckRequest",
          "type": "object",
          "properties": {
            "flags": {
              "type": "string",
              "description": "Optional. Contains a comma-separated list of flags."
            },
            "resources": {
              "type": "array",
              "items": {
                "id": "ResourceInfo",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the resource referenced in the request."
                  },
                  "type": {
                    "type": "string",
                    "description": "The resource type in the format of \"{service}/{kind}\"."
                  },
                  "location": {
                    "type": "string",
                    "description": "Optional. The location of the resource. The value must be a valid zone, region or multiregion. For example: \"europe-west4\" or \"northamerica-northeast1-a\""
                  },
                  "container": {
                    "type": "string",
                    "description": "Optional. The identifier of the container of this resource. For Google Cloud APIs, the resource container must be one of the following formats: - `projects/` - `folders/` - `organizations/` For the policy enforcement on the container level (VPCSC and Location Policy check), this field takes precedence on the container extracted from name when presents."
                  },
                  "permission": {
                    "type": "string",
                    "description": "The resource permission needed for this request. The format must be \"{service}/{plural}.{verb}\"."
                  }
                },
                "description": "Describes a resource referenced in the request."
              },
              "description": "Describes the resources and the policies applied to each resource."
            },
            "attributes": {
              "id": "AttributeContext",
              "type": "object",
              "properties": {
                "api": {
                  "id": "Api",
                  "type": "object",
                  "properties": {
                    "service": {
                      "type": "string",
                      "description": "The API service name. It is a logical identifier for a networked API, such as \"pubsub.googleapis.com\". The naming syntax depends on the API management system being used for handling the request."
                    },
                    "version": {
                      "type": "string",
                      "description": "The API version associated with the API operation above, such as \"v1\" or \"v1alpha1\"."
                    },
                    "protocol": {
                      "type": "string",
                      "description": "The API protocol used for sending the request, such as \"http\", \"https\", \"grpc\", or \"internal\"."
                    },
                    "operation": {
                      "type": "string",
                      "description": "The API operation name. For gRPC requests, it is the fully qualified API method name, such as \"google.pubsub.v1.Publisher.Publish\". For OpenAPI requests, it is the `operationId`, such as \"getPet\"."
                    }
                  },
                  "description": "Represents an API operation that is involved to a network activity."
                },
                "origin": {
                  "id": "Peer",
                  "type": "object",
                  "properties": {
                    "ip": {
                      "type": "string",
                      "description": "The IP address of the peer."
                    },
                    "port": {
                      "type": "string",
                      "format": "int64",
                      "description": "The network port of the peer."
                    },
                    "labels": {
                      "type": "object",
                      "description": "The labels associated with the peer.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "principal": {
                      "type": "string",
                      "description": "The identity of this peer. Similar to `Request.auth.principal`, but relative to the peer instead of the request. For example, the idenity associated with a load balancer that forwared the request."
                    },
                    "regionCode": {
                      "type": "string",
                      "description": "The CLDR country/region code associated with the above IP address. If the IP address is private, the `region_code` should reflect the physical location where this peer is running."
                    }
                  },
                  "description": "The origin of a network activity. In a multi hop network activity, the origin represents the sender of the first hop. For the first hop, the `source` and the `origin` must have the same content."
                },
                "source": {
                  "id": "Peer",
                  "type": "object",
                  "properties": {
                    "ip": {
                      "type": "string",
                      "description": "The IP address of the peer."
                    },
                    "port": {
                      "type": "string",
                      "format": "int64",
                      "description": "The network port of the peer."
                    },
                    "labels": {
                      "type": "object",
                      "description": "The labels associated with the peer.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "principal": {
                      "type": "string",
                      "description": "The identity of this peer. Similar to `Request.auth.principal`, but relative to the peer instead of the request. For example, the idenity associated with a load balancer that forwared the request."
                    },
                    "regionCode": {
                      "type": "string",
                      "description": "The CLDR country/region code associated with the above IP address. If the IP address is private, the `region_code` should reflect the physical location where this peer is running."
                    }
                  },
                  "description": "The source of a network activity, such as starting a TCP connection. In a multi hop network activity, the source represents the sender of the last hop."
                },
                "request": {
                  "id": "Request",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The unique ID for a request, which can be propagated to downstream systems. The ID should have low probability of collision within a single day for a specific service."
                    },
                    "auth": {
                      "id": "Auth",
                      "type": "object",
                      "properties": {
                        "claims": {
                          "type": "object",
                          "description": "Structured claims presented with the credential. JWTs include `{key: value}` pairs for standard and private claims. The following is a subset of the standard required and optional claims that would typically be presented for a Google-based JWT: {'iss': 'accounts.google.com', 'sub': '113289723416554971153', 'aud': ['123456789012', 'pubsub.googleapis.com'], 'azp': '123456789012.apps.googleusercontent.com', 'email': 'jsmith@example.com', 'iat': 1353601026, 'exp': 1353604926} SAML assertions are similarly specified, but with an identity provider dependent structure.",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object."
                          }
                        },
                        "audiences": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The intended audience(s) for this authentication information. Reflects the audience (`aud`) claim within a JWT. The audience value(s) depends on the `issuer`, but typically include one or more of the following pieces of information: * The services intended to receive the credential. For example, [\"https://pubsub.googleapis.com/\", \"https://storage.googleapis.com/\"]. * A set of service-based scopes. For example, [\"https://www.googleapis.com/auth/cloud-platform\"]. * The client id of an app, such as the Firebase project id for JWTs from Firebase Auth. Consult the documentation for the credential issuer to determine the information provided."
                        },
                        "presenter": {
                          "type": "string",
                          "description": "The authorized presenter of the credential. Reflects the optional Authorized Presenter (`azp`) claim within a JWT or the OAuth client id. For example, a Google Cloud Platform client id looks as follows: \"123456789012.apps.googleusercontent.com\"."
                        },
                        "principal": {
                          "type": "string",
                          "description": "The authenticated principal. Reflects the issuer (`iss`) and subject (`sub`) claims within a JWT. The issuer and subject should be `/` delimited, with `/` percent-encoded within the subject fragment. For Google accounts, the principal format is: \"https://accounts.google.com/{id}\""
                        },
                        "accessLevels": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "A list of access level resource names that allow resources to be accessed by authenticated requester. It is part of Secure GCP processing for the incoming request. An access level string has the format: \"//{api_service_name}/accessPolicies/{policy_id}/accessLevels/{short_name}\" Example: \"//accesscontextmanager.googleapis.com/accessPolicies/MY_POLICY_ID/accessLevels/MY_LEVEL\""
                        }
                      },
                      "description": "The request authentication. May be absent for unauthenticated requests. Derived from the HTTP request `Authorization` header or equivalent."
                    },
                    "host": {
                      "type": "string",
                      "description": "The HTTP request `Host` header value."
                    },
                    "path": {
                      "type": "string",
                      "description": "The HTTP URL path, excluding the query parameters."
                    },
                    "size": {
                      "type": "string",
                      "format": "int64",
                      "description": "The HTTP request size in bytes. If unknown, it must be -1."
                    },
                    "time": {
                      "type": "string",
                      "format": "google-datetime",
                      "description": "The timestamp when the `destination` service receives the last byte of the request."
                    },
                    "query": {
                      "type": "string",
                      "description": "The HTTP URL query in the format of `name1=value1&name2=value2`, as it appears in the first line of the HTTP request. No decoding is performed."
                    },
                    "method": {
                      "type": "string",
                      "description": "The HTTP request method, such as `GET`, `POST`."
                    },
                    "reason": {
                      "type": "string",
                      "description": "A special parameter for request reason. It is used by security systems to associate auditing information with a request."
                    },
                    "scheme": {
                      "type": "string",
                      "description": "The HTTP URL scheme, such as `http` and `https`."
                    },
                    "headers": {
                      "type": "object",
                      "description": "The HTTP request headers. If multiple headers share the same key, they must be merged according to the HTTP spec. All header keys must be lowercased, because HTTP header keys are case-insensitive.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "protocol": {
                      "type": "string",
                      "description": "The network protocol used with the request, such as \"http/1.1\", \"spdy/3\", \"h2\", \"h2c\", \"webrtc\", \"tcp\", \"udp\", \"quic\". See https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids for details."
                    }
                  },
                  "description": "Represents a network request, such as an HTTP request."
                },
                "resource": {
                  "id": "Resource",
                  "type": "object",
                  "properties": {
                    "uid": {
                      "type": "string",
                      "description": "The unique identifier of the resource. UID is unique in the time and space for this resource within the scope of the service. It is typically generated by the server on successful creation of a resource and must not be changed. UID is used to uniquely identify resources with resource name reuses. This should be a UUID4."
                    },
                    "etag": {
                      "type": "string",
                      "description": "Output only. An opaque value that uniquely identifies a version or generation of a resource. It can be used to confirm that the client and server agree on the ordering of a resource being written."
                    },
                    "name": {
                      "type": "string",
                      "description": "The stable identifier (name) of a resource on the `service`. A resource can be logically identified as \"//{resource.service}/{resource.name}\". The differences between a resource name and a URI are: * Resource name is a logical identifier, independent of network protocol and API version. For example, `//pubsub.googleapis.com/projects/123/topics/news-feed`. * URI often includes protocol and version information, so it can be used directly by applications. For example, `https://pubsub.googleapis.com/v1/projects/123/topics/news-feed`. See https://cloud.google.com/apis/design/resource_names for details."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the resource. The syntax is platform-specific because different platforms define their resources differently. For Google APIs, the type format must be \"{service}/{kind}\"."
                    },
                    "labels": {
                      "type": "object",
                      "description": "The labels or tags on the resource, such as AWS resource tags and Kubernetes resource labels.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "service": {
                      "type": "string",
                      "description": "The name of the service that this resource belongs to, such as `pubsub.googleapis.com`. The service may be different from the DNS hostname that actually serves the request."
                    },
                    "location": {
                      "type": "string",
                      "description": "Immutable. The location of the resource. The location encoding is specific to the service provider, and new encoding may be introduced as the service evolves. For Google Cloud products, the encoding is what is used by Google Cloud APIs, such as `us-east1`, `aws-us-east-1`, and `azure-eastus2`. The semantics of `location` is identical to the `cloud.googleapis.com/location` label used by some Google Cloud APIs."
                    },
                    "createTime": {
                      "type": "string",
                      "format": "google-datetime",
                      "description": "Output only. The timestamp when the resource was created. This may be either the time creation was initiated or when it was completed."
                    },
                    "deleteTime": {
                      "type": "string",
                      "format": "google-datetime",
                      "description": "Output only. The timestamp when the resource was deleted. If the resource is not deleted, this must be empty."
                    },
                    "updateTime": {
                      "type": "string",
                      "format": "google-datetime",
                      "description": "Output only. The timestamp when the resource was last updated. Any change to the resource made by users must refresh this value. Changes to a resource made by the service should refresh this value."
                    },
                    "annotations": {
                      "type": "object",
                      "description": "Annotations is an unstructured key-value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/user-guide/annotations",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Mutable. The display name set by clients. Must be <= 63 characters."
                    }
                  },
                  "description": "Represents a target resource that is involved with a network activity. If multiple resources are involved with an activity, this must be the primary one."
                },
                "response": {
                  "id": "Response",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "format": "int64",
                      "description": "The HTTP response status code, such as `200` and `404`."
                    },
                    "size": {
                      "type": "string",
                      "format": "int64",
                      "description": "The HTTP response size in bytes. If unknown, it must be -1."
                    },
                    "time": {
                      "type": "string",
                      "format": "google-datetime",
                      "description": "The timestamp when the `destination` service sends the last byte of the response."
                    },
                    "headers": {
                      "type": "object",
                      "description": "The HTTP response headers. If multiple headers share the same key, they must be merged according to HTTP spec. All header keys must be lowercased, because HTTP header keys are case-insensitive.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "backendLatency": {
                      "type": "string",
                      "format": "google-duration",
                      "description": "The amount of time it takes the backend service to fully respond to a request. Measured from when the destination service starts to send the request to the backend until when the destination service receives the complete response from the backend."
                    }
                  },
                  "description": "Represents a network response, such as an HTTP response."
                },
                "extensions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "Supports extensions for advanced use cases, such as logs and metrics."
                },
                "destination": {
                  "id": "Peer",
                  "type": "object",
                  "properties": {
                    "ip": {
                      "type": "string",
                      "description": "The IP address of the peer."
                    },
                    "port": {
                      "type": "string",
                      "format": "int64",
                      "description": "The network port of the peer."
                    },
                    "labels": {
                      "type": "object",
                      "description": "The labels associated with the peer.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "principal": {
                      "type": "string",
                      "description": "The identity of this peer. Similar to `Request.auth.principal`, but relative to the peer instead of the request. For example, the idenity associated with a load balancer that forwared the request."
                    },
                    "regionCode": {
                      "type": "string",
                      "description": "The CLDR country/region code associated with the above IP address. If the IP address is private, the `region_code` should reflect the physical location where this peer is running."
                    }
                  },
                  "description": "The destination of a network activity, such as accepting a TCP connection. In a multi hop network activity, the destination represents the receiver of the last hop."
                }
              },
              "description": "Describes attributes about the operation being executed by the service."
            },
            "serviceConfigId": {
              "type": "string",
              "description": "Specifies the version of the service configuration that should be used to process the request. Must not be empty. Set this field to 'latest' to specify using the latest configuration."
            }
          },
          "description": "Request message for the Check method."
        }
      ]
      outputs: [
        {
          "id": "CheckResponse",
          "type": "object",
          "properties": {
            "status": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "Operation is allowed when this field is not set. Any non-'OK' status indicates a denial; [google.rpc.Status.details]() would contain additional details about the denial."
            },
            "headers": {
              "type": "object",
              "description": "Returns a set of request contexts generated from the `CheckRequest`.",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "description": "Response message for the Check method."
        }
      ]
  servicecontrol.services.report:
    description: |-
      Private Preview. This feature is only available for approved services. This method provides telemetry reporting for services that are integrated with [Service Infrastructure](/service-infrastructure). It reports a list of operations that have occurred on a service. It must be called after the operations have been executed. For more information, see [Telemetry Reporting](/service-infrastructure/docs/telemetry-reporting). NOTE: The telemetry reporting has a hard limit of 1000 operations and 1MB per Report call. It is recommended to have no more than 100 operations per call. This method requires the `servicemanagement.services.report` permission on the specified service. For more information, see [Service Control API Access Control](https://cloud.google.com/service-infrastructure/docs/service-control/access-control).
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-control/reference/rest/v2/services/report
    example:
      inputs: [
        {
          "id": "ReportRequest",
          "type": "object",
          "properties": {
            "operations": {
              "type": "array",
              "items": {
                "id": "AttributeContext",
                "type": "object",
                "properties": {
                  "api": {
                    "id": "Api",
                    "type": "object",
                    "properties": {
                      "service": {
                        "type": "string",
                        "description": "The API service name. It is a logical identifier for a networked API, such as \"pubsub.googleapis.com\". The naming syntax depends on the API management system being used for handling the request."
                      },
                      "version": {
                        "type": "string",
                        "description": "The API version associated with the API operation above, such as \"v1\" or \"v1alpha1\"."
                      },
                      "protocol": {
                        "type": "string",
                        "description": "The API protocol used for sending the request, such as \"http\", \"https\", \"grpc\", or \"internal\"."
                      },
                      "operation": {
                        "type": "string",
                        "description": "The API operation name. For gRPC requests, it is the fully qualified API method name, such as \"google.pubsub.v1.Publisher.Publish\". For OpenAPI requests, it is the `operationId`, such as \"getPet\"."
                      }
                    },
                    "description": "Represents an API operation that is involved to a network activity."
                  },
                  "origin": {
                    "id": "Peer",
                    "type": "object",
                    "properties": {
                      "ip": {
                        "type": "string",
                        "description": "The IP address of the peer."
                      },
                      "port": {
                        "type": "string",
                        "format": "int64",
                        "description": "The network port of the peer."
                      },
                      "labels": {
                        "type": "object",
                        "description": "The labels associated with the peer.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "principal": {
                        "type": "string",
                        "description": "The identity of this peer. Similar to `Request.auth.principal`, but relative to the peer instead of the request. For example, the idenity associated with a load balancer that forwared the request."
                      },
                      "regionCode": {
                        "type": "string",
                        "description": "The CLDR country/region code associated with the above IP address. If the IP address is private, the `region_code` should reflect the physical location where this peer is running."
                      }
                    },
                    "description": "The origin of a network activity. In a multi hop network activity, the origin represents the sender of the first hop. For the first hop, the `source` and the `origin` must have the same content."
                  },
                  "source": {
                    "id": "Peer",
                    "type": "object",
                    "properties": {
                      "ip": {
                        "type": "string",
                        "description": "The IP address of the peer."
                      },
                      "port": {
                        "type": "string",
                        "format": "int64",
                        "description": "The network port of the peer."
                      },
                      "labels": {
                        "type": "object",
                        "description": "The labels associated with the peer.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "principal": {
                        "type": "string",
                        "description": "The identity of this peer. Similar to `Request.auth.principal`, but relative to the peer instead of the request. For example, the idenity associated with a load balancer that forwared the request."
                      },
                      "regionCode": {
                        "type": "string",
                        "description": "The CLDR country/region code associated with the above IP address. If the IP address is private, the `region_code` should reflect the physical location where this peer is running."
                      }
                    },
                    "description": "The source of a network activity, such as starting a TCP connection. In a multi hop network activity, the source represents the sender of the last hop."
                  },
                  "request": {
                    "id": "Request",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The unique ID for a request, which can be propagated to downstream systems. The ID should have low probability of collision within a single day for a specific service."
                      },
                      "auth": {
                        "id": "Auth",
                        "type": "object",
                        "properties": {
                          "claims": {
                            "type": "object",
                            "description": "Structured claims presented with the credential. JWTs include `{key: value}` pairs for standard and private claims. The following is a subset of the standard required and optional claims that would typically be presented for a Google-based JWT: {'iss': 'accounts.google.com', 'sub': '113289723416554971153', 'aud': ['123456789012', 'pubsub.googleapis.com'], 'azp': '123456789012.apps.googleusercontent.com', 'email': 'jsmith@example.com', 'iat': 1353601026, 'exp': 1353604926} SAML assertions are similarly specified, but with an identity provider dependent structure.",
                            "additionalProperties": {
                              "type": "any",
                              "description": "Properties of the object."
                            }
                          },
                          "audiences": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The intended audience(s) for this authentication information. Reflects the audience (`aud`) claim within a JWT. The audience value(s) depends on the `issuer`, but typically include one or more of the following pieces of information: * The services intended to receive the credential. For example, [\"https://pubsub.googleapis.com/\", \"https://storage.googleapis.com/\"]. * A set of service-based scopes. For example, [\"https://www.googleapis.com/auth/cloud-platform\"]. * The client id of an app, such as the Firebase project id for JWTs from Firebase Auth. Consult the documentation for the credential issuer to determine the information provided."
                          },
                          "presenter": {
                            "type": "string",
                            "description": "The authorized presenter of the credential. Reflects the optional Authorized Presenter (`azp`) claim within a JWT or the OAuth client id. For example, a Google Cloud Platform client id looks as follows: \"123456789012.apps.googleusercontent.com\"."
                          },
                          "principal": {
                            "type": "string",
                            "description": "The authenticated principal. Reflects the issuer (`iss`) and subject (`sub`) claims within a JWT. The issuer and subject should be `/` delimited, with `/` percent-encoded within the subject fragment. For Google accounts, the principal format is: \"https://accounts.google.com/{id}\""
                          },
                          "accessLevels": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "A list of access level resource names that allow resources to be accessed by authenticated requester. It is part of Secure GCP processing for the incoming request. An access level string has the format: \"//{api_service_name}/accessPolicies/{policy_id}/accessLevels/{short_name}\" Example: \"//accesscontextmanager.googleapis.com/accessPolicies/MY_POLICY_ID/accessLevels/MY_LEVEL\""
                          }
                        },
                        "description": "The request authentication. May be absent for unauthenticated requests. Derived from the HTTP request `Authorization` header or equivalent."
                      },
                      "host": {
                        "type": "string",
                        "description": "The HTTP request `Host` header value."
                      },
                      "path": {
                        "type": "string",
                        "description": "The HTTP URL path, excluding the query parameters."
                      },
                      "size": {
                        "type": "string",
                        "format": "int64",
                        "description": "The HTTP request size in bytes. If unknown, it must be -1."
                      },
                      "time": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "The timestamp when the `destination` service receives the last byte of the request."
                      },
                      "query": {
                        "type": "string",
                        "description": "The HTTP URL query in the format of `name1=value1&name2=value2`, as it appears in the first line of the HTTP request. No decoding is performed."
                      },
                      "method": {
                        "type": "string",
                        "description": "The HTTP request method, such as `GET`, `POST`."
                      },
                      "reason": {
                        "type": "string",
                        "description": "A special parameter for request reason. It is used by security systems to associate auditing information with a request."
                      },
                      "scheme": {
                        "type": "string",
                        "description": "The HTTP URL scheme, such as `http` and `https`."
                      },
                      "headers": {
                        "type": "object",
                        "description": "The HTTP request headers. If multiple headers share the same key, they must be merged according to the HTTP spec. All header keys must be lowercased, because HTTP header keys are case-insensitive.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "protocol": {
                        "type": "string",
                        "description": "The network protocol used with the request, such as \"http/1.1\", \"spdy/3\", \"h2\", \"h2c\", \"webrtc\", \"tcp\", \"udp\", \"quic\". See https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids for details."
                      }
                    },
                    "description": "Represents a network request, such as an HTTP request."
                  },
                  "resource": {
                    "id": "Resource",
                    "type": "object",
                    "properties": {
                      "uid": {
                        "type": "string",
                        "description": "The unique identifier of the resource. UID is unique in the time and space for this resource within the scope of the service. It is typically generated by the server on successful creation of a resource and must not be changed. UID is used to uniquely identify resources with resource name reuses. This should be a UUID4."
                      },
                      "etag": {
                        "type": "string",
                        "description": "Output only. An opaque value that uniquely identifies a version or generation of a resource. It can be used to confirm that the client and server agree on the ordering of a resource being written."
                      },
                      "name": {
                        "type": "string",
                        "description": "The stable identifier (name) of a resource on the `service`. A resource can be logically identified as \"//{resource.service}/{resource.name}\". The differences between a resource name and a URI are: * Resource name is a logical identifier, independent of network protocol and API version. For example, `//pubsub.googleapis.com/projects/123/topics/news-feed`. * URI often includes protocol and version information, so it can be used directly by applications. For example, `https://pubsub.googleapis.com/v1/projects/123/topics/news-feed`. See https://cloud.google.com/apis/design/resource_names for details."
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. The syntax is platform-specific because different platforms define their resources differently. For Google APIs, the type format must be \"{service}/{kind}\"."
                      },
                      "labels": {
                        "type": "object",
                        "description": "The labels or tags on the resource, such as AWS resource tags and Kubernetes resource labels.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "service": {
                        "type": "string",
                        "description": "The name of the service that this resource belongs to, such as `pubsub.googleapis.com`. The service may be different from the DNS hostname that actually serves the request."
                      },
                      "location": {
                        "type": "string",
                        "description": "Immutable. The location of the resource. The location encoding is specific to the service provider, and new encoding may be introduced as the service evolves. For Google Cloud products, the encoding is what is used by Google Cloud APIs, such as `us-east1`, `aws-us-east-1`, and `azure-eastus2`. The semantics of `location` is identical to the `cloud.googleapis.com/location` label used by some Google Cloud APIs."
                      },
                      "createTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "Output only. The timestamp when the resource was created. This may be either the time creation was initiated or when it was completed."
                      },
                      "deleteTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "Output only. The timestamp when the resource was deleted. If the resource is not deleted, this must be empty."
                      },
                      "updateTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "Output only. The timestamp when the resource was last updated. Any change to the resource made by users must refresh this value. Changes to a resource made by the service should refresh this value."
                      },
                      "annotations": {
                        "type": "object",
                        "description": "Annotations is an unstructured key-value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/user-guide/annotations",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Mutable. The display name set by clients. Must be <= 63 characters."
                      }
                    },
                    "description": "Represents a target resource that is involved with a network activity. If multiple resources are involved with an activity, this must be the primary one."
                  },
                  "response": {
                    "id": "Response",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "format": "int64",
                        "description": "The HTTP response status code, such as `200` and `404`."
                      },
                      "size": {
                        "type": "string",
                        "format": "int64",
                        "description": "The HTTP response size in bytes. If unknown, it must be -1."
                      },
                      "time": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "The timestamp when the `destination` service sends the last byte of the response."
                      },
                      "headers": {
                        "type": "object",
                        "description": "The HTTP response headers. If multiple headers share the same key, they must be merged according to HTTP spec. All header keys must be lowercased, because HTTP header keys are case-insensitive.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "backendLatency": {
                        "type": "string",
                        "format": "google-duration",
                        "description": "The amount of time it takes the backend service to fully respond to a request. Measured from when the destination service starts to send the request to the backend until when the destination service receives the complete response from the backend."
                      }
                    },
                    "description": "Represents a network response, such as an HTTP response."
                  },
                  "extensions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "any",
                        "description": "Properties of the object. Contains field @type with type URL."
                      }
                    },
                    "description": "Supports extensions for advanced use cases, such as logs and metrics."
                  },
                  "destination": {
                    "id": "Peer",
                    "type": "object",
                    "properties": {
                      "ip": {
                        "type": "string",
                        "description": "The IP address of the peer."
                      },
                      "port": {
                        "type": "string",
                        "format": "int64",
                        "description": "The network port of the peer."
                      },
                      "labels": {
                        "type": "object",
                        "description": "The labels associated with the peer.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "principal": {
                        "type": "string",
                        "description": "The identity of this peer. Similar to `Request.auth.principal`, but relative to the peer instead of the request. For example, the idenity associated with a load balancer that forwared the request."
                      },
                      "regionCode": {
                        "type": "string",
                        "description": "The CLDR country/region code associated with the above IP address. If the IP address is private, the `region_code` should reflect the physical location where this peer is running."
                      }
                    },
                    "description": "The destination of a network activity, such as accepting a TCP connection. In a multi hop network activity, the destination represents the receiver of the last hop."
                  }
                },
                "description": "This message defines the standard attribute vocabulary for Google APIs. An attribute is a piece of metadata that describes an activity on a network service. For example, the size of an HTTP request, or the status code of an HTTP response. Each attribute has a type and a name, which is logically defined as a proto message field in `AttributeContext`. The field type becomes the attribute type, and the field path becomes the attribute name. For example, the attribute `source.ip` maps to field `AttributeContext.source.ip`. This message definition is guaranteed not to have any wire breaking change. So you can use it directly for passing attributes across different systems. NOTE: Different system may generate different subset of attributes. Please verify the system specification before relying on an attribute generated a system."
              },
              "description": "Describes the list of operations to be reported. Each operation is represented as an AttributeContext, and contains all attributes around an API access."
            },
            "serviceConfigId": {
              "type": "string",
              "description": "Specifies the version of the service configuration that should be used to process the request. Must not be empty. Set this field to 'latest' to specify using the latest configuration."
            }
          },
          "description": "Request message for the Report method."
        }
      ]
      outputs: [
        {
          "id": "ReportResponse",
          "type": "object",
          "properties": {},
          "description": "Response message for the Report method. If the request contains any invalid data, the server returns an RPC error."
        }
      ]
  servicemanagement.operations.get:
    description: |-
      Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-management/reference/rest/v1/operations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  servicemanagement.operations.list:
    description: |-
      Lists service operations that match the specified filter in the request.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-management/reference/rest/v1/operations/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListOperationsResponse",
          "type": "object",
          "properties": {
            "operations": {
              "type": "array",
              "items": {
                "id": "Operation",
                "type": "object",
                "properties": {
                  "done": {
                    "type": "boolean",
                    "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
                  },
                  "name": {
                    "type": "string",
                    "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
                  },
                  "error": {
                    "id": "Status",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The status code, which should be an enum value of google.rpc.Code."
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object. Contains field @type with type URL."
                          }
                        },
                        "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                      },
                      "message": {
                        "type": "string",
                        "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                      }
                    },
                    "description": "The error result of the operation in case of failure or cancellation."
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "response": {
                    "type": "object",
                    "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  }
                },
                "description": "This resource represents a long-running operation that is the result of a network API call."
              },
              "description": "A list of operations that matches the specified filter in the request."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The standard List next-page token."
            }
          },
          "description": "The response message for Operations.ListOperations."
        }
      ]
  servicemanagement.services.configs.create:
    description: |-
      Creates a new service configuration (version) for a managed service. This method only stores the service configuration. To roll out the service configuration to backend systems please call CreateServiceRollout. Only the 100 most recent service configurations and ones referenced by existing rollouts are kept for each service. The rest will be deleted eventually.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-management/reference/rest/v1/services.configs/create
    example:
      inputs: [
        {
          "id": "Service",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "A unique ID for a specific instance of this message, typically assigned by the client for tracking purpose. Must be no longer than 63 characters and only lower case letters, digits, '.', '_' and '-' are allowed. If empty, the server may choose to generate one instead."
            },
            "apis": {
              "type": "array",
              "items": {
                "id": "Api",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The fully qualified name of this interface, including package name followed by the interface's simple name."
                  },
                  "mixins": {
                    "type": "array",
                    "items": {
                      "id": "Mixin",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The fully qualified name of the interface which is included."
                        },
                        "root": {
                          "type": "string",
                          "description": "If non-empty specifies a path under which inherited HTTP paths are rooted."
                        }
                      },
                      "description": "Declares an API Interface to be included in this interface. The including interface must redeclare all the methods from the included interface, but documentation and options are inherited as follows: - If after comment and whitespace stripping, the documentation string of the redeclared method is empty, it will be inherited from the original method. - Each annotation belonging to the service config (http, visibility) which is not set in the redeclared method will be inherited. - If an http annotation is inherited, the path pattern will be modified as follows. Any version prefix will be replaced by the version of the including interface plus the root path if specified. Example of a simple mixin: package google.acl.v1; service AccessControl { // Get the underlying ACL object. rpc GetAcl(GetAclRequest) returns (Acl) { option (google.api.http).get = \"/v1/{resource=**}:getAcl\"; } } package google.storage.v2; service Storage { // rpc GetAcl(GetAclRequest) returns (Acl); // Get a data record. rpc GetData(GetDataRequest) returns (Data) { option (google.api.http).get = \"/v2/{resource=**}\"; } } Example of a mixin configuration: apis: - name: google.storage.v2.Storage mixins: - name: google.acl.v1.AccessControl The mixin construct implies that all methods in `AccessControl` are also declared with same name and request/response types in `Storage`. A documentation generator or annotation processor will see the effective `Storage.GetAcl` method after inheriting documentation and annotations as follows: service Storage { // Get the underlying ACL object. rpc GetAcl(GetAclRequest) returns (Acl) { option (google.api.http).get = \"/v2/{resource=**}:getAcl\"; } ... } Note how the version in the path pattern changed from `v1` to `v2`. If the `root` field in the mixin is specified, it should be a relative path under which inherited HTTP paths are placed. Example: apis: - name: google.storage.v2.Storage mixins: - name: google.acl.v1.AccessControl root: acls This implies the following inherited HTTP annotation: service Storage { // Get the underlying ACL object. rpc GetAcl(GetAclRequest) returns (Acl) { option (google.api.http).get = \"/v2/acls/{resource=**}:getAcl\"; } ... }"
                    },
                    "description": "Included interfaces. See Mixin."
                  },
                  "syntax": {
                    "enum": [
                      "SYNTAX_PROTO2",
                      "SYNTAX_PROTO3"
                    ],
                    "type": "string",
                    "description": "The source syntax of the service.",
                    "enumDescriptions": [
                      "Syntax `proto2`.",
                      "Syntax `proto3`."
                    ]
                  },
                  "methods": {
                    "type": "array",
                    "items": {
                      "id": "Method",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The simple name of this method."
                        },
                        "syntax": {
                          "enum": [
                            "SYNTAX_PROTO2",
                            "SYNTAX_PROTO3"
                          ],
                          "type": "string",
                          "description": "The source syntax of this method.",
                          "enumDescriptions": [
                            "Syntax `proto2`.",
                            "Syntax `proto3`."
                          ]
                        },
                        "options": {
                          "type": "array",
                          "items": {
                            "id": "Option",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The option's name. For protobuf built-in options (options defined in descriptor.proto), this is the short name. For example, `\"map_entry\"`. For custom options, it should be the fully-qualified name. For example, `\"google.api.http\"`."
                              },
                              "value": {
                                "type": "object",
                                "description": "The option's value packed in an Any message. If the value is a primitive, the corresponding wrapper type defined in google/protobuf/wrappers.proto should be used. If the value is an enum, it should be stored as an int32 value using the google.protobuf.Int32Value type.",
                                "additionalProperties": {
                                  "type": "any",
                                  "description": "Properties of the object. Contains field @type with type URL."
                                }
                              }
                            },
                            "description": "A protocol buffer option, which can be attached to a message, field, enumeration, etc."
                          },
                          "description": "Any metadata attached to the method."
                        },
                        "requestTypeUrl": {
                          "type": "string",
                          "description": "A URL of the input message type."
                        },
                        "responseTypeUrl": {
                          "type": "string",
                          "description": "The URL of the output message type."
                        },
                        "requestStreaming": {
                          "type": "boolean",
                          "description": "If true, the request is streamed."
                        },
                        "responseStreaming": {
                          "type": "boolean",
                          "description": "If true, the response is streamed."
                        }
                      },
                      "description": "Method represents a method of an API interface."
                    },
                    "description": "The methods of this interface, in unspecified order."
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "id": "Option",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The option's name. For protobuf built-in options (options defined in descriptor.proto), this is the short name. For example, `\"map_entry\"`. For custom options, it should be the fully-qualified name. For example, `\"google.api.http\"`."
                        },
                        "value": {
                          "type": "object",
                          "description": "The option's value packed in an Any message. If the value is a primitive, the corresponding wrapper type defined in google/protobuf/wrappers.proto should be used. If the value is an enum, it should be stored as an int32 value using the google.protobuf.Int32Value type.",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object. Contains field @type with type URL."
                          }
                        }
                      },
                      "description": "A protocol buffer option, which can be attached to a message, field, enumeration, etc."
                    },
                    "description": "Any metadata attached to the interface."
                  },
                  "version": {
                    "type": "string",
                    "description": "A version string for this interface. If specified, must have the form `major-version.minor-version`, as in `1.10`. If the minor version is omitted, it defaults to zero. If the entire version field is empty, the major version is derived from the package name, as outlined below. If the field is not empty, the version in the package name will be verified to be consistent with what is provided here. The versioning schema uses [semantic versioning](http://semver.org) where the major version number indicates a breaking change and the minor version an additive, non-breaking change. Both version numbers are signals to users what to expect from different versions, and should be carefully chosen based on the product plan. The major version is also reflected in the package name of the interface, which must end in `v`, as in `google.feature.v1`. For major versions 0 and 1, the suffix can be omitted. Zero major versions must only be used for experimental, non-GA interfaces. "
                  },
                  "sourceContext": {
                    "id": "SourceContext",
                    "type": "object",
                    "properties": {
                      "fileName": {
                        "type": "string",
                        "description": "The path-qualified name of the .proto file that contained the associated protobuf element. For example: `\"google/protobuf/source_context.proto\"`."
                      }
                    },
                    "description": "Source context for the protocol buffer service represented by this message."
                  }
                },
                "description": "Api is a light-weight descriptor for an API Interface. Interfaces are also described as \"protocol buffer services\" in some contexts, such as by the \"service\" keyword in a .proto file, but they are different from API Services, which represent a concrete implementation of an interface as opposed to simply a description of methods and bindings. They are also sometimes simply referred to as \"APIs\" in other contexts, such as the name of this message itself. See https://cloud.google.com/apis/design/glossary for detailed terminology."
              },
              "description": "A list of API interfaces exported by this service. Only the `name` field of the google.protobuf.Api needs to be provided by the configuration author, as the remaining fields will be derived from the IDL during the normalization process. It is an error to specify an API interface here which cannot be resolved against the associated IDL files."
            },
            "http": {
              "id": "Http",
              "type": "object",
              "properties": {
                "rules": {
                  "type": "array",
                  "items": {
                    "id": "HttpRule",
                    "type": "object",
                    "properties": {
                      "get": {
                        "type": "string",
                        "description": "Maps to HTTP GET. Used for listing and getting information about resources."
                      },
                      "put": {
                        "type": "string",
                        "description": "Maps to HTTP PUT. Used for replacing a resource."
                      },
                      "body": {
                        "type": "string",
                        "description": "The name of the request field whose value is mapped to the HTTP request body, or `*` for mapping all request fields not captured by the path pattern to the HTTP body, or omitted for not having any HTTP request body. NOTE: the referred field must be present at the top-level of the request message type."
                      },
                      "post": {
                        "type": "string",
                        "description": "Maps to HTTP POST. Used for creating a resource or performing an action."
                      },
                      "patch": {
                        "type": "string",
                        "description": "Maps to HTTP PATCH. Used for updating a resource."
                      },
                      "custom": {
                        "id": "CustomHttpPattern",
                        "type": "object",
                        "properties": {
                          "kind": {
                            "type": "string",
                            "description": "The name of this custom HTTP verb."
                          },
                          "path": {
                            "type": "string",
                            "description": "The path matched by this custom verb."
                          }
                        },
                        "description": "The custom pattern is used for specifying an HTTP method that is not included in the `pattern` field, such as HEAD, or \"*\" to leave the HTTP method unspecified for this rule. The wild-card rule is useful for services that provide content to Web (HTML) clients."
                      },
                      "delete": {
                        "type": "string",
                        "description": "Maps to HTTP DELETE. Used for deleting a resource."
                      },
                      "selector": {
                        "type": "string",
                        "description": "Selects a method to which this rule applies. Refer to selector for syntax details."
                      },
                      "responseBody": {
                        "type": "string",
                        "description": "Optional. The name of the response field whose value is mapped to the HTTP response body. When omitted, the entire response message will be used as the HTTP response body. NOTE: The referred field must be present at the top-level of the response message type."
                      },
                      "additionalBindings": {
                        "type": "array",
                        "items": {},
                        "description": "Additional HTTP bindings for the selector. Nested bindings must not contain an `additional_bindings` field themselves (that is, the nesting may only be one level deep)."
                      }
                    },
                    "description": "# gRPC Transcoding gRPC Transcoding is a feature for mapping between a gRPC method and one or more HTTP REST endpoints. It allows developers to build a single API service that supports both gRPC APIs and REST APIs. Many systems, including [Google APIs](https://github.com/googleapis/googleapis), [Cloud Endpoints](https://cloud.google.com/endpoints), [gRPC Gateway](https://github.com/grpc-ecosystem/grpc-gateway), and [Envoy](https://github.com/envoyproxy/envoy) proxy support this feature and use it for large scale production services. `HttpRule` defines the schema of the gRPC/REST mapping. The mapping specifies how different portions of the gRPC request message are mapped to the URL path, URL query parameters, and HTTP request body. It also controls how the gRPC response message is mapped to the HTTP response body. `HttpRule` is typically specified as an `google.api.http` annotation on the gRPC method. Each mapping specifies a URL path template and an HTTP method. The path template may refer to one or more fields in the gRPC request message, as long as each field is a non-repeated field with a primitive (non-message) type. The path template controls how fields of the request message are mapped to the URL path. Example: service Messaging { rpc GetMessage(GetMessageRequest) returns (Message) { option (google.api.http) = { get: \"/v1/{name=messages/*}\" }; } } message GetMessageRequest { string name = 1; // Mapped to URL path. } message Message { string text = 1; // The resource content. } This enables an HTTP REST to gRPC mapping as below: HTTP | gRPC -----|----- `GET /v1/messages/123456` | `GetMessage(name: \"messages/123456\")` Any fields in the request message which are not bound by the path template automatically become HTTP query parameters if there is no HTTP request body. For example: service Messaging { rpc GetMessage(GetMessageRequest) returns (Message) { option (google.api.http) = { get:\"/v1/messages/{message_id}\" }; } } message GetMessageRequest { message SubMessage { string subfield = 1; } string message_id = 1; // Mapped to URL path. int64 revision = 2; // Mapped to URL query parameter `revision`. SubMessage sub = 3; // Mapped to URL query parameter `sub.subfield`. } This enables a HTTP JSON to RPC mapping as below: HTTP | gRPC -----|----- `GET /v1/messages/123456?revision=2&sub.subfield=foo` | `GetMessage(message_id: \"123456\" revision: 2 sub: SubMessage(subfield: \"foo\"))` Note that fields which are mapped to URL query parameters must have a primitive type or a repeated primitive type or a non-repeated message type. In the case of a repeated type, the parameter can be repeated in the URL as `...?param=A&param=B`. In the case of a message type, each field of the message is mapped to a separate parameter, such as `...?foo.a=A&foo.b=B&foo.c=C`. For HTTP methods that allow a request body, the `body` field specifies the mapping. Consider a REST update method on the message resource collection: service Messaging { rpc UpdateMessage(UpdateMessageRequest) returns (Message) { option (google.api.http) = { patch: \"/v1/messages/{message_id}\" body: \"message\" }; } } message UpdateMessageRequest { string message_id = 1; // mapped to the URL Message message = 2; // mapped to the body } The following HTTP JSON to RPC mapping is enabled, where the representation of the JSON in the request body is determined by protos JSON encoding: HTTP | gRPC -----|----- `PATCH /v1/messages/123456 { \"text\": \"Hi!\" }` | `UpdateMessage(message_id: \"123456\" message { text: \"Hi!\" })` The special name `*` can be used in the body mapping to define that every field not bound by the path template should be mapped to the request body. This enables the following alternative definition of the update method: service Messaging { rpc UpdateMessage(Message) returns (Message) { option (google.api.http) = { patch: \"/v1/messages/{message_id}\" body: \"*\" }; } } message Message { string message_id = 1; string text = 2; } The following HTTP JSON to RPC mapping is enabled: HTTP | gRPC -----|----- `PATCH /v1/messages/123456 { \"text\": \"Hi!\" }` | `UpdateMessage(message_id: \"123456\" text: \"Hi!\")` Note that when using `*` in the body mapping, it is not possible to have HTTP parameters, as all fields not bound by the path end in the body. This makes this option more rarely used in practice when defining REST APIs. The common usage of `*` is in custom methods which don't use the URL at all for transferring data. It is possible to define multiple HTTP methods for one RPC by using the `additional_bindings` option. Example: service Messaging { rpc GetMessage(GetMessageRequest) returns (Message) { option (google.api.http) = { get: \"/v1/messages/{message_id}\" additional_bindings { get: \"/v1/users/{user_id}/messages/{message_id}\" } }; } } message GetMessageRequest { string message_id = 1; string user_id = 2; } This enables the following two alternative HTTP JSON to RPC mappings: HTTP | gRPC -----|----- `GET /v1/messages/123456` | `GetMessage(message_id: \"123456\")` `GET /v1/users/me/messages/123456` | `GetMessage(user_id: \"me\" message_id: \"123456\")` ## Rules for HTTP mapping 1. Leaf request fields (recursive expansion nested messages in the request message) are classified into three categories: - Fields referred by the path template. They are passed via the URL path. - Fields referred by the HttpRule.body. They are passed via the HTTP request body. - All other fields are passed via the URL query parameters, and the parameter name is the field path in the request message. A repeated field can be represented as multiple query parameters under the same name. 2. If HttpRule.body is \"*\", there is no URL query parameter, all fields are passed via URL path and HTTP request body. 3. If HttpRule.body is omitted, there is no HTTP request body, all fields are passed via URL path and URL query parameters. ### Path template syntax Template = \"/\" Segments [ Verb ] ; Segments = Segment { \"/\" Segment } ; Segment = \"*\" | \"**\" | LITERAL | Variable ; Variable = \"{\" FieldPath [ \"=\" Segments ] \"}\" ; FieldPath = IDENT { \".\" IDENT } ; Verb = \":\" LITERAL ; The syntax `*` matches a single URL path segment. The syntax `**` matches zero or more URL path segments, which must be the last part of the URL path except the `Verb`. The syntax `Variable` matches part of the URL path as specified by its template. A variable template must not contain other variables. If a variable matches a single path segment, its template may be omitted, e.g. `{var}` is equivalent to `{var=*}`. The syntax `LITERAL` matches literal text in the URL path. If the `LITERAL` contains any reserved character, such characters should be percent-encoded before the matching. If a variable contains exactly one path segment, such as `\"{var}\"` or `\"{var=*}\"`, when such a variable is expanded into a URL path on the client side, all characters except `[-_.~0-9a-zA-Z]` are percent-encoded. The server side does the reverse decoding. Such variables show up in the [Discovery Document](https://developers.google.com/discovery/v1/reference/apis) as `{var}`. If a variable contains multiple path segments, such as `\"{var=foo/*}\"` or `\"{var=**}\"`, when such a variable is expanded into a URL path on the client side, all characters except `[-_.~/0-9a-zA-Z]` are percent-encoded. The server side does the reverse decoding, except \"%2F\" and \"%2f\" are left unchanged. Such variables show up in the [Discovery Document](https://developers.google.com/discovery/v1/reference/apis) as `{+var}`. ## Using gRPC API Service Configuration gRPC API Service Configuration (service config) is a configuration language for configuring a gRPC service to become a user-facing product. The service config is simply the YAML representation of the `google.api.Service` proto message. As an alternative to annotating your proto file, you can configure gRPC transcoding in your service config YAML files. You do this by specifying a `HttpRule` that maps the gRPC method to a REST endpoint, achieving the same effect as the proto annotation. This can be particularly useful if you have a proto that is reused in multiple services. Note that any transcoding specified in the service config will override any matching transcoding configuration in the proto. Example: http: rules: # Selects a gRPC method and applies HttpRule to it. - selector: example.v1.Messaging.GetMessage get: /v1/messages/{message_id}/{sub.subfield} ## Special notes When gRPC Transcoding is used to map a gRPC to JSON REST endpoints, the proto to JSON conversion must follow the [proto3 specification](https://developers.google.com/protocol-buffers/docs/proto3#json). While the single segment variable follows the semantics of [RFC 6570](https://tools.ietf.org/html/rfc6570) Section 3.2.2 Simple String Expansion, the multi segment variable **does not** follow RFC 6570 Section 3.2.3 Reserved Expansion. The reason is that the Reserved Expansion does not expand special characters like `?` and `#`, which would lead to invalid URLs. As the result, gRPC Transcoding uses a custom encoding for multi segment variables. The path variables **must not** refer to any repeated or mapped field, because client libraries are not capable of handling such variable expansion. The path variables **must not** capture the leading \"/\" character. The reason is that the most common use case \"{var}\" does not capture the leading \"/\" character. For consistency, all path variables must share the same behavior. Repeated message fields must not be mapped to URL query parameters, because no client library can support such complicated mapping. If an API needs to use a JSON array for request or response body, it can map the request or response body to a repeated field. However, some gRPC Transcoding implementations may not support this feature."
                  },
                  "description": "A list of HTTP configuration rules that apply to individual API methods. **NOTE:** All service configuration rules follow \"last one wins\" order."
                },
                "fullyDecodeReservedExpansion": {
                  "type": "boolean",
                  "description": "When set to true, URL path parameters will be fully URI-decoded except in cases of single segment matches in reserved expansion, where \"%2F\" will be left encoded. The default behavior is to not decode RFC 6570 reserved characters in multi segment matches."
                }
              },
              "description": "HTTP configuration."
            },
            "logs": {
              "type": "array",
              "items": {
                "id": "LogDescriptor",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the log. It must be less than 512 characters long and can include the following characters: upper- and lower-case alphanumeric characters [A-Za-z0-9], and punctuation characters including slash, underscore, hyphen, period [/_-.]."
                  },
                  "labels": {
                    "type": "array",
                    "items": {
                      "id": "LabelDescriptor",
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "The label key."
                        },
                        "valueType": {
                          "enum": [
                            "STRING",
                            "BOOL",
                            "INT64"
                          ],
                          "type": "string",
                          "description": "The type of data that can be assigned to the label.",
                          "enumDescriptions": [
                            "A variable-length string. This is the default.",
                            "Boolean; true or false.",
                            "A 64-bit signed integer."
                          ]
                        },
                        "description": {
                          "type": "string",
                          "description": "A human-readable description for the label."
                        }
                      },
                      "description": "A description of a label."
                    },
                    "description": "The set of labels that are available to describe a specific log entry. Runtime requests that contain labels not specified here are considered invalid."
                  },
                  "description": {
                    "type": "string",
                    "description": "A human-readable description of this log. This information appears in the documentation and can contain details."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The human-readable name for this log. This information appears on the user interface and should be concise."
                  }
                },
                "description": "A description of a log type. Example in YAML format: - name: library.googleapis.com/activity_history description: The history of borrowing and returning library items. display_name: Activity labels: - key: /customer_id description: Identifier of a library customer"
              },
              "description": "Defines the logs used by this service."
            },
            "name": {
              "type": "string",
              "description": "The service name, which is a DNS-like logical identifier for the service, such as `calendar.googleapis.com`. The service name typically goes through DNS verification to make sure the owner of the service also owns the DNS name."
            },
            "enums": {
              "type": "array",
              "items": {
                "id": "Enum",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Enum type name."
                  },
                  "syntax": {
                    "enum": [
                      "SYNTAX_PROTO2",
                      "SYNTAX_PROTO3"
                    ],
                    "type": "string",
                    "description": "The source syntax.",
                    "enumDescriptions": [
                      "Syntax `proto2`.",
                      "Syntax `proto3`."
                    ]
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "id": "Option",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The option's name. For protobuf built-in options (options defined in descriptor.proto), this is the short name. For example, `\"map_entry\"`. For custom options, it should be the fully-qualified name. For example, `\"google.api.http\"`."
                        },
                        "value": {
                          "type": "object",
                          "description": "The option's value packed in an Any message. If the value is a primitive, the corresponding wrapper type defined in google/protobuf/wrappers.proto should be used. If the value is an enum, it should be stored as an int32 value using the google.protobuf.Int32Value type.",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object. Contains field @type with type URL."
                          }
                        }
                      },
                      "description": "A protocol buffer option, which can be attached to a message, field, enumeration, etc."
                    },
                    "description": "Protocol buffer options."
                  },
                  "enumvalue": {
                    "type": "array",
                    "items": {
                      "id": "EnumValue",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Enum value name."
                        },
                        "number": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Enum value number."
                        },
                        "options": {
                          "type": "array",
                          "items": {
                            "id": "Option",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The option's name. For protobuf built-in options (options defined in descriptor.proto), this is the short name. For example, `\"map_entry\"`. For custom options, it should be the fully-qualified name. For example, `\"google.api.http\"`."
                              },
                              "value": {
                                "type": "object",
                                "description": "The option's value packed in an Any message. If the value is a primitive, the corresponding wrapper type defined in google/protobuf/wrappers.proto should be used. If the value is an enum, it should be stored as an int32 value using the google.protobuf.Int32Value type.",
                                "additionalProperties": {
                                  "type": "any",
                                  "description": "Properties of the object. Contains field @type with type URL."
                                }
                              }
                            },
                            "description": "A protocol buffer option, which can be attached to a message, field, enumeration, etc."
                          },
                          "description": "Protocol buffer options."
                        }
                      },
                      "description": "Enum value definition."
                    },
                    "description": "Enum value definitions."
                  },
                  "sourceContext": {
                    "id": "SourceContext",
                    "type": "object",
                    "properties": {
                      "fileName": {
                        "type": "string",
                        "description": "The path-qualified name of the .proto file that contained the associated protobuf element. For example: `\"google/protobuf/source_context.proto\"`."
                      }
                    },
                    "description": "The source context."
                  }
                },
                "description": "Enum type definition."
              },
              "description": "A list of all enum types included in this API service. Enums referenced directly or indirectly by the `apis` are automatically included. Enums which are not referenced but shall be included should be listed here by name. Example: enums: - name: google.someapi.v1.SomeEnum"
            },
            "quota": {
              "id": "Quota",
              "type": "object",
              "properties": {
                "limits": {
                  "type": "array",
                  "items": {
                    "id": "QuotaLimit",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the quota limit. The name must be provided, and it must be unique within the service. The name can only include alphanumeric characters as well as '-'. The maximum length of the limit name is 64 characters."
                      },
                      "unit": {
                        "type": "string",
                        "description": "Specify the unit of the quota limit. It uses the same syntax as Metric.unit. The supported unit kinds are determined by the quota backend system. Here are some examples: * \"1/min/{project}\" for quota per minute per project. Note: the order of unit components is insignificant. The \"1\" at the beginning is required to follow the metric unit syntax."
                      },
                      "metric": {
                        "type": "string",
                        "description": "The name of the metric this quota limit applies to. The quota limits with the same metric will be checked together during runtime. The metric must be defined within the service config."
                      },
                      "values": {
                        "type": "object",
                        "description": "Tiered limit values. You must specify this as a key:value pair, with an integer value that is the maximum number of requests allowed for the specified unit. Currently only STANDARD is supported.",
                        "additionalProperties": {
                          "type": "string",
                          "format": "int64"
                        }
                      },
                      "duration": {
                        "type": "string",
                        "description": "Duration of this limit in textual notation. Must be \"100s\" or \"1d\". Used by group-based quotas only."
                      },
                      "freeTier": {
                        "type": "string",
                        "format": "int64",
                        "description": "Free tier value displayed in the Developers Console for this limit. The free tier is the number of tokens that will be subtracted from the billed amount when billing is enabled. This field can only be set on a limit with duration \"1d\", in a billable group; it is invalid on any other limit. If this field is not set, it defaults to 0, indicating that there is no free tier for this service. Used by group-based quotas only."
                      },
                      "maxLimit": {
                        "type": "string",
                        "format": "int64",
                        "description": "Maximum number of tokens that can be consumed during the specified duration. Client application developers can override the default limit up to this maximum. If specified, this value cannot be set to a value less than the default limit. If not specified, it is set to the default limit. To allow clients to apply overrides with no upper bound, set this to -1, indicating unlimited maximum quota. Used by group-based quotas only."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. User-visible, extended description for this quota limit. Should be used only when more context is needed to understand this limit than provided by the limit's display name (see: `display_name`)."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "User-visible display name for this limit. Optional. If not set, the UI will provide a default display name based on the quota configuration. This field can be used to override the default display name generated from the configuration."
                      },
                      "defaultLimit": {
                        "type": "string",
                        "format": "int64",
                        "description": "Default number of tokens that can be consumed during the specified duration. This is the number of tokens assigned when a client application developer activates the service for his/her project. Specifying a value of 0 will block all requests. This can be used if you are provisioning quota to selected consumers and blocking others. Similarly, a value of -1 will indicate an unlimited quota. No other negative values are allowed. Used by group-based quotas only."
                      }
                    },
                    "description": "`QuotaLimit` defines a specific limit that applies over a specified duration for a limit type. There can be at most one limit for a duration and limit type combination defined within a `QuotaGroup`."
                  },
                  "description": "List of `QuotaLimit` definitions for the service."
                },
                "metricRules": {
                  "type": "array",
                  "items": {
                    "id": "MetricRule",
                    "type": "object",
                    "properties": {
                      "selector": {
                        "type": "string",
                        "description": "Selects the methods to which this rule applies. Refer to selector for syntax details."
                      },
                      "metricCosts": {
                        "type": "object",
                        "description": "Metrics to update when the selected methods are called, and the associated cost applied to each metric. The key of the map is the metric name, and the values are the amount increased for the metric against which the quota limits are defined. The value must not be negative.",
                        "additionalProperties": {
                          "type": "string",
                          "format": "int64"
                        }
                      }
                    },
                    "description": "Bind API methods to metrics. Binding a method to a metric causes that metric's configured quota behaviors to apply to the method call."
                  },
                  "description": "List of `MetricRule` definitions, each one mapping a selected method to one or more metrics."
                }
              },
              "description": "Quota configuration."
            },
            "title": {
              "type": "string",
              "description": "The product title for this service."
            },
            "types": {
              "type": "array",
              "items": {
                "id": "Type",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The fully qualified message name."
                  },
                  "fields": {
                    "type": "array",
                    "items": {
                      "id": "Field",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "enum": [
                            "TYPE_UNKNOWN",
                            "TYPE_DOUBLE",
                            "TYPE_FLOAT",
                            "TYPE_INT64",
                            "TYPE_UINT64",
                            "TYPE_INT32",
                            "TYPE_FIXED64",
                            "TYPE_FIXED32",
                            "TYPE_BOOL",
                            "TYPE_STRING",
                            "TYPE_GROUP",
                            "TYPE_MESSAGE",
                            "TYPE_BYTES",
                            "TYPE_UINT32",
                            "TYPE_ENUM",
                            "TYPE_SFIXED32",
                            "TYPE_SFIXED64",
                            "TYPE_SINT32",
                            "TYPE_SINT64"
                          ],
                          "type": "string",
                          "description": "The field type.",
                          "enumDescriptions": [
                            "Field type unknown.",
                            "Field type double.",
                            "Field type float.",
                            "Field type int64.",
                            "Field type uint64.",
                            "Field type int32.",
                            "Field type fixed64.",
                            "Field type fixed32.",
                            "Field type bool.",
                            "Field type string.",
                            "Field type group. Proto2 syntax only, and deprecated.",
                            "Field type message.",
                            "Field type bytes.",
                            "Field type uint32.",
                            "Field type enum.",
                            "Field type sfixed32.",
                            "Field type sfixed64.",
                            "Field type sint32.",
                            "Field type sint64."
                          ]
                        },
                        "name": {
                          "type": "string",
                          "description": "The field name."
                        },
                        "number": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The field number."
                        },
                        "packed": {
                          "type": "boolean",
                          "description": "Whether to use alternative packed wire representation."
                        },
                        "options": {
                          "type": "array",
                          "items": {
                            "id": "Option",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The option's name. For protobuf built-in options (options defined in descriptor.proto), this is the short name. For example, `\"map_entry\"`. For custom options, it should be the fully-qualified name. For example, `\"google.api.http\"`."
                              },
                              "value": {
                                "type": "object",
                                "description": "The option's value packed in an Any message. If the value is a primitive, the corresponding wrapper type defined in google/protobuf/wrappers.proto should be used. If the value is an enum, it should be stored as an int32 value using the google.protobuf.Int32Value type.",
                                "additionalProperties": {
                                  "type": "any",
                                  "description": "Properties of the object. Contains field @type with type URL."
                                }
                              }
                            },
                            "description": "A protocol buffer option, which can be attached to a message, field, enumeration, etc."
                          },
                          "description": "The protocol buffer options."
                        },
                        "typeUrl": {
                          "type": "string",
                          "description": "The field type URL, without the scheme, for message or enumeration types. Example: `\"type.googleapis.com/google.protobuf.Timestamp\"`."
                        },
                        "jsonName": {
                          "type": "string",
                          "description": "The field JSON name."
                        },
                        "oneofIndex": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The index of the field type in `Type.oneofs`, for message or enumeration types. The first type has index 1; zero means the type is not in the list."
                        },
                        "cardinality": {
                          "enum": [
                            "CARDINALITY_UNKNOWN",
                            "CARDINALITY_OPTIONAL",
                            "CARDINALITY_REQUIRED",
                            "CARDINALITY_REPEATED"
                          ],
                          "type": "string",
                          "description": "The field cardinality.",
                          "enumDescriptions": [
                            "For fields with unknown cardinality.",
                            "For optional fields.",
                            "For required fields. Proto2 syntax only.",
                            "For repeated fields."
                          ]
                        },
                        "defaultValue": {
                          "type": "string",
                          "description": "The string value of the default value of this field. Proto2 syntax only."
                        }
                      },
                      "description": "A single field of a message type."
                    },
                    "description": "The list of fields."
                  },
                  "oneofs": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The list of types appearing in `oneof` definitions in this type."
                  },
                  "syntax": {
                    "enum": [
                      "SYNTAX_PROTO2",
                      "SYNTAX_PROTO3"
                    ],
                    "type": "string",
                    "description": "The source syntax.",
                    "enumDescriptions": [
                      "Syntax `proto2`.",
                      "Syntax `proto3`."
                    ]
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "id": "Option",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The option's name. For protobuf built-in options (options defined in descriptor.proto), this is the short name. For example, `\"map_entry\"`. For custom options, it should be the fully-qualified name. For example, `\"google.api.http\"`."
                        },
                        "value": {
                          "type": "object",
                          "description": "The option's value packed in an Any message. If the value is a primitive, the corresponding wrapper type defined in google/protobuf/wrappers.proto should be used. If the value is an enum, it should be stored as an int32 value using the google.protobuf.Int32Value type.",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object. Contains field @type with type URL."
                          }
                        }
                      },
                      "description": "A protocol buffer option, which can be attached to a message, field, enumeration, etc."
                    },
                    "description": "The protocol buffer options."
                  },
                  "sourceContext": {
                    "id": "SourceContext",
                    "type": "object",
                    "properties": {
                      "fileName": {
                        "type": "string",
                        "description": "The path-qualified name of the .proto file that contained the associated protobuf element. For example: `\"google/protobuf/source_context.proto\"`."
                      }
                    },
                    "description": "The source context."
                  }
                },
                "description": "A protocol buffer message type."
              },
              "description": "A list of all proto message types included in this API service. Types referenced directly or indirectly by the `apis` are automatically included. Messages which are not referenced but shall be included, such as types used by the `google.protobuf.Any` type, should be listed here by name. Example: types: - name: google.protobuf.Int32"
            },
            "usage": {
              "id": "Usage",
              "type": "object",
              "properties": {
                "rules": {
                  "type": "array",
                  "items": {
                    "id": "UsageRule",
                    "type": "object",
                    "properties": {
                      "selector": {
                        "type": "string",
                        "description": "Selects the methods to which this rule applies. Use '*' to indicate all methods in all APIs. Refer to selector for syntax details."
                      },
                      "skipServiceControl": {
                        "type": "boolean",
                        "description": "If true, the selected method should skip service control and the control plane features, such as quota and billing, will not be available. This flag is used by Google Cloud Endpoints to bypass checks for internal methods, such as service health check methods."
                      },
                      "allowUnregisteredCalls": {
                        "type": "boolean",
                        "description": "If true, the selected method allows unregistered calls, e.g. calls that don't identify any user or application."
                      }
                    },
                    "description": "Usage configuration rules for the service. NOTE: Under development. Use this rule to configure unregistered calls for the service. Unregistered calls are calls that do not contain consumer project identity. (Example: calls that do not contain an API key). By default, API methods do not allow unregistered calls, and each method call must be identified by a consumer project identity. Use this rule to allow/disallow unregistered calls. Example of an API that wants to allow unregistered calls for entire service. usage: rules: - selector: \"*\" allow_unregistered_calls: true Example of a method that wants to allow unregistered calls. usage: rules: - selector: \"google.example.library.v1.LibraryService.CreateBook\" allow_unregistered_calls: true"
                  },
                  "description": "A list of usage rules that apply to individual API methods. **NOTE:** All service configuration rules follow \"last one wins\" order."
                },
                "requirements": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Requirements that must be satisfied before a consumer project can use the service. Each requirement is of the form /; for example 'serviceusage.googleapis.com/billing-enabled'. For Google APIs, a Terms of Service requirement must be included here. Google Cloud APIs must include \"serviceusage.googleapis.com/tos/cloud\". Other Google APIs should include \"serviceusage.googleapis.com/tos/universal\". Additional ToS can be included based on the business needs."
                },
                "producerNotificationChannel": {
                  "type": "string",
                  "description": "The full resource name of a channel used for sending notifications to the service producer. Google Service Management currently only supports [Google Cloud Pub/Sub](https://cloud.google.com/pubsub) as a notification channel. To use Google Cloud Pub/Sub as the channel, this must be the name of a Cloud Pub/Sub topic that uses the Cloud Pub/Sub topic name format documented in https://cloud.google.com/pubsub/docs/overview."
                }
              },
              "description": "Configuration controlling usage of this service."
            },
            "backend": {
              "id": "Backend",
              "type": "object",
              "properties": {
                "rules": {
                  "type": "array",
                  "items": {
                    "id": "BackendRule",
                    "type": "object",
                    "properties": {
                      "address": {
                        "type": "string",
                        "description": "The address of the API backend. The scheme is used to determine the backend protocol and security. The following schemes are accepted: SCHEME PROTOCOL SECURITY http:// HTTP None https:// HTTP TLS grpc:// gRPC None grpcs:// gRPC TLS It is recommended to explicitly include a scheme. Leaving out the scheme may cause constrasting behaviors across platforms. If the port is unspecified, the default is: - 80 for schemes without TLS - 443 for schemes with TLS For HTTP backends, use protocol to specify the protocol version."
                      },
                      "deadline": {
                        "type": "number",
                        "format": "double",
                        "description": "The number of seconds to wait for a response from a request. The default varies based on the request protocol and deployment environment."
                      },
                      "protocol": {
                        "type": "string",
                        "description": "The protocol used for sending a request to the backend. The supported values are \"http/1.1\" and \"h2\". The default value is inferred from the scheme in the address field: SCHEME PROTOCOL http:// http/1.1 https:// http/1.1 grpc:// h2 grpcs:// h2 For secure HTTP backends (https://) that support HTTP/2, set this field to \"h2\" for improved performance. Configuring this field to non-default values is only supported for secure HTTP backends. This field will be ignored for all other backends. See https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids for more details on the supported values."
                      },
                      "selector": {
                        "type": "string",
                        "description": "Selects the methods to which this rule applies. Refer to selector for syntax details."
                      },
                      "disableAuth": {
                        "type": "boolean",
                        "description": "When disable_auth is true, a JWT ID token won't be generated and the original \"Authorization\" HTTP header will be preserved. If the header is used to carry the original token and is expected by the backend, this field must be set to true to preserve the header."
                      },
                      "jwtAudience": {
                        "type": "string",
                        "description": "The JWT audience is used when generating a JWT ID token for the backend. This ID token will be added in the HTTP \"authorization\" header, and sent to the backend."
                      },
                      "pathTranslation": {
                        "enum": [
                          "PATH_TRANSLATION_UNSPECIFIED",
                          "CONSTANT_ADDRESS",
                          "APPEND_PATH_TO_ADDRESS"
                        ],
                        "type": "string",
                        "enumDescriptions": [
                          "",
                          "Use the backend address as-is, with no modification to the path. If the URL pattern contains variables, the variable names and values will be appended to the query string. If a query string parameter and a URL pattern variable have the same name, this may result in duplicate keys in the query string. # Examples Given the following operation config: Method path: /api/company/{cid}/user/{uid} Backend address: https://example.cloudfunctions.net/getUser Requests to the following request paths will call the backend at the translated path: Request path: /api/company/widgetworks/user/johndoe Translated: https://example.cloudfunctions.net/getUser?cid=widgetworks&uid=johndoe Request path: /api/company/widgetworks/user/johndoe?timezone=EST Translated: https://example.cloudfunctions.net/getUser?timezone=EST&cid=widgetworks&uid=johndoe",
                          "The request path will be appended to the backend address. # Examples Given the following operation config: Method path: /api/company/{cid}/user/{uid} Backend address: https://example.appspot.com Requests to the following request paths will call the backend at the translated path: Request path: /api/company/widgetworks/user/johndoe Translated: https://example.appspot.com/api/company/widgetworks/user/johndoe Request path: /api/company/widgetworks/user/johndoe?timezone=EST Translated: https://example.appspot.com/api/company/widgetworks/user/johndoe?timezone=EST"
                        ]
                      },
                      "operationDeadline": {
                        "type": "number",
                        "format": "double",
                        "description": "The number of seconds to wait for the completion of a long running operation. The default is no deadline."
                      }
                    },
                    "description": "A backend rule provides configuration for an individual API element."
                  },
                  "description": "A list of API backend rules that apply to individual API methods. **NOTE:** All service configuration rules follow \"last one wins\" order."
                }
              },
              "description": "API backend configuration."
            },
            "billing": {
              "id": "Billing",
              "type": "object",
              "properties": {
                "consumerDestinations": {
                  "type": "array",
                  "items": {
                    "id": "BillingDestination",
                    "type": "object",
                    "properties": {
                      "metrics": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Names of the metrics to report to this billing destination. Each name must be defined in Service.metrics section."
                      },
                      "monitoredResource": {
                        "type": "string",
                        "description": "The monitored resource type. The type must be defined in Service.monitored_resources section."
                      }
                    },
                    "description": "Configuration of a specific billing destination (Currently only support bill against consumer project)."
                  },
                  "description": "Billing configurations for sending metrics to the consumer project. There can be multiple consumer destinations per service, each one must have a different monitored resource type. A metric can be used in at most one consumer destination."
                }
              },
              "description": "Billing configuration."
            },
            "context": {
              "id": "Context",
              "type": "object",
              "properties": {
                "rules": {
                  "type": "array",
                  "items": {
                    "id": "ContextRule",
                    "type": "object",
                    "properties": {
                      "provided": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "A list of full type names of provided contexts."
                      },
                      "selector": {
                        "type": "string",
                        "description": "Selects the methods to which this rule applies. Refer to selector for syntax details."
                      },
                      "requested": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "A list of full type names of requested contexts."
                      },
                      "allowedRequestExtensions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "A list of full type names or extension IDs of extensions allowed in grpc side channel from client to backend."
                      },
                      "allowedResponseExtensions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "A list of full type names or extension IDs of extensions allowed in grpc side channel from backend to client."
                      }
                    },
                    "description": "A context rule provides information about the context for an individual API element."
                  },
                  "description": "A list of RPC context rules that apply to individual API methods. **NOTE:** All service configuration rules follow \"last one wins\" order."
                }
              },
              "description": "Context configuration."
            },
            "control": {
              "id": "Control",
              "type": "object",
              "properties": {
                "environment": {
                  "type": "string",
                  "description": "The service control environment to use. If empty, no control plane feature (like quota and billing) will be enabled."
                }
              },
              "description": "Configuration for the service control plane."
            },
            "logging": {
              "id": "Logging",
              "type": "object",
              "properties": {
                "consumerDestinations": {
                  "type": "array",
                  "items": {
                    "id": "LoggingDestination",
                    "type": "object",
                    "properties": {
                      "logs": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Names of the logs to be sent to this destination. Each name must be defined in the Service.logs section. If the log name is not a domain scoped name, it will be automatically prefixed with the service name followed by \"/\"."
                      },
                      "monitoredResource": {
                        "type": "string",
                        "description": "The monitored resource type. The type must be defined in the Service.monitored_resources section."
                      }
                    },
                    "description": "Configuration of a specific logging destination (the producer project or the consumer project)."
                  },
                  "description": "Logging configurations for sending logs to the consumer project. There can be multiple consumer destinations, each one must have a different monitored resource type. A log can be used in at most one consumer destination."
                },
                "producerDestinations": {
                  "type": "array",
                  "items": {
                    "id": "LoggingDestination",
                    "type": "object",
                    "properties": {
                      "logs": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Names of the logs to be sent to this destination. Each name must be defined in the Service.logs section. If the log name is not a domain scoped name, it will be automatically prefixed with the service name followed by \"/\"."
                      },
                      "monitoredResource": {
                        "type": "string",
                        "description": "The monitored resource type. The type must be defined in the Service.monitored_resources section."
                      }
                    },
                    "description": "Configuration of a specific logging destination (the producer project or the consumer project)."
                  },
                  "description": "Logging configurations for sending logs to the producer project. There can be multiple producer destinations, each one must have a different monitored resource type. A log can be used in at most one producer destination."
                }
              },
              "description": "Logging configuration."
            },
            "metrics": {
              "type": "array",
              "items": {
                "id": "MetricDescriptor",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The resource name of the metric descriptor."
                  },
                  "type": {
                    "type": "string",
                    "description": "The metric type, including its DNS name prefix. The type is not URL-encoded. All user-defined metric types have the DNS name `custom.googleapis.com` or `external.googleapis.com`. Metric types should use a natural hierarchical grouping. For example: \"custom.googleapis.com/invoice/paid/amount\" \"external.googleapis.com/prometheus/up\" \"appengine.googleapis.com/http/server/response_latencies\""
                  },
                  "unit": {
                    "type": "string",
                    "description": "The units in which the metric value is reported. It is only applicable if the `value_type` is `INT64`, `DOUBLE`, or `DISTRIBUTION`. The `unit` defines the representation of the stored metric values. Different systems might scale the values to be more easily displayed (so a value of `0.02kBy` _might_ be displayed as `20By`, and a value of `3523kBy` _might_ be displayed as `3.5MBy`). However, if the `unit` is `kBy`, then the value of the metric is always in thousands of bytes, no matter how it might be displayed. If you want a custom metric to record the exact number of CPU-seconds used by a job, you can create an `INT64 CUMULATIVE` metric whose `unit` is `s{CPU}` (or equivalently `1s{CPU}` or just `s`). If the job uses 12,005 CPU-seconds, then the value is written as `12005`. Alternatively, if you want a custom metric to record data in a more granular way, you can create a `DOUBLE CUMULATIVE` metric whose `unit` is `ks{CPU}`, and then write the value `12.005` (which is `12005/1000`), or use `Kis{CPU}` and write `11.723` (which is `12005/1024`). The supported units are a subset of [The Unified Code for Units of Measure](https://unitsofmeasure.org/ucum.html) standard: **Basic units (UNIT)** * `bit` bit * `By` byte * `s` second * `min` minute * `h` hour * `d` day * `1` dimensionless **Prefixes (PREFIX)** * `k` kilo (10^3) * `M` mega (10^6) * `G` giga (10^9) * `T` tera (10^12) * `P` peta (10^15) * `E` exa (10^18) * `Z` zetta (10^21) * `Y` yotta (10^24) * `m` milli (10^-3) * `u` micro (10^-6) * `n` nano (10^-9) * `p` pico (10^-12) * `f` femto (10^-15) * `a` atto (10^-18) * `z` zepto (10^-21) * `y` yocto (10^-24) * `Ki` kibi (2^10) * `Mi` mebi (2^20) * `Gi` gibi (2^30) * `Ti` tebi (2^40) * `Pi` pebi (2^50) **Grammar** The grammar also includes these connectors: * `/` division or ratio (as an infix operator). For examples, `kBy/{email}` or `MiBy/10ms` (although you should almost never have `/s` in a metric `unit`; rates should always be computed at query time from the underlying cumulative or delta value). * `.` multiplication or composition (as an infix operator). For examples, `GBy.d` or `k{watt}.h`. The grammar for a unit is as follows: Expression = Component { \".\" Component } { \"/\" Component } ; Component = ( [ PREFIX ] UNIT | \"%\" ) [ Annotation ] | Annotation | \"1\" ; Annotation = \"{\" NAME \"}\" ; Notes: * `Annotation` is just a comment if it follows a `UNIT`. If the annotation is used alone, then the unit is equivalent to `1`. For examples, `{request}/s == 1/s`, `By{transmitted}/s == By/s`. * `NAME` is a sequence of non-blank printable ASCII characters not containing `{` or `}`. * `1` represents a unitary [dimensionless unit](https://en.wikipedia.org/wiki/Dimensionless_quantity) of 1, such as in `1/s`. It is typically used when none of the basic units are appropriate. For example, \"new users per day\" can be represented as `1/d` or `{new-users}/d` (and a metric value `5` would mean \"5 new users). Alternatively, \"thousands of page views per day\" would be represented as `1000/d` or `k1/d` or `k{page_views}/d` (and a metric value of `5.3` would mean \"5300 page views per day\"). * `%` represents dimensionless value of 1/100, and annotates values giving a percentage (so the metric values are typically in the range of 0..100, and a metric value `3` means \"3 percent\"). * `10^2.%` indicates a metric contains a ratio, typically in the range 0..1, that will be multiplied by 100 and displayed as a percentage (so a metric value `0.03` means \"3 percent\")."
                  },
                  "labels": {
                    "type": "array",
                    "items": {
                      "id": "LabelDescriptor",
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "The label key."
                        },
                        "valueType": {
                          "enum": [
                            "STRING",
                            "BOOL",
                            "INT64"
                          ],
                          "type": "string",
                          "description": "The type of data that can be assigned to the label.",
                          "enumDescriptions": [
                            "A variable-length string. This is the default.",
                            "Boolean; true or false.",
                            "A 64-bit signed integer."
                          ]
                        },
                        "description": {
                          "type": "string",
                          "description": "A human-readable description for the label."
                        }
                      },
                      "description": "A description of a label."
                    },
                    "description": "The set of labels that can be used to describe a specific instance of this metric type. For example, the `appengine.googleapis.com/http/server/response_latencies` metric type has a label for the HTTP response code, `response_code`, so you can look at latencies for successful responses or just for responses that failed."
                  },
                  "metadata": {
                    "id": "MetricDescriptorMetadata",
                    "type": "object",
                    "properties": {
                      "ingestDelay": {
                        "type": "string",
                        "format": "google-duration",
                        "description": "The delay of data points caused by ingestion. Data points older than this age are guaranteed to be ingested and available to be read, excluding data loss due to errors."
                      },
                      "launchStage": {
                        "enum": [
                          "LAUNCH_STAGE_UNSPECIFIED",
                          "UNIMPLEMENTED",
                          "PRELAUNCH",
                          "EARLY_ACCESS",
                          "ALPHA",
                          "BETA",
                          "GA",
                          "DEPRECATED"
                        ],
                        "type": "string",
                        "description": "Deprecated. Must use the MetricDescriptor.launch_stage instead.",
                        "enumDescriptions": [
                          "Do not use this default value.",
                          "The feature is not yet implemented. Users can not use it.",
                          "Prelaunch features are hidden from users and are only visible internally.",
                          "Early Access features are limited to a closed group of testers. To use these features, you must sign up in advance and sign a Trusted Tester agreement (which includes confidentiality provisions). These features may be unstable, changed in backward-incompatible ways, and are not guaranteed to be released.",
                          "Alpha is a limited availability test for releases before they are cleared for widespread use. By Alpha, all significant design issues are resolved and we are in the process of verifying functionality. Alpha customers need to apply for access, agree to applicable terms, and have their projects allowlisted. Alpha releases don’t have to be feature complete, no SLAs are provided, and there are no technical support obligations, but they will be far enough along that customers can actually use them in test environments or for limited-use tests -- just like they would in normal production cases.",
                          "Beta is the point at which we are ready to open a release for any customer to use. There are no SLA or technical support obligations in a Beta release. Products will be complete from a feature perspective, but may have some open outstanding issues. Beta releases are suitable for limited production use cases.",
                          "GA features are open to all developers and are considered stable and fully qualified for production use.",
                          "Deprecated features are scheduled to be shut down and removed. For more information, see the “Deprecation Policy” section of our [Terms of Service](https://cloud.google.com/terms/) and the [Google Cloud Platform Subject to the Deprecation Policy](https://cloud.google.com/terms/deprecation) documentation."
                        ]
                      },
                      "samplePeriod": {
                        "type": "string",
                        "format": "google-duration",
                        "description": "The sampling period of metric data points. For metrics which are written periodically, consecutive data points are stored at this time interval, excluding data loss due to errors. Metrics with a higher granularity have a smaller sampling period."
                      }
                    },
                    "description": "Optional. Metadata which can be used to guide usage of the metric."
                  },
                  "valueType": {
                    "enum": [
                      "VALUE_TYPE_UNSPECIFIED",
                      "BOOL",
                      "INT64",
                      "DOUBLE",
                      "STRING",
                      "DISTRIBUTION",
                      "MONEY"
                    ],
                    "type": "string",
                    "description": "Whether the measurement is an integer, a floating-point number, etc. Some combinations of `metric_kind` and `value_type` might not be supported.",
                    "enumDescriptions": [
                      "Do not use this default value.",
                      "The value is a boolean. This value type can be used only if the metric kind is `GAUGE`.",
                      "The value is a signed 64-bit integer.",
                      "The value is a double precision floating point number.",
                      "The value is a text string. This value type can be used only if the metric kind is `GAUGE`.",
                      "The value is a `Distribution`.",
                      "The value is money."
                    ]
                  },
                  "metricKind": {
                    "enum": [
                      "METRIC_KIND_UNSPECIFIED",
                      "GAUGE",
                      "DELTA",
                      "CUMULATIVE"
                    ],
                    "type": "string",
                    "description": "Whether the metric records instantaneous values, changes to a value, etc. Some combinations of `metric_kind` and `value_type` might not be supported.",
                    "enumDescriptions": [
                      "Do not use this default value.",
                      "An instantaneous measurement of a value.",
                      "The change in a value during a time interval.",
                      "A value accumulated over a time interval. Cumulative measurements in a time series should have the same start time and increasing end times, until an event resets the cumulative value to zero and sets a new start time for the following points."
                    ]
                  },
                  "description": {
                    "type": "string",
                    "description": "A detailed description of the metric, which can be used in documentation."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "A concise name for the metric, which can be displayed in user interfaces. Use sentence case without an ending period, for example \"Request count\". This field is optional but it is recommended to be set for any metrics associated with user-visible concepts, such as Quota."
                  },
                  "launchStage": {
                    "enum": [
                      "LAUNCH_STAGE_UNSPECIFIED",
                      "UNIMPLEMENTED",
                      "PRELAUNCH",
                      "EARLY_ACCESS",
                      "ALPHA",
                      "BETA",
                      "GA",
                      "DEPRECATED"
                    ],
                    "type": "string",
                    "description": "Optional. The launch stage of the metric definition.",
                    "enumDescriptions": [
                      "Do not use this default value.",
                      "The feature is not yet implemented. Users can not use it.",
                      "Prelaunch features are hidden from users and are only visible internally.",
                      "Early Access features are limited to a closed group of testers. To use these features, you must sign up in advance and sign a Trusted Tester agreement (which includes confidentiality provisions). These features may be unstable, changed in backward-incompatible ways, and are not guaranteed to be released.",
                      "Alpha is a limited availability test for releases before they are cleared for widespread use. By Alpha, all significant design issues are resolved and we are in the process of verifying functionality. Alpha customers need to apply for access, agree to applicable terms, and have their projects allowlisted. Alpha releases don’t have to be feature complete, no SLAs are provided, and there are no technical support obligations, but they will be far enough along that customers can actually use them in test environments or for limited-use tests -- just like they would in normal production cases.",
                      "Beta is the point at which we are ready to open a release for any customer to use. There are no SLA or technical support obligations in a Beta release. Products will be complete from a feature perspective, but may have some open outstanding issues. Beta releases are suitable for limited production use cases.",
                      "GA features are open to all developers and are considered stable and fully qualified for production use.",
                      "Deprecated features are scheduled to be shut down and removed. For more information, see the “Deprecation Policy” section of our [Terms of Service](https://cloud.google.com/terms/) and the [Google Cloud Platform Subject to the Deprecation Policy](https://cloud.google.com/terms/deprecation) documentation."
                    ]
                  },
                  "monitoredResourceTypes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Read-only. If present, then a time series, which is identified partially by a metric type and a MonitoredResourceDescriptor, that is associated with this metric type can only be associated with one of the monitored resource types listed here."
                  }
                },
                "description": "Defines a metric type and its schema. Once a metric descriptor is created, deleting or altering it stops data collection and makes the metric type's existing data unusable. "
              },
              "description": "Defines the metrics used by this service."
            },
            "endpoints": {
              "type": "array",
              "items": {
                "id": "Endpoint",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The canonical name of this endpoint."
                  },
                  "target": {
                    "type": "string",
                    "description": "The specification of an Internet routable address of API frontend that will handle requests to this [API Endpoint](https://cloud.google.com/apis/design/glossary). It should be either a valid IPv4 address or a fully-qualified domain name. For example, \"8.8.8.8\" or \"myservice.appspot.com\"."
                  },
                  "allowCors": {
                    "type": "boolean",
                    "description": "Allowing [CORS](https://en.wikipedia.org/wiki/Cross-origin_resource_sharing), aka cross-domain traffic, would allow the backends served from this endpoint to receive and respond to HTTP OPTIONS requests. The response will be used by the browser to determine whether the subsequent cross-origin request is allowed to proceed."
                  }
                },
                "description": "`Endpoint` describes a network address of a service that serves a set of APIs. It is commonly known as a service endpoint. A service may expose any number of service endpoints, and all service endpoints share the same service definition, such as quota limits and monitoring metrics. Example: type: google.api.Service name: library-example.googleapis.com endpoints: # Declares network address `https://library-example.googleapis.com` # for service `library-example.googleapis.com`. The `https` scheme # is implicit for all service endpoints. Other schemes may be # supported in the future. - name: library-example.googleapis.com allow_cors: false - name: content-staging-library-example.googleapis.com # Allows HTTP OPTIONS calls to be passed to the API frontend, for it # to decide whether the subsequent cross-origin request is allowed # to proceed. allow_cors: true"
              },
              "description": "Configuration for network endpoints. If this is empty, then an endpoint with the same name as the service is automatically generated to service all defined APIs."
            },
            "monitoring": {
              "id": "Monitoring",
              "type": "object",
              "properties": {
                "consumerDestinations": {
                  "type": "array",
                  "items": {
                    "id": "MonitoringDestination",
                    "type": "object",
                    "properties": {
                      "metrics": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Types of the metrics to report to this monitoring destination. Each type must be defined in Service.metrics section."
                      },
                      "monitoredResource": {
                        "type": "string",
                        "description": "The monitored resource type. The type must be defined in Service.monitored_resources section."
                      }
                    },
                    "description": "Configuration of a specific monitoring destination (the producer project or the consumer project)."
                  },
                  "description": "Monitoring configurations for sending metrics to the consumer project. There can be multiple consumer destinations. A monitored resource type may appear in multiple monitoring destinations if different aggregations are needed for different sets of metrics associated with that monitored resource type. A monitored resource and metric pair may only be used once in the Monitoring configuration."
                },
                "producerDestinations": {
                  "type": "array",
                  "items": {
                    "id": "MonitoringDestination",
                    "type": "object",
                    "properties": {
                      "metrics": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Types of the metrics to report to this monitoring destination. Each type must be defined in Service.metrics section."
                      },
                      "monitoredResource": {
                        "type": "string",
                        "description": "The monitored resource type. The type must be defined in Service.monitored_resources section."
                      }
                    },
                    "description": "Configuration of a specific monitoring destination (the producer project or the consumer project)."
                  },
                  "description": "Monitoring configurations for sending metrics to the producer project. There can be multiple producer destinations. A monitored resource type may appear in multiple monitoring destinations if different aggregations are needed for different sets of metrics associated with that monitored resource type. A monitored resource and metric pair may only be used once in the Monitoring configuration."
                }
              },
              "description": "Monitoring configuration."
            },
            "sourceInfo": {
              "id": "SourceInfo",
              "type": "object",
              "properties": {
                "sourceFiles": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "All files used during config generation."
                }
              },
              "description": "Output only. The source information for this configuration if available."
            },
            "customError": {
              "id": "CustomError",
              "type": "object",
              "properties": {
                "rules": {
                  "type": "array",
                  "items": {
                    "id": "CustomErrorRule",
                    "type": "object",
                    "properties": {
                      "selector": {
                        "type": "string",
                        "description": "Selects messages to which this rule applies. Refer to selector for syntax details."
                      },
                      "isErrorType": {
                        "type": "boolean",
                        "description": "Mark this message as possible payload in error response. Otherwise, objects of this type will be filtered when they appear in error payload."
                      }
                    },
                    "description": "A custom error rule."
                  },
                  "description": "The list of custom error rules that apply to individual API messages. **NOTE:** All service configuration rules follow \"last one wins\" order."
                },
                "types": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The list of custom error detail types, e.g. 'google.foo.v1.CustomError'."
                }
              },
              "description": "Custom error configuration."
            },
            "systemTypes": {
              "type": "array",
              "items": {
                "id": "Type",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The fully qualified message name."
                  },
                  "fields": {
                    "type": "array",
                    "items": {
                      "id": "Field",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "enum": [
                            "TYPE_UNKNOWN",
                            "TYPE_DOUBLE",
                            "TYPE_FLOAT",
                            "TYPE_INT64",
                            "TYPE_UINT64",
                            "TYPE_INT32",
                            "TYPE_FIXED64",
                            "TYPE_FIXED32",
                            "TYPE_BOOL",
                            "TYPE_STRING",
                            "TYPE_GROUP",
                            "TYPE_MESSAGE",
                            "TYPE_BYTES",
                            "TYPE_UINT32",
                            "TYPE_ENUM",
                            "TYPE_SFIXED32",
                            "TYPE_SFIXED64",
                            "TYPE_SINT32",
                            "TYPE_SINT64"
                          ],
                          "type": "string",
                          "description": "The field type.",
                          "enumDescriptions": [
                            "Field type unknown.",
                            "Field type double.",
                            "Field type float.",
                            "Field type int64.",
                            "Field type uint64.",
                            "Field type int32.",
                            "Field type fixed64.",
                            "Field type fixed32.",
                            "Field type bool.",
                            "Field type string.",
                            "Field type group. Proto2 syntax only, and deprecated.",
                            "Field type message.",
                            "Field type bytes.",
                            "Field type uint32.",
                            "Field type enum.",
                            "Field type sfixed32.",
                            "Field type sfixed64.",
                            "Field type sint32.",
                            "Field type sint64."
                          ]
                        },
                        "name": {
                          "type": "string",
                          "description": "The field name."
                        },
                        "number": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The field number."
                        },
                        "packed": {
                          "type": "boolean",
                          "description": "Whether to use alternative packed wire representation."
                        },
                        "options": {
                          "type": "array",
                          "items": {
                            "id": "Option",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The option's name. For protobuf built-in options (options defined in descriptor.proto), this is the short name. For example, `\"map_entry\"`. For custom options, it should be the fully-qualified name. For example, `\"google.api.http\"`."
                              },
                              "value": {
                                "type": "object",
                                "description": "The option's value packed in an Any message. If the value is a primitive, the corresponding wrapper type defined in google/protobuf/wrappers.proto should be used. If the value is an enum, it should be stored as an int32 value using the google.protobuf.Int32Value type.",
                                "additionalProperties": {
                                  "type": "any",
                                  "description": "Properties of the object. Contains field @type with type URL."
                                }
                              }
                            },
                            "description": "A protocol buffer option, which can be attached to a message, field, enumeration, etc."
                          },
                          "description": "The protocol buffer options."
                        },
                        "typeUrl": {
                          "type": "string",
                          "description": "The field type URL, without the scheme, for message or enumeration types. Example: `\"type.googleapis.com/google.protobuf.Timestamp\"`."
                        },
                        "jsonName": {
                          "type": "string",
                          "description": "The field JSON name."
                        },
                        "oneofIndex": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The index of the field type in `Type.oneofs`, for message or enumeration types. The first type has index 1; zero means the type is not in the list."
                        },
                        "cardinality": {
                          "enum": [
                            "CARDINALITY_UNKNOWN",
                            "CARDINALITY_OPTIONAL",
                            "CARDINALITY_REQUIRED",
                            "CARDINALITY_REPEATED"
                          ],
                          "type": "string",
                          "description": "The field cardinality.",
                          "enumDescriptions": [
                            "For fields with unknown cardinality.",
                            "For optional fields.",
                            "For required fields. Proto2 syntax only.",
                            "For repeated fields."
                          ]
                        },
                        "defaultValue": {
                          "type": "string",
                          "description": "The string value of the default value of this field. Proto2 syntax only."
                        }
                      },
                      "description": "A single field of a message type."
                    },
                    "description": "The list of fields."
                  },
                  "oneofs": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The list of types appearing in `oneof` definitions in this type."
                  },
                  "syntax": {
                    "enum": [
                      "SYNTAX_PROTO2",
                      "SYNTAX_PROTO3"
                    ],
                    "type": "string",
                    "description": "The source syntax.",
                    "enumDescriptions": [
                      "Syntax `proto2`.",
                      "Syntax `proto3`."
                    ]
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "id": "Option",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The option's name. For protobuf built-in options (options defined in descriptor.proto), this is the short name. For example, `\"map_entry\"`. For custom options, it should be the fully-qualified name. For example, `\"google.api.http\"`."
                        },
                        "value": {
                          "type": "object",
                          "description": "The option's value packed in an Any message. If the value is a primitive, the corresponding wrapper type defined in google/protobuf/wrappers.proto should be used. If the value is an enum, it should be stored as an int32 value using the google.protobuf.Int32Value type.",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object. Contains field @type with type URL."
                          }
                        }
                      },
                      "description": "A protocol buffer option, which can be attached to a message, field, enumeration, etc."
                    },
                    "description": "The protocol buffer options."
                  },
                  "sourceContext": {
                    "id": "SourceContext",
                    "type": "object",
                    "properties": {
                      "fileName": {
                        "type": "string",
                        "description": "The path-qualified name of the .proto file that contained the associated protobuf element. For example: `\"google/protobuf/source_context.proto\"`."
                      }
                    },
                    "description": "The source context."
                  }
                },
                "description": "A protocol buffer message type."
              },
              "description": "A list of all proto message types included in this API service. It serves similar purpose as [google.api.Service.types], except that these types are not needed by user-defined APIs. Therefore, they will not show up in the generated discovery doc. This field should only be used to define system APIs in ESF."
            },
            "configVersion": {
              "type": "integer",
              "format": "uint32",
              "description": "Obsolete. Do not use. This field has no semantic meaning. The service config compiler always sets this field to `3`."
            },
            "documentation": {
              "id": "Documentation",
              "type": "object",
              "properties": {
                "pages": {
                  "type": "array",
                  "items": {
                    "id": "Page",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the page. It will be used as an identity of the page to generate URI of the page, text of the link to this page in navigation, etc. The full page name (start from the root page name to this page concatenated with `.`) can be used as reference to the page in your documentation. For example: pages: - name: Tutorial content: (== include tutorial.md ==) subpages: - name: Java content: (== include tutorial_java.md ==) You can reference `Java` page using Markdown reference link syntax: `Java`."
                      },
                      "content": {
                        "type": "string",
                        "description": "The Markdown content of the page. You can use (== include {path} ==) to include content from a Markdown file."
                      },
                      "subpages": {
                        "type": "array",
                        "items": {},
                        "description": "Subpages of this page. The order of subpages specified here will be honored in the generated docset."
                      }
                    },
                    "description": "Represents a documentation page. A page can contain subpages to represent nested documentation set structure."
                  },
                  "description": "The top level pages for the documentation set."
                },
                "rules": {
                  "type": "array",
                  "items": {
                    "id": "DocumentationRule",
                    "type": "object",
                    "properties": {
                      "selector": {
                        "type": "string",
                        "description": "The selector is a comma-separated list of patterns. Each pattern is a qualified name of the element which may end in \"*\", indicating a wildcard. Wildcards are only allowed at the end and for a whole component of the qualified name, i.e. \"foo.*\" is ok, but not \"foo.b*\" or \"foo.*.bar\". A wildcard will match one or more components. To specify a default for all applicable elements, the whole pattern \"*\" is used."
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the selected API(s)."
                      },
                      "deprecationDescription": {
                        "type": "string",
                        "description": "Deprecation description of the selected element(s). It can be provided if an element is marked as `deprecated`."
                      }
                    },
                    "description": "A documentation rule provides information about individual API elements."
                  },
                  "description": "A list of documentation rules that apply to individual API elements. **NOTE:** All service configuration rules follow \"last one wins\" order."
                },
                "summary": {
                  "type": "string",
                  "description": "A short summary of what the service does. Can only be provided by plain text."
                },
                "overview": {
                  "type": "string",
                  "description": "Declares a single overview page. For example: documentation: summary: ... overview: (== include overview.md ==) This is a shortcut for the following declaration (using pages style): documentation: summary: ... pages: - name: Overview content: (== include overview.md ==) Note: you cannot specify both `overview` field and `pages` field."
                },
                "serviceRootUrl": {
                  "type": "string",
                  "description": "Specifies the service root url if the default one (the service name from the yaml file) is not suitable. This can be seen in any fully specified service urls as well as sections that show a base that other urls are relative to."
                },
                "documentationRootUrl": {
                  "type": "string",
                  "description": "The URL to the root of documentation."
                }
              },
              "description": "Additional API documentation."
            },
            "authentication": {
              "id": "Authentication",
              "type": "object",
              "properties": {
                "rules": {
                  "type": "array",
                  "items": {
                    "id": "AuthenticationRule",
                    "type": "object",
                    "properties": {
                      "oauth": {
                        "id": "OAuthRequirements",
                        "type": "object",
                        "properties": {
                          "canonicalScopes": {
                            "type": "string",
                            "description": "The list of publicly documented OAuth scopes that are allowed access. An OAuth token containing any of these scopes will be accepted. Example: canonical_scopes: https://www.googleapis.com/auth/calendar, https://www.googleapis.com/auth/calendar.read"
                          }
                        },
                        "description": "The requirements for OAuth credentials."
                      },
                      "selector": {
                        "type": "string",
                        "description": "Selects the methods to which this rule applies. Refer to selector for syntax details."
                      },
                      "requirements": {
                        "type": "array",
                        "items": {
                          "id": "AuthRequirement",
                          "type": "object",
                          "properties": {
                            "audiences": {
                              "type": "string",
                              "description": "NOTE: This will be deprecated soon, once AuthProvider.audiences is implemented and accepted in all the runtime components. The list of JWT [audiences](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32#section-4.1.3). that are allowed to access. A JWT containing any of these audiences will be accepted. When this setting is absent, only JWTs with audience \"https://Service_name/API_name\" will be accepted. For example, if no audiences are in the setting, LibraryService API will only accept JWTs with the following audience \"https://library-example.googleapis.com/google.example.library.v1.LibraryService\". Example: audiences: bookstore_android.apps.googleusercontent.com, bookstore_web.apps.googleusercontent.com"
                            },
                            "providerId": {
                              "type": "string",
                              "description": "id from authentication provider. Example: provider_id: bookstore_auth"
                            }
                          },
                          "description": "User-defined authentication requirements, including support for [JSON Web Token (JWT)](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32)."
                        },
                        "description": "Requirements for additional authentication providers."
                      },
                      "allowWithoutCredential": {
                        "type": "boolean",
                        "description": "If true, the service accepts API keys without any other credential. This flag only applies to HTTP and gRPC requests."
                      }
                    },
                    "description": "Authentication rules for the service. By default, if a method has any authentication requirements, every request must include a valid credential matching one of the requirements. It's an error to include more than one kind of credential in a single request. If a method doesn't have any auth requirements, request credentials will be ignored."
                  },
                  "description": "A list of authentication rules that apply to individual API methods. **NOTE:** All service configuration rules follow \"last one wins\" order."
                },
                "providers": {
                  "type": "array",
                  "items": {
                    "id": "AuthProvider",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The unique identifier of the auth provider. It will be referred to by `AuthRequirement.provider_id`. Example: \"bookstore_auth\"."
                      },
                      "issuer": {
                        "type": "string",
                        "description": "Identifies the principal that issued the JWT. See https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32#section-4.1.1 Usually a URL or an email address. Example: https://securetoken.google.com Example: 1234567-compute@developer.gserviceaccount.com"
                      },
                      "jwksUri": {
                        "type": "string",
                        "description": "URL of the provider's public key set to validate signature of the JWT. See [OpenID Discovery](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata). Optional if the key set document: - can be retrieved from [OpenID Discovery](https://openid.net/specs/openid-connect-discovery-1_0.html) of the issuer. - can be inferred from the email domain of the issuer (e.g. a Google service account). Example: https://www.googleapis.com/oauth2/v1/certs"
                      },
                      "audiences": {
                        "type": "string",
                        "description": "The list of JWT [audiences](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32#section-4.1.3). that are allowed to access. A JWT containing any of these audiences will be accepted. When this setting is absent, JWTs with audiences: - \"https://[service.name]/[google.protobuf.Api.name]\" - \"https://[service.name]/\" will be accepted. For example, if no audiences are in the setting, LibraryService API will accept JWTs with the following audiences: - https://library-example.googleapis.com/google.example.library.v1.LibraryService - https://library-example.googleapis.com/ Example: audiences: bookstore_android.apps.googleusercontent.com, bookstore_web.apps.googleusercontent.com"
                      },
                      "jwtLocations": {
                        "type": "array",
                        "items": {
                          "id": "JwtLocation",
                          "type": "object",
                          "properties": {
                            "query": {
                              "type": "string",
                              "description": "Specifies URL query parameter name to extract JWT token."
                            },
                            "header": {
                              "type": "string",
                              "description": "Specifies HTTP header name to extract JWT token."
                            },
                            "valuePrefix": {
                              "type": "string",
                              "description": "The value prefix. The value format is \"value_prefix{token}\" Only applies to \"in\" header type. Must be empty for \"in\" query type. If not empty, the header value has to match (case sensitive) this prefix. If not matched, JWT will not be extracted. If matched, JWT will be extracted after the prefix is removed. For example, for \"Authorization: Bearer {JWT}\", value_prefix=\"Bearer \" with a space at the end."
                            }
                          },
                          "description": "Specifies a location to extract JWT from an API request."
                        },
                        "description": "Defines the locations to extract the JWT. JWT locations can be either from HTTP headers or URL query parameters. The rule is that the first match wins. The checking order is: checking all headers first, then URL query parameters. If not specified, default to use following 3 locations: 1) Authorization: Bearer 2) x-goog-iap-jwt-assertion 3) access_token query parameter Default locations can be specified as followings: jwt_locations: - header: Authorization value_prefix: \"Bearer \" - header: x-goog-iap-jwt-assertion - query: access_token"
                      },
                      "authorizationUrl": {
                        "type": "string",
                        "description": "Redirect URL if JWT token is required but not present or is expired. Implement authorizationUrl of securityDefinitions in OpenAPI spec."
                      }
                    },
                    "description": "Configuration for an authentication provider, including support for [JSON Web Token (JWT)](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32)."
                  },
                  "description": "Defines a set of authentication providers that a service supports."
                }
              },
              "description": "Auth configuration."
            },
            "systemParameters": {
              "id": "SystemParameters",
              "type": "object",
              "properties": {
                "rules": {
                  "type": "array",
                  "items": {
                    "id": "SystemParameterRule",
                    "type": "object",
                    "properties": {
                      "selector": {
                        "type": "string",
                        "description": "Selects the methods to which this rule applies. Use '*' to indicate all methods in all APIs. Refer to selector for syntax details."
                      },
                      "parameters": {
                        "type": "array",
                        "items": {
                          "id": "SystemParameter",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Define the name of the parameter, such as \"api_key\" . It is case sensitive."
                            },
                            "httpHeader": {
                              "type": "string",
                              "description": "Define the HTTP header name to use for the parameter. It is case insensitive."
                            },
                            "urlQueryParameter": {
                              "type": "string",
                              "description": "Define the URL query parameter name to use for the parameter. It is case sensitive."
                            }
                          },
                          "description": "Define a parameter's name and location. The parameter may be passed as either an HTTP header or a URL query parameter, and if both are passed the behavior is implementation-dependent."
                        },
                        "description": "Define parameters. Multiple names may be defined for a parameter. For a given method call, only one of them should be used. If multiple names are used the behavior is implementation-dependent. If none of the specified names are present the behavior is parameter-dependent."
                      }
                    },
                    "description": "Define a system parameter rule mapping system parameter definitions to methods."
                  },
                  "description": "Define system parameters. The parameters defined here will override the default parameters implemented by the system. If this field is missing from the service config, default system parameters will be used. Default system parameters and names is implementation-dependent. Example: define api key for all methods system_parameters rules: - selector: \"*\" parameters: - name: api_key url_query_parameter: api_key Example: define 2 api key names for a specific method. system_parameters rules: - selector: \"/ListShelves\" parameters: - name: api_key http_header: Api-Key1 - name: api_key http_header: Api-Key2 **NOTE:** All service configuration rules follow \"last one wins\" order."
                }
              },
              "description": "System parameter configuration."
            },
            "producerProjectId": {
              "type": "string",
              "description": "The Google project that owns this service."
            },
            "monitoredResources": {
              "type": "array",
              "items": {
                "id": "MonitoredResourceDescriptor",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Optional. The resource name of the monitored resource descriptor: `\"projects/{project_id}/monitoredResourceDescriptors/{type}\"` where {type} is the value of the `type` field in this object and {project_id} is a project ID that provides API-specific context for accessing the type. APIs that do not use project information can use the resource name format `\"monitoredResourceDescriptors/{type}\"`."
                  },
                  "type": {
                    "type": "string",
                    "description": "Required. The monitored resource type. For example, the type `\"cloudsql_database\"` represents databases in Google Cloud SQL."
                  },
                  "labels": {
                    "type": "array",
                    "items": {
                      "id": "LabelDescriptor",
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "The label key."
                        },
                        "valueType": {
                          "enum": [
                            "STRING",
                            "BOOL",
                            "INT64"
                          ],
                          "type": "string",
                          "description": "The type of data that can be assigned to the label.",
                          "enumDescriptions": [
                            "A variable-length string. This is the default.",
                            "Boolean; true or false.",
                            "A 64-bit signed integer."
                          ]
                        },
                        "description": {
                          "type": "string",
                          "description": "A human-readable description for the label."
                        }
                      },
                      "description": "A description of a label."
                    },
                    "description": "Required. A set of labels used to describe instances of this monitored resource type. For example, an individual Google Cloud SQL database is identified by values for the labels `\"database_id\"` and `\"zone\"`."
                  },
                  "description": {
                    "type": "string",
                    "description": "Optional. A detailed description of the monitored resource type that might be used in documentation."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Optional. A concise name for the monitored resource type that might be displayed in user interfaces. It should be a Title Cased Noun Phrase, without any article or other determiners. For example, `\"Google Cloud SQL Database\"`."
                  },
                  "launchStage": {
                    "enum": [
                      "LAUNCH_STAGE_UNSPECIFIED",
                      "UNIMPLEMENTED",
                      "PRELAUNCH",
                      "EARLY_ACCESS",
                      "ALPHA",
                      "BETA",
                      "GA",
                      "DEPRECATED"
                    ],
                    "type": "string",
                    "description": "Optional. The launch stage of the monitored resource definition.",
                    "enumDescriptions": [
                      "Do not use this default value.",
                      "The feature is not yet implemented. Users can not use it.",
                      "Prelaunch features are hidden from users and are only visible internally.",
                      "Early Access features are limited to a closed group of testers. To use these features, you must sign up in advance and sign a Trusted Tester agreement (which includes confidentiality provisions). These features may be unstable, changed in backward-incompatible ways, and are not guaranteed to be released.",
                      "Alpha is a limited availability test for releases before they are cleared for widespread use. By Alpha, all significant design issues are resolved and we are in the process of verifying functionality. Alpha customers need to apply for access, agree to applicable terms, and have their projects allowlisted. Alpha releases don’t have to be feature complete, no SLAs are provided, and there are no technical support obligations, but they will be far enough along that customers can actually use them in test environments or for limited-use tests -- just like they would in normal production cases.",
                      "Beta is the point at which we are ready to open a release for any customer to use. There are no SLA or technical support obligations in a Beta release. Products will be complete from a feature perspective, but may have some open outstanding issues. Beta releases are suitable for limited production use cases.",
                      "GA features are open to all developers and are considered stable and fully qualified for production use.",
                      "Deprecated features are scheduled to be shut down and removed. For more information, see the “Deprecation Policy” section of our [Terms of Service](https://cloud.google.com/terms/) and the [Google Cloud Platform Subject to the Deprecation Policy](https://cloud.google.com/terms/deprecation) documentation."
                    ]
                  }
                },
                "description": "An object that describes the schema of a MonitoredResource object using a type name and a set of labels. For example, the monitored resource descriptor for Google Compute Engine VM instances has a type of `\"gce_instance\"` and specifies the use of the labels `\"instance_id\"` and `\"zone\"` to identify particular VM instances. Different APIs can support different monitored resource types. APIs generally provide a `list` method that returns the monitored resource descriptors used by the API. "
              },
              "description": "Defines the monitored resources used by this service. This is required by the Service.monitoring and Service.logging configurations."
            }
          },
          "description": "`Service` is the root object of Google API service configuration (service config). It describes the basic information about a logical service, such as the service name and the user-facing title, and delegates other aspects to sub-sections. Each sub-section is either a proto message or a repeated proto message that configures a specific aspect, such as auth. For more information, see each proto message definition. Example: type: google.api.Service name: calendar.googleapis.com title: Google Calendar API apis: - name: google.calendar.v3.Calendar visibility: rules: - selector: \"google.calendar.v3.*\" restriction: PREVIEW backend: rules: - selector: \"google.calendar.v3.*\" address: calendar.example.com authentication: providers: - id: google_calendar_auth jwks_uri: https://www.googleapis.com/oauth2/v1/certs issuer: https://securetoken.google.com rules: - selector: \"*\" requirements: provider_id: google_calendar_auth"
        }
      ]
      outputs: [
        {}
      ]
  servicemanagement.services.configs.get:
    description: |-
      Gets a service configuration (version) for a managed service.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-management/reference/rest/v1/services.configs/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  servicemanagement.services.configs.list:
    description: |-
      Lists the history of the service configuration for a managed service, from the newest to the oldest.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-management/reference/rest/v1/services.configs/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListServiceConfigsResponse",
          "type": "object",
          "properties": {
            "nextPageToken": {
              "type": "string",
              "description": "The token of the next page of results."
            },
            "serviceConfigs": {
              "type": "array",
              "items": {
                "id": "Service",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "A unique ID for a specific instance of this message, typically assigned by the client for tracking purpose. Must be no longer than 63 characters and only lower case letters, digits, '.', '_' and '-' are allowed. If empty, the server may choose to generate one instead."
                  },
                  "apis": {
                    "type": "array",
                    "items": {
                      "id": "Api",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The fully qualified name of this interface, including package name followed by the interface's simple name."
                        },
                        "mixins": {
                          "type": "array",
                          "items": {
                            "id": "Mixin",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The fully qualified name of the interface which is included."
                              },
                              "root": {
                                "type": "string",
                                "description": "If non-empty specifies a path under which inherited HTTP paths are rooted."
                              }
                            },
                            "description": "Declares an API Interface to be included in this interface. The including interface must redeclare all the methods from the included interface, but documentation and options are inherited as follows: - If after comment and whitespace stripping, the documentation string of the redeclared method is empty, it will be inherited from the original method. - Each annotation belonging to the service config (http, visibility) which is not set in the redeclared method will be inherited. - If an http annotation is inherited, the path pattern will be modified as follows. Any version prefix will be replaced by the version of the including interface plus the root path if specified. Example of a simple mixin: package google.acl.v1; service AccessControl { // Get the underlying ACL object. rpc GetAcl(GetAclRequest) returns (Acl) { option (google.api.http).get = \"/v1/{resource=**}:getAcl\"; } } package google.storage.v2; service Storage { // rpc GetAcl(GetAclRequest) returns (Acl); // Get a data record. rpc GetData(GetDataRequest) returns (Data) { option (google.api.http).get = \"/v2/{resource=**}\"; } } Example of a mixin configuration: apis: - name: google.storage.v2.Storage mixins: - name: google.acl.v1.AccessControl The mixin construct implies that all methods in `AccessControl` are also declared with same name and request/response types in `Storage`. A documentation generator or annotation processor will see the effective `Storage.GetAcl` method after inheriting documentation and annotations as follows: service Storage { // Get the underlying ACL object. rpc GetAcl(GetAclRequest) returns (Acl) { option (google.api.http).get = \"/v2/{resource=**}:getAcl\"; } ... } Note how the version in the path pattern changed from `v1` to `v2`. If the `root` field in the mixin is specified, it should be a relative path under which inherited HTTP paths are placed. Example: apis: - name: google.storage.v2.Storage mixins: - name: google.acl.v1.AccessControl root: acls This implies the following inherited HTTP annotation: service Storage { // Get the underlying ACL object. rpc GetAcl(GetAclRequest) returns (Acl) { option (google.api.http).get = \"/v2/acls/{resource=**}:getAcl\"; } ... }"
                          },
                          "description": "Included interfaces. See Mixin."
                        },
                        "syntax": {
                          "enum": [
                            "SYNTAX_PROTO2",
                            "SYNTAX_PROTO3"
                          ],
                          "type": "string",
                          "description": "The source syntax of the service.",
                          "enumDescriptions": [
                            "Syntax `proto2`.",
                            "Syntax `proto3`."
                          ]
                        },
                        "methods": {
                          "type": "array",
                          "items": {
                            "id": "Method",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The simple name of this method."
                              },
                              "syntax": {
                                "enum": [
                                  "SYNTAX_PROTO2",
                                  "SYNTAX_PROTO3"
                                ],
                                "type": "string",
                                "description": "The source syntax of this method.",
                                "enumDescriptions": [
                                  "Syntax `proto2`.",
                                  "Syntax `proto3`."
                                ]
                              },
                              "options": {
                                "type": "array",
                                "items": {
                                  "id": "Option",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The option's name. For protobuf built-in options (options defined in descriptor.proto), this is the short name. For example, `\"map_entry\"`. For custom options, it should be the fully-qualified name. For example, `\"google.api.http\"`."
                                    },
                                    "value": {
                                      "type": "object",
                                      "description": "The option's value packed in an Any message. If the value is a primitive, the corresponding wrapper type defined in google/protobuf/wrappers.proto should be used. If the value is an enum, it should be stored as an int32 value using the google.protobuf.Int32Value type.",
                                      "additionalProperties": {
                                        "type": "any",
                                        "description": "Properties of the object. Contains field @type with type URL."
                                      }
                                    }
                                  },
                                  "description": "A protocol buffer option, which can be attached to a message, field, enumeration, etc."
                                },
                                "description": "Any metadata attached to the method."
                              },
                              "requestTypeUrl": {
                                "type": "string",
                                "description": "A URL of the input message type."
                              },
                              "responseTypeUrl": {
                                "type": "string",
                                "description": "The URL of the output message type."
                              },
                              "requestStreaming": {
                                "type": "boolean",
                                "description": "If true, the request is streamed."
                              },
                              "responseStreaming": {
                                "type": "boolean",
                                "description": "If true, the response is streamed."
                              }
                            },
                            "description": "Method represents a method of an API interface."
                          },
                          "description": "The methods of this interface, in unspecified order."
                        },
                        "options": {
                          "type": "array",
                          "items": {
                            "id": "Option",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The option's name. For protobuf built-in options (options defined in descriptor.proto), this is the short name. For example, `\"map_entry\"`. For custom options, it should be the fully-qualified name. For example, `\"google.api.http\"`."
                              },
                              "value": {
                                "type": "object",
                                "description": "The option's value packed in an Any message. If the value is a primitive, the corresponding wrapper type defined in google/protobuf/wrappers.proto should be used. If the value is an enum, it should be stored as an int32 value using the google.protobuf.Int32Value type.",
                                "additionalProperties": {
                                  "type": "any",
                                  "description": "Properties of the object. Contains field @type with type URL."
                                }
                              }
                            },
                            "description": "A protocol buffer option, which can be attached to a message, field, enumeration, etc."
                          },
                          "description": "Any metadata attached to the interface."
                        },
                        "version": {
                          "type": "string",
                          "description": "A version string for this interface. If specified, must have the form `major-version.minor-version`, as in `1.10`. If the minor version is omitted, it defaults to zero. If the entire version field is empty, the major version is derived from the package name, as outlined below. If the field is not empty, the version in the package name will be verified to be consistent with what is provided here. The versioning schema uses [semantic versioning](http://semver.org) where the major version number indicates a breaking change and the minor version an additive, non-breaking change. Both version numbers are signals to users what to expect from different versions, and should be carefully chosen based on the product plan. The major version is also reflected in the package name of the interface, which must end in `v`, as in `google.feature.v1`. For major versions 0 and 1, the suffix can be omitted. Zero major versions must only be used for experimental, non-GA interfaces. "
                        },
                        "sourceContext": {
                          "id": "SourceContext",
                          "type": "object",
                          "properties": {
                            "fileName": {
                              "type": "string",
                              "description": "The path-qualified name of the .proto file that contained the associated protobuf element. For example: `\"google/protobuf/source_context.proto\"`."
                            }
                          },
                          "description": "Source context for the protocol buffer service represented by this message."
                        }
                      },
                      "description": "Api is a light-weight descriptor for an API Interface. Interfaces are also described as \"protocol buffer services\" in some contexts, such as by the \"service\" keyword in a .proto file, but they are different from API Services, which represent a concrete implementation of an interface as opposed to simply a description of methods and bindings. They are also sometimes simply referred to as \"APIs\" in other contexts, such as the name of this message itself. See https://cloud.google.com/apis/design/glossary for detailed terminology."
                    },
                    "description": "A list of API interfaces exported by this service. Only the `name` field of the google.protobuf.Api needs to be provided by the configuration author, as the remaining fields will be derived from the IDL during the normalization process. It is an error to specify an API interface here which cannot be resolved against the associated IDL files."
                  },
                  "http": {
                    "id": "Http",
                    "type": "object",
                    "properties": {
                      "rules": {
                        "type": "array",
                        "items": {
                          "id": "HttpRule",
                          "type": "object",
                          "properties": {
                            "get": {
                              "type": "string",
                              "description": "Maps to HTTP GET. Used for listing and getting information about resources."
                            },
                            "put": {
                              "type": "string",
                              "description": "Maps to HTTP PUT. Used for replacing a resource."
                            },
                            "body": {
                              "type": "string",
                              "description": "The name of the request field whose value is mapped to the HTTP request body, or `*` for mapping all request fields not captured by the path pattern to the HTTP body, or omitted for not having any HTTP request body. NOTE: the referred field must be present at the top-level of the request message type."
                            },
                            "post": {
                              "type": "string",
                              "description": "Maps to HTTP POST. Used for creating a resource or performing an action."
                            },
                            "patch": {
                              "type": "string",
                              "description": "Maps to HTTP PATCH. Used for updating a resource."
                            },
                            "custom": {
                              "id": "CustomHttpPattern",
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "description": "The name of this custom HTTP verb."
                                },
                                "path": {
                                  "type": "string",
                                  "description": "The path matched by this custom verb."
                                }
                              },
                              "description": "The custom pattern is used for specifying an HTTP method that is not included in the `pattern` field, such as HEAD, or \"*\" to leave the HTTP method unspecified for this rule. The wild-card rule is useful for services that provide content to Web (HTML) clients."
                            },
                            "delete": {
                              "type": "string",
                              "description": "Maps to HTTP DELETE. Used for deleting a resource."
                            },
                            "selector": {
                              "type": "string",
                              "description": "Selects a method to which this rule applies. Refer to selector for syntax details."
                            },
                            "responseBody": {
                              "type": "string",
                              "description": "Optional. The name of the response field whose value is mapped to the HTTP response body. When omitted, the entire response message will be used as the HTTP response body. NOTE: The referred field must be present at the top-level of the response message type."
                            },
                            "additionalBindings": {
                              "type": "array",
                              "items": {},
                              "description": "Additional HTTP bindings for the selector. Nested bindings must not contain an `additional_bindings` field themselves (that is, the nesting may only be one level deep)."
                            }
                          },
                          "description": "# gRPC Transcoding gRPC Transcoding is a feature for mapping between a gRPC method and one or more HTTP REST endpoints. It allows developers to build a single API service that supports both gRPC APIs and REST APIs. Many systems, including [Google APIs](https://github.com/googleapis/googleapis), [Cloud Endpoints](https://cloud.google.com/endpoints), [gRPC Gateway](https://github.com/grpc-ecosystem/grpc-gateway), and [Envoy](https://github.com/envoyproxy/envoy) proxy support this feature and use it for large scale production services. `HttpRule` defines the schema of the gRPC/REST mapping. The mapping specifies how different portions of the gRPC request message are mapped to the URL path, URL query parameters, and HTTP request body. It also controls how the gRPC response message is mapped to the HTTP response body. `HttpRule` is typically specified as an `google.api.http` annotation on the gRPC method. Each mapping specifies a URL path template and an HTTP method. The path template may refer to one or more fields in the gRPC request message, as long as each field is a non-repeated field with a primitive (non-message) type. The path template controls how fields of the request message are mapped to the URL path. Example: service Messaging { rpc GetMessage(GetMessageRequest) returns (Message) { option (google.api.http) = { get: \"/v1/{name=messages/*}\" }; } } message GetMessageRequest { string name = 1; // Mapped to URL path. } message Message { string text = 1; // The resource content. } This enables an HTTP REST to gRPC mapping as below: HTTP | gRPC -----|----- `GET /v1/messages/123456` | `GetMessage(name: \"messages/123456\")` Any fields in the request message which are not bound by the path template automatically become HTTP query parameters if there is no HTTP request body. For example: service Messaging { rpc GetMessage(GetMessageRequest) returns (Message) { option (google.api.http) = { get:\"/v1/messages/{message_id}\" }; } } message GetMessageRequest { message SubMessage { string subfield = 1; } string message_id = 1; // Mapped to URL path. int64 revision = 2; // Mapped to URL query parameter `revision`. SubMessage sub = 3; // Mapped to URL query parameter `sub.subfield`. } This enables a HTTP JSON to RPC mapping as below: HTTP | gRPC -----|----- `GET /v1/messages/123456?revision=2&sub.subfield=foo` | `GetMessage(message_id: \"123456\" revision: 2 sub: SubMessage(subfield: \"foo\"))` Note that fields which are mapped to URL query parameters must have a primitive type or a repeated primitive type or a non-repeated message type. In the case of a repeated type, the parameter can be repeated in the URL as `...?param=A&param=B`. In the case of a message type, each field of the message is mapped to a separate parameter, such as `...?foo.a=A&foo.b=B&foo.c=C`. For HTTP methods that allow a request body, the `body` field specifies the mapping. Consider a REST update method on the message resource collection: service Messaging { rpc UpdateMessage(UpdateMessageRequest) returns (Message) { option (google.api.http) = { patch: \"/v1/messages/{message_id}\" body: \"message\" }; } } message UpdateMessageRequest { string message_id = 1; // mapped to the URL Message message = 2; // mapped to the body } The following HTTP JSON to RPC mapping is enabled, where the representation of the JSON in the request body is determined by protos JSON encoding: HTTP | gRPC -----|----- `PATCH /v1/messages/123456 { \"text\": \"Hi!\" }` | `UpdateMessage(message_id: \"123456\" message { text: \"Hi!\" })` The special name `*` can be used in the body mapping to define that every field not bound by the path template should be mapped to the request body. This enables the following alternative definition of the update method: service Messaging { rpc UpdateMessage(Message) returns (Message) { option (google.api.http) = { patch: \"/v1/messages/{message_id}\" body: \"*\" }; } } message Message { string message_id = 1; string text = 2; } The following HTTP JSON to RPC mapping is enabled: HTTP | gRPC -----|----- `PATCH /v1/messages/123456 { \"text\": \"Hi!\" }` | `UpdateMessage(message_id: \"123456\" text: \"Hi!\")` Note that when using `*` in the body mapping, it is not possible to have HTTP parameters, as all fields not bound by the path end in the body. This makes this option more rarely used in practice when defining REST APIs. The common usage of `*` is in custom methods which don't use the URL at all for transferring data. It is possible to define multiple HTTP methods for one RPC by using the `additional_bindings` option. Example: service Messaging { rpc GetMessage(GetMessageRequest) returns (Message) { option (google.api.http) = { get: \"/v1/messages/{message_id}\" additional_bindings { get: \"/v1/users/{user_id}/messages/{message_id}\" } }; } } message GetMessageRequest { string message_id = 1; string user_id = 2; } This enables the following two alternative HTTP JSON to RPC mappings: HTTP | gRPC -----|----- `GET /v1/messages/123456` | `GetMessage(message_id: \"123456\")` `GET /v1/users/me/messages/123456` | `GetMessage(user_id: \"me\" message_id: \"123456\")` ## Rules for HTTP mapping 1. Leaf request fields (recursive expansion nested messages in the request message) are classified into three categories: - Fields referred by the path template. They are passed via the URL path. - Fields referred by the HttpRule.body. They are passed via the HTTP request body. - All other fields are passed via the URL query parameters, and the parameter name is the field path in the request message. A repeated field can be represented as multiple query parameters under the same name. 2. If HttpRule.body is \"*\", there is no URL query parameter, all fields are passed via URL path and HTTP request body. 3. If HttpRule.body is omitted, there is no HTTP request body, all fields are passed via URL path and URL query parameters. ### Path template syntax Template = \"/\" Segments [ Verb ] ; Segments = Segment { \"/\" Segment } ; Segment = \"*\" | \"**\" | LITERAL | Variable ; Variable = \"{\" FieldPath [ \"=\" Segments ] \"}\" ; FieldPath = IDENT { \".\" IDENT } ; Verb = \":\" LITERAL ; The syntax `*` matches a single URL path segment. The syntax `**` matches zero or more URL path segments, which must be the last part of the URL path except the `Verb`. The syntax `Variable` matches part of the URL path as specified by its template. A variable template must not contain other variables. If a variable matches a single path segment, its template may be omitted, e.g. `{var}` is equivalent to `{var=*}`. The syntax `LITERAL` matches literal text in the URL path. If the `LITERAL` contains any reserved character, such characters should be percent-encoded before the matching. If a variable contains exactly one path segment, such as `\"{var}\"` or `\"{var=*}\"`, when such a variable is expanded into a URL path on the client side, all characters except `[-_.~0-9a-zA-Z]` are percent-encoded. The server side does the reverse decoding. Such variables show up in the [Discovery Document](https://developers.google.com/discovery/v1/reference/apis) as `{var}`. If a variable contains multiple path segments, such as `\"{var=foo/*}\"` or `\"{var=**}\"`, when such a variable is expanded into a URL path on the client side, all characters except `[-_.~/0-9a-zA-Z]` are percent-encoded. The server side does the reverse decoding, except \"%2F\" and \"%2f\" are left unchanged. Such variables show up in the [Discovery Document](https://developers.google.com/discovery/v1/reference/apis) as `{+var}`. ## Using gRPC API Service Configuration gRPC API Service Configuration (service config) is a configuration language for configuring a gRPC service to become a user-facing product. The service config is simply the YAML representation of the `google.api.Service` proto message. As an alternative to annotating your proto file, you can configure gRPC transcoding in your service config YAML files. You do this by specifying a `HttpRule` that maps the gRPC method to a REST endpoint, achieving the same effect as the proto annotation. This can be particularly useful if you have a proto that is reused in multiple services. Note that any transcoding specified in the service config will override any matching transcoding configuration in the proto. Example: http: rules: # Selects a gRPC method and applies HttpRule to it. - selector: example.v1.Messaging.GetMessage get: /v1/messages/{message_id}/{sub.subfield} ## Special notes When gRPC Transcoding is used to map a gRPC to JSON REST endpoints, the proto to JSON conversion must follow the [proto3 specification](https://developers.google.com/protocol-buffers/docs/proto3#json). While the single segment variable follows the semantics of [RFC 6570](https://tools.ietf.org/html/rfc6570) Section 3.2.2 Simple String Expansion, the multi segment variable **does not** follow RFC 6570 Section 3.2.3 Reserved Expansion. The reason is that the Reserved Expansion does not expand special characters like `?` and `#`, which would lead to invalid URLs. As the result, gRPC Transcoding uses a custom encoding for multi segment variables. The path variables **must not** refer to any repeated or mapped field, because client libraries are not capable of handling such variable expansion. The path variables **must not** capture the leading \"/\" character. The reason is that the most common use case \"{var}\" does not capture the leading \"/\" character. For consistency, all path variables must share the same behavior. Repeated message fields must not be mapped to URL query parameters, because no client library can support such complicated mapping. If an API needs to use a JSON array for request or response body, it can map the request or response body to a repeated field. However, some gRPC Transcoding implementations may not support this feature."
                        },
                        "description": "A list of HTTP configuration rules that apply to individual API methods. **NOTE:** All service configuration rules follow \"last one wins\" order."
                      },
                      "fullyDecodeReservedExpansion": {
                        "type": "boolean",
                        "description": "When set to true, URL path parameters will be fully URI-decoded except in cases of single segment matches in reserved expansion, where \"%2F\" will be left encoded. The default behavior is to not decode RFC 6570 reserved characters in multi segment matches."
                      }
                    },
                    "description": "HTTP configuration."
                  },
                  "logs": {
                    "type": "array",
                    "items": {
                      "id": "LogDescriptor",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the log. It must be less than 512 characters long and can include the following characters: upper- and lower-case alphanumeric characters [A-Za-z0-9], and punctuation characters including slash, underscore, hyphen, period [/_-.]."
                        },
                        "labels": {
                          "type": "array",
                          "items": {
                            "id": "LabelDescriptor",
                            "type": "object",
                            "properties": {
                              "key": {
                                "type": "string",
                                "description": "The label key."
                              },
                              "valueType": {
                                "enum": [
                                  "STRING",
                                  "BOOL",
                                  "INT64"
                                ],
                                "type": "string",
                                "description": "The type of data that can be assigned to the label.",
                                "enumDescriptions": [
                                  "A variable-length string. This is the default.",
                                  "Boolean; true or false.",
                                  "A 64-bit signed integer."
                                ]
                              },
                              "description": {
                                "type": "string",
                                "description": "A human-readable description for the label."
                              }
                            },
                            "description": "A description of a label."
                          },
                          "description": "The set of labels that are available to describe a specific log entry. Runtime requests that contain labels not specified here are considered invalid."
                        },
                        "description": {
                          "type": "string",
                          "description": "A human-readable description of this log. This information appears in the documentation and can contain details."
                        },
                        "displayName": {
                          "type": "string",
                          "description": "The human-readable name for this log. This information appears on the user interface and should be concise."
                        }
                      },
                      "description": "A description of a log type. Example in YAML format: - name: library.googleapis.com/activity_history description: The history of borrowing and returning library items. display_name: Activity labels: - key: /customer_id description: Identifier of a library customer"
                    },
                    "description": "Defines the logs used by this service."
                  },
                  "name": {
                    "type": "string",
                    "description": "The service name, which is a DNS-like logical identifier for the service, such as `calendar.googleapis.com`. The service name typically goes through DNS verification to make sure the owner of the service also owns the DNS name."
                  },
                  "enums": {
                    "type": "array",
                    "items": {
                      "id": "Enum",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Enum type name."
                        },
                        "syntax": {
                          "enum": [
                            "SYNTAX_PROTO2",
                            "SYNTAX_PROTO3"
                          ],
                          "type": "string",
                          "description": "The source syntax.",
                          "enumDescriptions": [
                            "Syntax `proto2`.",
                            "Syntax `proto3`."
                          ]
                        },
                        "options": {
                          "type": "array",
                          "items": {
                            "id": "Option",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The option's name. For protobuf built-in options (options defined in descriptor.proto), this is the short name. For example, `\"map_entry\"`. For custom options, it should be the fully-qualified name. For example, `\"google.api.http\"`."
                              },
                              "value": {
                                "type": "object",
                                "description": "The option's value packed in an Any message. If the value is a primitive, the corresponding wrapper type defined in google/protobuf/wrappers.proto should be used. If the value is an enum, it should be stored as an int32 value using the google.protobuf.Int32Value type.",
                                "additionalProperties": {
                                  "type": "any",
                                  "description": "Properties of the object. Contains field @type with type URL."
                                }
                              }
                            },
                            "description": "A protocol buffer option, which can be attached to a message, field, enumeration, etc."
                          },
                          "description": "Protocol buffer options."
                        },
                        "enumvalue": {
                          "type": "array",
                          "items": {
                            "id": "EnumValue",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Enum value name."
                              },
                              "number": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Enum value number."
                              },
                              "options": {
                                "type": "array",
                                "items": {
                                  "id": "Option",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The option's name. For protobuf built-in options (options defined in descriptor.proto), this is the short name. For example, `\"map_entry\"`. For custom options, it should be the fully-qualified name. For example, `\"google.api.http\"`."
                                    },
                                    "value": {
                                      "type": "object",
                                      "description": "The option's value packed in an Any message. If the value is a primitive, the corresponding wrapper type defined in google/protobuf/wrappers.proto should be used. If the value is an enum, it should be stored as an int32 value using the google.protobuf.Int32Value type.",
                                      "additionalProperties": {
                                        "type": "any",
                                        "description": "Properties of the object. Contains field @type with type URL."
                                      }
                                    }
                                  },
                                  "description": "A protocol buffer option, which can be attached to a message, field, enumeration, etc."
                                },
                                "description": "Protocol buffer options."
                              }
                            },
                            "description": "Enum value definition."
                          },
                          "description": "Enum value definitions."
                        },
                        "sourceContext": {
                          "id": "SourceContext",
                          "type": "object",
                          "properties": {
                            "fileName": {
                              "type": "string",
                              "description": "The path-qualified name of the .proto file that contained the associated protobuf element. For example: `\"google/protobuf/source_context.proto\"`."
                            }
                          },
                          "description": "The source context."
                        }
                      },
                      "description": "Enum type definition."
                    },
                    "description": "A list of all enum types included in this API service. Enums referenced directly or indirectly by the `apis` are automatically included. Enums which are not referenced but shall be included should be listed here by name. Example: enums: - name: google.someapi.v1.SomeEnum"
                  },
                  "quota": {
                    "id": "Quota",
                    "type": "object",
                    "properties": {
                      "limits": {
                        "type": "array",
                        "items": {
                          "id": "QuotaLimit",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the quota limit. The name must be provided, and it must be unique within the service. The name can only include alphanumeric characters as well as '-'. The maximum length of the limit name is 64 characters."
                            },
                            "unit": {
                              "type": "string",
                              "description": "Specify the unit of the quota limit. It uses the same syntax as Metric.unit. The supported unit kinds are determined by the quota backend system. Here are some examples: * \"1/min/{project}\" for quota per minute per project. Note: the order of unit components is insignificant. The \"1\" at the beginning is required to follow the metric unit syntax."
                            },
                            "metric": {
                              "type": "string",
                              "description": "The name of the metric this quota limit applies to. The quota limits with the same metric will be checked together during runtime. The metric must be defined within the service config."
                            },
                            "values": {
                              "type": "object",
                              "description": "Tiered limit values. You must specify this as a key:value pair, with an integer value that is the maximum number of requests allowed for the specified unit. Currently only STANDARD is supported.",
                              "additionalProperties": {
                                "type": "string",
                                "format": "int64"
                              }
                            },
                            "duration": {
                              "type": "string",
                              "description": "Duration of this limit in textual notation. Must be \"100s\" or \"1d\". Used by group-based quotas only."
                            },
                            "freeTier": {
                              "type": "string",
                              "format": "int64",
                              "description": "Free tier value displayed in the Developers Console for this limit. The free tier is the number of tokens that will be subtracted from the billed amount when billing is enabled. This field can only be set on a limit with duration \"1d\", in a billable group; it is invalid on any other limit. If this field is not set, it defaults to 0, indicating that there is no free tier for this service. Used by group-based quotas only."
                            },
                            "maxLimit": {
                              "type": "string",
                              "format": "int64",
                              "description": "Maximum number of tokens that can be consumed during the specified duration. Client application developers can override the default limit up to this maximum. If specified, this value cannot be set to a value less than the default limit. If not specified, it is set to the default limit. To allow clients to apply overrides with no upper bound, set this to -1, indicating unlimited maximum quota. Used by group-based quotas only."
                            },
                            "description": {
                              "type": "string",
                              "description": "Optional. User-visible, extended description for this quota limit. Should be used only when more context is needed to understand this limit than provided by the limit's display name (see: `display_name`)."
                            },
                            "displayName": {
                              "type": "string",
                              "description": "User-visible display name for this limit. Optional. If not set, the UI will provide a default display name based on the quota configuration. This field can be used to override the default display name generated from the configuration."
                            },
                            "defaultLimit": {
                              "type": "string",
                              "format": "int64",
                              "description": "Default number of tokens that can be consumed during the specified duration. This is the number of tokens assigned when a client application developer activates the service for his/her project. Specifying a value of 0 will block all requests. This can be used if you are provisioning quota to selected consumers and blocking others. Similarly, a value of -1 will indicate an unlimited quota. No other negative values are allowed. Used by group-based quotas only."
                            }
                          },
                          "description": "`QuotaLimit` defines a specific limit that applies over a specified duration for a limit type. There can be at most one limit for a duration and limit type combination defined within a `QuotaGroup`."
                        },
                        "description": "List of `QuotaLimit` definitions for the service."
                      },
                      "metricRules": {
                        "type": "array",
                        "items": {
                          "id": "MetricRule",
                          "type": "object",
                          "properties": {
                            "selector": {
                              "type": "string",
                              "description": "Selects the methods to which this rule applies. Refer to selector for syntax details."
                            },
                            "metricCosts": {
                              "type": "object",
                              "description": "Metrics to update when the selected methods are called, and the associated cost applied to each metric. The key of the map is the metric name, and the values are the amount increased for the metric against which the quota limits are defined. The value must not be negative.",
                              "additionalProperties": {
                                "type": "string",
                                "format": "int64"
                              }
                            }
                          },
                          "description": "Bind API methods to metrics. Binding a method to a metric causes that metric's configured quota behaviors to apply to the method call."
                        },
                        "description": "List of `MetricRule` definitions, each one mapping a selected method to one or more metrics."
                      }
                    },
                    "description": "Quota configuration."
                  },
                  "title": {
                    "type": "string",
                    "description": "The product title for this service."
                  },
                  "types": {
                    "type": "array",
                    "items": {
                      "id": "Type",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The fully qualified message name."
                        },
                        "fields": {
                          "type": "array",
                          "items": {
                            "id": "Field",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "enum": [
                                  "TYPE_UNKNOWN",
                                  "TYPE_DOUBLE",
                                  "TYPE_FLOAT",
                                  "TYPE_INT64",
                                  "TYPE_UINT64",
                                  "TYPE_INT32",
                                  "TYPE_FIXED64",
                                  "TYPE_FIXED32",
                                  "TYPE_BOOL",
                                  "TYPE_STRING",
                                  "TYPE_GROUP",
                                  "TYPE_MESSAGE",
                                  "TYPE_BYTES",
                                  "TYPE_UINT32",
                                  "TYPE_ENUM",
                                  "TYPE_SFIXED32",
                                  "TYPE_SFIXED64",
                                  "TYPE_SINT32",
                                  "TYPE_SINT64"
                                ],
                                "type": "string",
                                "description": "The field type.",
                                "enumDescriptions": [
                                  "Field type unknown.",
                                  "Field type double.",
                                  "Field type float.",
                                  "Field type int64.",
                                  "Field type uint64.",
                                  "Field type int32.",
                                  "Field type fixed64.",
                                  "Field type fixed32.",
                                  "Field type bool.",
                                  "Field type string.",
                                  "Field type group. Proto2 syntax only, and deprecated.",
                                  "Field type message.",
                                  "Field type bytes.",
                                  "Field type uint32.",
                                  "Field type enum.",
                                  "Field type sfixed32.",
                                  "Field type sfixed64.",
                                  "Field type sint32.",
                                  "Field type sint64."
                                ]
                              },
                              "name": {
                                "type": "string",
                                "description": "The field name."
                              },
                              "number": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The field number."
                              },
                              "packed": {
                                "type": "boolean",
                                "description": "Whether to use alternative packed wire representation."
                              },
                              "options": {
                                "type": "array",
                                "items": {
                                  "id": "Option",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The option's name. For protobuf built-in options (options defined in descriptor.proto), this is the short name. For example, `\"map_entry\"`. For custom options, it should be the fully-qualified name. For example, `\"google.api.http\"`."
                                    },
                                    "value": {
                                      "type": "object",
                                      "description": "The option's value packed in an Any message. If the value is a primitive, the corresponding wrapper type defined in google/protobuf/wrappers.proto should be used. If the value is an enum, it should be stored as an int32 value using the google.protobuf.Int32Value type.",
                                      "additionalProperties": {
                                        "type": "any",
                                        "description": "Properties of the object. Contains field @type with type URL."
                                      }
                                    }
                                  },
                                  "description": "A protocol buffer option, which can be attached to a message, field, enumeration, etc."
                                },
                                "description": "The protocol buffer options."
                              },
                              "typeUrl": {
                                "type": "string",
                                "description": "The field type URL, without the scheme, for message or enumeration types. Example: `\"type.googleapis.com/google.protobuf.Timestamp\"`."
                              },
                              "jsonName": {
                                "type": "string",
                                "description": "The field JSON name."
                              },
                              "oneofIndex": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The index of the field type in `Type.oneofs`, for message or enumeration types. The first type has index 1; zero means the type is not in the list."
                              },
                              "cardinality": {
                                "enum": [
                                  "CARDINALITY_UNKNOWN",
                                  "CARDINALITY_OPTIONAL",
                                  "CARDINALITY_REQUIRED",
                                  "CARDINALITY_REPEATED"
                                ],
                                "type": "string",
                                "description": "The field cardinality.",
                                "enumDescriptions": [
                                  "For fields with unknown cardinality.",
                                  "For optional fields.",
                                  "For required fields. Proto2 syntax only.",
                                  "For repeated fields."
                                ]
                              },
                              "defaultValue": {
                                "type": "string",
                                "description": "The string value of the default value of this field. Proto2 syntax only."
                              }
                            },
                            "description": "A single field of a message type."
                          },
                          "description": "The list of fields."
                        },
                        "oneofs": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The list of types appearing in `oneof` definitions in this type."
                        },
                        "syntax": {
                          "enum": [
                            "SYNTAX_PROTO2",
                            "SYNTAX_PROTO3"
                          ],
                          "type": "string",
                          "description": "The source syntax.",
                          "enumDescriptions": [
                            "Syntax `proto2`.",
                            "Syntax `proto3`."
                          ]
                        },
                        "options": {
                          "type": "array",
                          "items": {
                            "id": "Option",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The option's name. For protobuf built-in options (options defined in descriptor.proto), this is the short name. For example, `\"map_entry\"`. For custom options, it should be the fully-qualified name. For example, `\"google.api.http\"`."
                              },
                              "value": {
                                "type": "object",
                                "description": "The option's value packed in an Any message. If the value is a primitive, the corresponding wrapper type defined in google/protobuf/wrappers.proto should be used. If the value is an enum, it should be stored as an int32 value using the google.protobuf.Int32Value type.",
                                "additionalProperties": {
                                  "type": "any",
                                  "description": "Properties of the object. Contains field @type with type URL."
                                }
                              }
                            },
                            "description": "A protocol buffer option, which can be attached to a message, field, enumeration, etc."
                          },
                          "description": "The protocol buffer options."
                        },
                        "sourceContext": {
                          "id": "SourceContext",
                          "type": "object",
                          "properties": {
                            "fileName": {
                              "type": "string",
                              "description": "The path-qualified name of the .proto file that contained the associated protobuf element. For example: `\"google/protobuf/source_context.proto\"`."
                            }
                          },
                          "description": "The source context."
                        }
                      },
                      "description": "A protocol buffer message type."
                    },
                    "description": "A list of all proto message types included in this API service. Types referenced directly or indirectly by the `apis` are automatically included. Messages which are not referenced but shall be included, such as types used by the `google.protobuf.Any` type, should be listed here by name. Example: types: - name: google.protobuf.Int32"
                  },
                  "usage": {
                    "id": "Usage",
                    "type": "object",
                    "properties": {
                      "rules": {
                        "type": "array",
                        "items": {
                          "id": "UsageRule",
                          "type": "object",
                          "properties": {
                            "selector": {
                              "type": "string",
                              "description": "Selects the methods to which this rule applies. Use '*' to indicate all methods in all APIs. Refer to selector for syntax details."
                            },
                            "skipServiceControl": {
                              "type": "boolean",
                              "description": "If true, the selected method should skip service control and the control plane features, such as quota and billing, will not be available. This flag is used by Google Cloud Endpoints to bypass checks for internal methods, such as service health check methods."
                            },
                            "allowUnregisteredCalls": {
                              "type": "boolean",
                              "description": "If true, the selected method allows unregistered calls, e.g. calls that don't identify any user or application."
                            }
                          },
                          "description": "Usage configuration rules for the service. NOTE: Under development. Use this rule to configure unregistered calls for the service. Unregistered calls are calls that do not contain consumer project identity. (Example: calls that do not contain an API key). By default, API methods do not allow unregistered calls, and each method call must be identified by a consumer project identity. Use this rule to allow/disallow unregistered calls. Example of an API that wants to allow unregistered calls for entire service. usage: rules: - selector: \"*\" allow_unregistered_calls: true Example of a method that wants to allow unregistered calls. usage: rules: - selector: \"google.example.library.v1.LibraryService.CreateBook\" allow_unregistered_calls: true"
                        },
                        "description": "A list of usage rules that apply to individual API methods. **NOTE:** All service configuration rules follow \"last one wins\" order."
                      },
                      "requirements": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Requirements that must be satisfied before a consumer project can use the service. Each requirement is of the form /; for example 'serviceusage.googleapis.com/billing-enabled'. For Google APIs, a Terms of Service requirement must be included here. Google Cloud APIs must include \"serviceusage.googleapis.com/tos/cloud\". Other Google APIs should include \"serviceusage.googleapis.com/tos/universal\". Additional ToS can be included based on the business needs."
                      },
                      "producerNotificationChannel": {
                        "type": "string",
                        "description": "The full resource name of a channel used for sending notifications to the service producer. Google Service Management currently only supports [Google Cloud Pub/Sub](https://cloud.google.com/pubsub) as a notification channel. To use Google Cloud Pub/Sub as the channel, this must be the name of a Cloud Pub/Sub topic that uses the Cloud Pub/Sub topic name format documented in https://cloud.google.com/pubsub/docs/overview."
                      }
                    },
                    "description": "Configuration controlling usage of this service."
                  },
                  "backend": {
                    "id": "Backend",
                    "type": "object",
                    "properties": {
                      "rules": {
                        "type": "array",
                        "items": {
                          "id": "BackendRule",
                          "type": "object",
                          "properties": {
                            "address": {
                              "type": "string",
                              "description": "The address of the API backend. The scheme is used to determine the backend protocol and security. The following schemes are accepted: SCHEME PROTOCOL SECURITY http:// HTTP None https:// HTTP TLS grpc:// gRPC None grpcs:// gRPC TLS It is recommended to explicitly include a scheme. Leaving out the scheme may cause constrasting behaviors across platforms. If the port is unspecified, the default is: - 80 for schemes without TLS - 443 for schemes with TLS For HTTP backends, use protocol to specify the protocol version."
                            },
                            "deadline": {
                              "type": "number",
                              "format": "double",
                              "description": "The number of seconds to wait for a response from a request. The default varies based on the request protocol and deployment environment."
                            },
                            "protocol": {
                              "type": "string",
                              "description": "The protocol used for sending a request to the backend. The supported values are \"http/1.1\" and \"h2\". The default value is inferred from the scheme in the address field: SCHEME PROTOCOL http:// http/1.1 https:// http/1.1 grpc:// h2 grpcs:// h2 For secure HTTP backends (https://) that support HTTP/2, set this field to \"h2\" for improved performance. Configuring this field to non-default values is only supported for secure HTTP backends. This field will be ignored for all other backends. See https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids for more details on the supported values."
                            },
                            "selector": {
                              "type": "string",
                              "description": "Selects the methods to which this rule applies. Refer to selector for syntax details."
                            },
                            "disableAuth": {
                              "type": "boolean",
                              "description": "When disable_auth is true, a JWT ID token won't be generated and the original \"Authorization\" HTTP header will be preserved. If the header is used to carry the original token and is expected by the backend, this field must be set to true to preserve the header."
                            },
                            "jwtAudience": {
                              "type": "string",
                              "description": "The JWT audience is used when generating a JWT ID token for the backend. This ID token will be added in the HTTP \"authorization\" header, and sent to the backend."
                            },
                            "pathTranslation": {
                              "enum": [
                                "PATH_TRANSLATION_UNSPECIFIED",
                                "CONSTANT_ADDRESS",
                                "APPEND_PATH_TO_ADDRESS"
                              ],
                              "type": "string",
                              "enumDescriptions": [
                                "",
                                "Use the backend address as-is, with no modification to the path. If the URL pattern contains variables, the variable names and values will be appended to the query string. If a query string parameter and a URL pattern variable have the same name, this may result in duplicate keys in the query string. # Examples Given the following operation config: Method path: /api/company/{cid}/user/{uid} Backend address: https://example.cloudfunctions.net/getUser Requests to the following request paths will call the backend at the translated path: Request path: /api/company/widgetworks/user/johndoe Translated: https://example.cloudfunctions.net/getUser?cid=widgetworks&uid=johndoe Request path: /api/company/widgetworks/user/johndoe?timezone=EST Translated: https://example.cloudfunctions.net/getUser?timezone=EST&cid=widgetworks&uid=johndoe",
                                "The request path will be appended to the backend address. # Examples Given the following operation config: Method path: /api/company/{cid}/user/{uid} Backend address: https://example.appspot.com Requests to the following request paths will call the backend at the translated path: Request path: /api/company/widgetworks/user/johndoe Translated: https://example.appspot.com/api/company/widgetworks/user/johndoe Request path: /api/company/widgetworks/user/johndoe?timezone=EST Translated: https://example.appspot.com/api/company/widgetworks/user/johndoe?timezone=EST"
                              ]
                            },
                            "operationDeadline": {
                              "type": "number",
                              "format": "double",
                              "description": "The number of seconds to wait for the completion of a long running operation. The default is no deadline."
                            }
                          },
                          "description": "A backend rule provides configuration for an individual API element."
                        },
                        "description": "A list of API backend rules that apply to individual API methods. **NOTE:** All service configuration rules follow \"last one wins\" order."
                      }
                    },
                    "description": "API backend configuration."
                  },
                  "billing": {
                    "id": "Billing",
                    "type": "object",
                    "properties": {
                      "consumerDestinations": {
                        "type": "array",
                        "items": {
                          "id": "BillingDestination",
                          "type": "object",
                          "properties": {
                            "metrics": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Names of the metrics to report to this billing destination. Each name must be defined in Service.metrics section."
                            },
                            "monitoredResource": {
                              "type": "string",
                              "description": "The monitored resource type. The type must be defined in Service.monitored_resources section."
                            }
                          },
                          "description": "Configuration of a specific billing destination (Currently only support bill against consumer project)."
                        },
                        "description": "Billing configurations for sending metrics to the consumer project. There can be multiple consumer destinations per service, each one must have a different monitored resource type. A metric can be used in at most one consumer destination."
                      }
                    },
                    "description": "Billing configuration."
                  },
                  "context": {
                    "id": "Context",
                    "type": "object",
                    "properties": {
                      "rules": {
                        "type": "array",
                        "items": {
                          "id": "ContextRule",
                          "type": "object",
                          "properties": {
                            "provided": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "A list of full type names of provided contexts."
                            },
                            "selector": {
                              "type": "string",
                              "description": "Selects the methods to which this rule applies. Refer to selector for syntax details."
                            },
                            "requested": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "A list of full type names of requested contexts."
                            },
                            "allowedRequestExtensions": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "A list of full type names or extension IDs of extensions allowed in grpc side channel from client to backend."
                            },
                            "allowedResponseExtensions": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "A list of full type names or extension IDs of extensions allowed in grpc side channel from backend to client."
                            }
                          },
                          "description": "A context rule provides information about the context for an individual API element."
                        },
                        "description": "A list of RPC context rules that apply to individual API methods. **NOTE:** All service configuration rules follow \"last one wins\" order."
                      }
                    },
                    "description": "Context configuration."
                  },
                  "control": {
                    "id": "Control",
                    "type": "object",
                    "properties": {
                      "environment": {
                        "type": "string",
                        "description": "The service control environment to use. If empty, no control plane feature (like quota and billing) will be enabled."
                      }
                    },
                    "description": "Configuration for the service control plane."
                  },
                  "logging": {
                    "id": "Logging",
                    "type": "object",
                    "properties": {
                      "consumerDestinations": {
                        "type": "array",
                        "items": {
                          "id": "LoggingDestination",
                          "type": "object",
                          "properties": {
                            "logs": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Names of the logs to be sent to this destination. Each name must be defined in the Service.logs section. If the log name is not a domain scoped name, it will be automatically prefixed with the service name followed by \"/\"."
                            },
                            "monitoredResource": {
                              "type": "string",
                              "description": "The monitored resource type. The type must be defined in the Service.monitored_resources section."
                            }
                          },
                          "description": "Configuration of a specific logging destination (the producer project or the consumer project)."
                        },
                        "description": "Logging configurations for sending logs to the consumer project. There can be multiple consumer destinations, each one must have a different monitored resource type. A log can be used in at most one consumer destination."
                      },
                      "producerDestinations": {
                        "type": "array",
                        "items": {
                          "id": "LoggingDestination",
                          "type": "object",
                          "properties": {
                            "logs": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Names of the logs to be sent to this destination. Each name must be defined in the Service.logs section. If the log name is not a domain scoped name, it will be automatically prefixed with the service name followed by \"/\"."
                            },
                            "monitoredResource": {
                              "type": "string",
                              "description": "The monitored resource type. The type must be defined in the Service.monitored_resources section."
                            }
                          },
                          "description": "Configuration of a specific logging destination (the producer project or the consumer project)."
                        },
                        "description": "Logging configurations for sending logs to the producer project. There can be multiple producer destinations, each one must have a different monitored resource type. A log can be used in at most one producer destination."
                      }
                    },
                    "description": "Logging configuration."
                  },
                  "metrics": {
                    "type": "array",
                    "items": {
                      "id": "MetricDescriptor",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The resource name of the metric descriptor."
                        },
                        "type": {
                          "type": "string",
                          "description": "The metric type, including its DNS name prefix. The type is not URL-encoded. All user-defined metric types have the DNS name `custom.googleapis.com` or `external.googleapis.com`. Metric types should use a natural hierarchical grouping. For example: \"custom.googleapis.com/invoice/paid/amount\" \"external.googleapis.com/prometheus/up\" \"appengine.googleapis.com/http/server/response_latencies\""
                        },
                        "unit": {
                          "type": "string",
                          "description": "The units in which the metric value is reported. It is only applicable if the `value_type` is `INT64`, `DOUBLE`, or `DISTRIBUTION`. The `unit` defines the representation of the stored metric values. Different systems might scale the values to be more easily displayed (so a value of `0.02kBy` _might_ be displayed as `20By`, and a value of `3523kBy` _might_ be displayed as `3.5MBy`). However, if the `unit` is `kBy`, then the value of the metric is always in thousands of bytes, no matter how it might be displayed. If you want a custom metric to record the exact number of CPU-seconds used by a job, you can create an `INT64 CUMULATIVE` metric whose `unit` is `s{CPU}` (or equivalently `1s{CPU}` or just `s`). If the job uses 12,005 CPU-seconds, then the value is written as `12005`. Alternatively, if you want a custom metric to record data in a more granular way, you can create a `DOUBLE CUMULATIVE` metric whose `unit` is `ks{CPU}`, and then write the value `12.005` (which is `12005/1000`), or use `Kis{CPU}` and write `11.723` (which is `12005/1024`). The supported units are a subset of [The Unified Code for Units of Measure](https://unitsofmeasure.org/ucum.html) standard: **Basic units (UNIT)** * `bit` bit * `By` byte * `s` second * `min` minute * `h` hour * `d` day * `1` dimensionless **Prefixes (PREFIX)** * `k` kilo (10^3) * `M` mega (10^6) * `G` giga (10^9) * `T` tera (10^12) * `P` peta (10^15) * `E` exa (10^18) * `Z` zetta (10^21) * `Y` yotta (10^24) * `m` milli (10^-3) * `u` micro (10^-6) * `n` nano (10^-9) * `p` pico (10^-12) * `f` femto (10^-15) * `a` atto (10^-18) * `z` zepto (10^-21) * `y` yocto (10^-24) * `Ki` kibi (2^10) * `Mi` mebi (2^20) * `Gi` gibi (2^30) * `Ti` tebi (2^40) * `Pi` pebi (2^50) **Grammar** The grammar also includes these connectors: * `/` division or ratio (as an infix operator). For examples, `kBy/{email}` or `MiBy/10ms` (although you should almost never have `/s` in a metric `unit`; rates should always be computed at query time from the underlying cumulative or delta value). * `.` multiplication or composition (as an infix operator). For examples, `GBy.d` or `k{watt}.h`. The grammar for a unit is as follows: Expression = Component { \".\" Component } { \"/\" Component } ; Component = ( [ PREFIX ] UNIT | \"%\" ) [ Annotation ] | Annotation | \"1\" ; Annotation = \"{\" NAME \"}\" ; Notes: * `Annotation` is just a comment if it follows a `UNIT`. If the annotation is used alone, then the unit is equivalent to `1`. For examples, `{request}/s == 1/s`, `By{transmitted}/s == By/s`. * `NAME` is a sequence of non-blank printable ASCII characters not containing `{` or `}`. * `1` represents a unitary [dimensionless unit](https://en.wikipedia.org/wiki/Dimensionless_quantity) of 1, such as in `1/s`. It is typically used when none of the basic units are appropriate. For example, \"new users per day\" can be represented as `1/d` or `{new-users}/d` (and a metric value `5` would mean \"5 new users). Alternatively, \"thousands of page views per day\" would be represented as `1000/d` or `k1/d` or `k{page_views}/d` (and a metric value of `5.3` would mean \"5300 page views per day\"). * `%` represents dimensionless value of 1/100, and annotates values giving a percentage (so the metric values are typically in the range of 0..100, and a metric value `3` means \"3 percent\"). * `10^2.%` indicates a metric contains a ratio, typically in the range 0..1, that will be multiplied by 100 and displayed as a percentage (so a metric value `0.03` means \"3 percent\")."
                        },
                        "labels": {
                          "type": "array",
                          "items": {
                            "id": "LabelDescriptor",
                            "type": "object",
                            "properties": {
                              "key": {
                                "type": "string",
                                "description": "The label key."
                              },
                              "valueType": {
                                "enum": [
                                  "STRING",
                                  "BOOL",
                                  "INT64"
                                ],
                                "type": "string",
                                "description": "The type of data that can be assigned to the label.",
                                "enumDescriptions": [
                                  "A variable-length string. This is the default.",
                                  "Boolean; true or false.",
                                  "A 64-bit signed integer."
                                ]
                              },
                              "description": {
                                "type": "string",
                                "description": "A human-readable description for the label."
                              }
                            },
                            "description": "A description of a label."
                          },
                          "description": "The set of labels that can be used to describe a specific instance of this metric type. For example, the `appengine.googleapis.com/http/server/response_latencies` metric type has a label for the HTTP response code, `response_code`, so you can look at latencies for successful responses or just for responses that failed."
                        },
                        "metadata": {
                          "id": "MetricDescriptorMetadata",
                          "type": "object",
                          "properties": {
                            "ingestDelay": {
                              "type": "string",
                              "format": "google-duration",
                              "description": "The delay of data points caused by ingestion. Data points older than this age are guaranteed to be ingested and available to be read, excluding data loss due to errors."
                            },
                            "launchStage": {
                              "enum": [
                                "LAUNCH_STAGE_UNSPECIFIED",
                                "UNIMPLEMENTED",
                                "PRELAUNCH",
                                "EARLY_ACCESS",
                                "ALPHA",
                                "BETA",
                                "GA",
                                "DEPRECATED"
                              ],
                              "type": "string",
                              "description": "Deprecated. Must use the MetricDescriptor.launch_stage instead.",
                              "enumDescriptions": [
                                "Do not use this default value.",
                                "The feature is not yet implemented. Users can not use it.",
                                "Prelaunch features are hidden from users and are only visible internally.",
                                "Early Access features are limited to a closed group of testers. To use these features, you must sign up in advance and sign a Trusted Tester agreement (which includes confidentiality provisions). These features may be unstable, changed in backward-incompatible ways, and are not guaranteed to be released.",
                                "Alpha is a limited availability test for releases before they are cleared for widespread use. By Alpha, all significant design issues are resolved and we are in the process of verifying functionality. Alpha customers need to apply for access, agree to applicable terms, and have their projects allowlisted. Alpha releases don’t have to be feature complete, no SLAs are provided, and there are no technical support obligations, but they will be far enough along that customers can actually use them in test environments or for limited-use tests -- just like they would in normal production cases.",
                                "Beta is the point at which we are ready to open a release for any customer to use. There are no SLA or technical support obligations in a Beta release. Products will be complete from a feature perspective, but may have some open outstanding issues. Beta releases are suitable for limited production use cases.",
                                "GA features are open to all developers and are considered stable and fully qualified for production use.",
                                "Deprecated features are scheduled to be shut down and removed. For more information, see the “Deprecation Policy” section of our [Terms of Service](https://cloud.google.com/terms/) and the [Google Cloud Platform Subject to the Deprecation Policy](https://cloud.google.com/terms/deprecation) documentation."
                              ]
                            },
                            "samplePeriod": {
                              "type": "string",
                              "format": "google-duration",
                              "description": "The sampling period of metric data points. For metrics which are written periodically, consecutive data points are stored at this time interval, excluding data loss due to errors. Metrics with a higher granularity have a smaller sampling period."
                            }
                          },
                          "description": "Optional. Metadata which can be used to guide usage of the metric."
                        },
                        "valueType": {
                          "enum": [
                            "VALUE_TYPE_UNSPECIFIED",
                            "BOOL",
                            "INT64",
                            "DOUBLE",
                            "STRING",
                            "DISTRIBUTION",
                            "MONEY"
                          ],
                          "type": "string",
                          "description": "Whether the measurement is an integer, a floating-point number, etc. Some combinations of `metric_kind` and `value_type` might not be supported.",
                          "enumDescriptions": [
                            "Do not use this default value.",
                            "The value is a boolean. This value type can be used only if the metric kind is `GAUGE`.",
                            "The value is a signed 64-bit integer.",
                            "The value is a double precision floating point number.",
                            "The value is a text string. This value type can be used only if the metric kind is `GAUGE`.",
                            "The value is a `Distribution`.",
                            "The value is money."
                          ]
                        },
                        "metricKind": {
                          "enum": [
                            "METRIC_KIND_UNSPECIFIED",
                            "GAUGE",
                            "DELTA",
                            "CUMULATIVE"
                          ],
                          "type": "string",
                          "description": "Whether the metric records instantaneous values, changes to a value, etc. Some combinations of `metric_kind` and `value_type` might not be supported.",
                          "enumDescriptions": [
                            "Do not use this default value.",
                            "An instantaneous measurement of a value.",
                            "The change in a value during a time interval.",
                            "A value accumulated over a time interval. Cumulative measurements in a time series should have the same start time and increasing end times, until an event resets the cumulative value to zero and sets a new start time for the following points."
                          ]
                        },
                        "description": {
                          "type": "string",
                          "description": "A detailed description of the metric, which can be used in documentation."
                        },
                        "displayName": {
                          "type": "string",
                          "description": "A concise name for the metric, which can be displayed in user interfaces. Use sentence case without an ending period, for example \"Request count\". This field is optional but it is recommended to be set for any metrics associated with user-visible concepts, such as Quota."
                        },
                        "launchStage": {
                          "enum": [
                            "LAUNCH_STAGE_UNSPECIFIED",
                            "UNIMPLEMENTED",
                            "PRELAUNCH",
                            "EARLY_ACCESS",
                            "ALPHA",
                            "BETA",
                            "GA",
                            "DEPRECATED"
                          ],
                          "type": "string",
                          "description": "Optional. The launch stage of the metric definition.",
                          "enumDescriptions": [
                            "Do not use this default value.",
                            "The feature is not yet implemented. Users can not use it.",
                            "Prelaunch features are hidden from users and are only visible internally.",
                            "Early Access features are limited to a closed group of testers. To use these features, you must sign up in advance and sign a Trusted Tester agreement (which includes confidentiality provisions). These features may be unstable, changed in backward-incompatible ways, and are not guaranteed to be released.",
                            "Alpha is a limited availability test for releases before they are cleared for widespread use. By Alpha, all significant design issues are resolved and we are in the process of verifying functionality. Alpha customers need to apply for access, agree to applicable terms, and have their projects allowlisted. Alpha releases don’t have to be feature complete, no SLAs are provided, and there are no technical support obligations, but they will be far enough along that customers can actually use them in test environments or for limited-use tests -- just like they would in normal production cases.",
                            "Beta is the point at which we are ready to open a release for any customer to use. There are no SLA or technical support obligations in a Beta release. Products will be complete from a feature perspective, but may have some open outstanding issues. Beta releases are suitable for limited production use cases.",
                            "GA features are open to all developers and are considered stable and fully qualified for production use.",
                            "Deprecated features are scheduled to be shut down and removed. For more information, see the “Deprecation Policy” section of our [Terms of Service](https://cloud.google.com/terms/) and the [Google Cloud Platform Subject to the Deprecation Policy](https://cloud.google.com/terms/deprecation) documentation."
                          ]
                        },
                        "monitoredResourceTypes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Read-only. If present, then a time series, which is identified partially by a metric type and a MonitoredResourceDescriptor, that is associated with this metric type can only be associated with one of the monitored resource types listed here."
                        }
                      },
                      "description": "Defines a metric type and its schema. Once a metric descriptor is created, deleting or altering it stops data collection and makes the metric type's existing data unusable. "
                    },
                    "description": "Defines the metrics used by this service."
                  },
                  "endpoints": {
                    "type": "array",
                    "items": {
                      "id": "Endpoint",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The canonical name of this endpoint."
                        },
                        "target": {
                          "type": "string",
                          "description": "The specification of an Internet routable address of API frontend that will handle requests to this [API Endpoint](https://cloud.google.com/apis/design/glossary). It should be either a valid IPv4 address or a fully-qualified domain name. For example, \"8.8.8.8\" or \"myservice.appspot.com\"."
                        },
                        "allowCors": {
                          "type": "boolean",
                          "description": "Allowing [CORS](https://en.wikipedia.org/wiki/Cross-origin_resource_sharing), aka cross-domain traffic, would allow the backends served from this endpoint to receive and respond to HTTP OPTIONS requests. The response will be used by the browser to determine whether the subsequent cross-origin request is allowed to proceed."
                        }
                      },
                      "description": "`Endpoint` describes a network address of a service that serves a set of APIs. It is commonly known as a service endpoint. A service may expose any number of service endpoints, and all service endpoints share the same service definition, such as quota limits and monitoring metrics. Example: type: google.api.Service name: library-example.googleapis.com endpoints: # Declares network address `https://library-example.googleapis.com` # for service `library-example.googleapis.com`. The `https` scheme # is implicit for all service endpoints. Other schemes may be # supported in the future. - name: library-example.googleapis.com allow_cors: false - name: content-staging-library-example.googleapis.com # Allows HTTP OPTIONS calls to be passed to the API frontend, for it # to decide whether the subsequent cross-origin request is allowed # to proceed. allow_cors: true"
                    },
                    "description": "Configuration for network endpoints. If this is empty, then an endpoint with the same name as the service is automatically generated to service all defined APIs."
                  },
                  "monitoring": {
                    "id": "Monitoring",
                    "type": "object",
                    "properties": {
                      "consumerDestinations": {
                        "type": "array",
                        "items": {
                          "id": "MonitoringDestination",
                          "type": "object",
                          "properties": {
                            "metrics": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Types of the metrics to report to this monitoring destination. Each type must be defined in Service.metrics section."
                            },
                            "monitoredResource": {
                              "type": "string",
                              "description": "The monitored resource type. The type must be defined in Service.monitored_resources section."
                            }
                          },
                          "description": "Configuration of a specific monitoring destination (the producer project or the consumer project)."
                        },
                        "description": "Monitoring configurations for sending metrics to the consumer project. There can be multiple consumer destinations. A monitored resource type may appear in multiple monitoring destinations if different aggregations are needed for different sets of metrics associated with that monitored resource type. A monitored resource and metric pair may only be used once in the Monitoring configuration."
                      },
                      "producerDestinations": {
                        "type": "array",
                        "items": {
                          "id": "MonitoringDestination",
                          "type": "object",
                          "properties": {
                            "metrics": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Types of the metrics to report to this monitoring destination. Each type must be defined in Service.metrics section."
                            },
                            "monitoredResource": {
                              "type": "string",
                              "description": "The monitored resource type. The type must be defined in Service.monitored_resources section."
                            }
                          },
                          "description": "Configuration of a specific monitoring destination (the producer project or the consumer project)."
                        },
                        "description": "Monitoring configurations for sending metrics to the producer project. There can be multiple producer destinations. A monitored resource type may appear in multiple monitoring destinations if different aggregations are needed for different sets of metrics associated with that monitored resource type. A monitored resource and metric pair may only be used once in the Monitoring configuration."
                      }
                    },
                    "description": "Monitoring configuration."
                  },
                  "sourceInfo": {
                    "id": "SourceInfo",
                    "type": "object",
                    "properties": {
                      "sourceFiles": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object. Contains field @type with type URL."
                          }
                        },
                        "description": "All files used during config generation."
                      }
                    },
                    "description": "Output only. The source information for this configuration if available."
                  },
                  "customError": {
                    "id": "CustomError",
                    "type": "object",
                    "properties": {
                      "rules": {
                        "type": "array",
                        "items": {
                          "id": "CustomErrorRule",
                          "type": "object",
                          "properties": {
                            "selector": {
                              "type": "string",
                              "description": "Selects messages to which this rule applies. Refer to selector for syntax details."
                            },
                            "isErrorType": {
                              "type": "boolean",
                              "description": "Mark this message as possible payload in error response. Otherwise, objects of this type will be filtered when they appear in error payload."
                            }
                          },
                          "description": "A custom error rule."
                        },
                        "description": "The list of custom error rules that apply to individual API messages. **NOTE:** All service configuration rules follow \"last one wins\" order."
                      },
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The list of custom error detail types, e.g. 'google.foo.v1.CustomError'."
                      }
                    },
                    "description": "Custom error configuration."
                  },
                  "systemTypes": {
                    "type": "array",
                    "items": {
                      "id": "Type",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The fully qualified message name."
                        },
                        "fields": {
                          "type": "array",
                          "items": {
                            "id": "Field",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "enum": [
                                  "TYPE_UNKNOWN",
                                  "TYPE_DOUBLE",
                                  "TYPE_FLOAT",
                                  "TYPE_INT64",
                                  "TYPE_UINT64",
                                  "TYPE_INT32",
                                  "TYPE_FIXED64",
                                  "TYPE_FIXED32",
                                  "TYPE_BOOL",
                                  "TYPE_STRING",
                                  "TYPE_GROUP",
                                  "TYPE_MESSAGE",
                                  "TYPE_BYTES",
                                  "TYPE_UINT32",
                                  "TYPE_ENUM",
                                  "TYPE_SFIXED32",
                                  "TYPE_SFIXED64",
                                  "TYPE_SINT32",
                                  "TYPE_SINT64"
                                ],
                                "type": "string",
                                "description": "The field type.",
                                "enumDescriptions": [
                                  "Field type unknown.",
                                  "Field type double.",
                                  "Field type float.",
                                  "Field type int64.",
                                  "Field type uint64.",
                                  "Field type int32.",
                                  "Field type fixed64.",
                                  "Field type fixed32.",
                                  "Field type bool.",
                                  "Field type string.",
                                  "Field type group. Proto2 syntax only, and deprecated.",
                                  "Field type message.",
                                  "Field type bytes.",
                                  "Field type uint32.",
                                  "Field type enum.",
                                  "Field type sfixed32.",
                                  "Field type sfixed64.",
                                  "Field type sint32.",
                                  "Field type sint64."
                                ]
                              },
                              "name": {
                                "type": "string",
                                "description": "The field name."
                              },
                              "number": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The field number."
                              },
                              "packed": {
                                "type": "boolean",
                                "description": "Whether to use alternative packed wire representation."
                              },
                              "options": {
                                "type": "array",
                                "items": {
                                  "id": "Option",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The option's name. For protobuf built-in options (options defined in descriptor.proto), this is the short name. For example, `\"map_entry\"`. For custom options, it should be the fully-qualified name. For example, `\"google.api.http\"`."
                                    },
                                    "value": {
                                      "type": "object",
                                      "description": "The option's value packed in an Any message. If the value is a primitive, the corresponding wrapper type defined in google/protobuf/wrappers.proto should be used. If the value is an enum, it should be stored as an int32 value using the google.protobuf.Int32Value type.",
                                      "additionalProperties": {
                                        "type": "any",
                                        "description": "Properties of the object. Contains field @type with type URL."
                                      }
                                    }
                                  },
                                  "description": "A protocol buffer option, which can be attached to a message, field, enumeration, etc."
                                },
                                "description": "The protocol buffer options."
                              },
                              "typeUrl": {
                                "type": "string",
                                "description": "The field type URL, without the scheme, for message or enumeration types. Example: `\"type.googleapis.com/google.protobuf.Timestamp\"`."
                              },
                              "jsonName": {
                                "type": "string",
                                "description": "The field JSON name."
                              },
                              "oneofIndex": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The index of the field type in `Type.oneofs`, for message or enumeration types. The first type has index 1; zero means the type is not in the list."
                              },
                              "cardinality": {
                                "enum": [
                                  "CARDINALITY_UNKNOWN",
                                  "CARDINALITY_OPTIONAL",
                                  "CARDINALITY_REQUIRED",
                                  "CARDINALITY_REPEATED"
                                ],
                                "type": "string",
                                "description": "The field cardinality.",
                                "enumDescriptions": [
                                  "For fields with unknown cardinality.",
                                  "For optional fields.",
                                  "For required fields. Proto2 syntax only.",
                                  "For repeated fields."
                                ]
                              },
                              "defaultValue": {
                                "type": "string",
                                "description": "The string value of the default value of this field. Proto2 syntax only."
                              }
                            },
                            "description": "A single field of a message type."
                          },
                          "description": "The list of fields."
                        },
                        "oneofs": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The list of types appearing in `oneof` definitions in this type."
                        },
                        "syntax": {
                          "enum": [
                            "SYNTAX_PROTO2",
                            "SYNTAX_PROTO3"
                          ],
                          "type": "string",
                          "description": "The source syntax.",
                          "enumDescriptions": [
                            "Syntax `proto2`.",
                            "Syntax `proto3`."
                          ]
                        },
                        "options": {
                          "type": "array",
                          "items": {
                            "id": "Option",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The option's name. For protobuf built-in options (options defined in descriptor.proto), this is the short name. For example, `\"map_entry\"`. For custom options, it should be the fully-qualified name. For example, `\"google.api.http\"`."
                              },
                              "value": {
                                "type": "object",
                                "description": "The option's value packed in an Any message. If the value is a primitive, the corresponding wrapper type defined in google/protobuf/wrappers.proto should be used. If the value is an enum, it should be stored as an int32 value using the google.protobuf.Int32Value type.",
                                "additionalProperties": {
                                  "type": "any",
                                  "description": "Properties of the object. Contains field @type with type URL."
                                }
                              }
                            },
                            "description": "A protocol buffer option, which can be attached to a message, field, enumeration, etc."
                          },
                          "description": "The protocol buffer options."
                        },
                        "sourceContext": {
                          "id": "SourceContext",
                          "type": "object",
                          "properties": {
                            "fileName": {
                              "type": "string",
                              "description": "The path-qualified name of the .proto file that contained the associated protobuf element. For example: `\"google/protobuf/source_context.proto\"`."
                            }
                          },
                          "description": "The source context."
                        }
                      },
                      "description": "A protocol buffer message type."
                    },
                    "description": "A list of all proto message types included in this API service. It serves similar purpose as [google.api.Service.types], except that these types are not needed by user-defined APIs. Therefore, they will not show up in the generated discovery doc. This field should only be used to define system APIs in ESF."
                  },
                  "configVersion": {
                    "type": "integer",
                    "format": "uint32",
                    "description": "Obsolete. Do not use. This field has no semantic meaning. The service config compiler always sets this field to `3`."
                  },
                  "documentation": {
                    "id": "Documentation",
                    "type": "object",
                    "properties": {
                      "pages": {
                        "type": "array",
                        "items": {
                          "id": "Page",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the page. It will be used as an identity of the page to generate URI of the page, text of the link to this page in navigation, etc. The full page name (start from the root page name to this page concatenated with `.`) can be used as reference to the page in your documentation. For example: pages: - name: Tutorial content: (== include tutorial.md ==) subpages: - name: Java content: (== include tutorial_java.md ==) You can reference `Java` page using Markdown reference link syntax: `Java`."
                            },
                            "content": {
                              "type": "string",
                              "description": "The Markdown content of the page. You can use (== include {path} ==) to include content from a Markdown file."
                            },
                            "subpages": {
                              "type": "array",
                              "items": {},
                              "description": "Subpages of this page. The order of subpages specified here will be honored in the generated docset."
                            }
                          },
                          "description": "Represents a documentation page. A page can contain subpages to represent nested documentation set structure."
                        },
                        "description": "The top level pages for the documentation set."
                      },
                      "rules": {
                        "type": "array",
                        "items": {
                          "id": "DocumentationRule",
                          "type": "object",
                          "properties": {
                            "selector": {
                              "type": "string",
                              "description": "The selector is a comma-separated list of patterns. Each pattern is a qualified name of the element which may end in \"*\", indicating a wildcard. Wildcards are only allowed at the end and for a whole component of the qualified name, i.e. \"foo.*\" is ok, but not \"foo.b*\" or \"foo.*.bar\". A wildcard will match one or more components. To specify a default for all applicable elements, the whole pattern \"*\" is used."
                            },
                            "description": {
                              "type": "string",
                              "description": "Description of the selected API(s)."
                            },
                            "deprecationDescription": {
                              "type": "string",
                              "description": "Deprecation description of the selected element(s). It can be provided if an element is marked as `deprecated`."
                            }
                          },
                          "description": "A documentation rule provides information about individual API elements."
                        },
                        "description": "A list of documentation rules that apply to individual API elements. **NOTE:** All service configuration rules follow \"last one wins\" order."
                      },
                      "summary": {
                        "type": "string",
                        "description": "A short summary of what the service does. Can only be provided by plain text."
                      },
                      "overview": {
                        "type": "string",
                        "description": "Declares a single overview page. For example: documentation: summary: ... overview: (== include overview.md ==) This is a shortcut for the following declaration (using pages style): documentation: summary: ... pages: - name: Overview content: (== include overview.md ==) Note: you cannot specify both `overview` field and `pages` field."
                      },
                      "serviceRootUrl": {
                        "type": "string",
                        "description": "Specifies the service root url if the default one (the service name from the yaml file) is not suitable. This can be seen in any fully specified service urls as well as sections that show a base that other urls are relative to."
                      },
                      "documentationRootUrl": {
                        "type": "string",
                        "description": "The URL to the root of documentation."
                      }
                    },
                    "description": "Additional API documentation."
                  },
                  "authentication": {
                    "id": "Authentication",
                    "type": "object",
                    "properties": {
                      "rules": {
                        "type": "array",
                        "items": {
                          "id": "AuthenticationRule",
                          "type": "object",
                          "properties": {
                            "oauth": {
                              "id": "OAuthRequirements",
                              "type": "object",
                              "properties": {
                                "canonicalScopes": {
                                  "type": "string",
                                  "description": "The list of publicly documented OAuth scopes that are allowed access. An OAuth token containing any of these scopes will be accepted. Example: canonical_scopes: https://www.googleapis.com/auth/calendar, https://www.googleapis.com/auth/calendar.read"
                                }
                              },
                              "description": "The requirements for OAuth credentials."
                            },
                            "selector": {
                              "type": "string",
                              "description": "Selects the methods to which this rule applies. Refer to selector for syntax details."
                            },
                            "requirements": {
                              "type": "array",
                              "items": {
                                "id": "AuthRequirement",
                                "type": "object",
                                "properties": {
                                  "audiences": {
                                    "type": "string",
                                    "description": "NOTE: This will be deprecated soon, once AuthProvider.audiences is implemented and accepted in all the runtime components. The list of JWT [audiences](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32#section-4.1.3). that are allowed to access. A JWT containing any of these audiences will be accepted. When this setting is absent, only JWTs with audience \"https://Service_name/API_name\" will be accepted. For example, if no audiences are in the setting, LibraryService API will only accept JWTs with the following audience \"https://library-example.googleapis.com/google.example.library.v1.LibraryService\". Example: audiences: bookstore_android.apps.googleusercontent.com, bookstore_web.apps.googleusercontent.com"
                                  },
                                  "providerId": {
                                    "type": "string",
                                    "description": "id from authentication provider. Example: provider_id: bookstore_auth"
                                  }
                                },
                                "description": "User-defined authentication requirements, including support for [JSON Web Token (JWT)](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32)."
                              },
                              "description": "Requirements for additional authentication providers."
                            },
                            "allowWithoutCredential": {
                              "type": "boolean",
                              "description": "If true, the service accepts API keys without any other credential. This flag only applies to HTTP and gRPC requests."
                            }
                          },
                          "description": "Authentication rules for the service. By default, if a method has any authentication requirements, every request must include a valid credential matching one of the requirements. It's an error to include more than one kind of credential in a single request. If a method doesn't have any auth requirements, request credentials will be ignored."
                        },
                        "description": "A list of authentication rules that apply to individual API methods. **NOTE:** All service configuration rules follow \"last one wins\" order."
                      },
                      "providers": {
                        "type": "array",
                        "items": {
                          "id": "AuthProvider",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The unique identifier of the auth provider. It will be referred to by `AuthRequirement.provider_id`. Example: \"bookstore_auth\"."
                            },
                            "issuer": {
                              "type": "string",
                              "description": "Identifies the principal that issued the JWT. See https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32#section-4.1.1 Usually a URL or an email address. Example: https://securetoken.google.com Example: 1234567-compute@developer.gserviceaccount.com"
                            },
                            "jwksUri": {
                              "type": "string",
                              "description": "URL of the provider's public key set to validate signature of the JWT. See [OpenID Discovery](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata). Optional if the key set document: - can be retrieved from [OpenID Discovery](https://openid.net/specs/openid-connect-discovery-1_0.html) of the issuer. - can be inferred from the email domain of the issuer (e.g. a Google service account). Example: https://www.googleapis.com/oauth2/v1/certs"
                            },
                            "audiences": {
                              "type": "string",
                              "description": "The list of JWT [audiences](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32#section-4.1.3). that are allowed to access. A JWT containing any of these audiences will be accepted. When this setting is absent, JWTs with audiences: - \"https://[service.name]/[google.protobuf.Api.name]\" - \"https://[service.name]/\" will be accepted. For example, if no audiences are in the setting, LibraryService API will accept JWTs with the following audiences: - https://library-example.googleapis.com/google.example.library.v1.LibraryService - https://library-example.googleapis.com/ Example: audiences: bookstore_android.apps.googleusercontent.com, bookstore_web.apps.googleusercontent.com"
                            },
                            "jwtLocations": {
                              "type": "array",
                              "items": {
                                "id": "JwtLocation",
                                "type": "object",
                                "properties": {
                                  "query": {
                                    "type": "string",
                                    "description": "Specifies URL query parameter name to extract JWT token."
                                  },
                                  "header": {
                                    "type": "string",
                                    "description": "Specifies HTTP header name to extract JWT token."
                                  },
                                  "valuePrefix": {
                                    "type": "string",
                                    "description": "The value prefix. The value format is \"value_prefix{token}\" Only applies to \"in\" header type. Must be empty for \"in\" query type. If not empty, the header value has to match (case sensitive) this prefix. If not matched, JWT will not be extracted. If matched, JWT will be extracted after the prefix is removed. For example, for \"Authorization: Bearer {JWT}\", value_prefix=\"Bearer \" with a space at the end."
                                  }
                                },
                                "description": "Specifies a location to extract JWT from an API request."
                              },
                              "description": "Defines the locations to extract the JWT. JWT locations can be either from HTTP headers or URL query parameters. The rule is that the first match wins. The checking order is: checking all headers first, then URL query parameters. If not specified, default to use following 3 locations: 1) Authorization: Bearer 2) x-goog-iap-jwt-assertion 3) access_token query parameter Default locations can be specified as followings: jwt_locations: - header: Authorization value_prefix: \"Bearer \" - header: x-goog-iap-jwt-assertion - query: access_token"
                            },
                            "authorizationUrl": {
                              "type": "string",
                              "description": "Redirect URL if JWT token is required but not present or is expired. Implement authorizationUrl of securityDefinitions in OpenAPI spec."
                            }
                          },
                          "description": "Configuration for an authentication provider, including support for [JSON Web Token (JWT)](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32)."
                        },
                        "description": "Defines a set of authentication providers that a service supports."
                      }
                    },
                    "description": "Auth configuration."
                  },
                  "systemParameters": {
                    "id": "SystemParameters",
                    "type": "object",
                    "properties": {
                      "rules": {
                        "type": "array",
                        "items": {
                          "id": "SystemParameterRule",
                          "type": "object",
                          "properties": {
                            "selector": {
                              "type": "string",
                              "description": "Selects the methods to which this rule applies. Use '*' to indicate all methods in all APIs. Refer to selector for syntax details."
                            },
                            "parameters": {
                              "type": "array",
                              "items": {
                                "id": "SystemParameter",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Define the name of the parameter, such as \"api_key\" . It is case sensitive."
                                  },
                                  "httpHeader": {
                                    "type": "string",
                                    "description": "Define the HTTP header name to use for the parameter. It is case insensitive."
                                  },
                                  "urlQueryParameter": {
                                    "type": "string",
                                    "description": "Define the URL query parameter name to use for the parameter. It is case sensitive."
                                  }
                                },
                                "description": "Define a parameter's name and location. The parameter may be passed as either an HTTP header or a URL query parameter, and if both are passed the behavior is implementation-dependent."
                              },
                              "description": "Define parameters. Multiple names may be defined for a parameter. For a given method call, only one of them should be used. If multiple names are used the behavior is implementation-dependent. If none of the specified names are present the behavior is parameter-dependent."
                            }
                          },
                          "description": "Define a system parameter rule mapping system parameter definitions to methods."
                        },
                        "description": "Define system parameters. The parameters defined here will override the default parameters implemented by the system. If this field is missing from the service config, default system parameters will be used. Default system parameters and names is implementation-dependent. Example: define api key for all methods system_parameters rules: - selector: \"*\" parameters: - name: api_key url_query_parameter: api_key Example: define 2 api key names for a specific method. system_parameters rules: - selector: \"/ListShelves\" parameters: - name: api_key http_header: Api-Key1 - name: api_key http_header: Api-Key2 **NOTE:** All service configuration rules follow \"last one wins\" order."
                      }
                    },
                    "description": "System parameter configuration."
                  },
                  "producerProjectId": {
                    "type": "string",
                    "description": "The Google project that owns this service."
                  },
                  "monitoredResources": {
                    "type": "array",
                    "items": {
                      "id": "MonitoredResourceDescriptor",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Optional. The resource name of the monitored resource descriptor: `\"projects/{project_id}/monitoredResourceDescriptors/{type}\"` where {type} is the value of the `type` field in this object and {project_id} is a project ID that provides API-specific context for accessing the type. APIs that do not use project information can use the resource name format `\"monitoredResourceDescriptors/{type}\"`."
                        },
                        "type": {
                          "type": "string",
                          "description": "Required. The monitored resource type. For example, the type `\"cloudsql_database\"` represents databases in Google Cloud SQL."
                        },
                        "labels": {
                          "type": "array",
                          "items": {
                            "id": "LabelDescriptor",
                            "type": "object",
                            "properties": {
                              "key": {
                                "type": "string",
                                "description": "The label key."
                              },
                              "valueType": {
                                "enum": [
                                  "STRING",
                                  "BOOL",
                                  "INT64"
                                ],
                                "type": "string",
                                "description": "The type of data that can be assigned to the label.",
                                "enumDescriptions": [
                                  "A variable-length string. This is the default.",
                                  "Boolean; true or false.",
                                  "A 64-bit signed integer."
                                ]
                              },
                              "description": {
                                "type": "string",
                                "description": "A human-readable description for the label."
                              }
                            },
                            "description": "A description of a label."
                          },
                          "description": "Required. A set of labels used to describe instances of this monitored resource type. For example, an individual Google Cloud SQL database is identified by values for the labels `\"database_id\"` and `\"zone\"`."
                        },
                        "description": {
                          "type": "string",
                          "description": "Optional. A detailed description of the monitored resource type that might be used in documentation."
                        },
                        "displayName": {
                          "type": "string",
                          "description": "Optional. A concise name for the monitored resource type that might be displayed in user interfaces. It should be a Title Cased Noun Phrase, without any article or other determiners. For example, `\"Google Cloud SQL Database\"`."
                        },
                        "launchStage": {
                          "enum": [
                            "LAUNCH_STAGE_UNSPECIFIED",
                            "UNIMPLEMENTED",
                            "PRELAUNCH",
                            "EARLY_ACCESS",
                            "ALPHA",
                            "BETA",
                            "GA",
                            "DEPRECATED"
                          ],
                          "type": "string",
                          "description": "Optional. The launch stage of the monitored resource definition.",
                          "enumDescriptions": [
                            "Do not use this default value.",
                            "The feature is not yet implemented. Users can not use it.",
                            "Prelaunch features are hidden from users and are only visible internally.",
                            "Early Access features are limited to a closed group of testers. To use these features, you must sign up in advance and sign a Trusted Tester agreement (which includes confidentiality provisions). These features may be unstable, changed in backward-incompatible ways, and are not guaranteed to be released.",
                            "Alpha is a limited availability test for releases before they are cleared for widespread use. By Alpha, all significant design issues are resolved and we are in the process of verifying functionality. Alpha customers need to apply for access, agree to applicable terms, and have their projects allowlisted. Alpha releases don’t have to be feature complete, no SLAs are provided, and there are no technical support obligations, but they will be far enough along that customers can actually use them in test environments or for limited-use tests -- just like they would in normal production cases.",
                            "Beta is the point at which we are ready to open a release for any customer to use. There are no SLA or technical support obligations in a Beta release. Products will be complete from a feature perspective, but may have some open outstanding issues. Beta releases are suitable for limited production use cases.",
                            "GA features are open to all developers and are considered stable and fully qualified for production use.",
                            "Deprecated features are scheduled to be shut down and removed. For more information, see the “Deprecation Policy” section of our [Terms of Service](https://cloud.google.com/terms/) and the [Google Cloud Platform Subject to the Deprecation Policy](https://cloud.google.com/terms/deprecation) documentation."
                          ]
                        }
                      },
                      "description": "An object that describes the schema of a MonitoredResource object using a type name and a set of labels. For example, the monitored resource descriptor for Google Compute Engine VM instances has a type of `\"gce_instance\"` and specifies the use of the labels `\"instance_id\"` and `\"zone\"` to identify particular VM instances. Different APIs can support different monitored resource types. APIs generally provide a `list` method that returns the monitored resource descriptors used by the API. "
                    },
                    "description": "Defines the monitored resources used by this service. This is required by the Service.monitoring and Service.logging configurations."
                  }
                },
                "description": "`Service` is the root object of Google API service configuration (service config). It describes the basic information about a logical service, such as the service name and the user-facing title, and delegates other aspects to sub-sections. Each sub-section is either a proto message or a repeated proto message that configures a specific aspect, such as auth. For more information, see each proto message definition. Example: type: google.api.Service name: calendar.googleapis.com title: Google Calendar API apis: - name: google.calendar.v3.Calendar visibility: rules: - selector: \"google.calendar.v3.*\" restriction: PREVIEW backend: rules: - selector: \"google.calendar.v3.*\" address: calendar.example.com authentication: providers: - id: google_calendar_auth jwks_uri: https://www.googleapis.com/oauth2/v1/certs issuer: https://securetoken.google.com rules: - selector: \"*\" requirements: provider_id: google_calendar_auth"
              },
              "description": "The list of service configuration resources."
            }
          },
          "description": "Response message for ListServiceConfigs method."
        }
      ]
  servicemanagement.services.configs.submit:
    description: |-
      Creates a new service configuration (version) for a managed service based on user-supplied configuration source files (for example: OpenAPI Specification). This method stores the source configurations as well as the generated service configuration. To rollout the service configuration to other services, please call CreateServiceRollout. Only the 100 most recent configuration sources and ones referenced by existing service configurtions are kept for each service. The rest will be deleted eventually. Operation
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-management/reference/rest/v1/services.configs/submit
    example:
      inputs: [
        {
          "id": "SubmitConfigSourceRequest",
          "type": "object",
          "properties": {
            "configSource": {
              "id": "ConfigSource",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "A unique ID for a specific instance of this message, typically assigned by the client for tracking purpose. If empty, the server may choose to generate one instead."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "id": "ConfigFile",
                    "type": "object",
                    "properties": {
                      "filePath": {
                        "type": "string",
                        "description": "The file name of the configuration file (full or relative path)."
                      },
                      "fileType": {
                        "enum": [
                          "FILE_TYPE_UNSPECIFIED",
                          "SERVICE_CONFIG_YAML",
                          "OPEN_API_JSON",
                          "OPEN_API_YAML",
                          "FILE_DESCRIPTOR_SET_PROTO",
                          "PROTO_FILE"
                        ],
                        "type": "string",
                        "description": "The type of configuration file this represents.",
                        "enumDescriptions": [
                          "Unknown file type.",
                          "YAML-specification of service.",
                          "OpenAPI specification, serialized in JSON.",
                          "OpenAPI specification, serialized in YAML.",
                          "FileDescriptorSet, generated by protoc. To generate, use protoc with imports and source info included. For an example test.proto file, the following command would put the value in a new file named out.pb. $protoc --include_imports --include_source_info test.proto -o out.pb",
                          "Uncompiled Proto file. Used for storage and display purposes only, currently server-side compilation is not supported. Should match the inputs to 'protoc' command used to generated FILE_DESCRIPTOR_SET_PROTO. A file of this type can only be included if at least one file of type FILE_DESCRIPTOR_SET_PROTO is included."
                        ]
                      },
                      "fileContents": {
                        "type": "string",
                        "format": "byte",
                        "description": "The bytes that constitute the file."
                      }
                    },
                    "description": "Generic specification of a source configuration file"
                  },
                  "description": "Set of source configuration files that are used to generate a service configuration (`google.api.Service`)."
                }
              },
              "description": "Required. The source configuration for the service."
            },
            "validateOnly": {
              "type": "boolean",
              "description": "Optional. If set, this will result in the generation of a `google.api.Service` configuration based on the `ConfigSource` provided, but the generated config and the sources will NOT be persisted."
            }
          },
          "description": "Request message for SubmitConfigSource method."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  servicemanagement.services.consumers.getIamPolicy:
    description: |-
      Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-management/reference/rest/v1/services.consumers/getIamPolicy
    example:
      inputs: [
        {
          "id": "GetIamPolicyRequest",
          "type": "object",
          "properties": {
            "options": {
              "id": "GetPolicyOptions",
              "type": "object",
              "properties": {
                "requestedPolicyVersion": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                }
              },
              "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`."
            }
          },
          "description": "Request message for `GetIamPolicy` method."
        }
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            },
            "auditConfigs": {
              "type": "array",
              "items": {
                "id": "AuditConfig",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                  },
                  "auditLogConfigs": {
                    "type": "array",
                    "items": {
                      "id": "AuditLogConfig",
                      "type": "object",
                      "properties": {
                        "logType": {
                          "enum": [
                            "LOG_TYPE_UNSPECIFIED",
                            "ADMIN_READ",
                            "DATA_WRITE",
                            "DATA_READ"
                          ],
                          "type": "string",
                          "description": "The log type that this config enables.",
                          "enumDescriptions": [
                            "Default case. Should never be this.",
                            "Admin reads. Example: CloudIAM getIamPolicy",
                            "Data writes. Example: CloudSQL Users create",
                            "Data reads. Example: CloudSQL Users list"
                          ]
                        },
                        "exemptedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                        }
                      },
                      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                    },
                    "description": "The configuration for logging of each type of permission."
                  }
                },
                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
              },
              "description": "Specifies cloud audit logging configuration for this policy."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  servicemanagement.services.consumers.setIamPolicy:
    description: |-
      Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-management/reference/rest/v1/services.consumers/setIamPolicy
    example:
      inputs: [
        {
          "id": "SetIamPolicyRequest",
          "type": "object",
          "properties": {
            "policy": {
              "id": "Policy",
              "type": "object",
              "properties": {
                "etag": {
                  "type": "string",
                  "format": "byte",
                  "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
                },
                "version": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                },
                "bindings": {
                  "type": "array",
                  "items": {
                    "id": "Binding",
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                      },
                      "members": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                      },
                      "condition": {
                        "id": "Expr",
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                          },
                          "location": {
                            "type": "string",
                            "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                          },
                          "expression": {
                            "type": "string",
                            "description": "Textual representation of an expression in Common Expression Language syntax."
                          },
                          "description": {
                            "type": "string",
                            "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                          }
                        },
                        "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                      }
                    },
                    "description": "Associates `members` with a `role`."
                  },
                  "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
                },
                "auditConfigs": {
                  "type": "array",
                  "items": {
                    "id": "AuditConfig",
                    "type": "object",
                    "properties": {
                      "service": {
                        "type": "string",
                        "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                      },
                      "auditLogConfigs": {
                        "type": "array",
                        "items": {
                          "id": "AuditLogConfig",
                          "type": "object",
                          "properties": {
                            "logType": {
                              "enum": [
                                "LOG_TYPE_UNSPECIFIED",
                                "ADMIN_READ",
                                "DATA_WRITE",
                                "DATA_READ"
                              ],
                              "type": "string",
                              "description": "The log type that this config enables.",
                              "enumDescriptions": [
                                "Default case. Should never be this.",
                                "Admin reads. Example: CloudIAM getIamPolicy",
                                "Data writes. Example: CloudSQL Users create",
                                "Data reads. Example: CloudSQL Users list"
                              ]
                            },
                            "exemptedMembers": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                            }
                          },
                          "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                        },
                        "description": "The configuration for logging of each type of permission."
                      }
                    },
                    "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
                  },
                  "description": "Specifies cloud audit logging configuration for this policy."
                }
              },
              "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
            },
            "updateMask": {
              "type": "string",
              "format": "google-fieldmask",
              "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`"
            }
          },
          "description": "Request message for `SetIamPolicy` method."
        }
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            },
            "auditConfigs": {
              "type": "array",
              "items": {
                "id": "AuditConfig",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                  },
                  "auditLogConfigs": {
                    "type": "array",
                    "items": {
                      "id": "AuditLogConfig",
                      "type": "object",
                      "properties": {
                        "logType": {
                          "enum": [
                            "LOG_TYPE_UNSPECIFIED",
                            "ADMIN_READ",
                            "DATA_WRITE",
                            "DATA_READ"
                          ],
                          "type": "string",
                          "description": "The log type that this config enables.",
                          "enumDescriptions": [
                            "Default case. Should never be this.",
                            "Admin reads. Example: CloudIAM getIamPolicy",
                            "Data writes. Example: CloudSQL Users create",
                            "Data reads. Example: CloudSQL Users list"
                          ]
                        },
                        "exemptedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                        }
                      },
                      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                    },
                    "description": "The configuration for logging of each type of permission."
                  }
                },
                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
              },
              "description": "Specifies cloud audit logging configuration for this policy."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  servicemanagement.services.consumers.testIamPermissions:
    description: |-
      Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-management/reference/rest/v1/services.consumers/testIamPermissions
    example:
      inputs: [
        {
          "id": "TestIamPermissionsRequest",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
            }
          },
          "description": "Request message for `TestIamPermissions` method."
        }
      ]
      outputs: [
        {
          "id": "TestIamPermissionsResponse",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
            }
          },
          "description": "Response message for `TestIamPermissions` method."
        }
      ]
  servicemanagement.services.create:
    description: |-
      Creates a new managed service. A managed service is immutable, and is subject to mandatory 30-day data retention. You cannot move a service or recreate it within 30 days after deletion. One producer project can own no more than 500 services. For security and reliability purposes, a production service should be hosted in a dedicated producer project. Operation
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-management/reference/rest/v1/services/create
    example:
      inputs: [
        {
          "id": "ManagedService",
          "type": "object",
          "properties": {
            "serviceName": {
              "type": "string",
              "description": "The name of the service. See the [overview](/service-management/overview) for naming requirements."
            },
            "producerProjectId": {
              "type": "string",
              "description": "ID of the project that produces and owns this service."
            }
          },
          "description": "The full representation of a Service that is managed by Google Service Management."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  servicemanagement.services.delete:
    description: |-
      Deletes a managed service. This method will change the service to the `Soft-Delete` state for 30 days. Within this period, service producers may call UndeleteService to restore the service. After 30 days, the service will be permanently deleted. Operation
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-management/reference/rest/v1/services/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  servicemanagement.services.generateConfigReport:
    description: |-
      Generates and returns a report (errors, warnings and changes from existing configurations) associated with GenerateConfigReportRequest.new_value If GenerateConfigReportRequest.old_value is specified, GenerateConfigReportRequest will contain a single ChangeReport based on the comparison between GenerateConfigReportRequest.new_value and GenerateConfigReportRequest.old_value. If GenerateConfigReportRequest.old_value is not specified, this method will compare GenerateConfigReportRequest.new_value with the last pushed service configuration.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-management/reference/rest/v1/services/generateConfigReport
    example:
      inputs: [
        {
          "id": "GenerateConfigReportRequest",
          "type": "object",
          "properties": {
            "newConfig": {
              "type": "object",
              "description": "Required. Service configuration for which we want to generate the report. For this version of API, the supported types are google.api.servicemanagement.v1.ConfigRef, google.api.servicemanagement.v1.ConfigSource, and google.api.Service",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "oldConfig": {
              "type": "object",
              "description": "Optional. Service configuration against which the comparison will be done. For this version of API, the supported types are google.api.servicemanagement.v1.ConfigRef, google.api.servicemanagement.v1.ConfigSource, and google.api.Service",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "Request message for GenerateConfigReport method."
        }
      ]
      outputs: [
        {
          "id": "GenerateConfigReportResponse",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "ID of the service configuration this report belongs to."
            },
            "diagnostics": {
              "type": "array",
              "items": {
                "id": "Diagnostic",
                "type": "object",
                "properties": {
                  "kind": {
                    "enum": [
                      "WARNING",
                      "ERROR"
                    ],
                    "type": "string",
                    "description": "The kind of diagnostic information provided.",
                    "enumDescriptions": [
                      "Warnings and errors",
                      "Only errors"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "description": "Message describing the error or warning."
                  },
                  "location": {
                    "type": "string",
                    "description": "File name and line number of the error or warning."
                  }
                },
                "description": "Represents a diagnostic message (error or warning)"
              },
              "description": "Errors / Linter warnings associated with the service definition this report belongs to."
            },
            "serviceName": {
              "type": "string",
              "description": "Name of the service this report belongs to."
            },
            "changeReports": {
              "type": "array",
              "items": {
                "id": "ChangeReport",
                "type": "object",
                "properties": {
                  "configChanges": {
                    "type": "array",
                    "items": {
                      "id": "ConfigChange",
                      "type": "object",
                      "properties": {
                        "advices": {
                          "type": "array",
                          "items": {
                            "id": "Advice",
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string",
                                "description": "Useful description for why this advice was applied and what actions should be taken to mitigate any implied risks."
                              }
                            },
                            "description": "Generated advice about this change, used for providing more information about how a change will affect the existing service."
                          },
                          "description": "Collection of advice provided for this change, useful for determining the possible impact of this change."
                        },
                        "element": {
                          "type": "string",
                          "description": "Object hierarchy path to the change, with levels separated by a '.' character. For repeated fields, an applicable unique identifier field is used for the index (usually selector, name, or id). For maps, the term 'key' is used. If the field has no unique identifier, the numeric index is used. Examples: - visibility.rules[selector==\"google.LibraryService.ListBooks\"].restriction - quota.metric_rules[selector==\"google\"].metric_costs[key==\"reads\"].value - logging.producer_destinations[0]"
                        },
                        "newValue": {
                          "type": "string",
                          "description": "Value of the changed object in the new Service configuration, in JSON format. This field will not be populated if ChangeType == REMOVED."
                        },
                        "oldValue": {
                          "type": "string",
                          "description": "Value of the changed object in the old Service configuration, in JSON format. This field will not be populated if ChangeType == ADDED."
                        },
                        "changeType": {
                          "enum": [
                            "CHANGE_TYPE_UNSPECIFIED",
                            "ADDED",
                            "REMOVED",
                            "MODIFIED"
                          ],
                          "type": "string",
                          "description": "The type for this change, either ADDED, REMOVED, or MODIFIED.",
                          "enumDescriptions": [
                            "No value was provided.",
                            "The changed object exists in the 'new' service configuration, but not in the 'old' service configuration.",
                            "The changed object exists in the 'old' service configuration, but not in the 'new' service configuration.",
                            "The changed object exists in both service configurations, but its value is different."
                          ]
                        }
                      },
                      "description": "Output generated from semantically comparing two versions of a service configuration. Includes detailed information about a field that have changed with applicable advice about potential consequences for the change, such as backwards-incompatibility."
                    },
                    "description": "List of changes between two service configurations. The changes will be alphabetically sorted based on the identifier of each change. A ConfigChange identifier is a dot separated path to the configuration. Example: visibility.rules[selector='LibraryService.CreateBook'].restriction"
                  }
                },
                "description": "Change report associated with a particular service configuration. It contains a list of ConfigChanges based on the comparison between two service configurations."
              },
              "description": "list of ChangeReport, each corresponding to comparison between two service configurations."
            }
          },
          "description": "Response message for GenerateConfigReport method."
        }
      ]
  servicemanagement.services.get:
    description: |-
      Gets a managed service. Authentication is required unless the service is public.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-management/reference/rest/v1/services/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  servicemanagement.services.getConfig:
    description: |-
      Gets a service configuration (version) for a managed service.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-management/reference/rest/v1/services/getConfig
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  servicemanagement.services.getIamPolicy:
    description: |-
      Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-management/reference/rest/v1/services/getIamPolicy
    example:
      inputs: [
        {
          "id": "GetIamPolicyRequest",
          "type": "object",
          "properties": {
            "options": {
              "id": "GetPolicyOptions",
              "type": "object",
              "properties": {
                "requestedPolicyVersion": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                }
              },
              "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`."
            }
          },
          "description": "Request message for `GetIamPolicy` method."
        }
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            },
            "auditConfigs": {
              "type": "array",
              "items": {
                "id": "AuditConfig",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                  },
                  "auditLogConfigs": {
                    "type": "array",
                    "items": {
                      "id": "AuditLogConfig",
                      "type": "object",
                      "properties": {
                        "logType": {
                          "enum": [
                            "LOG_TYPE_UNSPECIFIED",
                            "ADMIN_READ",
                            "DATA_WRITE",
                            "DATA_READ"
                          ],
                          "type": "string",
                          "description": "The log type that this config enables.",
                          "enumDescriptions": [
                            "Default case. Should never be this.",
                            "Admin reads. Example: CloudIAM getIamPolicy",
                            "Data writes. Example: CloudSQL Users create",
                            "Data reads. Example: CloudSQL Users list"
                          ]
                        },
                        "exemptedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                        }
                      },
                      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                    },
                    "description": "The configuration for logging of each type of permission."
                  }
                },
                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
              },
              "description": "Specifies cloud audit logging configuration for this policy."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  servicemanagement.services.list:
    description: |-
      Lists managed services. Returns all public services. For authenticated users, also returns all services the calling user has "servicemanagement.services.get" permission for.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-management/reference/rest/v1/services/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListServicesResponse",
          "type": "object",
          "properties": {
            "services": {
              "type": "array",
              "items": {
                "id": "ManagedService",
                "type": "object",
                "properties": {
                  "serviceName": {
                    "type": "string",
                    "description": "The name of the service. See the [overview](/service-management/overview) for naming requirements."
                  },
                  "producerProjectId": {
                    "type": "string",
                    "description": "ID of the project that produces and owns this service."
                  }
                },
                "description": "The full representation of a Service that is managed by Google Service Management."
              },
              "description": "The returned services will only have the name field set."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Token that can be passed to `ListServices` to resume a paginated query."
            }
          },
          "description": "Response message for `ListServices` method."
        }
      ]
  servicemanagement.services.rollouts.create:
    description: |-
      Creates a new service configuration rollout. Based on rollout, the Google Service Management will roll out the service configurations to different backend services. For example, the logging configuration will be pushed to Google Cloud Logging. Please note that any previous pending and running Rollouts and associated Operations will be automatically cancelled so that the latest Rollout will not be blocked by previous Rollouts. Only the 100 most recent (in any state) and the last 10 successful (if not already part of the set of 100 most recent) rollouts are kept for each service. The rest will be deleted eventually. Operation
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-management/reference/rest/v1/services.rollouts/create
    example:
      inputs: [
        {
          "id": "Rollout",
          "type": "object",
          "properties": {
            "status": {
              "enum": [
                "ROLLOUT_STATUS_UNSPECIFIED",
                "IN_PROGRESS",
                "SUCCESS",
                "CANCELLED",
                "FAILED",
                "PENDING",
                "FAILED_ROLLED_BACK"
              ],
              "type": "string",
              "description": "The status of this rollout. Readonly. In case of a failed rollout, the system will automatically rollback to the current Rollout version. Readonly.",
              "enumDescriptions": [
                "No status specified.",
                "The Rollout is in progress.",
                "The Rollout has completed successfully.",
                "The Rollout has been cancelled. This can happen if you have overlapping Rollout pushes, and the previous ones will be cancelled.",
                "The Rollout has failed and the rollback attempt has failed too.",
                "The Rollout has not started yet and is pending for execution.",
                "The Rollout has failed and rolled back to the previous successful Rollout."
              ]
            },
            "createdBy": {
              "type": "string",
              "description": "This field is deprecated and will be deleted. Please remove usage of this field."
            },
            "rolloutId": {
              "type": "string",
              "description": "Optional. Unique identifier of this Rollout. Must be no longer than 63 characters and only lower case letters, digits, '.', '_' and '-' are allowed. If not specified by client, the server will generate one. The generated id will have the form of , where \"date\" is the create date in ISO 8601 format. \"revision number\" is a monotonically increasing positive number that is reset every day for each service. An example of the generated rollout_id is '2016-02-16r1'"
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Creation time of the rollout. Readonly."
            },
            "serviceName": {
              "type": "string",
              "description": "The name of the service associated with this Rollout."
            },
            "deleteServiceStrategy": {
              "id": "DeleteServiceStrategy",
              "type": "object",
              "properties": {},
              "description": "The strategy associated with a rollout to delete a `ManagedService`. Readonly."
            },
            "trafficPercentStrategy": {
              "id": "TrafficPercentStrategy",
              "type": "object",
              "properties": {
                "percentages": {
                  "type": "object",
                  "description": "Maps service configuration IDs to their corresponding traffic percentage. Key is the service configuration ID, Value is the traffic percentage which must be greater than 0.0 and the sum must equal to 100.0.",
                  "additionalProperties": {
                    "type": "number",
                    "format": "double"
                  }
                }
              },
              "description": "Google Service Control selects service configurations based on traffic percentage."
            }
          },
          "description": "A rollout resource that defines how service configuration versions are pushed to control plane systems. Typically, you create a new version of the service config, and then create a Rollout to push the service config."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  servicemanagement.services.rollouts.get:
    description: |-
      Gets a service configuration rollout.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-management/reference/rest/v1/services.rollouts/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  servicemanagement.services.rollouts.list:
    description: |-
      Lists the history of the service configuration rollouts for a managed service, from the newest to the oldest.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-management/reference/rest/v1/services.rollouts/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListServiceRolloutsResponse",
          "type": "object",
          "properties": {
            "rollouts": {
              "type": "array",
              "items": {
                "id": "Rollout",
                "type": "object",
                "properties": {
                  "status": {
                    "enum": [
                      "ROLLOUT_STATUS_UNSPECIFIED",
                      "IN_PROGRESS",
                      "SUCCESS",
                      "CANCELLED",
                      "FAILED",
                      "PENDING",
                      "FAILED_ROLLED_BACK"
                    ],
                    "type": "string",
                    "description": "The status of this rollout. Readonly. In case of a failed rollout, the system will automatically rollback to the current Rollout version. Readonly.",
                    "enumDescriptions": [
                      "No status specified.",
                      "The Rollout is in progress.",
                      "The Rollout has completed successfully.",
                      "The Rollout has been cancelled. This can happen if you have overlapping Rollout pushes, and the previous ones will be cancelled.",
                      "The Rollout has failed and the rollback attempt has failed too.",
                      "The Rollout has not started yet and is pending for execution.",
                      "The Rollout has failed and rolled back to the previous successful Rollout."
                    ]
                  },
                  "createdBy": {
                    "type": "string",
                    "description": "This field is deprecated and will be deleted. Please remove usage of this field."
                  },
                  "rolloutId": {
                    "type": "string",
                    "description": "Optional. Unique identifier of this Rollout. Must be no longer than 63 characters and only lower case letters, digits, '.', '_' and '-' are allowed. If not specified by client, the server will generate one. The generated id will have the form of , where \"date\" is the create date in ISO 8601 format. \"revision number\" is a monotonically increasing positive number that is reset every day for each service. An example of the generated rollout_id is '2016-02-16r1'"
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Creation time of the rollout. Readonly."
                  },
                  "serviceName": {
                    "type": "string",
                    "description": "The name of the service associated with this Rollout."
                  },
                  "deleteServiceStrategy": {
                    "id": "DeleteServiceStrategy",
                    "type": "object",
                    "properties": {},
                    "description": "The strategy associated with a rollout to delete a `ManagedService`. Readonly."
                  },
                  "trafficPercentStrategy": {
                    "id": "TrafficPercentStrategy",
                    "type": "object",
                    "properties": {
                      "percentages": {
                        "type": "object",
                        "description": "Maps service configuration IDs to their corresponding traffic percentage. Key is the service configuration ID, Value is the traffic percentage which must be greater than 0.0 and the sum must equal to 100.0.",
                        "additionalProperties": {
                          "type": "number",
                          "format": "double"
                        }
                      }
                    },
                    "description": "Google Service Control selects service configurations based on traffic percentage."
                  }
                },
                "description": "A rollout resource that defines how service configuration versions are pushed to control plane systems. Typically, you create a new version of the service config, and then create a Rollout to push the service config."
              },
              "description": "The list of rollout resources."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The token of the next page of results."
            }
          },
          "description": "Response message for ListServiceRollouts method."
        }
      ]
  servicemanagement.services.setIamPolicy:
    description: |-
      Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-management/reference/rest/v1/services/setIamPolicy
    example:
      inputs: [
        {
          "id": "SetIamPolicyRequest",
          "type": "object",
          "properties": {
            "policy": {
              "id": "Policy",
              "type": "object",
              "properties": {
                "etag": {
                  "type": "string",
                  "format": "byte",
                  "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
                },
                "version": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                },
                "bindings": {
                  "type": "array",
                  "items": {
                    "id": "Binding",
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                      },
                      "members": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                      },
                      "condition": {
                        "id": "Expr",
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                          },
                          "location": {
                            "type": "string",
                            "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                          },
                          "expression": {
                            "type": "string",
                            "description": "Textual representation of an expression in Common Expression Language syntax."
                          },
                          "description": {
                            "type": "string",
                            "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                          }
                        },
                        "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                      }
                    },
                    "description": "Associates `members` with a `role`."
                  },
                  "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
                },
                "auditConfigs": {
                  "type": "array",
                  "items": {
                    "id": "AuditConfig",
                    "type": "object",
                    "properties": {
                      "service": {
                        "type": "string",
                        "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                      },
                      "auditLogConfigs": {
                        "type": "array",
                        "items": {
                          "id": "AuditLogConfig",
                          "type": "object",
                          "properties": {
                            "logType": {
                              "enum": [
                                "LOG_TYPE_UNSPECIFIED",
                                "ADMIN_READ",
                                "DATA_WRITE",
                                "DATA_READ"
                              ],
                              "type": "string",
                              "description": "The log type that this config enables.",
                              "enumDescriptions": [
                                "Default case. Should never be this.",
                                "Admin reads. Example: CloudIAM getIamPolicy",
                                "Data writes. Example: CloudSQL Users create",
                                "Data reads. Example: CloudSQL Users list"
                              ]
                            },
                            "exemptedMembers": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                            }
                          },
                          "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                        },
                        "description": "The configuration for logging of each type of permission."
                      }
                    },
                    "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
                  },
                  "description": "Specifies cloud audit logging configuration for this policy."
                }
              },
              "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
            },
            "updateMask": {
              "type": "string",
              "format": "google-fieldmask",
              "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`"
            }
          },
          "description": "Request message for `SetIamPolicy` method."
        }
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            },
            "auditConfigs": {
              "type": "array",
              "items": {
                "id": "AuditConfig",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                  },
                  "auditLogConfigs": {
                    "type": "array",
                    "items": {
                      "id": "AuditLogConfig",
                      "type": "object",
                      "properties": {
                        "logType": {
                          "enum": [
                            "LOG_TYPE_UNSPECIFIED",
                            "ADMIN_READ",
                            "DATA_WRITE",
                            "DATA_READ"
                          ],
                          "type": "string",
                          "description": "The log type that this config enables.",
                          "enumDescriptions": [
                            "Default case. Should never be this.",
                            "Admin reads. Example: CloudIAM getIamPolicy",
                            "Data writes. Example: CloudSQL Users create",
                            "Data reads. Example: CloudSQL Users list"
                          ]
                        },
                        "exemptedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                        }
                      },
                      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                    },
                    "description": "The configuration for logging of each type of permission."
                  }
                },
                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
              },
              "description": "Specifies cloud audit logging configuration for this policy."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  servicemanagement.services.testIamPermissions:
    description: |-
      Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-management/reference/rest/v1/services/testIamPermissions
    example:
      inputs: [
        {
          "id": "TestIamPermissionsRequest",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
            }
          },
          "description": "Request message for `TestIamPermissions` method."
        }
      ]
      outputs: [
        {
          "id": "TestIamPermissionsResponse",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
            }
          },
          "description": "Response message for `TestIamPermissions` method."
        }
      ]
  servicemanagement.services.undelete:
    description: |-
      Revives a previously deleted managed service. The method restores the service using the configuration at the time the service was deleted. The target service must exist and must have been deleted within the last 30 days. Operation
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-management/reference/rest/v1/services/undelete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  servicenetworking.operations.cancel:
    description: |-
      Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-networking/reference/rest/v1/operations/cancel
    example:
      inputs: [
        {
          "id": "CancelOperationRequest",
          "type": "object",
          "properties": {},
          "description": "The request message for Operations.CancelOperation."
        }
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  servicenetworking.operations.delete:
    description: |-
      Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-networking/reference/rest/v1/operations/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  servicenetworking.operations.get:
    description: |-
      Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-networking/reference/rest/v1/operations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  servicenetworking.operations.list:
    description: |-
      Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-networking/reference/rest/v1/operations/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListOperationsResponse",
          "type": "object",
          "properties": {
            "operations": {
              "type": "array",
              "items": {
                "id": "Operation",
                "type": "object",
                "properties": {
                  "done": {
                    "type": "boolean",
                    "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
                  },
                  "name": {
                    "type": "string",
                    "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
                  },
                  "error": {
                    "id": "Status",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The status code, which should be an enum value of google.rpc.Code."
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object. Contains field @type with type URL."
                          }
                        },
                        "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                      },
                      "message": {
                        "type": "string",
                        "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                      }
                    },
                    "description": "The error result of the operation in case of failure or cancellation."
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "response": {
                    "type": "object",
                    "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  }
                },
                "description": "This resource represents a long-running operation that is the result of a network API call."
              },
              "description": "A list of operations that matches the specified filter in the request."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The standard List next-page token."
            }
          },
          "description": "The response message for Operations.ListOperations."
        }
      ]
  servicenetworking.services.addSubnetwork:
    description: |-
      For service producers, provisions a new subnet in a peered service's shared VPC network in the requested region and with the requested size that's expressed as a CIDR range (number of leading bits of ipV4 network mask). The method checks against the assigned allocated ranges to find a non-conflicting IP address range. The method will reuse a subnet if subsequent calls contain the same subnet name, region, and prefix length. This method will make producer's tenant project to be a shared VPC service project as needed.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-networking/reference/rest/v1/services/addSubnetwork
    example:
      inputs: [
        {
          "id": "AddSubnetworkRequest",
          "type": "object",
          "properties": {
            "region": {
              "type": "string",
              "description": "Required. The name of a [region](/compute/docs/regions-zones) for the subnet, such `europe-west1`."
            },
            "consumer": {
              "type": "string",
              "description": "Required. A resource that represents the service consumer, such as `projects/123456`. The project number can be different from the value in the consumer network parameter. For example, the network might be part of a Shared VPC network. In those cases, Service Networking validates that this resource belongs to that Shared VPC."
            },
            "subnetwork": {
              "type": "string",
              "description": "Required. A name for the new subnet. For information about the naming requirements, see [subnetwork](/compute/docs/reference/rest/v1/subnetworks) in the Compute API documentation."
            },
            "description": {
              "type": "string",
              "description": "Optional. Description of the subnet."
            },
            "ipPrefixLength": {
              "type": "integer",
              "format": "int32",
              "description": "Required. The prefix length of the subnet's IP address range. Use CIDR range notation, such as `30` to provision a subnet with an `x.x.x.x/30` CIDR range. The IP address range is drawn from a pool of available ranges in the service consumer's allocated range."
            },
            "consumerNetwork": {
              "type": "string",
              "description": "Required. The name of the service consumer's VPC network. The network must have an existing private connection that was provisioned through the connections.create method. The name must be in the following format: `projects/{project}/global/networks/{network}`, where {project} is a project number, such as `12345`. {network} is the name of a VPC network in the project."
            },
            "requestedRanges": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Optional. The name of one or more allocated IP address ranges associated with this private service access connection. If no range names are provided all ranges associated with this connection will be considered. If a CIDR range with the specified IP prefix length is not available within these ranges, the call fails."
            },
            "subnetworkUsers": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of members that are granted the `compute.networkUser` role on the subnet."
            },
            "requestedAddress": {
              "type": "string",
              "description": "Optional. The starting address of a range. The address must be a valid IPv4 address in the x.x.x.x format. This value combined with the IP prefix range is the CIDR range for the subnet. The range must be within the allocated range that is assigned to the private connection. If the CIDR range isn't available, the call fails."
            },
            "secondaryIpRangeSpecs": {
              "type": "array",
              "items": {
                "id": "SecondaryIpRangeSpec",
                "type": "object",
                "properties": {
                  "rangeName": {
                    "type": "string",
                    "description": "Required. A name for the secondary IP range. The name must be 1-63 characters long, and comply with RFC1035. The name must be unique within the subnetwork."
                  },
                  "ipPrefixLength": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Required. The prefix length of the secondary IP range. Use CIDR range notation, such as `30` to provision a secondary IP range with an `x.x.x.x/30` CIDR range. The IP address range is drawn from a pool of available ranges in the service consumer's allocated range."
                  },
                  "requestedAddress": {
                    "type": "string",
                    "description": "Optional. The starting address of a range. The address must be a valid IPv4 address in the x.x.x.x format. This value combined with the IP prefix range is the CIDR range for the secondary IP range. The range must be within the allocated range that is assigned to the private connection. If the CIDR range isn't available, the call fails."
                  }
                }
              },
              "description": "Optional. A list of secondary IP ranges to be created within the new subnetwork."
            }
          },
          "description": "Request to create a subnetwork in a previously peered service network."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  servicenetworking.services.connections.create:
    description: |-
      Creates a private connection that establishes a VPC Network Peering connection to a VPC network in the service producer's organization. The administrator of the service consumer's VPC network invokes this method. The administrator must assign one or more allocated IP ranges for provisioning subnetworks in the service producer's VPC network. This connection is used for all supported services in the service producer's organization, so it only needs to be invoked once.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-networking/reference/rest/v1/services.connections/create
    example:
      inputs: [
        {
          "id": "Connection",
          "type": "object",
          "properties": {
            "network": {
              "type": "string",
              "description": "The name of service consumer's VPC network that's connected with service producer network, in the following format: `projects/{project}/global/networks/{network}`. `{project}` is a project number, such as in `12345` that includes the VPC service consumer's VPC network. `{network}` is the name of the service consumer's VPC network."
            },
            "peering": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The name of the VPC Network Peering connection that was created by the service producer."
            },
            "service": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The name of the peering service that's associated with this connection, in the following format: `services/{service name}`."
            },
            "reservedPeeringRanges": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The name of one or more allocated IP address ranges for this service producer of type `PEERING`. Note that invoking CreateConnection method with a different range when connection is already established will not modify already provisioned service producer subnetworks. If CreateConnection method is invoked repeatedly to reconnect when peering connection had been disconnected on the consumer side, leaving this field empty will restore previously allocated IP ranges."
            }
          },
          "description": "Represents a private connection resource. A private connection is implemented as a VPC Network Peering connection between a service producer's VPC network and a service consumer's VPC network."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  servicenetworking.services.connections.deleteConnection:
    description: |-
      Deletes a private service access connection.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-networking/reference/rest/v1/services.connections/deleteConnection
    example:
      inputs: [
        {
          "id": "DeleteConnectionRequest",
          "type": "object",
          "properties": {
            "consumerNetwork": {
              "type": "string",
              "description": "Required. The network that the consumer is using to connect with services. Must be in the form of projects/{project}/global/networks/{network} {project} is a project number, as in '12345' {network} is a network name."
            }
          },
          "description": "Request to delete a private service access connection. The call will fail if there are any managed service instances using this connection."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  servicenetworking.services.connections.list:
    description: |-
      List the private connections that are configured in a service consumer's VPC network.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-networking/reference/rest/v1/services.connections/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListConnectionsResponse",
          "type": "object",
          "properties": {
            "connections": {
              "type": "array",
              "items": {
                "id": "Connection",
                "type": "object",
                "properties": {
                  "network": {
                    "type": "string",
                    "description": "The name of service consumer's VPC network that's connected with service producer network, in the following format: `projects/{project}/global/networks/{network}`. `{project}` is a project number, such as in `12345` that includes the VPC service consumer's VPC network. `{network}` is the name of the service consumer's VPC network."
                  },
                  "peering": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The name of the VPC Network Peering connection that was created by the service producer."
                  },
                  "service": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The name of the peering service that's associated with this connection, in the following format: `services/{service name}`."
                  },
                  "reservedPeeringRanges": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The name of one or more allocated IP address ranges for this service producer of type `PEERING`. Note that invoking CreateConnection method with a different range when connection is already established will not modify already provisioned service producer subnetworks. If CreateConnection method is invoked repeatedly to reconnect when peering connection had been disconnected on the consumer side, leaving this field empty will restore previously allocated IP ranges."
                  }
                },
                "description": "Represents a private connection resource. A private connection is implemented as a VPC Network Peering connection between a service producer's VPC network and a service consumer's VPC network."
              },
              "description": "The list of Connections."
            }
          },
          "description": "ListConnectionsResponse is the response to list peering states for the given service and consumer project."
        }
      ]
  servicenetworking.services.connections.patch:
    description: |-
      Updates the allocated ranges that are assigned to a connection.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-networking/reference/rest/v1/services.connections/patch
    example:
      inputs: [
        {
          "id": "Connection",
          "type": "object",
          "properties": {
            "network": {
              "type": "string",
              "description": "The name of service consumer's VPC network that's connected with service producer network, in the following format: `projects/{project}/global/networks/{network}`. `{project}` is a project number, such as in `12345` that includes the VPC service consumer's VPC network. `{network}` is the name of the service consumer's VPC network."
            },
            "peering": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The name of the VPC Network Peering connection that was created by the service producer."
            },
            "service": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The name of the peering service that's associated with this connection, in the following format: `services/{service name}`."
            },
            "reservedPeeringRanges": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The name of one or more allocated IP address ranges for this service producer of type `PEERING`. Note that invoking CreateConnection method with a different range when connection is already established will not modify already provisioned service producer subnetworks. If CreateConnection method is invoked repeatedly to reconnect when peering connection had been disconnected on the consumer side, leaving this field empty will restore previously allocated IP ranges."
            }
          },
          "description": "Represents a private connection resource. A private connection is implemented as a VPC Network Peering connection between a service producer's VPC network and a service consumer's VPC network."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  servicenetworking.services.disableVpcServiceControls:
    description: |-
      Disables VPC service controls for a connection.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-networking/reference/rest/v1/services/disableVpcServiceControls
    example:
      inputs: [
        {
          "id": "DisableVpcServiceControlsRequest",
          "type": "object",
          "properties": {
            "consumerNetwork": {
              "type": "string",
              "description": "Required. The network that the consumer is using to connect with services. Must be in the form of projects/{project}/global/networks/{network} {project} is a project number, as in '12345' {network} is network name."
            }
          },
          "description": "Request to disable VPC service controls."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  servicenetworking.services.dnsRecordSets.add:
    description: |-
      Service producers can use this method to add DNS record sets to private DNS zones in the shared producer host project.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-networking/reference/rest/v1/services.dnsRecordSets/add
    example:
      inputs: [
        {
          "id": "AddDnsRecordSetRequest",
          "type": "object",
          "properties": {
            "zone": {
              "type": "string",
              "description": "Required. The name of the private DNS zone in the shared producer host project to which the record set will be added."
            },
            "dnsRecordSet": {
              "id": "DnsRecordSet",
              "type": "object",
              "properties": {
                "ttl": {
                  "type": "string",
                  "format": "google-duration",
                  "description": "Required. The period of time for which this RecordSet can be cached by resolvers."
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Required. As defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1) for examples see https://cloud.google.com/dns/records/json-record."
                },
                "type": {
                  "type": "string",
                  "description": "Required. The identifier of a supported record type."
                },
                "domain": {
                  "type": "string",
                  "description": "Required. The DNS or domain name of the record set, e.g. `test.example.com`."
                }
              },
              "description": "Required. The DNS record set to add."
            },
            "consumerNetwork": {
              "type": "string",
              "description": "Required. The network that the consumer is using to connect with services. Must be in the form of projects/{project}/global/networks/{network} {project} is the project number, as in '12345' {network} is the network name."
            }
          },
          "description": "Request to add a record set to a private managed DNS zone in the shared producer host project."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  servicenetworking.services.dnsRecordSets.remove:
    description: |-
      Service producers can use this method to remove DNS record sets from private DNS zones in the shared producer host project.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-networking/reference/rest/v1/services.dnsRecordSets/remove
    example:
      inputs: [
        {
          "id": "RemoveDnsRecordSetRequest",
          "type": "object",
          "properties": {
            "zone": {
              "type": "string",
              "description": "Required. The name of the private DNS zone in the shared producer host project from which the record set will be removed."
            },
            "dnsRecordSet": {
              "id": "DnsRecordSet",
              "type": "object",
              "properties": {
                "ttl": {
                  "type": "string",
                  "format": "google-duration",
                  "description": "Required. The period of time for which this RecordSet can be cached by resolvers."
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Required. As defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1) for examples see https://cloud.google.com/dns/records/json-record."
                },
                "type": {
                  "type": "string",
                  "description": "Required. The identifier of a supported record type."
                },
                "domain": {
                  "type": "string",
                  "description": "Required. The DNS or domain name of the record set, e.g. `test.example.com`."
                }
              },
              "description": "Required. The DNS record set to remove."
            },
            "consumerNetwork": {
              "type": "string",
              "description": "Required. The network that the consumer is using to connect with services. Must be in the form of projects/{project}/global/networks/{network} {project} is the project number, as in '12345' {network} is the network name."
            }
          },
          "description": "Request to remove a record set from a private managed DNS zone in the shared producer host project. The name, type, ttl, and data values must all exactly match an existing record set in the specified zone."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  servicenetworking.services.dnsRecordSets.update:
    description: |-
      Service producers can use this method to update DNS record sets from private DNS zones in the shared producer host project.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-networking/reference/rest/v1/services.dnsRecordSets/update
    example:
      inputs: [
        {
          "id": "UpdateDnsRecordSetRequest",
          "type": "object",
          "properties": {
            "zone": {
              "type": "string",
              "description": "Required. The name of the private DNS zone in the shared producer host project from which the record set will be removed."
            },
            "consumerNetwork": {
              "type": "string",
              "description": "Required. The network that the consumer is using to connect with services. Must be in the form of projects/{project}/global/networks/{network} {project} is the project number, as in '12345' {network} is the network name."
            },
            "newDnsRecordSet": {
              "id": "DnsRecordSet",
              "type": "object",
              "properties": {
                "ttl": {
                  "type": "string",
                  "format": "google-duration",
                  "description": "Required. The period of time for which this RecordSet can be cached by resolvers."
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Required. As defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1) for examples see https://cloud.google.com/dns/records/json-record."
                },
                "type": {
                  "type": "string",
                  "description": "Required. The identifier of a supported record type."
                },
                "domain": {
                  "type": "string",
                  "description": "Required. The DNS or domain name of the record set, e.g. `test.example.com`."
                }
              },
              "description": "Required. The new values that the DNS record set should be updated to hold."
            },
            "existingDnsRecordSet": {
              "id": "DnsRecordSet",
              "type": "object",
              "properties": {
                "ttl": {
                  "type": "string",
                  "format": "google-duration",
                  "description": "Required. The period of time for which this RecordSet can be cached by resolvers."
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Required. As defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1) for examples see https://cloud.google.com/dns/records/json-record."
                },
                "type": {
                  "type": "string",
                  "description": "Required. The identifier of a supported record type."
                },
                "domain": {
                  "type": "string",
                  "description": "Required. The DNS or domain name of the record set, e.g. `test.example.com`."
                }
              },
              "description": "Required. The existing DNS record set to update."
            }
          },
          "description": "Request to update a record set from a private managed DNS zone in the shared producer host project. The name, type, ttl, and data values of the existing record set must all exactly match an existing record set in the specified zone."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  servicenetworking.services.dnsZones.add:
    description: |-
      Service producers can use this method to add private DNS zones in the shared producer host project and matching peering zones in the consumer project.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-networking/reference/rest/v1/services.dnsZones/add
    example:
      inputs: [
        {
          "id": "AddDnsZoneRequest",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Required. The name for both the private zone in the shared producer host project and the peering zone in the consumer project. Must be unique within both projects. The name must be 1-63 characters long, must begin with a letter, end with a letter or digit, and only contain lowercase letters, digits or dashes."
            },
            "dnsSuffix": {
              "type": "string",
              "description": "Required. The DNS name suffix for the zones e.g. `example.com`."
            },
            "consumerNetwork": {
              "type": "string",
              "description": "Required. The network that the consumer is using to connect with services. Must be in the form of projects/{project}/global/networks/{network} {project} is the project number, as in '12345' {network} is the network name."
            }
          },
          "description": "Request to add a private managed DNS zone in the shared producer host project and a matching DNS peering zone in the consumer project."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  servicenetworking.services.dnsZones.remove:
    description: |-
      Service producers can use this method to remove private DNS zones in the shared producer host project and matching peering zones in the consumer project.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-networking/reference/rest/v1/services.dnsZones/remove
    example:
      inputs: [
        {
          "id": "RemoveDnsZoneRequest",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Required. The name for both the private zone in the shared producer host project and the peering zone in the consumer project."
            },
            "consumerNetwork": {
              "type": "string",
              "description": "Required. The network that the consumer is using to connect with services. Must be in the form of projects/{project}/global/networks/{network} {project} is the project number, as in '12345' {network} is the network name."
            }
          },
          "description": "Request to remove a private managed DNS zone in the shared producer host project and a matching DNS peering zone in the consumer project."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  servicenetworking.services.enableVpcServiceControls:
    description: |-
      Enables VPC service controls for a connection.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-networking/reference/rest/v1/services/enableVpcServiceControls
    example:
      inputs: [
        {
          "id": "EnableVpcServiceControlsRequest",
          "type": "object",
          "properties": {
            "consumerNetwork": {
              "type": "string",
              "description": "Required. The network that the consumer is using to connect with services. Must be in the form of projects/{project}/global/networks/{network} {project} is a project number, as in '12345' {network} is network name."
            }
          },
          "description": "Request to enable VPC service controls."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  servicenetworking.services.projects.global.networks.get:
    description: |-
      Service producers use this method to get the configuration of their connection including the import/export of custom routes and subnetwork routes with public IP.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-networking/reference/rest/v1/services.projects.global.networks/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ConsumerConfig",
          "type": "object",
          "properties": {
            "reservedRanges": {
              "type": "array",
              "items": {
                "id": "GoogleCloudServicenetworkingV1ConsumerConfigReservedRange",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the reserved range."
                  },
                  "address": {
                    "type": "string",
                    "description": "The starting address of the reserved range. The address must be a valid IPv4 address in the x.x.x.x format. This value combined with the IP prefix length is the CIDR range for the reserved range."
                  },
                  "ipPrefixLength": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The prefix length of the reserved range."
                  }
                },
                "description": "Allocated IP address ranges for this private service access connection."
              },
              "readOnly": true,
              "description": "Output only. The reserved ranges associated with this private service access connection."
            },
            "producerNetwork": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The VPC host network that is used to host managed service instances. In the format, projects/{project}/global/networks/{network} where {project} is the project number e.g. '12345' and {network} is the network name."
            },
            "consumerExportCustomRoutes": {
              "type": "boolean",
              "description": "Export custom routes flag value for peering from consumer to producer."
            },
            "consumerImportCustomRoutes": {
              "type": "boolean",
              "description": "Import custom routes flag value for peering from consumer to producer."
            },
            "producerExportCustomRoutes": {
              "type": "boolean",
              "description": "Export custom routes flag value for peering from producer to consumer."
            },
            "producerImportCustomRoutes": {
              "type": "boolean",
              "description": "Import custom routes flag value for peering from producer to consumer."
            },
            "vpcScReferenceArchitectureEnabled": {
              "type": "boolean",
              "readOnly": true,
              "description": "Output only. Indicates whether the VPC Service Controls reference architecture is configured for the producer VPC host network."
            },
            "consumerExportSubnetRoutesWithPublicIp": {
              "type": "boolean",
              "description": "Export subnet routes with public ip flag value for peering from consumer to producer."
            },
            "consumerImportSubnetRoutesWithPublicIp": {
              "type": "boolean",
              "description": "Import subnet routes with public ip flag value for peering from consumer to producer."
            },
            "producerExportSubnetRoutesWithPublicIp": {
              "type": "boolean",
              "description": "Export subnet routes with public ip flag value for peering from producer to consumer."
            },
            "producerImportSubnetRoutesWithPublicIp": {
              "type": "boolean",
              "description": "Import subnet routes with public ip flag value for peering from producer to consumer."
            }
          },
          "description": "Configuration information for a private service access connection."
        }
      ]
  servicenetworking.services.projects.global.networks.peeredDnsDomains.create:
    description: |-
      Creates a peered DNS domain which sends requests for records in given namespace originating in the service producer VPC network to the consumer VPC network to be resolved.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-networking/reference/rest/v1/services.projects.global.networks.peeredDnsDomains/create
    example:
      inputs: [
        {
          "id": "PeeredDnsDomain",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "User assigned name for this resource. Must be unique within the consumer network. The name must be 1-63 characters long, must begin with a letter, end with a letter or digit, and only contain lowercase letters, digits or dashes."
            },
            "dnsSuffix": {
              "type": "string",
              "description": "The DNS domain name suffix e.g. `example.com.`."
            }
          },
          "description": "DNS domain suffix for which requests originating in the producer VPC network are resolved in the associated consumer VPC network."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  servicenetworking.services.projects.global.networks.peeredDnsDomains.delete:
    description: |-
      Deletes a peered DNS domain.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-networking/reference/rest/v1/services.projects.global.networks.peeredDnsDomains/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  servicenetworking.services.projects.global.networks.peeredDnsDomains.list:
    description: |-
      Lists peered DNS domains for a connection.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-networking/reference/rest/v1/services.projects.global.networks.peeredDnsDomains/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListPeeredDnsDomainsResponse",
          "type": "object",
          "properties": {
            "peeredDnsDomains": {
              "type": "array",
              "items": {
                "id": "PeeredDnsDomain",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User assigned name for this resource. Must be unique within the consumer network. The name must be 1-63 characters long, must begin with a letter, end with a letter or digit, and only contain lowercase letters, digits or dashes."
                  },
                  "dnsSuffix": {
                    "type": "string",
                    "description": "The DNS domain name suffix e.g. `example.com.`."
                  }
                },
                "description": "DNS domain suffix for which requests originating in the producer VPC network are resolved in the associated consumer VPC network."
              },
              "description": "The list of peered DNS domains."
            }
          },
          "description": "Response to list peered DNS domains for a given connection."
        }
      ]
  servicenetworking.services.projects.global.networks.updateConsumerConfig:
    description: |-
      Service producers use this method to update the configuration of their connection including the import/export of custom routes and subnetwork routes with public IP.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-networking/reference/rest/v1/services.projects.global.networks/updateConsumerConfig
    example:
      inputs: [
        {
          "id": "UpdateConsumerConfigRequest",
          "type": "object",
          "properties": {
            "consumerConfig": {
              "id": "ConsumerConfig",
              "type": "object",
              "properties": {
                "reservedRanges": {
                  "type": "array",
                  "items": {
                    "id": "GoogleCloudServicenetworkingV1ConsumerConfigReservedRange",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the reserved range."
                      },
                      "address": {
                        "type": "string",
                        "description": "The starting address of the reserved range. The address must be a valid IPv4 address in the x.x.x.x format. This value combined with the IP prefix length is the CIDR range for the reserved range."
                      },
                      "ipPrefixLength": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The prefix length of the reserved range."
                      }
                    },
                    "description": "Allocated IP address ranges for this private service access connection."
                  },
                  "readOnly": true,
                  "description": "Output only. The reserved ranges associated with this private service access connection."
                },
                "producerNetwork": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. The VPC host network that is used to host managed service instances. In the format, projects/{project}/global/networks/{network} where {project} is the project number e.g. '12345' and {network} is the network name."
                },
                "consumerExportCustomRoutes": {
                  "type": "boolean",
                  "description": "Export custom routes flag value for peering from consumer to producer."
                },
                "consumerImportCustomRoutes": {
                  "type": "boolean",
                  "description": "Import custom routes flag value for peering from consumer to producer."
                },
                "producerExportCustomRoutes": {
                  "type": "boolean",
                  "description": "Export custom routes flag value for peering from producer to consumer."
                },
                "producerImportCustomRoutes": {
                  "type": "boolean",
                  "description": "Import custom routes flag value for peering from producer to consumer."
                },
                "vpcScReferenceArchitectureEnabled": {
                  "type": "boolean",
                  "readOnly": true,
                  "description": "Output only. Indicates whether the VPC Service Controls reference architecture is configured for the producer VPC host network."
                },
                "consumerExportSubnetRoutesWithPublicIp": {
                  "type": "boolean",
                  "description": "Export subnet routes with public ip flag value for peering from consumer to producer."
                },
                "consumerImportSubnetRoutesWithPublicIp": {
                  "type": "boolean",
                  "description": "Import subnet routes with public ip flag value for peering from consumer to producer."
                },
                "producerExportSubnetRoutesWithPublicIp": {
                  "type": "boolean",
                  "description": "Export subnet routes with public ip flag value for peering from producer to consumer."
                },
                "producerImportSubnetRoutesWithPublicIp": {
                  "type": "boolean",
                  "description": "Import subnet routes with public ip flag value for peering from producer to consumer."
                }
              },
              "description": "Configuration information for a private service access connection."
            }
          },
          "description": "Request to update the configuration of a service networking connection including the import/export of custom routes and subnetwork routes with public IP."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  servicenetworking.services.roles.add:
    description: |-
      Service producers can use this method to add roles in the shared VPC host project. Each role is bound to the provided member. Each role must be selected from within an allowlisted set of roles. Each role is applied at only the granularity specified in the allowlist.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-networking/reference/rest/v1/services.roles/add
    example:
      inputs: [
        {
          "id": "AddRolesRequest",
          "type": "object",
          "properties": {
            "policyBinding": {
              "type": "array",
              "items": {
                "id": "PolicyBinding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Required. Role to apply. Only allowlisted roles can be used at the specified granularity. The role must be one of the following: - 'roles/container.hostServiceAgentUser' applied on the shared VPC host project - 'roles/compute.securityAdmin' applied on the shared VPC host project"
                  },
                  "member": {
                    "type": "string",
                    "description": "Required. Member to bind the role with. See /iam/docs/reference/rest/v1/Policy#Binding for how to format each member. Eg. - user:myuser@mydomain.com - serviceAccount:my-service-account@app.gserviceaccount.com"
                  }
                },
                "description": "Grouping of IAM role and IAM member."
              },
              "description": "Required. List of policy bindings to add to shared VPC host project."
            },
            "consumerNetwork": {
              "type": "string",
              "description": "Required. The network that the consumer is using to connect with services. Must be in the form of projects/{project}/global/networks/{network} {project} is a project number, as in '12345' {network} is a network name."
            }
          },
          "description": "Request for AddRoles to allow Service Producers to add roles in the shared VPC host project for them to use."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  servicenetworking.services.searchRange:
    description: |-
      Service producers can use this method to find a currently unused range within consumer allocated ranges. This returned range is not reserved, and not guaranteed to remain unused. It will validate previously provided allocated ranges, find non-conflicting sub-range of requested size (expressed in number of leading bits of ipv4 network mask, as in CIDR range notation).
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-networking/reference/rest/v1/services/searchRange
    example:
      inputs: [
        {
          "id": "SearchRangeRequest",
          "type": "object",
          "properties": {
            "network": {
              "type": "string",
              "description": "Network name in the consumer project. This network must have been already peered with a shared VPC network using CreateConnection method. Must be in a form 'projects/{project}/global/networks/{network}'. {project} is a project number, as in '12345' {network} is network name."
            },
            "ipPrefixLength": {
              "type": "integer",
              "format": "int32",
              "description": "Required. The prefix length of the IP range. Use usual CIDR range notation. For example, '30' to find unused x.x.x.x/30 CIDR range. Actual range will be determined using allocated range for the consumer peered network and returned in the result."
            }
          },
          "description": "Request to search for an unused range within allocated ranges."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  servicenetworking.services.validate:
    description: |-
      Service producers use this method to validate if the consumer provided network, project and requested range are valid. This allows them to use a fail-fast mechanism for consumer requests, and not have to wait for AddSubnetwork operation completion to determine if user request is invalid.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/service-infrastructure/docs/service-networking/reference/rest/v1/services/validate
    example:
      inputs: [
        {
          "id": "ValidateConsumerConfigRequest",
          "type": "object",
          "properties": {
            "consumerNetwork": {
              "type": "string",
              "description": "Required. The network that the consumer is using to connect with services. Must be in the form of projects/{project}/global/networks/{network} {project} is a project number, as in '12345' {network} is network name."
            },
            "consumerProject": {
              "id": "ConsumerProject",
              "type": "object",
              "properties": {
                "projectNum": {
                  "type": "string",
                  "format": "int64",
                  "description": "Required. Project number of the consumer that is launching the service instance. It can own the network that is peered with Google or, be a service project in an XPN where the host project has the network."
                }
              },
              "description": "NETWORK_NOT_IN_CONSUMERS_PROJECT, NETWORK_NOT_IN_CONSUMERS_HOST_PROJECT, and HOST_PROJECT_NOT_FOUND are done when consumer_project is provided."
            },
            "validateNetwork": {
              "type": "boolean",
              "description": "The validations will be performed in the order listed in the ValidationError enum. The first failure will return. If a validation is not requested, then the next one will be performed. SERVICE_NETWORKING_NOT_ENABLED and NETWORK_NOT_PEERED checks are performed for all requests where validation is requested. NETWORK_NOT_FOUND and NETWORK_DISCONNECTED checks are done for requests that have validate_network set to true."
            },
            "rangeReservation": {
              "id": "RangeReservation",
              "type": "object",
              "properties": {
                "ipPrefixLength": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Required. The size of the desired subnet. Use usual CIDR range notation. For example, '30' to find unused x.x.x.x/30 CIDR range. The goal is to determine if one of the allocated ranges has enough free space for a subnet of the requested size."
                },
                "requestedRanges": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Optional. The name of one or more allocated IP address ranges associated with this private service access connection. If no range names are provided all ranges associated with this connection will be considered. If a CIDR range with the specified IP prefix length is not available within these ranges the validation fails."
                },
                "subnetworkCandidates": {
                  "type": "array",
                  "items": {
                    "id": "Subnetwork",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Subnetwork name. See https://cloud.google.com/compute/docs/vpc/"
                      },
                      "region": {
                        "type": "string",
                        "description": "GCP region where the subnetwork is located."
                      },
                      "network": {
                        "type": "string",
                        "description": "In the Shared VPC host project, the VPC network that's peered with the consumer network. For example: `projects/1234321/global/networks/host-network`"
                      },
                      "ipCidrRange": {
                        "type": "string",
                        "description": "Subnetwork CIDR range in `10.x.x.x/y` format."
                      },
                      "outsideAllocation": {
                        "type": "boolean",
                        "description": "This is a discovered subnet that is not within the current consumer allocated ranges."
                      },
                      "secondaryIpRanges": {
                        "type": "array",
                        "items": {
                          "id": "SecondaryIpRange",
                          "type": "object",
                          "properties": {
                            "rangeName": {
                              "type": "string",
                              "description": "Name of the secondary IP range."
                            },
                            "ipCidrRange": {
                              "type": "string",
                              "description": "Secondary IP CIDR range in `x.x.x.x/y` format."
                            }
                          }
                        },
                        "description": "List of secondary IP ranges in this subnetwork."
                      }
                    },
                    "description": "Represents a subnet that was created or discovered by a private access management service."
                  },
                  "description": "Optional. List of subnetwork candidates to validate. The required input fields are `name`, `network`, and `region`. Subnetworks from this list which exist will be returned in the response with the `ip_cidr_range`, `secondary_ip_cider_ranges`, and `outside_allocation` fields set."
                },
                "secondaryRangeIpPrefixLengths": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "description": "Optional. The size of the desired secondary ranges for the subnet. Use usual CIDR range notation. For example, '30' to find unused x.x.x.x/30 CIDR range. The goal is to determine that the allocated ranges have enough free space for all the requested secondary ranges."
                }
              },
              "description": "RANGES_EXHAUSTED, RANGES_EXHAUSTED, and RANGES_DELETED_LATER are done when range_reservation is provided."
            }
          }
        }
      ]
      outputs: [
        {
          "id": "ValidateConsumerConfigResponse",
          "type": "object",
          "properties": {
            "isValid": {
              "type": "boolean",
              "description": "Indicates whether all the requested validations passed."
            },
            "validationError": {
              "enum": [
                "VALIDATION_ERROR_UNSPECIFIED",
                "VALIDATION_NOT_REQUESTED",
                "SERVICE_NETWORKING_NOT_ENABLED",
                "NETWORK_NOT_FOUND",
                "NETWORK_NOT_PEERED",
                "NETWORK_PEERING_DELETED",
                "NETWORK_NOT_IN_CONSUMERS_PROJECT",
                "NETWORK_NOT_IN_CONSUMERS_HOST_PROJECT",
                "HOST_PROJECT_NOT_FOUND",
                "CONSUMER_PROJECT_NOT_SERVICE_PROJECT",
                "RANGES_EXHAUSTED",
                "RANGES_NOT_RESERVED",
                "RANGES_DELETED_LATER",
                "COMPUTE_API_NOT_ENABLED"
              ],
              "type": "string",
              "description": "The first validation which failed.",
              "enumDescriptions": [
                "",
                "In case none of the validations are requested.",
                "",
                "The network provided by the consumer does not exist.",
                "The network has not been peered with the producer org.",
                "The peering was created and later deleted.",
                "The network is a regular VPC but the network is not in the consumer's project.",
                "The consumer project is a service project, and network is a shared VPC, but the network is not in the host project of this consumer project.",
                "The host project associated with the consumer project was not found.",
                "The consumer project is not a service project for the specified host project.",
                "The reserved IP ranges do not have enough space to create a subnet of desired size.",
                "The IP ranges were not reserved.",
                "The IP ranges were reserved but deleted later.",
                "The consumer project does not have the compute api enabled."
              ]
            },
            "existingSubnetworkCandidates": {
              "type": "array",
              "items": {
                "id": "Subnetwork",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Subnetwork name. See https://cloud.google.com/compute/docs/vpc/"
                  },
                  "region": {
                    "type": "string",
                    "description": "GCP region where the subnetwork is located."
                  },
                  "network": {
                    "type": "string",
                    "description": "In the Shared VPC host project, the VPC network that's peered with the consumer network. For example: `projects/1234321/global/networks/host-network`"
                  },
                  "ipCidrRange": {
                    "type": "string",
                    "description": "Subnetwork CIDR range in `10.x.x.x/y` format."
                  },
                  "outsideAllocation": {
                    "type": "boolean",
                    "description": "This is a discovered subnet that is not within the current consumer allocated ranges."
                  },
                  "secondaryIpRanges": {
                    "type": "array",
                    "items": {
                      "id": "SecondaryIpRange",
                      "type": "object",
                      "properties": {
                        "rangeName": {
                          "type": "string",
                          "description": "Name of the secondary IP range."
                        },
                        "ipCidrRange": {
                          "type": "string",
                          "description": "Secondary IP CIDR range in `x.x.x.x/y` format."
                        }
                      }
                    },
                    "description": "List of secondary IP ranges in this subnetwork."
                  }
                },
                "description": "Represents a subnet that was created or discovered by a private access management service."
              },
              "description": "List of subnetwork candidates from the request which exist with the `ip_cidr_range`, `secondary_ip_cider_ranges`, and `outside_allocation` fields set."
            }
          }
        }
      ]