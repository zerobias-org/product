Product:
  name: GCP Asset Inventory
  versions: [1.0.0]
  package: google.gcp.assetinventory
  description: |-
    Cloud Asset
  link: https://cloud.google.com/asset-inventory
  contentType: json
Operations:
  assets.list:
    description: |-
      Lists assets with time and resource types and returns paged results in response.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/asset-inventory/docs/reference/rest/v1/assets/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListAssetsResponse",
          "type": "object",
          "properties": {
            "assets": {
              "type": "array",
              "items": {
                "id": "Asset",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The full name of the asset. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1` See [Resource names](https://cloud.google.com/apis/design/resource_names#full_resource_name) for more information."
                  },
                  "resource": {
                    "id": "Resource",
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "The content of the resource, in which some sensitive fields are removed and may not be present.",
                        "additionalProperties": {
                          "type": "any",
                          "description": "Properties of the object."
                        }
                      },
                      "parent": {
                        "type": "string",
                        "description": "The full name of the immediate parent of this resource. See [Resource Names](https://cloud.google.com/apis/design/resource_names#full_resource_name) for more information. For Google Cloud assets, this value is the parent resource defined in the [Cloud IAM policy hierarchy](https://cloud.google.com/iam/docs/overview#policy_hierarchy). Example: `//cloudresourcemanager.googleapis.com/projects/my_project_123` For third-party assets, this field may be set differently."
                      },
                      "version": {
                        "type": "string",
                        "description": "The API version. Example: `v1`"
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource in Google Cloud, such as its zone and region. For more information, see https://cloud.google.com/about/locations/."
                      },
                      "resourceUrl": {
                        "type": "string",
                        "description": "The REST URL for accessing the resource. An HTTP `GET` request using this URL returns the resource itself. Example: `https://cloudresourcemanager.googleapis.com/v1/projects/my-project-123` This value is unspecified for resources without a REST API."
                      },
                      "discoveryName": {
                        "type": "string",
                        "description": "The JSON schema name listed in the discovery document. Example: `Project` This value is unspecified for resources that do not have an API based on a discovery document, such as Cloud Bigtable."
                      },
                      "discoveryDocumentUri": {
                        "type": "string",
                        "description": "The URL of the discovery document containing the resource's JSON schema. Example: `https://www.googleapis.com/discovery/v1/apis/compute/v1/rest` This value is unspecified for resources that do not have an API based on a discovery document, such as Cloud Bigtable."
                      }
                    },
                    "description": "A representation of the resource."
                  },
                  "ancestors": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The ancestry path of an asset in Google Cloud [resource hierarchy](https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy), represented as a list of relative resource names. An ancestry path starts with the closest ancestor in the hierarchy and ends at root. If the asset is a project, folder, or organization, the ancestry path starts from the asset itself. Example: `[\"projects/123456789\", \"folders/5432\", \"organizations/1234\"]`"
                  },
                  "assetType": {
                    "type": "string",
                    "description": "The type of the asset. Example: `compute.googleapis.com/Disk` See [Supported asset types](https://cloud.google.com/asset-inventory/docs/supported-asset-types) for more information."
                  },
                  "iamPolicy": {
                    "id": "Policy",
                    "type": "object",
                    "properties": {
                      "etag": {
                        "type": "string",
                        "format": "byte",
                        "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
                      },
                      "version": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                      },
                      "bindings": {
                        "type": "array",
                        "items": {
                          "id": "Binding",
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                            },
                            "members": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                            },
                            "condition": {
                              "id": "Expr",
                              "type": "object",
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                                },
                                "location": {
                                  "type": "string",
                                  "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                                },
                                "expression": {
                                  "type": "string",
                                  "description": "Textual representation of an expression in Common Expression Language syntax."
                                },
                                "description": {
                                  "type": "string",
                                  "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                                }
                              },
                              "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                            }
                          },
                          "description": "Associates `members` with a `role`."
                        },
                        "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
                      },
                      "auditConfigs": {
                        "type": "array",
                        "items": {
                          "id": "AuditConfig",
                          "type": "object",
                          "properties": {
                            "service": {
                              "type": "string",
                              "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                            },
                            "auditLogConfigs": {
                              "type": "array",
                              "items": {
                                "id": "AuditLogConfig",
                                "type": "object",
                                "properties": {
                                  "logType": {
                                    "enum": [
                                      "LOG_TYPE_UNSPECIFIED",
                                      "ADMIN_READ",
                                      "DATA_WRITE",
                                      "DATA_READ"
                                    ],
                                    "type": "string",
                                    "description": "The log type that this config enables.",
                                    "enumDescriptions": [
                                      "Default case. Should never be this.",
                                      "Admin reads. Example: CloudIAM getIamPolicy",
                                      "Data writes. Example: CloudSQL Users create",
                                      "Data reads. Example: CloudSQL Users list"
                                    ]
                                  },
                                  "exemptedMembers": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                                  }
                                },
                                "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                              },
                              "description": "The configuration for logging of each type of permission."
                            }
                          },
                          "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
                        },
                        "description": "Specifies cloud audit logging configuration for this policy."
                      }
                    },
                    "description": "A representation of the Cloud IAM policy set on a Google Cloud resource. There can be a maximum of one Cloud IAM policy set on any given resource. In addition, Cloud IAM policies inherit their granted access scope from any policies set on parent resources in the resource hierarchy. Therefore, the effectively policy is the union of both the policy set on this resource and each policy set on all of the resource's ancestry resource levels in the hierarchy. See [this topic](https://cloud.google.com/iam/docs/policies#inheritance) for more information."
                  },
                  "orgPolicy": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudOrgpolicyV1Policy",
                      "type": "object",
                      "properties": {
                        "etag": {
                          "type": "string",
                          "format": "byte",
                          "description": "An opaque tag indicating the current version of the `Policy`, used for concurrency control. When the `Policy` is returned from either a `GetPolicy` or a `ListOrgPolicy` request, this `etag` indicates the version of the current `Policy` to use when executing a read-modify-write loop. When the `Policy` is returned from a `GetEffectivePolicy` request, the `etag` will be unset. When the `Policy` is used in a `SetOrgPolicy` method, use the `etag` value that was returned from a `GetOrgPolicy` request as part of a read-modify-write loop for concurrency control. Not setting the `etag`in a `SetOrgPolicy` request will result in an unconditional write of the `Policy`."
                        },
                        "version": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Version of the `Policy`. Default version is 0;"
                        },
                        "constraint": {
                          "type": "string",
                          "description": "The name of the `Constraint` the `Policy` is configuring, for example, `constraints/serviceuser.services`. A [list of available constraints](/resource-manager/docs/organization-policy/org-policy-constraints) is available. Immutable after creation."
                        },
                        "listPolicy": {
                          "id": "GoogleCloudOrgpolicyV1ListPolicy",
                          "type": "object",
                          "properties": {
                            "allValues": {
                              "enum": [
                                "ALL_VALUES_UNSPECIFIED",
                                "ALLOW",
                                "DENY"
                              ],
                              "type": "string",
                              "description": "The policy all_values state.",
                              "enumDescriptions": [
                                "Indicates that allowed_values or denied_values must be set.",
                                "A policy with this set allows all values.",
                                "A policy with this set denies all values."
                              ]
                            },
                            "deniedValues": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "List of values denied at this resource. Can only be set if `all_values` is set to `ALL_VALUES_UNSPECIFIED`."
                            },
                            "allowedValues": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "List of values allowed at this resource. Can only be set if `all_values` is set to `ALL_VALUES_UNSPECIFIED`."
                            },
                            "suggestedValue": {
                              "type": "string",
                              "description": "Optional. The Google Cloud Console will try to default to a configuration that matches the value specified in this `Policy`. If `suggested_value` is not set, it will inherit the value specified higher in the hierarchy, unless `inherit_from_parent` is `false`."
                            },
                            "inheritFromParent": {
                              "type": "boolean",
                              "description": "Determines the inheritance behavior for this `Policy`. By default, a `ListPolicy` set at a resource supersedes any `Policy` set anywhere up the resource hierarchy. However, if `inherit_from_parent` is set to `true`, then the values from the effective `Policy` of the parent resource are inherited, meaning the values set in this `Policy` are added to the values inherited up the hierarchy. Setting `Policy` hierarchies that inherit both allowed values and denied values isn't recommended in most circumstances to keep the configuration simple and understandable. However, it is possible to set a `Policy` with `allowed_values` set that inherits a `Policy` with `denied_values` set. In this case, the values that are allowed must be in `allowed_values` and not present in `denied_values`. For example, suppose you have a `Constraint` `constraints/serviceuser.services`, which has a `constraint_type` of `list_constraint`, and with `constraint_default` set to `ALLOW`. Suppose that at the Organization level, a `Policy` is applied that restricts the allowed API activations to {`E1`, `E2`}. Then, if a `Policy` is applied to a project below the Organization that has `inherit_from_parent` set to `false` and field all_values set to DENY, then an attempt to activate any API will be denied. The following examples demonstrate different possible layerings for `projects/bar` parented by `organizations/foo`: Example 1 (no inherited values): `organizations/foo` has a `Policy` with values: {allowed_values: \"E1\" allowed_values:\"E2\"} `projects/bar` has `inherit_from_parent` `false` and values: {allowed_values: \"E3\" allowed_values: \"E4\"} The accepted values at `organizations/foo` are `E1`, `E2`. The accepted values at `projects/bar` are `E3`, and `E4`. Example 2 (inherited values): `organizations/foo` has a `Policy` with values: {allowed_values: \"E1\" allowed_values:\"E2\"} `projects/bar` has a `Policy` with values: {value: \"E3\" value: \"E4\" inherit_from_parent: true} The accepted values at `organizations/foo` are `E1`, `E2`. The accepted values at `projects/bar` are `E1`, `E2`, `E3`, and `E4`. Example 3 (inheriting both allowed and denied values): `organizations/foo` has a `Policy` with values: {allowed_values: \"E1\" allowed_values: \"E2\"} `projects/bar` has a `Policy` with: {denied_values: \"E1\"} The accepted values at `organizations/foo` are `E1`, `E2`. The value accepted at `projects/bar` is `E2`. Example 4 (RestoreDefault): `organizations/foo` has a `Policy` with values: {allowed_values: \"E1\" allowed_values:\"E2\"} `projects/bar` has a `Policy` with values: {RestoreDefault: {}} The accepted values at `organizations/foo` are `E1`, `E2`. The accepted values at `projects/bar` are either all or none depending on the value of `constraint_default` (if `ALLOW`, all; if `DENY`, none). Example 5 (no policy inherits parent policy): `organizations/foo` has no `Policy` set. `projects/bar` has no `Policy` set. The accepted values at both levels are either all or none depending on the value of `constraint_default` (if `ALLOW`, all; if `DENY`, none). Example 6 (ListConstraint allowing all): `organizations/foo` has a `Policy` with values: {allowed_values: \"E1\" allowed_values: \"E2\"} `projects/bar` has a `Policy` with: {all: ALLOW} The accepted values at `organizations/foo` are `E1`, E2`. Any value is accepted at `projects/bar`. Example 7 (ListConstraint allowing none): `organizations/foo` has a `Policy` with values: {allowed_values: \"E1\" allowed_values: \"E2\"} `projects/bar` has a `Policy` with: {all: DENY} The accepted values at `organizations/foo` are `E1`, E2`. No value is accepted at `projects/bar`. Example 10 (allowed and denied subtrees of Resource Manager hierarchy): Given the following resource hierarchy O1->{F1, F2}; F1->{P1}; F2->{P2, P3}, `organizations/foo` has a `Policy` with values: {allowed_values: \"under:organizations/O1\"} `projects/bar` has a `Policy` with: {allowed_values: \"under:projects/P3\"} {denied_values: \"under:folders/F2\"} The accepted values at `organizations/foo` are `organizations/O1`, `folders/F1`, `folders/F2`, `projects/P1`, `projects/P2`, `projects/P3`. The accepted values at `projects/bar` are `organizations/O1`, `folders/F1`, `projects/P1`."
                            }
                          },
                          "description": "List of values either allowed or disallowed."
                        },
                        "updateTime": {
                          "type": "string",
                          "format": "google-datetime",
                          "description": "The time stamp the `Policy` was previously updated. This is set by the server, not specified by the caller, and represents the last time a call to `SetOrgPolicy` was made for that `Policy`. Any value set by the client will be ignored."
                        },
                        "booleanPolicy": {
                          "id": "GoogleCloudOrgpolicyV1BooleanPolicy",
                          "type": "object",
                          "properties": {
                            "enforced": {
                              "type": "boolean",
                              "description": "If `true`, then the `Policy` is enforced. If `false`, then any configuration is acceptable. Suppose you have a `Constraint` `constraints/compute.disableSerialPortAccess` with `constraint_default` set to `ALLOW`. A `Policy` for that `Constraint` exhibits the following behavior: - If the `Policy` at this resource has enforced set to `false`, serial port connection attempts will be allowed. - If the `Policy` at this resource has enforced set to `true`, serial port connection attempts will be refused. - If the `Policy` at this resource is `RestoreDefault`, serial port connection attempts will be allowed. - If no `Policy` is set at this resource or anywhere higher in the resource hierarchy, serial port connection attempts will be allowed. - If no `Policy` is set at this resource, but one exists higher in the resource hierarchy, the behavior is as if the`Policy` were set at this resource. The following examples demonstrate the different possible layerings: Example 1 (nearest `Constraint` wins): `organizations/foo` has a `Policy` with: {enforced: false} `projects/bar` has no `Policy` set. The constraint at `projects/bar` and `organizations/foo` will not be enforced. Example 2 (enforcement gets replaced): `organizations/foo` has a `Policy` with: {enforced: false} `projects/bar` has a `Policy` with: {enforced: true} The constraint at `organizations/foo` is not enforced. The constraint at `projects/bar` is enforced. Example 3 (RestoreDefault): `organizations/foo` has a `Policy` with: {enforced: true} `projects/bar` has a `Policy` with: {RestoreDefault: {}} The constraint at `organizations/foo` is enforced. The constraint at `projects/bar` is not enforced, because `constraint_default` for the `Constraint` is `ALLOW`."
                            }
                          },
                          "description": "For boolean `Constraints`, whether to enforce the `Constraint` or not."
                        },
                        "restoreDefault": {
                          "id": "GoogleCloudOrgpolicyV1RestoreDefault",
                          "type": "object",
                          "properties": {},
                          "description": "Restores the default behavior of the constraint; independent of `Constraint` type."
                        }
                      },
                      "description": "Defines a Cloud Organization `Policy` which is used to specify `Constraints` for configurations of Cloud Platform resources."
                    },
                    "description": "A representation of an [organization policy](https://cloud.google.com/resource-manager/docs/organization-policy/overview#organization_policy). There can be more than one organization policy with different constraints set on a given resource."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The last update timestamp of an asset. update_time is updated when create/update/delete operation is performed."
                  },
                  "accessLevel": {
                    "id": "GoogleIdentityAccesscontextmanagerV1AccessLevel",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Required. Resource name for the Access Level. The `short_name` component must begin with a letter and only include alphanumeric and '_'. Format: `accessPolicies/{policy_id}/accessLevels/{short_name}`. The maximum length of the `short_name` component is 50 characters."
                      },
                      "basic": {
                        "id": "GoogleIdentityAccesscontextmanagerV1BasicLevel",
                        "type": "object",
                        "properties": {
                          "conditions": {
                            "type": "array",
                            "items": {
                              "id": "GoogleIdentityAccesscontextmanagerV1Condition",
                              "type": "object",
                              "properties": {
                                "negate": {
                                  "type": "boolean",
                                  "description": "Whether to negate the Condition. If true, the Condition becomes a NAND over its non-empty fields, each field must be false for the Condition overall to be satisfied. Defaults to false."
                                },
                                "members": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "The request must be made by one of the provided user or service accounts. Groups are not supported. Syntax: `user:{emailid}` `serviceAccount:{emailid}` If not specified, a request may come from any user."
                                },
                                "regions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "The request must originate from one of the provided countries/regions. Must be valid ISO 3166-1 alpha-2 codes."
                                },
                                "devicePolicy": {
                                  "id": "GoogleIdentityAccesscontextmanagerV1DevicePolicy",
                                  "type": "object",
                                  "properties": {
                                    "osConstraints": {
                                      "type": "array",
                                      "items": {
                                        "id": "GoogleIdentityAccesscontextmanagerV1OsConstraint",
                                        "type": "object",
                                        "properties": {
                                          "osType": {
                                            "enum": [
                                              "OS_UNSPECIFIED",
                                              "DESKTOP_MAC",
                                              "DESKTOP_WINDOWS",
                                              "DESKTOP_LINUX",
                                              "DESKTOP_CHROME_OS",
                                              "ANDROID",
                                              "IOS"
                                            ],
                                            "type": "string",
                                            "description": "Required. The allowed OS type.",
                                            "enumDescriptions": [
                                              "The operating system of the device is not specified or not known.",
                                              "A desktop Mac operating system.",
                                              "A desktop Windows operating system.",
                                              "A desktop Linux operating system.",
                                              "A desktop ChromeOS operating system.",
                                              "An Android operating system.",
                                              "An iOS operating system."
                                            ]
                                          },
                                          "minimumVersion": {
                                            "type": "string",
                                            "description": "The minimum allowed OS version. If not set, any version of this OS satisfies the constraint. Format: `\"major.minor.patch\"`. Examples: `\"10.5.301\"`, `\"9.2.1\"`."
                                          },
                                          "requireVerifiedChromeOs": {
                                            "type": "boolean",
                                            "description": "Only allows requests from devices with a verified Chrome OS. Verifications includes requirements that the device is enterprise-managed, conformant to domain policies, and the caller has permission to call the API targeted by the request."
                                          }
                                        },
                                        "description": "A restriction on the OS type and version of devices making requests."
                                      },
                                      "description": "Allowed OS versions, an empty list allows all types and all versions."
                                    },
                                    "requireCorpOwned": {
                                      "type": "boolean",
                                      "description": "Whether the device needs to be corp owned."
                                    },
                                    "requireScreenlock": {
                                      "type": "boolean",
                                      "description": "Whether or not screenlock is required for the DevicePolicy to be true. Defaults to `false`."
                                    },
                                    "requireAdminApproval": {
                                      "type": "boolean",
                                      "description": "Whether the device needs to be approved by the customer admin."
                                    },
                                    "allowedEncryptionStatuses": {
                                      "type": "array",
                                      "items": {
                                        "enum": [
                                          "ENCRYPTION_UNSPECIFIED",
                                          "ENCRYPTION_UNSUPPORTED",
                                          "UNENCRYPTED",
                                          "ENCRYPTED"
                                        ],
                                        "type": "string",
                                        "enumDescriptions": [
                                          "The encryption status of the device is not specified or not known.",
                                          "The device does not support encryption.",
                                          "The device supports encryption, but is currently unencrypted.",
                                          "The device is encrypted."
                                        ]
                                      },
                                      "description": "Allowed encryptions statuses, an empty list allows all statuses."
                                    },
                                    "allowedDeviceManagementLevels": {
                                      "type": "array",
                                      "items": {
                                        "enum": [
                                          "MANAGEMENT_UNSPECIFIED",
                                          "NONE",
                                          "BASIC",
                                          "COMPLETE"
                                        ],
                                        "type": "string",
                                        "enumDescriptions": [
                                          "The device's management level is not specified or not known.",
                                          "The device is not managed.",
                                          "Basic management is enabled, which is generally limited to monitoring and wiping the corporate account.",
                                          "Complete device management. This includes more thorough monitoring and the ability to directly manage the device (such as remote wiping). This can be enabled through the Android Enterprise Platform."
                                        ]
                                      },
                                      "description": "Allowed device management levels, an empty list allows all management levels."
                                    }
                                  },
                                  "description": "Device specific restrictions, all restrictions must hold for the Condition to be true. If not specified, all devices are allowed."
                                },
                                "ipSubnetworks": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "CIDR block IP subnetwork specification. May be IPv4 or IPv6. Note that for a CIDR IP address block, the specified IP address portion must be properly truncated (i.e. all the host bits must be zero) or the input is considered malformed. For example, \"192.0.2.0/24\" is accepted but \"192.0.2.1/24\" is not. Similarly, for IPv6, \"2001:db8::/32\" is accepted whereas \"2001:db8::1/32\" is not. The originating IP of a request must be in one of the listed subnets in order for this Condition to be true. If empty, all IP addresses are allowed."
                                },
                                "requiredAccessLevels": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "A list of other access levels defined in the same `Policy`, referenced by resource name. Referencing an `AccessLevel` which does not exist is an error. All access levels listed must be granted for the Condition to be true. Example: \"`accessPolicies/MY_POLICY/accessLevels/LEVEL_NAME\"`"
                                }
                              },
                              "description": "A condition necessary for an `AccessLevel` to be granted. The Condition is an AND over its fields. So a Condition is true if: 1) the request IP is from one of the listed subnetworks AND 2) the originating device complies with the listed device policy AND 3) all listed access levels are granted AND 4) the request was sent at a time allowed by the DateTimeRestriction."
                            },
                            "description": "Required. A list of requirements for the `AccessLevel` to be granted."
                          },
                          "combiningFunction": {
                            "enum": [
                              "AND",
                              "OR"
                            ],
                            "type": "string",
                            "description": "How the `conditions` list should be combined to determine if a request is granted this `AccessLevel`. If AND is used, each `Condition` in `conditions` must be satisfied for the `AccessLevel` to be applied. If OR is used, at least one `Condition` in `conditions` must be satisfied for the `AccessLevel` to be applied. Default behavior is AND.",
                            "enumDescriptions": [
                              "All `Conditions` must be true for the `BasicLevel` to be true.",
                              "If at least one `Condition` is true, then the `BasicLevel` is true."
                            ]
                          }
                        },
                        "description": "A `BasicLevel` composed of `Conditions`."
                      },
                      "title": {
                        "type": "string",
                        "description": "Human readable title. Must be unique within the Policy."
                      },
                      "custom": {
                        "id": "GoogleIdentityAccesscontextmanagerV1CustomLevel",
                        "type": "object",
                        "properties": {
                          "expr": {
                            "id": "Expr",
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                              },
                              "location": {
                                "type": "string",
                                "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                              },
                              "expression": {
                                "type": "string",
                                "description": "Textual representation of an expression in Common Expression Language syntax."
                              },
                              "description": {
                                "type": "string",
                                "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                              }
                            },
                            "description": "Required. A Cloud CEL expression evaluating to a boolean."
                          }
                        },
                        "description": "A `CustomLevel` written in the Common Expression Language."
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the `AccessLevel` and its use. Does not affect behavior."
                      }
                    },
                    "description": "Please also refer to the [access level user guide](https://cloud.google.com/access-context-manager/docs/overview#access-levels)."
                  },
                  "osInventory": {
                    "id": "Inventory",
                    "type": "object",
                    "properties": {
                      "items": {
                        "type": "object",
                        "description": "Inventory items related to the VM keyed by an opaque unique identifier for each inventory item. The identifier is unique to each distinct and addressable inventory item and will change, when there is a new package version.",
                        "additionalProperties": {
                          "id": "Item",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Identifier for this item, unique across items for this VM."
                            },
                            "type": {
                              "enum": [
                                "TYPE_UNSPECIFIED",
                                "INSTALLED_PACKAGE",
                                "AVAILABLE_PACKAGE"
                              ],
                              "type": "string",
                              "description": "The specific type of inventory, correlating to its specific details.",
                              "enumDescriptions": [
                                "Invalid. An type must be specified.",
                                "This represents a package that is installed on the VM.",
                                "This represents an update that is available for a package."
                              ]
                            },
                            "createTime": {
                              "type": "string",
                              "format": "google-datetime",
                              "description": "When this inventory item was first detected."
                            },
                            "originType": {
                              "enum": [
                                "ORIGIN_TYPE_UNSPECIFIED",
                                "INVENTORY_REPORT"
                              ],
                              "type": "string",
                              "description": "The origin of this inventory item.",
                              "enumDescriptions": [
                                "Invalid. An origin type must be specified.",
                                "This inventory item was discovered as the result of the agent reporting inventory via the reporting API."
                              ]
                            },
                            "updateTime": {
                              "type": "string",
                              "format": "google-datetime",
                              "description": "When this inventory item was last modified."
                            },
                            "availablePackage": {
                              "id": "SoftwarePackage",
                              "type": "object",
                              "properties": {
                                "aptPackage": {
                                  "id": "VersionedPackage",
                                  "type": "object",
                                  "properties": {
                                    "version": {
                                      "type": "string",
                                      "description": "The version of the package."
                                    },
                                    "packageName": {
                                      "type": "string",
                                      "description": "The name of the package."
                                    },
                                    "architecture": {
                                      "type": "string",
                                      "description": "The system architecture this package is intended for."
                                    }
                                  },
                                  "description": "Details of an APT package. For details about the apt package manager, see https://wiki.debian.org/Apt."
                                },
                                "cosPackage": {
                                  "id": "VersionedPackage",
                                  "type": "object",
                                  "properties": {
                                    "version": {
                                      "type": "string",
                                      "description": "The version of the package."
                                    },
                                    "packageName": {
                                      "type": "string",
                                      "description": "The name of the package."
                                    },
                                    "architecture": {
                                      "type": "string",
                                      "description": "The system architecture this package is intended for."
                                    }
                                  },
                                  "description": "Details of a COS package."
                                },
                                "qfePackage": {
                                  "id": "WindowsQuickFixEngineeringPackage",
                                  "type": "object",
                                  "properties": {
                                    "caption": {
                                      "type": "string",
                                      "description": "A short textual description of the QFE update."
                                    },
                                    "hotFixId": {
                                      "type": "string",
                                      "description": "Unique identifier associated with a particular QFE update."
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "A textual description of the QFE update."
                                    },
                                    "installTime": {
                                      "type": "string",
                                      "format": "google-datetime",
                                      "description": "Date that the QFE update was installed. Mapped from installed_on field."
                                    }
                                  },
                                  "description": "Details of a Windows Quick Fix engineering package. See https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-quickfixengineering for info in Windows Quick Fix Engineering."
                                },
                                "wuaPackage": {
                                  "id": "WindowsUpdatePackage",
                                  "type": "object",
                                  "properties": {
                                    "title": {
                                      "type": "string",
                                      "description": "The localized title of the update package."
                                    },
                                    "updateId": {
                                      "type": "string",
                                      "description": "Gets the identifier of an update package. Stays the same across revisions."
                                    },
                                    "categories": {
                                      "type": "array",
                                      "items": {
                                        "id": "WindowsUpdateCategory",
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "The identifier of the windows update category."
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the windows update category."
                                          }
                                        },
                                        "description": "Categories specified by the Windows Update."
                                      },
                                      "description": "The categories that are associated with this update package."
                                    },
                                    "supportUrl": {
                                      "type": "string",
                                      "description": "A hyperlink to the language-specific support information for the update."
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "The localized description of the update package."
                                    },
                                    "kbArticleIds": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "A collection of Microsoft Knowledge Base article IDs that are associated with the update package."
                                    },
                                    "moreInfoUrls": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "A collection of URLs that provide more information about the update package."
                                    },
                                    "revisionNumber": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The revision number of this update package."
                                    },
                                    "lastDeploymentChangeTime": {
                                      "type": "string",
                                      "format": "google-datetime",
                                      "description": "The last published date of the update, in (UTC) date and time."
                                    }
                                  },
                                  "description": "Details of a Windows Update package. See https://docs.microsoft.com/en-us/windows/win32/api/_wua/ for information about Windows Update."
                                },
                                "yumPackage": {
                                  "id": "VersionedPackage",
                                  "type": "object",
                                  "properties": {
                                    "version": {
                                      "type": "string",
                                      "description": "The version of the package."
                                    },
                                    "packageName": {
                                      "type": "string",
                                      "description": "The name of the package."
                                    },
                                    "architecture": {
                                      "type": "string",
                                      "description": "The system architecture this package is intended for."
                                    }
                                  },
                                  "description": "Yum package info. For details about the yum package manager, see https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/deployment_guide/ch-yum."
                                },
                                "zypperPatch": {
                                  "id": "ZypperPatch",
                                  "type": "object",
                                  "properties": {
                                    "summary": {
                                      "type": "string",
                                      "description": "Any summary information provided about this patch."
                                    },
                                    "category": {
                                      "type": "string",
                                      "description": "The category of the patch."
                                    },
                                    "severity": {
                                      "type": "string",
                                      "description": "The severity specified for this patch"
                                    },
                                    "patchName": {
                                      "type": "string",
                                      "description": "The name of the patch."
                                    }
                                  },
                                  "description": "Details of a Zypper patch. For details about the Zypper package manager, see https://en.opensuse.org/SDB:Zypper_manual."
                                },
                                "googetPackage": {
                                  "id": "VersionedPackage",
                                  "type": "object",
                                  "properties": {
                                    "version": {
                                      "type": "string",
                                      "description": "The version of the package."
                                    },
                                    "packageName": {
                                      "type": "string",
                                      "description": "The name of the package."
                                    },
                                    "architecture": {
                                      "type": "string",
                                      "description": "The system architecture this package is intended for."
                                    }
                                  },
                                  "description": "Details of a Googet package. For details about the googet package manager, see https://github.com/google/googet."
                                },
                                "zypperPackage": {
                                  "id": "VersionedPackage",
                                  "type": "object",
                                  "properties": {
                                    "version": {
                                      "type": "string",
                                      "description": "The version of the package."
                                    },
                                    "packageName": {
                                      "type": "string",
                                      "description": "The name of the package."
                                    },
                                    "architecture": {
                                      "type": "string",
                                      "description": "The system architecture this package is intended for."
                                    }
                                  },
                                  "description": "Details of a Zypper package. For details about the Zypper package manager, see https://en.opensuse.org/SDB:Zypper_manual."
                                }
                              },
                              "description": "Software package available to be installed on the VM instance."
                            },
                            "installedPackage": {
                              "id": "SoftwarePackage",
                              "type": "object",
                              "properties": {
                                "aptPackage": {
                                  "id": "VersionedPackage",
                                  "type": "object",
                                  "properties": {
                                    "version": {
                                      "type": "string",
                                      "description": "The version of the package."
                                    },
                                    "packageName": {
                                      "type": "string",
                                      "description": "The name of the package."
                                    },
                                    "architecture": {
                                      "type": "string",
                                      "description": "The system architecture this package is intended for."
                                    }
                                  },
                                  "description": "Details of an APT package. For details about the apt package manager, see https://wiki.debian.org/Apt."
                                },
                                "cosPackage": {
                                  "id": "VersionedPackage",
                                  "type": "object",
                                  "properties": {
                                    "version": {
                                      "type": "string",
                                      "description": "The version of the package."
                                    },
                                    "packageName": {
                                      "type": "string",
                                      "description": "The name of the package."
                                    },
                                    "architecture": {
                                      "type": "string",
                                      "description": "The system architecture this package is intended for."
                                    }
                                  },
                                  "description": "Details of a COS package."
                                },
                                "qfePackage": {
                                  "id": "WindowsQuickFixEngineeringPackage",
                                  "type": "object",
                                  "properties": {
                                    "caption": {
                                      "type": "string",
                                      "description": "A short textual description of the QFE update."
                                    },
                                    "hotFixId": {
                                      "type": "string",
                                      "description": "Unique identifier associated with a particular QFE update."
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "A textual description of the QFE update."
                                    },
                                    "installTime": {
                                      "type": "string",
                                      "format": "google-datetime",
                                      "description": "Date that the QFE update was installed. Mapped from installed_on field."
                                    }
                                  },
                                  "description": "Details of a Windows Quick Fix engineering package. See https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-quickfixengineering for info in Windows Quick Fix Engineering."
                                },
                                "wuaPackage": {
                                  "id": "WindowsUpdatePackage",
                                  "type": "object",
                                  "properties": {
                                    "title": {
                                      "type": "string",
                                      "description": "The localized title of the update package."
                                    },
                                    "updateId": {
                                      "type": "string",
                                      "description": "Gets the identifier of an update package. Stays the same across revisions."
                                    },
                                    "categories": {
                                      "type": "array",
                                      "items": {
                                        "id": "WindowsUpdateCategory",
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "The identifier of the windows update category."
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The name of the windows update category."
                                          }
                                        },
                                        "description": "Categories specified by the Windows Update."
                                      },
                                      "description": "The categories that are associated with this update package."
                                    },
                                    "supportUrl": {
                                      "type": "string",
                                      "description": "A hyperlink to the language-specific support information for the update."
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "The localized description of the update package."
                                    },
                                    "kbArticleIds": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "A collection of Microsoft Knowledge Base article IDs that are associated with the update package."
                                    },
                                    "moreInfoUrls": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "A collection of URLs that provide more information about the update package."
                                    },
                                    "revisionNumber": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The revision number of this update package."
                                    },
                                    "lastDeploymentChangeTime": {
                                      "type": "string",
                                      "format": "google-datetime",
                                      "description": "The last published date of the update, in (UTC) date and time."
                                    }
                                  },
                                  "description": "Details of a Windows Update package. See https://docs.microsoft.com/en-us/windows/win32/api/_wua/ for information about Windows Update."
                                },
                                "yumPackage": {
                                  "id": "VersionedPackage",
                                  "type": "object",
                                  "properties": {
                                    "version": {
                                      "type": "string",
                                      "description": "The version of the package."
                                    },
                                    "packageName": {
                                      "type": "string",
                                      "description": "The name of the package."
                                    },
                                    "architecture": {
                                      "type": "string",
                                      "description": "The system architecture this package is intended for."
                                    }
                                  },
                                  "description": "Yum package info. For details about the yum package manager, see https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/deployment_guide/ch-yum."
                                },
                                "zypperPatch": {
                                  "id": "ZypperPatch",
                                  "type": "object",
                                  "properties": {
                                    "summary": {
                                      "type": "string",
                                      "description": "Any summary information provided about this patch."
                                    },
                                    "category": {
                                      "type": "string",
                                      "description": "The category of the patch."
                                    },
                                    "severity": {
                                      "type": "string",
                                      "description": "The severity specified for this patch"
                                    },
                                    "patchName": {
                                      "type": "string",
                                      "description": "The name of the patch."
                                    }
                                  },
                                  "description": "Details of a Zypper patch. For details about the Zypper package manager, see https://en.opensuse.org/SDB:Zypper_manual."
                                },
                                "googetPackage": {
                                  "id": "VersionedPackage",
                                  "type": "object",
                                  "properties": {
                                    "version": {
                                      "type": "string",
                                      "description": "The version of the package."
                                    },
                                    "packageName": {
                                      "type": "string",
                                      "description": "The name of the package."
                                    },
                                    "architecture": {
                                      "type": "string",
                                      "description": "The system architecture this package is intended for."
                                    }
                                  },
                                  "description": "Details of a Googet package. For details about the googet package manager, see https://github.com/google/googet."
                                },
                                "zypperPackage": {
                                  "id": "VersionedPackage",
                                  "type": "object",
                                  "properties": {
                                    "version": {
                                      "type": "string",
                                      "description": "The version of the package."
                                    },
                                    "packageName": {
                                      "type": "string",
                                      "description": "The name of the package."
                                    },
                                    "architecture": {
                                      "type": "string",
                                      "description": "The system architecture this package is intended for."
                                    }
                                  },
                                  "description": "Details of a Zypper package. For details about the Zypper package manager, see https://en.opensuse.org/SDB:Zypper_manual."
                                }
                              },
                              "description": "Software package present on the VM instance."
                            }
                          },
                          "description": "A single piece of inventory on a VM."
                        }
                      },
                      "osInfo": {
                        "id": "OsInfo",
                        "type": "object",
                        "properties": {
                          "version": {
                            "type": "string",
                            "description": "The version of the operating system."
                          },
                          "hostname": {
                            "type": "string",
                            "description": "The VM hostname."
                          },
                          "longName": {
                            "type": "string",
                            "description": "The operating system long name. For example 'Debian GNU/Linux 9' or 'Microsoft Window Server 2019 Datacenter'."
                          },
                          "shortName": {
                            "type": "string",
                            "description": "The operating system short name. For example, 'windows' or 'debian'."
                          },
                          "architecture": {
                            "type": "string",
                            "description": "The system architecture of the operating system."
                          },
                          "kernelRelease": {
                            "type": "string",
                            "description": "The kernel release of the operating system."
                          },
                          "kernelVersion": {
                            "type": "string",
                            "description": "The kernel version of the operating system."
                          },
                          "osconfigAgentVersion": {
                            "type": "string",
                            "description": "The current version of the OS Config agent running on the VM."
                          }
                        },
                        "description": "Base level operating system information for the VM."
                      }
                    },
                    "description": "A representation of runtime OS Inventory information. See [this topic](https://cloud.google.com/compute/docs/instances/os-inventory-management) for more information."
                  },
                  "accessPolicy": {
                    "id": "GoogleIdentityAccesscontextmanagerV1AccessPolicy",
                    "type": "object",
                    "properties": {
                      "etag": {
                        "type": "string",
                        "description": "Output only. An opaque identifier for the current version of the `AccessPolicy`. This will always be a strongly validated etag, meaning that two Access Polices will be identical if and only if their etags are identical. Clients should not expect this to be in any specific format."
                      },
                      "name": {
                        "type": "string",
                        "description": "Output only. Resource name of the `AccessPolicy`. Format: `accessPolicies/{policy_id}`"
                      },
                      "title": {
                        "type": "string",
                        "description": "Required. Human readable title. Does not affect behavior."
                      },
                      "parent": {
                        "type": "string",
                        "description": "Required. The parent of this `AccessPolicy` in the Cloud Resource Hierarchy. Currently immutable once created. Format: `organizations/{organization_id}`"
                      }
                    },
                    "description": "Please also refer to the [access policy user guide](https://cloud.google.com/access-context-manager/docs/overview#access-policies)."
                  },
                  "servicePerimeter": {
                    "id": "GoogleIdentityAccesscontextmanagerV1ServicePerimeter",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Required. Resource name for the ServicePerimeter. The `short_name` component must begin with a letter and only include alphanumeric and '_'. Format: `accessPolicies/{policy_id}/servicePerimeters/{short_name}`"
                      },
                      "spec": {
                        "id": "GoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig",
                        "type": "object",
                        "properties": {
                          "resources": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "A list of Google Cloud resources that are inside of the service perimeter. Currently only projects are allowed. Format: `projects/{project_number}`"
                          },
                          "accessLevels": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "A list of `AccessLevel` resource names that allow resources within the `ServicePerimeter` to be accessed from the internet. `AccessLevels` listed must be in the same policy as this `ServicePerimeter`. Referencing a nonexistent `AccessLevel` is a syntax error. If no `AccessLevel` names are listed, resources within the perimeter can only be accessed via Google Cloud calls with request origins within the perimeter. Example: `\"accessPolicies/MY_POLICY/accessLevels/MY_LEVEL\"`. For Service Perimeter Bridge, must be empty."
                          },
                          "egressPolicies": {
                            "type": "array",
                            "items": {
                              "id": "GoogleIdentityAccesscontextmanagerV1EgressPolicy",
                              "type": "object",
                              "properties": {
                                "egressTo": {
                                  "id": "GoogleIdentityAccesscontextmanagerV1EgressTo",
                                  "type": "object",
                                  "properties": {
                                    "resources": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "A list of resources, currently only projects in the form `projects/`, that are allowed to be accessed by sources defined in the corresponding EgressFrom. A request matches if it contains a resource in this list. If `*` is specified for `resources`, then this EgressTo rule will authorize access to all resources outside the perimeter."
                                    },
                                    "operations": {
                                      "type": "array",
                                      "items": {
                                        "id": "GoogleIdentityAccesscontextmanagerV1ApiOperation",
                                        "type": "object",
                                        "properties": {
                                          "serviceName": {
                                            "type": "string",
                                            "description": "The name of the API whose methods or permissions the IngressPolicy or EgressPolicy want to allow. A single ApiOperation with `service_name` field set to `*` will allow all methods AND permissions for all services."
                                          },
                                          "methodSelectors": {
                                            "type": "array",
                                            "items": {
                                              "id": "GoogleIdentityAccesscontextmanagerV1MethodSelector",
                                              "type": "object",
                                              "properties": {
                                                "method": {
                                                  "type": "string",
                                                  "description": "Value for `method` should be a valid method name for the corresponding `service_name` in ApiOperation. If `*` used as value for `method`, then ALL methods and permissions are allowed."
                                                },
                                                "permission": {
                                                  "type": "string",
                                                  "description": "Value for `permission` should be a valid Cloud IAM permission for the corresponding `service_name` in ApiOperation."
                                                }
                                              },
                                              "description": "An allowed method or permission of a service specified in ApiOperation."
                                            },
                                            "description": "API methods or permissions to allow. Method or permission must belong to the service specified by `service_name` field. A single MethodSelector entry with `*` specified for the `method` field will allow all methods AND permissions for the service specified in `service_name`."
                                          }
                                        },
                                        "description": "Identification for an API Operation."
                                      },
                                      "description": "A list of ApiOperations allowed to be performed by the sources specified in the corresponding EgressFrom. A request matches if it uses an operation/service in this list."
                                    }
                                  },
                                  "description": "Defines the conditions on the ApiOperation and destination resources that cause this EgressPolicy to apply."
                                },
                                "egressFrom": {
                                  "id": "GoogleIdentityAccesscontextmanagerV1EgressFrom",
                                  "type": "object",
                                  "properties": {
                                    "identities": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "A list of identities that are allowed access through this [EgressPolicy]. Should be in the format of email address. The email address should represent individual user or service account only."
                                    },
                                    "identityType": {
                                      "enum": [
                                        "IDENTITY_TYPE_UNSPECIFIED",
                                        "ANY_IDENTITY",
                                        "ANY_USER_ACCOUNT",
                                        "ANY_SERVICE_ACCOUNT"
                                      ],
                                      "type": "string",
                                      "description": "Specifies the type of identities that are allowed access to outside the perimeter. If left unspecified, then members of `identities` field will be allowed access.",
                                      "enumDescriptions": [
                                        "No blanket identity group specified.",
                                        "Authorize access from all identities outside the perimeter.",
                                        "Authorize access from all human users outside the perimeter.",
                                        "Authorize access from all service accounts outside the perimeter."
                                      ]
                                    }
                                  },
                                  "description": "Defines conditions on the source of a request causing this EgressPolicy to apply."
                                }
                              },
                              "description": "Policy for egress from perimeter. EgressPolicies match requests based on `egress_from` and `egress_to` stanzas. For an EgressPolicy to match, both `egress_from` and `egress_to` stanzas must be matched. If an EgressPolicy matches a request, the request is allowed to span the ServicePerimeter boundary. For example, an EgressPolicy can be used to allow VMs on networks within the ServicePerimeter to access a defined set of projects outside the perimeter in certain contexts (e.g. to read data from a Cloud Storage bucket or query against a BigQuery dataset). EgressPolicies are concerned with the *resources* that a request relates as well as the API services and API actions being used. They do not related to the direction of data movement. More detailed documentation for this concept can be found in the descriptions of EgressFrom and EgressTo."
                            },
                            "description": "List of EgressPolicies to apply to the perimeter. A perimeter may have multiple EgressPolicies, each of which is evaluated separately. Access is granted if any EgressPolicy grants it. Must be empty for a perimeter bridge."
                          },
                          "ingressPolicies": {
                            "type": "array",
                            "items": {
                              "id": "GoogleIdentityAccesscontextmanagerV1IngressPolicy",
                              "type": "object",
                              "properties": {
                                "ingressTo": {
                                  "id": "GoogleIdentityAccesscontextmanagerV1IngressTo",
                                  "type": "object",
                                  "properties": {
                                    "resources": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "A list of resources, currently only projects in the form `projects/`, protected by this ServicePerimeter that are allowed to be accessed by sources defined in the corresponding IngressFrom. If a single `*` is specified, then access to all resources inside the perimeter are allowed."
                                    },
                                    "operations": {
                                      "type": "array",
                                      "items": {
                                        "id": "GoogleIdentityAccesscontextmanagerV1ApiOperation",
                                        "type": "object",
                                        "properties": {
                                          "serviceName": {
                                            "type": "string",
                                            "description": "The name of the API whose methods or permissions the IngressPolicy or EgressPolicy want to allow. A single ApiOperation with `service_name` field set to `*` will allow all methods AND permissions for all services."
                                          },
                                          "methodSelectors": {
                                            "type": "array",
                                            "items": {
                                              "id": "GoogleIdentityAccesscontextmanagerV1MethodSelector",
                                              "type": "object",
                                              "properties": {
                                                "method": {
                                                  "type": "string",
                                                  "description": "Value for `method` should be a valid method name for the corresponding `service_name` in ApiOperation. If `*` used as value for `method`, then ALL methods and permissions are allowed."
                                                },
                                                "permission": {
                                                  "type": "string",
                                                  "description": "Value for `permission` should be a valid Cloud IAM permission for the corresponding `service_name` in ApiOperation."
                                                }
                                              },
                                              "description": "An allowed method or permission of a service specified in ApiOperation."
                                            },
                                            "description": "API methods or permissions to allow. Method or permission must belong to the service specified by `service_name` field. A single MethodSelector entry with `*` specified for the `method` field will allow all methods AND permissions for the service specified in `service_name`."
                                          }
                                        },
                                        "description": "Identification for an API Operation."
                                      },
                                      "description": "A list of ApiOperations allowed to be performed by the sources specified in corresponding IngressFrom in this ServicePerimeter."
                                    }
                                  },
                                  "description": "Defines the conditions on the ApiOperation and request destination that cause this IngressPolicy to apply."
                                },
                                "ingressFrom": {
                                  "id": "GoogleIdentityAccesscontextmanagerV1IngressFrom",
                                  "type": "object",
                                  "properties": {
                                    "sources": {
                                      "type": "array",
                                      "items": {
                                        "id": "GoogleIdentityAccesscontextmanagerV1IngressSource",
                                        "type": "object",
                                        "properties": {
                                          "resource": {
                                            "type": "string",
                                            "description": "A Google Cloud resource that is allowed to ingress the perimeter. Requests from these resources will be allowed to access perimeter data. Currently only projects are allowed. Format: `projects/{project_number}` The project may be in any Google Cloud organization, not just the organization that the perimeter is defined in. `*` is not allowed, the case of allowing all Google Cloud resources only is not supported."
                                          },
                                          "accessLevel": {
                                            "type": "string",
                                            "description": "An AccessLevel resource name that allow resources within the ServicePerimeters to be accessed from the internet. AccessLevels listed must be in the same policy as this ServicePerimeter. Referencing a nonexistent AccessLevel will cause an error. If no AccessLevel names are listed, resources within the perimeter can only be accessed via Google Cloud calls with request origins within the perimeter. Example: `accessPolicies/MY_POLICY/accessLevels/MY_LEVEL`. If a single `*` is specified for `access_level`, then all IngressSources will be allowed."
                                          }
                                        },
                                        "description": "The source that IngressPolicy authorizes access from."
                                      },
                                      "description": "Sources that this IngressPolicy authorizes access from."
                                    },
                                    "identities": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "A list of identities that are allowed access through this ingress policy. Should be in the format of email address. The email address should represent individual user or service account only."
                                    },
                                    "identityType": {
                                      "enum": [
                                        "IDENTITY_TYPE_UNSPECIFIED",
                                        "ANY_IDENTITY",
                                        "ANY_USER_ACCOUNT",
                                        "ANY_SERVICE_ACCOUNT"
                                      ],
                                      "type": "string",
                                      "description": "Specifies the type of identities that are allowed access from outside the perimeter. If left unspecified, then members of `identities` field will be allowed access.",
                                      "enumDescriptions": [
                                        "No blanket identity group specified.",
                                        "Authorize access from all identities outside the perimeter.",
                                        "Authorize access from all human users outside the perimeter.",
                                        "Authorize access from all service accounts outside the perimeter."
                                      ]
                                    }
                                  },
                                  "description": "Defines the conditions on the source of a request causing this IngressPolicy to apply."
                                }
                              },
                              "description": "Policy for ingress into ServicePerimeter. IngressPolicies match requests based on `ingress_from` and `ingress_to` stanzas. For an ingress policy to match, both the `ingress_from` and `ingress_to` stanzas must be matched. If an IngressPolicy matches a request, the request is allowed through the perimeter boundary from outside the perimeter. For example, access from the internet can be allowed either based on an AccessLevel or, for traffic hosted on Google Cloud, the project of the source network. For access from private networks, using the project of the hosting network is required. Individual ingress policies can be limited by restricting which services and/or actions they match using the `ingress_to` field."
                            },
                            "description": "List of IngressPolicies to apply to the perimeter. A perimeter may have multiple IngressPolicies, each of which is evaluated separately. Access is granted if any Ingress Policy grants it. Must be empty for a perimeter bridge."
                          },
                          "restrictedServices": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Google Cloud services that are subject to the Service Perimeter restrictions. For example, if `storage.googleapis.com` is specified, access to the storage buckets inside the perimeter must meet the perimeter's access restrictions."
                          },
                          "vpcAccessibleServices": {
                            "id": "GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices",
                            "type": "object",
                            "properties": {
                              "allowedServices": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The list of APIs usable within the Service Perimeter. Must be empty unless 'enable_restriction' is True. You can specify a list of individual services, as well as include the 'RESTRICTED-SERVICES' value, which automatically includes all of the services protected by the perimeter."
                              },
                              "enableRestriction": {
                                "type": "boolean",
                                "description": "Whether to restrict API calls within the Service Perimeter to the list of APIs specified in 'allowed_services'."
                              }
                            },
                            "description": "Configuration for APIs allowed within Perimeter."
                          }
                        },
                        "description": "Proposed (or dry run) ServicePerimeter configuration. This configuration allows to specify and test ServicePerimeter configuration without enforcing actual access restrictions. Only allowed to be set when the \"use_explicit_dry_run_spec\" flag is set."
                      },
                      "title": {
                        "type": "string",
                        "description": "Human readable title. Must be unique within the Policy."
                      },
                      "status": {
                        "id": "GoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig",
                        "type": "object",
                        "properties": {
                          "resources": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "A list of Google Cloud resources that are inside of the service perimeter. Currently only projects are allowed. Format: `projects/{project_number}`"
                          },
                          "accessLevels": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "A list of `AccessLevel` resource names that allow resources within the `ServicePerimeter` to be accessed from the internet. `AccessLevels` listed must be in the same policy as this `ServicePerimeter`. Referencing a nonexistent `AccessLevel` is a syntax error. If no `AccessLevel` names are listed, resources within the perimeter can only be accessed via Google Cloud calls with request origins within the perimeter. Example: `\"accessPolicies/MY_POLICY/accessLevels/MY_LEVEL\"`. For Service Perimeter Bridge, must be empty."
                          },
                          "egressPolicies": {
                            "type": "array",
                            "items": {
                              "id": "GoogleIdentityAccesscontextmanagerV1EgressPolicy",
                              "type": "object",
                              "properties": {
                                "egressTo": {
                                  "id": "GoogleIdentityAccesscontextmanagerV1EgressTo",
                                  "type": "object",
                                  "properties": {
                                    "resources": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "A list of resources, currently only projects in the form `projects/`, that are allowed to be accessed by sources defined in the corresponding EgressFrom. A request matches if it contains a resource in this list. If `*` is specified for `resources`, then this EgressTo rule will authorize access to all resources outside the perimeter."
                                    },
                                    "operations": {
                                      "type": "array",
                                      "items": {
                                        "id": "GoogleIdentityAccesscontextmanagerV1ApiOperation",
                                        "type": "object",
                                        "properties": {
                                          "serviceName": {
                                            "type": "string",
                                            "description": "The name of the API whose methods or permissions the IngressPolicy or EgressPolicy want to allow. A single ApiOperation with `service_name` field set to `*` will allow all methods AND permissions for all services."
                                          },
                                          "methodSelectors": {
                                            "type": "array",
                                            "items": {
                                              "id": "GoogleIdentityAccesscontextmanagerV1MethodSelector",
                                              "type": "object",
                                              "properties": {
                                                "method": {
                                                  "type": "string",
                                                  "description": "Value for `method` should be a valid method name for the corresponding `service_name` in ApiOperation. If `*` used as value for `method`, then ALL methods and permissions are allowed."
                                                },
                                                "permission": {
                                                  "type": "string",
                                                  "description": "Value for `permission` should be a valid Cloud IAM permission for the corresponding `service_name` in ApiOperation."
                                                }
                                              },
                                              "description": "An allowed method or permission of a service specified in ApiOperation."
                                            },
                                            "description": "API methods or permissions to allow. Method or permission must belong to the service specified by `service_name` field. A single MethodSelector entry with `*` specified for the `method` field will allow all methods AND permissions for the service specified in `service_name`."
                                          }
                                        },
                                        "description": "Identification for an API Operation."
                                      },
                                      "description": "A list of ApiOperations allowed to be performed by the sources specified in the corresponding EgressFrom. A request matches if it uses an operation/service in this list."
                                    }
                                  },
                                  "description": "Defines the conditions on the ApiOperation and destination resources that cause this EgressPolicy to apply."
                                },
                                "egressFrom": {
                                  "id": "GoogleIdentityAccesscontextmanagerV1EgressFrom",
                                  "type": "object",
                                  "properties": {
                                    "identities": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "A list of identities that are allowed access through this [EgressPolicy]. Should be in the format of email address. The email address should represent individual user or service account only."
                                    },
                                    "identityType": {
                                      "enum": [
                                        "IDENTITY_TYPE_UNSPECIFIED",
                                        "ANY_IDENTITY",
                                        "ANY_USER_ACCOUNT",
                                        "ANY_SERVICE_ACCOUNT"
                                      ],
                                      "type": "string",
                                      "description": "Specifies the type of identities that are allowed access to outside the perimeter. If left unspecified, then members of `identities` field will be allowed access.",
                                      "enumDescriptions": [
                                        "No blanket identity group specified.",
                                        "Authorize access from all identities outside the perimeter.",
                                        "Authorize access from all human users outside the perimeter.",
                                        "Authorize access from all service accounts outside the perimeter."
                                      ]
                                    }
                                  },
                                  "description": "Defines conditions on the source of a request causing this EgressPolicy to apply."
                                }
                              },
                              "description": "Policy for egress from perimeter. EgressPolicies match requests based on `egress_from` and `egress_to` stanzas. For an EgressPolicy to match, both `egress_from` and `egress_to` stanzas must be matched. If an EgressPolicy matches a request, the request is allowed to span the ServicePerimeter boundary. For example, an EgressPolicy can be used to allow VMs on networks within the ServicePerimeter to access a defined set of projects outside the perimeter in certain contexts (e.g. to read data from a Cloud Storage bucket or query against a BigQuery dataset). EgressPolicies are concerned with the *resources* that a request relates as well as the API services and API actions being used. They do not related to the direction of data movement. More detailed documentation for this concept can be found in the descriptions of EgressFrom and EgressTo."
                            },
                            "description": "List of EgressPolicies to apply to the perimeter. A perimeter may have multiple EgressPolicies, each of which is evaluated separately. Access is granted if any EgressPolicy grants it. Must be empty for a perimeter bridge."
                          },
                          "ingressPolicies": {
                            "type": "array",
                            "items": {
                              "id": "GoogleIdentityAccesscontextmanagerV1IngressPolicy",
                              "type": "object",
                              "properties": {
                                "ingressTo": {
                                  "id": "GoogleIdentityAccesscontextmanagerV1IngressTo",
                                  "type": "object",
                                  "properties": {
                                    "resources": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "A list of resources, currently only projects in the form `projects/`, protected by this ServicePerimeter that are allowed to be accessed by sources defined in the corresponding IngressFrom. If a single `*` is specified, then access to all resources inside the perimeter are allowed."
                                    },
                                    "operations": {
                                      "type": "array",
                                      "items": {
                                        "id": "GoogleIdentityAccesscontextmanagerV1ApiOperation",
                                        "type": "object",
                                        "properties": {
                                          "serviceName": {
                                            "type": "string",
                                            "description": "The name of the API whose methods or permissions the IngressPolicy or EgressPolicy want to allow. A single ApiOperation with `service_name` field set to `*` will allow all methods AND permissions for all services."
                                          },
                                          "methodSelectors": {
                                            "type": "array",
                                            "items": {
                                              "id": "GoogleIdentityAccesscontextmanagerV1MethodSelector",
                                              "type": "object",
                                              "properties": {
                                                "method": {
                                                  "type": "string",
                                                  "description": "Value for `method` should be a valid method name for the corresponding `service_name` in ApiOperation. If `*` used as value for `method`, then ALL methods and permissions are allowed."
                                                },
                                                "permission": {
                                                  "type": "string",
                                                  "description": "Value for `permission` should be a valid Cloud IAM permission for the corresponding `service_name` in ApiOperation."
                                                }
                                              },
                                              "description": "An allowed method or permission of a service specified in ApiOperation."
                                            },
                                            "description": "API methods or permissions to allow. Method or permission must belong to the service specified by `service_name` field. A single MethodSelector entry with `*` specified for the `method` field will allow all methods AND permissions for the service specified in `service_name`."
                                          }
                                        },
                                        "description": "Identification for an API Operation."
                                      },
                                      "description": "A list of ApiOperations allowed to be performed by the sources specified in corresponding IngressFrom in this ServicePerimeter."
                                    }
                                  },
                                  "description": "Defines the conditions on the ApiOperation and request destination that cause this IngressPolicy to apply."
                                },
                                "ingressFrom": {
                                  "id": "GoogleIdentityAccesscontextmanagerV1IngressFrom",
                                  "type": "object",
                                  "properties": {
                                    "sources": {
                                      "type": "array",
                                      "items": {
                                        "id": "GoogleIdentityAccesscontextmanagerV1IngressSource",
                                        "type": "object",
                                        "properties": {
                                          "resource": {
                                            "type": "string",
                                            "description": "A Google Cloud resource that is allowed to ingress the perimeter. Requests from these resources will be allowed to access perimeter data. Currently only projects are allowed. Format: `projects/{project_number}` The project may be in any Google Cloud organization, not just the organization that the perimeter is defined in. `*` is not allowed, the case of allowing all Google Cloud resources only is not supported."
                                          },
                                          "accessLevel": {
                                            "type": "string",
                                            "description": "An AccessLevel resource name that allow resources within the ServicePerimeters to be accessed from the internet. AccessLevels listed must be in the same policy as this ServicePerimeter. Referencing a nonexistent AccessLevel will cause an error. If no AccessLevel names are listed, resources within the perimeter can only be accessed via Google Cloud calls with request origins within the perimeter. Example: `accessPolicies/MY_POLICY/accessLevels/MY_LEVEL`. If a single `*` is specified for `access_level`, then all IngressSources will be allowed."
                                          }
                                        },
                                        "description": "The source that IngressPolicy authorizes access from."
                                      },
                                      "description": "Sources that this IngressPolicy authorizes access from."
                                    },
                                    "identities": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "A list of identities that are allowed access through this ingress policy. Should be in the format of email address. The email address should represent individual user or service account only."
                                    },
                                    "identityType": {
                                      "enum": [
                                        "IDENTITY_TYPE_UNSPECIFIED",
                                        "ANY_IDENTITY",
                                        "ANY_USER_ACCOUNT",
                                        "ANY_SERVICE_ACCOUNT"
                                      ],
                                      "type": "string",
                                      "description": "Specifies the type of identities that are allowed access from outside the perimeter. If left unspecified, then members of `identities` field will be allowed access.",
                                      "enumDescriptions": [
                                        "No blanket identity group specified.",
                                        "Authorize access from all identities outside the perimeter.",
                                        "Authorize access from all human users outside the perimeter.",
                                        "Authorize access from all service accounts outside the perimeter."
                                      ]
                                    }
                                  },
                                  "description": "Defines the conditions on the source of a request causing this IngressPolicy to apply."
                                }
                              },
                              "description": "Policy for ingress into ServicePerimeter. IngressPolicies match requests based on `ingress_from` and `ingress_to` stanzas. For an ingress policy to match, both the `ingress_from` and `ingress_to` stanzas must be matched. If an IngressPolicy matches a request, the request is allowed through the perimeter boundary from outside the perimeter. For example, access from the internet can be allowed either based on an AccessLevel or, for traffic hosted on Google Cloud, the project of the source network. For access from private networks, using the project of the hosting network is required. Individual ingress policies can be limited by restricting which services and/or actions they match using the `ingress_to` field."
                            },
                            "description": "List of IngressPolicies to apply to the perimeter. A perimeter may have multiple IngressPolicies, each of which is evaluated separately. Access is granted if any Ingress Policy grants it. Must be empty for a perimeter bridge."
                          },
                          "restrictedServices": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Google Cloud services that are subject to the Service Perimeter restrictions. For example, if `storage.googleapis.com` is specified, access to the storage buckets inside the perimeter must meet the perimeter's access restrictions."
                          },
                          "vpcAccessibleServices": {
                            "id": "GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices",
                            "type": "object",
                            "properties": {
                              "allowedServices": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The list of APIs usable within the Service Perimeter. Must be empty unless 'enable_restriction' is True. You can specify a list of individual services, as well as include the 'RESTRICTED-SERVICES' value, which automatically includes all of the services protected by the perimeter."
                              },
                              "enableRestriction": {
                                "type": "boolean",
                                "description": "Whether to restrict API calls within the Service Perimeter to the list of APIs specified in 'allowed_services'."
                              }
                            },
                            "description": "Configuration for APIs allowed within Perimeter."
                          }
                        },
                        "description": "Current ServicePerimeter configuration. Specifies sets of resources, restricted services and access levels that determine perimeter content and boundaries."
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the `ServicePerimeter` and its use. Does not affect behavior."
                      },
                      "perimeterType": {
                        "enum": [
                          "PERIMETER_TYPE_REGULAR",
                          "PERIMETER_TYPE_BRIDGE"
                        ],
                        "type": "string",
                        "description": "Perimeter type indicator. A single project is allowed to be a member of single regular perimeter, but multiple service perimeter bridges. A project cannot be a included in a perimeter bridge without being included in regular perimeter. For perimeter bridges, the restricted service list as well as access level lists must be empty.",
                        "enumDescriptions": [
                          "Regular Perimeter.",
                          "Perimeter Bridge."
                        ]
                      },
                      "useExplicitDryRunSpec": {
                        "type": "boolean",
                        "description": "Use explicit dry run spec flag. Ordinarily, a dry-run spec implicitly exists for all Service Perimeters, and that spec is identical to the status for those Service Perimeters. When this flag is set, it inhibits the generation of the implicit spec, thereby allowing the user to explicitly provide a configuration (\"spec\") to use in a dry-run version of the Service Perimeter. This allows the user to test changes to the enforced config (\"status\") without actually enforcing them. This testing is done through analyzing the differences between currently enforced and suggested restrictions. use_explicit_dry_run_spec must bet set to True if any of the fields in the spec are set to non-default values."
                      }
                    },
                    "description": "Please also refer to the [service perimeter user guide](https://cloud.google.com/vpc-service-controls/docs/overview)."
                  }
                },
                "description": "An asset in Google Cloud. An asset can be any resource in the Google Cloud [resource hierarchy](https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy), a resource outside the Google Cloud resource hierarchy (such as Google Kubernetes Engine clusters and objects), or a policy (e.g. Cloud IAM policy), or a relationship (e.g. an INSTANCE_TO_INSTANCEGROUP relationship). See [Supported asset types](https://cloud.google.com/asset-inventory/docs/supported-asset-types) for more information."
              },
              "description": "Assets."
            },
            "readTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Time the snapshot was taken."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Token to retrieve the next page of results. It expires 72 hours after the page token for the first page is generated. Set to empty if there are no remaining results."
            }
          },
          "description": "ListAssets response."
        }
      ]
  batchGetAssetsHistory:
    description: |-
      Batch gets the update history of assets that overlap a time window. For IAM_POLICY content, this API outputs history when the asset and its attached IAM POLICY both exist. This can create gaps in the output history. Otherwise, this API outputs history with asset in both non-delete or deleted status. If a specified asset does not exist, this API returns an INVALID_ARGUMENT error.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/asset-inventory/docs/reference/rest/v1//atchGetAssetsHistory
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  searchAllIamPolicies:
    description: |-
      Searches all IAM policies within the specified scope, such as a project, folder, or organization. The caller must be granted the `cloudasset.assets.searchAllIamPolicies` permission on the desired scope, otherwise the request will be rejected.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/asset-inventory/docs/reference/rest/v1//earchAllIamPolicies
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "SearchAllIamPoliciesResponse",
          "type": "object",
          "properties": {
            "results": {
              "type": "array",
              "items": {
                "id": "IamPolicySearchResult",
                "type": "object",
                "properties": {
                  "policy": {
                    "id": "Policy",
                    "type": "object",
                    "properties": {
                      "etag": {
                        "type": "string",
                        "format": "byte",
                        "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
                      },
                      "version": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                      },
                      "bindings": {
                        "type": "array",
                        "items": {
                          "id": "Binding",
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                            },
                            "members": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                            },
                            "condition": {
                              "id": "Expr",
                              "type": "object",
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                                },
                                "location": {
                                  "type": "string",
                                  "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                                },
                                "expression": {
                                  "type": "string",
                                  "description": "Textual representation of an expression in Common Expression Language syntax."
                                },
                                "description": {
                                  "type": "string",
                                  "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                                }
                              },
                              "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                            }
                          },
                          "description": "Associates `members` with a `role`."
                        },
                        "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
                      },
                      "auditConfigs": {
                        "type": "array",
                        "items": {
                          "id": "AuditConfig",
                          "type": "object",
                          "properties": {
                            "service": {
                              "type": "string",
                              "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                            },
                            "auditLogConfigs": {
                              "type": "array",
                              "items": {
                                "id": "AuditLogConfig",
                                "type": "object",
                                "properties": {
                                  "logType": {
                                    "enum": [
                                      "LOG_TYPE_UNSPECIFIED",
                                      "ADMIN_READ",
                                      "DATA_WRITE",
                                      "DATA_READ"
                                    ],
                                    "type": "string",
                                    "description": "The log type that this config enables.",
                                    "enumDescriptions": [
                                      "Default case. Should never be this.",
                                      "Admin reads. Example: CloudIAM getIamPolicy",
                                      "Data writes. Example: CloudSQL Users create",
                                      "Data reads. Example: CloudSQL Users list"
                                    ]
                                  },
                                  "exemptedMembers": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                                  }
                                },
                                "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                              },
                              "description": "The configuration for logging of each type of permission."
                            }
                          },
                          "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
                        },
                        "description": "Specifies cloud audit logging configuration for this policy."
                      }
                    },
                    "description": "The IAM policy directly set on the given resource. Note that the original IAM policy can contain multiple bindings. This only contains the bindings that match the given query. For queries that don't contain a constrain on policies (e.g., an empty query), this contains all the bindings. To search against the `policy` bindings: * use a field query: - query by the policy contained members. Example: `policy:amy@gmail.com` - query by the policy contained roles. Example: `policy:roles/compute.admin` - query by the policy contained roles' included permissions. Example: `policy.role.permissions:compute.instances.create`"
                  },
                  "project": {
                    "type": "string",
                    "description": "The project that the associated GCP resource belongs to, in the form of projects/{PROJECT_NUMBER}. If an IAM policy is set on a resource (like VM instance, Cloud Storage bucket), the project field will indicate the project that contains the resource. If an IAM policy is set on a folder or orgnization, this field will be empty. To search against the `project`: * specify the `scope` field as this project in your search request."
                  },
                  "resource": {
                    "type": "string",
                    "description": "The full resource name of the resource associated with this IAM policy. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`. See [Cloud Asset Inventory Resource Name Format](https://cloud.google.com/asset-inventory/docs/resource-name-format) for more information. To search against the `resource`: * use a field query. Example: `resource:organizations/123`"
                  },
                  "explanation": {
                    "id": "Explanation",
                    "type": "object",
                    "properties": {
                      "matchedPermissions": {
                        "type": "object",
                        "description": "The map from roles to their included permissions that match the permission query (i.e., a query containing `policy.role.permissions:`). Example: if query `policy.role.permissions:compute.disk.get` matches a policy binding that contains owner role, the matched_permissions will be `{\"roles/owner\": [\"compute.disk.get\"]}`. The roles can also be found in the returned `policy` bindings. Note that the map is populated only for requests with permission queries.",
                        "additionalProperties": {
                          "id": "Permissions",
                          "type": "object",
                          "properties": {
                            "permissions": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "A list of permissions. A sample permission string: `compute.disk.get`."
                            }
                          },
                          "description": "IAM permissions"
                        }
                      }
                    },
                    "description": "Explanation about the IAM policy search result. It contains additional information to explain why the search result matches the query."
                  }
                },
                "description": "A result of IAM Policy search, containing information of an IAM policy."
              },
              "description": "A list of IamPolicy that match the search query. Related information such as the associated resource is returned along with the policy."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Set if there are more results than those appearing in this response; to get the next set of results, call this method again, using this value as the `page_token`."
            }
          },
          "description": "Search all IAM policies response."
        }
      ]
  searchAllResources:
    description: |-
      Searches all Cloud resources within the specified scope, such as a project, folder, or organization. The caller must be granted the `cloudasset.assets.searchAllResources` permission on the desired scope, otherwise the request will be rejected.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/asset-inventory/docs/reference/rest/v1//earchAllResources
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "SearchAllResourcesResponse",
          "type": "object",
          "properties": {
            "results": {
              "type": "array",
              "items": {
                "id": "ResourceSearchResult",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The full resource name of this resource. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`. See [Cloud Asset Inventory Resource Name Format](https://cloud.google.com/asset-inventory/docs/resource-name-format) for more information. To search against the `name`: * use a field query. Example: `name:instance1` * use a free text query. Example: `instance1`"
                  },
                  "state": {
                    "type": "string",
                    "description": "The state of this resource. Different resources types have different state definitions that are mapped from various fields of different resource types. This field is available only when the resource's proto contains it. Example: If the resource is an instance provided by Compute Engine, its state will include PROVISIONING, STAGING, RUNNING, STOPPING, SUSPENDING, SUSPENDED, REPAIRING, and TERMINATED. See `status` definition in [API Reference](https://cloud.google.com/compute/docs/reference/rest/v1/instances). If the resource is a project provided by Cloud Resource Manager, its state will include LIFECYCLE_STATE_UNSPECIFIED, ACTIVE, DELETE_REQUESTED and DELETE_IN_PROGRESS. See `lifecycleState` definition in [API Reference](https://cloud.google.com/resource-manager/reference/rest/v1/projects). To search against the `state`: * use a field query. Example: `state:RUNNING` * use a free text query. Example: `RUNNING`"
                  },
                  "kmsKey": {
                    "type": "string",
                    "description": "The Cloud KMS [CryptoKey](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys?hl=en) name or [CryptoKeyVersion](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys.cryptoKeyVersions?hl=en) name. This field is available only when the resource's proto contains it. To search against the `kms_key`: * use a field query. Example: `kmsKey:key` * use a free text query. Example: `key`"
                  },
                  "labels": {
                    "type": "object",
                    "description": "Labels associated with this resource. See [Labelling and grouping GCP resources](https://cloud.google.com/blog/products/gcp/labelling-and-grouping-your-google-cloud-platform-resources) for more information. This field is available only when the resource's proto contains it. To search against the `labels`: * use a field query: - query on any label's key or value. Example: `labels:prod` - query by a given label. Example: `labels.env:prod` - query by a given label's existence. Example: `labels.env:*` * use a free text query. Example: `prod`",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "folders": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The folder(s) that this resource belongs to, in the form of folders/{FOLDER_NUMBER}. This field is available when the resource belongs to one or more folders. To search against `folders`: * use a field query. Example: `folders:(123 OR 456)` * use a free text query. Example: `123` * specify the `scope` field as this folder in your search request."
                  },
                  "project": {
                    "type": "string",
                    "description": "The project that this resource belongs to, in the form of projects/{PROJECT_NUMBER}. This field is available when the resource belongs to a project. To search against `project`: * use a field query. Example: `project:12345` * use a free text query. Example: `12345` * specify the `scope` field as this project in your search request."
                  },
                  "location": {
                    "type": "string",
                    "description": "Location can be `global`, regional like `us-east1`, or zonal like `us-west1-b`. This field is available only when the resource's proto contains it. To search against the `location`: * use a field query. Example: `location:us-west*` * use a free text query. Example: `us-west*`"
                  },
                  "assetType": {
                    "type": "string",
                    "description": "The type of this resource. Example: `compute.googleapis.com/Disk`. To search against the `asset_type`: * specify the `asset_type` field in your search request."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The create timestamp of this resource, at which the resource was created. The granularity is in seconds. Timestamp.nanos will always be 0. This field is available only when the resource's proto contains it. To search against `create_time`: * use a field query (value in seconds). Example: `createTime >= 1594294238`"
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The last update timestamp of this resource, at which the resource was last modified or deleted. The granularity is in seconds. Timestamp.nanos will always be 0. This field is available only when the resource's proto contains it. To search against `update_time`: * use a field query (value in seconds). Example: `updateTime < 1594294238`"
                  },
                  "description": {
                    "type": "string",
                    "description": "One or more paragraphs of text description of this resource. Maximum length could be up to 1M bytes. This field is available only when the resource's proto contains it. To search against the `description`: * use a field query. Example: `description:\"important instance\"` * use a free text query. Example: `\"important instance\"`"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The display name of this resource. This field is available only when the resource's proto contains it. To search against the `display_name`: * use a field query. Example: `displayName:\"My Instance\"` * use a free text query. Example: `\"My Instance\"`"
                  },
                  "networkTags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Network tags associated with this resource. Like labels, network tags are a type of annotations used to group GCP resources. See [Labelling GCP resources](https://cloud.google.com/blog/products/gcp/labelling-and-grouping-your-google-cloud-platform-resources) for more information. This field is available only when the resource's proto contains it. To search against the `network_tags`: * use a field query. Example: `networkTags:internal` * use a free text query. Example: `internal`"
                  },
                  "organization": {
                    "type": "string",
                    "description": "The organization that this resource belongs to, in the form of organizations/{ORGANIZATION_NUMBER}. This field is available when the resource belongs to an organization. To search against `organization`: * use a field query. Example: `organization:123` * use a free text query. Example: `123` * specify the `scope` field as this organization in your search request."
                  },
                  "parentAssetType": {
                    "type": "string",
                    "description": "The type of this resource's immediate parent, if there is one. To search against the `parent_asset_type`: * use a field query. Example: `parentAssetType:\"cloudresourcemanager.googleapis.com/Project\"` * use a free text query. Example: `cloudresourcemanager.googleapis.com/Project`"
                  },
                  "additionalAttributes": {
                    "type": "object",
                    "description": "The additional searchable attributes of this resource. The attributes may vary from one resource type to another. Examples: `projectId` for Project, `dnsName` for DNS ManagedZone. This field contains a subset of the resource metadata fields that are returned by the List or Get APIs provided by the corresponding GCP service (e.g., Compute Engine). see [API references and supported searchable attributes](https://cloud.google.com/asset-inventory/docs/supported-asset-types#searchable_asset_types) to see which fields are included. You can search values of these fields through free text search. However, you should not consume the field programically as the field names and values may change as the GCP service updates to a new incompatible API version. To search against the `additional_attributes`: * use a free text query to match the attributes values. Example: to search `additional_attributes = { dnsName: \"foobar\" }`, you can issue a query `foobar`.",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object."
                    }
                  },
                  "parentFullResourceName": {
                    "type": "string",
                    "description": "The full resource name of this resource's parent, if it has one. To search against the `parent_full_resource_name`: * use a field query. Example: `parentFullResourceName:\"project-name\"` * use a free text query. Example: `project-name`"
                  }
                },
                "description": "A result of Resource Search, containing information of a cloud resource."
              },
              "description": "A list of Resources that match the search query. It contains the resource standard metadata information."
            },
            "nextPageToken": {
              "type": "string",
              "description": "If there are more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`."
            }
          },
          "description": "Search all resources response."
        }
      ]
  feeds.create:
    description: |-
      Creates a feed in a parent project/folder/organization to listen to its asset updates.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/asset-inventory/docs/reference/rest/v1/feeds/create
    example:
      inputs: [
        {
          "id": "CreateFeedRequest",
          "type": "object",
          "properties": {
            "feed": {
              "id": "Feed",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Required. The format will be projects/{project_number}/feeds/{client-assigned_feed_identifier} or folders/{folder_number}/feeds/{client-assigned_feed_identifier} or organizations/{organization_number}/feeds/{client-assigned_feed_identifier} The client-assigned feed identifier must be unique within the parent project/folder/organization."
                },
                "condition": {
                  "id": "Expr",
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                    },
                    "location": {
                      "type": "string",
                      "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                    },
                    "expression": {
                      "type": "string",
                      "description": "Textual representation of an expression in Common Expression Language syntax."
                    },
                    "description": {
                      "type": "string",
                      "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                    }
                  },
                  "description": "A condition which determines whether an asset update should be published. If specified, an asset will be returned only when the expression evaluates to true. When set, `expression` field in the `Expr` must be a valid [CEL expression] (https://github.com/google/cel-spec) on a TemporalAsset with name `temporal_asset`. Example: a Feed with expression (\"temporal_asset.deleted == true\") will only publish Asset deletions. Other fields of `Expr` are optional. See our [user guide](https://cloud.google.com/asset-inventory/docs/monitoring-asset-changes#feed_with_condition) for detailed instructions."
                },
                "assetNames": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "A list of the full names of the assets to receive updates. You must specify either or both of asset_names and asset_types. Only asset updates matching specified asset_names or asset_types are exported to the feed. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`. See [Resource Names](https://cloud.google.com/apis/design/resource_names#full_resource_name) for more info."
                },
                "assetTypes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "A list of types of the assets to receive updates. You must specify either or both of asset_names and asset_types. Only asset updates matching specified asset_names or asset_types are exported to the feed. Example: `\"compute.googleapis.com/Disk\"` See [this topic](https://cloud.google.com/asset-inventory/docs/supported-asset-types) for a list of all supported asset types."
                },
                "contentType": {
                  "enum": [
                    "CONTENT_TYPE_UNSPECIFIED",
                    "RESOURCE",
                    "IAM_POLICY",
                    "ORG_POLICY",
                    "ACCESS_POLICY",
                    "OS_INVENTORY"
                  ],
                  "type": "string",
                  "description": "Asset content type. If not specified, no content but the asset name and type will be returned.",
                  "enumDescriptions": [
                    "Unspecified content type.",
                    "Resource metadata.",
                    "The actual IAM policy set on a resource.",
                    "The Cloud Organization Policy set on an asset.",
                    "The Cloud Access context manager Policy set on an asset.",
                    "The runtime OS Inventory information."
                  ]
                },
                "feedOutputConfig": {
                  "id": "FeedOutputConfig",
                  "type": "object",
                  "properties": {
                    "pubsubDestination": {
                      "id": "PubsubDestination",
                      "type": "object",
                      "properties": {
                        "topic": {
                          "type": "string",
                          "description": "The name of the Pub/Sub topic to publish to. Example: `projects/PROJECT_ID/topics/TOPIC_ID`."
                        }
                      },
                      "description": "Destination on Pub/Sub."
                    }
                  },
                  "description": "Required. Feed output configuration defining where the asset updates are published to."
                }
              },
              "description": "Required. The feed details. The field `name` must be empty and it will be generated in the format of: projects/project_number/feeds/feed_id folders/folder_number/feeds/feed_id organizations/organization_number/feeds/feed_id"
            },
            "feedId": {
              "type": "string",
              "description": "Required. This is the client-assigned asset feed identifier and it needs to be unique under a specific parent project/folder/organization."
            }
          },
          "description": "Create asset feed request."
        }
      ]
      outputs: [
        {
          "id": "Feed",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Required. The format will be projects/{project_number}/feeds/{client-assigned_feed_identifier} or folders/{folder_number}/feeds/{client-assigned_feed_identifier} or organizations/{organization_number}/feeds/{client-assigned_feed_identifier} The client-assigned feed identifier must be unique within the parent project/folder/organization."
            },
            "condition": {
              "id": "Expr",
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                },
                "location": {
                  "type": "string",
                  "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                },
                "expression": {
                  "type": "string",
                  "description": "Textual representation of an expression in Common Expression Language syntax."
                },
                "description": {
                  "type": "string",
                  "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                }
              },
              "description": "A condition which determines whether an asset update should be published. If specified, an asset will be returned only when the expression evaluates to true. When set, `expression` field in the `Expr` must be a valid [CEL expression] (https://github.com/google/cel-spec) on a TemporalAsset with name `temporal_asset`. Example: a Feed with expression (\"temporal_asset.deleted == true\") will only publish Asset deletions. Other fields of `Expr` are optional. See our [user guide](https://cloud.google.com/asset-inventory/docs/monitoring-asset-changes#feed_with_condition) for detailed instructions."
            },
            "assetNames": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of the full names of the assets to receive updates. You must specify either or both of asset_names and asset_types. Only asset updates matching specified asset_names or asset_types are exported to the feed. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`. See [Resource Names](https://cloud.google.com/apis/design/resource_names#full_resource_name) for more info."
            },
            "assetTypes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of types of the assets to receive updates. You must specify either or both of asset_names and asset_types. Only asset updates matching specified asset_names or asset_types are exported to the feed. Example: `\"compute.googleapis.com/Disk\"` See [this topic](https://cloud.google.com/asset-inventory/docs/supported-asset-types) for a list of all supported asset types."
            },
            "contentType": {
              "enum": [
                "CONTENT_TYPE_UNSPECIFIED",
                "RESOURCE",
                "IAM_POLICY",
                "ORG_POLICY",
                "ACCESS_POLICY",
                "OS_INVENTORY"
              ],
              "type": "string",
              "description": "Asset content type. If not specified, no content but the asset name and type will be returned.",
              "enumDescriptions": [
                "Unspecified content type.",
                "Resource metadata.",
                "The actual IAM policy set on a resource.",
                "The Cloud Organization Policy set on an asset.",
                "The Cloud Access context manager Policy set on an asset.",
                "The runtime OS Inventory information."
              ]
            },
            "feedOutputConfig": {
              "id": "FeedOutputConfig",
              "type": "object",
              "properties": {
                "pubsubDestination": {
                  "id": "PubsubDestination",
                  "type": "object",
                  "properties": {
                    "topic": {
                      "type": "string",
                      "description": "The name of the Pub/Sub topic to publish to. Example: `projects/PROJECT_ID/topics/TOPIC_ID`."
                    }
                  },
                  "description": "Destination on Pub/Sub."
                }
              },
              "description": "Required. Feed output configuration defining where the asset updates are published to."
            }
          },
          "description": "An asset feed used to export asset updates to a destinations. An asset feed filter controls what updates are exported. The asset feed must be created within a project, organization, or folder. Supported destinations are: Pub/Sub topics."
        }
      ]
  feeds.delete:
    description: |-
      Deletes an asset feed.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/asset-inventory/docs/reference/rest/v1/feeds/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  feeds.get:
    description: |-
      Gets details about an asset feed.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/asset-inventory/docs/reference/rest/v1/feeds/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Feed",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Required. The format will be projects/{project_number}/feeds/{client-assigned_feed_identifier} or folders/{folder_number}/feeds/{client-assigned_feed_identifier} or organizations/{organization_number}/feeds/{client-assigned_feed_identifier} The client-assigned feed identifier must be unique within the parent project/folder/organization."
            },
            "condition": {
              "id": "Expr",
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                },
                "location": {
                  "type": "string",
                  "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                },
                "expression": {
                  "type": "string",
                  "description": "Textual representation of an expression in Common Expression Language syntax."
                },
                "description": {
                  "type": "string",
                  "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                }
              },
              "description": "A condition which determines whether an asset update should be published. If specified, an asset will be returned only when the expression evaluates to true. When set, `expression` field in the `Expr` must be a valid [CEL expression] (https://github.com/google/cel-spec) on a TemporalAsset with name `temporal_asset`. Example: a Feed with expression (\"temporal_asset.deleted == true\") will only publish Asset deletions. Other fields of `Expr` are optional. See our [user guide](https://cloud.google.com/asset-inventory/docs/monitoring-asset-changes#feed_with_condition) for detailed instructions."
            },
            "assetNames": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of the full names of the assets to receive updates. You must specify either or both of asset_names and asset_types. Only asset updates matching specified asset_names or asset_types are exported to the feed. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`. See [Resource Names](https://cloud.google.com/apis/design/resource_names#full_resource_name) for more info."
            },
            "assetTypes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of types of the assets to receive updates. You must specify either or both of asset_names and asset_types. Only asset updates matching specified asset_names or asset_types are exported to the feed. Example: `\"compute.googleapis.com/Disk\"` See [this topic](https://cloud.google.com/asset-inventory/docs/supported-asset-types) for a list of all supported asset types."
            },
            "contentType": {
              "enum": [
                "CONTENT_TYPE_UNSPECIFIED",
                "RESOURCE",
                "IAM_POLICY",
                "ORG_POLICY",
                "ACCESS_POLICY",
                "OS_INVENTORY"
              ],
              "type": "string",
              "description": "Asset content type. If not specified, no content but the asset name and type will be returned.",
              "enumDescriptions": [
                "Unspecified content type.",
                "Resource metadata.",
                "The actual IAM policy set on a resource.",
                "The Cloud Organization Policy set on an asset.",
                "The Cloud Access context manager Policy set on an asset.",
                "The runtime OS Inventory information."
              ]
            },
            "feedOutputConfig": {
              "id": "FeedOutputConfig",
              "type": "object",
              "properties": {
                "pubsubDestination": {
                  "id": "PubsubDestination",
                  "type": "object",
                  "properties": {
                    "topic": {
                      "type": "string",
                      "description": "The name of the Pub/Sub topic to publish to. Example: `projects/PROJECT_ID/topics/TOPIC_ID`."
                    }
                  },
                  "description": "Destination on Pub/Sub."
                }
              },
              "description": "Required. Feed output configuration defining where the asset updates are published to."
            }
          },
          "description": "An asset feed used to export asset updates to a destinations. An asset feed filter controls what updates are exported. The asset feed must be created within a project, organization, or folder. Supported destinations are: Pub/Sub topics."
        }
      ]
  feeds.list:
    description: |-
      Lists all asset feeds in a parent project/folder/organization.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/asset-inventory/docs/reference/rest/v1/feeds/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListFeedsResponse",
          "type": "object",
          "properties": {
            "feeds": {
              "type": "array",
              "items": {
                "id": "Feed",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Required. The format will be projects/{project_number}/feeds/{client-assigned_feed_identifier} or folders/{folder_number}/feeds/{client-assigned_feed_identifier} or organizations/{organization_number}/feeds/{client-assigned_feed_identifier} The client-assigned feed identifier must be unique within the parent project/folder/organization."
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "A condition which determines whether an asset update should be published. If specified, an asset will be returned only when the expression evaluates to true. When set, `expression` field in the `Expr` must be a valid [CEL expression] (https://github.com/google/cel-spec) on a TemporalAsset with name `temporal_asset`. Example: a Feed with expression (\"temporal_asset.deleted == true\") will only publish Asset deletions. Other fields of `Expr` are optional. See our [user guide](https://cloud.google.com/asset-inventory/docs/monitoring-asset-changes#feed_with_condition) for detailed instructions."
                  },
                  "assetNames": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "A list of the full names of the assets to receive updates. You must specify either or both of asset_names and asset_types. Only asset updates matching specified asset_names or asset_types are exported to the feed. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`. See [Resource Names](https://cloud.google.com/apis/design/resource_names#full_resource_name) for more info."
                  },
                  "assetTypes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "A list of types of the assets to receive updates. You must specify either or both of asset_names and asset_types. Only asset updates matching specified asset_names or asset_types are exported to the feed. Example: `\"compute.googleapis.com/Disk\"` See [this topic](https://cloud.google.com/asset-inventory/docs/supported-asset-types) for a list of all supported asset types."
                  },
                  "contentType": {
                    "enum": [
                      "CONTENT_TYPE_UNSPECIFIED",
                      "RESOURCE",
                      "IAM_POLICY",
                      "ORG_POLICY",
                      "ACCESS_POLICY",
                      "OS_INVENTORY"
                    ],
                    "type": "string",
                    "description": "Asset content type. If not specified, no content but the asset name and type will be returned.",
                    "enumDescriptions": [
                      "Unspecified content type.",
                      "Resource metadata.",
                      "The actual IAM policy set on a resource.",
                      "The Cloud Organization Policy set on an asset.",
                      "The Cloud Access context manager Policy set on an asset.",
                      "The runtime OS Inventory information."
                    ]
                  },
                  "feedOutputConfig": {
                    "id": "FeedOutputConfig",
                    "type": "object",
                    "properties": {
                      "pubsubDestination": {
                        "id": "PubsubDestination",
                        "type": "object",
                        "properties": {
                          "topic": {
                            "type": "string",
                            "description": "The name of the Pub/Sub topic to publish to. Example: `projects/PROJECT_ID/topics/TOPIC_ID`."
                          }
                        },
                        "description": "Destination on Pub/Sub."
                      }
                    },
                    "description": "Required. Feed output configuration defining where the asset updates are published to."
                  }
                },
                "description": "An asset feed used to export asset updates to a destinations. An asset feed filter controls what updates are exported. The asset feed must be created within a project, organization, or folder. Supported destinations are: Pub/Sub topics."
              },
              "description": "A list of feeds."
            }
          }
        }
      ]
  feeds.patch:
    description: |-
      Updates an asset feed configuration.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/asset-inventory/docs/reference/rest/v1/feeds/patch
    example:
      inputs: [
        {
          "id": "UpdateFeedRequest",
          "type": "object",
          "properties": {
            "feed": {
              "id": "Feed",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Required. The format will be projects/{project_number}/feeds/{client-assigned_feed_identifier} or folders/{folder_number}/feeds/{client-assigned_feed_identifier} or organizations/{organization_number}/feeds/{client-assigned_feed_identifier} The client-assigned feed identifier must be unique within the parent project/folder/organization."
                },
                "condition": {
                  "id": "Expr",
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                    },
                    "location": {
                      "type": "string",
                      "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                    },
                    "expression": {
                      "type": "string",
                      "description": "Textual representation of an expression in Common Expression Language syntax."
                    },
                    "description": {
                      "type": "string",
                      "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                    }
                  },
                  "description": "A condition which determines whether an asset update should be published. If specified, an asset will be returned only when the expression evaluates to true. When set, `expression` field in the `Expr` must be a valid [CEL expression] (https://github.com/google/cel-spec) on a TemporalAsset with name `temporal_asset`. Example: a Feed with expression (\"temporal_asset.deleted == true\") will only publish Asset deletions. Other fields of `Expr` are optional. See our [user guide](https://cloud.google.com/asset-inventory/docs/monitoring-asset-changes#feed_with_condition) for detailed instructions."
                },
                "assetNames": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "A list of the full names of the assets to receive updates. You must specify either or both of asset_names and asset_types. Only asset updates matching specified asset_names or asset_types are exported to the feed. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`. See [Resource Names](https://cloud.google.com/apis/design/resource_names#full_resource_name) for more info."
                },
                "assetTypes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "A list of types of the assets to receive updates. You must specify either or both of asset_names and asset_types. Only asset updates matching specified asset_names or asset_types are exported to the feed. Example: `\"compute.googleapis.com/Disk\"` See [this topic](https://cloud.google.com/asset-inventory/docs/supported-asset-types) for a list of all supported asset types."
                },
                "contentType": {
                  "enum": [
                    "CONTENT_TYPE_UNSPECIFIED",
                    "RESOURCE",
                    "IAM_POLICY",
                    "ORG_POLICY",
                    "ACCESS_POLICY",
                    "OS_INVENTORY"
                  ],
                  "type": "string",
                  "description": "Asset content type. If not specified, no content but the asset name and type will be returned.",
                  "enumDescriptions": [
                    "Unspecified content type.",
                    "Resource metadata.",
                    "The actual IAM policy set on a resource.",
                    "The Cloud Organization Policy set on an asset.",
                    "The Cloud Access context manager Policy set on an asset.",
                    "The runtime OS Inventory information."
                  ]
                },
                "feedOutputConfig": {
                  "id": "FeedOutputConfig",
                  "type": "object",
                  "properties": {
                    "pubsubDestination": {
                      "id": "PubsubDestination",
                      "type": "object",
                      "properties": {
                        "topic": {
                          "type": "string",
                          "description": "The name of the Pub/Sub topic to publish to. Example: `projects/PROJECT_ID/topics/TOPIC_ID`."
                        }
                      },
                      "description": "Destination on Pub/Sub."
                    }
                  },
                  "description": "Required. Feed output configuration defining where the asset updates are published to."
                }
              },
              "description": "An asset feed used to export asset updates to a destinations. An asset feed filter controls what updates are exported. The asset feed must be created within a project, organization, or folder. Supported destinations are: Pub/Sub topics."
            },
            "updateMask": {
              "type": "string",
              "format": "google-fieldmask",
              "description": "Required. Only updates the `feed` fields indicated by this mask. The field mask must not be empty, and it must not contain fields that are immutable or only set by the server."
            }
          },
          "description": "Update asset feed request."
        }
      ]
      outputs: [
        {
          "id": "Feed",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Required. The format will be projects/{project_number}/feeds/{client-assigned_feed_identifier} or folders/{folder_number}/feeds/{client-assigned_feed_identifier} or organizations/{organization_number}/feeds/{client-assigned_feed_identifier} The client-assigned feed identifier must be unique within the parent project/folder/organization."
            },
            "condition": {
              "id": "Expr",
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                },
                "location": {
                  "type": "string",
                  "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                },
                "expression": {
                  "type": "string",
                  "description": "Textual representation of an expression in Common Expression Language syntax."
                },
                "description": {
                  "type": "string",
                  "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                }
              },
              "description": "A condition which determines whether an asset update should be published. If specified, an asset will be returned only when the expression evaluates to true. When set, `expression` field in the `Expr` must be a valid [CEL expression] (https://github.com/google/cel-spec) on a TemporalAsset with name `temporal_asset`. Example: a Feed with expression (\"temporal_asset.deleted == true\") will only publish Asset deletions. Other fields of `Expr` are optional. See our [user guide](https://cloud.google.com/asset-inventory/docs/monitoring-asset-changes#feed_with_condition) for detailed instructions."
            },
            "assetNames": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of the full names of the assets to receive updates. You must specify either or both of asset_names and asset_types. Only asset updates matching specified asset_names or asset_types are exported to the feed. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`. See [Resource Names](https://cloud.google.com/apis/design/resource_names#full_resource_name) for more info."
            },
            "assetTypes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of types of the assets to receive updates. You must specify either or both of asset_names and asset_types. Only asset updates matching specified asset_names or asset_types are exported to the feed. Example: `\"compute.googleapis.com/Disk\"` See [this topic](https://cloud.google.com/asset-inventory/docs/supported-asset-types) for a list of all supported asset types."
            },
            "contentType": {
              "enum": [
                "CONTENT_TYPE_UNSPECIFIED",
                "RESOURCE",
                "IAM_POLICY",
                "ORG_POLICY",
                "ACCESS_POLICY",
                "OS_INVENTORY"
              ],
              "type": "string",
              "description": "Asset content type. If not specified, no content but the asset name and type will be returned.",
              "enumDescriptions": [
                "Unspecified content type.",
                "Resource metadata.",
                "The actual IAM policy set on a resource.",
                "The Cloud Organization Policy set on an asset.",
                "The Cloud Access context manager Policy set on an asset.",
                "The runtime OS Inventory information."
              ]
            },
            "feedOutputConfig": {
              "id": "FeedOutputConfig",
              "type": "object",
              "properties": {
                "pubsubDestination": {
                  "id": "PubsubDestination",
                  "type": "object",
                  "properties": {
                    "topic": {
                      "type": "string",
                      "description": "The name of the Pub/Sub topic to publish to. Example: `projects/PROJECT_ID/topics/TOPIC_ID`."
                    }
                  },
                  "description": "Destination on Pub/Sub."
                }
              },
              "description": "Required. Feed output configuration defining where the asset updates are published to."
            }
          },
          "description": "An asset feed used to export asset updates to a destinations. An asset feed filter controls what updates are exported. The asset feed must be created within a project, organization, or folder. Supported destinations are: Pub/Sub topics."
        }
      ]
  analyzeIamPolicy:
    description: |-
      Analyzes IAM policies to answer which identities have what accesses on which resources.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/asset-inventory/docs/reference/rest/v1//nalyzeIamPolicy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  analyzeIamPolicyLongrunning:
    description: |-
      Analyzes IAM policies asynchronously to answer which identities have what accesses on which resources, and writes the analysis results to a Google Cloud Storage or a BigQuery destination. For Cloud Storage destination, the output format is the JSON format that represents a AnalyzeIamPolicyResponse. This method implements the google.longrunning.Operation, which allows you to track the operation status. We recommend intervals of at least 2 seconds with exponential backoff retry to poll the operation result. The metadata contains the request to help callers to map responses to requests.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/asset-inventory/docs/reference/rest/v1//nalyzeIamPolicyLongrunning
    example:
      inputs: [
        {
          "id": "AnalyzeIamPolicyLongrunningRequest",
          "type": "object",
          "properties": {
            "outputConfig": {
              "id": "IamPolicyAnalysisOutputConfig",
              "type": "object",
              "properties": {
                "gcsDestination": {
                  "id": "GoogleCloudAssetV1GcsDestination",
                  "type": "object",
                  "properties": {
                    "uri": {
                      "type": "string",
                      "description": "Required. The uri of the Cloud Storage object. It's the same uri that is used by gsutil. Example: \"gs://bucket_name/object_name\". See [Viewing and Editing Object Metadata](https://cloud.google.com/storage/docs/viewing-editing-metadata) for more information. If the specified Cloud Storage object already exists and there is no [hold](https://cloud.google.com/storage/docs/object-holds), it will be overwritten with the analysis result."
                    }
                  },
                  "description": "Destination on Cloud Storage."
                },
                "bigqueryDestination": {
                  "id": "GoogleCloudAssetV1BigQueryDestination",
                  "type": "object",
                  "properties": {
                    "dataset": {
                      "type": "string",
                      "description": "Required. The BigQuery dataset in format \"projects/projectId/datasets/datasetId\", to which the analysis results should be exported. If this dataset does not exist, the export call will return an INVALID_ARGUMENT error."
                    },
                    "tablePrefix": {
                      "type": "string",
                      "description": "Required. The prefix of the BigQuery tables to which the analysis results will be written. Tables will be created based on this table_prefix if not exist: * _analysis table will contain export operation's metadata. * _analysis_result will contain all the IamPolicyAnalysisResult. When [partition_key] is specified, both tables will be partitioned based on the [partition_key]."
                    },
                    "partitionKey": {
                      "enum": [
                        "PARTITION_KEY_UNSPECIFIED",
                        "REQUEST_TIME"
                      ],
                      "type": "string",
                      "description": "The partition key for BigQuery partitioned table.",
                      "enumDescriptions": [
                        "Unspecified partition key. Tables won't be partitioned using this option.",
                        "The time when the request is received. If specified as partition key, the result table(s) is partitoned by the RequestTime column, an additional timestamp column representing when the request was received."
                      ]
                    },
                    "writeDisposition": {
                      "type": "string",
                      "description": "Optional. Specifies the action that occurs if the destination table or partition already exists. The following values are supported: * WRITE_TRUNCATE: If the table or partition already exists, BigQuery overwrites the entire table or all the partitions data. * WRITE_APPEND: If the table or partition already exists, BigQuery appends the data to the table or the latest partition. * WRITE_EMPTY: If the table already exists and contains data, an error is returned. The default value is WRITE_APPEND. Each action is atomic and only occurs if BigQuery is able to complete the job successfully. Details are at https://cloud.google.com/bigquery/docs/loading-data-local#appending_to_or_overwriting_a_table_using_a_local_file."
                    }
                  },
                  "description": "Destination on BigQuery."
                }
              },
              "description": "Required. Output configuration indicating where the results will be output to."
            },
            "analysisQuery": {
              "id": "IamPolicyAnalysisQuery",
              "type": "object",
              "properties": {
                "scope": {
                  "type": "string",
                  "description": "Required. The relative name of the root asset. Only resources and IAM policies within the scope will be analyzed. This can only be an organization number (such as \"organizations/123\"), a folder number (such as \"folders/123\"), a project ID (such as \"projects/my-project-id\"), or a project number (such as \"projects/12345\"). To know how to get organization id, visit [here ](https://cloud.google.com/resource-manager/docs/creating-managing-organization#retrieving_your_organization_id). To know how to get folder or project id, visit [here ](https://cloud.google.com/resource-manager/docs/creating-managing-folders#viewing_or_listing_folders_and_projects)."
                },
                "options": {
                  "id": "Options",
                  "type": "object",
                  "properties": {
                    "expandRoles": {
                      "type": "boolean",
                      "description": "Optional. If true, the access section of result will expand any roles appearing in IAM policy bindings to include their permissions. If IamPolicyAnalysisQuery.access_selector is specified, the access section of the result will be determined by the selector, and this flag is not allowed to set. Default is false."
                    },
                    "expandGroups": {
                      "type": "boolean",
                      "description": "Optional. If true, the identities section of the result will expand any Google groups appearing in an IAM policy binding. If IamPolicyAnalysisQuery.identity_selector is specified, the identity in the result will be determined by the selector, and this flag is not allowed to set. Default is false."
                    },
                    "expandResources": {
                      "type": "boolean",
                      "description": "Optional. If true and IamPolicyAnalysisQuery.resource_selector is not specified, the resource section of the result will expand any resource attached to an IAM policy to include resources lower in the resource hierarchy. For example, if the request analyzes for which resources user A has permission P, and the results include an IAM policy with P on a GCP folder, the results will also include resources in that folder with permission P. If true and IamPolicyAnalysisQuery.resource_selector is specified, the resource section of the result will expand the specified resource to include resources lower in the resource hierarchy. Only project or lower resources are supported. Folder and organization resource cannot be used together with this option. For example, if the request analyzes for which users have permission P on a GCP project with this option enabled, the results will include all users who have permission P on that project or any lower resource. Default is false."
                    },
                    "outputGroupEdges": {
                      "type": "boolean",
                      "description": "Optional. If true, the result will output group identity edges, starting from the binding's group members, to any expanded identities. Default is false."
                    },
                    "outputResourceEdges": {
                      "type": "boolean",
                      "description": "Optional. If true, the result will output resource edges, starting from the policy attached resource, to any expanded resources. Default is false."
                    },
                    "analyzeServiceAccountImpersonation": {
                      "type": "boolean",
                      "description": "Optional. If true, the response will include access analysis from identities to resources via service account impersonation. This is a very expensive operation, because many derived queries will be executed. We highly recommend you use AssetService.AnalyzeIamPolicyLongrunning rpc instead. For example, if the request analyzes for which resources user A has permission P, and there's an IAM policy states user A has iam.serviceAccounts.getAccessToken permission to a service account SA, and there's another IAM policy states service account SA has permission P to a GCP folder F, then user A potentially has access to the GCP folder F. And those advanced analysis results will be included in AnalyzeIamPolicyResponse.service_account_impersonation_analysis. Another example, if the request analyzes for who has permission P to a GCP folder F, and there's an IAM policy states user A has iam.serviceAccounts.actAs permission to a service account SA, and there's another IAM policy states service account SA has permission P to the GCP folder F, then user A potentially has access to the GCP folder F. And those advanced analysis results will be included in AnalyzeIamPolicyResponse.service_account_impersonation_analysis. Default is false."
                    }
                  },
                  "description": "Optional. The query options."
                },
                "accessSelector": {
                  "id": "AccessSelector",
                  "type": "object",
                  "properties": {
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Optional. The roles to appear in result."
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Optional. The permissions to appear in result."
                    }
                  },
                  "description": "Optional. Specifies roles or permissions for analysis. This is optional."
                },
                "conditionContext": {
                  "id": "ConditionContext",
                  "type": "object",
                  "properties": {
                    "accessTime": {
                      "type": "string",
                      "format": "google-datetime",
                      "description": "The hypothetical access timestamp to evaluate IAM conditions. Note that this value must not be earlier than the current time; otherwise, an INVALID_ARGUMENT error will be returned."
                    }
                  },
                  "description": "Optional. The hypothetical context for IAM conditions evaluation."
                },
                "identitySelector": {
                  "id": "IdentitySelector",
                  "type": "object",
                  "properties": {
                    "identity": {
                      "type": "string",
                      "description": "Required. The identity appear in the form of members in [IAM policy binding](https://cloud.google.com/iam/reference/rest/v1/Binding). The examples of supported forms are: \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\". Notice that wildcard characters (such as * and ?) are not supported. You must give a specific identity."
                    }
                  },
                  "description": "Optional. Specifies an identity for analysis."
                },
                "resourceSelector": {
                  "id": "ResourceSelector",
                  "type": "object",
                  "properties": {
                    "fullResourceName": {
                      "type": "string",
                      "description": "Required. The [full resource name] (https://cloud.google.com/asset-inventory/docs/resource-name-format) of a resource of [supported resource types](https://cloud.google.com/asset-inventory/docs/supported-asset-types#analyzable_asset_types)."
                    }
                  },
                  "description": "Optional. Specifies a resource for analysis."
                }
              },
              "description": "Required. The request query."
            }
          },
          "description": "A request message for AssetService.AnalyzeIamPolicyLongrunning."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  analyzeMove:
    description: |-
      Analyze moving a resource to a specified destination without kicking off the actual move. The analysis is best effort depending on the user's permissions of viewing different hierarchical policies and configurations. The policies and configuration are subject to change before the actual resource migration takes place.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/asset-inventory/docs/reference/rest/v1//nalyzeMove
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "AnalyzeMoveResponse",
          "type": "object",
          "properties": {
            "moveAnalysis": {
              "type": "array",
              "items": {
                "id": "MoveAnalysis",
                "type": "object",
                "properties": {
                  "error": {
                    "id": "Status",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The status code, which should be an enum value of google.rpc.Code."
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object. Contains field @type with type URL."
                          }
                        },
                        "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                      },
                      "message": {
                        "type": "string",
                        "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                      }
                    },
                    "description": "Description of error encountered when performing the analysis."
                  },
                  "analysis": {
                    "id": "MoveAnalysisResult",
                    "type": "object",
                    "properties": {
                      "blockers": {
                        "type": "array",
                        "items": {
                          "id": "MoveImpact",
                          "type": "object",
                          "properties": {
                            "detail": {
                              "type": "string",
                              "description": "User friendly impact detail in a free form message."
                            }
                          },
                          "description": "A message to group impacts of moving the target resource."
                        },
                        "description": "Blocking information that would prevent the target resource from moving to the specified destination at runtime."
                      },
                      "warnings": {
                        "type": "array",
                        "items": {
                          "id": "MoveImpact",
                          "type": "object",
                          "properties": {
                            "detail": {
                              "type": "string",
                              "description": "User friendly impact detail in a free form message."
                            }
                          },
                          "description": "A message to group impacts of moving the target resource."
                        },
                        "description": "Warning information indicating that moving the target resource to the specified destination might be unsafe. This can include important policy information and configuration changes, but will not block moves at runtime."
                      }
                    },
                    "description": "Analysis result of moving the target resource."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The user friendly display name of the analysis. E.g. IAM, Organization Policy etc."
                  }
                },
                "description": "A message to group the analysis information."
              },
              "description": "The list of analyses returned from performing the intended resource move analysis. The analysis is grouped by different Cloud services."
            }
          },
          "description": "The response message for resource move analysis."
        }
      ]
  operations.get:
    description: |-
      Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/asset-inventory/docs/reference/rest/v1/operations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  exportAssets:
    description: |-
      Exports assets with time and resource types to a given Cloud Storage location/BigQuery table. For Cloud Storage location destinations, the output format is newline-delimited JSON. Each line represents a google.cloud.asset.v1.Asset in the JSON format; for BigQuery table destinations, the output table stores the fields in asset proto as columns. This API implements the google.longrunning.Operation API , which allows you to keep track of the export. We recommend intervals of at least 2 seconds with exponential retry to poll the export operation result. For regular-size resource parent, the export operation usually finishes within 5 minutes.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/asset-inventory/docs/reference/rest/v1//xportAssets
    example:
      inputs: [
        {
          "id": "ExportAssetsRequest",
          "type": "object",
          "properties": {
            "readTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Timestamp to take an asset snapshot. This can only be set to a timestamp between the current time and the current time minus 35 days (inclusive). If not specified, the current time will be used. Due to delays in resource data collection and indexing, there is a volatile window during which running the same query may get different results."
            },
            "assetTypes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of asset types to take a snapshot for. For example: \"compute.googleapis.com/Disk\". Regular expressions are also supported. For example: * \"compute.googleapis.com.*\" snapshots resources whose asset type starts with \"compute.googleapis.com\". * \".*Instance\" snapshots resources whose asset type ends with \"Instance\". * \".*Instance.*\" snapshots resources whose asset type contains \"Instance\". See [RE2](https://github.com/google/re2/wiki/Syntax) for all supported regular expression syntax. If the regular expression does not match any supported asset type, an INVALID_ARGUMENT error will be returned. If specified, only matching assets will be returned, otherwise, it will snapshot all asset types. See [Introduction to Cloud Asset Inventory](https://cloud.google.com/asset-inventory/docs/overview) for all supported asset types."
            },
            "contentType": {
              "enum": [
                "CONTENT_TYPE_UNSPECIFIED",
                "RESOURCE",
                "IAM_POLICY",
                "ORG_POLICY",
                "ACCESS_POLICY",
                "OS_INVENTORY"
              ],
              "type": "string",
              "description": "Asset content type. If not specified, no content but the asset name will be returned.",
              "enumDescriptions": [
                "Unspecified content type.",
                "Resource metadata.",
                "The actual IAM policy set on a resource.",
                "The Cloud Organization Policy set on an asset.",
                "The Cloud Access context manager Policy set on an asset.",
                "The runtime OS Inventory information."
              ]
            },
            "outputConfig": {
              "id": "OutputConfig",
              "type": "object",
              "properties": {
                "gcsDestination": {
                  "id": "GcsDestination",
                  "type": "object",
                  "properties": {
                    "uri": {
                      "type": "string",
                      "description": "The uri of the Cloud Storage object. It's the same uri that is used by gsutil. Example: \"gs://bucket_name/object_name\". See [Viewing and Editing Object Metadata](https://cloud.google.com/storage/docs/viewing-editing-metadata) for more information. If the specified Cloud Storage object already exists and there is no [hold](https://cloud.google.com/storage/docs/object-holds), it will be overwritten with the exported result."
                    },
                    "uriPrefix": {
                      "type": "string",
                      "description": "The uri prefix of all generated Cloud Storage objects. Example: \"gs://bucket_name/object_name_prefix\". Each object uri is in format: \"gs://bucket_name/object_name_prefix// and only contains assets for that type. starts from 0. Example: \"gs://bucket_name/object_name_prefix/compute.googleapis.com/Disk/0\" is the first shard of output objects containing all compute.googleapis.com/Disk assets. An INVALID_ARGUMENT error will be returned if file with the same name \"gs://bucket_name/object_name_prefix\" already exists."
                    }
                  },
                  "description": "Destination on Cloud Storage."
                },
                "bigqueryDestination": {
                  "id": "BigQueryDestination",
                  "type": "object",
                  "properties": {
                    "force": {
                      "type": "boolean",
                      "description": "If the destination table already exists and this flag is `TRUE`, the table will be overwritten by the contents of assets snapshot. If the flag is `FALSE` or unset and the destination table already exists, the export call returns an INVALID_ARGUMEMT error."
                    },
                    "table": {
                      "type": "string",
                      "description": "Required. The BigQuery table to which the snapshot result should be written. If this table does not exist, a new table with the given name will be created."
                    },
                    "dataset": {
                      "type": "string",
                      "description": "Required. The BigQuery dataset in format \"projects/projectId/datasets/datasetId\", to which the snapshot result should be exported. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error."
                    },
                    "partitionSpec": {
                      "id": "PartitionSpec",
                      "type": "object",
                      "properties": {
                        "partitionKey": {
                          "enum": [
                            "PARTITION_KEY_UNSPECIFIED",
                            "READ_TIME",
                            "REQUEST_TIME"
                          ],
                          "type": "string",
                          "description": "The partition key for BigQuery partitioned table.",
                          "enumDescriptions": [
                            "Unspecified partition key. If used, it means using non-partitioned table.",
                            "The time when the snapshot is taken. If specified as partition key, the result table(s) is partitoned by the additional timestamp column, readTime. If [read_time] in ExportAssetsRequest is specified, the readTime column's value will be the same as it. Otherwise, its value will be the current time that is used to take the snapshot.",
                            "The time when the request is received and started to be processed. If specified as partition key, the result table(s) is partitoned by the requestTime column, an additional timestamp column representing when the request was received."
                          ]
                        }
                      },
                      "description": "[partition_spec] determines whether to export to partitioned table(s) and how to partition the data. If [partition_spec] is unset or [partition_spec.partition_key] is unset or `PARTITION_KEY_UNSPECIFIED`, the snapshot results will be exported to non-partitioned table(s). [force] will decide whether to overwrite existing table(s). If [partition_spec] is specified. First, the snapshot results will be written to partitioned table(s) with two additional timestamp columns, readTime and requestTime, one of which will be the partition key. Secondly, in the case when any destination table already exists, it will first try to update existing table's schema as necessary by appending additional columns. Then, if [force] is `TRUE`, the corresponding partition will be overwritten by the snapshot results (data in different partitions will remain intact); if [force] is unset or `FALSE`, it will append the data. An error will be returned if the schema update or data appension fails."
                    },
                    "separateTablesPerAssetType": {
                      "type": "boolean",
                      "description": "If this flag is `TRUE`, the snapshot results will be written to one or multiple tables, each of which contains results of one asset type. The [force] and [partition_spec] fields will apply to each of them. Field [table] will be concatenated with \"_\" and the asset type names (see https://cloud.google.com/asset-inventory/docs/supported-asset-types for supported asset types) to construct per-asset-type table names, in which all non-alphanumeric characters like \".\" and \"/\" will be substituted by \"_\". Example: if field [table] is \"mytable\" and snapshot results contain \"storage.googleapis.com/Bucket\" assets, the corresponding table name will be \"mytable_storage_googleapis_com_Bucket\". If any of these tables does not exist, a new table with the concatenated name will be created. When [content_type] in the ExportAssetsRequest is `RESOURCE`, the schema of each table will include RECORD-type columns mapped to the nested fields in the Asset.resource.data field of that asset type (up to the 15 nested level BigQuery supports (https://cloud.google.com/bigquery/docs/nested-repeated#limitations)). The fields in >15 nested levels will be stored in JSON format string as a child column of its parent RECORD column. If error occurs when exporting to any table, the whole export call will return an error but the export results that already succeed will persist. Example: if exporting to table_type_A succeeds when exporting to table_type_B fails during one export call, the results in table_type_A will persist and there will not be partial results persisting in a table."
                    }
                  },
                  "description": "Destination on BigQuery. The output table stores the fields in asset proto as columns in BigQuery."
                }
              },
              "description": "Required. Output configuration indicating where the results will be output to."
            }
          },
          "description": "Export asset request."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]