Product:
  name: GCP Translate
  versions: [3.0.0]
  package: google.gcp.translate
  description: |-
    Cloud Translation
  link: https://cloud.google.com/translate
  contentType: json
Operations:
  projects.detectLanguage:
    description: |-
      Detects the language of text within a request.
    versions:
      from: 3.0.0
    link: https://cloud.google.com/translate/docs/reference/rest/v3/projects/detectLanguage
    example:
      inputs: [
        {
          "id": "DetectLanguageRequest",
          "type": "object",
          "properties": {
            "model": {
              "type": "string",
              "description": "Optional. The language detection model to be used. Format: `projects/{project-number-or-id}/locations/{location-id}/models/language-detection/{model-id}` Only one language detection model is currently supported: `projects/{project-number-or-id}/locations/{location-id}/models/language-detection/default`. If not specified, the default model is used."
            },
            "labels": {
              "type": "object",
              "description": "Optional. The labels with user-defined metadata for the request. Label keys and values can be no longer than 63 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter. See https://cloud.google.com/translate/docs/advanced/labels for more information.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "content": {
              "type": "string",
              "description": "The content of the input stored as a string."
            },
            "mimeType": {
              "type": "string",
              "description": "Optional. The format of the source text, for example, \"text/html\", \"text/plain\". If left blank, the MIME type defaults to \"text/html\"."
            }
          },
          "description": "The request message for language detection."
        }
      ]
      outputs: [
        {
          "id": "DetectLanguageResponse",
          "type": "object",
          "properties": {
            "languages": {
              "type": "array",
              "items": {
                "id": "DetectedLanguage",
                "type": "object",
                "properties": {
                  "confidence": {
                    "type": "number",
                    "format": "float",
                    "description": "The confidence of the detection result for this language."
                  },
                  "languageCode": {
                    "type": "string",
                    "description": "The BCP-47 language code of source content in the request, detected automatically."
                  }
                },
                "description": "The response message for language detection."
              },
              "description": "The most probable language detected by the Translation API. For each request, the Translation API will always return only one result."
            }
          },
          "description": "The response message for language detection."
        }
      ]
  projects.getSupportedLanguages:
    description: |-
      Returns a list of supported languages for translation.
    versions:
      from: 3.0.0
    link: https://cloud.google.com/translate/docs/reference/rest/v3/projects/getSupportedLanguages
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "SupportedLanguages",
          "type": "object",
          "properties": {
            "languages": {
              "type": "array",
              "items": {
                "id": "SupportedLanguage",
                "type": "object",
                "properties": {
                  "displayName": {
                    "type": "string",
                    "description": "Human readable name of the language localized in the display language specified in the request."
                  },
                  "languageCode": {
                    "type": "string",
                    "description": "Supported language code, generally consisting of its ISO 639-1 identifier, for example, 'en', 'ja'. In certain cases, BCP-47 codes including language and region identifiers are returned (for example, 'zh-TW' and 'zh-CN')"
                  },
                  "supportSource": {
                    "type": "boolean",
                    "description": "Can be used as source language."
                  },
                  "supportTarget": {
                    "type": "boolean",
                    "description": "Can be used as target language."
                  }
                },
                "description": "A single supported language response corresponds to information related to one supported language."
              },
              "description": "A list of supported language responses. This list contains an entry for each language the Translation API supports."
            }
          },
          "description": "The response message for discovering supported languages."
        }
      ]
  projects.locations.batchTranslateText:
    description: |-
      Translates a large volume of text in asynchronous batch mode. This function provides real-time output as the inputs are being processed. If caller cancels a request, the partial results (for an input file, it's all or nothing) may still be available on the specified output location. This call returns immediately and you can use google.longrunning.Operation.name to poll the status of the call.
    versions:
      from: 3.0.0
    link: https://cloud.google.com/translate/docs/reference/rest/v3/projects.locations/batchTranslateText
    example:
      inputs: [
        {
          "id": "BatchTranslateTextRequest",
          "type": "object",
          "properties": {
            "labels": {
              "type": "object",
              "description": "Optional. The labels with user-defined metadata for the request. Label keys and values can be no longer than 63 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter. See https://cloud.google.com/translate/docs/advanced/labels for more information.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "models": {
              "type": "object",
              "description": "Optional. The models to use for translation. Map's key is target language code. Map's value is model name. Value can be a built-in general model, or an AutoML Translation model. The value format depends on model type: - AutoML Translation models: `projects/{project-number-or-id}/locations/{location-id}/models/{model-id}` - General (built-in) models: `projects/{project-number-or-id}/locations/{location-id}/models/general/nmt`, `projects/{project-number-or-id}/locations/{location-id}/models/general/base` If the map is empty or a specific model is not requested for a language pair, then default google model (nmt) is used.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "glossaries": {
              "type": "object",
              "description": "Optional. Glossaries to be applied for translation. It's keyed by target language code.",
              "additionalProperties": {
                "id": "TranslateTextGlossaryConfig",
                "type": "object",
                "properties": {
                  "glossary": {
                    "type": "string",
                    "description": "Required. The `glossary` to be applied for this translation. The format depends on glossary: - User provided custom glossary: `projects/{project-number-or-id}/locations/{location-id}/glossaries/{glossary-id}`"
                  },
                  "ignoreCase": {
                    "type": "boolean",
                    "description": "Optional. Indicates match is case-insensitive. Default value is false if missing."
                  }
                },
                "description": "Configures which glossary should be used for a specific target language, and defines options for applying that glossary."
              }
            },
            "inputConfigs": {
              "type": "array",
              "items": {
                "id": "InputConfig",
                "type": "object",
                "properties": {
                  "mimeType": {
                    "type": "string",
                    "description": "Optional. Can be \"text/plain\" or \"text/html\". For `.tsv`, \"text/html\" is used if mime_type is missing. For `.html`, this field must be \"text/html\" or empty. For `.txt`, this field must be \"text/plain\" or empty."
                  },
                  "gcsSource": {
                    "id": "GcsSource",
                    "type": "object",
                    "properties": {
                      "inputUri": {
                        "type": "string",
                        "description": "Required. Source data URI. For example, `gs://my_bucket/my_object`."
                      }
                    },
                    "description": "Required. Google Cloud Storage location for the source input. This can be a single file (for example, `gs://translation-test/input.tsv`) or a wildcard (for example, `gs://translation-test/*`). If a file extension is `.tsv`, it can contain either one or two columns. The first column (optional) is the id of the text request. If the first column is missing, we use the row number (0-based) from the input file as the ID in the output file. The second column is the actual text to be translated. We recommend each row be <= 10K Unicode codepoints, otherwise an error might be returned. Note that the input tsv must be RFC 4180 compliant. You could use https://github.com/Clever/csvlint to check potential formatting errors in your tsv file. csvlint --delimiter='\\t' your_input_file.tsv The other supported file extensions are `.txt` or `.html`, which is treated as a single large chunk of text."
                  }
                },
                "description": "Input configuration for BatchTranslateText request."
              },
              "description": "Required. Input configurations. The total number of files matched should be <= 100. The total content size should be <= 100M Unicode codepoints. The files must use UTF-8 encoding."
            },
            "outputConfig": {
              "id": "OutputConfig",
              "type": "object",
              "properties": {
                "gcsDestination": {
                  "id": "GcsDestination",
                  "type": "object",
                  "properties": {
                    "outputUriPrefix": {
                      "type": "string",
                      "description": "Required. The bucket used in 'output_uri_prefix' must exist and there must be no files under 'output_uri_prefix'. 'output_uri_prefix' must end with \"/\" and start with \"gs://\". One 'output_uri_prefix' can only be used by one batch translation job at a time. Otherwise an INVALID_ARGUMENT (400) error is returned."
                    }
                  },
                  "description": "Google Cloud Storage destination for output content. For every single input file (for example, gs://a/b/c.[extension]), we generate at most 2 * n output files. (n is the # of target_language_codes in the BatchTranslateTextRequest). Output files (tsv) generated are compliant with RFC 4180 except that record delimiters are '\\' instead of '\\r\\'. We don't provide any way to change record delimiters. While the input files are being processed, we write/update an index file 'index.csv' under 'output_uri_prefix' (for example, gs://translation-test/index.csv) The index file is generated/updated as new files are being translated. The format is: input_file,target_language_code,translations_file,errors_file, glossary_translations_file,glossary_errors_file input_file is one file we matched using gcs_source.input_uri. target_language_code is provided in the request. translations_file contains the translations. (details provided below) errors_file contains the errors during processing of the file. (details below). Both translations_file and errors_file could be empty strings if we have no content to output. glossary_translations_file and glossary_errors_file are always empty strings if the input_file is tsv. They could also be empty if we have no content to output. Once a row is present in index.csv, the input/output matching never changes. Callers should also expect all the content in input_file are processed and ready to be consumed (that is, no partial output file is written). Since index.csv will be keeping updated during the process, please make sure there is no custom retention policy applied on the output bucket that may avoid file updating. (https://cloud.google.com/storage/docs/bucket-lock?hl=en#retention-policy) The format of translations_file (for target language code 'trg') is: gs://translation_test/a_b_c_'trg'_translations.[extension] If the input file extension is tsv, the output has the following columns: Column 1: ID of the request provided in the input, if it's not provided in the input, then the input row number is used (0-based). Column 2: source sentence. Column 3: translation without applying a glossary. Empty string if there is an error. Column 4 (only present if a glossary is provided in the request): translation after applying the glossary. Empty string if there is an error applying the glossary. Could be same string as column 3 if there is no glossary applied. If input file extension is a txt or html, the translation is directly written to the output file. If glossary is requested, a separate glossary_translations_file has format of gs://translation_test/a_b_c_'trg'_glossary_translations.[extension] The format of errors file (for target language code 'trg') is: gs://translation_test/a_b_c_'trg'_errors.[extension] If the input file extension is tsv, errors_file contains the following: Column 1: ID of the request provided in the input, if it's not provided in the input, then the input row number is used (0-based). Column 2: source sentence. Column 3: Error detail for the translation. Could be empty. Column 4 (only present if a glossary is provided in the request): Error when applying the glossary. If the input file extension is txt or html, glossary_error_file will be generated that contains error details. glossary_error_file has format of gs://translation_test/a_b_c_'trg'_glossary_errors.[extension]"
                }
              },
              "description": "Required. Output configuration. If 2 input configs match to the same file (that is, same input path), we don't generate output for duplicate inputs."
            },
            "sourceLanguageCode": {
              "type": "string",
              "description": "Required. Source language code."
            },
            "targetLanguageCodes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Required. Specify up to 10 language codes here."
            }
          },
          "description": "The batch translation request."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.detectLanguage:
    description: |-
      Detects the language of text within a request.
    versions:
      from: 3.0.0
    link: https://cloud.google.com/translate/docs/reference/rest/v3/projects.locations/detectLanguage
    example:
      inputs: [
        {
          "id": "DetectLanguageRequest",
          "type": "object",
          "properties": {
            "model": {
              "type": "string",
              "description": "Optional. The language detection model to be used. Format: `projects/{project-number-or-id}/locations/{location-id}/models/language-detection/{model-id}` Only one language detection model is currently supported: `projects/{project-number-or-id}/locations/{location-id}/models/language-detection/default`. If not specified, the default model is used."
            },
            "labels": {
              "type": "object",
              "description": "Optional. The labels with user-defined metadata for the request. Label keys and values can be no longer than 63 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter. See https://cloud.google.com/translate/docs/advanced/labels for more information.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "content": {
              "type": "string",
              "description": "The content of the input stored as a string."
            },
            "mimeType": {
              "type": "string",
              "description": "Optional. The format of the source text, for example, \"text/html\", \"text/plain\". If left blank, the MIME type defaults to \"text/html\"."
            }
          },
          "description": "The request message for language detection."
        }
      ]
      outputs: [
        {
          "id": "DetectLanguageResponse",
          "type": "object",
          "properties": {
            "languages": {
              "type": "array",
              "items": {
                "id": "DetectedLanguage",
                "type": "object",
                "properties": {
                  "confidence": {
                    "type": "number",
                    "format": "float",
                    "description": "The confidence of the detection result for this language."
                  },
                  "languageCode": {
                    "type": "string",
                    "description": "The BCP-47 language code of source content in the request, detected automatically."
                  }
                },
                "description": "The response message for language detection."
              },
              "description": "The most probable language detected by the Translation API. For each request, the Translation API will always return only one result."
            }
          },
          "description": "The response message for language detection."
        }
      ]
  projects.locations.get:
    description: |-
      Gets information about a location.
    versions:
      from: 3.0.0
    link: https://cloud.google.com/translate/docs/reference/rest/v3/projects.locations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Location",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
            },
            "labels": {
              "type": "object",
              "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
              "additionalProperties": {
                "type": "string"
              }
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata. For example the available capacity at the given location.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "locationId": {
              "type": "string",
              "description": "The canonical id for this location. For example: `\"us-east1\"`."
            },
            "displayName": {
              "type": "string",
              "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
            }
          },
          "description": "A resource that represents Google Cloud Platform location."
        }
      ]
  projects.locations.getSupportedLanguages:
    description: |-
      Returns a list of supported languages for translation.
    versions:
      from: 3.0.0
    link: https://cloud.google.com/translate/docs/reference/rest/v3/projects.locations/getSupportedLanguages
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "SupportedLanguages",
          "type": "object",
          "properties": {
            "languages": {
              "type": "array",
              "items": {
                "id": "SupportedLanguage",
                "type": "object",
                "properties": {
                  "displayName": {
                    "type": "string",
                    "description": "Human readable name of the language localized in the display language specified in the request."
                  },
                  "languageCode": {
                    "type": "string",
                    "description": "Supported language code, generally consisting of its ISO 639-1 identifier, for example, 'en', 'ja'. In certain cases, BCP-47 codes including language and region identifiers are returned (for example, 'zh-TW' and 'zh-CN')"
                  },
                  "supportSource": {
                    "type": "boolean",
                    "description": "Can be used as source language."
                  },
                  "supportTarget": {
                    "type": "boolean",
                    "description": "Can be used as target language."
                  }
                },
                "description": "A single supported language response corresponds to information related to one supported language."
              },
              "description": "A list of supported language responses. This list contains an entry for each language the Translation API supports."
            }
          },
          "description": "The response message for discovering supported languages."
        }
      ]
  projects.locations.glossaries.create:
    description: |-
      Creates a glossary and returns the long-running operation. Returns NOT_FOUND, if the project doesn't exist.
    versions:
      from: 3.0.0
    link: https://cloud.google.com/translate/docs/reference/rest/v3/projects.locations.glossaries/create
    example:
      inputs: [
        {
          "id": "Glossary",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Required. The resource name of the glossary. Glossary names have the form `projects/{project-number-or-id}/locations/{location-id}/glossaries/{glossary-id}`."
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. When the glossary creation was finished."
            },
            "entryCount": {
              "type": "integer",
              "format": "int32",
              "readOnly": true,
              "description": "Output only. The number of entries defined in the glossary."
            },
            "submitTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. When CreateGlossary was called."
            },
            "inputConfig": {
              "id": "GlossaryInputConfig",
              "type": "object",
              "properties": {
                "gcsSource": {
                  "id": "GcsSource",
                  "type": "object",
                  "properties": {
                    "inputUri": {
                      "type": "string",
                      "description": "Required. Source data URI. For example, `gs://my_bucket/my_object`."
                    }
                  },
                  "description": "Required. Google Cloud Storage location of glossary data. File format is determined based on the filename extension. API returns [google.rpc.Code.INVALID_ARGUMENT] for unsupported URI-s and file formats. Wildcards are not allowed. This must be a single file in one of the following formats: For unidirectional glossaries: - TSV/CSV (`.tsv`/`.csv`): 2 column file, tab- or comma-separated. The first column is source text. The second column is target text. The file must not contain headers. That is, the first row is data, not column names. - TMX (`.tmx`): TMX file with parallel data defining source/target term pairs. For equivalent term sets glossaries: - CSV (`.csv`): Multi-column CSV file defining equivalent glossary terms in multiple languages. See documentation for more information - [glossaries](https://cloud.google.com/translate/docs/advanced/glossary)."
                }
              },
              "description": "Required. Provides examples to build the glossary from. Total glossary must not exceed 10M Unicode codepoints."
            },
            "languagePair": {
              "id": "LanguageCodePair",
              "type": "object",
              "properties": {
                "sourceLanguageCode": {
                  "type": "string",
                  "description": "Required. The BCP-47 language code of the input text, for example, \"en-US\". Expected to be an exact match for GlossaryTerm.language_code."
                },
                "targetLanguageCode": {
                  "type": "string",
                  "description": "Required. The BCP-47 language code for translation output, for example, \"zh-CN\". Expected to be an exact match for GlossaryTerm.language_code."
                }
              },
              "description": "Used with unidirectional glossaries."
            },
            "languageCodesSet": {
              "id": "LanguageCodesSet",
              "type": "object",
              "properties": {
                "languageCodes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The BCP-47 language code(s) for terms defined in the glossary. All entries are unique. The list contains at least two entries. Expected to be an exact match for GlossaryTerm.language_code."
                }
              },
              "description": "Used with equivalent term set glossaries."
            }
          },
          "description": "Represents a glossary built from user provided data."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.glossaries.delete:
    description: |-
      Deletes a glossary, or cancels glossary construction if the glossary isn't created yet. Returns NOT_FOUND, if the glossary doesn't exist.
    versions:
      from: 3.0.0
    link: https://cloud.google.com/translate/docs/reference/rest/v3/projects.locations.glossaries/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.glossaries.get:
    description: |-
      Gets a glossary. Returns NOT_FOUND, if the glossary doesn't exist.
    versions:
      from: 3.0.0
    link: https://cloud.google.com/translate/docs/reference/rest/v3/projects.locations.glossaries/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.glossaries.list:
    description: |-
      Lists glossaries in a project. Returns NOT_FOUND, if the project doesn't exist.
    versions:
      from: 3.0.0
    link: https://cloud.google.com/translate/docs/reference/rest/v3/projects.locations.glossaries/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListGlossariesResponse",
          "type": "object",
          "properties": {
            "glossaries": {
              "type": "array",
              "items": {
                "id": "Glossary",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Required. The resource name of the glossary. Glossary names have the form `projects/{project-number-or-id}/locations/{location-id}/glossaries/{glossary-id}`."
                  },
                  "endTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. When the glossary creation was finished."
                  },
                  "entryCount": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "description": "Output only. The number of entries defined in the glossary."
                  },
                  "submitTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. When CreateGlossary was called."
                  },
                  "inputConfig": {
                    "id": "GlossaryInputConfig",
                    "type": "object",
                    "properties": {
                      "gcsSource": {
                        "id": "GcsSource",
                        "type": "object",
                        "properties": {
                          "inputUri": {
                            "type": "string",
                            "description": "Required. Source data URI. For example, `gs://my_bucket/my_object`."
                          }
                        },
                        "description": "Required. Google Cloud Storage location of glossary data. File format is determined based on the filename extension. API returns [google.rpc.Code.INVALID_ARGUMENT] for unsupported URI-s and file formats. Wildcards are not allowed. This must be a single file in one of the following formats: For unidirectional glossaries: - TSV/CSV (`.tsv`/`.csv`): 2 column file, tab- or comma-separated. The first column is source text. The second column is target text. The file must not contain headers. That is, the first row is data, not column names. - TMX (`.tmx`): TMX file with parallel data defining source/target term pairs. For equivalent term sets glossaries: - CSV (`.csv`): Multi-column CSV file defining equivalent glossary terms in multiple languages. See documentation for more information - [glossaries](https://cloud.google.com/translate/docs/advanced/glossary)."
                      }
                    },
                    "description": "Required. Provides examples to build the glossary from. Total glossary must not exceed 10M Unicode codepoints."
                  },
                  "languagePair": {
                    "id": "LanguageCodePair",
                    "type": "object",
                    "properties": {
                      "sourceLanguageCode": {
                        "type": "string",
                        "description": "Required. The BCP-47 language code of the input text, for example, \"en-US\". Expected to be an exact match for GlossaryTerm.language_code."
                      },
                      "targetLanguageCode": {
                        "type": "string",
                        "description": "Required. The BCP-47 language code for translation output, for example, \"zh-CN\". Expected to be an exact match for GlossaryTerm.language_code."
                      }
                    },
                    "description": "Used with unidirectional glossaries."
                  },
                  "languageCodesSet": {
                    "id": "LanguageCodesSet",
                    "type": "object",
                    "properties": {
                      "languageCodes": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The BCP-47 language code(s) for terms defined in the glossary. All entries are unique. The list contains at least two entries. Expected to be an exact match for GlossaryTerm.language_code."
                      }
                    },
                    "description": "Used with equivalent term set glossaries."
                  }
                },
                "description": "Represents a glossary built from user provided data."
              },
              "description": "The list of glossaries for a project."
            },
            "nextPageToken": {
              "type": "string",
              "description": "A token to retrieve a page of results. Pass this value in the [ListGlossariesRequest.page_token] field in the subsequent call to `ListGlossaries` method to retrieve the next page of results."
            }
          },
          "description": "Response message for ListGlossaries."
        }
      ]
  projects.locations.list:
    description: |-
      Lists information about the supported locations for this service.
    versions:
      from: 3.0.0
    link: https://cloud.google.com/translate/docs/reference/rest/v3/projects.locations/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListLocationsResponse",
          "type": "object",
          "properties": {
            "locations": {
              "type": "array",
              "items": {
                "id": "Location",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
                  },
                  "labels": {
                    "type": "object",
                    "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Service-specific metadata. For example the available capacity at the given location.",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "locationId": {
                    "type": "string",
                    "description": "The canonical id for this location. For example: `\"us-east1\"`."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
                  }
                },
                "description": "A resource that represents Google Cloud Platform location."
              },
              "description": "A list of locations that matches the specified filter in the request."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The standard List next-page token."
            }
          },
          "description": "The response message for Locations.ListLocations."
        }
      ]
  projects.locations.operations.cancel:
    description: |-
      Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
    versions:
      from: 3.0.0
    link: https://cloud.google.com/translate/docs/reference/rest/v3/projects.locations.operations/cancel
    example:
      inputs: [
        {
          "id": "CancelOperationRequest",
          "type": "object",
          "properties": {},
          "description": "The request message for Operations.CancelOperation."
        }
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  projects.locations.operations.delete:
    description: |-
      Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
    versions:
      from: 3.0.0
    link: https://cloud.google.com/translate/docs/reference/rest/v3/projects.locations.operations/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  projects.locations.operations.get:
    description: |-
      Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
    versions:
      from: 3.0.0
    link: https://cloud.google.com/translate/docs/reference/rest/v3/projects.locations.operations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.operations.list:
    description: |-
      Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.
    versions:
      from: 3.0.0
    link: https://cloud.google.com/translate/docs/reference/rest/v3/projects.locations.operations/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListOperationsResponse",
          "type": "object",
          "properties": {
            "operations": {
              "type": "array",
              "items": {
                "id": "Operation",
                "type": "object",
                "properties": {
                  "done": {
                    "type": "boolean",
                    "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
                  },
                  "name": {
                    "type": "string",
                    "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
                  },
                  "error": {
                    "id": "Status",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The status code, which should be an enum value of google.rpc.Code."
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object. Contains field @type with type URL."
                          }
                        },
                        "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                      },
                      "message": {
                        "type": "string",
                        "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                      }
                    },
                    "description": "The error result of the operation in case of failure or cancellation."
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "response": {
                    "type": "object",
                    "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  }
                },
                "description": "This resource represents a long-running operation that is the result of a network API call."
              },
              "description": "A list of operations that matches the specified filter in the request."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The standard List next-page token."
            }
          },
          "description": "The response message for Operations.ListOperations."
        }
      ]
  projects.locations.operations.wait:
    description: |-
      Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.
    versions:
      from: 3.0.0
    link: https://cloud.google.com/translate/docs/reference/rest/v3/projects.locations.operations/wait
    example:
      inputs: [
        {
          "id": "WaitOperationRequest",
          "type": "object",
          "properties": {
            "timeout": {
              "type": "string",
              "format": "google-duration",
              "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used."
            }
          },
          "description": "The request message for Operations.WaitOperation."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.translateText:
    description: |-
      Translates input text and returns translated text.
    versions:
      from: 3.0.0
    link: https://cloud.google.com/translate/docs/reference/rest/v3/projects.locations/translateText
    example:
      inputs: [
        {
          "id": "TranslateTextRequest",
          "type": "object",
          "properties": {
            "model": {
              "type": "string",
              "description": "Optional. The `model` type requested for this translation. The format depends on model type: - AutoML Translation models: `projects/{project-number-or-id}/locations/{location-id}/models/{model-id}` - General (built-in) models: `projects/{project-number-or-id}/locations/{location-id}/models/general/nmt`, `projects/{project-number-or-id}/locations/{location-id}/models/general/base` For global (non-regionalized) requests, use `location-id` `global`. For example, `projects/{project-number-or-id}/locations/global/models/general/nmt`. If missing, the system decides which google base model to use."
            },
            "labels": {
              "type": "object",
              "description": "Optional. The labels with user-defined metadata for the request. Label keys and values can be no longer than 63 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter. See https://cloud.google.com/translate/docs/advanced/labels for more information.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "contents": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Required. The content of the input in string format. We recommend the total content be less than 30k codepoints. The max length of this field is 1024. Use BatchTranslateText for larger text."
            },
            "mimeType": {
              "type": "string",
              "description": "Optional. The format of the source text, for example, \"text/html\", \"text/plain\". If left blank, the MIME type defaults to \"text/html\"."
            },
            "glossaryConfig": {
              "id": "TranslateTextGlossaryConfig",
              "type": "object",
              "properties": {
                "glossary": {
                  "type": "string",
                  "description": "Required. The `glossary` to be applied for this translation. The format depends on glossary: - User provided custom glossary: `projects/{project-number-or-id}/locations/{location-id}/glossaries/{glossary-id}`"
                },
                "ignoreCase": {
                  "type": "boolean",
                  "description": "Optional. Indicates match is case-insensitive. Default value is false if missing."
                }
              },
              "description": "Optional. Glossary to be applied. The glossary must be within the same region (have the same location-id) as the model, otherwise an INVALID_ARGUMENT (400) error is returned."
            },
            "sourceLanguageCode": {
              "type": "string",
              "description": "Optional. The BCP-47 language code of the input text if known, for example, \"en-US\" or \"sr-Latn\". Supported language codes are listed in Language Support. If the source language isn't specified, the API attempts to identify the source language automatically and returns the source language within the response."
            },
            "targetLanguageCode": {
              "type": "string",
              "description": "Required. The BCP-47 language code to use for translation of the input text, set to one of the language codes listed in Language Support."
            }
          },
          "description": "The request message for synchronous translation."
        }
      ]
      outputs: [
        {
          "id": "TranslateTextResponse",
          "type": "object",
          "properties": {
            "translations": {
              "type": "array",
              "items": {
                "id": "Translation",
                "type": "object",
                "properties": {
                  "model": {
                    "type": "string",
                    "description": "Only present when `model` is present in the request. `model` here is normalized to have project number. For example: If the `model` requested in TranslationTextRequest is `projects/{project-id}/locations/{location-id}/models/general/nmt` then `model` here would be normalized to `projects/{project-number}/locations/{location-id}/models/general/nmt`."
                  },
                  "glossaryConfig": {
                    "id": "TranslateTextGlossaryConfig",
                    "type": "object",
                    "properties": {
                      "glossary": {
                        "type": "string",
                        "description": "Required. The `glossary` to be applied for this translation. The format depends on glossary: - User provided custom glossary: `projects/{project-number-or-id}/locations/{location-id}/glossaries/{glossary-id}`"
                      },
                      "ignoreCase": {
                        "type": "boolean",
                        "description": "Optional. Indicates match is case-insensitive. Default value is false if missing."
                      }
                    },
                    "description": "The `glossary_config` used for this translation."
                  },
                  "translatedText": {
                    "type": "string",
                    "description": "Text translated into the target language."
                  },
                  "detectedLanguageCode": {
                    "type": "string",
                    "description": "The BCP-47 language code of source text in the initial request, detected automatically, if no source language was passed within the initial request. If the source language was passed, auto-detection of the language does not occur and this field is empty."
                  }
                },
                "description": "A single translation response."
              },
              "description": "Text translation responses with no glossary applied. This field has the same length as `contents`."
            },
            "glossaryTranslations": {
              "type": "array",
              "items": {
                "id": "Translation",
                "type": "object",
                "properties": {
                  "model": {
                    "type": "string",
                    "description": "Only present when `model` is present in the request. `model` here is normalized to have project number. For example: If the `model` requested in TranslationTextRequest is `projects/{project-id}/locations/{location-id}/models/general/nmt` then `model` here would be normalized to `projects/{project-number}/locations/{location-id}/models/general/nmt`."
                  },
                  "glossaryConfig": {
                    "id": "TranslateTextGlossaryConfig",
                    "type": "object",
                    "properties": {
                      "glossary": {
                        "type": "string",
                        "description": "Required. The `glossary` to be applied for this translation. The format depends on glossary: - User provided custom glossary: `projects/{project-number-or-id}/locations/{location-id}/glossaries/{glossary-id}`"
                      },
                      "ignoreCase": {
                        "type": "boolean",
                        "description": "Optional. Indicates match is case-insensitive. Default value is false if missing."
                      }
                    },
                    "description": "The `glossary_config` used for this translation."
                  },
                  "translatedText": {
                    "type": "string",
                    "description": "Text translated into the target language."
                  },
                  "detectedLanguageCode": {
                    "type": "string",
                    "description": "The BCP-47 language code of source text in the initial request, detected automatically, if no source language was passed within the initial request. If the source language was passed, auto-detection of the language does not occur and this field is empty."
                  }
                },
                "description": "A single translation response."
              },
              "description": "Text translation responses if a glossary is provided in the request. This can be the same as `translations` if no terms apply. This field has the same length as `contents`."
            }
          }
        }
      ]
  projects.translateText:
    description: |-
      Translates input text and returns translated text.
    versions:
      from: 3.0.0
    link: https://cloud.google.com/translate/docs/reference/rest/v3/projects/translateText
    example:
      inputs: [
        {
          "id": "TranslateTextRequest",
          "type": "object",
          "properties": {
            "model": {
              "type": "string",
              "description": "Optional. The `model` type requested for this translation. The format depends on model type: - AutoML Translation models: `projects/{project-number-or-id}/locations/{location-id}/models/{model-id}` - General (built-in) models: `projects/{project-number-or-id}/locations/{location-id}/models/general/nmt`, `projects/{project-number-or-id}/locations/{location-id}/models/general/base` For global (non-regionalized) requests, use `location-id` `global`. For example, `projects/{project-number-or-id}/locations/global/models/general/nmt`. If missing, the system decides which google base model to use."
            },
            "labels": {
              "type": "object",
              "description": "Optional. The labels with user-defined metadata for the request. Label keys and values can be no longer than 63 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter. See https://cloud.google.com/translate/docs/advanced/labels for more information.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "contents": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Required. The content of the input in string format. We recommend the total content be less than 30k codepoints. The max length of this field is 1024. Use BatchTranslateText for larger text."
            },
            "mimeType": {
              "type": "string",
              "description": "Optional. The format of the source text, for example, \"text/html\", \"text/plain\". If left blank, the MIME type defaults to \"text/html\"."
            },
            "glossaryConfig": {
              "id": "TranslateTextGlossaryConfig",
              "type": "object",
              "properties": {
                "glossary": {
                  "type": "string",
                  "description": "Required. The `glossary` to be applied for this translation. The format depends on glossary: - User provided custom glossary: `projects/{project-number-or-id}/locations/{location-id}/glossaries/{glossary-id}`"
                },
                "ignoreCase": {
                  "type": "boolean",
                  "description": "Optional. Indicates match is case-insensitive. Default value is false if missing."
                }
              },
              "description": "Optional. Glossary to be applied. The glossary must be within the same region (have the same location-id) as the model, otherwise an INVALID_ARGUMENT (400) error is returned."
            },
            "sourceLanguageCode": {
              "type": "string",
              "description": "Optional. The BCP-47 language code of the input text if known, for example, \"en-US\" or \"sr-Latn\". Supported language codes are listed in Language Support. If the source language isn't specified, the API attempts to identify the source language automatically and returns the source language within the response."
            },
            "targetLanguageCode": {
              "type": "string",
              "description": "Required. The BCP-47 language code to use for translation of the input text, set to one of the language codes listed in Language Support."
            }
          },
          "description": "The request message for synchronous translation."
        }
      ]
      outputs: [
        {
          "id": "TranslateTextResponse",
          "type": "object",
          "properties": {
            "translations": {
              "type": "array",
              "items": {
                "id": "Translation",
                "type": "object",
                "properties": {
                  "model": {
                    "type": "string",
                    "description": "Only present when `model` is present in the request. `model` here is normalized to have project number. For example: If the `model` requested in TranslationTextRequest is `projects/{project-id}/locations/{location-id}/models/general/nmt` then `model` here would be normalized to `projects/{project-number}/locations/{location-id}/models/general/nmt`."
                  },
                  "glossaryConfig": {
                    "id": "TranslateTextGlossaryConfig",
                    "type": "object",
                    "properties": {
                      "glossary": {
                        "type": "string",
                        "description": "Required. The `glossary` to be applied for this translation. The format depends on glossary: - User provided custom glossary: `projects/{project-number-or-id}/locations/{location-id}/glossaries/{glossary-id}`"
                      },
                      "ignoreCase": {
                        "type": "boolean",
                        "description": "Optional. Indicates match is case-insensitive. Default value is false if missing."
                      }
                    },
                    "description": "The `glossary_config` used for this translation."
                  },
                  "translatedText": {
                    "type": "string",
                    "description": "Text translated into the target language."
                  },
                  "detectedLanguageCode": {
                    "type": "string",
                    "description": "The BCP-47 language code of source text in the initial request, detected automatically, if no source language was passed within the initial request. If the source language was passed, auto-detection of the language does not occur and this field is empty."
                  }
                },
                "description": "A single translation response."
              },
              "description": "Text translation responses with no glossary applied. This field has the same length as `contents`."
            },
            "glossaryTranslations": {
              "type": "array",
              "items": {
                "id": "Translation",
                "type": "object",
                "properties": {
                  "model": {
                    "type": "string",
                    "description": "Only present when `model` is present in the request. `model` here is normalized to have project number. For example: If the `model` requested in TranslationTextRequest is `projects/{project-id}/locations/{location-id}/models/general/nmt` then `model` here would be normalized to `projects/{project-number}/locations/{location-id}/models/general/nmt`."
                  },
                  "glossaryConfig": {
                    "id": "TranslateTextGlossaryConfig",
                    "type": "object",
                    "properties": {
                      "glossary": {
                        "type": "string",
                        "description": "Required. The `glossary` to be applied for this translation. The format depends on glossary: - User provided custom glossary: `projects/{project-number-or-id}/locations/{location-id}/glossaries/{glossary-id}`"
                      },
                      "ignoreCase": {
                        "type": "boolean",
                        "description": "Optional. Indicates match is case-insensitive. Default value is false if missing."
                      }
                    },
                    "description": "The `glossary_config` used for this translation."
                  },
                  "translatedText": {
                    "type": "string",
                    "description": "Text translated into the target language."
                  },
                  "detectedLanguageCode": {
                    "type": "string",
                    "description": "The BCP-47 language code of source text in the initial request, detected automatically, if no source language was passed within the initial request. If the source language was passed, auto-detection of the language does not occur and this field is empty."
                  }
                },
                "description": "A single translation response."
              },
              "description": "Text translation responses if a glossary is provided in the request. This can be the same as `translations` if no terms apply. This field has the same length as `contents`."
            }
          }
        }
      ]