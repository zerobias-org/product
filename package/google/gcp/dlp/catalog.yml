Product:
  name: GCP Data Loss Prevention
  versions: [2.0.0]
  package: google.gcp.dlp
  description: |-
    Cloud Data Loss Prevention (DLP)
  link: https://cloud.google.com/dlp
  contentType: json
Operations:
  infoTypes.list:
    description: |-
      Returns a list of the sensitive information types that the DLP API supports. See https://cloud.google.com/dlp/docs/infotypes-reference to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/infoTypes/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2ListInfoTypesResponse",
          "type": "object",
          "properties": {
            "infoTypes": {
              "type": "array",
              "items": {
                "id": "GooglePrivacyDlpV2InfoTypeDescription",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Internal name of the infoType."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the infotype. Translated when language is provided in the request."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Human readable form of the infoType name."
                  },
                  "supportedBy": {
                    "type": "array",
                    "items": {
                      "enum": [
                        "ENUM_TYPE_UNSPECIFIED",
                        "INSPECT",
                        "RISK_ANALYSIS"
                      ],
                      "type": "string",
                      "enumDescriptions": [
                        "Unused.",
                        "Supported by the inspect operations.",
                        "Supported by the risk analysis operations."
                      ]
                    },
                    "description": "Which parts of the API supports this InfoType."
                  }
                },
                "description": "InfoType description."
              },
              "description": "Set of sensitive infoTypes."
            }
          },
          "description": "Response to the ListInfoTypes request."
        }
      ]
  locations.infoTypes.list:
    description: |-
      Returns a list of the sensitive information types that the DLP API supports. See https://cloud.google.com/dlp/docs/infotypes-reference to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/locations.infoTypes/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2ListInfoTypesResponse",
          "type": "object",
          "properties": {
            "infoTypes": {
              "type": "array",
              "items": {
                "id": "GooglePrivacyDlpV2InfoTypeDescription",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Internal name of the infoType."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the infotype. Translated when language is provided in the request."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Human readable form of the infoType name."
                  },
                  "supportedBy": {
                    "type": "array",
                    "items": {
                      "enum": [
                        "ENUM_TYPE_UNSPECIFIED",
                        "INSPECT",
                        "RISK_ANALYSIS"
                      ],
                      "type": "string",
                      "enumDescriptions": [
                        "Unused.",
                        "Supported by the inspect operations.",
                        "Supported by the risk analysis operations."
                      ]
                    },
                    "description": "Which parts of the API supports this InfoType."
                  }
                },
                "description": "InfoType description."
              },
              "description": "Set of sensitive infoTypes."
            }
          },
          "description": "Response to the ListInfoTypes request."
        }
      ]
  organizations.deidentifyTemplates.create:
    description: |-
      Creates a DeidentifyTemplate for re-using frequently used configuration for de-identifying content, images, and storage. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.deidentifyTemplates/create
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.deidentifyTemplates.delete:
    description: |-
      Deletes a DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.deidentifyTemplates/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  organizations.deidentifyTemplates.get:
    description: |-
      Gets a DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.deidentifyTemplates/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.deidentifyTemplates.list:
    description: |-
      Lists DeidentifyTemplates. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.deidentifyTemplates/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.deidentifyTemplates.patch:
    description: |-
      Updates the DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.deidentifyTemplates/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.inspectTemplates.create:
    description: |-
      Creates an InspectTemplate for re-using frequently used configuration for inspecting content, images, and storage. See https://cloud.google.com/dlp/docs/creating-templates to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.inspectTemplates/create
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.inspectTemplates.delete:
    description: |-
      Deletes an InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.inspectTemplates/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  organizations.inspectTemplates.get:
    description: |-
      Gets an InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.inspectTemplates/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2InspectTemplate",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The template name. The template will have one of the following formats: `projects/PROJECT_ID/inspectTemplates/TEMPLATE_ID` OR `organizations/ORGANIZATION_ID/inspectTemplates/TEMPLATE_ID`;"
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The creation timestamp of an inspectTemplate."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The last update timestamp of an inspectTemplate."
            },
            "description": {
              "type": "string",
              "description": "Short description (max 256 chars)."
            },
            "displayName": {
              "type": "string",
              "description": "Display name (max 256 chars)."
            },
            "inspectConfig": {
              "id": "GooglePrivacyDlpV2InspectConfig",
              "type": "object",
              "properties": {
                "limits": {
                  "id": "GooglePrivacyDlpV2FindingLimits",
                  "type": "object",
                  "properties": {
                    "maxFindingsPerItem": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Max number of findings that will be returned for each item scanned. When set within `InspectJobConfig`, the maximum returned is 2000 regardless if this is set higher. When set within `InspectContentRequest`, this field is ignored."
                    },
                    "maxFindingsPerRequest": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Max number of findings that will be returned per request/job. When set within `InspectContentRequest`, the maximum returned is 2000 regardless if this is set higher."
                    },
                    "maxFindingsPerInfoType": {
                      "type": "array",
                      "items": {
                        "id": "GooglePrivacyDlpV2InfoTypeLimit",
                        "type": "object",
                        "properties": {
                          "infoType": {
                            "id": "GooglePrivacyDlpV2InfoType",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                              }
                            },
                            "description": "Type of information detected by the API."
                          },
                          "maxFindings": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Max findings limit for the given infoType."
                          }
                        },
                        "description": "Max findings configuration per infoType, per content item or long running DlpJob."
                      },
                      "description": "Configuration of findings limit given for specified infoTypes."
                    }
                  },
                  "description": "Configuration to control the number of findings returned."
                },
                "ruleSet": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2InspectionRuleSet",
                    "type": "object",
                    "properties": {
                      "rules": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2InspectionRule",
                          "type": "object",
                          "properties": {
                            "hotwordRule": {
                              "id": "GooglePrivacyDlpV2HotwordRule",
                              "type": "object",
                              "properties": {
                                "proximity": {
                                  "id": "GooglePrivacyDlpV2Proximity",
                                  "type": "object",
                                  "properties": {
                                    "windowAfter": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters after the finding to consider."
                                    },
                                    "windowBefore": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters before the finding to consider."
                                    }
                                  },
                                  "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                },
                                "hotwordRegex": {
                                  "id": "GooglePrivacyDlpV2Regex",
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string",
                                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                    },
                                    "groupIndexes": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                    }
                                  },
                                  "description": "Regular expression pattern defining what qualifies as a hotword."
                                },
                                "likelihoodAdjustment": {
                                  "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                  "type": "object",
                                  "properties": {
                                    "fixedLikelihood": {
                                      "enum": [
                                        "LIKELIHOOD_UNSPECIFIED",
                                        "VERY_UNLIKELY",
                                        "UNLIKELY",
                                        "POSSIBLE",
                                        "LIKELY",
                                        "VERY_LIKELY"
                                      ],
                                      "type": "string",
                                      "description": "Set the likelihood of a finding to a fixed value.",
                                      "enumDescriptions": [
                                        "Default value; same as POSSIBLE.",
                                        "Few matching elements.",
                                        "",
                                        "Some matching elements.",
                                        "",
                                        "Many matching elements."
                                      ]
                                    },
                                    "relativeLikelihood": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                    }
                                  },
                                  "description": "Likelihood adjustment to apply to all matching findings."
                                }
                              },
                              "description": "Hotword-based detection rule."
                            },
                            "exclusionRule": {
                              "id": "GooglePrivacyDlpV2ExclusionRule",
                              "type": "object",
                              "properties": {
                                "regex": {
                                  "id": "GooglePrivacyDlpV2Regex",
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string",
                                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                    },
                                    "groupIndexes": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                    }
                                  },
                                  "description": "Regular expression which defines the rule."
                                },
                                "dictionary": {
                                  "id": "GooglePrivacyDlpV2Dictionary",
                                  "type": "object",
                                  "properties": {
                                    "wordList": {
                                      "id": "GooglePrivacyDlpV2WordList",
                                      "type": "object",
                                      "properties": {
                                        "words": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                        }
                                      },
                                      "description": "List of words or phrases to search for."
                                    },
                                    "cloudStoragePath": {
                                      "id": "GooglePrivacyDlpV2CloudStoragePath",
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string",
                                          "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                        }
                                      },
                                      "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                                    }
                                  },
                                  "description": "Dictionary which defines the rule."
                                },
                                "matchingType": {
                                  "enum": [
                                    "MATCHING_TYPE_UNSPECIFIED",
                                    "MATCHING_TYPE_FULL_MATCH",
                                    "MATCHING_TYPE_PARTIAL_MATCH",
                                    "MATCHING_TYPE_INVERSE_MATCH"
                                  ],
                                  "type": "string",
                                  "description": "How the rule is applied, see MatchingType documentation for details.",
                                  "enumDescriptions": [
                                    "Invalid.",
                                    "Full match. - Dictionary: join of Dictionary results matched complete finding quote - Regex: all regex matches fill a finding quote start to end - Exclude info type: completely inside affecting info types findings",
                                    "Partial match. - Dictionary: at least one of the tokens in the finding matches - Regex: substring of the finding matches - Exclude info type: intersects with affecting info types findings",
                                    "Inverse match. - Dictionary: no tokens in the finding match the dictionary - Regex: finding doesn't match the regex - Exclude info type: no intersection with affecting info types findings"
                                  ]
                                },
                                "excludeInfoTypes": {
                                  "id": "GooglePrivacyDlpV2ExcludeInfoTypes",
                                  "type": "object",
                                  "properties": {
                                    "infoTypes": {
                                      "type": "array",
                                      "items": {
                                        "id": "GooglePrivacyDlpV2InfoType",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                          }
                                        },
                                        "description": "Type of information detected by the API."
                                      },
                                      "description": "InfoType list in ExclusionRule rule drops a finding when it overlaps or contained within with a finding of an infoType from this list. For example, for `InspectionRuleSet.info_types` containing \"PHONE_NUMBER\"` and `exclusion_rule` containing `exclude_info_types.info_types` with \"EMAIL_ADDRESS\" the phone number findings are dropped if they overlap with EMAIL_ADDRESS finding. That leads to \"555-222-2222@example.org\" to generate only a single finding, namely email address."
                                    }
                                  },
                                  "description": "Set of infoTypes for which findings would affect this rule."
                                }
                              },
                              "description": "Exclusion rule."
                            }
                          },
                          "description": "A single inspection rule to be applied to infoTypes, specified in `InspectionRuleSet`."
                        },
                        "description": "Set of rules to be applied to infoTypes. The rules are applied in order."
                      },
                      "infoTypes": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2InfoType",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                            }
                          },
                          "description": "Type of information detected by the API."
                        },
                        "description": "List of infoTypes this rule set is applied to."
                      }
                    },
                    "description": "Rule set for modifying a set of infoTypes to alter behavior under certain circumstances, depending on the specific details of the rules within the set."
                  },
                  "description": "Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type."
                },
                "infoTypes": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2InfoType",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                      }
                    },
                    "description": "Type of information detected by the API."
                  },
                  "description": "Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/dlp/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time."
                },
                "includeQuote": {
                  "type": "boolean",
                  "description": "When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote."
                },
                "minLikelihood": {
                  "enum": [
                    "LIKELIHOOD_UNSPECIFIED",
                    "VERY_UNLIKELY",
                    "UNLIKELY",
                    "POSSIBLE",
                    "LIKELY",
                    "VERY_LIKELY"
                  ],
                  "type": "string",
                  "description": "Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more.",
                  "enumDescriptions": [
                    "Default value; same as POSSIBLE.",
                    "Few matching elements.",
                    "",
                    "Some matching elements.",
                    "",
                    "Many matching elements."
                  ]
                },
                "contentOptions": {
                  "type": "array",
                  "items": {
                    "enum": [
                      "CONTENT_UNSPECIFIED",
                      "CONTENT_TEXT",
                      "CONTENT_IMAGE"
                    ],
                    "type": "string",
                    "enumDescriptions": [
                      "Includes entire content of a file or a data stream.",
                      "Text content within the data, excluding any metadata.",
                      "Images found in the data."
                    ]
                  },
                  "description": "List of options defining data content to scan. If empty, text, images, and other content will be included."
                },
                "customInfoTypes": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2CustomInfoType",
                    "type": "object",
                    "properties": {
                      "regex": {
                        "id": "GooglePrivacyDlpV2Regex",
                        "type": "object",
                        "properties": {
                          "pattern": {
                            "type": "string",
                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                          },
                          "groupIndexes": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                          }
                        },
                        "description": "Regular expression based CustomInfoType."
                      },
                      "infoType": {
                        "id": "GooglePrivacyDlpV2InfoType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                          }
                        },
                        "description": "Type of information detected by the API."
                      },
                      "dictionary": {
                        "id": "GooglePrivacyDlpV2Dictionary",
                        "type": "object",
                        "properties": {
                          "wordList": {
                            "id": "GooglePrivacyDlpV2WordList",
                            "type": "object",
                            "properties": {
                              "words": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                              }
                            },
                            "description": "List of words or phrases to search for."
                          },
                          "cloudStoragePath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                          }
                        },
                        "description": "A list of phrases to detect as a CustomInfoType."
                      },
                      "likelihood": {
                        "enum": [
                          "LIKELIHOOD_UNSPECIFIED",
                          "VERY_UNLIKELY",
                          "UNLIKELY",
                          "POSSIBLE",
                          "LIKELY",
                          "VERY_LIKELY"
                        ],
                        "type": "string",
                        "description": "Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not specified.",
                        "enumDescriptions": [
                          "Default value; same as POSSIBLE.",
                          "Few matching elements.",
                          "",
                          "Some matching elements.",
                          "",
                          "Many matching elements."
                        ]
                      },
                      "storedType": {
                        "id": "GooglePrivacyDlpV2StoredType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Resource name of the requested `StoredInfoType`, for example `organizations/433245324/storedInfoTypes/432452342` or `projects/project-id/storedInfoTypes/432452342`."
                          },
                          "createTime": {
                            "type": "string",
                            "format": "google-datetime",
                            "description": "Timestamp indicating when the version of the `StoredInfoType` used for inspection was created. Output-only field, populated by the system."
                          }
                        },
                        "description": "Load an existing `StoredInfoType` resource for use in `InspectDataSource`. Not currently supported in `InspectContent`."
                      },
                      "exclusionType": {
                        "enum": [
                          "EXCLUSION_TYPE_UNSPECIFIED",
                          "EXCLUSION_TYPE_EXCLUDE"
                        ],
                        "type": "string",
                        "description": "If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching.",
                        "enumDescriptions": [
                          "A finding of this custom info type will not be excluded from results.",
                          "A finding of this custom info type will be excluded from final results, but can still affect rule execution."
                        ]
                      },
                      "surrogateType": {
                        "id": "GooglePrivacyDlpV2SurrogateType",
                        "type": "object",
                        "properties": {},
                        "description": "Message for detecting output from deidentification transformations that support reversing."
                      },
                      "detectionRules": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2DetectionRule",
                          "type": "object",
                          "properties": {
                            "hotwordRule": {
                              "id": "GooglePrivacyDlpV2HotwordRule",
                              "type": "object",
                              "properties": {
                                "proximity": {
                                  "id": "GooglePrivacyDlpV2Proximity",
                                  "type": "object",
                                  "properties": {
                                    "windowAfter": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters after the finding to consider."
                                    },
                                    "windowBefore": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters before the finding to consider."
                                    }
                                  },
                                  "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                },
                                "hotwordRegex": {
                                  "id": "GooglePrivacyDlpV2Regex",
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string",
                                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                    },
                                    "groupIndexes": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                    }
                                  },
                                  "description": "Regular expression pattern defining what qualifies as a hotword."
                                },
                                "likelihoodAdjustment": {
                                  "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                  "type": "object",
                                  "properties": {
                                    "fixedLikelihood": {
                                      "enum": [
                                        "LIKELIHOOD_UNSPECIFIED",
                                        "VERY_UNLIKELY",
                                        "UNLIKELY",
                                        "POSSIBLE",
                                        "LIKELY",
                                        "VERY_LIKELY"
                                      ],
                                      "type": "string",
                                      "description": "Set the likelihood of a finding to a fixed value.",
                                      "enumDescriptions": [
                                        "Default value; same as POSSIBLE.",
                                        "Few matching elements.",
                                        "",
                                        "Some matching elements.",
                                        "",
                                        "Many matching elements."
                                      ]
                                    },
                                    "relativeLikelihood": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                    }
                                  },
                                  "description": "Likelihood adjustment to apply to all matching findings."
                                }
                              },
                              "description": "Hotword-based detection rule."
                            }
                          },
                          "description": "Deprecated; use `InspectionRuleSet` instead. Rule for modifying a `CustomInfoType` to alter behavior under certain circumstances, depending on the specific details of the rule. Not supported for the `surrogate_type` custom infoType."
                        },
                        "description": "Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in order that they are specified. Not supported for the `surrogate_type` CustomInfoType."
                      }
                    },
                    "description": "Custom information type provided by the user. Used to find domain-specific sensitive information configurable to the data in question."
                  },
                  "description": "CustomInfoTypes provided by the user. See https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more."
                },
                "excludeInfoTypes": {
                  "type": "boolean",
                  "description": "When true, excludes type information of the findings."
                }
              },
              "description": "The core content of the template. Configuration of the scanning process."
            }
          },
          "description": "The inspectTemplate contains a configuration (set of types of sensitive data to be detected) to be used anywhere you otherwise would normally specify InspectConfig. See https://cloud.google.com/dlp/docs/concepts-templates to learn more."
        }
      ]
  organizations.inspectTemplates.list:
    description: |-
      Lists InspectTemplates. See https://cloud.google.com/dlp/docs/creating-templates to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.inspectTemplates/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2ListInspectTemplatesResponse",
          "type": "object",
          "properties": {
            "nextPageToken": {
              "type": "string",
              "description": "If the next page is available then the next page token to be used in following ListInspectTemplates request."
            },
            "inspectTemplates": {
              "type": "array",
              "items": {
                "id": "GooglePrivacyDlpV2InspectTemplate",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The template name. The template will have one of the following formats: `projects/PROJECT_ID/inspectTemplates/TEMPLATE_ID` OR `organizations/ORGANIZATION_ID/inspectTemplates/TEMPLATE_ID`;"
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The creation timestamp of an inspectTemplate."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The last update timestamp of an inspectTemplate."
                  },
                  "description": {
                    "type": "string",
                    "description": "Short description (max 256 chars)."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Display name (max 256 chars)."
                  },
                  "inspectConfig": {
                    "id": "GooglePrivacyDlpV2InspectConfig",
                    "type": "object",
                    "properties": {
                      "limits": {
                        "id": "GooglePrivacyDlpV2FindingLimits",
                        "type": "object",
                        "properties": {
                          "maxFindingsPerItem": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Max number of findings that will be returned for each item scanned. When set within `InspectJobConfig`, the maximum returned is 2000 regardless if this is set higher. When set within `InspectContentRequest`, this field is ignored."
                          },
                          "maxFindingsPerRequest": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Max number of findings that will be returned per request/job. When set within `InspectContentRequest`, the maximum returned is 2000 regardless if this is set higher."
                          },
                          "maxFindingsPerInfoType": {
                            "type": "array",
                            "items": {
                              "id": "GooglePrivacyDlpV2InfoTypeLimit",
                              "type": "object",
                              "properties": {
                                "infoType": {
                                  "id": "GooglePrivacyDlpV2InfoType",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                    }
                                  },
                                  "description": "Type of information detected by the API."
                                },
                                "maxFindings": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Max findings limit for the given infoType."
                                }
                              },
                              "description": "Max findings configuration per infoType, per content item or long running DlpJob."
                            },
                            "description": "Configuration of findings limit given for specified infoTypes."
                          }
                        },
                        "description": "Configuration to control the number of findings returned."
                      },
                      "ruleSet": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2InspectionRuleSet",
                          "type": "object",
                          "properties": {
                            "rules": {
                              "type": "array",
                              "items": {
                                "id": "GooglePrivacyDlpV2InspectionRule",
                                "type": "object",
                                "properties": {
                                  "hotwordRule": {
                                    "id": "GooglePrivacyDlpV2HotwordRule",
                                    "type": "object",
                                    "properties": {
                                      "proximity": {
                                        "id": "GooglePrivacyDlpV2Proximity",
                                        "type": "object",
                                        "properties": {
                                          "windowAfter": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Number of characters after the finding to consider."
                                          },
                                          "windowBefore": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Number of characters before the finding to consider."
                                          }
                                        },
                                        "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                      },
                                      "hotwordRegex": {
                                        "id": "GooglePrivacyDlpV2Regex",
                                        "type": "object",
                                        "properties": {
                                          "pattern": {
                                            "type": "string",
                                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                          },
                                          "groupIndexes": {
                                            "type": "array",
                                            "items": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                          }
                                        },
                                        "description": "Regular expression pattern defining what qualifies as a hotword."
                                      },
                                      "likelihoodAdjustment": {
                                        "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                        "type": "object",
                                        "properties": {
                                          "fixedLikelihood": {
                                            "enum": [
                                              "LIKELIHOOD_UNSPECIFIED",
                                              "VERY_UNLIKELY",
                                              "UNLIKELY",
                                              "POSSIBLE",
                                              "LIKELY",
                                              "VERY_LIKELY"
                                            ],
                                            "type": "string",
                                            "description": "Set the likelihood of a finding to a fixed value.",
                                            "enumDescriptions": [
                                              "Default value; same as POSSIBLE.",
                                              "Few matching elements.",
                                              "",
                                              "Some matching elements.",
                                              "",
                                              "Many matching elements."
                                            ]
                                          },
                                          "relativeLikelihood": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                          }
                                        },
                                        "description": "Likelihood adjustment to apply to all matching findings."
                                      }
                                    },
                                    "description": "Hotword-based detection rule."
                                  },
                                  "exclusionRule": {
                                    "id": "GooglePrivacyDlpV2ExclusionRule",
                                    "type": "object",
                                    "properties": {
                                      "regex": {
                                        "id": "GooglePrivacyDlpV2Regex",
                                        "type": "object",
                                        "properties": {
                                          "pattern": {
                                            "type": "string",
                                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                          },
                                          "groupIndexes": {
                                            "type": "array",
                                            "items": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                          }
                                        },
                                        "description": "Regular expression which defines the rule."
                                      },
                                      "dictionary": {
                                        "id": "GooglePrivacyDlpV2Dictionary",
                                        "type": "object",
                                        "properties": {
                                          "wordList": {
                                            "id": "GooglePrivacyDlpV2WordList",
                                            "type": "object",
                                            "properties": {
                                              "words": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                              }
                                            },
                                            "description": "List of words or phrases to search for."
                                          },
                                          "cloudStoragePath": {
                                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                                            "type": "object",
                                            "properties": {
                                              "path": {
                                                "type": "string",
                                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                              }
                                            },
                                            "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                                          }
                                        },
                                        "description": "Dictionary which defines the rule."
                                      },
                                      "matchingType": {
                                        "enum": [
                                          "MATCHING_TYPE_UNSPECIFIED",
                                          "MATCHING_TYPE_FULL_MATCH",
                                          "MATCHING_TYPE_PARTIAL_MATCH",
                                          "MATCHING_TYPE_INVERSE_MATCH"
                                        ],
                                        "type": "string",
                                        "description": "How the rule is applied, see MatchingType documentation for details.",
                                        "enumDescriptions": [
                                          "Invalid.",
                                          "Full match. - Dictionary: join of Dictionary results matched complete finding quote - Regex: all regex matches fill a finding quote start to end - Exclude info type: completely inside affecting info types findings",
                                          "Partial match. - Dictionary: at least one of the tokens in the finding matches - Regex: substring of the finding matches - Exclude info type: intersects with affecting info types findings",
                                          "Inverse match. - Dictionary: no tokens in the finding match the dictionary - Regex: finding doesn't match the regex - Exclude info type: no intersection with affecting info types findings"
                                        ]
                                      },
                                      "excludeInfoTypes": {
                                        "id": "GooglePrivacyDlpV2ExcludeInfoTypes",
                                        "type": "object",
                                        "properties": {
                                          "infoTypes": {
                                            "type": "array",
                                            "items": {
                                              "id": "GooglePrivacyDlpV2InfoType",
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                                }
                                              },
                                              "description": "Type of information detected by the API."
                                            },
                                            "description": "InfoType list in ExclusionRule rule drops a finding when it overlaps or contained within with a finding of an infoType from this list. For example, for `InspectionRuleSet.info_types` containing \"PHONE_NUMBER\"` and `exclusion_rule` containing `exclude_info_types.info_types` with \"EMAIL_ADDRESS\" the phone number findings are dropped if they overlap with EMAIL_ADDRESS finding. That leads to \"555-222-2222@example.org\" to generate only a single finding, namely email address."
                                          }
                                        },
                                        "description": "Set of infoTypes for which findings would affect this rule."
                                      }
                                    },
                                    "description": "Exclusion rule."
                                  }
                                },
                                "description": "A single inspection rule to be applied to infoTypes, specified in `InspectionRuleSet`."
                              },
                              "description": "Set of rules to be applied to infoTypes. The rules are applied in order."
                            },
                            "infoTypes": {
                              "type": "array",
                              "items": {
                                "id": "GooglePrivacyDlpV2InfoType",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                  }
                                },
                                "description": "Type of information detected by the API."
                              },
                              "description": "List of infoTypes this rule set is applied to."
                            }
                          },
                          "description": "Rule set for modifying a set of infoTypes to alter behavior under certain circumstances, depending on the specific details of the rules within the set."
                        },
                        "description": "Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type."
                      },
                      "infoTypes": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2InfoType",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                            }
                          },
                          "description": "Type of information detected by the API."
                        },
                        "description": "Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/dlp/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time."
                      },
                      "includeQuote": {
                        "type": "boolean",
                        "description": "When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote."
                      },
                      "minLikelihood": {
                        "enum": [
                          "LIKELIHOOD_UNSPECIFIED",
                          "VERY_UNLIKELY",
                          "UNLIKELY",
                          "POSSIBLE",
                          "LIKELY",
                          "VERY_LIKELY"
                        ],
                        "type": "string",
                        "description": "Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more.",
                        "enumDescriptions": [
                          "Default value; same as POSSIBLE.",
                          "Few matching elements.",
                          "",
                          "Some matching elements.",
                          "",
                          "Many matching elements."
                        ]
                      },
                      "contentOptions": {
                        "type": "array",
                        "items": {
                          "enum": [
                            "CONTENT_UNSPECIFIED",
                            "CONTENT_TEXT",
                            "CONTENT_IMAGE"
                          ],
                          "type": "string",
                          "enumDescriptions": [
                            "Includes entire content of a file or a data stream.",
                            "Text content within the data, excluding any metadata.",
                            "Images found in the data."
                          ]
                        },
                        "description": "List of options defining data content to scan. If empty, text, images, and other content will be included."
                      },
                      "customInfoTypes": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2CustomInfoType",
                          "type": "object",
                          "properties": {
                            "regex": {
                              "id": "GooglePrivacyDlpV2Regex",
                              "type": "object",
                              "properties": {
                                "pattern": {
                                  "type": "string",
                                  "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                },
                                "groupIndexes": {
                                  "type": "array",
                                  "items": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                }
                              },
                              "description": "Regular expression based CustomInfoType."
                            },
                            "infoType": {
                              "id": "GooglePrivacyDlpV2InfoType",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                }
                              },
                              "description": "Type of information detected by the API."
                            },
                            "dictionary": {
                              "id": "GooglePrivacyDlpV2Dictionary",
                              "type": "object",
                              "properties": {
                                "wordList": {
                                  "id": "GooglePrivacyDlpV2WordList",
                                  "type": "object",
                                  "properties": {
                                    "words": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                    }
                                  },
                                  "description": "List of words or phrases to search for."
                                },
                                "cloudStoragePath": {
                                  "id": "GooglePrivacyDlpV2CloudStoragePath",
                                  "type": "object",
                                  "properties": {
                                    "path": {
                                      "type": "string",
                                      "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                    }
                                  },
                                  "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                                }
                              },
                              "description": "A list of phrases to detect as a CustomInfoType."
                            },
                            "likelihood": {
                              "enum": [
                                "LIKELIHOOD_UNSPECIFIED",
                                "VERY_UNLIKELY",
                                "UNLIKELY",
                                "POSSIBLE",
                                "LIKELY",
                                "VERY_LIKELY"
                              ],
                              "type": "string",
                              "description": "Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not specified.",
                              "enumDescriptions": [
                                "Default value; same as POSSIBLE.",
                                "Few matching elements.",
                                "",
                                "Some matching elements.",
                                "",
                                "Many matching elements."
                              ]
                            },
                            "storedType": {
                              "id": "GooglePrivacyDlpV2StoredType",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Resource name of the requested `StoredInfoType`, for example `organizations/433245324/storedInfoTypes/432452342` or `projects/project-id/storedInfoTypes/432452342`."
                                },
                                "createTime": {
                                  "type": "string",
                                  "format": "google-datetime",
                                  "description": "Timestamp indicating when the version of the `StoredInfoType` used for inspection was created. Output-only field, populated by the system."
                                }
                              },
                              "description": "Load an existing `StoredInfoType` resource for use in `InspectDataSource`. Not currently supported in `InspectContent`."
                            },
                            "exclusionType": {
                              "enum": [
                                "EXCLUSION_TYPE_UNSPECIFIED",
                                "EXCLUSION_TYPE_EXCLUDE"
                              ],
                              "type": "string",
                              "description": "If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching.",
                              "enumDescriptions": [
                                "A finding of this custom info type will not be excluded from results.",
                                "A finding of this custom info type will be excluded from final results, but can still affect rule execution."
                              ]
                            },
                            "surrogateType": {
                              "id": "GooglePrivacyDlpV2SurrogateType",
                              "type": "object",
                              "properties": {},
                              "description": "Message for detecting output from deidentification transformations that support reversing."
                            },
                            "detectionRules": {
                              "type": "array",
                              "items": {
                                "id": "GooglePrivacyDlpV2DetectionRule",
                                "type": "object",
                                "properties": {
                                  "hotwordRule": {
                                    "id": "GooglePrivacyDlpV2HotwordRule",
                                    "type": "object",
                                    "properties": {
                                      "proximity": {
                                        "id": "GooglePrivacyDlpV2Proximity",
                                        "type": "object",
                                        "properties": {
                                          "windowAfter": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Number of characters after the finding to consider."
                                          },
                                          "windowBefore": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Number of characters before the finding to consider."
                                          }
                                        },
                                        "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                      },
                                      "hotwordRegex": {
                                        "id": "GooglePrivacyDlpV2Regex",
                                        "type": "object",
                                        "properties": {
                                          "pattern": {
                                            "type": "string",
                                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                          },
                                          "groupIndexes": {
                                            "type": "array",
                                            "items": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                          }
                                        },
                                        "description": "Regular expression pattern defining what qualifies as a hotword."
                                      },
                                      "likelihoodAdjustment": {
                                        "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                        "type": "object",
                                        "properties": {
                                          "fixedLikelihood": {
                                            "enum": [
                                              "LIKELIHOOD_UNSPECIFIED",
                                              "VERY_UNLIKELY",
                                              "UNLIKELY",
                                              "POSSIBLE",
                                              "LIKELY",
                                              "VERY_LIKELY"
                                            ],
                                            "type": "string",
                                            "description": "Set the likelihood of a finding to a fixed value.",
                                            "enumDescriptions": [
                                              "Default value; same as POSSIBLE.",
                                              "Few matching elements.",
                                              "",
                                              "Some matching elements.",
                                              "",
                                              "Many matching elements."
                                            ]
                                          },
                                          "relativeLikelihood": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                          }
                                        },
                                        "description": "Likelihood adjustment to apply to all matching findings."
                                      }
                                    },
                                    "description": "Hotword-based detection rule."
                                  }
                                },
                                "description": "Deprecated; use `InspectionRuleSet` instead. Rule for modifying a `CustomInfoType` to alter behavior under certain circumstances, depending on the specific details of the rule. Not supported for the `surrogate_type` custom infoType."
                              },
                              "description": "Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in order that they are specified. Not supported for the `surrogate_type` CustomInfoType."
                            }
                          },
                          "description": "Custom information type provided by the user. Used to find domain-specific sensitive information configurable to the data in question."
                        },
                        "description": "CustomInfoTypes provided by the user. See https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more."
                      },
                      "excludeInfoTypes": {
                        "type": "boolean",
                        "description": "When true, excludes type information of the findings."
                      }
                    },
                    "description": "The core content of the template. Configuration of the scanning process."
                  }
                },
                "description": "The inspectTemplate contains a configuration (set of types of sensitive data to be detected) to be used anywhere you otherwise would normally specify InspectConfig. See https://cloud.google.com/dlp/docs/concepts-templates to learn more."
              },
              "description": "List of inspectTemplates, up to page_size in ListInspectTemplatesRequest."
            }
          },
          "description": "Response message for ListInspectTemplates."
        }
      ]
  organizations.inspectTemplates.patch:
    description: |-
      Updates the InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.inspectTemplates/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.locations.deidentifyTemplates.create:
    description: |-
      Creates a DeidentifyTemplate for re-using frequently used configuration for de-identifying content, images, and storage. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.locations.deidentifyTemplates/create
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.locations.deidentifyTemplates.delete:
    description: |-
      Deletes a DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.locations.deidentifyTemplates/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  organizations.locations.deidentifyTemplates.get:
    description: |-
      Gets a DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.locations.deidentifyTemplates/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.locations.deidentifyTemplates.list:
    description: |-
      Lists DeidentifyTemplates. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.locations.deidentifyTemplates/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.locations.deidentifyTemplates.patch:
    description: |-
      Updates the DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.locations.deidentifyTemplates/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.locations.dlpJobs.list:
    description: |-
      Lists DlpJobs that match the specified filter in the request. See https://cloud.google.com/dlp/docs/inspecting-storage and https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.locations.dlpJobs/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.locations.inspectTemplates.create:
    description: |-
      Creates an InspectTemplate for re-using frequently used configuration for inspecting content, images, and storage. See https://cloud.google.com/dlp/docs/creating-templates to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.locations.inspectTemplates/create
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.locations.inspectTemplates.delete:
    description: |-
      Deletes an InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.locations.inspectTemplates/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  organizations.locations.inspectTemplates.get:
    description: |-
      Gets an InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.locations.inspectTemplates/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2InspectTemplate",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The template name. The template will have one of the following formats: `projects/PROJECT_ID/inspectTemplates/TEMPLATE_ID` OR `organizations/ORGANIZATION_ID/inspectTemplates/TEMPLATE_ID`;"
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The creation timestamp of an inspectTemplate."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The last update timestamp of an inspectTemplate."
            },
            "description": {
              "type": "string",
              "description": "Short description (max 256 chars)."
            },
            "displayName": {
              "type": "string",
              "description": "Display name (max 256 chars)."
            },
            "inspectConfig": {
              "id": "GooglePrivacyDlpV2InspectConfig",
              "type": "object",
              "properties": {
                "limits": {
                  "id": "GooglePrivacyDlpV2FindingLimits",
                  "type": "object",
                  "properties": {
                    "maxFindingsPerItem": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Max number of findings that will be returned for each item scanned. When set within `InspectJobConfig`, the maximum returned is 2000 regardless if this is set higher. When set within `InspectContentRequest`, this field is ignored."
                    },
                    "maxFindingsPerRequest": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Max number of findings that will be returned per request/job. When set within `InspectContentRequest`, the maximum returned is 2000 regardless if this is set higher."
                    },
                    "maxFindingsPerInfoType": {
                      "type": "array",
                      "items": {
                        "id": "GooglePrivacyDlpV2InfoTypeLimit",
                        "type": "object",
                        "properties": {
                          "infoType": {
                            "id": "GooglePrivacyDlpV2InfoType",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                              }
                            },
                            "description": "Type of information detected by the API."
                          },
                          "maxFindings": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Max findings limit for the given infoType."
                          }
                        },
                        "description": "Max findings configuration per infoType, per content item or long running DlpJob."
                      },
                      "description": "Configuration of findings limit given for specified infoTypes."
                    }
                  },
                  "description": "Configuration to control the number of findings returned."
                },
                "ruleSet": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2InspectionRuleSet",
                    "type": "object",
                    "properties": {
                      "rules": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2InspectionRule",
                          "type": "object",
                          "properties": {
                            "hotwordRule": {
                              "id": "GooglePrivacyDlpV2HotwordRule",
                              "type": "object",
                              "properties": {
                                "proximity": {
                                  "id": "GooglePrivacyDlpV2Proximity",
                                  "type": "object",
                                  "properties": {
                                    "windowAfter": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters after the finding to consider."
                                    },
                                    "windowBefore": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters before the finding to consider."
                                    }
                                  },
                                  "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                },
                                "hotwordRegex": {
                                  "id": "GooglePrivacyDlpV2Regex",
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string",
                                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                    },
                                    "groupIndexes": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                    }
                                  },
                                  "description": "Regular expression pattern defining what qualifies as a hotword."
                                },
                                "likelihoodAdjustment": {
                                  "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                  "type": "object",
                                  "properties": {
                                    "fixedLikelihood": {
                                      "enum": [
                                        "LIKELIHOOD_UNSPECIFIED",
                                        "VERY_UNLIKELY",
                                        "UNLIKELY",
                                        "POSSIBLE",
                                        "LIKELY",
                                        "VERY_LIKELY"
                                      ],
                                      "type": "string",
                                      "description": "Set the likelihood of a finding to a fixed value.",
                                      "enumDescriptions": [
                                        "Default value; same as POSSIBLE.",
                                        "Few matching elements.",
                                        "",
                                        "Some matching elements.",
                                        "",
                                        "Many matching elements."
                                      ]
                                    },
                                    "relativeLikelihood": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                    }
                                  },
                                  "description": "Likelihood adjustment to apply to all matching findings."
                                }
                              },
                              "description": "Hotword-based detection rule."
                            },
                            "exclusionRule": {
                              "id": "GooglePrivacyDlpV2ExclusionRule",
                              "type": "object",
                              "properties": {
                                "regex": {
                                  "id": "GooglePrivacyDlpV2Regex",
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string",
                                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                    },
                                    "groupIndexes": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                    }
                                  },
                                  "description": "Regular expression which defines the rule."
                                },
                                "dictionary": {
                                  "id": "GooglePrivacyDlpV2Dictionary",
                                  "type": "object",
                                  "properties": {
                                    "wordList": {
                                      "id": "GooglePrivacyDlpV2WordList",
                                      "type": "object",
                                      "properties": {
                                        "words": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                        }
                                      },
                                      "description": "List of words or phrases to search for."
                                    },
                                    "cloudStoragePath": {
                                      "id": "GooglePrivacyDlpV2CloudStoragePath",
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string",
                                          "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                        }
                                      },
                                      "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                                    }
                                  },
                                  "description": "Dictionary which defines the rule."
                                },
                                "matchingType": {
                                  "enum": [
                                    "MATCHING_TYPE_UNSPECIFIED",
                                    "MATCHING_TYPE_FULL_MATCH",
                                    "MATCHING_TYPE_PARTIAL_MATCH",
                                    "MATCHING_TYPE_INVERSE_MATCH"
                                  ],
                                  "type": "string",
                                  "description": "How the rule is applied, see MatchingType documentation for details.",
                                  "enumDescriptions": [
                                    "Invalid.",
                                    "Full match. - Dictionary: join of Dictionary results matched complete finding quote - Regex: all regex matches fill a finding quote start to end - Exclude info type: completely inside affecting info types findings",
                                    "Partial match. - Dictionary: at least one of the tokens in the finding matches - Regex: substring of the finding matches - Exclude info type: intersects with affecting info types findings",
                                    "Inverse match. - Dictionary: no tokens in the finding match the dictionary - Regex: finding doesn't match the regex - Exclude info type: no intersection with affecting info types findings"
                                  ]
                                },
                                "excludeInfoTypes": {
                                  "id": "GooglePrivacyDlpV2ExcludeInfoTypes",
                                  "type": "object",
                                  "properties": {
                                    "infoTypes": {
                                      "type": "array",
                                      "items": {
                                        "id": "GooglePrivacyDlpV2InfoType",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                          }
                                        },
                                        "description": "Type of information detected by the API."
                                      },
                                      "description": "InfoType list in ExclusionRule rule drops a finding when it overlaps or contained within with a finding of an infoType from this list. For example, for `InspectionRuleSet.info_types` containing \"PHONE_NUMBER\"` and `exclusion_rule` containing `exclude_info_types.info_types` with \"EMAIL_ADDRESS\" the phone number findings are dropped if they overlap with EMAIL_ADDRESS finding. That leads to \"555-222-2222@example.org\" to generate only a single finding, namely email address."
                                    }
                                  },
                                  "description": "Set of infoTypes for which findings would affect this rule."
                                }
                              },
                              "description": "Exclusion rule."
                            }
                          },
                          "description": "A single inspection rule to be applied to infoTypes, specified in `InspectionRuleSet`."
                        },
                        "description": "Set of rules to be applied to infoTypes. The rules are applied in order."
                      },
                      "infoTypes": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2InfoType",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                            }
                          },
                          "description": "Type of information detected by the API."
                        },
                        "description": "List of infoTypes this rule set is applied to."
                      }
                    },
                    "description": "Rule set for modifying a set of infoTypes to alter behavior under certain circumstances, depending on the specific details of the rules within the set."
                  },
                  "description": "Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type."
                },
                "infoTypes": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2InfoType",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                      }
                    },
                    "description": "Type of information detected by the API."
                  },
                  "description": "Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/dlp/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time."
                },
                "includeQuote": {
                  "type": "boolean",
                  "description": "When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote."
                },
                "minLikelihood": {
                  "enum": [
                    "LIKELIHOOD_UNSPECIFIED",
                    "VERY_UNLIKELY",
                    "UNLIKELY",
                    "POSSIBLE",
                    "LIKELY",
                    "VERY_LIKELY"
                  ],
                  "type": "string",
                  "description": "Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more.",
                  "enumDescriptions": [
                    "Default value; same as POSSIBLE.",
                    "Few matching elements.",
                    "",
                    "Some matching elements.",
                    "",
                    "Many matching elements."
                  ]
                },
                "contentOptions": {
                  "type": "array",
                  "items": {
                    "enum": [
                      "CONTENT_UNSPECIFIED",
                      "CONTENT_TEXT",
                      "CONTENT_IMAGE"
                    ],
                    "type": "string",
                    "enumDescriptions": [
                      "Includes entire content of a file or a data stream.",
                      "Text content within the data, excluding any metadata.",
                      "Images found in the data."
                    ]
                  },
                  "description": "List of options defining data content to scan. If empty, text, images, and other content will be included."
                },
                "customInfoTypes": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2CustomInfoType",
                    "type": "object",
                    "properties": {
                      "regex": {
                        "id": "GooglePrivacyDlpV2Regex",
                        "type": "object",
                        "properties": {
                          "pattern": {
                            "type": "string",
                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                          },
                          "groupIndexes": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                          }
                        },
                        "description": "Regular expression based CustomInfoType."
                      },
                      "infoType": {
                        "id": "GooglePrivacyDlpV2InfoType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                          }
                        },
                        "description": "Type of information detected by the API."
                      },
                      "dictionary": {
                        "id": "GooglePrivacyDlpV2Dictionary",
                        "type": "object",
                        "properties": {
                          "wordList": {
                            "id": "GooglePrivacyDlpV2WordList",
                            "type": "object",
                            "properties": {
                              "words": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                              }
                            },
                            "description": "List of words or phrases to search for."
                          },
                          "cloudStoragePath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                          }
                        },
                        "description": "A list of phrases to detect as a CustomInfoType."
                      },
                      "likelihood": {
                        "enum": [
                          "LIKELIHOOD_UNSPECIFIED",
                          "VERY_UNLIKELY",
                          "UNLIKELY",
                          "POSSIBLE",
                          "LIKELY",
                          "VERY_LIKELY"
                        ],
                        "type": "string",
                        "description": "Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not specified.",
                        "enumDescriptions": [
                          "Default value; same as POSSIBLE.",
                          "Few matching elements.",
                          "",
                          "Some matching elements.",
                          "",
                          "Many matching elements."
                        ]
                      },
                      "storedType": {
                        "id": "GooglePrivacyDlpV2StoredType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Resource name of the requested `StoredInfoType`, for example `organizations/433245324/storedInfoTypes/432452342` or `projects/project-id/storedInfoTypes/432452342`."
                          },
                          "createTime": {
                            "type": "string",
                            "format": "google-datetime",
                            "description": "Timestamp indicating when the version of the `StoredInfoType` used for inspection was created. Output-only field, populated by the system."
                          }
                        },
                        "description": "Load an existing `StoredInfoType` resource for use in `InspectDataSource`. Not currently supported in `InspectContent`."
                      },
                      "exclusionType": {
                        "enum": [
                          "EXCLUSION_TYPE_UNSPECIFIED",
                          "EXCLUSION_TYPE_EXCLUDE"
                        ],
                        "type": "string",
                        "description": "If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching.",
                        "enumDescriptions": [
                          "A finding of this custom info type will not be excluded from results.",
                          "A finding of this custom info type will be excluded from final results, but can still affect rule execution."
                        ]
                      },
                      "surrogateType": {
                        "id": "GooglePrivacyDlpV2SurrogateType",
                        "type": "object",
                        "properties": {},
                        "description": "Message for detecting output from deidentification transformations that support reversing."
                      },
                      "detectionRules": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2DetectionRule",
                          "type": "object",
                          "properties": {
                            "hotwordRule": {
                              "id": "GooglePrivacyDlpV2HotwordRule",
                              "type": "object",
                              "properties": {
                                "proximity": {
                                  "id": "GooglePrivacyDlpV2Proximity",
                                  "type": "object",
                                  "properties": {
                                    "windowAfter": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters after the finding to consider."
                                    },
                                    "windowBefore": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters before the finding to consider."
                                    }
                                  },
                                  "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                },
                                "hotwordRegex": {
                                  "id": "GooglePrivacyDlpV2Regex",
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string",
                                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                    },
                                    "groupIndexes": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                    }
                                  },
                                  "description": "Regular expression pattern defining what qualifies as a hotword."
                                },
                                "likelihoodAdjustment": {
                                  "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                  "type": "object",
                                  "properties": {
                                    "fixedLikelihood": {
                                      "enum": [
                                        "LIKELIHOOD_UNSPECIFIED",
                                        "VERY_UNLIKELY",
                                        "UNLIKELY",
                                        "POSSIBLE",
                                        "LIKELY",
                                        "VERY_LIKELY"
                                      ],
                                      "type": "string",
                                      "description": "Set the likelihood of a finding to a fixed value.",
                                      "enumDescriptions": [
                                        "Default value; same as POSSIBLE.",
                                        "Few matching elements.",
                                        "",
                                        "Some matching elements.",
                                        "",
                                        "Many matching elements."
                                      ]
                                    },
                                    "relativeLikelihood": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                    }
                                  },
                                  "description": "Likelihood adjustment to apply to all matching findings."
                                }
                              },
                              "description": "Hotword-based detection rule."
                            }
                          },
                          "description": "Deprecated; use `InspectionRuleSet` instead. Rule for modifying a `CustomInfoType` to alter behavior under certain circumstances, depending on the specific details of the rule. Not supported for the `surrogate_type` custom infoType."
                        },
                        "description": "Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in order that they are specified. Not supported for the `surrogate_type` CustomInfoType."
                      }
                    },
                    "description": "Custom information type provided by the user. Used to find domain-specific sensitive information configurable to the data in question."
                  },
                  "description": "CustomInfoTypes provided by the user. See https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more."
                },
                "excludeInfoTypes": {
                  "type": "boolean",
                  "description": "When true, excludes type information of the findings."
                }
              },
              "description": "The core content of the template. Configuration of the scanning process."
            }
          },
          "description": "The inspectTemplate contains a configuration (set of types of sensitive data to be detected) to be used anywhere you otherwise would normally specify InspectConfig. See https://cloud.google.com/dlp/docs/concepts-templates to learn more."
        }
      ]
  organizations.locations.inspectTemplates.list:
    description: |-
      Lists InspectTemplates. See https://cloud.google.com/dlp/docs/creating-templates to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.locations.inspectTemplates/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2ListInspectTemplatesResponse",
          "type": "object",
          "properties": {
            "nextPageToken": {
              "type": "string",
              "description": "If the next page is available then the next page token to be used in following ListInspectTemplates request."
            },
            "inspectTemplates": {
              "type": "array",
              "items": {
                "id": "GooglePrivacyDlpV2InspectTemplate",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The template name. The template will have one of the following formats: `projects/PROJECT_ID/inspectTemplates/TEMPLATE_ID` OR `organizations/ORGANIZATION_ID/inspectTemplates/TEMPLATE_ID`;"
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The creation timestamp of an inspectTemplate."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The last update timestamp of an inspectTemplate."
                  },
                  "description": {
                    "type": "string",
                    "description": "Short description (max 256 chars)."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Display name (max 256 chars)."
                  },
                  "inspectConfig": {
                    "id": "GooglePrivacyDlpV2InspectConfig",
                    "type": "object",
                    "properties": {
                      "limits": {
                        "id": "GooglePrivacyDlpV2FindingLimits",
                        "type": "object",
                        "properties": {
                          "maxFindingsPerItem": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Max number of findings that will be returned for each item scanned. When set within `InspectJobConfig`, the maximum returned is 2000 regardless if this is set higher. When set within `InspectContentRequest`, this field is ignored."
                          },
                          "maxFindingsPerRequest": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Max number of findings that will be returned per request/job. When set within `InspectContentRequest`, the maximum returned is 2000 regardless if this is set higher."
                          },
                          "maxFindingsPerInfoType": {
                            "type": "array",
                            "items": {
                              "id": "GooglePrivacyDlpV2InfoTypeLimit",
                              "type": "object",
                              "properties": {
                                "infoType": {
                                  "id": "GooglePrivacyDlpV2InfoType",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                    }
                                  },
                                  "description": "Type of information detected by the API."
                                },
                                "maxFindings": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Max findings limit for the given infoType."
                                }
                              },
                              "description": "Max findings configuration per infoType, per content item or long running DlpJob."
                            },
                            "description": "Configuration of findings limit given for specified infoTypes."
                          }
                        },
                        "description": "Configuration to control the number of findings returned."
                      },
                      "ruleSet": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2InspectionRuleSet",
                          "type": "object",
                          "properties": {
                            "rules": {
                              "type": "array",
                              "items": {
                                "id": "GooglePrivacyDlpV2InspectionRule",
                                "type": "object",
                                "properties": {
                                  "hotwordRule": {
                                    "id": "GooglePrivacyDlpV2HotwordRule",
                                    "type": "object",
                                    "properties": {
                                      "proximity": {
                                        "id": "GooglePrivacyDlpV2Proximity",
                                        "type": "object",
                                        "properties": {
                                          "windowAfter": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Number of characters after the finding to consider."
                                          },
                                          "windowBefore": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Number of characters before the finding to consider."
                                          }
                                        },
                                        "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                      },
                                      "hotwordRegex": {
                                        "id": "GooglePrivacyDlpV2Regex",
                                        "type": "object",
                                        "properties": {
                                          "pattern": {
                                            "type": "string",
                                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                          },
                                          "groupIndexes": {
                                            "type": "array",
                                            "items": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                          }
                                        },
                                        "description": "Regular expression pattern defining what qualifies as a hotword."
                                      },
                                      "likelihoodAdjustment": {
                                        "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                        "type": "object",
                                        "properties": {
                                          "fixedLikelihood": {
                                            "enum": [
                                              "LIKELIHOOD_UNSPECIFIED",
                                              "VERY_UNLIKELY",
                                              "UNLIKELY",
                                              "POSSIBLE",
                                              "LIKELY",
                                              "VERY_LIKELY"
                                            ],
                                            "type": "string",
                                            "description": "Set the likelihood of a finding to a fixed value.",
                                            "enumDescriptions": [
                                              "Default value; same as POSSIBLE.",
                                              "Few matching elements.",
                                              "",
                                              "Some matching elements.",
                                              "",
                                              "Many matching elements."
                                            ]
                                          },
                                          "relativeLikelihood": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                          }
                                        },
                                        "description": "Likelihood adjustment to apply to all matching findings."
                                      }
                                    },
                                    "description": "Hotword-based detection rule."
                                  },
                                  "exclusionRule": {
                                    "id": "GooglePrivacyDlpV2ExclusionRule",
                                    "type": "object",
                                    "properties": {
                                      "regex": {
                                        "id": "GooglePrivacyDlpV2Regex",
                                        "type": "object",
                                        "properties": {
                                          "pattern": {
                                            "type": "string",
                                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                          },
                                          "groupIndexes": {
                                            "type": "array",
                                            "items": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                          }
                                        },
                                        "description": "Regular expression which defines the rule."
                                      },
                                      "dictionary": {
                                        "id": "GooglePrivacyDlpV2Dictionary",
                                        "type": "object",
                                        "properties": {
                                          "wordList": {
                                            "id": "GooglePrivacyDlpV2WordList",
                                            "type": "object",
                                            "properties": {
                                              "words": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                              }
                                            },
                                            "description": "List of words or phrases to search for."
                                          },
                                          "cloudStoragePath": {
                                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                                            "type": "object",
                                            "properties": {
                                              "path": {
                                                "type": "string",
                                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                              }
                                            },
                                            "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                                          }
                                        },
                                        "description": "Dictionary which defines the rule."
                                      },
                                      "matchingType": {
                                        "enum": [
                                          "MATCHING_TYPE_UNSPECIFIED",
                                          "MATCHING_TYPE_FULL_MATCH",
                                          "MATCHING_TYPE_PARTIAL_MATCH",
                                          "MATCHING_TYPE_INVERSE_MATCH"
                                        ],
                                        "type": "string",
                                        "description": "How the rule is applied, see MatchingType documentation for details.",
                                        "enumDescriptions": [
                                          "Invalid.",
                                          "Full match. - Dictionary: join of Dictionary results matched complete finding quote - Regex: all regex matches fill a finding quote start to end - Exclude info type: completely inside affecting info types findings",
                                          "Partial match. - Dictionary: at least one of the tokens in the finding matches - Regex: substring of the finding matches - Exclude info type: intersects with affecting info types findings",
                                          "Inverse match. - Dictionary: no tokens in the finding match the dictionary - Regex: finding doesn't match the regex - Exclude info type: no intersection with affecting info types findings"
                                        ]
                                      },
                                      "excludeInfoTypes": {
                                        "id": "GooglePrivacyDlpV2ExcludeInfoTypes",
                                        "type": "object",
                                        "properties": {
                                          "infoTypes": {
                                            "type": "array",
                                            "items": {
                                              "id": "GooglePrivacyDlpV2InfoType",
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                                }
                                              },
                                              "description": "Type of information detected by the API."
                                            },
                                            "description": "InfoType list in ExclusionRule rule drops a finding when it overlaps or contained within with a finding of an infoType from this list. For example, for `InspectionRuleSet.info_types` containing \"PHONE_NUMBER\"` and `exclusion_rule` containing `exclude_info_types.info_types` with \"EMAIL_ADDRESS\" the phone number findings are dropped if they overlap with EMAIL_ADDRESS finding. That leads to \"555-222-2222@example.org\" to generate only a single finding, namely email address."
                                          }
                                        },
                                        "description": "Set of infoTypes for which findings would affect this rule."
                                      }
                                    },
                                    "description": "Exclusion rule."
                                  }
                                },
                                "description": "A single inspection rule to be applied to infoTypes, specified in `InspectionRuleSet`."
                              },
                              "description": "Set of rules to be applied to infoTypes. The rules are applied in order."
                            },
                            "infoTypes": {
                              "type": "array",
                              "items": {
                                "id": "GooglePrivacyDlpV2InfoType",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                  }
                                },
                                "description": "Type of information detected by the API."
                              },
                              "description": "List of infoTypes this rule set is applied to."
                            }
                          },
                          "description": "Rule set for modifying a set of infoTypes to alter behavior under certain circumstances, depending on the specific details of the rules within the set."
                        },
                        "description": "Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type."
                      },
                      "infoTypes": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2InfoType",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                            }
                          },
                          "description": "Type of information detected by the API."
                        },
                        "description": "Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/dlp/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time."
                      },
                      "includeQuote": {
                        "type": "boolean",
                        "description": "When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote."
                      },
                      "minLikelihood": {
                        "enum": [
                          "LIKELIHOOD_UNSPECIFIED",
                          "VERY_UNLIKELY",
                          "UNLIKELY",
                          "POSSIBLE",
                          "LIKELY",
                          "VERY_LIKELY"
                        ],
                        "type": "string",
                        "description": "Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more.",
                        "enumDescriptions": [
                          "Default value; same as POSSIBLE.",
                          "Few matching elements.",
                          "",
                          "Some matching elements.",
                          "",
                          "Many matching elements."
                        ]
                      },
                      "contentOptions": {
                        "type": "array",
                        "items": {
                          "enum": [
                            "CONTENT_UNSPECIFIED",
                            "CONTENT_TEXT",
                            "CONTENT_IMAGE"
                          ],
                          "type": "string",
                          "enumDescriptions": [
                            "Includes entire content of a file or a data stream.",
                            "Text content within the data, excluding any metadata.",
                            "Images found in the data."
                          ]
                        },
                        "description": "List of options defining data content to scan. If empty, text, images, and other content will be included."
                      },
                      "customInfoTypes": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2CustomInfoType",
                          "type": "object",
                          "properties": {
                            "regex": {
                              "id": "GooglePrivacyDlpV2Regex",
                              "type": "object",
                              "properties": {
                                "pattern": {
                                  "type": "string",
                                  "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                },
                                "groupIndexes": {
                                  "type": "array",
                                  "items": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                }
                              },
                              "description": "Regular expression based CustomInfoType."
                            },
                            "infoType": {
                              "id": "GooglePrivacyDlpV2InfoType",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                }
                              },
                              "description": "Type of information detected by the API."
                            },
                            "dictionary": {
                              "id": "GooglePrivacyDlpV2Dictionary",
                              "type": "object",
                              "properties": {
                                "wordList": {
                                  "id": "GooglePrivacyDlpV2WordList",
                                  "type": "object",
                                  "properties": {
                                    "words": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                    }
                                  },
                                  "description": "List of words or phrases to search for."
                                },
                                "cloudStoragePath": {
                                  "id": "GooglePrivacyDlpV2CloudStoragePath",
                                  "type": "object",
                                  "properties": {
                                    "path": {
                                      "type": "string",
                                      "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                    }
                                  },
                                  "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                                }
                              },
                              "description": "A list of phrases to detect as a CustomInfoType."
                            },
                            "likelihood": {
                              "enum": [
                                "LIKELIHOOD_UNSPECIFIED",
                                "VERY_UNLIKELY",
                                "UNLIKELY",
                                "POSSIBLE",
                                "LIKELY",
                                "VERY_LIKELY"
                              ],
                              "type": "string",
                              "description": "Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not specified.",
                              "enumDescriptions": [
                                "Default value; same as POSSIBLE.",
                                "Few matching elements.",
                                "",
                                "Some matching elements.",
                                "",
                                "Many matching elements."
                              ]
                            },
                            "storedType": {
                              "id": "GooglePrivacyDlpV2StoredType",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Resource name of the requested `StoredInfoType`, for example `organizations/433245324/storedInfoTypes/432452342` or `projects/project-id/storedInfoTypes/432452342`."
                                },
                                "createTime": {
                                  "type": "string",
                                  "format": "google-datetime",
                                  "description": "Timestamp indicating when the version of the `StoredInfoType` used for inspection was created. Output-only field, populated by the system."
                                }
                              },
                              "description": "Load an existing `StoredInfoType` resource for use in `InspectDataSource`. Not currently supported in `InspectContent`."
                            },
                            "exclusionType": {
                              "enum": [
                                "EXCLUSION_TYPE_UNSPECIFIED",
                                "EXCLUSION_TYPE_EXCLUDE"
                              ],
                              "type": "string",
                              "description": "If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching.",
                              "enumDescriptions": [
                                "A finding of this custom info type will not be excluded from results.",
                                "A finding of this custom info type will be excluded from final results, but can still affect rule execution."
                              ]
                            },
                            "surrogateType": {
                              "id": "GooglePrivacyDlpV2SurrogateType",
                              "type": "object",
                              "properties": {},
                              "description": "Message for detecting output from deidentification transformations that support reversing."
                            },
                            "detectionRules": {
                              "type": "array",
                              "items": {
                                "id": "GooglePrivacyDlpV2DetectionRule",
                                "type": "object",
                                "properties": {
                                  "hotwordRule": {
                                    "id": "GooglePrivacyDlpV2HotwordRule",
                                    "type": "object",
                                    "properties": {
                                      "proximity": {
                                        "id": "GooglePrivacyDlpV2Proximity",
                                        "type": "object",
                                        "properties": {
                                          "windowAfter": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Number of characters after the finding to consider."
                                          },
                                          "windowBefore": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Number of characters before the finding to consider."
                                          }
                                        },
                                        "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                      },
                                      "hotwordRegex": {
                                        "id": "GooglePrivacyDlpV2Regex",
                                        "type": "object",
                                        "properties": {
                                          "pattern": {
                                            "type": "string",
                                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                          },
                                          "groupIndexes": {
                                            "type": "array",
                                            "items": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                          }
                                        },
                                        "description": "Regular expression pattern defining what qualifies as a hotword."
                                      },
                                      "likelihoodAdjustment": {
                                        "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                        "type": "object",
                                        "properties": {
                                          "fixedLikelihood": {
                                            "enum": [
                                              "LIKELIHOOD_UNSPECIFIED",
                                              "VERY_UNLIKELY",
                                              "UNLIKELY",
                                              "POSSIBLE",
                                              "LIKELY",
                                              "VERY_LIKELY"
                                            ],
                                            "type": "string",
                                            "description": "Set the likelihood of a finding to a fixed value.",
                                            "enumDescriptions": [
                                              "Default value; same as POSSIBLE.",
                                              "Few matching elements.",
                                              "",
                                              "Some matching elements.",
                                              "",
                                              "Many matching elements."
                                            ]
                                          },
                                          "relativeLikelihood": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                          }
                                        },
                                        "description": "Likelihood adjustment to apply to all matching findings."
                                      }
                                    },
                                    "description": "Hotword-based detection rule."
                                  }
                                },
                                "description": "Deprecated; use `InspectionRuleSet` instead. Rule for modifying a `CustomInfoType` to alter behavior under certain circumstances, depending on the specific details of the rule. Not supported for the `surrogate_type` custom infoType."
                              },
                              "description": "Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in order that they are specified. Not supported for the `surrogate_type` CustomInfoType."
                            }
                          },
                          "description": "Custom information type provided by the user. Used to find domain-specific sensitive information configurable to the data in question."
                        },
                        "description": "CustomInfoTypes provided by the user. See https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more."
                      },
                      "excludeInfoTypes": {
                        "type": "boolean",
                        "description": "When true, excludes type information of the findings."
                      }
                    },
                    "description": "The core content of the template. Configuration of the scanning process."
                  }
                },
                "description": "The inspectTemplate contains a configuration (set of types of sensitive data to be detected) to be used anywhere you otherwise would normally specify InspectConfig. See https://cloud.google.com/dlp/docs/concepts-templates to learn more."
              },
              "description": "List of inspectTemplates, up to page_size in ListInspectTemplatesRequest."
            }
          },
          "description": "Response message for ListInspectTemplates."
        }
      ]
  organizations.locations.inspectTemplates.patch:
    description: |-
      Updates the InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.locations.inspectTemplates/patch
    example:
      inputs: [
        {
          "id": "GooglePrivacyDlpV2UpdateInspectTemplateRequest",
          "type": "object",
          "properties": {
            "updateMask": {
              "type": "string",
              "format": "google-fieldmask",
              "description": "Mask to control which fields get updated."
            },
            "inspectTemplate": {
              "id": "GooglePrivacyDlpV2InspectTemplate",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. The template name. The template will have one of the following formats: `projects/PROJECT_ID/inspectTemplates/TEMPLATE_ID` OR `organizations/ORGANIZATION_ID/inspectTemplates/TEMPLATE_ID`;"
                },
                "createTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "readOnly": true,
                  "description": "Output only. The creation timestamp of an inspectTemplate."
                },
                "updateTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "readOnly": true,
                  "description": "Output only. The last update timestamp of an inspectTemplate."
                },
                "description": {
                  "type": "string",
                  "description": "Short description (max 256 chars)."
                },
                "displayName": {
                  "type": "string",
                  "description": "Display name (max 256 chars)."
                },
                "inspectConfig": {
                  "id": "GooglePrivacyDlpV2InspectConfig",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "id": "GooglePrivacyDlpV2FindingLimits",
                      "type": "object",
                      "properties": {
                        "maxFindingsPerItem": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Max number of findings that will be returned for each item scanned. When set within `InspectJobConfig`, the maximum returned is 2000 regardless if this is set higher. When set within `InspectContentRequest`, this field is ignored."
                        },
                        "maxFindingsPerRequest": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Max number of findings that will be returned per request/job. When set within `InspectContentRequest`, the maximum returned is 2000 regardless if this is set higher."
                        },
                        "maxFindingsPerInfoType": {
                          "type": "array",
                          "items": {
                            "id": "GooglePrivacyDlpV2InfoTypeLimit",
                            "type": "object",
                            "properties": {
                              "infoType": {
                                "id": "GooglePrivacyDlpV2InfoType",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                  }
                                },
                                "description": "Type of information detected by the API."
                              },
                              "maxFindings": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Max findings limit for the given infoType."
                              }
                            },
                            "description": "Max findings configuration per infoType, per content item or long running DlpJob."
                          },
                          "description": "Configuration of findings limit given for specified infoTypes."
                        }
                      },
                      "description": "Configuration to control the number of findings returned."
                    },
                    "ruleSet": {
                      "type": "array",
                      "items": {
                        "id": "GooglePrivacyDlpV2InspectionRuleSet",
                        "type": "object",
                        "properties": {
                          "rules": {
                            "type": "array",
                            "items": {
                              "id": "GooglePrivacyDlpV2InspectionRule",
                              "type": "object",
                              "properties": {
                                "hotwordRule": {
                                  "id": "GooglePrivacyDlpV2HotwordRule",
                                  "type": "object",
                                  "properties": {
                                    "proximity": {
                                      "id": "GooglePrivacyDlpV2Proximity",
                                      "type": "object",
                                      "properties": {
                                        "windowAfter": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Number of characters after the finding to consider."
                                        },
                                        "windowBefore": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Number of characters before the finding to consider."
                                        }
                                      },
                                      "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                    },
                                    "hotwordRegex": {
                                      "id": "GooglePrivacyDlpV2Regex",
                                      "type": "object",
                                      "properties": {
                                        "pattern": {
                                          "type": "string",
                                          "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                        },
                                        "groupIndexes": {
                                          "type": "array",
                                          "items": {
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                        }
                                      },
                                      "description": "Regular expression pattern defining what qualifies as a hotword."
                                    },
                                    "likelihoodAdjustment": {
                                      "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                      "type": "object",
                                      "properties": {
                                        "fixedLikelihood": {
                                          "enum": [
                                            "LIKELIHOOD_UNSPECIFIED",
                                            "VERY_UNLIKELY",
                                            "UNLIKELY",
                                            "POSSIBLE",
                                            "LIKELY",
                                            "VERY_LIKELY"
                                          ],
                                          "type": "string",
                                          "description": "Set the likelihood of a finding to a fixed value.",
                                          "enumDescriptions": [
                                            "Default value; same as POSSIBLE.",
                                            "Few matching elements.",
                                            "",
                                            "Some matching elements.",
                                            "",
                                            "Many matching elements."
                                          ]
                                        },
                                        "relativeLikelihood": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                        }
                                      },
                                      "description": "Likelihood adjustment to apply to all matching findings."
                                    }
                                  },
                                  "description": "Hotword-based detection rule."
                                },
                                "exclusionRule": {
                                  "id": "GooglePrivacyDlpV2ExclusionRule",
                                  "type": "object",
                                  "properties": {
                                    "regex": {
                                      "id": "GooglePrivacyDlpV2Regex",
                                      "type": "object",
                                      "properties": {
                                        "pattern": {
                                          "type": "string",
                                          "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                        },
                                        "groupIndexes": {
                                          "type": "array",
                                          "items": {
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                        }
                                      },
                                      "description": "Regular expression which defines the rule."
                                    },
                                    "dictionary": {
                                      "id": "GooglePrivacyDlpV2Dictionary",
                                      "type": "object",
                                      "properties": {
                                        "wordList": {
                                          "id": "GooglePrivacyDlpV2WordList",
                                          "type": "object",
                                          "properties": {
                                            "words": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                            }
                                          },
                                          "description": "List of words or phrases to search for."
                                        },
                                        "cloudStoragePath": {
                                          "id": "GooglePrivacyDlpV2CloudStoragePath",
                                          "type": "object",
                                          "properties": {
                                            "path": {
                                              "type": "string",
                                              "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                            }
                                          },
                                          "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                                        }
                                      },
                                      "description": "Dictionary which defines the rule."
                                    },
                                    "matchingType": {
                                      "enum": [
                                        "MATCHING_TYPE_UNSPECIFIED",
                                        "MATCHING_TYPE_FULL_MATCH",
                                        "MATCHING_TYPE_PARTIAL_MATCH",
                                        "MATCHING_TYPE_INVERSE_MATCH"
                                      ],
                                      "type": "string",
                                      "description": "How the rule is applied, see MatchingType documentation for details.",
                                      "enumDescriptions": [
                                        "Invalid.",
                                        "Full match. - Dictionary: join of Dictionary results matched complete finding quote - Regex: all regex matches fill a finding quote start to end - Exclude info type: completely inside affecting info types findings",
                                        "Partial match. - Dictionary: at least one of the tokens in the finding matches - Regex: substring of the finding matches - Exclude info type: intersects with affecting info types findings",
                                        "Inverse match. - Dictionary: no tokens in the finding match the dictionary - Regex: finding doesn't match the regex - Exclude info type: no intersection with affecting info types findings"
                                      ]
                                    },
                                    "excludeInfoTypes": {
                                      "id": "GooglePrivacyDlpV2ExcludeInfoTypes",
                                      "type": "object",
                                      "properties": {
                                        "infoTypes": {
                                          "type": "array",
                                          "items": {
                                            "id": "GooglePrivacyDlpV2InfoType",
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                              }
                                            },
                                            "description": "Type of information detected by the API."
                                          },
                                          "description": "InfoType list in ExclusionRule rule drops a finding when it overlaps or contained within with a finding of an infoType from this list. For example, for `InspectionRuleSet.info_types` containing \"PHONE_NUMBER\"` and `exclusion_rule` containing `exclude_info_types.info_types` with \"EMAIL_ADDRESS\" the phone number findings are dropped if they overlap with EMAIL_ADDRESS finding. That leads to \"555-222-2222@example.org\" to generate only a single finding, namely email address."
                                        }
                                      },
                                      "description": "Set of infoTypes for which findings would affect this rule."
                                    }
                                  },
                                  "description": "Exclusion rule."
                                }
                              },
                              "description": "A single inspection rule to be applied to infoTypes, specified in `InspectionRuleSet`."
                            },
                            "description": "Set of rules to be applied to infoTypes. The rules are applied in order."
                          },
                          "infoTypes": {
                            "type": "array",
                            "items": {
                              "id": "GooglePrivacyDlpV2InfoType",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                }
                              },
                              "description": "Type of information detected by the API."
                            },
                            "description": "List of infoTypes this rule set is applied to."
                          }
                        },
                        "description": "Rule set for modifying a set of infoTypes to alter behavior under certain circumstances, depending on the specific details of the rules within the set."
                      },
                      "description": "Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type."
                    },
                    "infoTypes": {
                      "type": "array",
                      "items": {
                        "id": "GooglePrivacyDlpV2InfoType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                          }
                        },
                        "description": "Type of information detected by the API."
                      },
                      "description": "Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/dlp/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time."
                    },
                    "includeQuote": {
                      "type": "boolean",
                      "description": "When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote."
                    },
                    "minLikelihood": {
                      "enum": [
                        "LIKELIHOOD_UNSPECIFIED",
                        "VERY_UNLIKELY",
                        "UNLIKELY",
                        "POSSIBLE",
                        "LIKELY",
                        "VERY_LIKELY"
                      ],
                      "type": "string",
                      "description": "Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more.",
                      "enumDescriptions": [
                        "Default value; same as POSSIBLE.",
                        "Few matching elements.",
                        "",
                        "Some matching elements.",
                        "",
                        "Many matching elements."
                      ]
                    },
                    "contentOptions": {
                      "type": "array",
                      "items": {
                        "enum": [
                          "CONTENT_UNSPECIFIED",
                          "CONTENT_TEXT",
                          "CONTENT_IMAGE"
                        ],
                        "type": "string",
                        "enumDescriptions": [
                          "Includes entire content of a file or a data stream.",
                          "Text content within the data, excluding any metadata.",
                          "Images found in the data."
                        ]
                      },
                      "description": "List of options defining data content to scan. If empty, text, images, and other content will be included."
                    },
                    "customInfoTypes": {
                      "type": "array",
                      "items": {
                        "id": "GooglePrivacyDlpV2CustomInfoType",
                        "type": "object",
                        "properties": {
                          "regex": {
                            "id": "GooglePrivacyDlpV2Regex",
                            "type": "object",
                            "properties": {
                              "pattern": {
                                "type": "string",
                                "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                              },
                              "groupIndexes": {
                                "type": "array",
                                "items": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                              }
                            },
                            "description": "Regular expression based CustomInfoType."
                          },
                          "infoType": {
                            "id": "GooglePrivacyDlpV2InfoType",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                              }
                            },
                            "description": "Type of information detected by the API."
                          },
                          "dictionary": {
                            "id": "GooglePrivacyDlpV2Dictionary",
                            "type": "object",
                            "properties": {
                              "wordList": {
                                "id": "GooglePrivacyDlpV2WordList",
                                "type": "object",
                                "properties": {
                                  "words": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                  }
                                },
                                "description": "List of words or phrases to search for."
                              },
                              "cloudStoragePath": {
                                "id": "GooglePrivacyDlpV2CloudStoragePath",
                                "type": "object",
                                "properties": {
                                  "path": {
                                    "type": "string",
                                    "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                  }
                                },
                                "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                              }
                            },
                            "description": "A list of phrases to detect as a CustomInfoType."
                          },
                          "likelihood": {
                            "enum": [
                              "LIKELIHOOD_UNSPECIFIED",
                              "VERY_UNLIKELY",
                              "UNLIKELY",
                              "POSSIBLE",
                              "LIKELY",
                              "VERY_LIKELY"
                            ],
                            "type": "string",
                            "description": "Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not specified.",
                            "enumDescriptions": [
                              "Default value; same as POSSIBLE.",
                              "Few matching elements.",
                              "",
                              "Some matching elements.",
                              "",
                              "Many matching elements."
                            ]
                          },
                          "storedType": {
                            "id": "GooglePrivacyDlpV2StoredType",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Resource name of the requested `StoredInfoType`, for example `organizations/433245324/storedInfoTypes/432452342` or `projects/project-id/storedInfoTypes/432452342`."
                              },
                              "createTime": {
                                "type": "string",
                                "format": "google-datetime",
                                "description": "Timestamp indicating when the version of the `StoredInfoType` used for inspection was created. Output-only field, populated by the system."
                              }
                            },
                            "description": "Load an existing `StoredInfoType` resource for use in `InspectDataSource`. Not currently supported in `InspectContent`."
                          },
                          "exclusionType": {
                            "enum": [
                              "EXCLUSION_TYPE_UNSPECIFIED",
                              "EXCLUSION_TYPE_EXCLUDE"
                            ],
                            "type": "string",
                            "description": "If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching.",
                            "enumDescriptions": [
                              "A finding of this custom info type will not be excluded from results.",
                              "A finding of this custom info type will be excluded from final results, but can still affect rule execution."
                            ]
                          },
                          "surrogateType": {
                            "id": "GooglePrivacyDlpV2SurrogateType",
                            "type": "object",
                            "properties": {},
                            "description": "Message for detecting output from deidentification transformations that support reversing."
                          },
                          "detectionRules": {
                            "type": "array",
                            "items": {
                              "id": "GooglePrivacyDlpV2DetectionRule",
                              "type": "object",
                              "properties": {
                                "hotwordRule": {
                                  "id": "GooglePrivacyDlpV2HotwordRule",
                                  "type": "object",
                                  "properties": {
                                    "proximity": {
                                      "id": "GooglePrivacyDlpV2Proximity",
                                      "type": "object",
                                      "properties": {
                                        "windowAfter": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Number of characters after the finding to consider."
                                        },
                                        "windowBefore": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Number of characters before the finding to consider."
                                        }
                                      },
                                      "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                    },
                                    "hotwordRegex": {
                                      "id": "GooglePrivacyDlpV2Regex",
                                      "type": "object",
                                      "properties": {
                                        "pattern": {
                                          "type": "string",
                                          "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                        },
                                        "groupIndexes": {
                                          "type": "array",
                                          "items": {
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                        }
                                      },
                                      "description": "Regular expression pattern defining what qualifies as a hotword."
                                    },
                                    "likelihoodAdjustment": {
                                      "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                      "type": "object",
                                      "properties": {
                                        "fixedLikelihood": {
                                          "enum": [
                                            "LIKELIHOOD_UNSPECIFIED",
                                            "VERY_UNLIKELY",
                                            "UNLIKELY",
                                            "POSSIBLE",
                                            "LIKELY",
                                            "VERY_LIKELY"
                                          ],
                                          "type": "string",
                                          "description": "Set the likelihood of a finding to a fixed value.",
                                          "enumDescriptions": [
                                            "Default value; same as POSSIBLE.",
                                            "Few matching elements.",
                                            "",
                                            "Some matching elements.",
                                            "",
                                            "Many matching elements."
                                          ]
                                        },
                                        "relativeLikelihood": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                        }
                                      },
                                      "description": "Likelihood adjustment to apply to all matching findings."
                                    }
                                  },
                                  "description": "Hotword-based detection rule."
                                }
                              },
                              "description": "Deprecated; use `InspectionRuleSet` instead. Rule for modifying a `CustomInfoType` to alter behavior under certain circumstances, depending on the specific details of the rule. Not supported for the `surrogate_type` custom infoType."
                            },
                            "description": "Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in order that they are specified. Not supported for the `surrogate_type` CustomInfoType."
                          }
                        },
                        "description": "Custom information type provided by the user. Used to find domain-specific sensitive information configurable to the data in question."
                      },
                      "description": "CustomInfoTypes provided by the user. See https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more."
                    },
                    "excludeInfoTypes": {
                      "type": "boolean",
                      "description": "When true, excludes type information of the findings."
                    }
                  },
                  "description": "The core content of the template. Configuration of the scanning process."
                }
              },
              "description": "The inspectTemplate contains a configuration (set of types of sensitive data to be detected) to be used anywhere you otherwise would normally specify InspectConfig. See https://cloud.google.com/dlp/docs/concepts-templates to learn more."
            }
          },
          "description": "Request message for UpdateInspectTemplate."
        }
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2InspectTemplate",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The template name. The template will have one of the following formats: `projects/PROJECT_ID/inspectTemplates/TEMPLATE_ID` OR `organizations/ORGANIZATION_ID/inspectTemplates/TEMPLATE_ID`;"
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The creation timestamp of an inspectTemplate."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The last update timestamp of an inspectTemplate."
            },
            "description": {
              "type": "string",
              "description": "Short description (max 256 chars)."
            },
            "displayName": {
              "type": "string",
              "description": "Display name (max 256 chars)."
            },
            "inspectConfig": {
              "id": "GooglePrivacyDlpV2InspectConfig",
              "type": "object",
              "properties": {
                "limits": {
                  "id": "GooglePrivacyDlpV2FindingLimits",
                  "type": "object",
                  "properties": {
                    "maxFindingsPerItem": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Max number of findings that will be returned for each item scanned. When set within `InspectJobConfig`, the maximum returned is 2000 regardless if this is set higher. When set within `InspectContentRequest`, this field is ignored."
                    },
                    "maxFindingsPerRequest": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Max number of findings that will be returned per request/job. When set within `InspectContentRequest`, the maximum returned is 2000 regardless if this is set higher."
                    },
                    "maxFindingsPerInfoType": {
                      "type": "array",
                      "items": {
                        "id": "GooglePrivacyDlpV2InfoTypeLimit",
                        "type": "object",
                        "properties": {
                          "infoType": {
                            "id": "GooglePrivacyDlpV2InfoType",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                              }
                            },
                            "description": "Type of information detected by the API."
                          },
                          "maxFindings": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Max findings limit for the given infoType."
                          }
                        },
                        "description": "Max findings configuration per infoType, per content item or long running DlpJob."
                      },
                      "description": "Configuration of findings limit given for specified infoTypes."
                    }
                  },
                  "description": "Configuration to control the number of findings returned."
                },
                "ruleSet": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2InspectionRuleSet",
                    "type": "object",
                    "properties": {
                      "rules": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2InspectionRule",
                          "type": "object",
                          "properties": {
                            "hotwordRule": {
                              "id": "GooglePrivacyDlpV2HotwordRule",
                              "type": "object",
                              "properties": {
                                "proximity": {
                                  "id": "GooglePrivacyDlpV2Proximity",
                                  "type": "object",
                                  "properties": {
                                    "windowAfter": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters after the finding to consider."
                                    },
                                    "windowBefore": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters before the finding to consider."
                                    }
                                  },
                                  "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                },
                                "hotwordRegex": {
                                  "id": "GooglePrivacyDlpV2Regex",
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string",
                                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                    },
                                    "groupIndexes": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                    }
                                  },
                                  "description": "Regular expression pattern defining what qualifies as a hotword."
                                },
                                "likelihoodAdjustment": {
                                  "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                  "type": "object",
                                  "properties": {
                                    "fixedLikelihood": {
                                      "enum": [
                                        "LIKELIHOOD_UNSPECIFIED",
                                        "VERY_UNLIKELY",
                                        "UNLIKELY",
                                        "POSSIBLE",
                                        "LIKELY",
                                        "VERY_LIKELY"
                                      ],
                                      "type": "string",
                                      "description": "Set the likelihood of a finding to a fixed value.",
                                      "enumDescriptions": [
                                        "Default value; same as POSSIBLE.",
                                        "Few matching elements.",
                                        "",
                                        "Some matching elements.",
                                        "",
                                        "Many matching elements."
                                      ]
                                    },
                                    "relativeLikelihood": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                    }
                                  },
                                  "description": "Likelihood adjustment to apply to all matching findings."
                                }
                              },
                              "description": "Hotword-based detection rule."
                            },
                            "exclusionRule": {
                              "id": "GooglePrivacyDlpV2ExclusionRule",
                              "type": "object",
                              "properties": {
                                "regex": {
                                  "id": "GooglePrivacyDlpV2Regex",
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string",
                                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                    },
                                    "groupIndexes": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                    }
                                  },
                                  "description": "Regular expression which defines the rule."
                                },
                                "dictionary": {
                                  "id": "GooglePrivacyDlpV2Dictionary",
                                  "type": "object",
                                  "properties": {
                                    "wordList": {
                                      "id": "GooglePrivacyDlpV2WordList",
                                      "type": "object",
                                      "properties": {
                                        "words": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                        }
                                      },
                                      "description": "List of words or phrases to search for."
                                    },
                                    "cloudStoragePath": {
                                      "id": "GooglePrivacyDlpV2CloudStoragePath",
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string",
                                          "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                        }
                                      },
                                      "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                                    }
                                  },
                                  "description": "Dictionary which defines the rule."
                                },
                                "matchingType": {
                                  "enum": [
                                    "MATCHING_TYPE_UNSPECIFIED",
                                    "MATCHING_TYPE_FULL_MATCH",
                                    "MATCHING_TYPE_PARTIAL_MATCH",
                                    "MATCHING_TYPE_INVERSE_MATCH"
                                  ],
                                  "type": "string",
                                  "description": "How the rule is applied, see MatchingType documentation for details.",
                                  "enumDescriptions": [
                                    "Invalid.",
                                    "Full match. - Dictionary: join of Dictionary results matched complete finding quote - Regex: all regex matches fill a finding quote start to end - Exclude info type: completely inside affecting info types findings",
                                    "Partial match. - Dictionary: at least one of the tokens in the finding matches - Regex: substring of the finding matches - Exclude info type: intersects with affecting info types findings",
                                    "Inverse match. - Dictionary: no tokens in the finding match the dictionary - Regex: finding doesn't match the regex - Exclude info type: no intersection with affecting info types findings"
                                  ]
                                },
                                "excludeInfoTypes": {
                                  "id": "GooglePrivacyDlpV2ExcludeInfoTypes",
                                  "type": "object",
                                  "properties": {
                                    "infoTypes": {
                                      "type": "array",
                                      "items": {
                                        "id": "GooglePrivacyDlpV2InfoType",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                          }
                                        },
                                        "description": "Type of information detected by the API."
                                      },
                                      "description": "InfoType list in ExclusionRule rule drops a finding when it overlaps or contained within with a finding of an infoType from this list. For example, for `InspectionRuleSet.info_types` containing \"PHONE_NUMBER\"` and `exclusion_rule` containing `exclude_info_types.info_types` with \"EMAIL_ADDRESS\" the phone number findings are dropped if they overlap with EMAIL_ADDRESS finding. That leads to \"555-222-2222@example.org\" to generate only a single finding, namely email address."
                                    }
                                  },
                                  "description": "Set of infoTypes for which findings would affect this rule."
                                }
                              },
                              "description": "Exclusion rule."
                            }
                          },
                          "description": "A single inspection rule to be applied to infoTypes, specified in `InspectionRuleSet`."
                        },
                        "description": "Set of rules to be applied to infoTypes. The rules are applied in order."
                      },
                      "infoTypes": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2InfoType",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                            }
                          },
                          "description": "Type of information detected by the API."
                        },
                        "description": "List of infoTypes this rule set is applied to."
                      }
                    },
                    "description": "Rule set for modifying a set of infoTypes to alter behavior under certain circumstances, depending on the specific details of the rules within the set."
                  },
                  "description": "Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type."
                },
                "infoTypes": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2InfoType",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                      }
                    },
                    "description": "Type of information detected by the API."
                  },
                  "description": "Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/dlp/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time."
                },
                "includeQuote": {
                  "type": "boolean",
                  "description": "When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote."
                },
                "minLikelihood": {
                  "enum": [
                    "LIKELIHOOD_UNSPECIFIED",
                    "VERY_UNLIKELY",
                    "UNLIKELY",
                    "POSSIBLE",
                    "LIKELY",
                    "VERY_LIKELY"
                  ],
                  "type": "string",
                  "description": "Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more.",
                  "enumDescriptions": [
                    "Default value; same as POSSIBLE.",
                    "Few matching elements.",
                    "",
                    "Some matching elements.",
                    "",
                    "Many matching elements."
                  ]
                },
                "contentOptions": {
                  "type": "array",
                  "items": {
                    "enum": [
                      "CONTENT_UNSPECIFIED",
                      "CONTENT_TEXT",
                      "CONTENT_IMAGE"
                    ],
                    "type": "string",
                    "enumDescriptions": [
                      "Includes entire content of a file or a data stream.",
                      "Text content within the data, excluding any metadata.",
                      "Images found in the data."
                    ]
                  },
                  "description": "List of options defining data content to scan. If empty, text, images, and other content will be included."
                },
                "customInfoTypes": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2CustomInfoType",
                    "type": "object",
                    "properties": {
                      "regex": {
                        "id": "GooglePrivacyDlpV2Regex",
                        "type": "object",
                        "properties": {
                          "pattern": {
                            "type": "string",
                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                          },
                          "groupIndexes": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                          }
                        },
                        "description": "Regular expression based CustomInfoType."
                      },
                      "infoType": {
                        "id": "GooglePrivacyDlpV2InfoType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                          }
                        },
                        "description": "Type of information detected by the API."
                      },
                      "dictionary": {
                        "id": "GooglePrivacyDlpV2Dictionary",
                        "type": "object",
                        "properties": {
                          "wordList": {
                            "id": "GooglePrivacyDlpV2WordList",
                            "type": "object",
                            "properties": {
                              "words": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                              }
                            },
                            "description": "List of words or phrases to search for."
                          },
                          "cloudStoragePath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                          }
                        },
                        "description": "A list of phrases to detect as a CustomInfoType."
                      },
                      "likelihood": {
                        "enum": [
                          "LIKELIHOOD_UNSPECIFIED",
                          "VERY_UNLIKELY",
                          "UNLIKELY",
                          "POSSIBLE",
                          "LIKELY",
                          "VERY_LIKELY"
                        ],
                        "type": "string",
                        "description": "Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not specified.",
                        "enumDescriptions": [
                          "Default value; same as POSSIBLE.",
                          "Few matching elements.",
                          "",
                          "Some matching elements.",
                          "",
                          "Many matching elements."
                        ]
                      },
                      "storedType": {
                        "id": "GooglePrivacyDlpV2StoredType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Resource name of the requested `StoredInfoType`, for example `organizations/433245324/storedInfoTypes/432452342` or `projects/project-id/storedInfoTypes/432452342`."
                          },
                          "createTime": {
                            "type": "string",
                            "format": "google-datetime",
                            "description": "Timestamp indicating when the version of the `StoredInfoType` used for inspection was created. Output-only field, populated by the system."
                          }
                        },
                        "description": "Load an existing `StoredInfoType` resource for use in `InspectDataSource`. Not currently supported in `InspectContent`."
                      },
                      "exclusionType": {
                        "enum": [
                          "EXCLUSION_TYPE_UNSPECIFIED",
                          "EXCLUSION_TYPE_EXCLUDE"
                        ],
                        "type": "string",
                        "description": "If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching.",
                        "enumDescriptions": [
                          "A finding of this custom info type will not be excluded from results.",
                          "A finding of this custom info type will be excluded from final results, but can still affect rule execution."
                        ]
                      },
                      "surrogateType": {
                        "id": "GooglePrivacyDlpV2SurrogateType",
                        "type": "object",
                        "properties": {},
                        "description": "Message for detecting output from deidentification transformations that support reversing."
                      },
                      "detectionRules": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2DetectionRule",
                          "type": "object",
                          "properties": {
                            "hotwordRule": {
                              "id": "GooglePrivacyDlpV2HotwordRule",
                              "type": "object",
                              "properties": {
                                "proximity": {
                                  "id": "GooglePrivacyDlpV2Proximity",
                                  "type": "object",
                                  "properties": {
                                    "windowAfter": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters after the finding to consider."
                                    },
                                    "windowBefore": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters before the finding to consider."
                                    }
                                  },
                                  "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                },
                                "hotwordRegex": {
                                  "id": "GooglePrivacyDlpV2Regex",
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string",
                                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                    },
                                    "groupIndexes": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                    }
                                  },
                                  "description": "Regular expression pattern defining what qualifies as a hotword."
                                },
                                "likelihoodAdjustment": {
                                  "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                  "type": "object",
                                  "properties": {
                                    "fixedLikelihood": {
                                      "enum": [
                                        "LIKELIHOOD_UNSPECIFIED",
                                        "VERY_UNLIKELY",
                                        "UNLIKELY",
                                        "POSSIBLE",
                                        "LIKELY",
                                        "VERY_LIKELY"
                                      ],
                                      "type": "string",
                                      "description": "Set the likelihood of a finding to a fixed value.",
                                      "enumDescriptions": [
                                        "Default value; same as POSSIBLE.",
                                        "Few matching elements.",
                                        "",
                                        "Some matching elements.",
                                        "",
                                        "Many matching elements."
                                      ]
                                    },
                                    "relativeLikelihood": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                    }
                                  },
                                  "description": "Likelihood adjustment to apply to all matching findings."
                                }
                              },
                              "description": "Hotword-based detection rule."
                            }
                          },
                          "description": "Deprecated; use `InspectionRuleSet` instead. Rule for modifying a `CustomInfoType` to alter behavior under certain circumstances, depending on the specific details of the rule. Not supported for the `surrogate_type` custom infoType."
                        },
                        "description": "Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in order that they are specified. Not supported for the `surrogate_type` CustomInfoType."
                      }
                    },
                    "description": "Custom information type provided by the user. Used to find domain-specific sensitive information configurable to the data in question."
                  },
                  "description": "CustomInfoTypes provided by the user. See https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more."
                },
                "excludeInfoTypes": {
                  "type": "boolean",
                  "description": "When true, excludes type information of the findings."
                }
              },
              "description": "The core content of the template. Configuration of the scanning process."
            }
          },
          "description": "The inspectTemplate contains a configuration (set of types of sensitive data to be detected) to be used anywhere you otherwise would normally specify InspectConfig. See https://cloud.google.com/dlp/docs/concepts-templates to learn more."
        }
      ]
  organizations.locations.jobTriggers.create:
    description: |-
      Creates a job trigger to run DLP actions such as scanning storage for sensitive information on a set schedule. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.locations.jobTriggers/create
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.locations.jobTriggers.delete:
    description: |-
      Deletes a job trigger. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.locations.jobTriggers/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  organizations.locations.jobTriggers.get:
    description: |-
      Gets a job trigger. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.locations.jobTriggers/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.locations.jobTriggers.list:
    description: |-
      Lists job triggers. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.locations.jobTriggers/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.locations.jobTriggers.patch:
    description: |-
      Updates a job trigger. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.locations.jobTriggers/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  organizations.locations.storedInfoTypes.create:
    description: |-
      Creates a pre-built stored infoType to be used for inspection. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.locations.storedInfoTypes/create
    example:
      inputs: [
        {
          "id": "GooglePrivacyDlpV2CreateStoredInfoTypeRequest",
          "type": "object",
          "properties": {
            "config": {
              "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
              "type": "object",
              "properties": {
                "regex": {
                  "id": "GooglePrivacyDlpV2Regex",
                  "type": "object",
                  "properties": {
                    "pattern": {
                      "type": "string",
                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                    },
                    "groupIndexes": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                    }
                  },
                  "description": "Store regular expression-based StoredInfoType."
                },
                "dictionary": {
                  "id": "GooglePrivacyDlpV2Dictionary",
                  "type": "object",
                  "properties": {
                    "wordList": {
                      "id": "GooglePrivacyDlpV2WordList",
                      "type": "object",
                      "properties": {
                        "words": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                        }
                      },
                      "description": "List of words or phrases to search for."
                    },
                    "cloudStoragePath": {
                      "id": "GooglePrivacyDlpV2CloudStoragePath",
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                        }
                      },
                      "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                    }
                  },
                  "description": "Store dictionary-based CustomInfoType."
                },
                "description": {
                  "type": "string",
                  "description": "Description of the StoredInfoType (max 256 characters)."
                },
                "displayName": {
                  "type": "string",
                  "description": "Display name of the StoredInfoType (max 256 characters)."
                },
                "largeCustomDictionary": {
                  "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                  "type": "object",
                  "properties": {
                    "outputPath": {
                      "id": "GooglePrivacyDlpV2CloudStoragePath",
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                        }
                      },
                      "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                    },
                    "bigQueryField": {
                      "id": "GooglePrivacyDlpV2BigQueryField",
                      "type": "object",
                      "properties": {
                        "field": {
                          "id": "GooglePrivacyDlpV2FieldId",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name describing the field."
                            }
                          },
                          "description": "General identifier of a data field in a storage service."
                        },
                        "table": {
                          "id": "GooglePrivacyDlpV2BigQueryTable",
                          "type": "object",
                          "properties": {
                            "tableId": {
                              "type": "string",
                              "description": "Name of the table."
                            },
                            "datasetId": {
                              "type": "string",
                              "description": "Dataset ID of the table."
                            },
                            "projectId": {
                              "type": "string",
                              "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                            }
                          },
                          "description": "Source table of the field."
                        }
                      },
                      "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                    },
                    "cloudStorageFileSet": {
                      "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                        }
                      },
                      "description": "Set of files containing newline-delimited lists of dictionary phrases."
                    }
                  },
                  "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                }
              },
              "description": "Required. Configuration of the storedInfoType to create."
            },
            "locationId": {
              "type": "string",
              "description": "Deprecated. This field has no effect."
            },
            "storedInfoTypeId": {
              "type": "string",
              "description": "The storedInfoType ID can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one."
            }
          },
          "description": "Request message for CreateStoredInfoType."
        }
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2StoredInfoType",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Resource name."
            },
            "currentVersion": {
              "id": "GooglePrivacyDlpV2StoredInfoTypeVersion",
              "type": "object",
              "properties": {
                "state": {
                  "enum": [
                    "STORED_INFO_TYPE_STATE_UNSPECIFIED",
                    "PENDING",
                    "READY",
                    "FAILED",
                    "INVALID"
                  ],
                  "type": "string",
                  "description": "Stored info type version state. Read-only, updated by the system during dictionary creation.",
                  "enumDescriptions": [
                    "Unused",
                    "StoredInfoType version is being created.",
                    "StoredInfoType version is ready for use.",
                    "StoredInfoType creation failed. All relevant error messages are returned in the `StoredInfoTypeVersion` message.",
                    "StoredInfoType is no longer valid because artifacts stored in user-controlled storage were modified. To fix an invalid StoredInfoType, use the `UpdateStoredInfoType` method to create a new version."
                  ]
                },
                "stats": {
                  "id": "GooglePrivacyDlpV2StoredInfoTypeStats",
                  "type": "object",
                  "properties": {
                    "largeCustomDictionary": {
                      "id": "GooglePrivacyDlpV2LargeCustomDictionaryStats",
                      "type": "object",
                      "properties": {
                        "approxNumPhrases": {
                          "type": "string",
                          "format": "int64",
                          "description": "Approximate number of distinct phrases in the dictionary."
                        }
                      },
                      "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                    }
                  },
                  "description": "Statistics about this storedInfoType version."
                },
                "config": {
                  "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
                  "type": "object",
                  "properties": {
                    "regex": {
                      "id": "GooglePrivacyDlpV2Regex",
                      "type": "object",
                      "properties": {
                        "pattern": {
                          "type": "string",
                          "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                        },
                        "groupIndexes": {
                          "type": "array",
                          "items": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                        }
                      },
                      "description": "Store regular expression-based StoredInfoType."
                    },
                    "dictionary": {
                      "id": "GooglePrivacyDlpV2Dictionary",
                      "type": "object",
                      "properties": {
                        "wordList": {
                          "id": "GooglePrivacyDlpV2WordList",
                          "type": "object",
                          "properties": {
                            "words": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                            }
                          },
                          "description": "List of words or phrases to search for."
                        },
                        "cloudStoragePath": {
                          "id": "GooglePrivacyDlpV2CloudStoragePath",
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                            }
                          },
                          "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                        }
                      },
                      "description": "Store dictionary-based CustomInfoType."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the StoredInfoType (max 256 characters)."
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the StoredInfoType (max 256 characters)."
                    },
                    "largeCustomDictionary": {
                      "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                      "type": "object",
                      "properties": {
                        "outputPath": {
                          "id": "GooglePrivacyDlpV2CloudStoragePath",
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                            }
                          },
                          "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                        },
                        "bigQueryField": {
                          "id": "GooglePrivacyDlpV2BigQueryField",
                          "type": "object",
                          "properties": {
                            "field": {
                              "id": "GooglePrivacyDlpV2FieldId",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name describing the field."
                                }
                              },
                              "description": "General identifier of a data field in a storage service."
                            },
                            "table": {
                              "id": "GooglePrivacyDlpV2BigQueryTable",
                              "type": "object",
                              "properties": {
                                "tableId": {
                                  "type": "string",
                                  "description": "Name of the table."
                                },
                                "datasetId": {
                                  "type": "string",
                                  "description": "Dataset ID of the table."
                                },
                                "projectId": {
                                  "type": "string",
                                  "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                }
                              },
                              "description": "Source table of the field."
                            }
                          },
                          "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                        },
                        "cloudStorageFileSet": {
                          "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                            }
                          },
                          "description": "Set of files containing newline-delimited lists of dictionary phrases."
                        }
                      },
                      "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                    }
                  },
                  "description": "StoredInfoType configuration."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2Error",
                    "type": "object",
                    "properties": {
                      "details": {
                        "id": "GoogleRpcStatus",
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The status code, which should be an enum value of google.rpc.Code."
                          },
                          "details": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "any",
                                "description": "Properties of the object. Contains field @type with type URL."
                              }
                            },
                            "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                          },
                          "message": {
                            "type": "string",
                            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                          }
                        },
                        "description": "Detailed error codes and messages."
                      },
                      "timestamps": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "google-datetime"
                        },
                        "description": "The times the error occurred."
                      }
                    },
                    "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
                  },
                  "description": "Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error."
                },
                "createTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "Create timestamp of the version. Read-only, determined by the system when the version is created."
                }
              },
              "description": "Current version of the stored info type."
            },
            "pendingVersions": {
              "type": "array",
              "items": {
                "id": "GooglePrivacyDlpV2StoredInfoTypeVersion",
                "type": "object",
                "properties": {
                  "state": {
                    "enum": [
                      "STORED_INFO_TYPE_STATE_UNSPECIFIED",
                      "PENDING",
                      "READY",
                      "FAILED",
                      "INVALID"
                    ],
                    "type": "string",
                    "description": "Stored info type version state. Read-only, updated by the system during dictionary creation.",
                    "enumDescriptions": [
                      "Unused",
                      "StoredInfoType version is being created.",
                      "StoredInfoType version is ready for use.",
                      "StoredInfoType creation failed. All relevant error messages are returned in the `StoredInfoTypeVersion` message.",
                      "StoredInfoType is no longer valid because artifacts stored in user-controlled storage were modified. To fix an invalid StoredInfoType, use the `UpdateStoredInfoType` method to create a new version."
                    ]
                  },
                  "stats": {
                    "id": "GooglePrivacyDlpV2StoredInfoTypeStats",
                    "type": "object",
                    "properties": {
                      "largeCustomDictionary": {
                        "id": "GooglePrivacyDlpV2LargeCustomDictionaryStats",
                        "type": "object",
                        "properties": {
                          "approxNumPhrases": {
                            "type": "string",
                            "format": "int64",
                            "description": "Approximate number of distinct phrases in the dictionary."
                          }
                        },
                        "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                      }
                    },
                    "description": "Statistics about this storedInfoType version."
                  },
                  "config": {
                    "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
                    "type": "object",
                    "properties": {
                      "regex": {
                        "id": "GooglePrivacyDlpV2Regex",
                        "type": "object",
                        "properties": {
                          "pattern": {
                            "type": "string",
                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                          },
                          "groupIndexes": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                          }
                        },
                        "description": "Store regular expression-based StoredInfoType."
                      },
                      "dictionary": {
                        "id": "GooglePrivacyDlpV2Dictionary",
                        "type": "object",
                        "properties": {
                          "wordList": {
                            "id": "GooglePrivacyDlpV2WordList",
                            "type": "object",
                            "properties": {
                              "words": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                              }
                            },
                            "description": "List of words or phrases to search for."
                          },
                          "cloudStoragePath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                          }
                        },
                        "description": "Store dictionary-based CustomInfoType."
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the StoredInfoType (max 256 characters)."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Display name of the StoredInfoType (max 256 characters)."
                      },
                      "largeCustomDictionary": {
                        "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                        "type": "object",
                        "properties": {
                          "outputPath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                          },
                          "bigQueryField": {
                            "id": "GooglePrivacyDlpV2BigQueryField",
                            "type": "object",
                            "properties": {
                              "field": {
                                "id": "GooglePrivacyDlpV2FieldId",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name describing the field."
                                  }
                                },
                                "description": "General identifier of a data field in a storage service."
                              },
                              "table": {
                                "id": "GooglePrivacyDlpV2BigQueryTable",
                                "type": "object",
                                "properties": {
                                  "tableId": {
                                    "type": "string",
                                    "description": "Name of the table."
                                  },
                                  "datasetId": {
                                    "type": "string",
                                    "description": "Dataset ID of the table."
                                  },
                                  "projectId": {
                                    "type": "string",
                                    "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                  }
                                },
                                "description": "Source table of the field."
                              }
                            },
                            "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                          },
                          "cloudStorageFileSet": {
                            "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string",
                                "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                              }
                            },
                            "description": "Set of files containing newline-delimited lists of dictionary phrases."
                          }
                        },
                        "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                      }
                    },
                    "description": "StoredInfoType configuration."
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "id": "GooglePrivacyDlpV2Error",
                      "type": "object",
                      "properties": {
                        "details": {
                          "id": "GoogleRpcStatus",
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The status code, which should be an enum value of google.rpc.Code."
                            },
                            "details": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "any",
                                  "description": "Properties of the object. Contains field @type with type URL."
                                }
                              },
                              "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                            },
                            "message": {
                              "type": "string",
                              "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                            }
                          },
                          "description": "Detailed error codes and messages."
                        },
                        "timestamps": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "google-datetime"
                          },
                          "description": "The times the error occurred."
                        }
                      },
                      "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
                    },
                    "description": "Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Create timestamp of the version. Read-only, determined by the system when the version is created."
                  }
                },
                "description": "Version of a StoredInfoType, including the configuration used to build it, create timestamp, and current state."
              },
              "description": "Pending versions of the stored info type. Empty if no versions are pending."
            }
          },
          "description": "StoredInfoType resource message that contains information about the current version and any pending updates."
        }
      ]
  organizations.locations.storedInfoTypes.delete:
    description: |-
      Deletes a stored infoType. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.locations.storedInfoTypes/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  organizations.locations.storedInfoTypes.get:
    description: |-
      Gets a stored infoType. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.locations.storedInfoTypes/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2StoredInfoType",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Resource name."
            },
            "currentVersion": {
              "id": "GooglePrivacyDlpV2StoredInfoTypeVersion",
              "type": "object",
              "properties": {
                "state": {
                  "enum": [
                    "STORED_INFO_TYPE_STATE_UNSPECIFIED",
                    "PENDING",
                    "READY",
                    "FAILED",
                    "INVALID"
                  ],
                  "type": "string",
                  "description": "Stored info type version state. Read-only, updated by the system during dictionary creation.",
                  "enumDescriptions": [
                    "Unused",
                    "StoredInfoType version is being created.",
                    "StoredInfoType version is ready for use.",
                    "StoredInfoType creation failed. All relevant error messages are returned in the `StoredInfoTypeVersion` message.",
                    "StoredInfoType is no longer valid because artifacts stored in user-controlled storage were modified. To fix an invalid StoredInfoType, use the `UpdateStoredInfoType` method to create a new version."
                  ]
                },
                "stats": {
                  "id": "GooglePrivacyDlpV2StoredInfoTypeStats",
                  "type": "object",
                  "properties": {
                    "largeCustomDictionary": {
                      "id": "GooglePrivacyDlpV2LargeCustomDictionaryStats",
                      "type": "object",
                      "properties": {
                        "approxNumPhrases": {
                          "type": "string",
                          "format": "int64",
                          "description": "Approximate number of distinct phrases in the dictionary."
                        }
                      },
                      "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                    }
                  },
                  "description": "Statistics about this storedInfoType version."
                },
                "config": {
                  "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
                  "type": "object",
                  "properties": {
                    "regex": {
                      "id": "GooglePrivacyDlpV2Regex",
                      "type": "object",
                      "properties": {
                        "pattern": {
                          "type": "string",
                          "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                        },
                        "groupIndexes": {
                          "type": "array",
                          "items": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                        }
                      },
                      "description": "Store regular expression-based StoredInfoType."
                    },
                    "dictionary": {
                      "id": "GooglePrivacyDlpV2Dictionary",
                      "type": "object",
                      "properties": {
                        "wordList": {
                          "id": "GooglePrivacyDlpV2WordList",
                          "type": "object",
                          "properties": {
                            "words": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                            }
                          },
                          "description": "List of words or phrases to search for."
                        },
                        "cloudStoragePath": {
                          "id": "GooglePrivacyDlpV2CloudStoragePath",
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                            }
                          },
                          "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                        }
                      },
                      "description": "Store dictionary-based CustomInfoType."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the StoredInfoType (max 256 characters)."
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the StoredInfoType (max 256 characters)."
                    },
                    "largeCustomDictionary": {
                      "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                      "type": "object",
                      "properties": {
                        "outputPath": {
                          "id": "GooglePrivacyDlpV2CloudStoragePath",
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                            }
                          },
                          "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                        },
                        "bigQueryField": {
                          "id": "GooglePrivacyDlpV2BigQueryField",
                          "type": "object",
                          "properties": {
                            "field": {
                              "id": "GooglePrivacyDlpV2FieldId",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name describing the field."
                                }
                              },
                              "description": "General identifier of a data field in a storage service."
                            },
                            "table": {
                              "id": "GooglePrivacyDlpV2BigQueryTable",
                              "type": "object",
                              "properties": {
                                "tableId": {
                                  "type": "string",
                                  "description": "Name of the table."
                                },
                                "datasetId": {
                                  "type": "string",
                                  "description": "Dataset ID of the table."
                                },
                                "projectId": {
                                  "type": "string",
                                  "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                }
                              },
                              "description": "Source table of the field."
                            }
                          },
                          "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                        },
                        "cloudStorageFileSet": {
                          "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                            }
                          },
                          "description": "Set of files containing newline-delimited lists of dictionary phrases."
                        }
                      },
                      "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                    }
                  },
                  "description": "StoredInfoType configuration."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2Error",
                    "type": "object",
                    "properties": {
                      "details": {
                        "id": "GoogleRpcStatus",
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The status code, which should be an enum value of google.rpc.Code."
                          },
                          "details": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "any",
                                "description": "Properties of the object. Contains field @type with type URL."
                              }
                            },
                            "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                          },
                          "message": {
                            "type": "string",
                            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                          }
                        },
                        "description": "Detailed error codes and messages."
                      },
                      "timestamps": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "google-datetime"
                        },
                        "description": "The times the error occurred."
                      }
                    },
                    "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
                  },
                  "description": "Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error."
                },
                "createTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "Create timestamp of the version. Read-only, determined by the system when the version is created."
                }
              },
              "description": "Current version of the stored info type."
            },
            "pendingVersions": {
              "type": "array",
              "items": {
                "id": "GooglePrivacyDlpV2StoredInfoTypeVersion",
                "type": "object",
                "properties": {
                  "state": {
                    "enum": [
                      "STORED_INFO_TYPE_STATE_UNSPECIFIED",
                      "PENDING",
                      "READY",
                      "FAILED",
                      "INVALID"
                    ],
                    "type": "string",
                    "description": "Stored info type version state. Read-only, updated by the system during dictionary creation.",
                    "enumDescriptions": [
                      "Unused",
                      "StoredInfoType version is being created.",
                      "StoredInfoType version is ready for use.",
                      "StoredInfoType creation failed. All relevant error messages are returned in the `StoredInfoTypeVersion` message.",
                      "StoredInfoType is no longer valid because artifacts stored in user-controlled storage were modified. To fix an invalid StoredInfoType, use the `UpdateStoredInfoType` method to create a new version."
                    ]
                  },
                  "stats": {
                    "id": "GooglePrivacyDlpV2StoredInfoTypeStats",
                    "type": "object",
                    "properties": {
                      "largeCustomDictionary": {
                        "id": "GooglePrivacyDlpV2LargeCustomDictionaryStats",
                        "type": "object",
                        "properties": {
                          "approxNumPhrases": {
                            "type": "string",
                            "format": "int64",
                            "description": "Approximate number of distinct phrases in the dictionary."
                          }
                        },
                        "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                      }
                    },
                    "description": "Statistics about this storedInfoType version."
                  },
                  "config": {
                    "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
                    "type": "object",
                    "properties": {
                      "regex": {
                        "id": "GooglePrivacyDlpV2Regex",
                        "type": "object",
                        "properties": {
                          "pattern": {
                            "type": "string",
                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                          },
                          "groupIndexes": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                          }
                        },
                        "description": "Store regular expression-based StoredInfoType."
                      },
                      "dictionary": {
                        "id": "GooglePrivacyDlpV2Dictionary",
                        "type": "object",
                        "properties": {
                          "wordList": {
                            "id": "GooglePrivacyDlpV2WordList",
                            "type": "object",
                            "properties": {
                              "words": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                              }
                            },
                            "description": "List of words or phrases to search for."
                          },
                          "cloudStoragePath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                          }
                        },
                        "description": "Store dictionary-based CustomInfoType."
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the StoredInfoType (max 256 characters)."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Display name of the StoredInfoType (max 256 characters)."
                      },
                      "largeCustomDictionary": {
                        "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                        "type": "object",
                        "properties": {
                          "outputPath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                          },
                          "bigQueryField": {
                            "id": "GooglePrivacyDlpV2BigQueryField",
                            "type": "object",
                            "properties": {
                              "field": {
                                "id": "GooglePrivacyDlpV2FieldId",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name describing the field."
                                  }
                                },
                                "description": "General identifier of a data field in a storage service."
                              },
                              "table": {
                                "id": "GooglePrivacyDlpV2BigQueryTable",
                                "type": "object",
                                "properties": {
                                  "tableId": {
                                    "type": "string",
                                    "description": "Name of the table."
                                  },
                                  "datasetId": {
                                    "type": "string",
                                    "description": "Dataset ID of the table."
                                  },
                                  "projectId": {
                                    "type": "string",
                                    "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                  }
                                },
                                "description": "Source table of the field."
                              }
                            },
                            "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                          },
                          "cloudStorageFileSet": {
                            "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string",
                                "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                              }
                            },
                            "description": "Set of files containing newline-delimited lists of dictionary phrases."
                          }
                        },
                        "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                      }
                    },
                    "description": "StoredInfoType configuration."
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "id": "GooglePrivacyDlpV2Error",
                      "type": "object",
                      "properties": {
                        "details": {
                          "id": "GoogleRpcStatus",
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The status code, which should be an enum value of google.rpc.Code."
                            },
                            "details": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "any",
                                  "description": "Properties of the object. Contains field @type with type URL."
                                }
                              },
                              "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                            },
                            "message": {
                              "type": "string",
                              "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                            }
                          },
                          "description": "Detailed error codes and messages."
                        },
                        "timestamps": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "google-datetime"
                          },
                          "description": "The times the error occurred."
                        }
                      },
                      "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
                    },
                    "description": "Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Create timestamp of the version. Read-only, determined by the system when the version is created."
                  }
                },
                "description": "Version of a StoredInfoType, including the configuration used to build it, create timestamp, and current state."
              },
              "description": "Pending versions of the stored info type. Empty if no versions are pending."
            }
          },
          "description": "StoredInfoType resource message that contains information about the current version and any pending updates."
        }
      ]
  organizations.locations.storedInfoTypes.list:
    description: |-
      Lists stored infoTypes. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.locations.storedInfoTypes/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2ListStoredInfoTypesResponse",
          "type": "object",
          "properties": {
            "nextPageToken": {
              "type": "string",
              "description": "If the next page is available then the next page token to be used in following ListStoredInfoTypes request."
            },
            "storedInfoTypes": {
              "type": "array",
              "items": {
                "id": "GooglePrivacyDlpV2StoredInfoType",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Resource name."
                  },
                  "currentVersion": {
                    "id": "GooglePrivacyDlpV2StoredInfoTypeVersion",
                    "type": "object",
                    "properties": {
                      "state": {
                        "enum": [
                          "STORED_INFO_TYPE_STATE_UNSPECIFIED",
                          "PENDING",
                          "READY",
                          "FAILED",
                          "INVALID"
                        ],
                        "type": "string",
                        "description": "Stored info type version state. Read-only, updated by the system during dictionary creation.",
                        "enumDescriptions": [
                          "Unused",
                          "StoredInfoType version is being created.",
                          "StoredInfoType version is ready for use.",
                          "StoredInfoType creation failed. All relevant error messages are returned in the `StoredInfoTypeVersion` message.",
                          "StoredInfoType is no longer valid because artifacts stored in user-controlled storage were modified. To fix an invalid StoredInfoType, use the `UpdateStoredInfoType` method to create a new version."
                        ]
                      },
                      "stats": {
                        "id": "GooglePrivacyDlpV2StoredInfoTypeStats",
                        "type": "object",
                        "properties": {
                          "largeCustomDictionary": {
                            "id": "GooglePrivacyDlpV2LargeCustomDictionaryStats",
                            "type": "object",
                            "properties": {
                              "approxNumPhrases": {
                                "type": "string",
                                "format": "int64",
                                "description": "Approximate number of distinct phrases in the dictionary."
                              }
                            },
                            "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                          }
                        },
                        "description": "Statistics about this storedInfoType version."
                      },
                      "config": {
                        "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
                        "type": "object",
                        "properties": {
                          "regex": {
                            "id": "GooglePrivacyDlpV2Regex",
                            "type": "object",
                            "properties": {
                              "pattern": {
                                "type": "string",
                                "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                              },
                              "groupIndexes": {
                                "type": "array",
                                "items": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                              }
                            },
                            "description": "Store regular expression-based StoredInfoType."
                          },
                          "dictionary": {
                            "id": "GooglePrivacyDlpV2Dictionary",
                            "type": "object",
                            "properties": {
                              "wordList": {
                                "id": "GooglePrivacyDlpV2WordList",
                                "type": "object",
                                "properties": {
                                  "words": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                  }
                                },
                                "description": "List of words or phrases to search for."
                              },
                              "cloudStoragePath": {
                                "id": "GooglePrivacyDlpV2CloudStoragePath",
                                "type": "object",
                                "properties": {
                                  "path": {
                                    "type": "string",
                                    "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                  }
                                },
                                "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                              }
                            },
                            "description": "Store dictionary-based CustomInfoType."
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the StoredInfoType (max 256 characters)."
                          },
                          "displayName": {
                            "type": "string",
                            "description": "Display name of the StoredInfoType (max 256 characters)."
                          },
                          "largeCustomDictionary": {
                            "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                            "type": "object",
                            "properties": {
                              "outputPath": {
                                "id": "GooglePrivacyDlpV2CloudStoragePath",
                                "type": "object",
                                "properties": {
                                  "path": {
                                    "type": "string",
                                    "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                  }
                                },
                                "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                              },
                              "bigQueryField": {
                                "id": "GooglePrivacyDlpV2BigQueryField",
                                "type": "object",
                                "properties": {
                                  "field": {
                                    "id": "GooglePrivacyDlpV2FieldId",
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name describing the field."
                                      }
                                    },
                                    "description": "General identifier of a data field in a storage service."
                                  },
                                  "table": {
                                    "id": "GooglePrivacyDlpV2BigQueryTable",
                                    "type": "object",
                                    "properties": {
                                      "tableId": {
                                        "type": "string",
                                        "description": "Name of the table."
                                      },
                                      "datasetId": {
                                        "type": "string",
                                        "description": "Dataset ID of the table."
                                      },
                                      "projectId": {
                                        "type": "string",
                                        "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                      }
                                    },
                                    "description": "Source table of the field."
                                  }
                                },
                                "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                              },
                              "cloudStorageFileSet": {
                                "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                                  }
                                },
                                "description": "Set of files containing newline-delimited lists of dictionary phrases."
                              }
                            },
                            "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                          }
                        },
                        "description": "StoredInfoType configuration."
                      },
                      "errors": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2Error",
                          "type": "object",
                          "properties": {
                            "details": {
                              "id": "GoogleRpcStatus",
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The status code, which should be an enum value of google.rpc.Code."
                                },
                                "details": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "any",
                                      "description": "Properties of the object. Contains field @type with type URL."
                                    }
                                  },
                                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                                },
                                "message": {
                                  "type": "string",
                                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                                }
                              },
                              "description": "Detailed error codes and messages."
                            },
                            "timestamps": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "format": "google-datetime"
                              },
                              "description": "The times the error occurred."
                            }
                          },
                          "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
                        },
                        "description": "Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error."
                      },
                      "createTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "Create timestamp of the version. Read-only, determined by the system when the version is created."
                      }
                    },
                    "description": "Current version of the stored info type."
                  },
                  "pendingVersions": {
                    "type": "array",
                    "items": {
                      "id": "GooglePrivacyDlpV2StoredInfoTypeVersion",
                      "type": "object",
                      "properties": {
                        "state": {
                          "enum": [
                            "STORED_INFO_TYPE_STATE_UNSPECIFIED",
                            "PENDING",
                            "READY",
                            "FAILED",
                            "INVALID"
                          ],
                          "type": "string",
                          "description": "Stored info type version state. Read-only, updated by the system during dictionary creation.",
                          "enumDescriptions": [
                            "Unused",
                            "StoredInfoType version is being created.",
                            "StoredInfoType version is ready for use.",
                            "StoredInfoType creation failed. All relevant error messages are returned in the `StoredInfoTypeVersion` message.",
                            "StoredInfoType is no longer valid because artifacts stored in user-controlled storage were modified. To fix an invalid StoredInfoType, use the `UpdateStoredInfoType` method to create a new version."
                          ]
                        },
                        "stats": {
                          "id": "GooglePrivacyDlpV2StoredInfoTypeStats",
                          "type": "object",
                          "properties": {
                            "largeCustomDictionary": {
                              "id": "GooglePrivacyDlpV2LargeCustomDictionaryStats",
                              "type": "object",
                              "properties": {
                                "approxNumPhrases": {
                                  "type": "string",
                                  "format": "int64",
                                  "description": "Approximate number of distinct phrases in the dictionary."
                                }
                              },
                              "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                            }
                          },
                          "description": "Statistics about this storedInfoType version."
                        },
                        "config": {
                          "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
                          "type": "object",
                          "properties": {
                            "regex": {
                              "id": "GooglePrivacyDlpV2Regex",
                              "type": "object",
                              "properties": {
                                "pattern": {
                                  "type": "string",
                                  "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                },
                                "groupIndexes": {
                                  "type": "array",
                                  "items": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                }
                              },
                              "description": "Store regular expression-based StoredInfoType."
                            },
                            "dictionary": {
                              "id": "GooglePrivacyDlpV2Dictionary",
                              "type": "object",
                              "properties": {
                                "wordList": {
                                  "id": "GooglePrivacyDlpV2WordList",
                                  "type": "object",
                                  "properties": {
                                    "words": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                    }
                                  },
                                  "description": "List of words or phrases to search for."
                                },
                                "cloudStoragePath": {
                                  "id": "GooglePrivacyDlpV2CloudStoragePath",
                                  "type": "object",
                                  "properties": {
                                    "path": {
                                      "type": "string",
                                      "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                    }
                                  },
                                  "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                                }
                              },
                              "description": "Store dictionary-based CustomInfoType."
                            },
                            "description": {
                              "type": "string",
                              "description": "Description of the StoredInfoType (max 256 characters)."
                            },
                            "displayName": {
                              "type": "string",
                              "description": "Display name of the StoredInfoType (max 256 characters)."
                            },
                            "largeCustomDictionary": {
                              "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                              "type": "object",
                              "properties": {
                                "outputPath": {
                                  "id": "GooglePrivacyDlpV2CloudStoragePath",
                                  "type": "object",
                                  "properties": {
                                    "path": {
                                      "type": "string",
                                      "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                    }
                                  },
                                  "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                                },
                                "bigQueryField": {
                                  "id": "GooglePrivacyDlpV2BigQueryField",
                                  "type": "object",
                                  "properties": {
                                    "field": {
                                      "id": "GooglePrivacyDlpV2FieldId",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Name describing the field."
                                        }
                                      },
                                      "description": "General identifier of a data field in a storage service."
                                    },
                                    "table": {
                                      "id": "GooglePrivacyDlpV2BigQueryTable",
                                      "type": "object",
                                      "properties": {
                                        "tableId": {
                                          "type": "string",
                                          "description": "Name of the table."
                                        },
                                        "datasetId": {
                                          "type": "string",
                                          "description": "Dataset ID of the table."
                                        },
                                        "projectId": {
                                          "type": "string",
                                          "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                        }
                                      },
                                      "description": "Source table of the field."
                                    }
                                  },
                                  "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                                },
                                "cloudStorageFileSet": {
                                  "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                                  "type": "object",
                                  "properties": {
                                    "url": {
                                      "type": "string",
                                      "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                                    }
                                  },
                                  "description": "Set of files containing newline-delimited lists of dictionary phrases."
                                }
                              },
                              "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                            }
                          },
                          "description": "StoredInfoType configuration."
                        },
                        "errors": {
                          "type": "array",
                          "items": {
                            "id": "GooglePrivacyDlpV2Error",
                            "type": "object",
                            "properties": {
                              "details": {
                                "id": "GoogleRpcStatus",
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The status code, which should be an enum value of google.rpc.Code."
                                  },
                                  "details": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "any",
                                        "description": "Properties of the object. Contains field @type with type URL."
                                      }
                                    },
                                    "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                                  },
                                  "message": {
                                    "type": "string",
                                    "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                                  }
                                },
                                "description": "Detailed error codes and messages."
                              },
                              "timestamps": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "format": "google-datetime"
                                },
                                "description": "The times the error occurred."
                              }
                            },
                            "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
                          },
                          "description": "Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error."
                        },
                        "createTime": {
                          "type": "string",
                          "format": "google-datetime",
                          "description": "Create timestamp of the version. Read-only, determined by the system when the version is created."
                        }
                      },
                      "description": "Version of a StoredInfoType, including the configuration used to build it, create timestamp, and current state."
                    },
                    "description": "Pending versions of the stored info type. Empty if no versions are pending."
                  }
                },
                "description": "StoredInfoType resource message that contains information about the current version and any pending updates."
              },
              "description": "List of storedInfoTypes, up to page_size in ListStoredInfoTypesRequest."
            }
          },
          "description": "Response message for ListStoredInfoTypes."
        }
      ]
  organizations.locations.storedInfoTypes.patch:
    description: |-
      Updates the stored infoType by creating a new version. The existing version will continue to be used until the new version is ready. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.locations.storedInfoTypes/patch
    example:
      inputs: [
        {
          "id": "GooglePrivacyDlpV2UpdateStoredInfoTypeRequest",
          "type": "object",
          "properties": {
            "config": {
              "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
              "type": "object",
              "properties": {
                "regex": {
                  "id": "GooglePrivacyDlpV2Regex",
                  "type": "object",
                  "properties": {
                    "pattern": {
                      "type": "string",
                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                    },
                    "groupIndexes": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                    }
                  },
                  "description": "Store regular expression-based StoredInfoType."
                },
                "dictionary": {
                  "id": "GooglePrivacyDlpV2Dictionary",
                  "type": "object",
                  "properties": {
                    "wordList": {
                      "id": "GooglePrivacyDlpV2WordList",
                      "type": "object",
                      "properties": {
                        "words": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                        }
                      },
                      "description": "List of words or phrases to search for."
                    },
                    "cloudStoragePath": {
                      "id": "GooglePrivacyDlpV2CloudStoragePath",
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                        }
                      },
                      "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                    }
                  },
                  "description": "Store dictionary-based CustomInfoType."
                },
                "description": {
                  "type": "string",
                  "description": "Description of the StoredInfoType (max 256 characters)."
                },
                "displayName": {
                  "type": "string",
                  "description": "Display name of the StoredInfoType (max 256 characters)."
                },
                "largeCustomDictionary": {
                  "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                  "type": "object",
                  "properties": {
                    "outputPath": {
                      "id": "GooglePrivacyDlpV2CloudStoragePath",
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                        }
                      },
                      "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                    },
                    "bigQueryField": {
                      "id": "GooglePrivacyDlpV2BigQueryField",
                      "type": "object",
                      "properties": {
                        "field": {
                          "id": "GooglePrivacyDlpV2FieldId",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name describing the field."
                            }
                          },
                          "description": "General identifier of a data field in a storage service."
                        },
                        "table": {
                          "id": "GooglePrivacyDlpV2BigQueryTable",
                          "type": "object",
                          "properties": {
                            "tableId": {
                              "type": "string",
                              "description": "Name of the table."
                            },
                            "datasetId": {
                              "type": "string",
                              "description": "Dataset ID of the table."
                            },
                            "projectId": {
                              "type": "string",
                              "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                            }
                          },
                          "description": "Source table of the field."
                        }
                      },
                      "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                    },
                    "cloudStorageFileSet": {
                      "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                        }
                      },
                      "description": "Set of files containing newline-delimited lists of dictionary phrases."
                    }
                  },
                  "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                }
              },
              "description": "Updated configuration for the storedInfoType. If not provided, a new version of the storedInfoType will be created with the existing configuration."
            },
            "updateMask": {
              "type": "string",
              "format": "google-fieldmask",
              "description": "Mask to control which fields get updated."
            }
          },
          "description": "Request message for UpdateStoredInfoType."
        }
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2StoredInfoType",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Resource name."
            },
            "currentVersion": {
              "id": "GooglePrivacyDlpV2StoredInfoTypeVersion",
              "type": "object",
              "properties": {
                "state": {
                  "enum": [
                    "STORED_INFO_TYPE_STATE_UNSPECIFIED",
                    "PENDING",
                    "READY",
                    "FAILED",
                    "INVALID"
                  ],
                  "type": "string",
                  "description": "Stored info type version state. Read-only, updated by the system during dictionary creation.",
                  "enumDescriptions": [
                    "Unused",
                    "StoredInfoType version is being created.",
                    "StoredInfoType version is ready for use.",
                    "StoredInfoType creation failed. All relevant error messages are returned in the `StoredInfoTypeVersion` message.",
                    "StoredInfoType is no longer valid because artifacts stored in user-controlled storage were modified. To fix an invalid StoredInfoType, use the `UpdateStoredInfoType` method to create a new version."
                  ]
                },
                "stats": {
                  "id": "GooglePrivacyDlpV2StoredInfoTypeStats",
                  "type": "object",
                  "properties": {
                    "largeCustomDictionary": {
                      "id": "GooglePrivacyDlpV2LargeCustomDictionaryStats",
                      "type": "object",
                      "properties": {
                        "approxNumPhrases": {
                          "type": "string",
                          "format": "int64",
                          "description": "Approximate number of distinct phrases in the dictionary."
                        }
                      },
                      "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                    }
                  },
                  "description": "Statistics about this storedInfoType version."
                },
                "config": {
                  "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
                  "type": "object",
                  "properties": {
                    "regex": {
                      "id": "GooglePrivacyDlpV2Regex",
                      "type": "object",
                      "properties": {
                        "pattern": {
                          "type": "string",
                          "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                        },
                        "groupIndexes": {
                          "type": "array",
                          "items": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                        }
                      },
                      "description": "Store regular expression-based StoredInfoType."
                    },
                    "dictionary": {
                      "id": "GooglePrivacyDlpV2Dictionary",
                      "type": "object",
                      "properties": {
                        "wordList": {
                          "id": "GooglePrivacyDlpV2WordList",
                          "type": "object",
                          "properties": {
                            "words": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                            }
                          },
                          "description": "List of words or phrases to search for."
                        },
                        "cloudStoragePath": {
                          "id": "GooglePrivacyDlpV2CloudStoragePath",
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                            }
                          },
                          "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                        }
                      },
                      "description": "Store dictionary-based CustomInfoType."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the StoredInfoType (max 256 characters)."
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the StoredInfoType (max 256 characters)."
                    },
                    "largeCustomDictionary": {
                      "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                      "type": "object",
                      "properties": {
                        "outputPath": {
                          "id": "GooglePrivacyDlpV2CloudStoragePath",
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                            }
                          },
                          "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                        },
                        "bigQueryField": {
                          "id": "GooglePrivacyDlpV2BigQueryField",
                          "type": "object",
                          "properties": {
                            "field": {
                              "id": "GooglePrivacyDlpV2FieldId",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name describing the field."
                                }
                              },
                              "description": "General identifier of a data field in a storage service."
                            },
                            "table": {
                              "id": "GooglePrivacyDlpV2BigQueryTable",
                              "type": "object",
                              "properties": {
                                "tableId": {
                                  "type": "string",
                                  "description": "Name of the table."
                                },
                                "datasetId": {
                                  "type": "string",
                                  "description": "Dataset ID of the table."
                                },
                                "projectId": {
                                  "type": "string",
                                  "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                }
                              },
                              "description": "Source table of the field."
                            }
                          },
                          "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                        },
                        "cloudStorageFileSet": {
                          "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                            }
                          },
                          "description": "Set of files containing newline-delimited lists of dictionary phrases."
                        }
                      },
                      "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                    }
                  },
                  "description": "StoredInfoType configuration."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2Error",
                    "type": "object",
                    "properties": {
                      "details": {
                        "id": "GoogleRpcStatus",
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The status code, which should be an enum value of google.rpc.Code."
                          },
                          "details": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "any",
                                "description": "Properties of the object. Contains field @type with type URL."
                              }
                            },
                            "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                          },
                          "message": {
                            "type": "string",
                            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                          }
                        },
                        "description": "Detailed error codes and messages."
                      },
                      "timestamps": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "google-datetime"
                        },
                        "description": "The times the error occurred."
                      }
                    },
                    "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
                  },
                  "description": "Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error."
                },
                "createTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "Create timestamp of the version. Read-only, determined by the system when the version is created."
                }
              },
              "description": "Current version of the stored info type."
            },
            "pendingVersions": {
              "type": "array",
              "items": {
                "id": "GooglePrivacyDlpV2StoredInfoTypeVersion",
                "type": "object",
                "properties": {
                  "state": {
                    "enum": [
                      "STORED_INFO_TYPE_STATE_UNSPECIFIED",
                      "PENDING",
                      "READY",
                      "FAILED",
                      "INVALID"
                    ],
                    "type": "string",
                    "description": "Stored info type version state. Read-only, updated by the system during dictionary creation.",
                    "enumDescriptions": [
                      "Unused",
                      "StoredInfoType version is being created.",
                      "StoredInfoType version is ready for use.",
                      "StoredInfoType creation failed. All relevant error messages are returned in the `StoredInfoTypeVersion` message.",
                      "StoredInfoType is no longer valid because artifacts stored in user-controlled storage were modified. To fix an invalid StoredInfoType, use the `UpdateStoredInfoType` method to create a new version."
                    ]
                  },
                  "stats": {
                    "id": "GooglePrivacyDlpV2StoredInfoTypeStats",
                    "type": "object",
                    "properties": {
                      "largeCustomDictionary": {
                        "id": "GooglePrivacyDlpV2LargeCustomDictionaryStats",
                        "type": "object",
                        "properties": {
                          "approxNumPhrases": {
                            "type": "string",
                            "format": "int64",
                            "description": "Approximate number of distinct phrases in the dictionary."
                          }
                        },
                        "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                      }
                    },
                    "description": "Statistics about this storedInfoType version."
                  },
                  "config": {
                    "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
                    "type": "object",
                    "properties": {
                      "regex": {
                        "id": "GooglePrivacyDlpV2Regex",
                        "type": "object",
                        "properties": {
                          "pattern": {
                            "type": "string",
                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                          },
                          "groupIndexes": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                          }
                        },
                        "description": "Store regular expression-based StoredInfoType."
                      },
                      "dictionary": {
                        "id": "GooglePrivacyDlpV2Dictionary",
                        "type": "object",
                        "properties": {
                          "wordList": {
                            "id": "GooglePrivacyDlpV2WordList",
                            "type": "object",
                            "properties": {
                              "words": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                              }
                            },
                            "description": "List of words or phrases to search for."
                          },
                          "cloudStoragePath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                          }
                        },
                        "description": "Store dictionary-based CustomInfoType."
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the StoredInfoType (max 256 characters)."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Display name of the StoredInfoType (max 256 characters)."
                      },
                      "largeCustomDictionary": {
                        "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                        "type": "object",
                        "properties": {
                          "outputPath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                          },
                          "bigQueryField": {
                            "id": "GooglePrivacyDlpV2BigQueryField",
                            "type": "object",
                            "properties": {
                              "field": {
                                "id": "GooglePrivacyDlpV2FieldId",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name describing the field."
                                  }
                                },
                                "description": "General identifier of a data field in a storage service."
                              },
                              "table": {
                                "id": "GooglePrivacyDlpV2BigQueryTable",
                                "type": "object",
                                "properties": {
                                  "tableId": {
                                    "type": "string",
                                    "description": "Name of the table."
                                  },
                                  "datasetId": {
                                    "type": "string",
                                    "description": "Dataset ID of the table."
                                  },
                                  "projectId": {
                                    "type": "string",
                                    "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                  }
                                },
                                "description": "Source table of the field."
                              }
                            },
                            "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                          },
                          "cloudStorageFileSet": {
                            "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string",
                                "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                              }
                            },
                            "description": "Set of files containing newline-delimited lists of dictionary phrases."
                          }
                        },
                        "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                      }
                    },
                    "description": "StoredInfoType configuration."
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "id": "GooglePrivacyDlpV2Error",
                      "type": "object",
                      "properties": {
                        "details": {
                          "id": "GoogleRpcStatus",
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The status code, which should be an enum value of google.rpc.Code."
                            },
                            "details": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "any",
                                  "description": "Properties of the object. Contains field @type with type URL."
                                }
                              },
                              "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                            },
                            "message": {
                              "type": "string",
                              "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                            }
                          },
                          "description": "Detailed error codes and messages."
                        },
                        "timestamps": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "google-datetime"
                          },
                          "description": "The times the error occurred."
                        }
                      },
                      "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
                    },
                    "description": "Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Create timestamp of the version. Read-only, determined by the system when the version is created."
                  }
                },
                "description": "Version of a StoredInfoType, including the configuration used to build it, create timestamp, and current state."
              },
              "description": "Pending versions of the stored info type. Empty if no versions are pending."
            }
          },
          "description": "StoredInfoType resource message that contains information about the current version and any pending updates."
        }
      ]
  organizations.storedInfoTypes.create:
    description: |-
      Creates a pre-built stored infoType to be used for inspection. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.storedInfoTypes/create
    example:
      inputs: [
        {
          "id": "GooglePrivacyDlpV2CreateStoredInfoTypeRequest",
          "type": "object",
          "properties": {
            "config": {
              "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
              "type": "object",
              "properties": {
                "regex": {
                  "id": "GooglePrivacyDlpV2Regex",
                  "type": "object",
                  "properties": {
                    "pattern": {
                      "type": "string",
                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                    },
                    "groupIndexes": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                    }
                  },
                  "description": "Store regular expression-based StoredInfoType."
                },
                "dictionary": {
                  "id": "GooglePrivacyDlpV2Dictionary",
                  "type": "object",
                  "properties": {
                    "wordList": {
                      "id": "GooglePrivacyDlpV2WordList",
                      "type": "object",
                      "properties": {
                        "words": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                        }
                      },
                      "description": "List of words or phrases to search for."
                    },
                    "cloudStoragePath": {
                      "id": "GooglePrivacyDlpV2CloudStoragePath",
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                        }
                      },
                      "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                    }
                  },
                  "description": "Store dictionary-based CustomInfoType."
                },
                "description": {
                  "type": "string",
                  "description": "Description of the StoredInfoType (max 256 characters)."
                },
                "displayName": {
                  "type": "string",
                  "description": "Display name of the StoredInfoType (max 256 characters)."
                },
                "largeCustomDictionary": {
                  "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                  "type": "object",
                  "properties": {
                    "outputPath": {
                      "id": "GooglePrivacyDlpV2CloudStoragePath",
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                        }
                      },
                      "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                    },
                    "bigQueryField": {
                      "id": "GooglePrivacyDlpV2BigQueryField",
                      "type": "object",
                      "properties": {
                        "field": {
                          "id": "GooglePrivacyDlpV2FieldId",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name describing the field."
                            }
                          },
                          "description": "General identifier of a data field in a storage service."
                        },
                        "table": {
                          "id": "GooglePrivacyDlpV2BigQueryTable",
                          "type": "object",
                          "properties": {
                            "tableId": {
                              "type": "string",
                              "description": "Name of the table."
                            },
                            "datasetId": {
                              "type": "string",
                              "description": "Dataset ID of the table."
                            },
                            "projectId": {
                              "type": "string",
                              "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                            }
                          },
                          "description": "Source table of the field."
                        }
                      },
                      "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                    },
                    "cloudStorageFileSet": {
                      "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                        }
                      },
                      "description": "Set of files containing newline-delimited lists of dictionary phrases."
                    }
                  },
                  "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                }
              },
              "description": "Required. Configuration of the storedInfoType to create."
            },
            "locationId": {
              "type": "string",
              "description": "Deprecated. This field has no effect."
            },
            "storedInfoTypeId": {
              "type": "string",
              "description": "The storedInfoType ID can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one."
            }
          },
          "description": "Request message for CreateStoredInfoType."
        }
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2StoredInfoType",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Resource name."
            },
            "currentVersion": {
              "id": "GooglePrivacyDlpV2StoredInfoTypeVersion",
              "type": "object",
              "properties": {
                "state": {
                  "enum": [
                    "STORED_INFO_TYPE_STATE_UNSPECIFIED",
                    "PENDING",
                    "READY",
                    "FAILED",
                    "INVALID"
                  ],
                  "type": "string",
                  "description": "Stored info type version state. Read-only, updated by the system during dictionary creation.",
                  "enumDescriptions": [
                    "Unused",
                    "StoredInfoType version is being created.",
                    "StoredInfoType version is ready for use.",
                    "StoredInfoType creation failed. All relevant error messages are returned in the `StoredInfoTypeVersion` message.",
                    "StoredInfoType is no longer valid because artifacts stored in user-controlled storage were modified. To fix an invalid StoredInfoType, use the `UpdateStoredInfoType` method to create a new version."
                  ]
                },
                "stats": {
                  "id": "GooglePrivacyDlpV2StoredInfoTypeStats",
                  "type": "object",
                  "properties": {
                    "largeCustomDictionary": {
                      "id": "GooglePrivacyDlpV2LargeCustomDictionaryStats",
                      "type": "object",
                      "properties": {
                        "approxNumPhrases": {
                          "type": "string",
                          "format": "int64",
                          "description": "Approximate number of distinct phrases in the dictionary."
                        }
                      },
                      "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                    }
                  },
                  "description": "Statistics about this storedInfoType version."
                },
                "config": {
                  "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
                  "type": "object",
                  "properties": {
                    "regex": {
                      "id": "GooglePrivacyDlpV2Regex",
                      "type": "object",
                      "properties": {
                        "pattern": {
                          "type": "string",
                          "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                        },
                        "groupIndexes": {
                          "type": "array",
                          "items": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                        }
                      },
                      "description": "Store regular expression-based StoredInfoType."
                    },
                    "dictionary": {
                      "id": "GooglePrivacyDlpV2Dictionary",
                      "type": "object",
                      "properties": {
                        "wordList": {
                          "id": "GooglePrivacyDlpV2WordList",
                          "type": "object",
                          "properties": {
                            "words": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                            }
                          },
                          "description": "List of words or phrases to search for."
                        },
                        "cloudStoragePath": {
                          "id": "GooglePrivacyDlpV2CloudStoragePath",
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                            }
                          },
                          "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                        }
                      },
                      "description": "Store dictionary-based CustomInfoType."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the StoredInfoType (max 256 characters)."
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the StoredInfoType (max 256 characters)."
                    },
                    "largeCustomDictionary": {
                      "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                      "type": "object",
                      "properties": {
                        "outputPath": {
                          "id": "GooglePrivacyDlpV2CloudStoragePath",
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                            }
                          },
                          "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                        },
                        "bigQueryField": {
                          "id": "GooglePrivacyDlpV2BigQueryField",
                          "type": "object",
                          "properties": {
                            "field": {
                              "id": "GooglePrivacyDlpV2FieldId",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name describing the field."
                                }
                              },
                              "description": "General identifier of a data field in a storage service."
                            },
                            "table": {
                              "id": "GooglePrivacyDlpV2BigQueryTable",
                              "type": "object",
                              "properties": {
                                "tableId": {
                                  "type": "string",
                                  "description": "Name of the table."
                                },
                                "datasetId": {
                                  "type": "string",
                                  "description": "Dataset ID of the table."
                                },
                                "projectId": {
                                  "type": "string",
                                  "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                }
                              },
                              "description": "Source table of the field."
                            }
                          },
                          "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                        },
                        "cloudStorageFileSet": {
                          "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                            }
                          },
                          "description": "Set of files containing newline-delimited lists of dictionary phrases."
                        }
                      },
                      "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                    }
                  },
                  "description": "StoredInfoType configuration."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2Error",
                    "type": "object",
                    "properties": {
                      "details": {
                        "id": "GoogleRpcStatus",
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The status code, which should be an enum value of google.rpc.Code."
                          },
                          "details": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "any",
                                "description": "Properties of the object. Contains field @type with type URL."
                              }
                            },
                            "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                          },
                          "message": {
                            "type": "string",
                            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                          }
                        },
                        "description": "Detailed error codes and messages."
                      },
                      "timestamps": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "google-datetime"
                        },
                        "description": "The times the error occurred."
                      }
                    },
                    "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
                  },
                  "description": "Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error."
                },
                "createTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "Create timestamp of the version. Read-only, determined by the system when the version is created."
                }
              },
              "description": "Current version of the stored info type."
            },
            "pendingVersions": {
              "type": "array",
              "items": {
                "id": "GooglePrivacyDlpV2StoredInfoTypeVersion",
                "type": "object",
                "properties": {
                  "state": {
                    "enum": [
                      "STORED_INFO_TYPE_STATE_UNSPECIFIED",
                      "PENDING",
                      "READY",
                      "FAILED",
                      "INVALID"
                    ],
                    "type": "string",
                    "description": "Stored info type version state. Read-only, updated by the system during dictionary creation.",
                    "enumDescriptions": [
                      "Unused",
                      "StoredInfoType version is being created.",
                      "StoredInfoType version is ready for use.",
                      "StoredInfoType creation failed. All relevant error messages are returned in the `StoredInfoTypeVersion` message.",
                      "StoredInfoType is no longer valid because artifacts stored in user-controlled storage were modified. To fix an invalid StoredInfoType, use the `UpdateStoredInfoType` method to create a new version."
                    ]
                  },
                  "stats": {
                    "id": "GooglePrivacyDlpV2StoredInfoTypeStats",
                    "type": "object",
                    "properties": {
                      "largeCustomDictionary": {
                        "id": "GooglePrivacyDlpV2LargeCustomDictionaryStats",
                        "type": "object",
                        "properties": {
                          "approxNumPhrases": {
                            "type": "string",
                            "format": "int64",
                            "description": "Approximate number of distinct phrases in the dictionary."
                          }
                        },
                        "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                      }
                    },
                    "description": "Statistics about this storedInfoType version."
                  },
                  "config": {
                    "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
                    "type": "object",
                    "properties": {
                      "regex": {
                        "id": "GooglePrivacyDlpV2Regex",
                        "type": "object",
                        "properties": {
                          "pattern": {
                            "type": "string",
                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                          },
                          "groupIndexes": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                          }
                        },
                        "description": "Store regular expression-based StoredInfoType."
                      },
                      "dictionary": {
                        "id": "GooglePrivacyDlpV2Dictionary",
                        "type": "object",
                        "properties": {
                          "wordList": {
                            "id": "GooglePrivacyDlpV2WordList",
                            "type": "object",
                            "properties": {
                              "words": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                              }
                            },
                            "description": "List of words or phrases to search for."
                          },
                          "cloudStoragePath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                          }
                        },
                        "description": "Store dictionary-based CustomInfoType."
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the StoredInfoType (max 256 characters)."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Display name of the StoredInfoType (max 256 characters)."
                      },
                      "largeCustomDictionary": {
                        "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                        "type": "object",
                        "properties": {
                          "outputPath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                          },
                          "bigQueryField": {
                            "id": "GooglePrivacyDlpV2BigQueryField",
                            "type": "object",
                            "properties": {
                              "field": {
                                "id": "GooglePrivacyDlpV2FieldId",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name describing the field."
                                  }
                                },
                                "description": "General identifier of a data field in a storage service."
                              },
                              "table": {
                                "id": "GooglePrivacyDlpV2BigQueryTable",
                                "type": "object",
                                "properties": {
                                  "tableId": {
                                    "type": "string",
                                    "description": "Name of the table."
                                  },
                                  "datasetId": {
                                    "type": "string",
                                    "description": "Dataset ID of the table."
                                  },
                                  "projectId": {
                                    "type": "string",
                                    "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                  }
                                },
                                "description": "Source table of the field."
                              }
                            },
                            "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                          },
                          "cloudStorageFileSet": {
                            "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string",
                                "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                              }
                            },
                            "description": "Set of files containing newline-delimited lists of dictionary phrases."
                          }
                        },
                        "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                      }
                    },
                    "description": "StoredInfoType configuration."
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "id": "GooglePrivacyDlpV2Error",
                      "type": "object",
                      "properties": {
                        "details": {
                          "id": "GoogleRpcStatus",
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The status code, which should be an enum value of google.rpc.Code."
                            },
                            "details": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "any",
                                  "description": "Properties of the object. Contains field @type with type URL."
                                }
                              },
                              "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                            },
                            "message": {
                              "type": "string",
                              "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                            }
                          },
                          "description": "Detailed error codes and messages."
                        },
                        "timestamps": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "google-datetime"
                          },
                          "description": "The times the error occurred."
                        }
                      },
                      "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
                    },
                    "description": "Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Create timestamp of the version. Read-only, determined by the system when the version is created."
                  }
                },
                "description": "Version of a StoredInfoType, including the configuration used to build it, create timestamp, and current state."
              },
              "description": "Pending versions of the stored info type. Empty if no versions are pending."
            }
          },
          "description": "StoredInfoType resource message that contains information about the current version and any pending updates."
        }
      ]
  organizations.storedInfoTypes.delete:
    description: |-
      Deletes a stored infoType. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.storedInfoTypes/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  organizations.storedInfoTypes.get:
    description: |-
      Gets a stored infoType. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.storedInfoTypes/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2StoredInfoType",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Resource name."
            },
            "currentVersion": {
              "id": "GooglePrivacyDlpV2StoredInfoTypeVersion",
              "type": "object",
              "properties": {
                "state": {
                  "enum": [
                    "STORED_INFO_TYPE_STATE_UNSPECIFIED",
                    "PENDING",
                    "READY",
                    "FAILED",
                    "INVALID"
                  ],
                  "type": "string",
                  "description": "Stored info type version state. Read-only, updated by the system during dictionary creation.",
                  "enumDescriptions": [
                    "Unused",
                    "StoredInfoType version is being created.",
                    "StoredInfoType version is ready for use.",
                    "StoredInfoType creation failed. All relevant error messages are returned in the `StoredInfoTypeVersion` message.",
                    "StoredInfoType is no longer valid because artifacts stored in user-controlled storage were modified. To fix an invalid StoredInfoType, use the `UpdateStoredInfoType` method to create a new version."
                  ]
                },
                "stats": {
                  "id": "GooglePrivacyDlpV2StoredInfoTypeStats",
                  "type": "object",
                  "properties": {
                    "largeCustomDictionary": {
                      "id": "GooglePrivacyDlpV2LargeCustomDictionaryStats",
                      "type": "object",
                      "properties": {
                        "approxNumPhrases": {
                          "type": "string",
                          "format": "int64",
                          "description": "Approximate number of distinct phrases in the dictionary."
                        }
                      },
                      "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                    }
                  },
                  "description": "Statistics about this storedInfoType version."
                },
                "config": {
                  "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
                  "type": "object",
                  "properties": {
                    "regex": {
                      "id": "GooglePrivacyDlpV2Regex",
                      "type": "object",
                      "properties": {
                        "pattern": {
                          "type": "string",
                          "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                        },
                        "groupIndexes": {
                          "type": "array",
                          "items": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                        }
                      },
                      "description": "Store regular expression-based StoredInfoType."
                    },
                    "dictionary": {
                      "id": "GooglePrivacyDlpV2Dictionary",
                      "type": "object",
                      "properties": {
                        "wordList": {
                          "id": "GooglePrivacyDlpV2WordList",
                          "type": "object",
                          "properties": {
                            "words": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                            }
                          },
                          "description": "List of words or phrases to search for."
                        },
                        "cloudStoragePath": {
                          "id": "GooglePrivacyDlpV2CloudStoragePath",
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                            }
                          },
                          "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                        }
                      },
                      "description": "Store dictionary-based CustomInfoType."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the StoredInfoType (max 256 characters)."
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the StoredInfoType (max 256 characters)."
                    },
                    "largeCustomDictionary": {
                      "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                      "type": "object",
                      "properties": {
                        "outputPath": {
                          "id": "GooglePrivacyDlpV2CloudStoragePath",
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                            }
                          },
                          "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                        },
                        "bigQueryField": {
                          "id": "GooglePrivacyDlpV2BigQueryField",
                          "type": "object",
                          "properties": {
                            "field": {
                              "id": "GooglePrivacyDlpV2FieldId",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name describing the field."
                                }
                              },
                              "description": "General identifier of a data field in a storage service."
                            },
                            "table": {
                              "id": "GooglePrivacyDlpV2BigQueryTable",
                              "type": "object",
                              "properties": {
                                "tableId": {
                                  "type": "string",
                                  "description": "Name of the table."
                                },
                                "datasetId": {
                                  "type": "string",
                                  "description": "Dataset ID of the table."
                                },
                                "projectId": {
                                  "type": "string",
                                  "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                }
                              },
                              "description": "Source table of the field."
                            }
                          },
                          "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                        },
                        "cloudStorageFileSet": {
                          "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                            }
                          },
                          "description": "Set of files containing newline-delimited lists of dictionary phrases."
                        }
                      },
                      "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                    }
                  },
                  "description": "StoredInfoType configuration."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2Error",
                    "type": "object",
                    "properties": {
                      "details": {
                        "id": "GoogleRpcStatus",
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The status code, which should be an enum value of google.rpc.Code."
                          },
                          "details": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "any",
                                "description": "Properties of the object. Contains field @type with type URL."
                              }
                            },
                            "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                          },
                          "message": {
                            "type": "string",
                            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                          }
                        },
                        "description": "Detailed error codes and messages."
                      },
                      "timestamps": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "google-datetime"
                        },
                        "description": "The times the error occurred."
                      }
                    },
                    "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
                  },
                  "description": "Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error."
                },
                "createTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "Create timestamp of the version. Read-only, determined by the system when the version is created."
                }
              },
              "description": "Current version of the stored info type."
            },
            "pendingVersions": {
              "type": "array",
              "items": {
                "id": "GooglePrivacyDlpV2StoredInfoTypeVersion",
                "type": "object",
                "properties": {
                  "state": {
                    "enum": [
                      "STORED_INFO_TYPE_STATE_UNSPECIFIED",
                      "PENDING",
                      "READY",
                      "FAILED",
                      "INVALID"
                    ],
                    "type": "string",
                    "description": "Stored info type version state. Read-only, updated by the system during dictionary creation.",
                    "enumDescriptions": [
                      "Unused",
                      "StoredInfoType version is being created.",
                      "StoredInfoType version is ready for use.",
                      "StoredInfoType creation failed. All relevant error messages are returned in the `StoredInfoTypeVersion` message.",
                      "StoredInfoType is no longer valid because artifacts stored in user-controlled storage were modified. To fix an invalid StoredInfoType, use the `UpdateStoredInfoType` method to create a new version."
                    ]
                  },
                  "stats": {
                    "id": "GooglePrivacyDlpV2StoredInfoTypeStats",
                    "type": "object",
                    "properties": {
                      "largeCustomDictionary": {
                        "id": "GooglePrivacyDlpV2LargeCustomDictionaryStats",
                        "type": "object",
                        "properties": {
                          "approxNumPhrases": {
                            "type": "string",
                            "format": "int64",
                            "description": "Approximate number of distinct phrases in the dictionary."
                          }
                        },
                        "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                      }
                    },
                    "description": "Statistics about this storedInfoType version."
                  },
                  "config": {
                    "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
                    "type": "object",
                    "properties": {
                      "regex": {
                        "id": "GooglePrivacyDlpV2Regex",
                        "type": "object",
                        "properties": {
                          "pattern": {
                            "type": "string",
                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                          },
                          "groupIndexes": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                          }
                        },
                        "description": "Store regular expression-based StoredInfoType."
                      },
                      "dictionary": {
                        "id": "GooglePrivacyDlpV2Dictionary",
                        "type": "object",
                        "properties": {
                          "wordList": {
                            "id": "GooglePrivacyDlpV2WordList",
                            "type": "object",
                            "properties": {
                              "words": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                              }
                            },
                            "description": "List of words or phrases to search for."
                          },
                          "cloudStoragePath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                          }
                        },
                        "description": "Store dictionary-based CustomInfoType."
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the StoredInfoType (max 256 characters)."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Display name of the StoredInfoType (max 256 characters)."
                      },
                      "largeCustomDictionary": {
                        "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                        "type": "object",
                        "properties": {
                          "outputPath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                          },
                          "bigQueryField": {
                            "id": "GooglePrivacyDlpV2BigQueryField",
                            "type": "object",
                            "properties": {
                              "field": {
                                "id": "GooglePrivacyDlpV2FieldId",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name describing the field."
                                  }
                                },
                                "description": "General identifier of a data field in a storage service."
                              },
                              "table": {
                                "id": "GooglePrivacyDlpV2BigQueryTable",
                                "type": "object",
                                "properties": {
                                  "tableId": {
                                    "type": "string",
                                    "description": "Name of the table."
                                  },
                                  "datasetId": {
                                    "type": "string",
                                    "description": "Dataset ID of the table."
                                  },
                                  "projectId": {
                                    "type": "string",
                                    "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                  }
                                },
                                "description": "Source table of the field."
                              }
                            },
                            "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                          },
                          "cloudStorageFileSet": {
                            "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string",
                                "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                              }
                            },
                            "description": "Set of files containing newline-delimited lists of dictionary phrases."
                          }
                        },
                        "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                      }
                    },
                    "description": "StoredInfoType configuration."
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "id": "GooglePrivacyDlpV2Error",
                      "type": "object",
                      "properties": {
                        "details": {
                          "id": "GoogleRpcStatus",
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The status code, which should be an enum value of google.rpc.Code."
                            },
                            "details": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "any",
                                  "description": "Properties of the object. Contains field @type with type URL."
                                }
                              },
                              "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                            },
                            "message": {
                              "type": "string",
                              "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                            }
                          },
                          "description": "Detailed error codes and messages."
                        },
                        "timestamps": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "google-datetime"
                          },
                          "description": "The times the error occurred."
                        }
                      },
                      "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
                    },
                    "description": "Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Create timestamp of the version. Read-only, determined by the system when the version is created."
                  }
                },
                "description": "Version of a StoredInfoType, including the configuration used to build it, create timestamp, and current state."
              },
              "description": "Pending versions of the stored info type. Empty if no versions are pending."
            }
          },
          "description": "StoredInfoType resource message that contains information about the current version and any pending updates."
        }
      ]
  organizations.storedInfoTypes.list:
    description: |-
      Lists stored infoTypes. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.storedInfoTypes/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2ListStoredInfoTypesResponse",
          "type": "object",
          "properties": {
            "nextPageToken": {
              "type": "string",
              "description": "If the next page is available then the next page token to be used in following ListStoredInfoTypes request."
            },
            "storedInfoTypes": {
              "type": "array",
              "items": {
                "id": "GooglePrivacyDlpV2StoredInfoType",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Resource name."
                  },
                  "currentVersion": {
                    "id": "GooglePrivacyDlpV2StoredInfoTypeVersion",
                    "type": "object",
                    "properties": {
                      "state": {
                        "enum": [
                          "STORED_INFO_TYPE_STATE_UNSPECIFIED",
                          "PENDING",
                          "READY",
                          "FAILED",
                          "INVALID"
                        ],
                        "type": "string",
                        "description": "Stored info type version state. Read-only, updated by the system during dictionary creation.",
                        "enumDescriptions": [
                          "Unused",
                          "StoredInfoType version is being created.",
                          "StoredInfoType version is ready for use.",
                          "StoredInfoType creation failed. All relevant error messages are returned in the `StoredInfoTypeVersion` message.",
                          "StoredInfoType is no longer valid because artifacts stored in user-controlled storage were modified. To fix an invalid StoredInfoType, use the `UpdateStoredInfoType` method to create a new version."
                        ]
                      },
                      "stats": {
                        "id": "GooglePrivacyDlpV2StoredInfoTypeStats",
                        "type": "object",
                        "properties": {
                          "largeCustomDictionary": {
                            "id": "GooglePrivacyDlpV2LargeCustomDictionaryStats",
                            "type": "object",
                            "properties": {
                              "approxNumPhrases": {
                                "type": "string",
                                "format": "int64",
                                "description": "Approximate number of distinct phrases in the dictionary."
                              }
                            },
                            "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                          }
                        },
                        "description": "Statistics about this storedInfoType version."
                      },
                      "config": {
                        "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
                        "type": "object",
                        "properties": {
                          "regex": {
                            "id": "GooglePrivacyDlpV2Regex",
                            "type": "object",
                            "properties": {
                              "pattern": {
                                "type": "string",
                                "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                              },
                              "groupIndexes": {
                                "type": "array",
                                "items": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                              }
                            },
                            "description": "Store regular expression-based StoredInfoType."
                          },
                          "dictionary": {
                            "id": "GooglePrivacyDlpV2Dictionary",
                            "type": "object",
                            "properties": {
                              "wordList": {
                                "id": "GooglePrivacyDlpV2WordList",
                                "type": "object",
                                "properties": {
                                  "words": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                  }
                                },
                                "description": "List of words or phrases to search for."
                              },
                              "cloudStoragePath": {
                                "id": "GooglePrivacyDlpV2CloudStoragePath",
                                "type": "object",
                                "properties": {
                                  "path": {
                                    "type": "string",
                                    "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                  }
                                },
                                "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                              }
                            },
                            "description": "Store dictionary-based CustomInfoType."
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the StoredInfoType (max 256 characters)."
                          },
                          "displayName": {
                            "type": "string",
                            "description": "Display name of the StoredInfoType (max 256 characters)."
                          },
                          "largeCustomDictionary": {
                            "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                            "type": "object",
                            "properties": {
                              "outputPath": {
                                "id": "GooglePrivacyDlpV2CloudStoragePath",
                                "type": "object",
                                "properties": {
                                  "path": {
                                    "type": "string",
                                    "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                  }
                                },
                                "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                              },
                              "bigQueryField": {
                                "id": "GooglePrivacyDlpV2BigQueryField",
                                "type": "object",
                                "properties": {
                                  "field": {
                                    "id": "GooglePrivacyDlpV2FieldId",
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name describing the field."
                                      }
                                    },
                                    "description": "General identifier of a data field in a storage service."
                                  },
                                  "table": {
                                    "id": "GooglePrivacyDlpV2BigQueryTable",
                                    "type": "object",
                                    "properties": {
                                      "tableId": {
                                        "type": "string",
                                        "description": "Name of the table."
                                      },
                                      "datasetId": {
                                        "type": "string",
                                        "description": "Dataset ID of the table."
                                      },
                                      "projectId": {
                                        "type": "string",
                                        "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                      }
                                    },
                                    "description": "Source table of the field."
                                  }
                                },
                                "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                              },
                              "cloudStorageFileSet": {
                                "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                                  }
                                },
                                "description": "Set of files containing newline-delimited lists of dictionary phrases."
                              }
                            },
                            "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                          }
                        },
                        "description": "StoredInfoType configuration."
                      },
                      "errors": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2Error",
                          "type": "object",
                          "properties": {
                            "details": {
                              "id": "GoogleRpcStatus",
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The status code, which should be an enum value of google.rpc.Code."
                                },
                                "details": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "any",
                                      "description": "Properties of the object. Contains field @type with type URL."
                                    }
                                  },
                                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                                },
                                "message": {
                                  "type": "string",
                                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                                }
                              },
                              "description": "Detailed error codes and messages."
                            },
                            "timestamps": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "format": "google-datetime"
                              },
                              "description": "The times the error occurred."
                            }
                          },
                          "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
                        },
                        "description": "Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error."
                      },
                      "createTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "Create timestamp of the version. Read-only, determined by the system when the version is created."
                      }
                    },
                    "description": "Current version of the stored info type."
                  },
                  "pendingVersions": {
                    "type": "array",
                    "items": {
                      "id": "GooglePrivacyDlpV2StoredInfoTypeVersion",
                      "type": "object",
                      "properties": {
                        "state": {
                          "enum": [
                            "STORED_INFO_TYPE_STATE_UNSPECIFIED",
                            "PENDING",
                            "READY",
                            "FAILED",
                            "INVALID"
                          ],
                          "type": "string",
                          "description": "Stored info type version state. Read-only, updated by the system during dictionary creation.",
                          "enumDescriptions": [
                            "Unused",
                            "StoredInfoType version is being created.",
                            "StoredInfoType version is ready for use.",
                            "StoredInfoType creation failed. All relevant error messages are returned in the `StoredInfoTypeVersion` message.",
                            "StoredInfoType is no longer valid because artifacts stored in user-controlled storage were modified. To fix an invalid StoredInfoType, use the `UpdateStoredInfoType` method to create a new version."
                          ]
                        },
                        "stats": {
                          "id": "GooglePrivacyDlpV2StoredInfoTypeStats",
                          "type": "object",
                          "properties": {
                            "largeCustomDictionary": {
                              "id": "GooglePrivacyDlpV2LargeCustomDictionaryStats",
                              "type": "object",
                              "properties": {
                                "approxNumPhrases": {
                                  "type": "string",
                                  "format": "int64",
                                  "description": "Approximate number of distinct phrases in the dictionary."
                                }
                              },
                              "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                            }
                          },
                          "description": "Statistics about this storedInfoType version."
                        },
                        "config": {
                          "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
                          "type": "object",
                          "properties": {
                            "regex": {
                              "id": "GooglePrivacyDlpV2Regex",
                              "type": "object",
                              "properties": {
                                "pattern": {
                                  "type": "string",
                                  "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                },
                                "groupIndexes": {
                                  "type": "array",
                                  "items": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                }
                              },
                              "description": "Store regular expression-based StoredInfoType."
                            },
                            "dictionary": {
                              "id": "GooglePrivacyDlpV2Dictionary",
                              "type": "object",
                              "properties": {
                                "wordList": {
                                  "id": "GooglePrivacyDlpV2WordList",
                                  "type": "object",
                                  "properties": {
                                    "words": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                    }
                                  },
                                  "description": "List of words or phrases to search for."
                                },
                                "cloudStoragePath": {
                                  "id": "GooglePrivacyDlpV2CloudStoragePath",
                                  "type": "object",
                                  "properties": {
                                    "path": {
                                      "type": "string",
                                      "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                    }
                                  },
                                  "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                                }
                              },
                              "description": "Store dictionary-based CustomInfoType."
                            },
                            "description": {
                              "type": "string",
                              "description": "Description of the StoredInfoType (max 256 characters)."
                            },
                            "displayName": {
                              "type": "string",
                              "description": "Display name of the StoredInfoType (max 256 characters)."
                            },
                            "largeCustomDictionary": {
                              "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                              "type": "object",
                              "properties": {
                                "outputPath": {
                                  "id": "GooglePrivacyDlpV2CloudStoragePath",
                                  "type": "object",
                                  "properties": {
                                    "path": {
                                      "type": "string",
                                      "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                    }
                                  },
                                  "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                                },
                                "bigQueryField": {
                                  "id": "GooglePrivacyDlpV2BigQueryField",
                                  "type": "object",
                                  "properties": {
                                    "field": {
                                      "id": "GooglePrivacyDlpV2FieldId",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Name describing the field."
                                        }
                                      },
                                      "description": "General identifier of a data field in a storage service."
                                    },
                                    "table": {
                                      "id": "GooglePrivacyDlpV2BigQueryTable",
                                      "type": "object",
                                      "properties": {
                                        "tableId": {
                                          "type": "string",
                                          "description": "Name of the table."
                                        },
                                        "datasetId": {
                                          "type": "string",
                                          "description": "Dataset ID of the table."
                                        },
                                        "projectId": {
                                          "type": "string",
                                          "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                        }
                                      },
                                      "description": "Source table of the field."
                                    }
                                  },
                                  "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                                },
                                "cloudStorageFileSet": {
                                  "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                                  "type": "object",
                                  "properties": {
                                    "url": {
                                      "type": "string",
                                      "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                                    }
                                  },
                                  "description": "Set of files containing newline-delimited lists of dictionary phrases."
                                }
                              },
                              "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                            }
                          },
                          "description": "StoredInfoType configuration."
                        },
                        "errors": {
                          "type": "array",
                          "items": {
                            "id": "GooglePrivacyDlpV2Error",
                            "type": "object",
                            "properties": {
                              "details": {
                                "id": "GoogleRpcStatus",
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The status code, which should be an enum value of google.rpc.Code."
                                  },
                                  "details": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "any",
                                        "description": "Properties of the object. Contains field @type with type URL."
                                      }
                                    },
                                    "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                                  },
                                  "message": {
                                    "type": "string",
                                    "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                                  }
                                },
                                "description": "Detailed error codes and messages."
                              },
                              "timestamps": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "format": "google-datetime"
                                },
                                "description": "The times the error occurred."
                              }
                            },
                            "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
                          },
                          "description": "Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error."
                        },
                        "createTime": {
                          "type": "string",
                          "format": "google-datetime",
                          "description": "Create timestamp of the version. Read-only, determined by the system when the version is created."
                        }
                      },
                      "description": "Version of a StoredInfoType, including the configuration used to build it, create timestamp, and current state."
                    },
                    "description": "Pending versions of the stored info type. Empty if no versions are pending."
                  }
                },
                "description": "StoredInfoType resource message that contains information about the current version and any pending updates."
              },
              "description": "List of storedInfoTypes, up to page_size in ListStoredInfoTypesRequest."
            }
          },
          "description": "Response message for ListStoredInfoTypes."
        }
      ]
  organizations.storedInfoTypes.patch:
    description: |-
      Updates the stored infoType by creating a new version. The existing version will continue to be used until the new version is ready. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/organizations.storedInfoTypes/patch
    example:
      inputs: [
        {
          "id": "GooglePrivacyDlpV2UpdateStoredInfoTypeRequest",
          "type": "object",
          "properties": {
            "config": {
              "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
              "type": "object",
              "properties": {
                "regex": {
                  "id": "GooglePrivacyDlpV2Regex",
                  "type": "object",
                  "properties": {
                    "pattern": {
                      "type": "string",
                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                    },
                    "groupIndexes": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                    }
                  },
                  "description": "Store regular expression-based StoredInfoType."
                },
                "dictionary": {
                  "id": "GooglePrivacyDlpV2Dictionary",
                  "type": "object",
                  "properties": {
                    "wordList": {
                      "id": "GooglePrivacyDlpV2WordList",
                      "type": "object",
                      "properties": {
                        "words": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                        }
                      },
                      "description": "List of words or phrases to search for."
                    },
                    "cloudStoragePath": {
                      "id": "GooglePrivacyDlpV2CloudStoragePath",
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                        }
                      },
                      "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                    }
                  },
                  "description": "Store dictionary-based CustomInfoType."
                },
                "description": {
                  "type": "string",
                  "description": "Description of the StoredInfoType (max 256 characters)."
                },
                "displayName": {
                  "type": "string",
                  "description": "Display name of the StoredInfoType (max 256 characters)."
                },
                "largeCustomDictionary": {
                  "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                  "type": "object",
                  "properties": {
                    "outputPath": {
                      "id": "GooglePrivacyDlpV2CloudStoragePath",
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                        }
                      },
                      "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                    },
                    "bigQueryField": {
                      "id": "GooglePrivacyDlpV2BigQueryField",
                      "type": "object",
                      "properties": {
                        "field": {
                          "id": "GooglePrivacyDlpV2FieldId",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name describing the field."
                            }
                          },
                          "description": "General identifier of a data field in a storage service."
                        },
                        "table": {
                          "id": "GooglePrivacyDlpV2BigQueryTable",
                          "type": "object",
                          "properties": {
                            "tableId": {
                              "type": "string",
                              "description": "Name of the table."
                            },
                            "datasetId": {
                              "type": "string",
                              "description": "Dataset ID of the table."
                            },
                            "projectId": {
                              "type": "string",
                              "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                            }
                          },
                          "description": "Source table of the field."
                        }
                      },
                      "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                    },
                    "cloudStorageFileSet": {
                      "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                        }
                      },
                      "description": "Set of files containing newline-delimited lists of dictionary phrases."
                    }
                  },
                  "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                }
              },
              "description": "Updated configuration for the storedInfoType. If not provided, a new version of the storedInfoType will be created with the existing configuration."
            },
            "updateMask": {
              "type": "string",
              "format": "google-fieldmask",
              "description": "Mask to control which fields get updated."
            }
          },
          "description": "Request message for UpdateStoredInfoType."
        }
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2StoredInfoType",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Resource name."
            },
            "currentVersion": {
              "id": "GooglePrivacyDlpV2StoredInfoTypeVersion",
              "type": "object",
              "properties": {
                "state": {
                  "enum": [
                    "STORED_INFO_TYPE_STATE_UNSPECIFIED",
                    "PENDING",
                    "READY",
                    "FAILED",
                    "INVALID"
                  ],
                  "type": "string",
                  "description": "Stored info type version state. Read-only, updated by the system during dictionary creation.",
                  "enumDescriptions": [
                    "Unused",
                    "StoredInfoType version is being created.",
                    "StoredInfoType version is ready for use.",
                    "StoredInfoType creation failed. All relevant error messages are returned in the `StoredInfoTypeVersion` message.",
                    "StoredInfoType is no longer valid because artifacts stored in user-controlled storage were modified. To fix an invalid StoredInfoType, use the `UpdateStoredInfoType` method to create a new version."
                  ]
                },
                "stats": {
                  "id": "GooglePrivacyDlpV2StoredInfoTypeStats",
                  "type": "object",
                  "properties": {
                    "largeCustomDictionary": {
                      "id": "GooglePrivacyDlpV2LargeCustomDictionaryStats",
                      "type": "object",
                      "properties": {
                        "approxNumPhrases": {
                          "type": "string",
                          "format": "int64",
                          "description": "Approximate number of distinct phrases in the dictionary."
                        }
                      },
                      "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                    }
                  },
                  "description": "Statistics about this storedInfoType version."
                },
                "config": {
                  "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
                  "type": "object",
                  "properties": {
                    "regex": {
                      "id": "GooglePrivacyDlpV2Regex",
                      "type": "object",
                      "properties": {
                        "pattern": {
                          "type": "string",
                          "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                        },
                        "groupIndexes": {
                          "type": "array",
                          "items": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                        }
                      },
                      "description": "Store regular expression-based StoredInfoType."
                    },
                    "dictionary": {
                      "id": "GooglePrivacyDlpV2Dictionary",
                      "type": "object",
                      "properties": {
                        "wordList": {
                          "id": "GooglePrivacyDlpV2WordList",
                          "type": "object",
                          "properties": {
                            "words": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                            }
                          },
                          "description": "List of words or phrases to search for."
                        },
                        "cloudStoragePath": {
                          "id": "GooglePrivacyDlpV2CloudStoragePath",
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                            }
                          },
                          "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                        }
                      },
                      "description": "Store dictionary-based CustomInfoType."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the StoredInfoType (max 256 characters)."
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the StoredInfoType (max 256 characters)."
                    },
                    "largeCustomDictionary": {
                      "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                      "type": "object",
                      "properties": {
                        "outputPath": {
                          "id": "GooglePrivacyDlpV2CloudStoragePath",
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                            }
                          },
                          "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                        },
                        "bigQueryField": {
                          "id": "GooglePrivacyDlpV2BigQueryField",
                          "type": "object",
                          "properties": {
                            "field": {
                              "id": "GooglePrivacyDlpV2FieldId",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name describing the field."
                                }
                              },
                              "description": "General identifier of a data field in a storage service."
                            },
                            "table": {
                              "id": "GooglePrivacyDlpV2BigQueryTable",
                              "type": "object",
                              "properties": {
                                "tableId": {
                                  "type": "string",
                                  "description": "Name of the table."
                                },
                                "datasetId": {
                                  "type": "string",
                                  "description": "Dataset ID of the table."
                                },
                                "projectId": {
                                  "type": "string",
                                  "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                }
                              },
                              "description": "Source table of the field."
                            }
                          },
                          "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                        },
                        "cloudStorageFileSet": {
                          "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                            }
                          },
                          "description": "Set of files containing newline-delimited lists of dictionary phrases."
                        }
                      },
                      "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                    }
                  },
                  "description": "StoredInfoType configuration."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2Error",
                    "type": "object",
                    "properties": {
                      "details": {
                        "id": "GoogleRpcStatus",
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The status code, which should be an enum value of google.rpc.Code."
                          },
                          "details": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "any",
                                "description": "Properties of the object. Contains field @type with type URL."
                              }
                            },
                            "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                          },
                          "message": {
                            "type": "string",
                            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                          }
                        },
                        "description": "Detailed error codes and messages."
                      },
                      "timestamps": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "google-datetime"
                        },
                        "description": "The times the error occurred."
                      }
                    },
                    "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
                  },
                  "description": "Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error."
                },
                "createTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "Create timestamp of the version. Read-only, determined by the system when the version is created."
                }
              },
              "description": "Current version of the stored info type."
            },
            "pendingVersions": {
              "type": "array",
              "items": {
                "id": "GooglePrivacyDlpV2StoredInfoTypeVersion",
                "type": "object",
                "properties": {
                  "state": {
                    "enum": [
                      "STORED_INFO_TYPE_STATE_UNSPECIFIED",
                      "PENDING",
                      "READY",
                      "FAILED",
                      "INVALID"
                    ],
                    "type": "string",
                    "description": "Stored info type version state. Read-only, updated by the system during dictionary creation.",
                    "enumDescriptions": [
                      "Unused",
                      "StoredInfoType version is being created.",
                      "StoredInfoType version is ready for use.",
                      "StoredInfoType creation failed. All relevant error messages are returned in the `StoredInfoTypeVersion` message.",
                      "StoredInfoType is no longer valid because artifacts stored in user-controlled storage were modified. To fix an invalid StoredInfoType, use the `UpdateStoredInfoType` method to create a new version."
                    ]
                  },
                  "stats": {
                    "id": "GooglePrivacyDlpV2StoredInfoTypeStats",
                    "type": "object",
                    "properties": {
                      "largeCustomDictionary": {
                        "id": "GooglePrivacyDlpV2LargeCustomDictionaryStats",
                        "type": "object",
                        "properties": {
                          "approxNumPhrases": {
                            "type": "string",
                            "format": "int64",
                            "description": "Approximate number of distinct phrases in the dictionary."
                          }
                        },
                        "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                      }
                    },
                    "description": "Statistics about this storedInfoType version."
                  },
                  "config": {
                    "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
                    "type": "object",
                    "properties": {
                      "regex": {
                        "id": "GooglePrivacyDlpV2Regex",
                        "type": "object",
                        "properties": {
                          "pattern": {
                            "type": "string",
                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                          },
                          "groupIndexes": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                          }
                        },
                        "description": "Store regular expression-based StoredInfoType."
                      },
                      "dictionary": {
                        "id": "GooglePrivacyDlpV2Dictionary",
                        "type": "object",
                        "properties": {
                          "wordList": {
                            "id": "GooglePrivacyDlpV2WordList",
                            "type": "object",
                            "properties": {
                              "words": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                              }
                            },
                            "description": "List of words or phrases to search for."
                          },
                          "cloudStoragePath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                          }
                        },
                        "description": "Store dictionary-based CustomInfoType."
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the StoredInfoType (max 256 characters)."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Display name of the StoredInfoType (max 256 characters)."
                      },
                      "largeCustomDictionary": {
                        "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                        "type": "object",
                        "properties": {
                          "outputPath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                          },
                          "bigQueryField": {
                            "id": "GooglePrivacyDlpV2BigQueryField",
                            "type": "object",
                            "properties": {
                              "field": {
                                "id": "GooglePrivacyDlpV2FieldId",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name describing the field."
                                  }
                                },
                                "description": "General identifier of a data field in a storage service."
                              },
                              "table": {
                                "id": "GooglePrivacyDlpV2BigQueryTable",
                                "type": "object",
                                "properties": {
                                  "tableId": {
                                    "type": "string",
                                    "description": "Name of the table."
                                  },
                                  "datasetId": {
                                    "type": "string",
                                    "description": "Dataset ID of the table."
                                  },
                                  "projectId": {
                                    "type": "string",
                                    "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                  }
                                },
                                "description": "Source table of the field."
                              }
                            },
                            "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                          },
                          "cloudStorageFileSet": {
                            "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string",
                                "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                              }
                            },
                            "description": "Set of files containing newline-delimited lists of dictionary phrases."
                          }
                        },
                        "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                      }
                    },
                    "description": "StoredInfoType configuration."
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "id": "GooglePrivacyDlpV2Error",
                      "type": "object",
                      "properties": {
                        "details": {
                          "id": "GoogleRpcStatus",
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The status code, which should be an enum value of google.rpc.Code."
                            },
                            "details": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "any",
                                  "description": "Properties of the object. Contains field @type with type URL."
                                }
                              },
                              "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                            },
                            "message": {
                              "type": "string",
                              "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                            }
                          },
                          "description": "Detailed error codes and messages."
                        },
                        "timestamps": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "google-datetime"
                          },
                          "description": "The times the error occurred."
                        }
                      },
                      "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
                    },
                    "description": "Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Create timestamp of the version. Read-only, determined by the system when the version is created."
                  }
                },
                "description": "Version of a StoredInfoType, including the configuration used to build it, create timestamp, and current state."
              },
              "description": "Pending versions of the stored info type. Empty if no versions are pending."
            }
          },
          "description": "StoredInfoType resource message that contains information about the current version and any pending updates."
        }
      ]
  projects.content.deidentify:
    description: |-
      De-identifies potentially sensitive info from a ContentItem. This method has limits on input size and output size. See https://cloud.google.com/dlp/docs/deidentify-sensitive-data to learn more. When no InfoTypes or CustomInfoTypes are specified in this request, the system will automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.content/deidentify
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.content.inspect:
    description: |-
      Finds potentially sensitive info in content. This method has limits on input size, processing time, and output size. When no InfoTypes or CustomInfoTypes are specified in this request, the system will automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. For how to guides, see https://cloud.google.com/dlp/docs/inspecting-images and https://cloud.google.com/dlp/docs/inspecting-text,
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.content/inspect
    example:
      inputs: [
        {
          "id": "GooglePrivacyDlpV2InspectContentRequest",
          "type": "object",
          "properties": {
            "item": {
              "id": "GooglePrivacyDlpV2ContentItem",
              "type": "object",
              "properties": {
                "table": {
                  "id": "GooglePrivacyDlpV2Table",
                  "type": "object",
                  "properties": {
                    "rows": {
                      "type": "array",
                      "items": {
                        "id": "GooglePrivacyDlpV2Row",
                        "type": "object",
                        "properties": {
                          "values": {
                            "type": "array",
                            "items": {
                              "id": "GooglePrivacyDlpV2Value",
                              "type": "object",
                              "properties": {
                                "dateValue": {
                                  "id": "GoogleTypeDate",
                                  "type": "object",
                                  "properties": {
                                    "day": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
                                    },
                                    "year": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
                                    },
                                    "month": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
                                    }
                                  },
                                  "description": "date"
                                },
                                "timeValue": {
                                  "id": "GoogleTypeTimeOfDay",
                                  "type": "object",
                                  "properties": {
                                    "hours": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time."
                                    },
                                    "nanos": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999."
                                    },
                                    "minutes": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Minutes of hour of day. Must be from 0 to 59."
                                    },
                                    "seconds": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds."
                                    }
                                  },
                                  "description": "time of day"
                                },
                                "floatValue": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "float"
                                },
                                "stringValue": {
                                  "type": "string",
                                  "description": "string"
                                },
                                "booleanValue": {
                                  "type": "boolean",
                                  "description": "boolean"
                                },
                                "integerValue": {
                                  "type": "string",
                                  "format": "int64",
                                  "description": "integer"
                                },
                                "dayOfWeekValue": {
                                  "enum": [
                                    "DAY_OF_WEEK_UNSPECIFIED",
                                    "MONDAY",
                                    "TUESDAY",
                                    "WEDNESDAY",
                                    "THURSDAY",
                                    "FRIDAY",
                                    "SATURDAY",
                                    "SUNDAY"
                                  ],
                                  "type": "string",
                                  "description": "day of week",
                                  "enumDescriptions": [
                                    "The day of the week is unspecified.",
                                    "Monday",
                                    "Tuesday",
                                    "Wednesday",
                                    "Thursday",
                                    "Friday",
                                    "Saturday",
                                    "Sunday"
                                  ]
                                },
                                "timestampValue": {
                                  "type": "string",
                                  "format": "google-datetime",
                                  "description": "timestamp"
                                }
                              },
                              "description": "Set of primitive values supported by the system. Note that for the purposes of inspection or transformation, the number of bytes considered to comprise a 'Value' is based on its representation as a UTF-8 encoded string. For example, if 'integer_value' is set to 123456789, the number of bytes would be counted as 9, even though an int64 only holds up to 8 bytes of data."
                            },
                            "description": "Individual cells."
                          }
                        },
                        "description": "Values of the row."
                      },
                      "description": "Rows of the table."
                    },
                    "headers": {
                      "type": "array",
                      "items": {
                        "id": "GooglePrivacyDlpV2FieldId",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name describing the field."
                          }
                        },
                        "description": "General identifier of a data field in a storage service."
                      },
                      "description": "Headers of the table."
                    }
                  },
                  "description": "Structured content for inspection. See https://cloud.google.com/dlp/docs/inspecting-text#inspecting_a_table to learn more."
                },
                "value": {
                  "type": "string",
                  "description": "String data to inspect or redact."
                },
                "byteItem": {
                  "id": "GooglePrivacyDlpV2ByteContentItem",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string",
                      "format": "byte",
                      "description": "Content data to inspect or redact."
                    },
                    "type": {
                      "enum": [
                        "BYTES_TYPE_UNSPECIFIED",
                        "IMAGE",
                        "IMAGE_JPEG",
                        "IMAGE_BMP",
                        "IMAGE_PNG",
                        "IMAGE_SVG",
                        "TEXT_UTF8",
                        "WORD_DOCUMENT",
                        "PDF",
                        "AVRO",
                        "CSV",
                        "TSV"
                      ],
                      "type": "string",
                      "description": "The type of data stored in the bytes string. Default will be TEXT_UTF8.",
                      "enumDescriptions": [
                        "Unused",
                        "Any image type.",
                        "jpeg",
                        "bmp",
                        "png",
                        "svg",
                        "plain text",
                        "docx, docm, dotx, dotm",
                        "pdf",
                        "avro",
                        "csv",
                        "tsv"
                      ]
                    }
                  },
                  "description": "Content data to inspect or redact. Replaces `type` and `data`."
                }
              },
              "description": "The item to inspect."
            },
            "locationId": {
              "type": "string",
              "description": "Deprecated. This field has no effect."
            },
            "inspectConfig": {
              "id": "GooglePrivacyDlpV2InspectConfig",
              "type": "object",
              "properties": {
                "limits": {
                  "id": "GooglePrivacyDlpV2FindingLimits",
                  "type": "object",
                  "properties": {
                    "maxFindingsPerItem": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Max number of findings that will be returned for each item scanned. When set within `InspectJobConfig`, the maximum returned is 2000 regardless if this is set higher. When set within `InspectContentRequest`, this field is ignored."
                    },
                    "maxFindingsPerRequest": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Max number of findings that will be returned per request/job. When set within `InspectContentRequest`, the maximum returned is 2000 regardless if this is set higher."
                    },
                    "maxFindingsPerInfoType": {
                      "type": "array",
                      "items": {
                        "id": "GooglePrivacyDlpV2InfoTypeLimit",
                        "type": "object",
                        "properties": {
                          "infoType": {
                            "id": "GooglePrivacyDlpV2InfoType",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                              }
                            },
                            "description": "Type of information detected by the API."
                          },
                          "maxFindings": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Max findings limit for the given infoType."
                          }
                        },
                        "description": "Max findings configuration per infoType, per content item or long running DlpJob."
                      },
                      "description": "Configuration of findings limit given for specified infoTypes."
                    }
                  },
                  "description": "Configuration to control the number of findings returned."
                },
                "ruleSet": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2InspectionRuleSet",
                    "type": "object",
                    "properties": {
                      "rules": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2InspectionRule",
                          "type": "object",
                          "properties": {
                            "hotwordRule": {
                              "id": "GooglePrivacyDlpV2HotwordRule",
                              "type": "object",
                              "properties": {
                                "proximity": {
                                  "id": "GooglePrivacyDlpV2Proximity",
                                  "type": "object",
                                  "properties": {
                                    "windowAfter": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters after the finding to consider."
                                    },
                                    "windowBefore": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters before the finding to consider."
                                    }
                                  },
                                  "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                },
                                "hotwordRegex": {
                                  "id": "GooglePrivacyDlpV2Regex",
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string",
                                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                    },
                                    "groupIndexes": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                    }
                                  },
                                  "description": "Regular expression pattern defining what qualifies as a hotword."
                                },
                                "likelihoodAdjustment": {
                                  "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                  "type": "object",
                                  "properties": {
                                    "fixedLikelihood": {
                                      "enum": [
                                        "LIKELIHOOD_UNSPECIFIED",
                                        "VERY_UNLIKELY",
                                        "UNLIKELY",
                                        "POSSIBLE",
                                        "LIKELY",
                                        "VERY_LIKELY"
                                      ],
                                      "type": "string",
                                      "description": "Set the likelihood of a finding to a fixed value.",
                                      "enumDescriptions": [
                                        "Default value; same as POSSIBLE.",
                                        "Few matching elements.",
                                        "",
                                        "Some matching elements.",
                                        "",
                                        "Many matching elements."
                                      ]
                                    },
                                    "relativeLikelihood": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                    }
                                  },
                                  "description": "Likelihood adjustment to apply to all matching findings."
                                }
                              },
                              "description": "Hotword-based detection rule."
                            },
                            "exclusionRule": {
                              "id": "GooglePrivacyDlpV2ExclusionRule",
                              "type": "object",
                              "properties": {
                                "regex": {
                                  "id": "GooglePrivacyDlpV2Regex",
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string",
                                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                    },
                                    "groupIndexes": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                    }
                                  },
                                  "description": "Regular expression which defines the rule."
                                },
                                "dictionary": {
                                  "id": "GooglePrivacyDlpV2Dictionary",
                                  "type": "object",
                                  "properties": {
                                    "wordList": {
                                      "id": "GooglePrivacyDlpV2WordList",
                                      "type": "object",
                                      "properties": {
                                        "words": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                        }
                                      },
                                      "description": "List of words or phrases to search for."
                                    },
                                    "cloudStoragePath": {
                                      "id": "GooglePrivacyDlpV2CloudStoragePath",
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string",
                                          "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                        }
                                      },
                                      "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                                    }
                                  },
                                  "description": "Dictionary which defines the rule."
                                },
                                "matchingType": {
                                  "enum": [
                                    "MATCHING_TYPE_UNSPECIFIED",
                                    "MATCHING_TYPE_FULL_MATCH",
                                    "MATCHING_TYPE_PARTIAL_MATCH",
                                    "MATCHING_TYPE_INVERSE_MATCH"
                                  ],
                                  "type": "string",
                                  "description": "How the rule is applied, see MatchingType documentation for details.",
                                  "enumDescriptions": [
                                    "Invalid.",
                                    "Full match. - Dictionary: join of Dictionary results matched complete finding quote - Regex: all regex matches fill a finding quote start to end - Exclude info type: completely inside affecting info types findings",
                                    "Partial match. - Dictionary: at least one of the tokens in the finding matches - Regex: substring of the finding matches - Exclude info type: intersects with affecting info types findings",
                                    "Inverse match. - Dictionary: no tokens in the finding match the dictionary - Regex: finding doesn't match the regex - Exclude info type: no intersection with affecting info types findings"
                                  ]
                                },
                                "excludeInfoTypes": {
                                  "id": "GooglePrivacyDlpV2ExcludeInfoTypes",
                                  "type": "object",
                                  "properties": {
                                    "infoTypes": {
                                      "type": "array",
                                      "items": {
                                        "id": "GooglePrivacyDlpV2InfoType",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                          }
                                        },
                                        "description": "Type of information detected by the API."
                                      },
                                      "description": "InfoType list in ExclusionRule rule drops a finding when it overlaps or contained within with a finding of an infoType from this list. For example, for `InspectionRuleSet.info_types` containing \"PHONE_NUMBER\"` and `exclusion_rule` containing `exclude_info_types.info_types` with \"EMAIL_ADDRESS\" the phone number findings are dropped if they overlap with EMAIL_ADDRESS finding. That leads to \"555-222-2222@example.org\" to generate only a single finding, namely email address."
                                    }
                                  },
                                  "description": "Set of infoTypes for which findings would affect this rule."
                                }
                              },
                              "description": "Exclusion rule."
                            }
                          },
                          "description": "A single inspection rule to be applied to infoTypes, specified in `InspectionRuleSet`."
                        },
                        "description": "Set of rules to be applied to infoTypes. The rules are applied in order."
                      },
                      "infoTypes": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2InfoType",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                            }
                          },
                          "description": "Type of information detected by the API."
                        },
                        "description": "List of infoTypes this rule set is applied to."
                      }
                    },
                    "description": "Rule set for modifying a set of infoTypes to alter behavior under certain circumstances, depending on the specific details of the rules within the set."
                  },
                  "description": "Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type."
                },
                "infoTypes": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2InfoType",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                      }
                    },
                    "description": "Type of information detected by the API."
                  },
                  "description": "Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/dlp/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time."
                },
                "includeQuote": {
                  "type": "boolean",
                  "description": "When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote."
                },
                "minLikelihood": {
                  "enum": [
                    "LIKELIHOOD_UNSPECIFIED",
                    "VERY_UNLIKELY",
                    "UNLIKELY",
                    "POSSIBLE",
                    "LIKELY",
                    "VERY_LIKELY"
                  ],
                  "type": "string",
                  "description": "Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more.",
                  "enumDescriptions": [
                    "Default value; same as POSSIBLE.",
                    "Few matching elements.",
                    "",
                    "Some matching elements.",
                    "",
                    "Many matching elements."
                  ]
                },
                "contentOptions": {
                  "type": "array",
                  "items": {
                    "enum": [
                      "CONTENT_UNSPECIFIED",
                      "CONTENT_TEXT",
                      "CONTENT_IMAGE"
                    ],
                    "type": "string",
                    "enumDescriptions": [
                      "Includes entire content of a file or a data stream.",
                      "Text content within the data, excluding any metadata.",
                      "Images found in the data."
                    ]
                  },
                  "description": "List of options defining data content to scan. If empty, text, images, and other content will be included."
                },
                "customInfoTypes": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2CustomInfoType",
                    "type": "object",
                    "properties": {
                      "regex": {
                        "id": "GooglePrivacyDlpV2Regex",
                        "type": "object",
                        "properties": {
                          "pattern": {
                            "type": "string",
                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                          },
                          "groupIndexes": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                          }
                        },
                        "description": "Regular expression based CustomInfoType."
                      },
                      "infoType": {
                        "id": "GooglePrivacyDlpV2InfoType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                          }
                        },
                        "description": "Type of information detected by the API."
                      },
                      "dictionary": {
                        "id": "GooglePrivacyDlpV2Dictionary",
                        "type": "object",
                        "properties": {
                          "wordList": {
                            "id": "GooglePrivacyDlpV2WordList",
                            "type": "object",
                            "properties": {
                              "words": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                              }
                            },
                            "description": "List of words or phrases to search for."
                          },
                          "cloudStoragePath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                          }
                        },
                        "description": "A list of phrases to detect as a CustomInfoType."
                      },
                      "likelihood": {
                        "enum": [
                          "LIKELIHOOD_UNSPECIFIED",
                          "VERY_UNLIKELY",
                          "UNLIKELY",
                          "POSSIBLE",
                          "LIKELY",
                          "VERY_LIKELY"
                        ],
                        "type": "string",
                        "description": "Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not specified.",
                        "enumDescriptions": [
                          "Default value; same as POSSIBLE.",
                          "Few matching elements.",
                          "",
                          "Some matching elements.",
                          "",
                          "Many matching elements."
                        ]
                      },
                      "storedType": {
                        "id": "GooglePrivacyDlpV2StoredType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Resource name of the requested `StoredInfoType`, for example `organizations/433245324/storedInfoTypes/432452342` or `projects/project-id/storedInfoTypes/432452342`."
                          },
                          "createTime": {
                            "type": "string",
                            "format": "google-datetime",
                            "description": "Timestamp indicating when the version of the `StoredInfoType` used for inspection was created. Output-only field, populated by the system."
                          }
                        },
                        "description": "Load an existing `StoredInfoType` resource for use in `InspectDataSource`. Not currently supported in `InspectContent`."
                      },
                      "exclusionType": {
                        "enum": [
                          "EXCLUSION_TYPE_UNSPECIFIED",
                          "EXCLUSION_TYPE_EXCLUDE"
                        ],
                        "type": "string",
                        "description": "If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching.",
                        "enumDescriptions": [
                          "A finding of this custom info type will not be excluded from results.",
                          "A finding of this custom info type will be excluded from final results, but can still affect rule execution."
                        ]
                      },
                      "surrogateType": {
                        "id": "GooglePrivacyDlpV2SurrogateType",
                        "type": "object",
                        "properties": {},
                        "description": "Message for detecting output from deidentification transformations that support reversing."
                      },
                      "detectionRules": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2DetectionRule",
                          "type": "object",
                          "properties": {
                            "hotwordRule": {
                              "id": "GooglePrivacyDlpV2HotwordRule",
                              "type": "object",
                              "properties": {
                                "proximity": {
                                  "id": "GooglePrivacyDlpV2Proximity",
                                  "type": "object",
                                  "properties": {
                                    "windowAfter": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters after the finding to consider."
                                    },
                                    "windowBefore": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters before the finding to consider."
                                    }
                                  },
                                  "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                },
                                "hotwordRegex": {
                                  "id": "GooglePrivacyDlpV2Regex",
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string",
                                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                    },
                                    "groupIndexes": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                    }
                                  },
                                  "description": "Regular expression pattern defining what qualifies as a hotword."
                                },
                                "likelihoodAdjustment": {
                                  "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                  "type": "object",
                                  "properties": {
                                    "fixedLikelihood": {
                                      "enum": [
                                        "LIKELIHOOD_UNSPECIFIED",
                                        "VERY_UNLIKELY",
                                        "UNLIKELY",
                                        "POSSIBLE",
                                        "LIKELY",
                                        "VERY_LIKELY"
                                      ],
                                      "type": "string",
                                      "description": "Set the likelihood of a finding to a fixed value.",
                                      "enumDescriptions": [
                                        "Default value; same as POSSIBLE.",
                                        "Few matching elements.",
                                        "",
                                        "Some matching elements.",
                                        "",
                                        "Many matching elements."
                                      ]
                                    },
                                    "relativeLikelihood": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                    }
                                  },
                                  "description": "Likelihood adjustment to apply to all matching findings."
                                }
                              },
                              "description": "Hotword-based detection rule."
                            }
                          },
                          "description": "Deprecated; use `InspectionRuleSet` instead. Rule for modifying a `CustomInfoType` to alter behavior under certain circumstances, depending on the specific details of the rule. Not supported for the `surrogate_type` custom infoType."
                        },
                        "description": "Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in order that they are specified. Not supported for the `surrogate_type` CustomInfoType."
                      }
                    },
                    "description": "Custom information type provided by the user. Used to find domain-specific sensitive information configurable to the data in question."
                  },
                  "description": "CustomInfoTypes provided by the user. See https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more."
                },
                "excludeInfoTypes": {
                  "type": "boolean",
                  "description": "When true, excludes type information of the findings."
                }
              },
              "description": "Configuration for the inspector. What specified here will override the template referenced by the inspect_template_name argument."
            },
            "inspectTemplateName": {
              "type": "string",
              "description": "Template to use. Any configuration directly specified in inspect_config will override those set in the template. Singular fields that are set in this request will replace their corresponding fields in the template. Repeated fields are appended. Singular sub-messages and groups are recursively merged."
            }
          },
          "description": "Request to search for potentially sensitive info in a ContentItem."
        }
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2InspectContentResponse",
          "type": "object",
          "properties": {
            "result": {
              "id": "GooglePrivacyDlpV2InspectResult",
              "type": "object",
              "properties": {
                "findings": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2Finding",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Resource name in format projects/{project}/locations/{location}/findings/{finding} Populated only when viewing persisted findings."
                      },
                      "quote": {
                        "type": "string",
                        "description": "The content that was found. Even if the content is not textual, it may be converted to a textual representation here. Provided if `include_quote` is true and the finding is less than or equal to 4096 bytes long. If the finding exceeds 4096 bytes in length, the quote may be omitted."
                      },
                      "labels": {
                        "type": "object",
                        "description": "The labels associated with this `Finding`. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples: * `\"environment\" : \"production\"` * `\"pipeline\" : \"etl\"`",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "jobName": {
                        "type": "string",
                        "description": "The job that stored the finding."
                      },
                      "infoType": {
                        "id": "GooglePrivacyDlpV2InfoType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                          }
                        },
                        "description": "Type of information detected by the API."
                      },
                      "location": {
                        "id": "GooglePrivacyDlpV2Location",
                        "type": "object",
                        "properties": {
                          "byteRange": {
                            "id": "GooglePrivacyDlpV2Range",
                            "type": "object",
                            "properties": {
                              "end": {
                                "type": "string",
                                "format": "int64",
                                "description": "Index of the last character of the range (exclusive)."
                              },
                              "start": {
                                "type": "string",
                                "format": "int64",
                                "description": "Index of the first character of the range (inclusive)."
                              }
                            },
                            "description": "Zero-based byte offsets delimiting the finding. These are relative to the finding's containing element. Note that when the content is not textual, this references the UTF-8 encoded textual representation of the content. Omitted if content is an image."
                          },
                          "container": {
                            "id": "GooglePrivacyDlpV2Container",
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Container type, for example BigQuery or Google Cloud Storage."
                              },
                              "version": {
                                "type": "string",
                                "description": "Findings container version, if available (\"generation\" for Google Cloud Storage)."
                              },
                              "fullPath": {
                                "type": "string",
                                "description": "A string representation of the full container name. Examples: - BigQuery: 'Project:DataSetId.TableId' - Google Cloud Storage: 'gs://Bucket/folders/filename.txt'"
                              },
                              "rootPath": {
                                "type": "string",
                                "description": "The root of the container. Examples: - For BigQuery table `project_id:dataset_id.table_id`, the root is `dataset_id` - For Google Cloud Storage file `gs://bucket/folder/filename.txt`, the root is `gs://bucket`"
                              },
                              "projectId": {
                                "type": "string",
                                "description": "Project where the finding was found. Can be different from the project that owns the finding."
                              },
                              "updateTime": {
                                "type": "string",
                                "format": "google-datetime",
                                "description": "Findings container modification timestamp, if applicable. For Google Cloud Storage contains last file modification timestamp. For BigQuery table contains last_modified_time property. For Datastore - not populated."
                              },
                              "relativePath": {
                                "type": "string",
                                "description": "The rest of the path after the root. Examples: - For BigQuery table `project_id:dataset_id.table_id`, the relative path is `table_id` - Google Cloud Storage file `gs://bucket/folder/filename.txt`, the relative path is `folder/filename.txt`"
                              }
                            },
                            "description": "Information about the container where this finding occurred, if available."
                          },
                          "codepointRange": {
                            "id": "GooglePrivacyDlpV2Range",
                            "type": "object",
                            "properties": {
                              "end": {
                                "type": "string",
                                "format": "int64",
                                "description": "Index of the last character of the range (exclusive)."
                              },
                              "start": {
                                "type": "string",
                                "format": "int64",
                                "description": "Index of the first character of the range (inclusive)."
                              }
                            },
                            "description": "Unicode character offsets delimiting the finding. These are relative to the finding's containing element. Provided when the content is text."
                          },
                          "contentLocations": {
                            "type": "array",
                            "items": {
                              "id": "GooglePrivacyDlpV2ContentLocation",
                              "type": "object",
                              "properties": {
                                "containerName": {
                                  "type": "string",
                                  "description": "Name of the container where the finding is located. The top level name is the source file name or table name. Names of some common storage containers are formatted as follows: * BigQuery tables: `{project_id}:{dataset_id}.{table_id}` * Cloud Storage files: `gs://{bucket}/{path}` * Datastore namespace: {namespace} Nested names could be absent if the embedded object has no string identifier (for an example an image contained within a document)."
                                },
                                "imageLocation": {
                                  "id": "GooglePrivacyDlpV2ImageLocation",
                                  "type": "object",
                                  "properties": {
                                    "boundingBoxes": {
                                      "type": "array",
                                      "items": {
                                        "id": "GooglePrivacyDlpV2BoundingBox",
                                        "type": "object",
                                        "properties": {
                                          "top": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Top coordinate of the bounding box. (0,0) is upper left."
                                          },
                                          "left": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Left coordinate of the bounding box. (0,0) is upper left."
                                          },
                                          "width": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Width of the bounding box in pixels."
                                          },
                                          "height": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Height of the bounding box in pixels."
                                          }
                                        },
                                        "description": "Bounding box encompassing detected text within an image."
                                      },
                                      "description": "Bounding boxes locating the pixels within the image containing the finding."
                                    }
                                  },
                                  "description": "Location within an image's pixels."
                                },
                                "recordLocation": {
                                  "id": "GooglePrivacyDlpV2RecordLocation",
                                  "type": "object",
                                  "properties": {
                                    "fieldId": {
                                      "id": "GooglePrivacyDlpV2FieldId",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Name describing the field."
                                        }
                                      },
                                      "description": "General identifier of a data field in a storage service."
                                    },
                                    "recordKey": {
                                      "id": "GooglePrivacyDlpV2RecordKey",
                                      "type": "object",
                                      "properties": {
                                        "idValues": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "Values of identifying columns in the given row. Order of values matches the order of `identifying_fields` specified in the scanning request."
                                        },
                                        "bigQueryKey": {
                                          "id": "GooglePrivacyDlpV2BigQueryKey",
                                          "type": "object",
                                          "properties": {
                                            "rowNumber": {
                                              "type": "string",
                                              "format": "int64",
                                              "description": "Row number inferred at the time the table was scanned. This value is nondeterministic, cannot be queried, and may be null for inspection jobs. To locate findings within a table, specify `inspect_job.storage_config.big_query_options.identifying_fields` in `CreateDlpJobRequest`."
                                            },
                                            "tableReference": {
                                              "id": "GooglePrivacyDlpV2BigQueryTable",
                                              "type": "object",
                                              "properties": {
                                                "tableId": {
                                                  "type": "string",
                                                  "description": "Name of the table."
                                                },
                                                "datasetId": {
                                                  "type": "string",
                                                  "description": "Dataset ID of the table."
                                                },
                                                "projectId": {
                                                  "type": "string",
                                                  "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                                }
                                              },
                                              "description": "Complete BigQuery table reference."
                                            }
                                          },
                                          "description": "Row key for identifying a record in BigQuery table."
                                        },
                                        "datastoreKey": {
                                          "id": "GooglePrivacyDlpV2DatastoreKey",
                                          "type": "object",
                                          "properties": {
                                            "entityKey": {
                                              "id": "GooglePrivacyDlpV2Key",
                                              "type": "object",
                                              "properties": {
                                                "path": {
                                                  "type": "array",
                                                  "items": {
                                                    "id": "GooglePrivacyDlpV2PathElement",
                                                    "type": "object",
                                                    "properties": {
                                                      "id": {
                                                        "type": "string",
                                                        "format": "int64",
                                                        "description": "The auto-allocated ID of the entity. Never equal to zero. Values less than zero are discouraged and may not be supported in the future."
                                                      },
                                                      "kind": {
                                                        "type": "string",
                                                        "description": "The kind of the entity. A kind matching regex `__.*__` is reserved/read-only. A kind must not contain more than 1500 bytes when UTF-8 encoded. Cannot be `\"\"`."
                                                      },
                                                      "name": {
                                                        "type": "string",
                                                        "description": "The name of the entity. A name matching regex `__.*__` is reserved/read-only. A name must not be more than 1500 bytes when UTF-8 encoded. Cannot be `\"\"`."
                                                      }
                                                    },
                                                    "description": "A (kind, ID/name) pair used to construct a key path. If either name or ID is set, the element is complete. If neither is set, the element is incomplete."
                                                  },
                                                  "description": "The entity path. An entity path consists of one or more elements composed of a kind and a string or numerical identifier, which identify entities. The first element identifies a _root entity_, the second element identifies a _child_ of the root entity, the third element identifies a child of the second entity, and so forth. The entities identified by all prefixes of the path are called the element's _ancestors_. A path can never be empty, and a path can have at most 100 elements."
                                                },
                                                "partitionId": {
                                                  "id": "GooglePrivacyDlpV2PartitionId",
                                                  "type": "object",
                                                  "properties": {
                                                    "projectId": {
                                                      "type": "string",
                                                      "description": "The ID of the project to which the entities belong."
                                                    },
                                                    "namespaceId": {
                                                      "type": "string",
                                                      "description": "If not empty, the ID of the namespace to which the entities belong."
                                                    }
                                                  },
                                                  "description": "Entities are partitioned into subsets, currently identified by a project ID and namespace ID. Queries are scoped to a single partition."
                                                }
                                              },
                                              "description": "Datastore entity key."
                                            }
                                          },
                                          "description": "Record key for a finding in Cloud Datastore."
                                        }
                                      },
                                      "description": "Key of the finding."
                                    },
                                    "tableLocation": {
                                      "id": "GooglePrivacyDlpV2TableLocation",
                                      "type": "object",
                                      "properties": {
                                        "rowIndex": {
                                          "type": "string",
                                          "format": "int64",
                                          "description": "The zero-based index of the row where the finding is located. Only populated for resources that have a natural ordering, not BigQuery. In BigQuery, to identify the row a finding came from, populate BigQueryOptions.identifying_fields with your primary key column names and when you store the findings the value of those columns will be stored inside of Finding."
                                        }
                                      },
                                      "description": "Location within a `ContentItem.Table`."
                                    }
                                  },
                                  "description": "Location within a row or record of a database table."
                                },
                                "containerVersion": {
                                  "type": "string",
                                  "description": "Findings container version, if available (\"generation\" for Google Cloud Storage)."
                                },
                                "documentLocation": {
                                  "id": "GooglePrivacyDlpV2DocumentLocation",
                                  "type": "object",
                                  "properties": {
                                    "fileOffset": {
                                      "type": "string",
                                      "format": "int64",
                                      "description": "Offset of the line, from the beginning of the file, where the finding is located."
                                    }
                                  },
                                  "description": "Location data for document files."
                                },
                                "metadataLocation": {
                                  "id": "GooglePrivacyDlpV2MetadataLocation",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "enum": [
                                        "METADATATYPE_UNSPECIFIED",
                                        "STORAGE_METADATA"
                                      ],
                                      "type": "string",
                                      "description": "Type of metadata containing the finding.",
                                      "enumDescriptions": [
                                        "Unused",
                                        "General file metadata provided by Cloud Storage."
                                      ]
                                    },
                                    "storageLabel": {
                                      "id": "GooglePrivacyDlpV2StorageMetadataLabel",
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        }
                                      },
                                      "description": "Storage metadata."
                                    }
                                  },
                                  "description": "Location within the metadata for inspected content."
                                },
                                "containerTimestamp": {
                                  "type": "string",
                                  "format": "google-datetime",
                                  "description": "Findings container modification timestamp, if applicable. For Google Cloud Storage contains last file modification timestamp. For BigQuery table contains last_modified_time property. For Datastore - not populated."
                                }
                              },
                              "description": "Precise location of the finding within a document, record, image, or metadata container."
                            },
                            "description": "List of nested objects pointing to the precise location of the finding within the file or record."
                          }
                        },
                        "description": "Where the content was found."
                      },
                      "findingId": {
                        "type": "string",
                        "description": "The unique finding id."
                      },
                      "quoteInfo": {
                        "id": "GooglePrivacyDlpV2QuoteInfo",
                        "type": "object",
                        "properties": {
                          "dateTime": {
                            "id": "GooglePrivacyDlpV2DateTime",
                            "type": "object",
                            "properties": {
                              "date": {
                                "id": "GoogleTypeDate",
                                "type": "object",
                                "properties": {
                                  "day": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
                                  },
                                  "year": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
                                  },
                                  "month": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
                                  }
                                },
                                "description": "One or more of the following must be set. Must be a valid date or time value."
                              },
                              "time": {
                                "id": "GoogleTypeTimeOfDay",
                                "type": "object",
                                "properties": {
                                  "hours": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time."
                                  },
                                  "nanos": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999."
                                  },
                                  "minutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Minutes of hour of day. Must be from 0 to 59."
                                  },
                                  "seconds": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds."
                                  }
                                },
                                "description": "Time of day"
                              },
                              "timeZone": {
                                "id": "GooglePrivacyDlpV2TimeZone",
                                "type": "object",
                                "properties": {
                                  "offsetMinutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Set only if the offset can be determined. Positive for time ahead of UTC. E.g. For \"UTC-9\", this value is -540."
                                  }
                                },
                                "description": "Time zone"
                              },
                              "dayOfWeek": {
                                "enum": [
                                  "DAY_OF_WEEK_UNSPECIFIED",
                                  "MONDAY",
                                  "TUESDAY",
                                  "WEDNESDAY",
                                  "THURSDAY",
                                  "FRIDAY",
                                  "SATURDAY",
                                  "SUNDAY"
                                ],
                                "type": "string",
                                "description": "Day of week",
                                "enumDescriptions": [
                                  "The day of the week is unspecified.",
                                  "Monday",
                                  "Tuesday",
                                  "Wednesday",
                                  "Thursday",
                                  "Friday",
                                  "Saturday",
                                  "Sunday"
                                ]
                              }
                            },
                            "description": "The date time indicated by the quote."
                          }
                        },
                        "description": "Contains data parsed from quotes. Only populated if include_quote was set to true and a supported infoType was requested. Currently supported infoTypes: DATE, DATE_OF_BIRTH and TIME."
                      },
                      "createTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "Timestamp when finding was detected."
                      },
                      "likelihood": {
                        "enum": [
                          "LIKELIHOOD_UNSPECIFIED",
                          "VERY_UNLIKELY",
                          "UNLIKELY",
                          "POSSIBLE",
                          "LIKELY",
                          "VERY_LIKELY"
                        ],
                        "type": "string",
                        "description": "Confidence of how likely it is that the `info_type` is correct.",
                        "enumDescriptions": [
                          "Default value; same as POSSIBLE.",
                          "Few matching elements.",
                          "",
                          "Some matching elements.",
                          "",
                          "Many matching elements."
                        ]
                      },
                      "triggerName": {
                        "type": "string",
                        "description": "Job trigger name, if applicable, for this finding."
                      },
                      "resourceName": {
                        "type": "string",
                        "description": "The job that stored the finding."
                      },
                      "jobCreateTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "Time the job started that produced this finding."
                      }
                    },
                    "description": "Represents a piece of potentially sensitive content."
                  },
                  "description": "List of findings for an item."
                },
                "findingsTruncated": {
                  "type": "boolean",
                  "description": "If true, then this item might have more findings than were returned, and the findings returned are an arbitrary subset of all findings. The findings list might be truncated because the input items were too large, or because the server reached the maximum amount of resources allowed for a single API call. For best results, divide the input into smaller batches."
                }
              },
              "description": "The findings."
            }
          },
          "description": "Results of inspecting an item."
        }
      ]
  projects.content.reidentify:
    description: |-
      Re-identifies content that has been de-identified. See https://cloud.google.com/dlp/docs/pseudonymization#re-identification_in_free_text_code_example to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.content/reidentify
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.deidentifyTemplates.create:
    description: |-
      Creates a DeidentifyTemplate for re-using frequently used configuration for de-identifying content, images, and storage. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.deidentifyTemplates/create
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.deidentifyTemplates.delete:
    description: |-
      Deletes a DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.deidentifyTemplates/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  projects.deidentifyTemplates.get:
    description: |-
      Gets a DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.deidentifyTemplates/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.deidentifyTemplates.list:
    description: |-
      Lists DeidentifyTemplates. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.deidentifyTemplates/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.deidentifyTemplates.patch:
    description: |-
      Updates the DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.deidentifyTemplates/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.dlpJobs.cancel:
    description: |-
      Starts asynchronous cancellation on a long-running DlpJob. The server makes a best effort to cancel the DlpJob, but success is not guaranteed. See https://cloud.google.com/dlp/docs/inspecting-storage and https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.dlpJobs/cancel
    example:
      inputs: [
        {
          "id": "GooglePrivacyDlpV2CancelDlpJobRequest",
          "type": "object",
          "properties": {},
          "description": "The request message for canceling a DLP job."
        }
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  projects.dlpJobs.create:
    description: |-
      Creates a new job to inspect storage or calculate risk metrics. See https://cloud.google.com/dlp/docs/inspecting-storage and https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more. When no InfoTypes or CustomInfoTypes are specified in inspect jobs, the system will automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.dlpJobs/create
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.dlpJobs.delete:
    description: |-
      Deletes a long-running DlpJob. This method indicates that the client is no longer interested in the DlpJob result. The job will be cancelled if possible. See https://cloud.google.com/dlp/docs/inspecting-storage and https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.dlpJobs/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  projects.dlpJobs.get:
    description: |-
      Gets the latest state of a long-running DlpJob. See https://cloud.google.com/dlp/docs/inspecting-storage and https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.dlpJobs/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.dlpJobs.list:
    description: |-
      Lists DlpJobs that match the specified filter in the request. See https://cloud.google.com/dlp/docs/inspecting-storage and https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.dlpJobs/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.image.redact:
    description: |-
      Redacts potentially sensitive info from an image. This method has limits on input size, processing time, and output size. See https://cloud.google.com/dlp/docs/redacting-sensitive-data-images to learn more. When no InfoTypes or CustomInfoTypes are specified in this request, the system will automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.image/redact
    example:
      inputs: [
        {
          "id": "GooglePrivacyDlpV2RedactImageRequest",
          "type": "object",
          "properties": {
            "byteItem": {
              "id": "GooglePrivacyDlpV2ByteContentItem",
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "byte",
                  "description": "Content data to inspect or redact."
                },
                "type": {
                  "enum": [
                    "BYTES_TYPE_UNSPECIFIED",
                    "IMAGE",
                    "IMAGE_JPEG",
                    "IMAGE_BMP",
                    "IMAGE_PNG",
                    "IMAGE_SVG",
                    "TEXT_UTF8",
                    "WORD_DOCUMENT",
                    "PDF",
                    "AVRO",
                    "CSV",
                    "TSV"
                  ],
                  "type": "string",
                  "description": "The type of data stored in the bytes string. Default will be TEXT_UTF8.",
                  "enumDescriptions": [
                    "Unused",
                    "Any image type.",
                    "jpeg",
                    "bmp",
                    "png",
                    "svg",
                    "plain text",
                    "docx, docm, dotx, dotm",
                    "pdf",
                    "avro",
                    "csv",
                    "tsv"
                  ]
                }
              },
              "description": "The content must be PNG, JPEG, SVG or BMP."
            },
            "locationId": {
              "type": "string",
              "description": "Deprecated. This field has no effect."
            },
            "inspectConfig": {
              "id": "GooglePrivacyDlpV2InspectConfig",
              "type": "object",
              "properties": {
                "limits": {
                  "id": "GooglePrivacyDlpV2FindingLimits",
                  "type": "object",
                  "properties": {
                    "maxFindingsPerItem": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Max number of findings that will be returned for each item scanned. When set within `InspectJobConfig`, the maximum returned is 2000 regardless if this is set higher. When set within `InspectContentRequest`, this field is ignored."
                    },
                    "maxFindingsPerRequest": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Max number of findings that will be returned per request/job. When set within `InspectContentRequest`, the maximum returned is 2000 regardless if this is set higher."
                    },
                    "maxFindingsPerInfoType": {
                      "type": "array",
                      "items": {
                        "id": "GooglePrivacyDlpV2InfoTypeLimit",
                        "type": "object",
                        "properties": {
                          "infoType": {
                            "id": "GooglePrivacyDlpV2InfoType",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                              }
                            },
                            "description": "Type of information detected by the API."
                          },
                          "maxFindings": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Max findings limit for the given infoType."
                          }
                        },
                        "description": "Max findings configuration per infoType, per content item or long running DlpJob."
                      },
                      "description": "Configuration of findings limit given for specified infoTypes."
                    }
                  },
                  "description": "Configuration to control the number of findings returned."
                },
                "ruleSet": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2InspectionRuleSet",
                    "type": "object",
                    "properties": {
                      "rules": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2InspectionRule",
                          "type": "object",
                          "properties": {
                            "hotwordRule": {
                              "id": "GooglePrivacyDlpV2HotwordRule",
                              "type": "object",
                              "properties": {
                                "proximity": {
                                  "id": "GooglePrivacyDlpV2Proximity",
                                  "type": "object",
                                  "properties": {
                                    "windowAfter": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters after the finding to consider."
                                    },
                                    "windowBefore": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters before the finding to consider."
                                    }
                                  },
                                  "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                },
                                "hotwordRegex": {
                                  "id": "GooglePrivacyDlpV2Regex",
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string",
                                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                    },
                                    "groupIndexes": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                    }
                                  },
                                  "description": "Regular expression pattern defining what qualifies as a hotword."
                                },
                                "likelihoodAdjustment": {
                                  "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                  "type": "object",
                                  "properties": {
                                    "fixedLikelihood": {
                                      "enum": [
                                        "LIKELIHOOD_UNSPECIFIED",
                                        "VERY_UNLIKELY",
                                        "UNLIKELY",
                                        "POSSIBLE",
                                        "LIKELY",
                                        "VERY_LIKELY"
                                      ],
                                      "type": "string",
                                      "description": "Set the likelihood of a finding to a fixed value.",
                                      "enumDescriptions": [
                                        "Default value; same as POSSIBLE.",
                                        "Few matching elements.",
                                        "",
                                        "Some matching elements.",
                                        "",
                                        "Many matching elements."
                                      ]
                                    },
                                    "relativeLikelihood": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                    }
                                  },
                                  "description": "Likelihood adjustment to apply to all matching findings."
                                }
                              },
                              "description": "Hotword-based detection rule."
                            },
                            "exclusionRule": {
                              "id": "GooglePrivacyDlpV2ExclusionRule",
                              "type": "object",
                              "properties": {
                                "regex": {
                                  "id": "GooglePrivacyDlpV2Regex",
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string",
                                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                    },
                                    "groupIndexes": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                    }
                                  },
                                  "description": "Regular expression which defines the rule."
                                },
                                "dictionary": {
                                  "id": "GooglePrivacyDlpV2Dictionary",
                                  "type": "object",
                                  "properties": {
                                    "wordList": {
                                      "id": "GooglePrivacyDlpV2WordList",
                                      "type": "object",
                                      "properties": {
                                        "words": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                        }
                                      },
                                      "description": "List of words or phrases to search for."
                                    },
                                    "cloudStoragePath": {
                                      "id": "GooglePrivacyDlpV2CloudStoragePath",
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string",
                                          "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                        }
                                      },
                                      "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                                    }
                                  },
                                  "description": "Dictionary which defines the rule."
                                },
                                "matchingType": {
                                  "enum": [
                                    "MATCHING_TYPE_UNSPECIFIED",
                                    "MATCHING_TYPE_FULL_MATCH",
                                    "MATCHING_TYPE_PARTIAL_MATCH",
                                    "MATCHING_TYPE_INVERSE_MATCH"
                                  ],
                                  "type": "string",
                                  "description": "How the rule is applied, see MatchingType documentation for details.",
                                  "enumDescriptions": [
                                    "Invalid.",
                                    "Full match. - Dictionary: join of Dictionary results matched complete finding quote - Regex: all regex matches fill a finding quote start to end - Exclude info type: completely inside affecting info types findings",
                                    "Partial match. - Dictionary: at least one of the tokens in the finding matches - Regex: substring of the finding matches - Exclude info type: intersects with affecting info types findings",
                                    "Inverse match. - Dictionary: no tokens in the finding match the dictionary - Regex: finding doesn't match the regex - Exclude info type: no intersection with affecting info types findings"
                                  ]
                                },
                                "excludeInfoTypes": {
                                  "id": "GooglePrivacyDlpV2ExcludeInfoTypes",
                                  "type": "object",
                                  "properties": {
                                    "infoTypes": {
                                      "type": "array",
                                      "items": {
                                        "id": "GooglePrivacyDlpV2InfoType",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                          }
                                        },
                                        "description": "Type of information detected by the API."
                                      },
                                      "description": "InfoType list in ExclusionRule rule drops a finding when it overlaps or contained within with a finding of an infoType from this list. For example, for `InspectionRuleSet.info_types` containing \"PHONE_NUMBER\"` and `exclusion_rule` containing `exclude_info_types.info_types` with \"EMAIL_ADDRESS\" the phone number findings are dropped if they overlap with EMAIL_ADDRESS finding. That leads to \"555-222-2222@example.org\" to generate only a single finding, namely email address."
                                    }
                                  },
                                  "description": "Set of infoTypes for which findings would affect this rule."
                                }
                              },
                              "description": "Exclusion rule."
                            }
                          },
                          "description": "A single inspection rule to be applied to infoTypes, specified in `InspectionRuleSet`."
                        },
                        "description": "Set of rules to be applied to infoTypes. The rules are applied in order."
                      },
                      "infoTypes": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2InfoType",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                            }
                          },
                          "description": "Type of information detected by the API."
                        },
                        "description": "List of infoTypes this rule set is applied to."
                      }
                    },
                    "description": "Rule set for modifying a set of infoTypes to alter behavior under certain circumstances, depending on the specific details of the rules within the set."
                  },
                  "description": "Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type."
                },
                "infoTypes": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2InfoType",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                      }
                    },
                    "description": "Type of information detected by the API."
                  },
                  "description": "Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/dlp/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time."
                },
                "includeQuote": {
                  "type": "boolean",
                  "description": "When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote."
                },
                "minLikelihood": {
                  "enum": [
                    "LIKELIHOOD_UNSPECIFIED",
                    "VERY_UNLIKELY",
                    "UNLIKELY",
                    "POSSIBLE",
                    "LIKELY",
                    "VERY_LIKELY"
                  ],
                  "type": "string",
                  "description": "Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more.",
                  "enumDescriptions": [
                    "Default value; same as POSSIBLE.",
                    "Few matching elements.",
                    "",
                    "Some matching elements.",
                    "",
                    "Many matching elements."
                  ]
                },
                "contentOptions": {
                  "type": "array",
                  "items": {
                    "enum": [
                      "CONTENT_UNSPECIFIED",
                      "CONTENT_TEXT",
                      "CONTENT_IMAGE"
                    ],
                    "type": "string",
                    "enumDescriptions": [
                      "Includes entire content of a file or a data stream.",
                      "Text content within the data, excluding any metadata.",
                      "Images found in the data."
                    ]
                  },
                  "description": "List of options defining data content to scan. If empty, text, images, and other content will be included."
                },
                "customInfoTypes": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2CustomInfoType",
                    "type": "object",
                    "properties": {
                      "regex": {
                        "id": "GooglePrivacyDlpV2Regex",
                        "type": "object",
                        "properties": {
                          "pattern": {
                            "type": "string",
                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                          },
                          "groupIndexes": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                          }
                        },
                        "description": "Regular expression based CustomInfoType."
                      },
                      "infoType": {
                        "id": "GooglePrivacyDlpV2InfoType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                          }
                        },
                        "description": "Type of information detected by the API."
                      },
                      "dictionary": {
                        "id": "GooglePrivacyDlpV2Dictionary",
                        "type": "object",
                        "properties": {
                          "wordList": {
                            "id": "GooglePrivacyDlpV2WordList",
                            "type": "object",
                            "properties": {
                              "words": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                              }
                            },
                            "description": "List of words or phrases to search for."
                          },
                          "cloudStoragePath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                          }
                        },
                        "description": "A list of phrases to detect as a CustomInfoType."
                      },
                      "likelihood": {
                        "enum": [
                          "LIKELIHOOD_UNSPECIFIED",
                          "VERY_UNLIKELY",
                          "UNLIKELY",
                          "POSSIBLE",
                          "LIKELY",
                          "VERY_LIKELY"
                        ],
                        "type": "string",
                        "description": "Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not specified.",
                        "enumDescriptions": [
                          "Default value; same as POSSIBLE.",
                          "Few matching elements.",
                          "",
                          "Some matching elements.",
                          "",
                          "Many matching elements."
                        ]
                      },
                      "storedType": {
                        "id": "GooglePrivacyDlpV2StoredType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Resource name of the requested `StoredInfoType`, for example `organizations/433245324/storedInfoTypes/432452342` or `projects/project-id/storedInfoTypes/432452342`."
                          },
                          "createTime": {
                            "type": "string",
                            "format": "google-datetime",
                            "description": "Timestamp indicating when the version of the `StoredInfoType` used for inspection was created. Output-only field, populated by the system."
                          }
                        },
                        "description": "Load an existing `StoredInfoType` resource for use in `InspectDataSource`. Not currently supported in `InspectContent`."
                      },
                      "exclusionType": {
                        "enum": [
                          "EXCLUSION_TYPE_UNSPECIFIED",
                          "EXCLUSION_TYPE_EXCLUDE"
                        ],
                        "type": "string",
                        "description": "If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching.",
                        "enumDescriptions": [
                          "A finding of this custom info type will not be excluded from results.",
                          "A finding of this custom info type will be excluded from final results, but can still affect rule execution."
                        ]
                      },
                      "surrogateType": {
                        "id": "GooglePrivacyDlpV2SurrogateType",
                        "type": "object",
                        "properties": {},
                        "description": "Message for detecting output from deidentification transformations that support reversing."
                      },
                      "detectionRules": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2DetectionRule",
                          "type": "object",
                          "properties": {
                            "hotwordRule": {
                              "id": "GooglePrivacyDlpV2HotwordRule",
                              "type": "object",
                              "properties": {
                                "proximity": {
                                  "id": "GooglePrivacyDlpV2Proximity",
                                  "type": "object",
                                  "properties": {
                                    "windowAfter": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters after the finding to consider."
                                    },
                                    "windowBefore": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters before the finding to consider."
                                    }
                                  },
                                  "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                },
                                "hotwordRegex": {
                                  "id": "GooglePrivacyDlpV2Regex",
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string",
                                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                    },
                                    "groupIndexes": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                    }
                                  },
                                  "description": "Regular expression pattern defining what qualifies as a hotword."
                                },
                                "likelihoodAdjustment": {
                                  "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                  "type": "object",
                                  "properties": {
                                    "fixedLikelihood": {
                                      "enum": [
                                        "LIKELIHOOD_UNSPECIFIED",
                                        "VERY_UNLIKELY",
                                        "UNLIKELY",
                                        "POSSIBLE",
                                        "LIKELY",
                                        "VERY_LIKELY"
                                      ],
                                      "type": "string",
                                      "description": "Set the likelihood of a finding to a fixed value.",
                                      "enumDescriptions": [
                                        "Default value; same as POSSIBLE.",
                                        "Few matching elements.",
                                        "",
                                        "Some matching elements.",
                                        "",
                                        "Many matching elements."
                                      ]
                                    },
                                    "relativeLikelihood": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                    }
                                  },
                                  "description": "Likelihood adjustment to apply to all matching findings."
                                }
                              },
                              "description": "Hotword-based detection rule."
                            }
                          },
                          "description": "Deprecated; use `InspectionRuleSet` instead. Rule for modifying a `CustomInfoType` to alter behavior under certain circumstances, depending on the specific details of the rule. Not supported for the `surrogate_type` custom infoType."
                        },
                        "description": "Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in order that they are specified. Not supported for the `surrogate_type` CustomInfoType."
                      }
                    },
                    "description": "Custom information type provided by the user. Used to find domain-specific sensitive information configurable to the data in question."
                  },
                  "description": "CustomInfoTypes provided by the user. See https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more."
                },
                "excludeInfoTypes": {
                  "type": "boolean",
                  "description": "When true, excludes type information of the findings."
                }
              },
              "description": "Configuration for the inspector."
            },
            "includeFindings": {
              "type": "boolean",
              "description": "Whether the response should include findings along with the redacted image."
            },
            "imageRedactionConfigs": {
              "type": "array",
              "items": {
                "id": "GooglePrivacyDlpV2ImageRedactionConfig",
                "type": "object",
                "properties": {
                  "infoType": {
                    "id": "GooglePrivacyDlpV2InfoType",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                      }
                    },
                    "description": "Type of information detected by the API."
                  },
                  "redactAllText": {
                    "type": "boolean",
                    "description": "If true, all text found in the image, regardless whether it matches an info_type, is redacted. Only one should be provided."
                  },
                  "redactionColor": {
                    "id": "GooglePrivacyDlpV2Color",
                    "type": "object",
                    "properties": {
                      "red": {
                        "type": "number",
                        "format": "float",
                        "description": "The amount of red in the color as a value in the interval [0, 1]."
                      },
                      "blue": {
                        "type": "number",
                        "format": "float",
                        "description": "The amount of blue in the color as a value in the interval [0, 1]."
                      },
                      "green": {
                        "type": "number",
                        "format": "float",
                        "description": "The amount of green in the color as a value in the interval [0, 1]."
                      }
                    },
                    "description": "The color to use when redacting content from an image. If not specified, the default is black."
                  }
                },
                "description": "Configuration for determining how redaction of images should occur."
              },
              "description": "The configuration for specifying what content to redact from images."
            }
          },
          "description": "Request to search for potentially sensitive info in an image and redact it by covering it with a colored rectangle."
        }
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2RedactImageResponse",
          "type": "object",
          "properties": {
            "extractedText": {
              "type": "string",
              "description": "If an image was being inspected and the InspectConfig's include_quote was set to true, then this field will include all text, if any, that was found in the image."
            },
            "inspectResult": {
              "id": "GooglePrivacyDlpV2InspectResult",
              "type": "object",
              "properties": {
                "findings": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2Finding",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Resource name in format projects/{project}/locations/{location}/findings/{finding} Populated only when viewing persisted findings."
                      },
                      "quote": {
                        "type": "string",
                        "description": "The content that was found. Even if the content is not textual, it may be converted to a textual representation here. Provided if `include_quote` is true and the finding is less than or equal to 4096 bytes long. If the finding exceeds 4096 bytes in length, the quote may be omitted."
                      },
                      "labels": {
                        "type": "object",
                        "description": "The labels associated with this `Finding`. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples: * `\"environment\" : \"production\"` * `\"pipeline\" : \"etl\"`",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "jobName": {
                        "type": "string",
                        "description": "The job that stored the finding."
                      },
                      "infoType": {
                        "id": "GooglePrivacyDlpV2InfoType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                          }
                        },
                        "description": "Type of information detected by the API."
                      },
                      "location": {
                        "id": "GooglePrivacyDlpV2Location",
                        "type": "object",
                        "properties": {
                          "byteRange": {
                            "id": "GooglePrivacyDlpV2Range",
                            "type": "object",
                            "properties": {
                              "end": {
                                "type": "string",
                                "format": "int64",
                                "description": "Index of the last character of the range (exclusive)."
                              },
                              "start": {
                                "type": "string",
                                "format": "int64",
                                "description": "Index of the first character of the range (inclusive)."
                              }
                            },
                            "description": "Zero-based byte offsets delimiting the finding. These are relative to the finding's containing element. Note that when the content is not textual, this references the UTF-8 encoded textual representation of the content. Omitted if content is an image."
                          },
                          "container": {
                            "id": "GooglePrivacyDlpV2Container",
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Container type, for example BigQuery or Google Cloud Storage."
                              },
                              "version": {
                                "type": "string",
                                "description": "Findings container version, if available (\"generation\" for Google Cloud Storage)."
                              },
                              "fullPath": {
                                "type": "string",
                                "description": "A string representation of the full container name. Examples: - BigQuery: 'Project:DataSetId.TableId' - Google Cloud Storage: 'gs://Bucket/folders/filename.txt'"
                              },
                              "rootPath": {
                                "type": "string",
                                "description": "The root of the container. Examples: - For BigQuery table `project_id:dataset_id.table_id`, the root is `dataset_id` - For Google Cloud Storage file `gs://bucket/folder/filename.txt`, the root is `gs://bucket`"
                              },
                              "projectId": {
                                "type": "string",
                                "description": "Project where the finding was found. Can be different from the project that owns the finding."
                              },
                              "updateTime": {
                                "type": "string",
                                "format": "google-datetime",
                                "description": "Findings container modification timestamp, if applicable. For Google Cloud Storage contains last file modification timestamp. For BigQuery table contains last_modified_time property. For Datastore - not populated."
                              },
                              "relativePath": {
                                "type": "string",
                                "description": "The rest of the path after the root. Examples: - For BigQuery table `project_id:dataset_id.table_id`, the relative path is `table_id` - Google Cloud Storage file `gs://bucket/folder/filename.txt`, the relative path is `folder/filename.txt`"
                              }
                            },
                            "description": "Information about the container where this finding occurred, if available."
                          },
                          "codepointRange": {
                            "id": "GooglePrivacyDlpV2Range",
                            "type": "object",
                            "properties": {
                              "end": {
                                "type": "string",
                                "format": "int64",
                                "description": "Index of the last character of the range (exclusive)."
                              },
                              "start": {
                                "type": "string",
                                "format": "int64",
                                "description": "Index of the first character of the range (inclusive)."
                              }
                            },
                            "description": "Unicode character offsets delimiting the finding. These are relative to the finding's containing element. Provided when the content is text."
                          },
                          "contentLocations": {
                            "type": "array",
                            "items": {
                              "id": "GooglePrivacyDlpV2ContentLocation",
                              "type": "object",
                              "properties": {
                                "containerName": {
                                  "type": "string",
                                  "description": "Name of the container where the finding is located. The top level name is the source file name or table name. Names of some common storage containers are formatted as follows: * BigQuery tables: `{project_id}:{dataset_id}.{table_id}` * Cloud Storage files: `gs://{bucket}/{path}` * Datastore namespace: {namespace} Nested names could be absent if the embedded object has no string identifier (for an example an image contained within a document)."
                                },
                                "imageLocation": {
                                  "id": "GooglePrivacyDlpV2ImageLocation",
                                  "type": "object",
                                  "properties": {
                                    "boundingBoxes": {
                                      "type": "array",
                                      "items": {
                                        "id": "GooglePrivacyDlpV2BoundingBox",
                                        "type": "object",
                                        "properties": {
                                          "top": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Top coordinate of the bounding box. (0,0) is upper left."
                                          },
                                          "left": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Left coordinate of the bounding box. (0,0) is upper left."
                                          },
                                          "width": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Width of the bounding box in pixels."
                                          },
                                          "height": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Height of the bounding box in pixels."
                                          }
                                        },
                                        "description": "Bounding box encompassing detected text within an image."
                                      },
                                      "description": "Bounding boxes locating the pixels within the image containing the finding."
                                    }
                                  },
                                  "description": "Location within an image's pixels."
                                },
                                "recordLocation": {
                                  "id": "GooglePrivacyDlpV2RecordLocation",
                                  "type": "object",
                                  "properties": {
                                    "fieldId": {
                                      "id": "GooglePrivacyDlpV2FieldId",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Name describing the field."
                                        }
                                      },
                                      "description": "General identifier of a data field in a storage service."
                                    },
                                    "recordKey": {
                                      "id": "GooglePrivacyDlpV2RecordKey",
                                      "type": "object",
                                      "properties": {
                                        "idValues": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "Values of identifying columns in the given row. Order of values matches the order of `identifying_fields` specified in the scanning request."
                                        },
                                        "bigQueryKey": {
                                          "id": "GooglePrivacyDlpV2BigQueryKey",
                                          "type": "object",
                                          "properties": {
                                            "rowNumber": {
                                              "type": "string",
                                              "format": "int64",
                                              "description": "Row number inferred at the time the table was scanned. This value is nondeterministic, cannot be queried, and may be null for inspection jobs. To locate findings within a table, specify `inspect_job.storage_config.big_query_options.identifying_fields` in `CreateDlpJobRequest`."
                                            },
                                            "tableReference": {
                                              "id": "GooglePrivacyDlpV2BigQueryTable",
                                              "type": "object",
                                              "properties": {
                                                "tableId": {
                                                  "type": "string",
                                                  "description": "Name of the table."
                                                },
                                                "datasetId": {
                                                  "type": "string",
                                                  "description": "Dataset ID of the table."
                                                },
                                                "projectId": {
                                                  "type": "string",
                                                  "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                                }
                                              },
                                              "description": "Complete BigQuery table reference."
                                            }
                                          },
                                          "description": "Row key for identifying a record in BigQuery table."
                                        },
                                        "datastoreKey": {
                                          "id": "GooglePrivacyDlpV2DatastoreKey",
                                          "type": "object",
                                          "properties": {
                                            "entityKey": {
                                              "id": "GooglePrivacyDlpV2Key",
                                              "type": "object",
                                              "properties": {
                                                "path": {
                                                  "type": "array",
                                                  "items": {
                                                    "id": "GooglePrivacyDlpV2PathElement",
                                                    "type": "object",
                                                    "properties": {
                                                      "id": {
                                                        "type": "string",
                                                        "format": "int64",
                                                        "description": "The auto-allocated ID of the entity. Never equal to zero. Values less than zero are discouraged and may not be supported in the future."
                                                      },
                                                      "kind": {
                                                        "type": "string",
                                                        "description": "The kind of the entity. A kind matching regex `__.*__` is reserved/read-only. A kind must not contain more than 1500 bytes when UTF-8 encoded. Cannot be `\"\"`."
                                                      },
                                                      "name": {
                                                        "type": "string",
                                                        "description": "The name of the entity. A name matching regex `__.*__` is reserved/read-only. A name must not be more than 1500 bytes when UTF-8 encoded. Cannot be `\"\"`."
                                                      }
                                                    },
                                                    "description": "A (kind, ID/name) pair used to construct a key path. If either name or ID is set, the element is complete. If neither is set, the element is incomplete."
                                                  },
                                                  "description": "The entity path. An entity path consists of one or more elements composed of a kind and a string or numerical identifier, which identify entities. The first element identifies a _root entity_, the second element identifies a _child_ of the root entity, the third element identifies a child of the second entity, and so forth. The entities identified by all prefixes of the path are called the element's _ancestors_. A path can never be empty, and a path can have at most 100 elements."
                                                },
                                                "partitionId": {
                                                  "id": "GooglePrivacyDlpV2PartitionId",
                                                  "type": "object",
                                                  "properties": {
                                                    "projectId": {
                                                      "type": "string",
                                                      "description": "The ID of the project to which the entities belong."
                                                    },
                                                    "namespaceId": {
                                                      "type": "string",
                                                      "description": "If not empty, the ID of the namespace to which the entities belong."
                                                    }
                                                  },
                                                  "description": "Entities are partitioned into subsets, currently identified by a project ID and namespace ID. Queries are scoped to a single partition."
                                                }
                                              },
                                              "description": "Datastore entity key."
                                            }
                                          },
                                          "description": "Record key for a finding in Cloud Datastore."
                                        }
                                      },
                                      "description": "Key of the finding."
                                    },
                                    "tableLocation": {
                                      "id": "GooglePrivacyDlpV2TableLocation",
                                      "type": "object",
                                      "properties": {
                                        "rowIndex": {
                                          "type": "string",
                                          "format": "int64",
                                          "description": "The zero-based index of the row where the finding is located. Only populated for resources that have a natural ordering, not BigQuery. In BigQuery, to identify the row a finding came from, populate BigQueryOptions.identifying_fields with your primary key column names and when you store the findings the value of those columns will be stored inside of Finding."
                                        }
                                      },
                                      "description": "Location within a `ContentItem.Table`."
                                    }
                                  },
                                  "description": "Location within a row or record of a database table."
                                },
                                "containerVersion": {
                                  "type": "string",
                                  "description": "Findings container version, if available (\"generation\" for Google Cloud Storage)."
                                },
                                "documentLocation": {
                                  "id": "GooglePrivacyDlpV2DocumentLocation",
                                  "type": "object",
                                  "properties": {
                                    "fileOffset": {
                                      "type": "string",
                                      "format": "int64",
                                      "description": "Offset of the line, from the beginning of the file, where the finding is located."
                                    }
                                  },
                                  "description": "Location data for document files."
                                },
                                "metadataLocation": {
                                  "id": "GooglePrivacyDlpV2MetadataLocation",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "enum": [
                                        "METADATATYPE_UNSPECIFIED",
                                        "STORAGE_METADATA"
                                      ],
                                      "type": "string",
                                      "description": "Type of metadata containing the finding.",
                                      "enumDescriptions": [
                                        "Unused",
                                        "General file metadata provided by Cloud Storage."
                                      ]
                                    },
                                    "storageLabel": {
                                      "id": "GooglePrivacyDlpV2StorageMetadataLabel",
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        }
                                      },
                                      "description": "Storage metadata."
                                    }
                                  },
                                  "description": "Location within the metadata for inspected content."
                                },
                                "containerTimestamp": {
                                  "type": "string",
                                  "format": "google-datetime",
                                  "description": "Findings container modification timestamp, if applicable. For Google Cloud Storage contains last file modification timestamp. For BigQuery table contains last_modified_time property. For Datastore - not populated."
                                }
                              },
                              "description": "Precise location of the finding within a document, record, image, or metadata container."
                            },
                            "description": "List of nested objects pointing to the precise location of the finding within the file or record."
                          }
                        },
                        "description": "Where the content was found."
                      },
                      "findingId": {
                        "type": "string",
                        "description": "The unique finding id."
                      },
                      "quoteInfo": {
                        "id": "GooglePrivacyDlpV2QuoteInfo",
                        "type": "object",
                        "properties": {
                          "dateTime": {
                            "id": "GooglePrivacyDlpV2DateTime",
                            "type": "object",
                            "properties": {
                              "date": {
                                "id": "GoogleTypeDate",
                                "type": "object",
                                "properties": {
                                  "day": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
                                  },
                                  "year": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
                                  },
                                  "month": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
                                  }
                                },
                                "description": "One or more of the following must be set. Must be a valid date or time value."
                              },
                              "time": {
                                "id": "GoogleTypeTimeOfDay",
                                "type": "object",
                                "properties": {
                                  "hours": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time."
                                  },
                                  "nanos": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999."
                                  },
                                  "minutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Minutes of hour of day. Must be from 0 to 59."
                                  },
                                  "seconds": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds."
                                  }
                                },
                                "description": "Time of day"
                              },
                              "timeZone": {
                                "id": "GooglePrivacyDlpV2TimeZone",
                                "type": "object",
                                "properties": {
                                  "offsetMinutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Set only if the offset can be determined. Positive for time ahead of UTC. E.g. For \"UTC-9\", this value is -540."
                                  }
                                },
                                "description": "Time zone"
                              },
                              "dayOfWeek": {
                                "enum": [
                                  "DAY_OF_WEEK_UNSPECIFIED",
                                  "MONDAY",
                                  "TUESDAY",
                                  "WEDNESDAY",
                                  "THURSDAY",
                                  "FRIDAY",
                                  "SATURDAY",
                                  "SUNDAY"
                                ],
                                "type": "string",
                                "description": "Day of week",
                                "enumDescriptions": [
                                  "The day of the week is unspecified.",
                                  "Monday",
                                  "Tuesday",
                                  "Wednesday",
                                  "Thursday",
                                  "Friday",
                                  "Saturday",
                                  "Sunday"
                                ]
                              }
                            },
                            "description": "The date time indicated by the quote."
                          }
                        },
                        "description": "Contains data parsed from quotes. Only populated if include_quote was set to true and a supported infoType was requested. Currently supported infoTypes: DATE, DATE_OF_BIRTH and TIME."
                      },
                      "createTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "Timestamp when finding was detected."
                      },
                      "likelihood": {
                        "enum": [
                          "LIKELIHOOD_UNSPECIFIED",
                          "VERY_UNLIKELY",
                          "UNLIKELY",
                          "POSSIBLE",
                          "LIKELY",
                          "VERY_LIKELY"
                        ],
                        "type": "string",
                        "description": "Confidence of how likely it is that the `info_type` is correct.",
                        "enumDescriptions": [
                          "Default value; same as POSSIBLE.",
                          "Few matching elements.",
                          "",
                          "Some matching elements.",
                          "",
                          "Many matching elements."
                        ]
                      },
                      "triggerName": {
                        "type": "string",
                        "description": "Job trigger name, if applicable, for this finding."
                      },
                      "resourceName": {
                        "type": "string",
                        "description": "The job that stored the finding."
                      },
                      "jobCreateTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "Time the job started that produced this finding."
                      }
                    },
                    "description": "Represents a piece of potentially sensitive content."
                  },
                  "description": "List of findings for an item."
                },
                "findingsTruncated": {
                  "type": "boolean",
                  "description": "If true, then this item might have more findings than were returned, and the findings returned are an arbitrary subset of all findings. The findings list might be truncated because the input items were too large, or because the server reached the maximum amount of resources allowed for a single API call. For best results, divide the input into smaller batches."
                }
              },
              "description": "The findings. Populated when include_findings in the request is true."
            },
            "redactedImage": {
              "type": "string",
              "format": "byte",
              "description": "The redacted image. The type will be the same as the original image."
            }
          },
          "description": "Results of redacting an image."
        }
      ]
  projects.inspectTemplates.create:
    description: |-
      Creates an InspectTemplate for re-using frequently used configuration for inspecting content, images, and storage. See https://cloud.google.com/dlp/docs/creating-templates to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.inspectTemplates/create
    example:
      inputs: [
        {
          "id": "GooglePrivacyDlpV2CreateInspectTemplateRequest",
          "type": "object",
          "properties": {
            "locationId": {
              "type": "string",
              "description": "Deprecated. This field has no effect."
            },
            "templateId": {
              "type": "string",
              "description": "The template id can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one."
            },
            "inspectTemplate": {
              "id": "GooglePrivacyDlpV2InspectTemplate",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. The template name. The template will have one of the following formats: `projects/PROJECT_ID/inspectTemplates/TEMPLATE_ID` OR `organizations/ORGANIZATION_ID/inspectTemplates/TEMPLATE_ID`;"
                },
                "createTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "readOnly": true,
                  "description": "Output only. The creation timestamp of an inspectTemplate."
                },
                "updateTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "readOnly": true,
                  "description": "Output only. The last update timestamp of an inspectTemplate."
                },
                "description": {
                  "type": "string",
                  "description": "Short description (max 256 chars)."
                },
                "displayName": {
                  "type": "string",
                  "description": "Display name (max 256 chars)."
                },
                "inspectConfig": {
                  "id": "GooglePrivacyDlpV2InspectConfig",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "id": "GooglePrivacyDlpV2FindingLimits",
                      "type": "object",
                      "properties": {
                        "maxFindingsPerItem": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Max number of findings that will be returned for each item scanned. When set within `InspectJobConfig`, the maximum returned is 2000 regardless if this is set higher. When set within `InspectContentRequest`, this field is ignored."
                        },
                        "maxFindingsPerRequest": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Max number of findings that will be returned per request/job. When set within `InspectContentRequest`, the maximum returned is 2000 regardless if this is set higher."
                        },
                        "maxFindingsPerInfoType": {
                          "type": "array",
                          "items": {
                            "id": "GooglePrivacyDlpV2InfoTypeLimit",
                            "type": "object",
                            "properties": {
                              "infoType": {
                                "id": "GooglePrivacyDlpV2InfoType",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                  }
                                },
                                "description": "Type of information detected by the API."
                              },
                              "maxFindings": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Max findings limit for the given infoType."
                              }
                            },
                            "description": "Max findings configuration per infoType, per content item or long running DlpJob."
                          },
                          "description": "Configuration of findings limit given for specified infoTypes."
                        }
                      },
                      "description": "Configuration to control the number of findings returned."
                    },
                    "ruleSet": {
                      "type": "array",
                      "items": {
                        "id": "GooglePrivacyDlpV2InspectionRuleSet",
                        "type": "object",
                        "properties": {
                          "rules": {
                            "type": "array",
                            "items": {
                              "id": "GooglePrivacyDlpV2InspectionRule",
                              "type": "object",
                              "properties": {
                                "hotwordRule": {
                                  "id": "GooglePrivacyDlpV2HotwordRule",
                                  "type": "object",
                                  "properties": {
                                    "proximity": {
                                      "id": "GooglePrivacyDlpV2Proximity",
                                      "type": "object",
                                      "properties": {
                                        "windowAfter": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Number of characters after the finding to consider."
                                        },
                                        "windowBefore": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Number of characters before the finding to consider."
                                        }
                                      },
                                      "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                    },
                                    "hotwordRegex": {
                                      "id": "GooglePrivacyDlpV2Regex",
                                      "type": "object",
                                      "properties": {
                                        "pattern": {
                                          "type": "string",
                                          "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                        },
                                        "groupIndexes": {
                                          "type": "array",
                                          "items": {
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                        }
                                      },
                                      "description": "Regular expression pattern defining what qualifies as a hotword."
                                    },
                                    "likelihoodAdjustment": {
                                      "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                      "type": "object",
                                      "properties": {
                                        "fixedLikelihood": {
                                          "enum": [
                                            "LIKELIHOOD_UNSPECIFIED",
                                            "VERY_UNLIKELY",
                                            "UNLIKELY",
                                            "POSSIBLE",
                                            "LIKELY",
                                            "VERY_LIKELY"
                                          ],
                                          "type": "string",
                                          "description": "Set the likelihood of a finding to a fixed value.",
                                          "enumDescriptions": [
                                            "Default value; same as POSSIBLE.",
                                            "Few matching elements.",
                                            "",
                                            "Some matching elements.",
                                            "",
                                            "Many matching elements."
                                          ]
                                        },
                                        "relativeLikelihood": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                        }
                                      },
                                      "description": "Likelihood adjustment to apply to all matching findings."
                                    }
                                  },
                                  "description": "Hotword-based detection rule."
                                },
                                "exclusionRule": {
                                  "id": "GooglePrivacyDlpV2ExclusionRule",
                                  "type": "object",
                                  "properties": {
                                    "regex": {
                                      "id": "GooglePrivacyDlpV2Regex",
                                      "type": "object",
                                      "properties": {
                                        "pattern": {
                                          "type": "string",
                                          "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                        },
                                        "groupIndexes": {
                                          "type": "array",
                                          "items": {
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                        }
                                      },
                                      "description": "Regular expression which defines the rule."
                                    },
                                    "dictionary": {
                                      "id": "GooglePrivacyDlpV2Dictionary",
                                      "type": "object",
                                      "properties": {
                                        "wordList": {
                                          "id": "GooglePrivacyDlpV2WordList",
                                          "type": "object",
                                          "properties": {
                                            "words": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                            }
                                          },
                                          "description": "List of words or phrases to search for."
                                        },
                                        "cloudStoragePath": {
                                          "id": "GooglePrivacyDlpV2CloudStoragePath",
                                          "type": "object",
                                          "properties": {
                                            "path": {
                                              "type": "string",
                                              "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                            }
                                          },
                                          "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                                        }
                                      },
                                      "description": "Dictionary which defines the rule."
                                    },
                                    "matchingType": {
                                      "enum": [
                                        "MATCHING_TYPE_UNSPECIFIED",
                                        "MATCHING_TYPE_FULL_MATCH",
                                        "MATCHING_TYPE_PARTIAL_MATCH",
                                        "MATCHING_TYPE_INVERSE_MATCH"
                                      ],
                                      "type": "string",
                                      "description": "How the rule is applied, see MatchingType documentation for details.",
                                      "enumDescriptions": [
                                        "Invalid.",
                                        "Full match. - Dictionary: join of Dictionary results matched complete finding quote - Regex: all regex matches fill a finding quote start to end - Exclude info type: completely inside affecting info types findings",
                                        "Partial match. - Dictionary: at least one of the tokens in the finding matches - Regex: substring of the finding matches - Exclude info type: intersects with affecting info types findings",
                                        "Inverse match. - Dictionary: no tokens in the finding match the dictionary - Regex: finding doesn't match the regex - Exclude info type: no intersection with affecting info types findings"
                                      ]
                                    },
                                    "excludeInfoTypes": {
                                      "id": "GooglePrivacyDlpV2ExcludeInfoTypes",
                                      "type": "object",
                                      "properties": {
                                        "infoTypes": {
                                          "type": "array",
                                          "items": {
                                            "id": "GooglePrivacyDlpV2InfoType",
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                              }
                                            },
                                            "description": "Type of information detected by the API."
                                          },
                                          "description": "InfoType list in ExclusionRule rule drops a finding when it overlaps or contained within with a finding of an infoType from this list. For example, for `InspectionRuleSet.info_types` containing \"PHONE_NUMBER\"` and `exclusion_rule` containing `exclude_info_types.info_types` with \"EMAIL_ADDRESS\" the phone number findings are dropped if they overlap with EMAIL_ADDRESS finding. That leads to \"555-222-2222@example.org\" to generate only a single finding, namely email address."
                                        }
                                      },
                                      "description": "Set of infoTypes for which findings would affect this rule."
                                    }
                                  },
                                  "description": "Exclusion rule."
                                }
                              },
                              "description": "A single inspection rule to be applied to infoTypes, specified in `InspectionRuleSet`."
                            },
                            "description": "Set of rules to be applied to infoTypes. The rules are applied in order."
                          },
                          "infoTypes": {
                            "type": "array",
                            "items": {
                              "id": "GooglePrivacyDlpV2InfoType",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                }
                              },
                              "description": "Type of information detected by the API."
                            },
                            "description": "List of infoTypes this rule set is applied to."
                          }
                        },
                        "description": "Rule set for modifying a set of infoTypes to alter behavior under certain circumstances, depending on the specific details of the rules within the set."
                      },
                      "description": "Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type."
                    },
                    "infoTypes": {
                      "type": "array",
                      "items": {
                        "id": "GooglePrivacyDlpV2InfoType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                          }
                        },
                        "description": "Type of information detected by the API."
                      },
                      "description": "Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/dlp/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time."
                    },
                    "includeQuote": {
                      "type": "boolean",
                      "description": "When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote."
                    },
                    "minLikelihood": {
                      "enum": [
                        "LIKELIHOOD_UNSPECIFIED",
                        "VERY_UNLIKELY",
                        "UNLIKELY",
                        "POSSIBLE",
                        "LIKELY",
                        "VERY_LIKELY"
                      ],
                      "type": "string",
                      "description": "Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more.",
                      "enumDescriptions": [
                        "Default value; same as POSSIBLE.",
                        "Few matching elements.",
                        "",
                        "Some matching elements.",
                        "",
                        "Many matching elements."
                      ]
                    },
                    "contentOptions": {
                      "type": "array",
                      "items": {
                        "enum": [
                          "CONTENT_UNSPECIFIED",
                          "CONTENT_TEXT",
                          "CONTENT_IMAGE"
                        ],
                        "type": "string",
                        "enumDescriptions": [
                          "Includes entire content of a file or a data stream.",
                          "Text content within the data, excluding any metadata.",
                          "Images found in the data."
                        ]
                      },
                      "description": "List of options defining data content to scan. If empty, text, images, and other content will be included."
                    },
                    "customInfoTypes": {
                      "type": "array",
                      "items": {
                        "id": "GooglePrivacyDlpV2CustomInfoType",
                        "type": "object",
                        "properties": {
                          "regex": {
                            "id": "GooglePrivacyDlpV2Regex",
                            "type": "object",
                            "properties": {
                              "pattern": {
                                "type": "string",
                                "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                              },
                              "groupIndexes": {
                                "type": "array",
                                "items": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                              }
                            },
                            "description": "Regular expression based CustomInfoType."
                          },
                          "infoType": {
                            "id": "GooglePrivacyDlpV2InfoType",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                              }
                            },
                            "description": "Type of information detected by the API."
                          },
                          "dictionary": {
                            "id": "GooglePrivacyDlpV2Dictionary",
                            "type": "object",
                            "properties": {
                              "wordList": {
                                "id": "GooglePrivacyDlpV2WordList",
                                "type": "object",
                                "properties": {
                                  "words": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                  }
                                },
                                "description": "List of words or phrases to search for."
                              },
                              "cloudStoragePath": {
                                "id": "GooglePrivacyDlpV2CloudStoragePath",
                                "type": "object",
                                "properties": {
                                  "path": {
                                    "type": "string",
                                    "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                  }
                                },
                                "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                              }
                            },
                            "description": "A list of phrases to detect as a CustomInfoType."
                          },
                          "likelihood": {
                            "enum": [
                              "LIKELIHOOD_UNSPECIFIED",
                              "VERY_UNLIKELY",
                              "UNLIKELY",
                              "POSSIBLE",
                              "LIKELY",
                              "VERY_LIKELY"
                            ],
                            "type": "string",
                            "description": "Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not specified.",
                            "enumDescriptions": [
                              "Default value; same as POSSIBLE.",
                              "Few matching elements.",
                              "",
                              "Some matching elements.",
                              "",
                              "Many matching elements."
                            ]
                          },
                          "storedType": {
                            "id": "GooglePrivacyDlpV2StoredType",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Resource name of the requested `StoredInfoType`, for example `organizations/433245324/storedInfoTypes/432452342` or `projects/project-id/storedInfoTypes/432452342`."
                              },
                              "createTime": {
                                "type": "string",
                                "format": "google-datetime",
                                "description": "Timestamp indicating when the version of the `StoredInfoType` used for inspection was created. Output-only field, populated by the system."
                              }
                            },
                            "description": "Load an existing `StoredInfoType` resource for use in `InspectDataSource`. Not currently supported in `InspectContent`."
                          },
                          "exclusionType": {
                            "enum": [
                              "EXCLUSION_TYPE_UNSPECIFIED",
                              "EXCLUSION_TYPE_EXCLUDE"
                            ],
                            "type": "string",
                            "description": "If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching.",
                            "enumDescriptions": [
                              "A finding of this custom info type will not be excluded from results.",
                              "A finding of this custom info type will be excluded from final results, but can still affect rule execution."
                            ]
                          },
                          "surrogateType": {
                            "id": "GooglePrivacyDlpV2SurrogateType",
                            "type": "object",
                            "properties": {},
                            "description": "Message for detecting output from deidentification transformations that support reversing."
                          },
                          "detectionRules": {
                            "type": "array",
                            "items": {
                              "id": "GooglePrivacyDlpV2DetectionRule",
                              "type": "object",
                              "properties": {
                                "hotwordRule": {
                                  "id": "GooglePrivacyDlpV2HotwordRule",
                                  "type": "object",
                                  "properties": {
                                    "proximity": {
                                      "id": "GooglePrivacyDlpV2Proximity",
                                      "type": "object",
                                      "properties": {
                                        "windowAfter": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Number of characters after the finding to consider."
                                        },
                                        "windowBefore": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Number of characters before the finding to consider."
                                        }
                                      },
                                      "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                    },
                                    "hotwordRegex": {
                                      "id": "GooglePrivacyDlpV2Regex",
                                      "type": "object",
                                      "properties": {
                                        "pattern": {
                                          "type": "string",
                                          "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                        },
                                        "groupIndexes": {
                                          "type": "array",
                                          "items": {
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                        }
                                      },
                                      "description": "Regular expression pattern defining what qualifies as a hotword."
                                    },
                                    "likelihoodAdjustment": {
                                      "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                      "type": "object",
                                      "properties": {
                                        "fixedLikelihood": {
                                          "enum": [
                                            "LIKELIHOOD_UNSPECIFIED",
                                            "VERY_UNLIKELY",
                                            "UNLIKELY",
                                            "POSSIBLE",
                                            "LIKELY",
                                            "VERY_LIKELY"
                                          ],
                                          "type": "string",
                                          "description": "Set the likelihood of a finding to a fixed value.",
                                          "enumDescriptions": [
                                            "Default value; same as POSSIBLE.",
                                            "Few matching elements.",
                                            "",
                                            "Some matching elements.",
                                            "",
                                            "Many matching elements."
                                          ]
                                        },
                                        "relativeLikelihood": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                        }
                                      },
                                      "description": "Likelihood adjustment to apply to all matching findings."
                                    }
                                  },
                                  "description": "Hotword-based detection rule."
                                }
                              },
                              "description": "Deprecated; use `InspectionRuleSet` instead. Rule for modifying a `CustomInfoType` to alter behavior under certain circumstances, depending on the specific details of the rule. Not supported for the `surrogate_type` custom infoType."
                            },
                            "description": "Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in order that they are specified. Not supported for the `surrogate_type` CustomInfoType."
                          }
                        },
                        "description": "Custom information type provided by the user. Used to find domain-specific sensitive information configurable to the data in question."
                      },
                      "description": "CustomInfoTypes provided by the user. See https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more."
                    },
                    "excludeInfoTypes": {
                      "type": "boolean",
                      "description": "When true, excludes type information of the findings."
                    }
                  },
                  "description": "The core content of the template. Configuration of the scanning process."
                }
              },
              "description": "Required. The InspectTemplate to create."
            }
          },
          "description": "Request message for CreateInspectTemplate."
        }
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2InspectTemplate",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The template name. The template will have one of the following formats: `projects/PROJECT_ID/inspectTemplates/TEMPLATE_ID` OR `organizations/ORGANIZATION_ID/inspectTemplates/TEMPLATE_ID`;"
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The creation timestamp of an inspectTemplate."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The last update timestamp of an inspectTemplate."
            },
            "description": {
              "type": "string",
              "description": "Short description (max 256 chars)."
            },
            "displayName": {
              "type": "string",
              "description": "Display name (max 256 chars)."
            },
            "inspectConfig": {
              "id": "GooglePrivacyDlpV2InspectConfig",
              "type": "object",
              "properties": {
                "limits": {
                  "id": "GooglePrivacyDlpV2FindingLimits",
                  "type": "object",
                  "properties": {
                    "maxFindingsPerItem": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Max number of findings that will be returned for each item scanned. When set within `InspectJobConfig`, the maximum returned is 2000 regardless if this is set higher. When set within `InspectContentRequest`, this field is ignored."
                    },
                    "maxFindingsPerRequest": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Max number of findings that will be returned per request/job. When set within `InspectContentRequest`, the maximum returned is 2000 regardless if this is set higher."
                    },
                    "maxFindingsPerInfoType": {
                      "type": "array",
                      "items": {
                        "id": "GooglePrivacyDlpV2InfoTypeLimit",
                        "type": "object",
                        "properties": {
                          "infoType": {
                            "id": "GooglePrivacyDlpV2InfoType",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                              }
                            },
                            "description": "Type of information detected by the API."
                          },
                          "maxFindings": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Max findings limit for the given infoType."
                          }
                        },
                        "description": "Max findings configuration per infoType, per content item or long running DlpJob."
                      },
                      "description": "Configuration of findings limit given for specified infoTypes."
                    }
                  },
                  "description": "Configuration to control the number of findings returned."
                },
                "ruleSet": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2InspectionRuleSet",
                    "type": "object",
                    "properties": {
                      "rules": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2InspectionRule",
                          "type": "object",
                          "properties": {
                            "hotwordRule": {
                              "id": "GooglePrivacyDlpV2HotwordRule",
                              "type": "object",
                              "properties": {
                                "proximity": {
                                  "id": "GooglePrivacyDlpV2Proximity",
                                  "type": "object",
                                  "properties": {
                                    "windowAfter": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters after the finding to consider."
                                    },
                                    "windowBefore": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters before the finding to consider."
                                    }
                                  },
                                  "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                },
                                "hotwordRegex": {
                                  "id": "GooglePrivacyDlpV2Regex",
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string",
                                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                    },
                                    "groupIndexes": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                    }
                                  },
                                  "description": "Regular expression pattern defining what qualifies as a hotword."
                                },
                                "likelihoodAdjustment": {
                                  "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                  "type": "object",
                                  "properties": {
                                    "fixedLikelihood": {
                                      "enum": [
                                        "LIKELIHOOD_UNSPECIFIED",
                                        "VERY_UNLIKELY",
                                        "UNLIKELY",
                                        "POSSIBLE",
                                        "LIKELY",
                                        "VERY_LIKELY"
                                      ],
                                      "type": "string",
                                      "description": "Set the likelihood of a finding to a fixed value.",
                                      "enumDescriptions": [
                                        "Default value; same as POSSIBLE.",
                                        "Few matching elements.",
                                        "",
                                        "Some matching elements.",
                                        "",
                                        "Many matching elements."
                                      ]
                                    },
                                    "relativeLikelihood": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                    }
                                  },
                                  "description": "Likelihood adjustment to apply to all matching findings."
                                }
                              },
                              "description": "Hotword-based detection rule."
                            },
                            "exclusionRule": {
                              "id": "GooglePrivacyDlpV2ExclusionRule",
                              "type": "object",
                              "properties": {
                                "regex": {
                                  "id": "GooglePrivacyDlpV2Regex",
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string",
                                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                    },
                                    "groupIndexes": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                    }
                                  },
                                  "description": "Regular expression which defines the rule."
                                },
                                "dictionary": {
                                  "id": "GooglePrivacyDlpV2Dictionary",
                                  "type": "object",
                                  "properties": {
                                    "wordList": {
                                      "id": "GooglePrivacyDlpV2WordList",
                                      "type": "object",
                                      "properties": {
                                        "words": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                        }
                                      },
                                      "description": "List of words or phrases to search for."
                                    },
                                    "cloudStoragePath": {
                                      "id": "GooglePrivacyDlpV2CloudStoragePath",
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string",
                                          "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                        }
                                      },
                                      "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                                    }
                                  },
                                  "description": "Dictionary which defines the rule."
                                },
                                "matchingType": {
                                  "enum": [
                                    "MATCHING_TYPE_UNSPECIFIED",
                                    "MATCHING_TYPE_FULL_MATCH",
                                    "MATCHING_TYPE_PARTIAL_MATCH",
                                    "MATCHING_TYPE_INVERSE_MATCH"
                                  ],
                                  "type": "string",
                                  "description": "How the rule is applied, see MatchingType documentation for details.",
                                  "enumDescriptions": [
                                    "Invalid.",
                                    "Full match. - Dictionary: join of Dictionary results matched complete finding quote - Regex: all regex matches fill a finding quote start to end - Exclude info type: completely inside affecting info types findings",
                                    "Partial match. - Dictionary: at least one of the tokens in the finding matches - Regex: substring of the finding matches - Exclude info type: intersects with affecting info types findings",
                                    "Inverse match. - Dictionary: no tokens in the finding match the dictionary - Regex: finding doesn't match the regex - Exclude info type: no intersection with affecting info types findings"
                                  ]
                                },
                                "excludeInfoTypes": {
                                  "id": "GooglePrivacyDlpV2ExcludeInfoTypes",
                                  "type": "object",
                                  "properties": {
                                    "infoTypes": {
                                      "type": "array",
                                      "items": {
                                        "id": "GooglePrivacyDlpV2InfoType",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                          }
                                        },
                                        "description": "Type of information detected by the API."
                                      },
                                      "description": "InfoType list in ExclusionRule rule drops a finding when it overlaps or contained within with a finding of an infoType from this list. For example, for `InspectionRuleSet.info_types` containing \"PHONE_NUMBER\"` and `exclusion_rule` containing `exclude_info_types.info_types` with \"EMAIL_ADDRESS\" the phone number findings are dropped if they overlap with EMAIL_ADDRESS finding. That leads to \"555-222-2222@example.org\" to generate only a single finding, namely email address."
                                    }
                                  },
                                  "description": "Set of infoTypes for which findings would affect this rule."
                                }
                              },
                              "description": "Exclusion rule."
                            }
                          },
                          "description": "A single inspection rule to be applied to infoTypes, specified in `InspectionRuleSet`."
                        },
                        "description": "Set of rules to be applied to infoTypes. The rules are applied in order."
                      },
                      "infoTypes": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2InfoType",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                            }
                          },
                          "description": "Type of information detected by the API."
                        },
                        "description": "List of infoTypes this rule set is applied to."
                      }
                    },
                    "description": "Rule set for modifying a set of infoTypes to alter behavior under certain circumstances, depending on the specific details of the rules within the set."
                  },
                  "description": "Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type."
                },
                "infoTypes": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2InfoType",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                      }
                    },
                    "description": "Type of information detected by the API."
                  },
                  "description": "Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/dlp/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time."
                },
                "includeQuote": {
                  "type": "boolean",
                  "description": "When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote."
                },
                "minLikelihood": {
                  "enum": [
                    "LIKELIHOOD_UNSPECIFIED",
                    "VERY_UNLIKELY",
                    "UNLIKELY",
                    "POSSIBLE",
                    "LIKELY",
                    "VERY_LIKELY"
                  ],
                  "type": "string",
                  "description": "Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more.",
                  "enumDescriptions": [
                    "Default value; same as POSSIBLE.",
                    "Few matching elements.",
                    "",
                    "Some matching elements.",
                    "",
                    "Many matching elements."
                  ]
                },
                "contentOptions": {
                  "type": "array",
                  "items": {
                    "enum": [
                      "CONTENT_UNSPECIFIED",
                      "CONTENT_TEXT",
                      "CONTENT_IMAGE"
                    ],
                    "type": "string",
                    "enumDescriptions": [
                      "Includes entire content of a file or a data stream.",
                      "Text content within the data, excluding any metadata.",
                      "Images found in the data."
                    ]
                  },
                  "description": "List of options defining data content to scan. If empty, text, images, and other content will be included."
                },
                "customInfoTypes": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2CustomInfoType",
                    "type": "object",
                    "properties": {
                      "regex": {
                        "id": "GooglePrivacyDlpV2Regex",
                        "type": "object",
                        "properties": {
                          "pattern": {
                            "type": "string",
                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                          },
                          "groupIndexes": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                          }
                        },
                        "description": "Regular expression based CustomInfoType."
                      },
                      "infoType": {
                        "id": "GooglePrivacyDlpV2InfoType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                          }
                        },
                        "description": "Type of information detected by the API."
                      },
                      "dictionary": {
                        "id": "GooglePrivacyDlpV2Dictionary",
                        "type": "object",
                        "properties": {
                          "wordList": {
                            "id": "GooglePrivacyDlpV2WordList",
                            "type": "object",
                            "properties": {
                              "words": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                              }
                            },
                            "description": "List of words or phrases to search for."
                          },
                          "cloudStoragePath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                          }
                        },
                        "description": "A list of phrases to detect as a CustomInfoType."
                      },
                      "likelihood": {
                        "enum": [
                          "LIKELIHOOD_UNSPECIFIED",
                          "VERY_UNLIKELY",
                          "UNLIKELY",
                          "POSSIBLE",
                          "LIKELY",
                          "VERY_LIKELY"
                        ],
                        "type": "string",
                        "description": "Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not specified.",
                        "enumDescriptions": [
                          "Default value; same as POSSIBLE.",
                          "Few matching elements.",
                          "",
                          "Some matching elements.",
                          "",
                          "Many matching elements."
                        ]
                      },
                      "storedType": {
                        "id": "GooglePrivacyDlpV2StoredType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Resource name of the requested `StoredInfoType`, for example `organizations/433245324/storedInfoTypes/432452342` or `projects/project-id/storedInfoTypes/432452342`."
                          },
                          "createTime": {
                            "type": "string",
                            "format": "google-datetime",
                            "description": "Timestamp indicating when the version of the `StoredInfoType` used for inspection was created. Output-only field, populated by the system."
                          }
                        },
                        "description": "Load an existing `StoredInfoType` resource for use in `InspectDataSource`. Not currently supported in `InspectContent`."
                      },
                      "exclusionType": {
                        "enum": [
                          "EXCLUSION_TYPE_UNSPECIFIED",
                          "EXCLUSION_TYPE_EXCLUDE"
                        ],
                        "type": "string",
                        "description": "If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching.",
                        "enumDescriptions": [
                          "A finding of this custom info type will not be excluded from results.",
                          "A finding of this custom info type will be excluded from final results, but can still affect rule execution."
                        ]
                      },
                      "surrogateType": {
                        "id": "GooglePrivacyDlpV2SurrogateType",
                        "type": "object",
                        "properties": {},
                        "description": "Message for detecting output from deidentification transformations that support reversing."
                      },
                      "detectionRules": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2DetectionRule",
                          "type": "object",
                          "properties": {
                            "hotwordRule": {
                              "id": "GooglePrivacyDlpV2HotwordRule",
                              "type": "object",
                              "properties": {
                                "proximity": {
                                  "id": "GooglePrivacyDlpV2Proximity",
                                  "type": "object",
                                  "properties": {
                                    "windowAfter": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters after the finding to consider."
                                    },
                                    "windowBefore": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters before the finding to consider."
                                    }
                                  },
                                  "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                },
                                "hotwordRegex": {
                                  "id": "GooglePrivacyDlpV2Regex",
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string",
                                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                    },
                                    "groupIndexes": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                    }
                                  },
                                  "description": "Regular expression pattern defining what qualifies as a hotword."
                                },
                                "likelihoodAdjustment": {
                                  "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                  "type": "object",
                                  "properties": {
                                    "fixedLikelihood": {
                                      "enum": [
                                        "LIKELIHOOD_UNSPECIFIED",
                                        "VERY_UNLIKELY",
                                        "UNLIKELY",
                                        "POSSIBLE",
                                        "LIKELY",
                                        "VERY_LIKELY"
                                      ],
                                      "type": "string",
                                      "description": "Set the likelihood of a finding to a fixed value.",
                                      "enumDescriptions": [
                                        "Default value; same as POSSIBLE.",
                                        "Few matching elements.",
                                        "",
                                        "Some matching elements.",
                                        "",
                                        "Many matching elements."
                                      ]
                                    },
                                    "relativeLikelihood": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                    }
                                  },
                                  "description": "Likelihood adjustment to apply to all matching findings."
                                }
                              },
                              "description": "Hotword-based detection rule."
                            }
                          },
                          "description": "Deprecated; use `InspectionRuleSet` instead. Rule for modifying a `CustomInfoType` to alter behavior under certain circumstances, depending on the specific details of the rule. Not supported for the `surrogate_type` custom infoType."
                        },
                        "description": "Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in order that they are specified. Not supported for the `surrogate_type` CustomInfoType."
                      }
                    },
                    "description": "Custom information type provided by the user. Used to find domain-specific sensitive information configurable to the data in question."
                  },
                  "description": "CustomInfoTypes provided by the user. See https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more."
                },
                "excludeInfoTypes": {
                  "type": "boolean",
                  "description": "When true, excludes type information of the findings."
                }
              },
              "description": "The core content of the template. Configuration of the scanning process."
            }
          },
          "description": "The inspectTemplate contains a configuration (set of types of sensitive data to be detected) to be used anywhere you otherwise would normally specify InspectConfig. See https://cloud.google.com/dlp/docs/concepts-templates to learn more."
        }
      ]
  projects.inspectTemplates.delete:
    description: |-
      Deletes an InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.inspectTemplates/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  projects.inspectTemplates.get:
    description: |-
      Gets an InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.inspectTemplates/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2InspectTemplate",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The template name. The template will have one of the following formats: `projects/PROJECT_ID/inspectTemplates/TEMPLATE_ID` OR `organizations/ORGANIZATION_ID/inspectTemplates/TEMPLATE_ID`;"
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The creation timestamp of an inspectTemplate."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The last update timestamp of an inspectTemplate."
            },
            "description": {
              "type": "string",
              "description": "Short description (max 256 chars)."
            },
            "displayName": {
              "type": "string",
              "description": "Display name (max 256 chars)."
            },
            "inspectConfig": {
              "id": "GooglePrivacyDlpV2InspectConfig",
              "type": "object",
              "properties": {
                "limits": {
                  "id": "GooglePrivacyDlpV2FindingLimits",
                  "type": "object",
                  "properties": {
                    "maxFindingsPerItem": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Max number of findings that will be returned for each item scanned. When set within `InspectJobConfig`, the maximum returned is 2000 regardless if this is set higher. When set within `InspectContentRequest`, this field is ignored."
                    },
                    "maxFindingsPerRequest": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Max number of findings that will be returned per request/job. When set within `InspectContentRequest`, the maximum returned is 2000 regardless if this is set higher."
                    },
                    "maxFindingsPerInfoType": {
                      "type": "array",
                      "items": {
                        "id": "GooglePrivacyDlpV2InfoTypeLimit",
                        "type": "object",
                        "properties": {
                          "infoType": {
                            "id": "GooglePrivacyDlpV2InfoType",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                              }
                            },
                            "description": "Type of information detected by the API."
                          },
                          "maxFindings": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Max findings limit for the given infoType."
                          }
                        },
                        "description": "Max findings configuration per infoType, per content item or long running DlpJob."
                      },
                      "description": "Configuration of findings limit given for specified infoTypes."
                    }
                  },
                  "description": "Configuration to control the number of findings returned."
                },
                "ruleSet": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2InspectionRuleSet",
                    "type": "object",
                    "properties": {
                      "rules": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2InspectionRule",
                          "type": "object",
                          "properties": {
                            "hotwordRule": {
                              "id": "GooglePrivacyDlpV2HotwordRule",
                              "type": "object",
                              "properties": {
                                "proximity": {
                                  "id": "GooglePrivacyDlpV2Proximity",
                                  "type": "object",
                                  "properties": {
                                    "windowAfter": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters after the finding to consider."
                                    },
                                    "windowBefore": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters before the finding to consider."
                                    }
                                  },
                                  "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                },
                                "hotwordRegex": {
                                  "id": "GooglePrivacyDlpV2Regex",
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string",
                                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                    },
                                    "groupIndexes": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                    }
                                  },
                                  "description": "Regular expression pattern defining what qualifies as a hotword."
                                },
                                "likelihoodAdjustment": {
                                  "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                  "type": "object",
                                  "properties": {
                                    "fixedLikelihood": {
                                      "enum": [
                                        "LIKELIHOOD_UNSPECIFIED",
                                        "VERY_UNLIKELY",
                                        "UNLIKELY",
                                        "POSSIBLE",
                                        "LIKELY",
                                        "VERY_LIKELY"
                                      ],
                                      "type": "string",
                                      "description": "Set the likelihood of a finding to a fixed value.",
                                      "enumDescriptions": [
                                        "Default value; same as POSSIBLE.",
                                        "Few matching elements.",
                                        "",
                                        "Some matching elements.",
                                        "",
                                        "Many matching elements."
                                      ]
                                    },
                                    "relativeLikelihood": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                    }
                                  },
                                  "description": "Likelihood adjustment to apply to all matching findings."
                                }
                              },
                              "description": "Hotword-based detection rule."
                            },
                            "exclusionRule": {
                              "id": "GooglePrivacyDlpV2ExclusionRule",
                              "type": "object",
                              "properties": {
                                "regex": {
                                  "id": "GooglePrivacyDlpV2Regex",
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string",
                                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                    },
                                    "groupIndexes": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                    }
                                  },
                                  "description": "Regular expression which defines the rule."
                                },
                                "dictionary": {
                                  "id": "GooglePrivacyDlpV2Dictionary",
                                  "type": "object",
                                  "properties": {
                                    "wordList": {
                                      "id": "GooglePrivacyDlpV2WordList",
                                      "type": "object",
                                      "properties": {
                                        "words": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                        }
                                      },
                                      "description": "List of words or phrases to search for."
                                    },
                                    "cloudStoragePath": {
                                      "id": "GooglePrivacyDlpV2CloudStoragePath",
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string",
                                          "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                        }
                                      },
                                      "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                                    }
                                  },
                                  "description": "Dictionary which defines the rule."
                                },
                                "matchingType": {
                                  "enum": [
                                    "MATCHING_TYPE_UNSPECIFIED",
                                    "MATCHING_TYPE_FULL_MATCH",
                                    "MATCHING_TYPE_PARTIAL_MATCH",
                                    "MATCHING_TYPE_INVERSE_MATCH"
                                  ],
                                  "type": "string",
                                  "description": "How the rule is applied, see MatchingType documentation for details.",
                                  "enumDescriptions": [
                                    "Invalid.",
                                    "Full match. - Dictionary: join of Dictionary results matched complete finding quote - Regex: all regex matches fill a finding quote start to end - Exclude info type: completely inside affecting info types findings",
                                    "Partial match. - Dictionary: at least one of the tokens in the finding matches - Regex: substring of the finding matches - Exclude info type: intersects with affecting info types findings",
                                    "Inverse match. - Dictionary: no tokens in the finding match the dictionary - Regex: finding doesn't match the regex - Exclude info type: no intersection with affecting info types findings"
                                  ]
                                },
                                "excludeInfoTypes": {
                                  "id": "GooglePrivacyDlpV2ExcludeInfoTypes",
                                  "type": "object",
                                  "properties": {
                                    "infoTypes": {
                                      "type": "array",
                                      "items": {
                                        "id": "GooglePrivacyDlpV2InfoType",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                          }
                                        },
                                        "description": "Type of information detected by the API."
                                      },
                                      "description": "InfoType list in ExclusionRule rule drops a finding when it overlaps or contained within with a finding of an infoType from this list. For example, for `InspectionRuleSet.info_types` containing \"PHONE_NUMBER\"` and `exclusion_rule` containing `exclude_info_types.info_types` with \"EMAIL_ADDRESS\" the phone number findings are dropped if they overlap with EMAIL_ADDRESS finding. That leads to \"555-222-2222@example.org\" to generate only a single finding, namely email address."
                                    }
                                  },
                                  "description": "Set of infoTypes for which findings would affect this rule."
                                }
                              },
                              "description": "Exclusion rule."
                            }
                          },
                          "description": "A single inspection rule to be applied to infoTypes, specified in `InspectionRuleSet`."
                        },
                        "description": "Set of rules to be applied to infoTypes. The rules are applied in order."
                      },
                      "infoTypes": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2InfoType",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                            }
                          },
                          "description": "Type of information detected by the API."
                        },
                        "description": "List of infoTypes this rule set is applied to."
                      }
                    },
                    "description": "Rule set for modifying a set of infoTypes to alter behavior under certain circumstances, depending on the specific details of the rules within the set."
                  },
                  "description": "Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type."
                },
                "infoTypes": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2InfoType",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                      }
                    },
                    "description": "Type of information detected by the API."
                  },
                  "description": "Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/dlp/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time."
                },
                "includeQuote": {
                  "type": "boolean",
                  "description": "When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote."
                },
                "minLikelihood": {
                  "enum": [
                    "LIKELIHOOD_UNSPECIFIED",
                    "VERY_UNLIKELY",
                    "UNLIKELY",
                    "POSSIBLE",
                    "LIKELY",
                    "VERY_LIKELY"
                  ],
                  "type": "string",
                  "description": "Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more.",
                  "enumDescriptions": [
                    "Default value; same as POSSIBLE.",
                    "Few matching elements.",
                    "",
                    "Some matching elements.",
                    "",
                    "Many matching elements."
                  ]
                },
                "contentOptions": {
                  "type": "array",
                  "items": {
                    "enum": [
                      "CONTENT_UNSPECIFIED",
                      "CONTENT_TEXT",
                      "CONTENT_IMAGE"
                    ],
                    "type": "string",
                    "enumDescriptions": [
                      "Includes entire content of a file or a data stream.",
                      "Text content within the data, excluding any metadata.",
                      "Images found in the data."
                    ]
                  },
                  "description": "List of options defining data content to scan. If empty, text, images, and other content will be included."
                },
                "customInfoTypes": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2CustomInfoType",
                    "type": "object",
                    "properties": {
                      "regex": {
                        "id": "GooglePrivacyDlpV2Regex",
                        "type": "object",
                        "properties": {
                          "pattern": {
                            "type": "string",
                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                          },
                          "groupIndexes": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                          }
                        },
                        "description": "Regular expression based CustomInfoType."
                      },
                      "infoType": {
                        "id": "GooglePrivacyDlpV2InfoType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                          }
                        },
                        "description": "Type of information detected by the API."
                      },
                      "dictionary": {
                        "id": "GooglePrivacyDlpV2Dictionary",
                        "type": "object",
                        "properties": {
                          "wordList": {
                            "id": "GooglePrivacyDlpV2WordList",
                            "type": "object",
                            "properties": {
                              "words": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                              }
                            },
                            "description": "List of words or phrases to search for."
                          },
                          "cloudStoragePath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                          }
                        },
                        "description": "A list of phrases to detect as a CustomInfoType."
                      },
                      "likelihood": {
                        "enum": [
                          "LIKELIHOOD_UNSPECIFIED",
                          "VERY_UNLIKELY",
                          "UNLIKELY",
                          "POSSIBLE",
                          "LIKELY",
                          "VERY_LIKELY"
                        ],
                        "type": "string",
                        "description": "Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not specified.",
                        "enumDescriptions": [
                          "Default value; same as POSSIBLE.",
                          "Few matching elements.",
                          "",
                          "Some matching elements.",
                          "",
                          "Many matching elements."
                        ]
                      },
                      "storedType": {
                        "id": "GooglePrivacyDlpV2StoredType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Resource name of the requested `StoredInfoType`, for example `organizations/433245324/storedInfoTypes/432452342` or `projects/project-id/storedInfoTypes/432452342`."
                          },
                          "createTime": {
                            "type": "string",
                            "format": "google-datetime",
                            "description": "Timestamp indicating when the version of the `StoredInfoType` used for inspection was created. Output-only field, populated by the system."
                          }
                        },
                        "description": "Load an existing `StoredInfoType` resource for use in `InspectDataSource`. Not currently supported in `InspectContent`."
                      },
                      "exclusionType": {
                        "enum": [
                          "EXCLUSION_TYPE_UNSPECIFIED",
                          "EXCLUSION_TYPE_EXCLUDE"
                        ],
                        "type": "string",
                        "description": "If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching.",
                        "enumDescriptions": [
                          "A finding of this custom info type will not be excluded from results.",
                          "A finding of this custom info type will be excluded from final results, but can still affect rule execution."
                        ]
                      },
                      "surrogateType": {
                        "id": "GooglePrivacyDlpV2SurrogateType",
                        "type": "object",
                        "properties": {},
                        "description": "Message for detecting output from deidentification transformations that support reversing."
                      },
                      "detectionRules": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2DetectionRule",
                          "type": "object",
                          "properties": {
                            "hotwordRule": {
                              "id": "GooglePrivacyDlpV2HotwordRule",
                              "type": "object",
                              "properties": {
                                "proximity": {
                                  "id": "GooglePrivacyDlpV2Proximity",
                                  "type": "object",
                                  "properties": {
                                    "windowAfter": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters after the finding to consider."
                                    },
                                    "windowBefore": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters before the finding to consider."
                                    }
                                  },
                                  "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                },
                                "hotwordRegex": {
                                  "id": "GooglePrivacyDlpV2Regex",
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string",
                                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                    },
                                    "groupIndexes": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                    }
                                  },
                                  "description": "Regular expression pattern defining what qualifies as a hotword."
                                },
                                "likelihoodAdjustment": {
                                  "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                  "type": "object",
                                  "properties": {
                                    "fixedLikelihood": {
                                      "enum": [
                                        "LIKELIHOOD_UNSPECIFIED",
                                        "VERY_UNLIKELY",
                                        "UNLIKELY",
                                        "POSSIBLE",
                                        "LIKELY",
                                        "VERY_LIKELY"
                                      ],
                                      "type": "string",
                                      "description": "Set the likelihood of a finding to a fixed value.",
                                      "enumDescriptions": [
                                        "Default value; same as POSSIBLE.",
                                        "Few matching elements.",
                                        "",
                                        "Some matching elements.",
                                        "",
                                        "Many matching elements."
                                      ]
                                    },
                                    "relativeLikelihood": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                    }
                                  },
                                  "description": "Likelihood adjustment to apply to all matching findings."
                                }
                              },
                              "description": "Hotword-based detection rule."
                            }
                          },
                          "description": "Deprecated; use `InspectionRuleSet` instead. Rule for modifying a `CustomInfoType` to alter behavior under certain circumstances, depending on the specific details of the rule. Not supported for the `surrogate_type` custom infoType."
                        },
                        "description": "Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in order that they are specified. Not supported for the `surrogate_type` CustomInfoType."
                      }
                    },
                    "description": "Custom information type provided by the user. Used to find domain-specific sensitive information configurable to the data in question."
                  },
                  "description": "CustomInfoTypes provided by the user. See https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more."
                },
                "excludeInfoTypes": {
                  "type": "boolean",
                  "description": "When true, excludes type information of the findings."
                }
              },
              "description": "The core content of the template. Configuration of the scanning process."
            }
          },
          "description": "The inspectTemplate contains a configuration (set of types of sensitive data to be detected) to be used anywhere you otherwise would normally specify InspectConfig. See https://cloud.google.com/dlp/docs/concepts-templates to learn more."
        }
      ]
  projects.inspectTemplates.list:
    description: |-
      Lists InspectTemplates. See https://cloud.google.com/dlp/docs/creating-templates to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.inspectTemplates/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2ListInspectTemplatesResponse",
          "type": "object",
          "properties": {
            "nextPageToken": {
              "type": "string",
              "description": "If the next page is available then the next page token to be used in following ListInspectTemplates request."
            },
            "inspectTemplates": {
              "type": "array",
              "items": {
                "id": "GooglePrivacyDlpV2InspectTemplate",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The template name. The template will have one of the following formats: `projects/PROJECT_ID/inspectTemplates/TEMPLATE_ID` OR `organizations/ORGANIZATION_ID/inspectTemplates/TEMPLATE_ID`;"
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The creation timestamp of an inspectTemplate."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The last update timestamp of an inspectTemplate."
                  },
                  "description": {
                    "type": "string",
                    "description": "Short description (max 256 chars)."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Display name (max 256 chars)."
                  },
                  "inspectConfig": {
                    "id": "GooglePrivacyDlpV2InspectConfig",
                    "type": "object",
                    "properties": {
                      "limits": {
                        "id": "GooglePrivacyDlpV2FindingLimits",
                        "type": "object",
                        "properties": {
                          "maxFindingsPerItem": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Max number of findings that will be returned for each item scanned. When set within `InspectJobConfig`, the maximum returned is 2000 regardless if this is set higher. When set within `InspectContentRequest`, this field is ignored."
                          },
                          "maxFindingsPerRequest": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Max number of findings that will be returned per request/job. When set within `InspectContentRequest`, the maximum returned is 2000 regardless if this is set higher."
                          },
                          "maxFindingsPerInfoType": {
                            "type": "array",
                            "items": {
                              "id": "GooglePrivacyDlpV2InfoTypeLimit",
                              "type": "object",
                              "properties": {
                                "infoType": {
                                  "id": "GooglePrivacyDlpV2InfoType",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                    }
                                  },
                                  "description": "Type of information detected by the API."
                                },
                                "maxFindings": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Max findings limit for the given infoType."
                                }
                              },
                              "description": "Max findings configuration per infoType, per content item or long running DlpJob."
                            },
                            "description": "Configuration of findings limit given for specified infoTypes."
                          }
                        },
                        "description": "Configuration to control the number of findings returned."
                      },
                      "ruleSet": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2InspectionRuleSet",
                          "type": "object",
                          "properties": {
                            "rules": {
                              "type": "array",
                              "items": {
                                "id": "GooglePrivacyDlpV2InspectionRule",
                                "type": "object",
                                "properties": {
                                  "hotwordRule": {
                                    "id": "GooglePrivacyDlpV2HotwordRule",
                                    "type": "object",
                                    "properties": {
                                      "proximity": {
                                        "id": "GooglePrivacyDlpV2Proximity",
                                        "type": "object",
                                        "properties": {
                                          "windowAfter": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Number of characters after the finding to consider."
                                          },
                                          "windowBefore": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Number of characters before the finding to consider."
                                          }
                                        },
                                        "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                      },
                                      "hotwordRegex": {
                                        "id": "GooglePrivacyDlpV2Regex",
                                        "type": "object",
                                        "properties": {
                                          "pattern": {
                                            "type": "string",
                                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                          },
                                          "groupIndexes": {
                                            "type": "array",
                                            "items": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                          }
                                        },
                                        "description": "Regular expression pattern defining what qualifies as a hotword."
                                      },
                                      "likelihoodAdjustment": {
                                        "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                        "type": "object",
                                        "properties": {
                                          "fixedLikelihood": {
                                            "enum": [
                                              "LIKELIHOOD_UNSPECIFIED",
                                              "VERY_UNLIKELY",
                                              "UNLIKELY",
                                              "POSSIBLE",
                                              "LIKELY",
                                              "VERY_LIKELY"
                                            ],
                                            "type": "string",
                                            "description": "Set the likelihood of a finding to a fixed value.",
                                            "enumDescriptions": [
                                              "Default value; same as POSSIBLE.",
                                              "Few matching elements.",
                                              "",
                                              "Some matching elements.",
                                              "",
                                              "Many matching elements."
                                            ]
                                          },
                                          "relativeLikelihood": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                          }
                                        },
                                        "description": "Likelihood adjustment to apply to all matching findings."
                                      }
                                    },
                                    "description": "Hotword-based detection rule."
                                  },
                                  "exclusionRule": {
                                    "id": "GooglePrivacyDlpV2ExclusionRule",
                                    "type": "object",
                                    "properties": {
                                      "regex": {
                                        "id": "GooglePrivacyDlpV2Regex",
                                        "type": "object",
                                        "properties": {
                                          "pattern": {
                                            "type": "string",
                                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                          },
                                          "groupIndexes": {
                                            "type": "array",
                                            "items": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                          }
                                        },
                                        "description": "Regular expression which defines the rule."
                                      },
                                      "dictionary": {
                                        "id": "GooglePrivacyDlpV2Dictionary",
                                        "type": "object",
                                        "properties": {
                                          "wordList": {
                                            "id": "GooglePrivacyDlpV2WordList",
                                            "type": "object",
                                            "properties": {
                                              "words": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                              }
                                            },
                                            "description": "List of words or phrases to search for."
                                          },
                                          "cloudStoragePath": {
                                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                                            "type": "object",
                                            "properties": {
                                              "path": {
                                                "type": "string",
                                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                              }
                                            },
                                            "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                                          }
                                        },
                                        "description": "Dictionary which defines the rule."
                                      },
                                      "matchingType": {
                                        "enum": [
                                          "MATCHING_TYPE_UNSPECIFIED",
                                          "MATCHING_TYPE_FULL_MATCH",
                                          "MATCHING_TYPE_PARTIAL_MATCH",
                                          "MATCHING_TYPE_INVERSE_MATCH"
                                        ],
                                        "type": "string",
                                        "description": "How the rule is applied, see MatchingType documentation for details.",
                                        "enumDescriptions": [
                                          "Invalid.",
                                          "Full match. - Dictionary: join of Dictionary results matched complete finding quote - Regex: all regex matches fill a finding quote start to end - Exclude info type: completely inside affecting info types findings",
                                          "Partial match. - Dictionary: at least one of the tokens in the finding matches - Regex: substring of the finding matches - Exclude info type: intersects with affecting info types findings",
                                          "Inverse match. - Dictionary: no tokens in the finding match the dictionary - Regex: finding doesn't match the regex - Exclude info type: no intersection with affecting info types findings"
                                        ]
                                      },
                                      "excludeInfoTypes": {
                                        "id": "GooglePrivacyDlpV2ExcludeInfoTypes",
                                        "type": "object",
                                        "properties": {
                                          "infoTypes": {
                                            "type": "array",
                                            "items": {
                                              "id": "GooglePrivacyDlpV2InfoType",
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                                }
                                              },
                                              "description": "Type of information detected by the API."
                                            },
                                            "description": "InfoType list in ExclusionRule rule drops a finding when it overlaps or contained within with a finding of an infoType from this list. For example, for `InspectionRuleSet.info_types` containing \"PHONE_NUMBER\"` and `exclusion_rule` containing `exclude_info_types.info_types` with \"EMAIL_ADDRESS\" the phone number findings are dropped if they overlap with EMAIL_ADDRESS finding. That leads to \"555-222-2222@example.org\" to generate only a single finding, namely email address."
                                          }
                                        },
                                        "description": "Set of infoTypes for which findings would affect this rule."
                                      }
                                    },
                                    "description": "Exclusion rule."
                                  }
                                },
                                "description": "A single inspection rule to be applied to infoTypes, specified in `InspectionRuleSet`."
                              },
                              "description": "Set of rules to be applied to infoTypes. The rules are applied in order."
                            },
                            "infoTypes": {
                              "type": "array",
                              "items": {
                                "id": "GooglePrivacyDlpV2InfoType",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                  }
                                },
                                "description": "Type of information detected by the API."
                              },
                              "description": "List of infoTypes this rule set is applied to."
                            }
                          },
                          "description": "Rule set for modifying a set of infoTypes to alter behavior under certain circumstances, depending on the specific details of the rules within the set."
                        },
                        "description": "Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type."
                      },
                      "infoTypes": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2InfoType",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                            }
                          },
                          "description": "Type of information detected by the API."
                        },
                        "description": "Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/dlp/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time."
                      },
                      "includeQuote": {
                        "type": "boolean",
                        "description": "When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote."
                      },
                      "minLikelihood": {
                        "enum": [
                          "LIKELIHOOD_UNSPECIFIED",
                          "VERY_UNLIKELY",
                          "UNLIKELY",
                          "POSSIBLE",
                          "LIKELY",
                          "VERY_LIKELY"
                        ],
                        "type": "string",
                        "description": "Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more.",
                        "enumDescriptions": [
                          "Default value; same as POSSIBLE.",
                          "Few matching elements.",
                          "",
                          "Some matching elements.",
                          "",
                          "Many matching elements."
                        ]
                      },
                      "contentOptions": {
                        "type": "array",
                        "items": {
                          "enum": [
                            "CONTENT_UNSPECIFIED",
                            "CONTENT_TEXT",
                            "CONTENT_IMAGE"
                          ],
                          "type": "string",
                          "enumDescriptions": [
                            "Includes entire content of a file or a data stream.",
                            "Text content within the data, excluding any metadata.",
                            "Images found in the data."
                          ]
                        },
                        "description": "List of options defining data content to scan. If empty, text, images, and other content will be included."
                      },
                      "customInfoTypes": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2CustomInfoType",
                          "type": "object",
                          "properties": {
                            "regex": {
                              "id": "GooglePrivacyDlpV2Regex",
                              "type": "object",
                              "properties": {
                                "pattern": {
                                  "type": "string",
                                  "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                },
                                "groupIndexes": {
                                  "type": "array",
                                  "items": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                }
                              },
                              "description": "Regular expression based CustomInfoType."
                            },
                            "infoType": {
                              "id": "GooglePrivacyDlpV2InfoType",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                }
                              },
                              "description": "Type of information detected by the API."
                            },
                            "dictionary": {
                              "id": "GooglePrivacyDlpV2Dictionary",
                              "type": "object",
                              "properties": {
                                "wordList": {
                                  "id": "GooglePrivacyDlpV2WordList",
                                  "type": "object",
                                  "properties": {
                                    "words": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                    }
                                  },
                                  "description": "List of words or phrases to search for."
                                },
                                "cloudStoragePath": {
                                  "id": "GooglePrivacyDlpV2CloudStoragePath",
                                  "type": "object",
                                  "properties": {
                                    "path": {
                                      "type": "string",
                                      "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                    }
                                  },
                                  "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                                }
                              },
                              "description": "A list of phrases to detect as a CustomInfoType."
                            },
                            "likelihood": {
                              "enum": [
                                "LIKELIHOOD_UNSPECIFIED",
                                "VERY_UNLIKELY",
                                "UNLIKELY",
                                "POSSIBLE",
                                "LIKELY",
                                "VERY_LIKELY"
                              ],
                              "type": "string",
                              "description": "Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not specified.",
                              "enumDescriptions": [
                                "Default value; same as POSSIBLE.",
                                "Few matching elements.",
                                "",
                                "Some matching elements.",
                                "",
                                "Many matching elements."
                              ]
                            },
                            "storedType": {
                              "id": "GooglePrivacyDlpV2StoredType",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Resource name of the requested `StoredInfoType`, for example `organizations/433245324/storedInfoTypes/432452342` or `projects/project-id/storedInfoTypes/432452342`."
                                },
                                "createTime": {
                                  "type": "string",
                                  "format": "google-datetime",
                                  "description": "Timestamp indicating when the version of the `StoredInfoType` used for inspection was created. Output-only field, populated by the system."
                                }
                              },
                              "description": "Load an existing `StoredInfoType` resource for use in `InspectDataSource`. Not currently supported in `InspectContent`."
                            },
                            "exclusionType": {
                              "enum": [
                                "EXCLUSION_TYPE_UNSPECIFIED",
                                "EXCLUSION_TYPE_EXCLUDE"
                              ],
                              "type": "string",
                              "description": "If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching.",
                              "enumDescriptions": [
                                "A finding of this custom info type will not be excluded from results.",
                                "A finding of this custom info type will be excluded from final results, but can still affect rule execution."
                              ]
                            },
                            "surrogateType": {
                              "id": "GooglePrivacyDlpV2SurrogateType",
                              "type": "object",
                              "properties": {},
                              "description": "Message for detecting output from deidentification transformations that support reversing."
                            },
                            "detectionRules": {
                              "type": "array",
                              "items": {
                                "id": "GooglePrivacyDlpV2DetectionRule",
                                "type": "object",
                                "properties": {
                                  "hotwordRule": {
                                    "id": "GooglePrivacyDlpV2HotwordRule",
                                    "type": "object",
                                    "properties": {
                                      "proximity": {
                                        "id": "GooglePrivacyDlpV2Proximity",
                                        "type": "object",
                                        "properties": {
                                          "windowAfter": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Number of characters after the finding to consider."
                                          },
                                          "windowBefore": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Number of characters before the finding to consider."
                                          }
                                        },
                                        "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                      },
                                      "hotwordRegex": {
                                        "id": "GooglePrivacyDlpV2Regex",
                                        "type": "object",
                                        "properties": {
                                          "pattern": {
                                            "type": "string",
                                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                          },
                                          "groupIndexes": {
                                            "type": "array",
                                            "items": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                          }
                                        },
                                        "description": "Regular expression pattern defining what qualifies as a hotword."
                                      },
                                      "likelihoodAdjustment": {
                                        "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                        "type": "object",
                                        "properties": {
                                          "fixedLikelihood": {
                                            "enum": [
                                              "LIKELIHOOD_UNSPECIFIED",
                                              "VERY_UNLIKELY",
                                              "UNLIKELY",
                                              "POSSIBLE",
                                              "LIKELY",
                                              "VERY_LIKELY"
                                            ],
                                            "type": "string",
                                            "description": "Set the likelihood of a finding to a fixed value.",
                                            "enumDescriptions": [
                                              "Default value; same as POSSIBLE.",
                                              "Few matching elements.",
                                              "",
                                              "Some matching elements.",
                                              "",
                                              "Many matching elements."
                                            ]
                                          },
                                          "relativeLikelihood": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                          }
                                        },
                                        "description": "Likelihood adjustment to apply to all matching findings."
                                      }
                                    },
                                    "description": "Hotword-based detection rule."
                                  }
                                },
                                "description": "Deprecated; use `InspectionRuleSet` instead. Rule for modifying a `CustomInfoType` to alter behavior under certain circumstances, depending on the specific details of the rule. Not supported for the `surrogate_type` custom infoType."
                              },
                              "description": "Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in order that they are specified. Not supported for the `surrogate_type` CustomInfoType."
                            }
                          },
                          "description": "Custom information type provided by the user. Used to find domain-specific sensitive information configurable to the data in question."
                        },
                        "description": "CustomInfoTypes provided by the user. See https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more."
                      },
                      "excludeInfoTypes": {
                        "type": "boolean",
                        "description": "When true, excludes type information of the findings."
                      }
                    },
                    "description": "The core content of the template. Configuration of the scanning process."
                  }
                },
                "description": "The inspectTemplate contains a configuration (set of types of sensitive data to be detected) to be used anywhere you otherwise would normally specify InspectConfig. See https://cloud.google.com/dlp/docs/concepts-templates to learn more."
              },
              "description": "List of inspectTemplates, up to page_size in ListInspectTemplatesRequest."
            }
          },
          "description": "Response message for ListInspectTemplates."
        }
      ]
  projects.inspectTemplates.patch:
    description: |-
      Updates the InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.inspectTemplates/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.jobTriggers.activate:
    description: |-
      Activate a job trigger. Causes the immediate execute of a trigger instead of waiting on the trigger event to occur.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.jobTriggers/activate
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.jobTriggers.create:
    description: |-
      Creates a job trigger to run DLP actions such as scanning storage for sensitive information on a set schedule. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.jobTriggers/create
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.jobTriggers.delete:
    description: |-
      Deletes a job trigger. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.jobTriggers/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  projects.jobTriggers.get:
    description: |-
      Gets a job trigger. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.jobTriggers/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2JobTrigger",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Unique resource name for the triggeredJob, assigned by the service when the triggeredJob is created, for example `projects/dlp-test-project/jobTriggers/53234423`."
            },
            "errors": {
              "type": "array",
              "items": {
                "id": "GooglePrivacyDlpV2Error",
                "type": "object",
                "properties": {
                  "details": {
                    "id": "GoogleRpcStatus",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The status code, which should be an enum value of google.rpc.Code."
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object. Contains field @type with type URL."
                          }
                        },
                        "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                      },
                      "message": {
                        "type": "string",
                        "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                      }
                    },
                    "description": "Detailed error codes and messages."
                  },
                  "timestamps": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "google-datetime"
                    },
                    "description": "The times the error occurred."
                  }
                },
                "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
              },
              "readOnly": true,
              "description": "Output only. A stream of errors encountered when the trigger was activated. Repeated errors may result in the JobTrigger automatically being paused. Will return the last 100 errors. Whenever the JobTrigger is modified this list will be cleared."
            },
            "status": {
              "enum": [
                "STATUS_UNSPECIFIED",
                "HEALTHY",
                "PAUSED",
                "CANCELLED"
              ],
              "type": "string",
              "description": "Required. A status for this trigger.",
              "enumDescriptions": [
                "Unused.",
                "Trigger is healthy.",
                "Trigger is temporarily paused.",
                "Trigger is cancelled and can not be resumed."
              ]
            },
            "triggers": {
              "type": "array",
              "items": {
                "id": "GooglePrivacyDlpV2Trigger",
                "type": "object",
                "properties": {
                  "manual": {
                    "id": "GooglePrivacyDlpV2Manual",
                    "type": "object",
                    "properties": {},
                    "description": "For use with hybrid jobs. Jobs must be manually created and finished."
                  },
                  "schedule": {
                    "id": "GooglePrivacyDlpV2Schedule",
                    "type": "object",
                    "properties": {
                      "recurrencePeriodDuration": {
                        "type": "string",
                        "format": "google-duration",
                        "description": "With this option a job is started a regular periodic basis. For example: every day (86400 seconds). A scheduled start time will be skipped if the previous execution has not ended when its scheduled time occurs. This value must be set to a time duration greater than or equal to 1 day and can be no longer than 60 days."
                      }
                    },
                    "description": "Create a job on a repeating basis based on the elapse of time."
                  }
                },
                "description": "What event needs to occur for a new job to be started."
              },
              "description": "A list of triggers which will be OR'ed together. Only one in the list needs to trigger for a job to be started. The list may contain only a single Schedule trigger and must have at least one object."
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The creation timestamp of a triggeredJob."
            },
            "inspectJob": {
              "id": "GooglePrivacyDlpV2InspectJobConfig",
              "type": "object",
              "properties": {
                "actions": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2Action",
                    "type": "object",
                    "properties": {
                      "pubSub": {
                        "id": "GooglePrivacyDlpV2PublishToPubSub",
                        "type": "object",
                        "properties": {
                          "topic": {
                            "type": "string",
                            "description": "Cloud Pub/Sub topic to send notifications to. The topic must have given publishing access rights to the DLP API service account executing the long running DlpJob sending the notifications. Format is projects/{project}/topics/{topic}."
                          }
                        },
                        "description": "Publish a notification to a pubsub topic."
                      },
                      "saveFindings": {
                        "id": "GooglePrivacyDlpV2SaveFindings",
                        "type": "object",
                        "properties": {
                          "outputConfig": {
                            "id": "GooglePrivacyDlpV2OutputStorageConfig",
                            "type": "object",
                            "properties": {
                              "table": {
                                "id": "GooglePrivacyDlpV2BigQueryTable",
                                "type": "object",
                                "properties": {
                                  "tableId": {
                                    "type": "string",
                                    "description": "Name of the table."
                                  },
                                  "datasetId": {
                                    "type": "string",
                                    "description": "Dataset ID of the table."
                                  },
                                  "projectId": {
                                    "type": "string",
                                    "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                  }
                                },
                                "description": "Store findings in an existing table or a new table in an existing dataset. If table_id is not set a new one will be generated for you with the following format: dlp_googleapis_yyyy_mm_dd_[dlp_job_id]. Pacific timezone will be used for generating the date details. For Inspect, each column in an existing output table must have the same name, type, and mode of a field in the `Finding` object. For Risk, an existing output table should be the output of a previous Risk analysis job run on the same source table, with the same privacy metric and quasi-identifiers. Risk jobs that analyze the same table but compute a different privacy metric, or use different sets of quasi-identifiers, cannot store their results in the same table."
                              },
                              "outputSchema": {
                                "enum": [
                                  "OUTPUT_SCHEMA_UNSPECIFIED",
                                  "BASIC_COLUMNS",
                                  "GCS_COLUMNS",
                                  "DATASTORE_COLUMNS",
                                  "BIG_QUERY_COLUMNS",
                                  "ALL_COLUMNS"
                                ],
                                "type": "string",
                                "description": "Schema used for writing the findings for Inspect jobs. This field is only used for Inspect and must be unspecified for Risk jobs. Columns are derived from the `Finding` object. If appending to an existing table, any columns from the predefined schema that are missing will be added. No columns in the existing table will be deleted. If unspecified, then all available columns will be used for a new table or an (existing) table with no schema, and no changes will be made to an existing table that has a schema. Only for use with external storage.",
                                "enumDescriptions": [
                                  "Unused.",
                                  "Basic schema including only `info_type`, `quote`, `certainty`, and `timestamp`.",
                                  "Schema tailored to findings from scanning Google Cloud Storage.",
                                  "Schema tailored to findings from scanning Google Datastore.",
                                  "Schema tailored to findings from scanning Google BigQuery.",
                                  "Schema containing all columns."
                                ]
                              }
                            },
                            "description": "Location to store findings outside of DLP."
                          }
                        },
                        "description": "Save resulting findings in a provided location."
                      },
                      "publishSummaryToCscc": {
                        "id": "GooglePrivacyDlpV2PublishSummaryToCscc",
                        "type": "object",
                        "properties": {},
                        "description": "Publish summary to Cloud Security Command Center (Alpha)."
                      },
                      "publishToStackdriver": {
                        "id": "GooglePrivacyDlpV2PublishToStackdriver",
                        "type": "object",
                        "properties": {},
                        "description": "Enable Stackdriver metric dlp.googleapis.com/finding_count."
                      },
                      "jobNotificationEmails": {
                        "id": "GooglePrivacyDlpV2JobNotificationEmails",
                        "type": "object",
                        "properties": {},
                        "description": "Enable email notification for project owners and editors on job's completion/failure."
                      },
                      "publishFindingsToCloudDataCatalog": {
                        "id": "GooglePrivacyDlpV2PublishFindingsToCloudDataCatalog",
                        "type": "object",
                        "properties": {},
                        "description": "Publish findings to Cloud Datahub."
                      }
                    },
                    "description": "A task to execute on the completion of a job. See https://cloud.google.com/dlp/docs/concepts-actions to learn more."
                  },
                  "description": "Actions to execute at the completion of the job."
                },
                "inspectConfig": {
                  "id": "GooglePrivacyDlpV2InspectConfig",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "id": "GooglePrivacyDlpV2FindingLimits",
                      "type": "object",
                      "properties": {
                        "maxFindingsPerItem": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Max number of findings that will be returned for each item scanned. When set within `InspectJobConfig`, the maximum returned is 2000 regardless if this is set higher. When set within `InspectContentRequest`, this field is ignored."
                        },
                        "maxFindingsPerRequest": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Max number of findings that will be returned per request/job. When set within `InspectContentRequest`, the maximum returned is 2000 regardless if this is set higher."
                        },
                        "maxFindingsPerInfoType": {
                          "type": "array",
                          "items": {
                            "id": "GooglePrivacyDlpV2InfoTypeLimit",
                            "type": "object",
                            "properties": {
                              "infoType": {
                                "id": "GooglePrivacyDlpV2InfoType",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                  }
                                },
                                "description": "Type of information detected by the API."
                              },
                              "maxFindings": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Max findings limit for the given infoType."
                              }
                            },
                            "description": "Max findings configuration per infoType, per content item or long running DlpJob."
                          },
                          "description": "Configuration of findings limit given for specified infoTypes."
                        }
                      },
                      "description": "Configuration to control the number of findings returned."
                    },
                    "ruleSet": {
                      "type": "array",
                      "items": {
                        "id": "GooglePrivacyDlpV2InspectionRuleSet",
                        "type": "object",
                        "properties": {
                          "rules": {
                            "type": "array",
                            "items": {
                              "id": "GooglePrivacyDlpV2InspectionRule",
                              "type": "object",
                              "properties": {
                                "hotwordRule": {
                                  "id": "GooglePrivacyDlpV2HotwordRule",
                                  "type": "object",
                                  "properties": {
                                    "proximity": {
                                      "id": "GooglePrivacyDlpV2Proximity",
                                      "type": "object",
                                      "properties": {
                                        "windowAfter": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Number of characters after the finding to consider."
                                        },
                                        "windowBefore": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Number of characters before the finding to consider."
                                        }
                                      },
                                      "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                    },
                                    "hotwordRegex": {
                                      "id": "GooglePrivacyDlpV2Regex",
                                      "type": "object",
                                      "properties": {
                                        "pattern": {
                                          "type": "string",
                                          "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                        },
                                        "groupIndexes": {
                                          "type": "array",
                                          "items": {
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                        }
                                      },
                                      "description": "Regular expression pattern defining what qualifies as a hotword."
                                    },
                                    "likelihoodAdjustment": {
                                      "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                      "type": "object",
                                      "properties": {
                                        "fixedLikelihood": {
                                          "enum": [
                                            "LIKELIHOOD_UNSPECIFIED",
                                            "VERY_UNLIKELY",
                                            "UNLIKELY",
                                            "POSSIBLE",
                                            "LIKELY",
                                            "VERY_LIKELY"
                                          ],
                                          "type": "string",
                                          "description": "Set the likelihood of a finding to a fixed value.",
                                          "enumDescriptions": [
                                            "Default value; same as POSSIBLE.",
                                            "Few matching elements.",
                                            "",
                                            "Some matching elements.",
                                            "",
                                            "Many matching elements."
                                          ]
                                        },
                                        "relativeLikelihood": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                        }
                                      },
                                      "description": "Likelihood adjustment to apply to all matching findings."
                                    }
                                  },
                                  "description": "Hotword-based detection rule."
                                },
                                "exclusionRule": {
                                  "id": "GooglePrivacyDlpV2ExclusionRule",
                                  "type": "object",
                                  "properties": {
                                    "regex": {
                                      "id": "GooglePrivacyDlpV2Regex",
                                      "type": "object",
                                      "properties": {
                                        "pattern": {
                                          "type": "string",
                                          "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                        },
                                        "groupIndexes": {
                                          "type": "array",
                                          "items": {
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                        }
                                      },
                                      "description": "Regular expression which defines the rule."
                                    },
                                    "dictionary": {
                                      "id": "GooglePrivacyDlpV2Dictionary",
                                      "type": "object",
                                      "properties": {
                                        "wordList": {
                                          "id": "GooglePrivacyDlpV2WordList",
                                          "type": "object",
                                          "properties": {
                                            "words": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                            }
                                          },
                                          "description": "List of words or phrases to search for."
                                        },
                                        "cloudStoragePath": {
                                          "id": "GooglePrivacyDlpV2CloudStoragePath",
                                          "type": "object",
                                          "properties": {
                                            "path": {
                                              "type": "string",
                                              "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                            }
                                          },
                                          "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                                        }
                                      },
                                      "description": "Dictionary which defines the rule."
                                    },
                                    "matchingType": {
                                      "enum": [
                                        "MATCHING_TYPE_UNSPECIFIED",
                                        "MATCHING_TYPE_FULL_MATCH",
                                        "MATCHING_TYPE_PARTIAL_MATCH",
                                        "MATCHING_TYPE_INVERSE_MATCH"
                                      ],
                                      "type": "string",
                                      "description": "How the rule is applied, see MatchingType documentation for details.",
                                      "enumDescriptions": [
                                        "Invalid.",
                                        "Full match. - Dictionary: join of Dictionary results matched complete finding quote - Regex: all regex matches fill a finding quote start to end - Exclude info type: completely inside affecting info types findings",
                                        "Partial match. - Dictionary: at least one of the tokens in the finding matches - Regex: substring of the finding matches - Exclude info type: intersects with affecting info types findings",
                                        "Inverse match. - Dictionary: no tokens in the finding match the dictionary - Regex: finding doesn't match the regex - Exclude info type: no intersection with affecting info types findings"
                                      ]
                                    },
                                    "excludeInfoTypes": {
                                      "id": "GooglePrivacyDlpV2ExcludeInfoTypes",
                                      "type": "object",
                                      "properties": {
                                        "infoTypes": {
                                          "type": "array",
                                          "items": {
                                            "id": "GooglePrivacyDlpV2InfoType",
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                              }
                                            },
                                            "description": "Type of information detected by the API."
                                          },
                                          "description": "InfoType list in ExclusionRule rule drops a finding when it overlaps or contained within with a finding of an infoType from this list. For example, for `InspectionRuleSet.info_types` containing \"PHONE_NUMBER\"` and `exclusion_rule` containing `exclude_info_types.info_types` with \"EMAIL_ADDRESS\" the phone number findings are dropped if they overlap with EMAIL_ADDRESS finding. That leads to \"555-222-2222@example.org\" to generate only a single finding, namely email address."
                                        }
                                      },
                                      "description": "Set of infoTypes for which findings would affect this rule."
                                    }
                                  },
                                  "description": "Exclusion rule."
                                }
                              },
                              "description": "A single inspection rule to be applied to infoTypes, specified in `InspectionRuleSet`."
                            },
                            "description": "Set of rules to be applied to infoTypes. The rules are applied in order."
                          },
                          "infoTypes": {
                            "type": "array",
                            "items": {
                              "id": "GooglePrivacyDlpV2InfoType",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                }
                              },
                              "description": "Type of information detected by the API."
                            },
                            "description": "List of infoTypes this rule set is applied to."
                          }
                        },
                        "description": "Rule set for modifying a set of infoTypes to alter behavior under certain circumstances, depending on the specific details of the rules within the set."
                      },
                      "description": "Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type."
                    },
                    "infoTypes": {
                      "type": "array",
                      "items": {
                        "id": "GooglePrivacyDlpV2InfoType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                          }
                        },
                        "description": "Type of information detected by the API."
                      },
                      "description": "Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/dlp/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time."
                    },
                    "includeQuote": {
                      "type": "boolean",
                      "description": "When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote."
                    },
                    "minLikelihood": {
                      "enum": [
                        "LIKELIHOOD_UNSPECIFIED",
                        "VERY_UNLIKELY",
                        "UNLIKELY",
                        "POSSIBLE",
                        "LIKELY",
                        "VERY_LIKELY"
                      ],
                      "type": "string",
                      "description": "Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more.",
                      "enumDescriptions": [
                        "Default value; same as POSSIBLE.",
                        "Few matching elements.",
                        "",
                        "Some matching elements.",
                        "",
                        "Many matching elements."
                      ]
                    },
                    "contentOptions": {
                      "type": "array",
                      "items": {
                        "enum": [
                          "CONTENT_UNSPECIFIED",
                          "CONTENT_TEXT",
                          "CONTENT_IMAGE"
                        ],
                        "type": "string",
                        "enumDescriptions": [
                          "Includes entire content of a file or a data stream.",
                          "Text content within the data, excluding any metadata.",
                          "Images found in the data."
                        ]
                      },
                      "description": "List of options defining data content to scan. If empty, text, images, and other content will be included."
                    },
                    "customInfoTypes": {
                      "type": "array",
                      "items": {
                        "id": "GooglePrivacyDlpV2CustomInfoType",
                        "type": "object",
                        "properties": {
                          "regex": {
                            "id": "GooglePrivacyDlpV2Regex",
                            "type": "object",
                            "properties": {
                              "pattern": {
                                "type": "string",
                                "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                              },
                              "groupIndexes": {
                                "type": "array",
                                "items": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                              }
                            },
                            "description": "Regular expression based CustomInfoType."
                          },
                          "infoType": {
                            "id": "GooglePrivacyDlpV2InfoType",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                              }
                            },
                            "description": "Type of information detected by the API."
                          },
                          "dictionary": {
                            "id": "GooglePrivacyDlpV2Dictionary",
                            "type": "object",
                            "properties": {
                              "wordList": {
                                "id": "GooglePrivacyDlpV2WordList",
                                "type": "object",
                                "properties": {
                                  "words": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                  }
                                },
                                "description": "List of words or phrases to search for."
                              },
                              "cloudStoragePath": {
                                "id": "GooglePrivacyDlpV2CloudStoragePath",
                                "type": "object",
                                "properties": {
                                  "path": {
                                    "type": "string",
                                    "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                  }
                                },
                                "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                              }
                            },
                            "description": "A list of phrases to detect as a CustomInfoType."
                          },
                          "likelihood": {
                            "enum": [
                              "LIKELIHOOD_UNSPECIFIED",
                              "VERY_UNLIKELY",
                              "UNLIKELY",
                              "POSSIBLE",
                              "LIKELY",
                              "VERY_LIKELY"
                            ],
                            "type": "string",
                            "description": "Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not specified.",
                            "enumDescriptions": [
                              "Default value; same as POSSIBLE.",
                              "Few matching elements.",
                              "",
                              "Some matching elements.",
                              "",
                              "Many matching elements."
                            ]
                          },
                          "storedType": {
                            "id": "GooglePrivacyDlpV2StoredType",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Resource name of the requested `StoredInfoType`, for example `organizations/433245324/storedInfoTypes/432452342` or `projects/project-id/storedInfoTypes/432452342`."
                              },
                              "createTime": {
                                "type": "string",
                                "format": "google-datetime",
                                "description": "Timestamp indicating when the version of the `StoredInfoType` used for inspection was created. Output-only field, populated by the system."
                              }
                            },
                            "description": "Load an existing `StoredInfoType` resource for use in `InspectDataSource`. Not currently supported in `InspectContent`."
                          },
                          "exclusionType": {
                            "enum": [
                              "EXCLUSION_TYPE_UNSPECIFIED",
                              "EXCLUSION_TYPE_EXCLUDE"
                            ],
                            "type": "string",
                            "description": "If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching.",
                            "enumDescriptions": [
                              "A finding of this custom info type will not be excluded from results.",
                              "A finding of this custom info type will be excluded from final results, but can still affect rule execution."
                            ]
                          },
                          "surrogateType": {
                            "id": "GooglePrivacyDlpV2SurrogateType",
                            "type": "object",
                            "properties": {},
                            "description": "Message for detecting output from deidentification transformations that support reversing."
                          },
                          "detectionRules": {
                            "type": "array",
                            "items": {
                              "id": "GooglePrivacyDlpV2DetectionRule",
                              "type": "object",
                              "properties": {
                                "hotwordRule": {
                                  "id": "GooglePrivacyDlpV2HotwordRule",
                                  "type": "object",
                                  "properties": {
                                    "proximity": {
                                      "id": "GooglePrivacyDlpV2Proximity",
                                      "type": "object",
                                      "properties": {
                                        "windowAfter": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Number of characters after the finding to consider."
                                        },
                                        "windowBefore": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Number of characters before the finding to consider."
                                        }
                                      },
                                      "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                    },
                                    "hotwordRegex": {
                                      "id": "GooglePrivacyDlpV2Regex",
                                      "type": "object",
                                      "properties": {
                                        "pattern": {
                                          "type": "string",
                                          "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                        },
                                        "groupIndexes": {
                                          "type": "array",
                                          "items": {
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                        }
                                      },
                                      "description": "Regular expression pattern defining what qualifies as a hotword."
                                    },
                                    "likelihoodAdjustment": {
                                      "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                      "type": "object",
                                      "properties": {
                                        "fixedLikelihood": {
                                          "enum": [
                                            "LIKELIHOOD_UNSPECIFIED",
                                            "VERY_UNLIKELY",
                                            "UNLIKELY",
                                            "POSSIBLE",
                                            "LIKELY",
                                            "VERY_LIKELY"
                                          ],
                                          "type": "string",
                                          "description": "Set the likelihood of a finding to a fixed value.",
                                          "enumDescriptions": [
                                            "Default value; same as POSSIBLE.",
                                            "Few matching elements.",
                                            "",
                                            "Some matching elements.",
                                            "",
                                            "Many matching elements."
                                          ]
                                        },
                                        "relativeLikelihood": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                        }
                                      },
                                      "description": "Likelihood adjustment to apply to all matching findings."
                                    }
                                  },
                                  "description": "Hotword-based detection rule."
                                }
                              },
                              "description": "Deprecated; use `InspectionRuleSet` instead. Rule for modifying a `CustomInfoType` to alter behavior under certain circumstances, depending on the specific details of the rule. Not supported for the `surrogate_type` custom infoType."
                            },
                            "description": "Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in order that they are specified. Not supported for the `surrogate_type` CustomInfoType."
                          }
                        },
                        "description": "Custom information type provided by the user. Used to find domain-specific sensitive information configurable to the data in question."
                      },
                      "description": "CustomInfoTypes provided by the user. See https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more."
                    },
                    "excludeInfoTypes": {
                      "type": "boolean",
                      "description": "When true, excludes type information of the findings."
                    }
                  },
                  "description": "How and what to scan for."
                },
                "storageConfig": {
                  "id": "GooglePrivacyDlpV2StorageConfig",
                  "type": "object",
                  "properties": {
                    "hybridOptions": {
                      "id": "GooglePrivacyDlpV2HybridOptions",
                      "type": "object",
                      "properties": {
                        "labels": {
                          "type": "object",
                          "description": "To organize findings, these labels will be added to each finding. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples: * `\"environment\" : \"production\"` * `\"pipeline\" : \"etl\"`",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "A short description of where the data is coming from. Will be stored once in the job. 256 max length."
                        },
                        "tableOptions": {
                          "id": "GooglePrivacyDlpV2TableOptions",
                          "type": "object",
                          "properties": {
                            "identifyingFields": {
                              "type": "array",
                              "items": {
                                "id": "GooglePrivacyDlpV2FieldId",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name describing the field."
                                  }
                                },
                                "description": "General identifier of a data field in a storage service."
                              },
                              "description": "The columns that are the primary keys for table objects included in ContentItem. A copy of this cell's value will stored alongside alongside each finding so that the finding can be traced to the specific row it came from. No more than 3 may be provided."
                            }
                          },
                          "description": "If the container is a table, additional information to make findings meaningful such as the columns that are primary keys."
                        },
                        "requiredFindingLabelKeys": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "These are labels that each inspection request must include within their 'finding_labels' map. Request may contain others, but any missing one of these will be rejected. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. No more than 10 keys can be required."
                        }
                      },
                      "description": "Hybrid inspection options."
                    },
                    "timespanConfig": {
                      "id": "GooglePrivacyDlpV2TimespanConfig",
                      "type": "object",
                      "properties": {
                        "endTime": {
                          "type": "string",
                          "format": "google-datetime",
                          "description": "Exclude files, tables, or rows newer than this value. If not set, no upper time limit is applied."
                        },
                        "startTime": {
                          "type": "string",
                          "format": "google-datetime",
                          "description": "Exclude files, tables, or rows older than this value. If not set, no lower time limit is applied."
                        },
                        "timestampField": {
                          "id": "GooglePrivacyDlpV2FieldId",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name describing the field."
                            }
                          },
                          "description": "General identifier of a data field in a storage service."
                        },
                        "enableAutoPopulationOfTimespanConfig": {
                          "type": "boolean",
                          "description": "When the job is started by a JobTrigger we will automatically figure out a valid start_time to avoid scanning files that have not been modified since the last time the JobTrigger executed. This will be based on the time of the execution of the last run of the JobTrigger."
                        }
                      },
                      "description": "Configuration of the timespan of the items to include in scanning. Currently only supported when inspecting Google Cloud Storage and BigQuery."
                    },
                    "bigQueryOptions": {
                      "id": "GooglePrivacyDlpV2BigQueryOptions",
                      "type": "object",
                      "properties": {
                        "rowsLimit": {
                          "type": "string",
                          "format": "int64",
                          "description": "Max number of rows to scan. If the table has more rows than this value, the rest of the rows are omitted. If not set, or if set to 0, all rows will be scanned. Only one of rows_limit and rows_limit_percent can be specified. Cannot be used in conjunction with TimespanConfig."
                        },
                        "sampleMethod": {
                          "enum": [
                            "SAMPLE_METHOD_UNSPECIFIED",
                            "TOP",
                            "RANDOM_START"
                          ],
                          "type": "string",
                          "enumDescriptions": [
                            "",
                            "Scan groups of rows in the order BigQuery provides (default). Multiple groups of rows may be scanned in parallel, so results may not appear in the same order the rows are read.",
                            "Randomly pick groups of rows to scan."
                          ]
                        },
                        "excludedFields": {
                          "type": "array",
                          "items": {
                            "id": "GooglePrivacyDlpV2FieldId",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name describing the field."
                              }
                            },
                            "description": "General identifier of a data field in a storage service."
                          },
                          "description": "References to fields excluded from scanning. This allows you to skip inspection of entire columns which you know have no findings."
                        },
                        "tableReference": {
                          "id": "GooglePrivacyDlpV2BigQueryTable",
                          "type": "object",
                          "properties": {
                            "tableId": {
                              "type": "string",
                              "description": "Name of the table."
                            },
                            "datasetId": {
                              "type": "string",
                              "description": "Dataset ID of the table."
                            },
                            "projectId": {
                              "type": "string",
                              "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                            }
                          },
                          "description": "Complete BigQuery table reference."
                        },
                        "rowsLimitPercent": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Max percentage of rows to scan. The rest are omitted. The number of rows scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one of rows_limit and rows_limit_percent can be specified. Cannot be used in conjunction with TimespanConfig."
                        },
                        "identifyingFields": {
                          "type": "array",
                          "items": {
                            "id": "GooglePrivacyDlpV2FieldId",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name describing the field."
                              }
                            },
                            "description": "General identifier of a data field in a storage service."
                          },
                          "description": "Table fields that may uniquely identify a row within the table. When `actions.saveFindings.outputConfig.table` is specified, the values of columns specified here are available in the output table under `location.content_locations.record_location.record_key.id_values`. Nested fields such as `person.birthdate.year` are allowed."
                        }
                      },
                      "description": "BigQuery options."
                    },
                    "datastoreOptions": {
                      "id": "GooglePrivacyDlpV2DatastoreOptions",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "id": "GooglePrivacyDlpV2KindExpression",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the kind."
                            }
                          },
                          "description": "The kind to process."
                        },
                        "partitionId": {
                          "id": "GooglePrivacyDlpV2PartitionId",
                          "type": "object",
                          "properties": {
                            "projectId": {
                              "type": "string",
                              "description": "The ID of the project to which the entities belong."
                            },
                            "namespaceId": {
                              "type": "string",
                              "description": "If not empty, the ID of the namespace to which the entities belong."
                            }
                          },
                          "description": "A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty."
                        }
                      },
                      "description": "Google Cloud Datastore options."
                    },
                    "cloudStorageOptions": {
                      "id": "GooglePrivacyDlpV2CloudStorageOptions",
                      "type": "object",
                      "properties": {
                        "fileSet": {
                          "id": "GooglePrivacyDlpV2FileSet",
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "description": "The Cloud Storage url of the file(s) to scan, in the format `gs:///`. Trailing wildcard in the path is allowed. If the url ends in a trailing slash, the bucket or directory represented by the url will be scanned non-recursively (content in sub-directories will not be scanned). This means that `gs://mybucket/` is equivalent to `gs://mybucket/*`, and `gs://mybucket/directory/` is equivalent to `gs://mybucket/directory/*`. Exactly one of `url` or `regex_file_set` must be set."
                            },
                            "regexFileSet": {
                              "id": "GooglePrivacyDlpV2CloudStorageRegexFileSet",
                              "type": "object",
                              "properties": {
                                "bucketName": {
                                  "type": "string",
                                  "description": "The name of a Cloud Storage bucket. Required."
                                },
                                "excludeRegex": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "A list of regular expressions matching file paths to exclude. All files in the bucket that match at least one of these regular expressions will be excluded from the scan. Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub."
                                },
                                "includeRegex": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "A list of regular expressions matching file paths to include. All files in the bucket that match at least one of these regular expressions will be included in the set of files, except for those that also match an item in `exclude_regex`. Leaving this field empty will match all files by default (this is equivalent to including `.*` in the list). Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub."
                                }
                              },
                              "description": "The regex-filtered set of files to scan. Exactly one of `url` or `regex_file_set` must be set."
                            }
                          },
                          "description": "The set of one or more files to scan."
                        },
                        "fileTypes": {
                          "type": "array",
                          "items": {
                            "enum": [
                              "FILE_TYPE_UNSPECIFIED",
                              "BINARY_FILE",
                              "TEXT_FILE",
                              "IMAGE",
                              "WORD",
                              "PDF",
                              "AVRO",
                              "CSV",
                              "TSV"
                            ],
                            "type": "string",
                            "enumDescriptions": [
                              "Includes all files.",
                              "Includes all file extensions not covered by another entry. Binary scanning attempts to convert the content of the file to utf_8 to scan the file. If you wish to avoid this fall back, specify one or more of the other FileType's in your storage scan.",
                              "Included file extensions: asc,asp, aspx, brf, c, cc,cfm, cgi, cpp, csv, cxx, c++, cs, css, dart, dat, dot, eml,, epbub, ged, go, h, hh, hpp, hxx, h++, hs, html, htm, mkd, markdown, m, ml, mli, perl, pl, plist, pm, php, phtml, pht, properties, py, pyw, rb, rbw, rs, rss, rc, scala, sh, sql, swift, tex, shtml, shtm, xhtml, lhs, ics, ini, java, js, json, kix, kml, ocaml, md, txt, text, tsv, vb, vcard, vcs, wml, xcodeproj, xml, xsl, xsd, yml, yaml.",
                              "Included file extensions: bmp, gif, jpg, jpeg, jpe, png. bytes_limit_per_file has no effect on image files. Image inspection is restricted to 'global', 'us', 'asia', and 'europe'.",
                              "Word files >30 MB will be scanned as binary files. Included file extensions: docx, dotx, docm, dotm",
                              "PDF files >30 MB will be scanned as binary files. Included file extensions: pdf",
                              "Included file extensions: avro",
                              "Included file extensions: csv",
                              "Included file extensions: tsv"
                            ]
                          },
                          "description": "List of file type groups to include in the scan. If empty, all files are scanned and available data format processors are applied. In addition, the binary content of the selected files is always scanned as well. Images are scanned only as binary if the specified region does not support image inspection and no file_types were specified. Image inspection is restricted to 'global', 'us', 'asia', and 'europe'."
                        },
                        "sampleMethod": {
                          "enum": [
                            "SAMPLE_METHOD_UNSPECIFIED",
                            "TOP",
                            "RANDOM_START"
                          ],
                          "type": "string",
                          "enumDescriptions": [
                            "",
                            "Scan from the top (default).",
                            "For each file larger than bytes_limit_per_file, randomly pick the offset to start scanning. The scanned bytes are contiguous."
                          ]
                        },
                        "bytesLimitPerFile": {
                          "type": "string",
                          "format": "int64",
                          "description": "Max number of bytes to scan from a file. If a scanned file's size is bigger than this value then the rest of the bytes are omitted. Only one of bytes_limit_per_file and bytes_limit_per_file_percent can be specified. Cannot be set if de-identification is requested."
                        },
                        "filesLimitPercent": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Limits the number of files to scan to this percentage of the input FileSet. Number of files scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0."
                        },
                        "bytesLimitPerFilePercent": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Max percentage of bytes to scan from a file. The rest are omitted. The number of bytes scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one of bytes_limit_per_file and bytes_limit_per_file_percent can be specified. Cannot be set if de-identification is requested."
                        }
                      },
                      "description": "Google Cloud Storage options."
                    }
                  },
                  "description": "The data to scan."
                },
                "inspectTemplateName": {
                  "type": "string",
                  "description": "If provided, will be used as the default for all values in InspectConfig. `inspect_config` will be merged into the values persisted as part of the template."
                }
              },
              "description": "For inspect jobs, a snapshot of the configuration."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The last update timestamp of a triggeredJob."
            },
            "description": {
              "type": "string",
              "description": "User provided description (max 256 chars)"
            },
            "displayName": {
              "type": "string",
              "description": "Display name (max 100 chars)"
            },
            "lastRunTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The timestamp of the last time this trigger executed."
            }
          },
          "description": "Contains a configuration to make dlp api calls on a repeating basis. See https://cloud.google.com/dlp/docs/concepts-job-triggers to learn more."
        }
      ]
  projects.jobTriggers.list:
    description: |-
      Lists job triggers. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.jobTriggers/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2ListJobTriggersResponse",
          "type": "object",
          "properties": {
            "jobTriggers": {
              "type": "array",
              "items": {
                "id": "GooglePrivacyDlpV2JobTrigger",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Unique resource name for the triggeredJob, assigned by the service when the triggeredJob is created, for example `projects/dlp-test-project/jobTriggers/53234423`."
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "id": "GooglePrivacyDlpV2Error",
                      "type": "object",
                      "properties": {
                        "details": {
                          "id": "GoogleRpcStatus",
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The status code, which should be an enum value of google.rpc.Code."
                            },
                            "details": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "any",
                                  "description": "Properties of the object. Contains field @type with type URL."
                                }
                              },
                              "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                            },
                            "message": {
                              "type": "string",
                              "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                            }
                          },
                          "description": "Detailed error codes and messages."
                        },
                        "timestamps": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "google-datetime"
                          },
                          "description": "The times the error occurred."
                        }
                      },
                      "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
                    },
                    "readOnly": true,
                    "description": "Output only. A stream of errors encountered when the trigger was activated. Repeated errors may result in the JobTrigger automatically being paused. Will return the last 100 errors. Whenever the JobTrigger is modified this list will be cleared."
                  },
                  "status": {
                    "enum": [
                      "STATUS_UNSPECIFIED",
                      "HEALTHY",
                      "PAUSED",
                      "CANCELLED"
                    ],
                    "type": "string",
                    "description": "Required. A status for this trigger.",
                    "enumDescriptions": [
                      "Unused.",
                      "Trigger is healthy.",
                      "Trigger is temporarily paused.",
                      "Trigger is cancelled and can not be resumed."
                    ]
                  },
                  "triggers": {
                    "type": "array",
                    "items": {
                      "id": "GooglePrivacyDlpV2Trigger",
                      "type": "object",
                      "properties": {
                        "manual": {
                          "id": "GooglePrivacyDlpV2Manual",
                          "type": "object",
                          "properties": {},
                          "description": "For use with hybrid jobs. Jobs must be manually created and finished."
                        },
                        "schedule": {
                          "id": "GooglePrivacyDlpV2Schedule",
                          "type": "object",
                          "properties": {
                            "recurrencePeriodDuration": {
                              "type": "string",
                              "format": "google-duration",
                              "description": "With this option a job is started a regular periodic basis. For example: every day (86400 seconds). A scheduled start time will be skipped if the previous execution has not ended when its scheduled time occurs. This value must be set to a time duration greater than or equal to 1 day and can be no longer than 60 days."
                            }
                          },
                          "description": "Create a job on a repeating basis based on the elapse of time."
                        }
                      },
                      "description": "What event needs to occur for a new job to be started."
                    },
                    "description": "A list of triggers which will be OR'ed together. Only one in the list needs to trigger for a job to be started. The list may contain only a single Schedule trigger and must have at least one object."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The creation timestamp of a triggeredJob."
                  },
                  "inspectJob": {
                    "id": "GooglePrivacyDlpV2InspectJobConfig",
                    "type": "object",
                    "properties": {
                      "actions": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2Action",
                          "type": "object",
                          "properties": {
                            "pubSub": {
                              "id": "GooglePrivacyDlpV2PublishToPubSub",
                              "type": "object",
                              "properties": {
                                "topic": {
                                  "type": "string",
                                  "description": "Cloud Pub/Sub topic to send notifications to. The topic must have given publishing access rights to the DLP API service account executing the long running DlpJob sending the notifications. Format is projects/{project}/topics/{topic}."
                                }
                              },
                              "description": "Publish a notification to a pubsub topic."
                            },
                            "saveFindings": {
                              "id": "GooglePrivacyDlpV2SaveFindings",
                              "type": "object",
                              "properties": {
                                "outputConfig": {
                                  "id": "GooglePrivacyDlpV2OutputStorageConfig",
                                  "type": "object",
                                  "properties": {
                                    "table": {
                                      "id": "GooglePrivacyDlpV2BigQueryTable",
                                      "type": "object",
                                      "properties": {
                                        "tableId": {
                                          "type": "string",
                                          "description": "Name of the table."
                                        },
                                        "datasetId": {
                                          "type": "string",
                                          "description": "Dataset ID of the table."
                                        },
                                        "projectId": {
                                          "type": "string",
                                          "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                        }
                                      },
                                      "description": "Store findings in an existing table or a new table in an existing dataset. If table_id is not set a new one will be generated for you with the following format: dlp_googleapis_yyyy_mm_dd_[dlp_job_id]. Pacific timezone will be used for generating the date details. For Inspect, each column in an existing output table must have the same name, type, and mode of a field in the `Finding` object. For Risk, an existing output table should be the output of a previous Risk analysis job run on the same source table, with the same privacy metric and quasi-identifiers. Risk jobs that analyze the same table but compute a different privacy metric, or use different sets of quasi-identifiers, cannot store their results in the same table."
                                    },
                                    "outputSchema": {
                                      "enum": [
                                        "OUTPUT_SCHEMA_UNSPECIFIED",
                                        "BASIC_COLUMNS",
                                        "GCS_COLUMNS",
                                        "DATASTORE_COLUMNS",
                                        "BIG_QUERY_COLUMNS",
                                        "ALL_COLUMNS"
                                      ],
                                      "type": "string",
                                      "description": "Schema used for writing the findings for Inspect jobs. This field is only used for Inspect and must be unspecified for Risk jobs. Columns are derived from the `Finding` object. If appending to an existing table, any columns from the predefined schema that are missing will be added. No columns in the existing table will be deleted. If unspecified, then all available columns will be used for a new table or an (existing) table with no schema, and no changes will be made to an existing table that has a schema. Only for use with external storage.",
                                      "enumDescriptions": [
                                        "Unused.",
                                        "Basic schema including only `info_type`, `quote`, `certainty`, and `timestamp`.",
                                        "Schema tailored to findings from scanning Google Cloud Storage.",
                                        "Schema tailored to findings from scanning Google Datastore.",
                                        "Schema tailored to findings from scanning Google BigQuery.",
                                        "Schema containing all columns."
                                      ]
                                    }
                                  },
                                  "description": "Location to store findings outside of DLP."
                                }
                              },
                              "description": "Save resulting findings in a provided location."
                            },
                            "publishSummaryToCscc": {
                              "id": "GooglePrivacyDlpV2PublishSummaryToCscc",
                              "type": "object",
                              "properties": {},
                              "description": "Publish summary to Cloud Security Command Center (Alpha)."
                            },
                            "publishToStackdriver": {
                              "id": "GooglePrivacyDlpV2PublishToStackdriver",
                              "type": "object",
                              "properties": {},
                              "description": "Enable Stackdriver metric dlp.googleapis.com/finding_count."
                            },
                            "jobNotificationEmails": {
                              "id": "GooglePrivacyDlpV2JobNotificationEmails",
                              "type": "object",
                              "properties": {},
                              "description": "Enable email notification for project owners and editors on job's completion/failure."
                            },
                            "publishFindingsToCloudDataCatalog": {
                              "id": "GooglePrivacyDlpV2PublishFindingsToCloudDataCatalog",
                              "type": "object",
                              "properties": {},
                              "description": "Publish findings to Cloud Datahub."
                            }
                          },
                          "description": "A task to execute on the completion of a job. See https://cloud.google.com/dlp/docs/concepts-actions to learn more."
                        },
                        "description": "Actions to execute at the completion of the job."
                      },
                      "inspectConfig": {
                        "id": "GooglePrivacyDlpV2InspectConfig",
                        "type": "object",
                        "properties": {
                          "limits": {
                            "id": "GooglePrivacyDlpV2FindingLimits",
                            "type": "object",
                            "properties": {
                              "maxFindingsPerItem": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Max number of findings that will be returned for each item scanned. When set within `InspectJobConfig`, the maximum returned is 2000 regardless if this is set higher. When set within `InspectContentRequest`, this field is ignored."
                              },
                              "maxFindingsPerRequest": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Max number of findings that will be returned per request/job. When set within `InspectContentRequest`, the maximum returned is 2000 regardless if this is set higher."
                              },
                              "maxFindingsPerInfoType": {
                                "type": "array",
                                "items": {
                                  "id": "GooglePrivacyDlpV2InfoTypeLimit",
                                  "type": "object",
                                  "properties": {
                                    "infoType": {
                                      "id": "GooglePrivacyDlpV2InfoType",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                        }
                                      },
                                      "description": "Type of information detected by the API."
                                    },
                                    "maxFindings": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Max findings limit for the given infoType."
                                    }
                                  },
                                  "description": "Max findings configuration per infoType, per content item or long running DlpJob."
                                },
                                "description": "Configuration of findings limit given for specified infoTypes."
                              }
                            },
                            "description": "Configuration to control the number of findings returned."
                          },
                          "ruleSet": {
                            "type": "array",
                            "items": {
                              "id": "GooglePrivacyDlpV2InspectionRuleSet",
                              "type": "object",
                              "properties": {
                                "rules": {
                                  "type": "array",
                                  "items": {
                                    "id": "GooglePrivacyDlpV2InspectionRule",
                                    "type": "object",
                                    "properties": {
                                      "hotwordRule": {
                                        "id": "GooglePrivacyDlpV2HotwordRule",
                                        "type": "object",
                                        "properties": {
                                          "proximity": {
                                            "id": "GooglePrivacyDlpV2Proximity",
                                            "type": "object",
                                            "properties": {
                                              "windowAfter": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "Number of characters after the finding to consider."
                                              },
                                              "windowBefore": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "Number of characters before the finding to consider."
                                              }
                                            },
                                            "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                          },
                                          "hotwordRegex": {
                                            "id": "GooglePrivacyDlpV2Regex",
                                            "type": "object",
                                            "properties": {
                                              "pattern": {
                                                "type": "string",
                                                "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                              },
                                              "groupIndexes": {
                                                "type": "array",
                                                "items": {
                                                  "type": "integer",
                                                  "format": "int32"
                                                },
                                                "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                              }
                                            },
                                            "description": "Regular expression pattern defining what qualifies as a hotword."
                                          },
                                          "likelihoodAdjustment": {
                                            "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                            "type": "object",
                                            "properties": {
                                              "fixedLikelihood": {
                                                "enum": [
                                                  "LIKELIHOOD_UNSPECIFIED",
                                                  "VERY_UNLIKELY",
                                                  "UNLIKELY",
                                                  "POSSIBLE",
                                                  "LIKELY",
                                                  "VERY_LIKELY"
                                                ],
                                                "type": "string",
                                                "description": "Set the likelihood of a finding to a fixed value.",
                                                "enumDescriptions": [
                                                  "Default value; same as POSSIBLE.",
                                                  "Few matching elements.",
                                                  "",
                                                  "Some matching elements.",
                                                  "",
                                                  "Many matching elements."
                                                ]
                                              },
                                              "relativeLikelihood": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                              }
                                            },
                                            "description": "Likelihood adjustment to apply to all matching findings."
                                          }
                                        },
                                        "description": "Hotword-based detection rule."
                                      },
                                      "exclusionRule": {
                                        "id": "GooglePrivacyDlpV2ExclusionRule",
                                        "type": "object",
                                        "properties": {
                                          "regex": {
                                            "id": "GooglePrivacyDlpV2Regex",
                                            "type": "object",
                                            "properties": {
                                              "pattern": {
                                                "type": "string",
                                                "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                              },
                                              "groupIndexes": {
                                                "type": "array",
                                                "items": {
                                                  "type": "integer",
                                                  "format": "int32"
                                                },
                                                "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                              }
                                            },
                                            "description": "Regular expression which defines the rule."
                                          },
                                          "dictionary": {
                                            "id": "GooglePrivacyDlpV2Dictionary",
                                            "type": "object",
                                            "properties": {
                                              "wordList": {
                                                "id": "GooglePrivacyDlpV2WordList",
                                                "type": "object",
                                                "properties": {
                                                  "words": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                                  }
                                                },
                                                "description": "List of words or phrases to search for."
                                              },
                                              "cloudStoragePath": {
                                                "id": "GooglePrivacyDlpV2CloudStoragePath",
                                                "type": "object",
                                                "properties": {
                                                  "path": {
                                                    "type": "string",
                                                    "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                                  }
                                                },
                                                "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                                              }
                                            },
                                            "description": "Dictionary which defines the rule."
                                          },
                                          "matchingType": {
                                            "enum": [
                                              "MATCHING_TYPE_UNSPECIFIED",
                                              "MATCHING_TYPE_FULL_MATCH",
                                              "MATCHING_TYPE_PARTIAL_MATCH",
                                              "MATCHING_TYPE_INVERSE_MATCH"
                                            ],
                                            "type": "string",
                                            "description": "How the rule is applied, see MatchingType documentation for details.",
                                            "enumDescriptions": [
                                              "Invalid.",
                                              "Full match. - Dictionary: join of Dictionary results matched complete finding quote - Regex: all regex matches fill a finding quote start to end - Exclude info type: completely inside affecting info types findings",
                                              "Partial match. - Dictionary: at least one of the tokens in the finding matches - Regex: substring of the finding matches - Exclude info type: intersects with affecting info types findings",
                                              "Inverse match. - Dictionary: no tokens in the finding match the dictionary - Regex: finding doesn't match the regex - Exclude info type: no intersection with affecting info types findings"
                                            ]
                                          },
                                          "excludeInfoTypes": {
                                            "id": "GooglePrivacyDlpV2ExcludeInfoTypes",
                                            "type": "object",
                                            "properties": {
                                              "infoTypes": {
                                                "type": "array",
                                                "items": {
                                                  "id": "GooglePrivacyDlpV2InfoType",
                                                  "type": "object",
                                                  "properties": {
                                                    "name": {
                                                      "type": "string",
                                                      "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                                    }
                                                  },
                                                  "description": "Type of information detected by the API."
                                                },
                                                "description": "InfoType list in ExclusionRule rule drops a finding when it overlaps or contained within with a finding of an infoType from this list. For example, for `InspectionRuleSet.info_types` containing \"PHONE_NUMBER\"` and `exclusion_rule` containing `exclude_info_types.info_types` with \"EMAIL_ADDRESS\" the phone number findings are dropped if they overlap with EMAIL_ADDRESS finding. That leads to \"555-222-2222@example.org\" to generate only a single finding, namely email address."
                                              }
                                            },
                                            "description": "Set of infoTypes for which findings would affect this rule."
                                          }
                                        },
                                        "description": "Exclusion rule."
                                      }
                                    },
                                    "description": "A single inspection rule to be applied to infoTypes, specified in `InspectionRuleSet`."
                                  },
                                  "description": "Set of rules to be applied to infoTypes. The rules are applied in order."
                                },
                                "infoTypes": {
                                  "type": "array",
                                  "items": {
                                    "id": "GooglePrivacyDlpV2InfoType",
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                      }
                                    },
                                    "description": "Type of information detected by the API."
                                  },
                                  "description": "List of infoTypes this rule set is applied to."
                                }
                              },
                              "description": "Rule set for modifying a set of infoTypes to alter behavior under certain circumstances, depending on the specific details of the rules within the set."
                            },
                            "description": "Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type."
                          },
                          "infoTypes": {
                            "type": "array",
                            "items": {
                              "id": "GooglePrivacyDlpV2InfoType",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                }
                              },
                              "description": "Type of information detected by the API."
                            },
                            "description": "Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/dlp/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time."
                          },
                          "includeQuote": {
                            "type": "boolean",
                            "description": "When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote."
                          },
                          "minLikelihood": {
                            "enum": [
                              "LIKELIHOOD_UNSPECIFIED",
                              "VERY_UNLIKELY",
                              "UNLIKELY",
                              "POSSIBLE",
                              "LIKELY",
                              "VERY_LIKELY"
                            ],
                            "type": "string",
                            "description": "Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more.",
                            "enumDescriptions": [
                              "Default value; same as POSSIBLE.",
                              "Few matching elements.",
                              "",
                              "Some matching elements.",
                              "",
                              "Many matching elements."
                            ]
                          },
                          "contentOptions": {
                            "type": "array",
                            "items": {
                              "enum": [
                                "CONTENT_UNSPECIFIED",
                                "CONTENT_TEXT",
                                "CONTENT_IMAGE"
                              ],
                              "type": "string",
                              "enumDescriptions": [
                                "Includes entire content of a file or a data stream.",
                                "Text content within the data, excluding any metadata.",
                                "Images found in the data."
                              ]
                            },
                            "description": "List of options defining data content to scan. If empty, text, images, and other content will be included."
                          },
                          "customInfoTypes": {
                            "type": "array",
                            "items": {
                              "id": "GooglePrivacyDlpV2CustomInfoType",
                              "type": "object",
                              "properties": {
                                "regex": {
                                  "id": "GooglePrivacyDlpV2Regex",
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string",
                                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                    },
                                    "groupIndexes": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                    }
                                  },
                                  "description": "Regular expression based CustomInfoType."
                                },
                                "infoType": {
                                  "id": "GooglePrivacyDlpV2InfoType",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                    }
                                  },
                                  "description": "Type of information detected by the API."
                                },
                                "dictionary": {
                                  "id": "GooglePrivacyDlpV2Dictionary",
                                  "type": "object",
                                  "properties": {
                                    "wordList": {
                                      "id": "GooglePrivacyDlpV2WordList",
                                      "type": "object",
                                      "properties": {
                                        "words": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                        }
                                      },
                                      "description": "List of words or phrases to search for."
                                    },
                                    "cloudStoragePath": {
                                      "id": "GooglePrivacyDlpV2CloudStoragePath",
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string",
                                          "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                        }
                                      },
                                      "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                                    }
                                  },
                                  "description": "A list of phrases to detect as a CustomInfoType."
                                },
                                "likelihood": {
                                  "enum": [
                                    "LIKELIHOOD_UNSPECIFIED",
                                    "VERY_UNLIKELY",
                                    "UNLIKELY",
                                    "POSSIBLE",
                                    "LIKELY",
                                    "VERY_LIKELY"
                                  ],
                                  "type": "string",
                                  "description": "Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not specified.",
                                  "enumDescriptions": [
                                    "Default value; same as POSSIBLE.",
                                    "Few matching elements.",
                                    "",
                                    "Some matching elements.",
                                    "",
                                    "Many matching elements."
                                  ]
                                },
                                "storedType": {
                                  "id": "GooglePrivacyDlpV2StoredType",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Resource name of the requested `StoredInfoType`, for example `organizations/433245324/storedInfoTypes/432452342` or `projects/project-id/storedInfoTypes/432452342`."
                                    },
                                    "createTime": {
                                      "type": "string",
                                      "format": "google-datetime",
                                      "description": "Timestamp indicating when the version of the `StoredInfoType` used for inspection was created. Output-only field, populated by the system."
                                    }
                                  },
                                  "description": "Load an existing `StoredInfoType` resource for use in `InspectDataSource`. Not currently supported in `InspectContent`."
                                },
                                "exclusionType": {
                                  "enum": [
                                    "EXCLUSION_TYPE_UNSPECIFIED",
                                    "EXCLUSION_TYPE_EXCLUDE"
                                  ],
                                  "type": "string",
                                  "description": "If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching.",
                                  "enumDescriptions": [
                                    "A finding of this custom info type will not be excluded from results.",
                                    "A finding of this custom info type will be excluded from final results, but can still affect rule execution."
                                  ]
                                },
                                "surrogateType": {
                                  "id": "GooglePrivacyDlpV2SurrogateType",
                                  "type": "object",
                                  "properties": {},
                                  "description": "Message for detecting output from deidentification transformations that support reversing."
                                },
                                "detectionRules": {
                                  "type": "array",
                                  "items": {
                                    "id": "GooglePrivacyDlpV2DetectionRule",
                                    "type": "object",
                                    "properties": {
                                      "hotwordRule": {
                                        "id": "GooglePrivacyDlpV2HotwordRule",
                                        "type": "object",
                                        "properties": {
                                          "proximity": {
                                            "id": "GooglePrivacyDlpV2Proximity",
                                            "type": "object",
                                            "properties": {
                                              "windowAfter": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "Number of characters after the finding to consider."
                                              },
                                              "windowBefore": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "Number of characters before the finding to consider."
                                              }
                                            },
                                            "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                          },
                                          "hotwordRegex": {
                                            "id": "GooglePrivacyDlpV2Regex",
                                            "type": "object",
                                            "properties": {
                                              "pattern": {
                                                "type": "string",
                                                "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                              },
                                              "groupIndexes": {
                                                "type": "array",
                                                "items": {
                                                  "type": "integer",
                                                  "format": "int32"
                                                },
                                                "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                              }
                                            },
                                            "description": "Regular expression pattern defining what qualifies as a hotword."
                                          },
                                          "likelihoodAdjustment": {
                                            "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                            "type": "object",
                                            "properties": {
                                              "fixedLikelihood": {
                                                "enum": [
                                                  "LIKELIHOOD_UNSPECIFIED",
                                                  "VERY_UNLIKELY",
                                                  "UNLIKELY",
                                                  "POSSIBLE",
                                                  "LIKELY",
                                                  "VERY_LIKELY"
                                                ],
                                                "type": "string",
                                                "description": "Set the likelihood of a finding to a fixed value.",
                                                "enumDescriptions": [
                                                  "Default value; same as POSSIBLE.",
                                                  "Few matching elements.",
                                                  "",
                                                  "Some matching elements.",
                                                  "",
                                                  "Many matching elements."
                                                ]
                                              },
                                              "relativeLikelihood": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                              }
                                            },
                                            "description": "Likelihood adjustment to apply to all matching findings."
                                          }
                                        },
                                        "description": "Hotword-based detection rule."
                                      }
                                    },
                                    "description": "Deprecated; use `InspectionRuleSet` instead. Rule for modifying a `CustomInfoType` to alter behavior under certain circumstances, depending on the specific details of the rule. Not supported for the `surrogate_type` custom infoType."
                                  },
                                  "description": "Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in order that they are specified. Not supported for the `surrogate_type` CustomInfoType."
                                }
                              },
                              "description": "Custom information type provided by the user. Used to find domain-specific sensitive information configurable to the data in question."
                            },
                            "description": "CustomInfoTypes provided by the user. See https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more."
                          },
                          "excludeInfoTypes": {
                            "type": "boolean",
                            "description": "When true, excludes type information of the findings."
                          }
                        },
                        "description": "How and what to scan for."
                      },
                      "storageConfig": {
                        "id": "GooglePrivacyDlpV2StorageConfig",
                        "type": "object",
                        "properties": {
                          "hybridOptions": {
                            "id": "GooglePrivacyDlpV2HybridOptions",
                            "type": "object",
                            "properties": {
                              "labels": {
                                "type": "object",
                                "description": "To organize findings, these labels will be added to each finding. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples: * `\"environment\" : \"production\"` * `\"pipeline\" : \"etl\"`",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "description": {
                                "type": "string",
                                "description": "A short description of where the data is coming from. Will be stored once in the job. 256 max length."
                              },
                              "tableOptions": {
                                "id": "GooglePrivacyDlpV2TableOptions",
                                "type": "object",
                                "properties": {
                                  "identifyingFields": {
                                    "type": "array",
                                    "items": {
                                      "id": "GooglePrivacyDlpV2FieldId",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Name describing the field."
                                        }
                                      },
                                      "description": "General identifier of a data field in a storage service."
                                    },
                                    "description": "The columns that are the primary keys for table objects included in ContentItem. A copy of this cell's value will stored alongside alongside each finding so that the finding can be traced to the specific row it came from. No more than 3 may be provided."
                                  }
                                },
                                "description": "If the container is a table, additional information to make findings meaningful such as the columns that are primary keys."
                              },
                              "requiredFindingLabelKeys": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "These are labels that each inspection request must include within their 'finding_labels' map. Request may contain others, but any missing one of these will be rejected. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. No more than 10 keys can be required."
                              }
                            },
                            "description": "Hybrid inspection options."
                          },
                          "timespanConfig": {
                            "id": "GooglePrivacyDlpV2TimespanConfig",
                            "type": "object",
                            "properties": {
                              "endTime": {
                                "type": "string",
                                "format": "google-datetime",
                                "description": "Exclude files, tables, or rows newer than this value. If not set, no upper time limit is applied."
                              },
                              "startTime": {
                                "type": "string",
                                "format": "google-datetime",
                                "description": "Exclude files, tables, or rows older than this value. If not set, no lower time limit is applied."
                              },
                              "timestampField": {
                                "id": "GooglePrivacyDlpV2FieldId",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name describing the field."
                                  }
                                },
                                "description": "General identifier of a data field in a storage service."
                              },
                              "enableAutoPopulationOfTimespanConfig": {
                                "type": "boolean",
                                "description": "When the job is started by a JobTrigger we will automatically figure out a valid start_time to avoid scanning files that have not been modified since the last time the JobTrigger executed. This will be based on the time of the execution of the last run of the JobTrigger."
                              }
                            },
                            "description": "Configuration of the timespan of the items to include in scanning. Currently only supported when inspecting Google Cloud Storage and BigQuery."
                          },
                          "bigQueryOptions": {
                            "id": "GooglePrivacyDlpV2BigQueryOptions",
                            "type": "object",
                            "properties": {
                              "rowsLimit": {
                                "type": "string",
                                "format": "int64",
                                "description": "Max number of rows to scan. If the table has more rows than this value, the rest of the rows are omitted. If not set, or if set to 0, all rows will be scanned. Only one of rows_limit and rows_limit_percent can be specified. Cannot be used in conjunction with TimespanConfig."
                              },
                              "sampleMethod": {
                                "enum": [
                                  "SAMPLE_METHOD_UNSPECIFIED",
                                  "TOP",
                                  "RANDOM_START"
                                ],
                                "type": "string",
                                "enumDescriptions": [
                                  "",
                                  "Scan groups of rows in the order BigQuery provides (default). Multiple groups of rows may be scanned in parallel, so results may not appear in the same order the rows are read.",
                                  "Randomly pick groups of rows to scan."
                                ]
                              },
                              "excludedFields": {
                                "type": "array",
                                "items": {
                                  "id": "GooglePrivacyDlpV2FieldId",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Name describing the field."
                                    }
                                  },
                                  "description": "General identifier of a data field in a storage service."
                                },
                                "description": "References to fields excluded from scanning. This allows you to skip inspection of entire columns which you know have no findings."
                              },
                              "tableReference": {
                                "id": "GooglePrivacyDlpV2BigQueryTable",
                                "type": "object",
                                "properties": {
                                  "tableId": {
                                    "type": "string",
                                    "description": "Name of the table."
                                  },
                                  "datasetId": {
                                    "type": "string",
                                    "description": "Dataset ID of the table."
                                  },
                                  "projectId": {
                                    "type": "string",
                                    "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                  }
                                },
                                "description": "Complete BigQuery table reference."
                              },
                              "rowsLimitPercent": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Max percentage of rows to scan. The rest are omitted. The number of rows scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one of rows_limit and rows_limit_percent can be specified. Cannot be used in conjunction with TimespanConfig."
                              },
                              "identifyingFields": {
                                "type": "array",
                                "items": {
                                  "id": "GooglePrivacyDlpV2FieldId",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Name describing the field."
                                    }
                                  },
                                  "description": "General identifier of a data field in a storage service."
                                },
                                "description": "Table fields that may uniquely identify a row within the table. When `actions.saveFindings.outputConfig.table` is specified, the values of columns specified here are available in the output table under `location.content_locations.record_location.record_key.id_values`. Nested fields such as `person.birthdate.year` are allowed."
                              }
                            },
                            "description": "BigQuery options."
                          },
                          "datastoreOptions": {
                            "id": "GooglePrivacyDlpV2DatastoreOptions",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "id": "GooglePrivacyDlpV2KindExpression",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the kind."
                                  }
                                },
                                "description": "The kind to process."
                              },
                              "partitionId": {
                                "id": "GooglePrivacyDlpV2PartitionId",
                                "type": "object",
                                "properties": {
                                  "projectId": {
                                    "type": "string",
                                    "description": "The ID of the project to which the entities belong."
                                  },
                                  "namespaceId": {
                                    "type": "string",
                                    "description": "If not empty, the ID of the namespace to which the entities belong."
                                  }
                                },
                                "description": "A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty."
                              }
                            },
                            "description": "Google Cloud Datastore options."
                          },
                          "cloudStorageOptions": {
                            "id": "GooglePrivacyDlpV2CloudStorageOptions",
                            "type": "object",
                            "properties": {
                              "fileSet": {
                                "id": "GooglePrivacyDlpV2FileSet",
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "description": "The Cloud Storage url of the file(s) to scan, in the format `gs:///`. Trailing wildcard in the path is allowed. If the url ends in a trailing slash, the bucket or directory represented by the url will be scanned non-recursively (content in sub-directories will not be scanned). This means that `gs://mybucket/` is equivalent to `gs://mybucket/*`, and `gs://mybucket/directory/` is equivalent to `gs://mybucket/directory/*`. Exactly one of `url` or `regex_file_set` must be set."
                                  },
                                  "regexFileSet": {
                                    "id": "GooglePrivacyDlpV2CloudStorageRegexFileSet",
                                    "type": "object",
                                    "properties": {
                                      "bucketName": {
                                        "type": "string",
                                        "description": "The name of a Cloud Storage bucket. Required."
                                      },
                                      "excludeRegex": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "description": "A list of regular expressions matching file paths to exclude. All files in the bucket that match at least one of these regular expressions will be excluded from the scan. Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub."
                                      },
                                      "includeRegex": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "description": "A list of regular expressions matching file paths to include. All files in the bucket that match at least one of these regular expressions will be included in the set of files, except for those that also match an item in `exclude_regex`. Leaving this field empty will match all files by default (this is equivalent to including `.*` in the list). Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub."
                                      }
                                    },
                                    "description": "The regex-filtered set of files to scan. Exactly one of `url` or `regex_file_set` must be set."
                                  }
                                },
                                "description": "The set of one or more files to scan."
                              },
                              "fileTypes": {
                                "type": "array",
                                "items": {
                                  "enum": [
                                    "FILE_TYPE_UNSPECIFIED",
                                    "BINARY_FILE",
                                    "TEXT_FILE",
                                    "IMAGE",
                                    "WORD",
                                    "PDF",
                                    "AVRO",
                                    "CSV",
                                    "TSV"
                                  ],
                                  "type": "string",
                                  "enumDescriptions": [
                                    "Includes all files.",
                                    "Includes all file extensions not covered by another entry. Binary scanning attempts to convert the content of the file to utf_8 to scan the file. If you wish to avoid this fall back, specify one or more of the other FileType's in your storage scan.",
                                    "Included file extensions: asc,asp, aspx, brf, c, cc,cfm, cgi, cpp, csv, cxx, c++, cs, css, dart, dat, dot, eml,, epbub, ged, go, h, hh, hpp, hxx, h++, hs, html, htm, mkd, markdown, m, ml, mli, perl, pl, plist, pm, php, phtml, pht, properties, py, pyw, rb, rbw, rs, rss, rc, scala, sh, sql, swift, tex, shtml, shtm, xhtml, lhs, ics, ini, java, js, json, kix, kml, ocaml, md, txt, text, tsv, vb, vcard, vcs, wml, xcodeproj, xml, xsl, xsd, yml, yaml.",
                                    "Included file extensions: bmp, gif, jpg, jpeg, jpe, png. bytes_limit_per_file has no effect on image files. Image inspection is restricted to 'global', 'us', 'asia', and 'europe'.",
                                    "Word files >30 MB will be scanned as binary files. Included file extensions: docx, dotx, docm, dotm",
                                    "PDF files >30 MB will be scanned as binary files. Included file extensions: pdf",
                                    "Included file extensions: avro",
                                    "Included file extensions: csv",
                                    "Included file extensions: tsv"
                                  ]
                                },
                                "description": "List of file type groups to include in the scan. If empty, all files are scanned and available data format processors are applied. In addition, the binary content of the selected files is always scanned as well. Images are scanned only as binary if the specified region does not support image inspection and no file_types were specified. Image inspection is restricted to 'global', 'us', 'asia', and 'europe'."
                              },
                              "sampleMethod": {
                                "enum": [
                                  "SAMPLE_METHOD_UNSPECIFIED",
                                  "TOP",
                                  "RANDOM_START"
                                ],
                                "type": "string",
                                "enumDescriptions": [
                                  "",
                                  "Scan from the top (default).",
                                  "For each file larger than bytes_limit_per_file, randomly pick the offset to start scanning. The scanned bytes are contiguous."
                                ]
                              },
                              "bytesLimitPerFile": {
                                "type": "string",
                                "format": "int64",
                                "description": "Max number of bytes to scan from a file. If a scanned file's size is bigger than this value then the rest of the bytes are omitted. Only one of bytes_limit_per_file and bytes_limit_per_file_percent can be specified. Cannot be set if de-identification is requested."
                              },
                              "filesLimitPercent": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Limits the number of files to scan to this percentage of the input FileSet. Number of files scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0."
                              },
                              "bytesLimitPerFilePercent": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Max percentage of bytes to scan from a file. The rest are omitted. The number of bytes scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one of bytes_limit_per_file and bytes_limit_per_file_percent can be specified. Cannot be set if de-identification is requested."
                              }
                            },
                            "description": "Google Cloud Storage options."
                          }
                        },
                        "description": "The data to scan."
                      },
                      "inspectTemplateName": {
                        "type": "string",
                        "description": "If provided, will be used as the default for all values in InspectConfig. `inspect_config` will be merged into the values persisted as part of the template."
                      }
                    },
                    "description": "For inspect jobs, a snapshot of the configuration."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The last update timestamp of a triggeredJob."
                  },
                  "description": {
                    "type": "string",
                    "description": "User provided description (max 256 chars)"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Display name (max 100 chars)"
                  },
                  "lastRunTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The timestamp of the last time this trigger executed."
                  }
                },
                "description": "Contains a configuration to make dlp api calls on a repeating basis. See https://cloud.google.com/dlp/docs/concepts-job-triggers to learn more."
              },
              "description": "List of triggeredJobs, up to page_size in ListJobTriggersRequest."
            },
            "nextPageToken": {
              "type": "string",
              "description": "If the next page is available then the next page token to be used in following ListJobTriggers request."
            }
          },
          "description": "Response message for ListJobTriggers."
        }
      ]
  projects.jobTriggers.patch:
    description: |-
      Updates a job trigger. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.jobTriggers/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.content.deidentify:
    description: |-
      De-identifies potentially sensitive info from a ContentItem. This method has limits on input size and output size. See https://cloud.google.com/dlp/docs/deidentify-sensitive-data to learn more. When no InfoTypes or CustomInfoTypes are specified in this request, the system will automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.locations.content/deidentify
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.content.inspect:
    description: |-
      Finds potentially sensitive info in content. This method has limits on input size, processing time, and output size. When no InfoTypes or CustomInfoTypes are specified in this request, the system will automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. For how to guides, see https://cloud.google.com/dlp/docs/inspecting-images and https://cloud.google.com/dlp/docs/inspecting-text,
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.locations.content/inspect
    example:
      inputs: [
        {
          "id": "GooglePrivacyDlpV2InspectContentRequest",
          "type": "object",
          "properties": {
            "item": {
              "id": "GooglePrivacyDlpV2ContentItem",
              "type": "object",
              "properties": {
                "table": {
                  "id": "GooglePrivacyDlpV2Table",
                  "type": "object",
                  "properties": {
                    "rows": {
                      "type": "array",
                      "items": {
                        "id": "GooglePrivacyDlpV2Row",
                        "type": "object",
                        "properties": {
                          "values": {
                            "type": "array",
                            "items": {
                              "id": "GooglePrivacyDlpV2Value",
                              "type": "object",
                              "properties": {
                                "dateValue": {
                                  "id": "GoogleTypeDate",
                                  "type": "object",
                                  "properties": {
                                    "day": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
                                    },
                                    "year": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
                                    },
                                    "month": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
                                    }
                                  },
                                  "description": "date"
                                },
                                "timeValue": {
                                  "id": "GoogleTypeTimeOfDay",
                                  "type": "object",
                                  "properties": {
                                    "hours": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time."
                                    },
                                    "nanos": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999."
                                    },
                                    "minutes": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Minutes of hour of day. Must be from 0 to 59."
                                    },
                                    "seconds": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds."
                                    }
                                  },
                                  "description": "time of day"
                                },
                                "floatValue": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "float"
                                },
                                "stringValue": {
                                  "type": "string",
                                  "description": "string"
                                },
                                "booleanValue": {
                                  "type": "boolean",
                                  "description": "boolean"
                                },
                                "integerValue": {
                                  "type": "string",
                                  "format": "int64",
                                  "description": "integer"
                                },
                                "dayOfWeekValue": {
                                  "enum": [
                                    "DAY_OF_WEEK_UNSPECIFIED",
                                    "MONDAY",
                                    "TUESDAY",
                                    "WEDNESDAY",
                                    "THURSDAY",
                                    "FRIDAY",
                                    "SATURDAY",
                                    "SUNDAY"
                                  ],
                                  "type": "string",
                                  "description": "day of week",
                                  "enumDescriptions": [
                                    "The day of the week is unspecified.",
                                    "Monday",
                                    "Tuesday",
                                    "Wednesday",
                                    "Thursday",
                                    "Friday",
                                    "Saturday",
                                    "Sunday"
                                  ]
                                },
                                "timestampValue": {
                                  "type": "string",
                                  "format": "google-datetime",
                                  "description": "timestamp"
                                }
                              },
                              "description": "Set of primitive values supported by the system. Note that for the purposes of inspection or transformation, the number of bytes considered to comprise a 'Value' is based on its representation as a UTF-8 encoded string. For example, if 'integer_value' is set to 123456789, the number of bytes would be counted as 9, even though an int64 only holds up to 8 bytes of data."
                            },
                            "description": "Individual cells."
                          }
                        },
                        "description": "Values of the row."
                      },
                      "description": "Rows of the table."
                    },
                    "headers": {
                      "type": "array",
                      "items": {
                        "id": "GooglePrivacyDlpV2FieldId",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name describing the field."
                          }
                        },
                        "description": "General identifier of a data field in a storage service."
                      },
                      "description": "Headers of the table."
                    }
                  },
                  "description": "Structured content for inspection. See https://cloud.google.com/dlp/docs/inspecting-text#inspecting_a_table to learn more."
                },
                "value": {
                  "type": "string",
                  "description": "String data to inspect or redact."
                },
                "byteItem": {
                  "id": "GooglePrivacyDlpV2ByteContentItem",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string",
                      "format": "byte",
                      "description": "Content data to inspect or redact."
                    },
                    "type": {
                      "enum": [
                        "BYTES_TYPE_UNSPECIFIED",
                        "IMAGE",
                        "IMAGE_JPEG",
                        "IMAGE_BMP",
                        "IMAGE_PNG",
                        "IMAGE_SVG",
                        "TEXT_UTF8",
                        "WORD_DOCUMENT",
                        "PDF",
                        "AVRO",
                        "CSV",
                        "TSV"
                      ],
                      "type": "string",
                      "description": "The type of data stored in the bytes string. Default will be TEXT_UTF8.",
                      "enumDescriptions": [
                        "Unused",
                        "Any image type.",
                        "jpeg",
                        "bmp",
                        "png",
                        "svg",
                        "plain text",
                        "docx, docm, dotx, dotm",
                        "pdf",
                        "avro",
                        "csv",
                        "tsv"
                      ]
                    }
                  },
                  "description": "Content data to inspect or redact. Replaces `type` and `data`."
                }
              },
              "description": "The item to inspect."
            },
            "locationId": {
              "type": "string",
              "description": "Deprecated. This field has no effect."
            },
            "inspectConfig": {
              "id": "GooglePrivacyDlpV2InspectConfig",
              "type": "object",
              "properties": {
                "limits": {
                  "id": "GooglePrivacyDlpV2FindingLimits",
                  "type": "object",
                  "properties": {
                    "maxFindingsPerItem": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Max number of findings that will be returned for each item scanned. When set within `InspectJobConfig`, the maximum returned is 2000 regardless if this is set higher. When set within `InspectContentRequest`, this field is ignored."
                    },
                    "maxFindingsPerRequest": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Max number of findings that will be returned per request/job. When set within `InspectContentRequest`, the maximum returned is 2000 regardless if this is set higher."
                    },
                    "maxFindingsPerInfoType": {
                      "type": "array",
                      "items": {
                        "id": "GooglePrivacyDlpV2InfoTypeLimit",
                        "type": "object",
                        "properties": {
                          "infoType": {
                            "id": "GooglePrivacyDlpV2InfoType",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                              }
                            },
                            "description": "Type of information detected by the API."
                          },
                          "maxFindings": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Max findings limit for the given infoType."
                          }
                        },
                        "description": "Max findings configuration per infoType, per content item or long running DlpJob."
                      },
                      "description": "Configuration of findings limit given for specified infoTypes."
                    }
                  },
                  "description": "Configuration to control the number of findings returned."
                },
                "ruleSet": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2InspectionRuleSet",
                    "type": "object",
                    "properties": {
                      "rules": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2InspectionRule",
                          "type": "object",
                          "properties": {
                            "hotwordRule": {
                              "id": "GooglePrivacyDlpV2HotwordRule",
                              "type": "object",
                              "properties": {
                                "proximity": {
                                  "id": "GooglePrivacyDlpV2Proximity",
                                  "type": "object",
                                  "properties": {
                                    "windowAfter": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters after the finding to consider."
                                    },
                                    "windowBefore": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters before the finding to consider."
                                    }
                                  },
                                  "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                },
                                "hotwordRegex": {
                                  "id": "GooglePrivacyDlpV2Regex",
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string",
                                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                    },
                                    "groupIndexes": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                    }
                                  },
                                  "description": "Regular expression pattern defining what qualifies as a hotword."
                                },
                                "likelihoodAdjustment": {
                                  "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                  "type": "object",
                                  "properties": {
                                    "fixedLikelihood": {
                                      "enum": [
                                        "LIKELIHOOD_UNSPECIFIED",
                                        "VERY_UNLIKELY",
                                        "UNLIKELY",
                                        "POSSIBLE",
                                        "LIKELY",
                                        "VERY_LIKELY"
                                      ],
                                      "type": "string",
                                      "description": "Set the likelihood of a finding to a fixed value.",
                                      "enumDescriptions": [
                                        "Default value; same as POSSIBLE.",
                                        "Few matching elements.",
                                        "",
                                        "Some matching elements.",
                                        "",
                                        "Many matching elements."
                                      ]
                                    },
                                    "relativeLikelihood": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                    }
                                  },
                                  "description": "Likelihood adjustment to apply to all matching findings."
                                }
                              },
                              "description": "Hotword-based detection rule."
                            },
                            "exclusionRule": {
                              "id": "GooglePrivacyDlpV2ExclusionRule",
                              "type": "object",
                              "properties": {
                                "regex": {
                                  "id": "GooglePrivacyDlpV2Regex",
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string",
                                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                    },
                                    "groupIndexes": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                    }
                                  },
                                  "description": "Regular expression which defines the rule."
                                },
                                "dictionary": {
                                  "id": "GooglePrivacyDlpV2Dictionary",
                                  "type": "object",
                                  "properties": {
                                    "wordList": {
                                      "id": "GooglePrivacyDlpV2WordList",
                                      "type": "object",
                                      "properties": {
                                        "words": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                        }
                                      },
                                      "description": "List of words or phrases to search for."
                                    },
                                    "cloudStoragePath": {
                                      "id": "GooglePrivacyDlpV2CloudStoragePath",
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string",
                                          "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                        }
                                      },
                                      "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                                    }
                                  },
                                  "description": "Dictionary which defines the rule."
                                },
                                "matchingType": {
                                  "enum": [
                                    "MATCHING_TYPE_UNSPECIFIED",
                                    "MATCHING_TYPE_FULL_MATCH",
                                    "MATCHING_TYPE_PARTIAL_MATCH",
                                    "MATCHING_TYPE_INVERSE_MATCH"
                                  ],
                                  "type": "string",
                                  "description": "How the rule is applied, see MatchingType documentation for details.",
                                  "enumDescriptions": [
                                    "Invalid.",
                                    "Full match. - Dictionary: join of Dictionary results matched complete finding quote - Regex: all regex matches fill a finding quote start to end - Exclude info type: completely inside affecting info types findings",
                                    "Partial match. - Dictionary: at least one of the tokens in the finding matches - Regex: substring of the finding matches - Exclude info type: intersects with affecting info types findings",
                                    "Inverse match. - Dictionary: no tokens in the finding match the dictionary - Regex: finding doesn't match the regex - Exclude info type: no intersection with affecting info types findings"
                                  ]
                                },
                                "excludeInfoTypes": {
                                  "id": "GooglePrivacyDlpV2ExcludeInfoTypes",
                                  "type": "object",
                                  "properties": {
                                    "infoTypes": {
                                      "type": "array",
                                      "items": {
                                        "id": "GooglePrivacyDlpV2InfoType",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                          }
                                        },
                                        "description": "Type of information detected by the API."
                                      },
                                      "description": "InfoType list in ExclusionRule rule drops a finding when it overlaps or contained within with a finding of an infoType from this list. For example, for `InspectionRuleSet.info_types` containing \"PHONE_NUMBER\"` and `exclusion_rule` containing `exclude_info_types.info_types` with \"EMAIL_ADDRESS\" the phone number findings are dropped if they overlap with EMAIL_ADDRESS finding. That leads to \"555-222-2222@example.org\" to generate only a single finding, namely email address."
                                    }
                                  },
                                  "description": "Set of infoTypes for which findings would affect this rule."
                                }
                              },
                              "description": "Exclusion rule."
                            }
                          },
                          "description": "A single inspection rule to be applied to infoTypes, specified in `InspectionRuleSet`."
                        },
                        "description": "Set of rules to be applied to infoTypes. The rules are applied in order."
                      },
                      "infoTypes": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2InfoType",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                            }
                          },
                          "description": "Type of information detected by the API."
                        },
                        "description": "List of infoTypes this rule set is applied to."
                      }
                    },
                    "description": "Rule set for modifying a set of infoTypes to alter behavior under certain circumstances, depending on the specific details of the rules within the set."
                  },
                  "description": "Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type."
                },
                "infoTypes": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2InfoType",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                      }
                    },
                    "description": "Type of information detected by the API."
                  },
                  "description": "Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/dlp/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time."
                },
                "includeQuote": {
                  "type": "boolean",
                  "description": "When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote."
                },
                "minLikelihood": {
                  "enum": [
                    "LIKELIHOOD_UNSPECIFIED",
                    "VERY_UNLIKELY",
                    "UNLIKELY",
                    "POSSIBLE",
                    "LIKELY",
                    "VERY_LIKELY"
                  ],
                  "type": "string",
                  "description": "Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more.",
                  "enumDescriptions": [
                    "Default value; same as POSSIBLE.",
                    "Few matching elements.",
                    "",
                    "Some matching elements.",
                    "",
                    "Many matching elements."
                  ]
                },
                "contentOptions": {
                  "type": "array",
                  "items": {
                    "enum": [
                      "CONTENT_UNSPECIFIED",
                      "CONTENT_TEXT",
                      "CONTENT_IMAGE"
                    ],
                    "type": "string",
                    "enumDescriptions": [
                      "Includes entire content of a file or a data stream.",
                      "Text content within the data, excluding any metadata.",
                      "Images found in the data."
                    ]
                  },
                  "description": "List of options defining data content to scan. If empty, text, images, and other content will be included."
                },
                "customInfoTypes": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2CustomInfoType",
                    "type": "object",
                    "properties": {
                      "regex": {
                        "id": "GooglePrivacyDlpV2Regex",
                        "type": "object",
                        "properties": {
                          "pattern": {
                            "type": "string",
                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                          },
                          "groupIndexes": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                          }
                        },
                        "description": "Regular expression based CustomInfoType."
                      },
                      "infoType": {
                        "id": "GooglePrivacyDlpV2InfoType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                          }
                        },
                        "description": "Type of information detected by the API."
                      },
                      "dictionary": {
                        "id": "GooglePrivacyDlpV2Dictionary",
                        "type": "object",
                        "properties": {
                          "wordList": {
                            "id": "GooglePrivacyDlpV2WordList",
                            "type": "object",
                            "properties": {
                              "words": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                              }
                            },
                            "description": "List of words or phrases to search for."
                          },
                          "cloudStoragePath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                          }
                        },
                        "description": "A list of phrases to detect as a CustomInfoType."
                      },
                      "likelihood": {
                        "enum": [
                          "LIKELIHOOD_UNSPECIFIED",
                          "VERY_UNLIKELY",
                          "UNLIKELY",
                          "POSSIBLE",
                          "LIKELY",
                          "VERY_LIKELY"
                        ],
                        "type": "string",
                        "description": "Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not specified.",
                        "enumDescriptions": [
                          "Default value; same as POSSIBLE.",
                          "Few matching elements.",
                          "",
                          "Some matching elements.",
                          "",
                          "Many matching elements."
                        ]
                      },
                      "storedType": {
                        "id": "GooglePrivacyDlpV2StoredType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Resource name of the requested `StoredInfoType`, for example `organizations/433245324/storedInfoTypes/432452342` or `projects/project-id/storedInfoTypes/432452342`."
                          },
                          "createTime": {
                            "type": "string",
                            "format": "google-datetime",
                            "description": "Timestamp indicating when the version of the `StoredInfoType` used for inspection was created. Output-only field, populated by the system."
                          }
                        },
                        "description": "Load an existing `StoredInfoType` resource for use in `InspectDataSource`. Not currently supported in `InspectContent`."
                      },
                      "exclusionType": {
                        "enum": [
                          "EXCLUSION_TYPE_UNSPECIFIED",
                          "EXCLUSION_TYPE_EXCLUDE"
                        ],
                        "type": "string",
                        "description": "If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching.",
                        "enumDescriptions": [
                          "A finding of this custom info type will not be excluded from results.",
                          "A finding of this custom info type will be excluded from final results, but can still affect rule execution."
                        ]
                      },
                      "surrogateType": {
                        "id": "GooglePrivacyDlpV2SurrogateType",
                        "type": "object",
                        "properties": {},
                        "description": "Message for detecting output from deidentification transformations that support reversing."
                      },
                      "detectionRules": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2DetectionRule",
                          "type": "object",
                          "properties": {
                            "hotwordRule": {
                              "id": "GooglePrivacyDlpV2HotwordRule",
                              "type": "object",
                              "properties": {
                                "proximity": {
                                  "id": "GooglePrivacyDlpV2Proximity",
                                  "type": "object",
                                  "properties": {
                                    "windowAfter": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters after the finding to consider."
                                    },
                                    "windowBefore": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters before the finding to consider."
                                    }
                                  },
                                  "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                },
                                "hotwordRegex": {
                                  "id": "GooglePrivacyDlpV2Regex",
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string",
                                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                    },
                                    "groupIndexes": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                    }
                                  },
                                  "description": "Regular expression pattern defining what qualifies as a hotword."
                                },
                                "likelihoodAdjustment": {
                                  "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                  "type": "object",
                                  "properties": {
                                    "fixedLikelihood": {
                                      "enum": [
                                        "LIKELIHOOD_UNSPECIFIED",
                                        "VERY_UNLIKELY",
                                        "UNLIKELY",
                                        "POSSIBLE",
                                        "LIKELY",
                                        "VERY_LIKELY"
                                      ],
                                      "type": "string",
                                      "description": "Set the likelihood of a finding to a fixed value.",
                                      "enumDescriptions": [
                                        "Default value; same as POSSIBLE.",
                                        "Few matching elements.",
                                        "",
                                        "Some matching elements.",
                                        "",
                                        "Many matching elements."
                                      ]
                                    },
                                    "relativeLikelihood": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                    }
                                  },
                                  "description": "Likelihood adjustment to apply to all matching findings."
                                }
                              },
                              "description": "Hotword-based detection rule."
                            }
                          },
                          "description": "Deprecated; use `InspectionRuleSet` instead. Rule for modifying a `CustomInfoType` to alter behavior under certain circumstances, depending on the specific details of the rule. Not supported for the `surrogate_type` custom infoType."
                        },
                        "description": "Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in order that they are specified. Not supported for the `surrogate_type` CustomInfoType."
                      }
                    },
                    "description": "Custom information type provided by the user. Used to find domain-specific sensitive information configurable to the data in question."
                  },
                  "description": "CustomInfoTypes provided by the user. See https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more."
                },
                "excludeInfoTypes": {
                  "type": "boolean",
                  "description": "When true, excludes type information of the findings."
                }
              },
              "description": "Configuration for the inspector. What specified here will override the template referenced by the inspect_template_name argument."
            },
            "inspectTemplateName": {
              "type": "string",
              "description": "Template to use. Any configuration directly specified in inspect_config will override those set in the template. Singular fields that are set in this request will replace their corresponding fields in the template. Repeated fields are appended. Singular sub-messages and groups are recursively merged."
            }
          },
          "description": "Request to search for potentially sensitive info in a ContentItem."
        }
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2InspectContentResponse",
          "type": "object",
          "properties": {
            "result": {
              "id": "GooglePrivacyDlpV2InspectResult",
              "type": "object",
              "properties": {
                "findings": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2Finding",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Resource name in format projects/{project}/locations/{location}/findings/{finding} Populated only when viewing persisted findings."
                      },
                      "quote": {
                        "type": "string",
                        "description": "The content that was found. Even if the content is not textual, it may be converted to a textual representation here. Provided if `include_quote` is true and the finding is less than or equal to 4096 bytes long. If the finding exceeds 4096 bytes in length, the quote may be omitted."
                      },
                      "labels": {
                        "type": "object",
                        "description": "The labels associated with this `Finding`. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples: * `\"environment\" : \"production\"` * `\"pipeline\" : \"etl\"`",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "jobName": {
                        "type": "string",
                        "description": "The job that stored the finding."
                      },
                      "infoType": {
                        "id": "GooglePrivacyDlpV2InfoType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                          }
                        },
                        "description": "Type of information detected by the API."
                      },
                      "location": {
                        "id": "GooglePrivacyDlpV2Location",
                        "type": "object",
                        "properties": {
                          "byteRange": {
                            "id": "GooglePrivacyDlpV2Range",
                            "type": "object",
                            "properties": {
                              "end": {
                                "type": "string",
                                "format": "int64",
                                "description": "Index of the last character of the range (exclusive)."
                              },
                              "start": {
                                "type": "string",
                                "format": "int64",
                                "description": "Index of the first character of the range (inclusive)."
                              }
                            },
                            "description": "Zero-based byte offsets delimiting the finding. These are relative to the finding's containing element. Note that when the content is not textual, this references the UTF-8 encoded textual representation of the content. Omitted if content is an image."
                          },
                          "container": {
                            "id": "GooglePrivacyDlpV2Container",
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Container type, for example BigQuery or Google Cloud Storage."
                              },
                              "version": {
                                "type": "string",
                                "description": "Findings container version, if available (\"generation\" for Google Cloud Storage)."
                              },
                              "fullPath": {
                                "type": "string",
                                "description": "A string representation of the full container name. Examples: - BigQuery: 'Project:DataSetId.TableId' - Google Cloud Storage: 'gs://Bucket/folders/filename.txt'"
                              },
                              "rootPath": {
                                "type": "string",
                                "description": "The root of the container. Examples: - For BigQuery table `project_id:dataset_id.table_id`, the root is `dataset_id` - For Google Cloud Storage file `gs://bucket/folder/filename.txt`, the root is `gs://bucket`"
                              },
                              "projectId": {
                                "type": "string",
                                "description": "Project where the finding was found. Can be different from the project that owns the finding."
                              },
                              "updateTime": {
                                "type": "string",
                                "format": "google-datetime",
                                "description": "Findings container modification timestamp, if applicable. For Google Cloud Storage contains last file modification timestamp. For BigQuery table contains last_modified_time property. For Datastore - not populated."
                              },
                              "relativePath": {
                                "type": "string",
                                "description": "The rest of the path after the root. Examples: - For BigQuery table `project_id:dataset_id.table_id`, the relative path is `table_id` - Google Cloud Storage file `gs://bucket/folder/filename.txt`, the relative path is `folder/filename.txt`"
                              }
                            },
                            "description": "Information about the container where this finding occurred, if available."
                          },
                          "codepointRange": {
                            "id": "GooglePrivacyDlpV2Range",
                            "type": "object",
                            "properties": {
                              "end": {
                                "type": "string",
                                "format": "int64",
                                "description": "Index of the last character of the range (exclusive)."
                              },
                              "start": {
                                "type": "string",
                                "format": "int64",
                                "description": "Index of the first character of the range (inclusive)."
                              }
                            },
                            "description": "Unicode character offsets delimiting the finding. These are relative to the finding's containing element. Provided when the content is text."
                          },
                          "contentLocations": {
                            "type": "array",
                            "items": {
                              "id": "GooglePrivacyDlpV2ContentLocation",
                              "type": "object",
                              "properties": {
                                "containerName": {
                                  "type": "string",
                                  "description": "Name of the container where the finding is located. The top level name is the source file name or table name. Names of some common storage containers are formatted as follows: * BigQuery tables: `{project_id}:{dataset_id}.{table_id}` * Cloud Storage files: `gs://{bucket}/{path}` * Datastore namespace: {namespace} Nested names could be absent if the embedded object has no string identifier (for an example an image contained within a document)."
                                },
                                "imageLocation": {
                                  "id": "GooglePrivacyDlpV2ImageLocation",
                                  "type": "object",
                                  "properties": {
                                    "boundingBoxes": {
                                      "type": "array",
                                      "items": {
                                        "id": "GooglePrivacyDlpV2BoundingBox",
                                        "type": "object",
                                        "properties": {
                                          "top": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Top coordinate of the bounding box. (0,0) is upper left."
                                          },
                                          "left": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Left coordinate of the bounding box. (0,0) is upper left."
                                          },
                                          "width": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Width of the bounding box in pixels."
                                          },
                                          "height": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Height of the bounding box in pixels."
                                          }
                                        },
                                        "description": "Bounding box encompassing detected text within an image."
                                      },
                                      "description": "Bounding boxes locating the pixels within the image containing the finding."
                                    }
                                  },
                                  "description": "Location within an image's pixels."
                                },
                                "recordLocation": {
                                  "id": "GooglePrivacyDlpV2RecordLocation",
                                  "type": "object",
                                  "properties": {
                                    "fieldId": {
                                      "id": "GooglePrivacyDlpV2FieldId",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Name describing the field."
                                        }
                                      },
                                      "description": "General identifier of a data field in a storage service."
                                    },
                                    "recordKey": {
                                      "id": "GooglePrivacyDlpV2RecordKey",
                                      "type": "object",
                                      "properties": {
                                        "idValues": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "Values of identifying columns in the given row. Order of values matches the order of `identifying_fields` specified in the scanning request."
                                        },
                                        "bigQueryKey": {
                                          "id": "GooglePrivacyDlpV2BigQueryKey",
                                          "type": "object",
                                          "properties": {
                                            "rowNumber": {
                                              "type": "string",
                                              "format": "int64",
                                              "description": "Row number inferred at the time the table was scanned. This value is nondeterministic, cannot be queried, and may be null for inspection jobs. To locate findings within a table, specify `inspect_job.storage_config.big_query_options.identifying_fields` in `CreateDlpJobRequest`."
                                            },
                                            "tableReference": {
                                              "id": "GooglePrivacyDlpV2BigQueryTable",
                                              "type": "object",
                                              "properties": {
                                                "tableId": {
                                                  "type": "string",
                                                  "description": "Name of the table."
                                                },
                                                "datasetId": {
                                                  "type": "string",
                                                  "description": "Dataset ID of the table."
                                                },
                                                "projectId": {
                                                  "type": "string",
                                                  "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                                }
                                              },
                                              "description": "Complete BigQuery table reference."
                                            }
                                          },
                                          "description": "Row key for identifying a record in BigQuery table."
                                        },
                                        "datastoreKey": {
                                          "id": "GooglePrivacyDlpV2DatastoreKey",
                                          "type": "object",
                                          "properties": {
                                            "entityKey": {
                                              "id": "GooglePrivacyDlpV2Key",
                                              "type": "object",
                                              "properties": {
                                                "path": {
                                                  "type": "array",
                                                  "items": {
                                                    "id": "GooglePrivacyDlpV2PathElement",
                                                    "type": "object",
                                                    "properties": {
                                                      "id": {
                                                        "type": "string",
                                                        "format": "int64",
                                                        "description": "The auto-allocated ID of the entity. Never equal to zero. Values less than zero are discouraged and may not be supported in the future."
                                                      },
                                                      "kind": {
                                                        "type": "string",
                                                        "description": "The kind of the entity. A kind matching regex `__.*__` is reserved/read-only. A kind must not contain more than 1500 bytes when UTF-8 encoded. Cannot be `\"\"`."
                                                      },
                                                      "name": {
                                                        "type": "string",
                                                        "description": "The name of the entity. A name matching regex `__.*__` is reserved/read-only. A name must not be more than 1500 bytes when UTF-8 encoded. Cannot be `\"\"`."
                                                      }
                                                    },
                                                    "description": "A (kind, ID/name) pair used to construct a key path. If either name or ID is set, the element is complete. If neither is set, the element is incomplete."
                                                  },
                                                  "description": "The entity path. An entity path consists of one or more elements composed of a kind and a string or numerical identifier, which identify entities. The first element identifies a _root entity_, the second element identifies a _child_ of the root entity, the third element identifies a child of the second entity, and so forth. The entities identified by all prefixes of the path are called the element's _ancestors_. A path can never be empty, and a path can have at most 100 elements."
                                                },
                                                "partitionId": {
                                                  "id": "GooglePrivacyDlpV2PartitionId",
                                                  "type": "object",
                                                  "properties": {
                                                    "projectId": {
                                                      "type": "string",
                                                      "description": "The ID of the project to which the entities belong."
                                                    },
                                                    "namespaceId": {
                                                      "type": "string",
                                                      "description": "If not empty, the ID of the namespace to which the entities belong."
                                                    }
                                                  },
                                                  "description": "Entities are partitioned into subsets, currently identified by a project ID and namespace ID. Queries are scoped to a single partition."
                                                }
                                              },
                                              "description": "Datastore entity key."
                                            }
                                          },
                                          "description": "Record key for a finding in Cloud Datastore."
                                        }
                                      },
                                      "description": "Key of the finding."
                                    },
                                    "tableLocation": {
                                      "id": "GooglePrivacyDlpV2TableLocation",
                                      "type": "object",
                                      "properties": {
                                        "rowIndex": {
                                          "type": "string",
                                          "format": "int64",
                                          "description": "The zero-based index of the row where the finding is located. Only populated for resources that have a natural ordering, not BigQuery. In BigQuery, to identify the row a finding came from, populate BigQueryOptions.identifying_fields with your primary key column names and when you store the findings the value of those columns will be stored inside of Finding."
                                        }
                                      },
                                      "description": "Location within a `ContentItem.Table`."
                                    }
                                  },
                                  "description": "Location within a row or record of a database table."
                                },
                                "containerVersion": {
                                  "type": "string",
                                  "description": "Findings container version, if available (\"generation\" for Google Cloud Storage)."
                                },
                                "documentLocation": {
                                  "id": "GooglePrivacyDlpV2DocumentLocation",
                                  "type": "object",
                                  "properties": {
                                    "fileOffset": {
                                      "type": "string",
                                      "format": "int64",
                                      "description": "Offset of the line, from the beginning of the file, where the finding is located."
                                    }
                                  },
                                  "description": "Location data for document files."
                                },
                                "metadataLocation": {
                                  "id": "GooglePrivacyDlpV2MetadataLocation",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "enum": [
                                        "METADATATYPE_UNSPECIFIED",
                                        "STORAGE_METADATA"
                                      ],
                                      "type": "string",
                                      "description": "Type of metadata containing the finding.",
                                      "enumDescriptions": [
                                        "Unused",
                                        "General file metadata provided by Cloud Storage."
                                      ]
                                    },
                                    "storageLabel": {
                                      "id": "GooglePrivacyDlpV2StorageMetadataLabel",
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        }
                                      },
                                      "description": "Storage metadata."
                                    }
                                  },
                                  "description": "Location within the metadata for inspected content."
                                },
                                "containerTimestamp": {
                                  "type": "string",
                                  "format": "google-datetime",
                                  "description": "Findings container modification timestamp, if applicable. For Google Cloud Storage contains last file modification timestamp. For BigQuery table contains last_modified_time property. For Datastore - not populated."
                                }
                              },
                              "description": "Precise location of the finding within a document, record, image, or metadata container."
                            },
                            "description": "List of nested objects pointing to the precise location of the finding within the file or record."
                          }
                        },
                        "description": "Where the content was found."
                      },
                      "findingId": {
                        "type": "string",
                        "description": "The unique finding id."
                      },
                      "quoteInfo": {
                        "id": "GooglePrivacyDlpV2QuoteInfo",
                        "type": "object",
                        "properties": {
                          "dateTime": {
                            "id": "GooglePrivacyDlpV2DateTime",
                            "type": "object",
                            "properties": {
                              "date": {
                                "id": "GoogleTypeDate",
                                "type": "object",
                                "properties": {
                                  "day": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
                                  },
                                  "year": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
                                  },
                                  "month": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
                                  }
                                },
                                "description": "One or more of the following must be set. Must be a valid date or time value."
                              },
                              "time": {
                                "id": "GoogleTypeTimeOfDay",
                                "type": "object",
                                "properties": {
                                  "hours": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time."
                                  },
                                  "nanos": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999."
                                  },
                                  "minutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Minutes of hour of day. Must be from 0 to 59."
                                  },
                                  "seconds": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds."
                                  }
                                },
                                "description": "Time of day"
                              },
                              "timeZone": {
                                "id": "GooglePrivacyDlpV2TimeZone",
                                "type": "object",
                                "properties": {
                                  "offsetMinutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Set only if the offset can be determined. Positive for time ahead of UTC. E.g. For \"UTC-9\", this value is -540."
                                  }
                                },
                                "description": "Time zone"
                              },
                              "dayOfWeek": {
                                "enum": [
                                  "DAY_OF_WEEK_UNSPECIFIED",
                                  "MONDAY",
                                  "TUESDAY",
                                  "WEDNESDAY",
                                  "THURSDAY",
                                  "FRIDAY",
                                  "SATURDAY",
                                  "SUNDAY"
                                ],
                                "type": "string",
                                "description": "Day of week",
                                "enumDescriptions": [
                                  "The day of the week is unspecified.",
                                  "Monday",
                                  "Tuesday",
                                  "Wednesday",
                                  "Thursday",
                                  "Friday",
                                  "Saturday",
                                  "Sunday"
                                ]
                              }
                            },
                            "description": "The date time indicated by the quote."
                          }
                        },
                        "description": "Contains data parsed from quotes. Only populated if include_quote was set to true and a supported infoType was requested. Currently supported infoTypes: DATE, DATE_OF_BIRTH and TIME."
                      },
                      "createTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "Timestamp when finding was detected."
                      },
                      "likelihood": {
                        "enum": [
                          "LIKELIHOOD_UNSPECIFIED",
                          "VERY_UNLIKELY",
                          "UNLIKELY",
                          "POSSIBLE",
                          "LIKELY",
                          "VERY_LIKELY"
                        ],
                        "type": "string",
                        "description": "Confidence of how likely it is that the `info_type` is correct.",
                        "enumDescriptions": [
                          "Default value; same as POSSIBLE.",
                          "Few matching elements.",
                          "",
                          "Some matching elements.",
                          "",
                          "Many matching elements."
                        ]
                      },
                      "triggerName": {
                        "type": "string",
                        "description": "Job trigger name, if applicable, for this finding."
                      },
                      "resourceName": {
                        "type": "string",
                        "description": "The job that stored the finding."
                      },
                      "jobCreateTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "Time the job started that produced this finding."
                      }
                    },
                    "description": "Represents a piece of potentially sensitive content."
                  },
                  "description": "List of findings for an item."
                },
                "findingsTruncated": {
                  "type": "boolean",
                  "description": "If true, then this item might have more findings than were returned, and the findings returned are an arbitrary subset of all findings. The findings list might be truncated because the input items were too large, or because the server reached the maximum amount of resources allowed for a single API call. For best results, divide the input into smaller batches."
                }
              },
              "description": "The findings."
            }
          },
          "description": "Results of inspecting an item."
        }
      ]
  projects.locations.content.reidentify:
    description: |-
      Re-identifies content that has been de-identified. See https://cloud.google.com/dlp/docs/pseudonymization#re-identification_in_free_text_code_example to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.locations.content/reidentify
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.deidentifyTemplates.create:
    description: |-
      Creates a DeidentifyTemplate for re-using frequently used configuration for de-identifying content, images, and storage. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.locations.deidentifyTemplates/create
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.deidentifyTemplates.delete:
    description: |-
      Deletes a DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.locations.deidentifyTemplates/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  projects.locations.deidentifyTemplates.get:
    description: |-
      Gets a DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.locations.deidentifyTemplates/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.deidentifyTemplates.list:
    description: |-
      Lists DeidentifyTemplates. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.locations.deidentifyTemplates/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.deidentifyTemplates.patch:
    description: |-
      Updates the DeidentifyTemplate. See https://cloud.google.com/dlp/docs/creating-templates-deid to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.locations.deidentifyTemplates/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.dlpJobs.cancel:
    description: |-
      Starts asynchronous cancellation on a long-running DlpJob. The server makes a best effort to cancel the DlpJob, but success is not guaranteed. See https://cloud.google.com/dlp/docs/inspecting-storage and https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.locations.dlpJobs/cancel
    example:
      inputs: [
        {
          "id": "GooglePrivacyDlpV2CancelDlpJobRequest",
          "type": "object",
          "properties": {},
          "description": "The request message for canceling a DLP job."
        }
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  projects.locations.dlpJobs.create:
    description: |-
      Creates a new job to inspect storage or calculate risk metrics. See https://cloud.google.com/dlp/docs/inspecting-storage and https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more. When no InfoTypes or CustomInfoTypes are specified in inspect jobs, the system will automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.locations.dlpJobs/create
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.dlpJobs.delete:
    description: |-
      Deletes a long-running DlpJob. This method indicates that the client is no longer interested in the DlpJob result. The job will be cancelled if possible. See https://cloud.google.com/dlp/docs/inspecting-storage and https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.locations.dlpJobs/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  projects.locations.dlpJobs.finish:
    description: |-
      Finish a running hybrid DlpJob. Triggers the finalization steps and running of any enabled actions that have not yet run.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.locations.dlpJobs/finish
    example:
      inputs: [
        {
          "id": "GooglePrivacyDlpV2FinishDlpJobRequest",
          "type": "object",
          "properties": {},
          "description": "The request message for finishing a DLP hybrid job."
        }
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  projects.locations.dlpJobs.get:
    description: |-
      Gets the latest state of a long-running DlpJob. See https://cloud.google.com/dlp/docs/inspecting-storage and https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.locations.dlpJobs/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.dlpJobs.hybridInspect:
    description: |-
      Inspect hybrid content and store findings to a job. To review the findings, inspect the job. Inspection will occur asynchronously.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.locations.dlpJobs/hybridInspect
    example:
      inputs: [
        {
          "id": "GooglePrivacyDlpV2HybridInspectDlpJobRequest",
          "type": "object",
          "properties": {
            "hybridItem": {
              "id": "GooglePrivacyDlpV2HybridContentItem",
              "type": "object",
              "properties": {
                "item": {
                  "id": "GooglePrivacyDlpV2ContentItem",
                  "type": "object",
                  "properties": {
                    "table": {
                      "id": "GooglePrivacyDlpV2Table",
                      "type": "object",
                      "properties": {
                        "rows": {
                          "type": "array",
                          "items": {
                            "id": "GooglePrivacyDlpV2Row",
                            "type": "object",
                            "properties": {
                              "values": {
                                "type": "array",
                                "items": {
                                  "id": "GooglePrivacyDlpV2Value",
                                  "type": "object",
                                  "properties": {
                                    "dateValue": {
                                      "id": "GoogleTypeDate",
                                      "type": "object",
                                      "properties": {
                                        "day": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
                                        },
                                        "year": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
                                        },
                                        "month": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
                                        }
                                      },
                                      "description": "date"
                                    },
                                    "timeValue": {
                                      "id": "GoogleTypeTimeOfDay",
                                      "type": "object",
                                      "properties": {
                                        "hours": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time."
                                        },
                                        "nanos": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999."
                                        },
                                        "minutes": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Minutes of hour of day. Must be from 0 to 59."
                                        },
                                        "seconds": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds."
                                        }
                                      },
                                      "description": "time of day"
                                    },
                                    "floatValue": {
                                      "type": "number",
                                      "format": "double",
                                      "description": "float"
                                    },
                                    "stringValue": {
                                      "type": "string",
                                      "description": "string"
                                    },
                                    "booleanValue": {
                                      "type": "boolean",
                                      "description": "boolean"
                                    },
                                    "integerValue": {
                                      "type": "string",
                                      "format": "int64",
                                      "description": "integer"
                                    },
                                    "dayOfWeekValue": {
                                      "enum": [
                                        "DAY_OF_WEEK_UNSPECIFIED",
                                        "MONDAY",
                                        "TUESDAY",
                                        "WEDNESDAY",
                                        "THURSDAY",
                                        "FRIDAY",
                                        "SATURDAY",
                                        "SUNDAY"
                                      ],
                                      "type": "string",
                                      "description": "day of week",
                                      "enumDescriptions": [
                                        "The day of the week is unspecified.",
                                        "Monday",
                                        "Tuesday",
                                        "Wednesday",
                                        "Thursday",
                                        "Friday",
                                        "Saturday",
                                        "Sunday"
                                      ]
                                    },
                                    "timestampValue": {
                                      "type": "string",
                                      "format": "google-datetime",
                                      "description": "timestamp"
                                    }
                                  },
                                  "description": "Set of primitive values supported by the system. Note that for the purposes of inspection or transformation, the number of bytes considered to comprise a 'Value' is based on its representation as a UTF-8 encoded string. For example, if 'integer_value' is set to 123456789, the number of bytes would be counted as 9, even though an int64 only holds up to 8 bytes of data."
                                },
                                "description": "Individual cells."
                              }
                            },
                            "description": "Values of the row."
                          },
                          "description": "Rows of the table."
                        },
                        "headers": {
                          "type": "array",
                          "items": {
                            "id": "GooglePrivacyDlpV2FieldId",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name describing the field."
                              }
                            },
                            "description": "General identifier of a data field in a storage service."
                          },
                          "description": "Headers of the table."
                        }
                      },
                      "description": "Structured content for inspection. See https://cloud.google.com/dlp/docs/inspecting-text#inspecting_a_table to learn more."
                    },
                    "value": {
                      "type": "string",
                      "description": "String data to inspect or redact."
                    },
                    "byteItem": {
                      "id": "GooglePrivacyDlpV2ByteContentItem",
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "string",
                          "format": "byte",
                          "description": "Content data to inspect or redact."
                        },
                        "type": {
                          "enum": [
                            "BYTES_TYPE_UNSPECIFIED",
                            "IMAGE",
                            "IMAGE_JPEG",
                            "IMAGE_BMP",
                            "IMAGE_PNG",
                            "IMAGE_SVG",
                            "TEXT_UTF8",
                            "WORD_DOCUMENT",
                            "PDF",
                            "AVRO",
                            "CSV",
                            "TSV"
                          ],
                          "type": "string",
                          "description": "The type of data stored in the bytes string. Default will be TEXT_UTF8.",
                          "enumDescriptions": [
                            "Unused",
                            "Any image type.",
                            "jpeg",
                            "bmp",
                            "png",
                            "svg",
                            "plain text",
                            "docx, docm, dotx, dotm",
                            "pdf",
                            "avro",
                            "csv",
                            "tsv"
                          ]
                        }
                      },
                      "description": "Content data to inspect or redact. Replaces `type` and `data`."
                    }
                  },
                  "description": "The item to inspect."
                },
                "findingDetails": {
                  "id": "GooglePrivacyDlpV2HybridFindingDetails",
                  "type": "object",
                  "properties": {
                    "labels": {
                      "type": "object",
                      "description": "Labels to represent user provided metadata about the data being inspected. If configured by the job, some key values may be required. The labels associated with `Finding`'s produced by hybrid inspection. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples: * `\"environment\" : \"production\"` * `\"pipeline\" : \"etl\"`",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "rowOffset": {
                      "type": "string",
                      "format": "int64",
                      "description": "Offset of the row for tables. Populate if the row(s) being scanned are part of a bigger dataset and you want to keep track of their absolute position."
                    },
                    "fileOffset": {
                      "type": "string",
                      "format": "int64",
                      "description": "Offset in bytes of the line, from the beginning of the file, where the finding is located. Populate if the item being scanned is only part of a bigger item, such as a shard of a file and you want to track the absolute position of the finding."
                    },
                    "tableOptions": {
                      "id": "GooglePrivacyDlpV2TableOptions",
                      "type": "object",
                      "properties": {
                        "identifyingFields": {
                          "type": "array",
                          "items": {
                            "id": "GooglePrivacyDlpV2FieldId",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name describing the field."
                              }
                            },
                            "description": "General identifier of a data field in a storage service."
                          },
                          "description": "The columns that are the primary keys for table objects included in ContentItem. A copy of this cell's value will stored alongside alongside each finding so that the finding can be traced to the specific row it came from. No more than 3 may be provided."
                        }
                      },
                      "description": "If the container is a table, additional information to make findings meaningful such as the columns that are primary keys. If not known ahead of time, can also be set within each inspect hybrid call and the two will be merged. Note that identifying_fields will only be stored to BigQuery, and only if the BigQuery action has been included."
                    },
                    "containerDetails": {
                      "id": "GooglePrivacyDlpV2Container",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Container type, for example BigQuery or Google Cloud Storage."
                        },
                        "version": {
                          "type": "string",
                          "description": "Findings container version, if available (\"generation\" for Google Cloud Storage)."
                        },
                        "fullPath": {
                          "type": "string",
                          "description": "A string representation of the full container name. Examples: - BigQuery: 'Project:DataSetId.TableId' - Google Cloud Storage: 'gs://Bucket/folders/filename.txt'"
                        },
                        "rootPath": {
                          "type": "string",
                          "description": "The root of the container. Examples: - For BigQuery table `project_id:dataset_id.table_id`, the root is `dataset_id` - For Google Cloud Storage file `gs://bucket/folder/filename.txt`, the root is `gs://bucket`"
                        },
                        "projectId": {
                          "type": "string",
                          "description": "Project where the finding was found. Can be different from the project that owns the finding."
                        },
                        "updateTime": {
                          "type": "string",
                          "format": "google-datetime",
                          "description": "Findings container modification timestamp, if applicable. For Google Cloud Storage contains last file modification timestamp. For BigQuery table contains last_modified_time property. For Datastore - not populated."
                        },
                        "relativePath": {
                          "type": "string",
                          "description": "The rest of the path after the root. Examples: - For BigQuery table `project_id:dataset_id.table_id`, the relative path is `table_id` - Google Cloud Storage file `gs://bucket/folder/filename.txt`, the relative path is `folder/filename.txt`"
                        }
                      },
                      "description": "Details about the container where the content being inspected is from."
                    }
                  },
                  "description": "Supplementary information that will be added to each finding."
                }
              },
              "description": "The item to inspect."
            }
          },
          "description": "Request to search for potentially sensitive info in a custom location."
        }
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2HybridInspectResponse",
          "type": "object",
          "properties": {},
          "description": "Quota exceeded errors will be thrown once quota has been met."
        }
      ]
  projects.locations.dlpJobs.list:
    description: |-
      Lists DlpJobs that match the specified filter in the request. See https://cloud.google.com/dlp/docs/inspecting-storage and https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.locations.dlpJobs/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.image.redact:
    description: |-
      Redacts potentially sensitive info from an image. This method has limits on input size, processing time, and output size. See https://cloud.google.com/dlp/docs/redacting-sensitive-data-images to learn more. When no InfoTypes or CustomInfoTypes are specified in this request, the system will automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.locations.image/redact
    example:
      inputs: [
        {
          "id": "GooglePrivacyDlpV2RedactImageRequest",
          "type": "object",
          "properties": {
            "byteItem": {
              "id": "GooglePrivacyDlpV2ByteContentItem",
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "byte",
                  "description": "Content data to inspect or redact."
                },
                "type": {
                  "enum": [
                    "BYTES_TYPE_UNSPECIFIED",
                    "IMAGE",
                    "IMAGE_JPEG",
                    "IMAGE_BMP",
                    "IMAGE_PNG",
                    "IMAGE_SVG",
                    "TEXT_UTF8",
                    "WORD_DOCUMENT",
                    "PDF",
                    "AVRO",
                    "CSV",
                    "TSV"
                  ],
                  "type": "string",
                  "description": "The type of data stored in the bytes string. Default will be TEXT_UTF8.",
                  "enumDescriptions": [
                    "Unused",
                    "Any image type.",
                    "jpeg",
                    "bmp",
                    "png",
                    "svg",
                    "plain text",
                    "docx, docm, dotx, dotm",
                    "pdf",
                    "avro",
                    "csv",
                    "tsv"
                  ]
                }
              },
              "description": "The content must be PNG, JPEG, SVG or BMP."
            },
            "locationId": {
              "type": "string",
              "description": "Deprecated. This field has no effect."
            },
            "inspectConfig": {
              "id": "GooglePrivacyDlpV2InspectConfig",
              "type": "object",
              "properties": {
                "limits": {
                  "id": "GooglePrivacyDlpV2FindingLimits",
                  "type": "object",
                  "properties": {
                    "maxFindingsPerItem": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Max number of findings that will be returned for each item scanned. When set within `InspectJobConfig`, the maximum returned is 2000 regardless if this is set higher. When set within `InspectContentRequest`, this field is ignored."
                    },
                    "maxFindingsPerRequest": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Max number of findings that will be returned per request/job. When set within `InspectContentRequest`, the maximum returned is 2000 regardless if this is set higher."
                    },
                    "maxFindingsPerInfoType": {
                      "type": "array",
                      "items": {
                        "id": "GooglePrivacyDlpV2InfoTypeLimit",
                        "type": "object",
                        "properties": {
                          "infoType": {
                            "id": "GooglePrivacyDlpV2InfoType",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                              }
                            },
                            "description": "Type of information detected by the API."
                          },
                          "maxFindings": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Max findings limit for the given infoType."
                          }
                        },
                        "description": "Max findings configuration per infoType, per content item or long running DlpJob."
                      },
                      "description": "Configuration of findings limit given for specified infoTypes."
                    }
                  },
                  "description": "Configuration to control the number of findings returned."
                },
                "ruleSet": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2InspectionRuleSet",
                    "type": "object",
                    "properties": {
                      "rules": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2InspectionRule",
                          "type": "object",
                          "properties": {
                            "hotwordRule": {
                              "id": "GooglePrivacyDlpV2HotwordRule",
                              "type": "object",
                              "properties": {
                                "proximity": {
                                  "id": "GooglePrivacyDlpV2Proximity",
                                  "type": "object",
                                  "properties": {
                                    "windowAfter": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters after the finding to consider."
                                    },
                                    "windowBefore": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters before the finding to consider."
                                    }
                                  },
                                  "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                },
                                "hotwordRegex": {
                                  "id": "GooglePrivacyDlpV2Regex",
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string",
                                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                    },
                                    "groupIndexes": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                    }
                                  },
                                  "description": "Regular expression pattern defining what qualifies as a hotword."
                                },
                                "likelihoodAdjustment": {
                                  "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                  "type": "object",
                                  "properties": {
                                    "fixedLikelihood": {
                                      "enum": [
                                        "LIKELIHOOD_UNSPECIFIED",
                                        "VERY_UNLIKELY",
                                        "UNLIKELY",
                                        "POSSIBLE",
                                        "LIKELY",
                                        "VERY_LIKELY"
                                      ],
                                      "type": "string",
                                      "description": "Set the likelihood of a finding to a fixed value.",
                                      "enumDescriptions": [
                                        "Default value; same as POSSIBLE.",
                                        "Few matching elements.",
                                        "",
                                        "Some matching elements.",
                                        "",
                                        "Many matching elements."
                                      ]
                                    },
                                    "relativeLikelihood": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                    }
                                  },
                                  "description": "Likelihood adjustment to apply to all matching findings."
                                }
                              },
                              "description": "Hotword-based detection rule."
                            },
                            "exclusionRule": {
                              "id": "GooglePrivacyDlpV2ExclusionRule",
                              "type": "object",
                              "properties": {
                                "regex": {
                                  "id": "GooglePrivacyDlpV2Regex",
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string",
                                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                    },
                                    "groupIndexes": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                    }
                                  },
                                  "description": "Regular expression which defines the rule."
                                },
                                "dictionary": {
                                  "id": "GooglePrivacyDlpV2Dictionary",
                                  "type": "object",
                                  "properties": {
                                    "wordList": {
                                      "id": "GooglePrivacyDlpV2WordList",
                                      "type": "object",
                                      "properties": {
                                        "words": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                        }
                                      },
                                      "description": "List of words or phrases to search for."
                                    },
                                    "cloudStoragePath": {
                                      "id": "GooglePrivacyDlpV2CloudStoragePath",
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string",
                                          "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                        }
                                      },
                                      "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                                    }
                                  },
                                  "description": "Dictionary which defines the rule."
                                },
                                "matchingType": {
                                  "enum": [
                                    "MATCHING_TYPE_UNSPECIFIED",
                                    "MATCHING_TYPE_FULL_MATCH",
                                    "MATCHING_TYPE_PARTIAL_MATCH",
                                    "MATCHING_TYPE_INVERSE_MATCH"
                                  ],
                                  "type": "string",
                                  "description": "How the rule is applied, see MatchingType documentation for details.",
                                  "enumDescriptions": [
                                    "Invalid.",
                                    "Full match. - Dictionary: join of Dictionary results matched complete finding quote - Regex: all regex matches fill a finding quote start to end - Exclude info type: completely inside affecting info types findings",
                                    "Partial match. - Dictionary: at least one of the tokens in the finding matches - Regex: substring of the finding matches - Exclude info type: intersects with affecting info types findings",
                                    "Inverse match. - Dictionary: no tokens in the finding match the dictionary - Regex: finding doesn't match the regex - Exclude info type: no intersection with affecting info types findings"
                                  ]
                                },
                                "excludeInfoTypes": {
                                  "id": "GooglePrivacyDlpV2ExcludeInfoTypes",
                                  "type": "object",
                                  "properties": {
                                    "infoTypes": {
                                      "type": "array",
                                      "items": {
                                        "id": "GooglePrivacyDlpV2InfoType",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                          }
                                        },
                                        "description": "Type of information detected by the API."
                                      },
                                      "description": "InfoType list in ExclusionRule rule drops a finding when it overlaps or contained within with a finding of an infoType from this list. For example, for `InspectionRuleSet.info_types` containing \"PHONE_NUMBER\"` and `exclusion_rule` containing `exclude_info_types.info_types` with \"EMAIL_ADDRESS\" the phone number findings are dropped if they overlap with EMAIL_ADDRESS finding. That leads to \"555-222-2222@example.org\" to generate only a single finding, namely email address."
                                    }
                                  },
                                  "description": "Set of infoTypes for which findings would affect this rule."
                                }
                              },
                              "description": "Exclusion rule."
                            }
                          },
                          "description": "A single inspection rule to be applied to infoTypes, specified in `InspectionRuleSet`."
                        },
                        "description": "Set of rules to be applied to infoTypes. The rules are applied in order."
                      },
                      "infoTypes": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2InfoType",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                            }
                          },
                          "description": "Type of information detected by the API."
                        },
                        "description": "List of infoTypes this rule set is applied to."
                      }
                    },
                    "description": "Rule set for modifying a set of infoTypes to alter behavior under certain circumstances, depending on the specific details of the rules within the set."
                  },
                  "description": "Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type."
                },
                "infoTypes": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2InfoType",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                      }
                    },
                    "description": "Type of information detected by the API."
                  },
                  "description": "Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/dlp/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time."
                },
                "includeQuote": {
                  "type": "boolean",
                  "description": "When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote."
                },
                "minLikelihood": {
                  "enum": [
                    "LIKELIHOOD_UNSPECIFIED",
                    "VERY_UNLIKELY",
                    "UNLIKELY",
                    "POSSIBLE",
                    "LIKELY",
                    "VERY_LIKELY"
                  ],
                  "type": "string",
                  "description": "Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more.",
                  "enumDescriptions": [
                    "Default value; same as POSSIBLE.",
                    "Few matching elements.",
                    "",
                    "Some matching elements.",
                    "",
                    "Many matching elements."
                  ]
                },
                "contentOptions": {
                  "type": "array",
                  "items": {
                    "enum": [
                      "CONTENT_UNSPECIFIED",
                      "CONTENT_TEXT",
                      "CONTENT_IMAGE"
                    ],
                    "type": "string",
                    "enumDescriptions": [
                      "Includes entire content of a file or a data stream.",
                      "Text content within the data, excluding any metadata.",
                      "Images found in the data."
                    ]
                  },
                  "description": "List of options defining data content to scan. If empty, text, images, and other content will be included."
                },
                "customInfoTypes": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2CustomInfoType",
                    "type": "object",
                    "properties": {
                      "regex": {
                        "id": "GooglePrivacyDlpV2Regex",
                        "type": "object",
                        "properties": {
                          "pattern": {
                            "type": "string",
                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                          },
                          "groupIndexes": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                          }
                        },
                        "description": "Regular expression based CustomInfoType."
                      },
                      "infoType": {
                        "id": "GooglePrivacyDlpV2InfoType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                          }
                        },
                        "description": "Type of information detected by the API."
                      },
                      "dictionary": {
                        "id": "GooglePrivacyDlpV2Dictionary",
                        "type": "object",
                        "properties": {
                          "wordList": {
                            "id": "GooglePrivacyDlpV2WordList",
                            "type": "object",
                            "properties": {
                              "words": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                              }
                            },
                            "description": "List of words or phrases to search for."
                          },
                          "cloudStoragePath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                          }
                        },
                        "description": "A list of phrases to detect as a CustomInfoType."
                      },
                      "likelihood": {
                        "enum": [
                          "LIKELIHOOD_UNSPECIFIED",
                          "VERY_UNLIKELY",
                          "UNLIKELY",
                          "POSSIBLE",
                          "LIKELY",
                          "VERY_LIKELY"
                        ],
                        "type": "string",
                        "description": "Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not specified.",
                        "enumDescriptions": [
                          "Default value; same as POSSIBLE.",
                          "Few matching elements.",
                          "",
                          "Some matching elements.",
                          "",
                          "Many matching elements."
                        ]
                      },
                      "storedType": {
                        "id": "GooglePrivacyDlpV2StoredType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Resource name of the requested `StoredInfoType`, for example `organizations/433245324/storedInfoTypes/432452342` or `projects/project-id/storedInfoTypes/432452342`."
                          },
                          "createTime": {
                            "type": "string",
                            "format": "google-datetime",
                            "description": "Timestamp indicating when the version of the `StoredInfoType` used for inspection was created. Output-only field, populated by the system."
                          }
                        },
                        "description": "Load an existing `StoredInfoType` resource for use in `InspectDataSource`. Not currently supported in `InspectContent`."
                      },
                      "exclusionType": {
                        "enum": [
                          "EXCLUSION_TYPE_UNSPECIFIED",
                          "EXCLUSION_TYPE_EXCLUDE"
                        ],
                        "type": "string",
                        "description": "If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching.",
                        "enumDescriptions": [
                          "A finding of this custom info type will not be excluded from results.",
                          "A finding of this custom info type will be excluded from final results, but can still affect rule execution."
                        ]
                      },
                      "surrogateType": {
                        "id": "GooglePrivacyDlpV2SurrogateType",
                        "type": "object",
                        "properties": {},
                        "description": "Message for detecting output from deidentification transformations that support reversing."
                      },
                      "detectionRules": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2DetectionRule",
                          "type": "object",
                          "properties": {
                            "hotwordRule": {
                              "id": "GooglePrivacyDlpV2HotwordRule",
                              "type": "object",
                              "properties": {
                                "proximity": {
                                  "id": "GooglePrivacyDlpV2Proximity",
                                  "type": "object",
                                  "properties": {
                                    "windowAfter": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters after the finding to consider."
                                    },
                                    "windowBefore": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters before the finding to consider."
                                    }
                                  },
                                  "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                },
                                "hotwordRegex": {
                                  "id": "GooglePrivacyDlpV2Regex",
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string",
                                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                    },
                                    "groupIndexes": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                    }
                                  },
                                  "description": "Regular expression pattern defining what qualifies as a hotword."
                                },
                                "likelihoodAdjustment": {
                                  "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                  "type": "object",
                                  "properties": {
                                    "fixedLikelihood": {
                                      "enum": [
                                        "LIKELIHOOD_UNSPECIFIED",
                                        "VERY_UNLIKELY",
                                        "UNLIKELY",
                                        "POSSIBLE",
                                        "LIKELY",
                                        "VERY_LIKELY"
                                      ],
                                      "type": "string",
                                      "description": "Set the likelihood of a finding to a fixed value.",
                                      "enumDescriptions": [
                                        "Default value; same as POSSIBLE.",
                                        "Few matching elements.",
                                        "",
                                        "Some matching elements.",
                                        "",
                                        "Many matching elements."
                                      ]
                                    },
                                    "relativeLikelihood": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                    }
                                  },
                                  "description": "Likelihood adjustment to apply to all matching findings."
                                }
                              },
                              "description": "Hotword-based detection rule."
                            }
                          },
                          "description": "Deprecated; use `InspectionRuleSet` instead. Rule for modifying a `CustomInfoType` to alter behavior under certain circumstances, depending on the specific details of the rule. Not supported for the `surrogate_type` custom infoType."
                        },
                        "description": "Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in order that they are specified. Not supported for the `surrogate_type` CustomInfoType."
                      }
                    },
                    "description": "Custom information type provided by the user. Used to find domain-specific sensitive information configurable to the data in question."
                  },
                  "description": "CustomInfoTypes provided by the user. See https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more."
                },
                "excludeInfoTypes": {
                  "type": "boolean",
                  "description": "When true, excludes type information of the findings."
                }
              },
              "description": "Configuration for the inspector."
            },
            "includeFindings": {
              "type": "boolean",
              "description": "Whether the response should include findings along with the redacted image."
            },
            "imageRedactionConfigs": {
              "type": "array",
              "items": {
                "id": "GooglePrivacyDlpV2ImageRedactionConfig",
                "type": "object",
                "properties": {
                  "infoType": {
                    "id": "GooglePrivacyDlpV2InfoType",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                      }
                    },
                    "description": "Type of information detected by the API."
                  },
                  "redactAllText": {
                    "type": "boolean",
                    "description": "If true, all text found in the image, regardless whether it matches an info_type, is redacted. Only one should be provided."
                  },
                  "redactionColor": {
                    "id": "GooglePrivacyDlpV2Color",
                    "type": "object",
                    "properties": {
                      "red": {
                        "type": "number",
                        "format": "float",
                        "description": "The amount of red in the color as a value in the interval [0, 1]."
                      },
                      "blue": {
                        "type": "number",
                        "format": "float",
                        "description": "The amount of blue in the color as a value in the interval [0, 1]."
                      },
                      "green": {
                        "type": "number",
                        "format": "float",
                        "description": "The amount of green in the color as a value in the interval [0, 1]."
                      }
                    },
                    "description": "The color to use when redacting content from an image. If not specified, the default is black."
                  }
                },
                "description": "Configuration for determining how redaction of images should occur."
              },
              "description": "The configuration for specifying what content to redact from images."
            }
          },
          "description": "Request to search for potentially sensitive info in an image and redact it by covering it with a colored rectangle."
        }
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2RedactImageResponse",
          "type": "object",
          "properties": {
            "extractedText": {
              "type": "string",
              "description": "If an image was being inspected and the InspectConfig's include_quote was set to true, then this field will include all text, if any, that was found in the image."
            },
            "inspectResult": {
              "id": "GooglePrivacyDlpV2InspectResult",
              "type": "object",
              "properties": {
                "findings": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2Finding",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Resource name in format projects/{project}/locations/{location}/findings/{finding} Populated only when viewing persisted findings."
                      },
                      "quote": {
                        "type": "string",
                        "description": "The content that was found. Even if the content is not textual, it may be converted to a textual representation here. Provided if `include_quote` is true and the finding is less than or equal to 4096 bytes long. If the finding exceeds 4096 bytes in length, the quote may be omitted."
                      },
                      "labels": {
                        "type": "object",
                        "description": "The labels associated with this `Finding`. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples: * `\"environment\" : \"production\"` * `\"pipeline\" : \"etl\"`",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "jobName": {
                        "type": "string",
                        "description": "The job that stored the finding."
                      },
                      "infoType": {
                        "id": "GooglePrivacyDlpV2InfoType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                          }
                        },
                        "description": "Type of information detected by the API."
                      },
                      "location": {
                        "id": "GooglePrivacyDlpV2Location",
                        "type": "object",
                        "properties": {
                          "byteRange": {
                            "id": "GooglePrivacyDlpV2Range",
                            "type": "object",
                            "properties": {
                              "end": {
                                "type": "string",
                                "format": "int64",
                                "description": "Index of the last character of the range (exclusive)."
                              },
                              "start": {
                                "type": "string",
                                "format": "int64",
                                "description": "Index of the first character of the range (inclusive)."
                              }
                            },
                            "description": "Zero-based byte offsets delimiting the finding. These are relative to the finding's containing element. Note that when the content is not textual, this references the UTF-8 encoded textual representation of the content. Omitted if content is an image."
                          },
                          "container": {
                            "id": "GooglePrivacyDlpV2Container",
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Container type, for example BigQuery or Google Cloud Storage."
                              },
                              "version": {
                                "type": "string",
                                "description": "Findings container version, if available (\"generation\" for Google Cloud Storage)."
                              },
                              "fullPath": {
                                "type": "string",
                                "description": "A string representation of the full container name. Examples: - BigQuery: 'Project:DataSetId.TableId' - Google Cloud Storage: 'gs://Bucket/folders/filename.txt'"
                              },
                              "rootPath": {
                                "type": "string",
                                "description": "The root of the container. Examples: - For BigQuery table `project_id:dataset_id.table_id`, the root is `dataset_id` - For Google Cloud Storage file `gs://bucket/folder/filename.txt`, the root is `gs://bucket`"
                              },
                              "projectId": {
                                "type": "string",
                                "description": "Project where the finding was found. Can be different from the project that owns the finding."
                              },
                              "updateTime": {
                                "type": "string",
                                "format": "google-datetime",
                                "description": "Findings container modification timestamp, if applicable. For Google Cloud Storage contains last file modification timestamp. For BigQuery table contains last_modified_time property. For Datastore - not populated."
                              },
                              "relativePath": {
                                "type": "string",
                                "description": "The rest of the path after the root. Examples: - For BigQuery table `project_id:dataset_id.table_id`, the relative path is `table_id` - Google Cloud Storage file `gs://bucket/folder/filename.txt`, the relative path is `folder/filename.txt`"
                              }
                            },
                            "description": "Information about the container where this finding occurred, if available."
                          },
                          "codepointRange": {
                            "id": "GooglePrivacyDlpV2Range",
                            "type": "object",
                            "properties": {
                              "end": {
                                "type": "string",
                                "format": "int64",
                                "description": "Index of the last character of the range (exclusive)."
                              },
                              "start": {
                                "type": "string",
                                "format": "int64",
                                "description": "Index of the first character of the range (inclusive)."
                              }
                            },
                            "description": "Unicode character offsets delimiting the finding. These are relative to the finding's containing element. Provided when the content is text."
                          },
                          "contentLocations": {
                            "type": "array",
                            "items": {
                              "id": "GooglePrivacyDlpV2ContentLocation",
                              "type": "object",
                              "properties": {
                                "containerName": {
                                  "type": "string",
                                  "description": "Name of the container where the finding is located. The top level name is the source file name or table name. Names of some common storage containers are formatted as follows: * BigQuery tables: `{project_id}:{dataset_id}.{table_id}` * Cloud Storage files: `gs://{bucket}/{path}` * Datastore namespace: {namespace} Nested names could be absent if the embedded object has no string identifier (for an example an image contained within a document)."
                                },
                                "imageLocation": {
                                  "id": "GooglePrivacyDlpV2ImageLocation",
                                  "type": "object",
                                  "properties": {
                                    "boundingBoxes": {
                                      "type": "array",
                                      "items": {
                                        "id": "GooglePrivacyDlpV2BoundingBox",
                                        "type": "object",
                                        "properties": {
                                          "top": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Top coordinate of the bounding box. (0,0) is upper left."
                                          },
                                          "left": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Left coordinate of the bounding box. (0,0) is upper left."
                                          },
                                          "width": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Width of the bounding box in pixels."
                                          },
                                          "height": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Height of the bounding box in pixels."
                                          }
                                        },
                                        "description": "Bounding box encompassing detected text within an image."
                                      },
                                      "description": "Bounding boxes locating the pixels within the image containing the finding."
                                    }
                                  },
                                  "description": "Location within an image's pixels."
                                },
                                "recordLocation": {
                                  "id": "GooglePrivacyDlpV2RecordLocation",
                                  "type": "object",
                                  "properties": {
                                    "fieldId": {
                                      "id": "GooglePrivacyDlpV2FieldId",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Name describing the field."
                                        }
                                      },
                                      "description": "General identifier of a data field in a storage service."
                                    },
                                    "recordKey": {
                                      "id": "GooglePrivacyDlpV2RecordKey",
                                      "type": "object",
                                      "properties": {
                                        "idValues": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "Values of identifying columns in the given row. Order of values matches the order of `identifying_fields` specified in the scanning request."
                                        },
                                        "bigQueryKey": {
                                          "id": "GooglePrivacyDlpV2BigQueryKey",
                                          "type": "object",
                                          "properties": {
                                            "rowNumber": {
                                              "type": "string",
                                              "format": "int64",
                                              "description": "Row number inferred at the time the table was scanned. This value is nondeterministic, cannot be queried, and may be null for inspection jobs. To locate findings within a table, specify `inspect_job.storage_config.big_query_options.identifying_fields` in `CreateDlpJobRequest`."
                                            },
                                            "tableReference": {
                                              "id": "GooglePrivacyDlpV2BigQueryTable",
                                              "type": "object",
                                              "properties": {
                                                "tableId": {
                                                  "type": "string",
                                                  "description": "Name of the table."
                                                },
                                                "datasetId": {
                                                  "type": "string",
                                                  "description": "Dataset ID of the table."
                                                },
                                                "projectId": {
                                                  "type": "string",
                                                  "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                                }
                                              },
                                              "description": "Complete BigQuery table reference."
                                            }
                                          },
                                          "description": "Row key for identifying a record in BigQuery table."
                                        },
                                        "datastoreKey": {
                                          "id": "GooglePrivacyDlpV2DatastoreKey",
                                          "type": "object",
                                          "properties": {
                                            "entityKey": {
                                              "id": "GooglePrivacyDlpV2Key",
                                              "type": "object",
                                              "properties": {
                                                "path": {
                                                  "type": "array",
                                                  "items": {
                                                    "id": "GooglePrivacyDlpV2PathElement",
                                                    "type": "object",
                                                    "properties": {
                                                      "id": {
                                                        "type": "string",
                                                        "format": "int64",
                                                        "description": "The auto-allocated ID of the entity. Never equal to zero. Values less than zero are discouraged and may not be supported in the future."
                                                      },
                                                      "kind": {
                                                        "type": "string",
                                                        "description": "The kind of the entity. A kind matching regex `__.*__` is reserved/read-only. A kind must not contain more than 1500 bytes when UTF-8 encoded. Cannot be `\"\"`."
                                                      },
                                                      "name": {
                                                        "type": "string",
                                                        "description": "The name of the entity. A name matching regex `__.*__` is reserved/read-only. A name must not be more than 1500 bytes when UTF-8 encoded. Cannot be `\"\"`."
                                                      }
                                                    },
                                                    "description": "A (kind, ID/name) pair used to construct a key path. If either name or ID is set, the element is complete. If neither is set, the element is incomplete."
                                                  },
                                                  "description": "The entity path. An entity path consists of one or more elements composed of a kind and a string or numerical identifier, which identify entities. The first element identifies a _root entity_, the second element identifies a _child_ of the root entity, the third element identifies a child of the second entity, and so forth. The entities identified by all prefixes of the path are called the element's _ancestors_. A path can never be empty, and a path can have at most 100 elements."
                                                },
                                                "partitionId": {
                                                  "id": "GooglePrivacyDlpV2PartitionId",
                                                  "type": "object",
                                                  "properties": {
                                                    "projectId": {
                                                      "type": "string",
                                                      "description": "The ID of the project to which the entities belong."
                                                    },
                                                    "namespaceId": {
                                                      "type": "string",
                                                      "description": "If not empty, the ID of the namespace to which the entities belong."
                                                    }
                                                  },
                                                  "description": "Entities are partitioned into subsets, currently identified by a project ID and namespace ID. Queries are scoped to a single partition."
                                                }
                                              },
                                              "description": "Datastore entity key."
                                            }
                                          },
                                          "description": "Record key for a finding in Cloud Datastore."
                                        }
                                      },
                                      "description": "Key of the finding."
                                    },
                                    "tableLocation": {
                                      "id": "GooglePrivacyDlpV2TableLocation",
                                      "type": "object",
                                      "properties": {
                                        "rowIndex": {
                                          "type": "string",
                                          "format": "int64",
                                          "description": "The zero-based index of the row where the finding is located. Only populated for resources that have a natural ordering, not BigQuery. In BigQuery, to identify the row a finding came from, populate BigQueryOptions.identifying_fields with your primary key column names and when you store the findings the value of those columns will be stored inside of Finding."
                                        }
                                      },
                                      "description": "Location within a `ContentItem.Table`."
                                    }
                                  },
                                  "description": "Location within a row or record of a database table."
                                },
                                "containerVersion": {
                                  "type": "string",
                                  "description": "Findings container version, if available (\"generation\" for Google Cloud Storage)."
                                },
                                "documentLocation": {
                                  "id": "GooglePrivacyDlpV2DocumentLocation",
                                  "type": "object",
                                  "properties": {
                                    "fileOffset": {
                                      "type": "string",
                                      "format": "int64",
                                      "description": "Offset of the line, from the beginning of the file, where the finding is located."
                                    }
                                  },
                                  "description": "Location data for document files."
                                },
                                "metadataLocation": {
                                  "id": "GooglePrivacyDlpV2MetadataLocation",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "enum": [
                                        "METADATATYPE_UNSPECIFIED",
                                        "STORAGE_METADATA"
                                      ],
                                      "type": "string",
                                      "description": "Type of metadata containing the finding.",
                                      "enumDescriptions": [
                                        "Unused",
                                        "General file metadata provided by Cloud Storage."
                                      ]
                                    },
                                    "storageLabel": {
                                      "id": "GooglePrivacyDlpV2StorageMetadataLabel",
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        }
                                      },
                                      "description": "Storage metadata."
                                    }
                                  },
                                  "description": "Location within the metadata for inspected content."
                                },
                                "containerTimestamp": {
                                  "type": "string",
                                  "format": "google-datetime",
                                  "description": "Findings container modification timestamp, if applicable. For Google Cloud Storage contains last file modification timestamp. For BigQuery table contains last_modified_time property. For Datastore - not populated."
                                }
                              },
                              "description": "Precise location of the finding within a document, record, image, or metadata container."
                            },
                            "description": "List of nested objects pointing to the precise location of the finding within the file or record."
                          }
                        },
                        "description": "Where the content was found."
                      },
                      "findingId": {
                        "type": "string",
                        "description": "The unique finding id."
                      },
                      "quoteInfo": {
                        "id": "GooglePrivacyDlpV2QuoteInfo",
                        "type": "object",
                        "properties": {
                          "dateTime": {
                            "id": "GooglePrivacyDlpV2DateTime",
                            "type": "object",
                            "properties": {
                              "date": {
                                "id": "GoogleTypeDate",
                                "type": "object",
                                "properties": {
                                  "day": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
                                  },
                                  "year": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
                                  },
                                  "month": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
                                  }
                                },
                                "description": "One or more of the following must be set. Must be a valid date or time value."
                              },
                              "time": {
                                "id": "GoogleTypeTimeOfDay",
                                "type": "object",
                                "properties": {
                                  "hours": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time."
                                  },
                                  "nanos": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999."
                                  },
                                  "minutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Minutes of hour of day. Must be from 0 to 59."
                                  },
                                  "seconds": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds."
                                  }
                                },
                                "description": "Time of day"
                              },
                              "timeZone": {
                                "id": "GooglePrivacyDlpV2TimeZone",
                                "type": "object",
                                "properties": {
                                  "offsetMinutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Set only if the offset can be determined. Positive for time ahead of UTC. E.g. For \"UTC-9\", this value is -540."
                                  }
                                },
                                "description": "Time zone"
                              },
                              "dayOfWeek": {
                                "enum": [
                                  "DAY_OF_WEEK_UNSPECIFIED",
                                  "MONDAY",
                                  "TUESDAY",
                                  "WEDNESDAY",
                                  "THURSDAY",
                                  "FRIDAY",
                                  "SATURDAY",
                                  "SUNDAY"
                                ],
                                "type": "string",
                                "description": "Day of week",
                                "enumDescriptions": [
                                  "The day of the week is unspecified.",
                                  "Monday",
                                  "Tuesday",
                                  "Wednesday",
                                  "Thursday",
                                  "Friday",
                                  "Saturday",
                                  "Sunday"
                                ]
                              }
                            },
                            "description": "The date time indicated by the quote."
                          }
                        },
                        "description": "Contains data parsed from quotes. Only populated if include_quote was set to true and a supported infoType was requested. Currently supported infoTypes: DATE, DATE_OF_BIRTH and TIME."
                      },
                      "createTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "Timestamp when finding was detected."
                      },
                      "likelihood": {
                        "enum": [
                          "LIKELIHOOD_UNSPECIFIED",
                          "VERY_UNLIKELY",
                          "UNLIKELY",
                          "POSSIBLE",
                          "LIKELY",
                          "VERY_LIKELY"
                        ],
                        "type": "string",
                        "description": "Confidence of how likely it is that the `info_type` is correct.",
                        "enumDescriptions": [
                          "Default value; same as POSSIBLE.",
                          "Few matching elements.",
                          "",
                          "Some matching elements.",
                          "",
                          "Many matching elements."
                        ]
                      },
                      "triggerName": {
                        "type": "string",
                        "description": "Job trigger name, if applicable, for this finding."
                      },
                      "resourceName": {
                        "type": "string",
                        "description": "The job that stored the finding."
                      },
                      "jobCreateTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "Time the job started that produced this finding."
                      }
                    },
                    "description": "Represents a piece of potentially sensitive content."
                  },
                  "description": "List of findings for an item."
                },
                "findingsTruncated": {
                  "type": "boolean",
                  "description": "If true, then this item might have more findings than were returned, and the findings returned are an arbitrary subset of all findings. The findings list might be truncated because the input items were too large, or because the server reached the maximum amount of resources allowed for a single API call. For best results, divide the input into smaller batches."
                }
              },
              "description": "The findings. Populated when include_findings in the request is true."
            },
            "redactedImage": {
              "type": "string",
              "format": "byte",
              "description": "The redacted image. The type will be the same as the original image."
            }
          },
          "description": "Results of redacting an image."
        }
      ]
  projects.locations.inspectTemplates.create:
    description: |-
      Creates an InspectTemplate for re-using frequently used configuration for inspecting content, images, and storage. See https://cloud.google.com/dlp/docs/creating-templates to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.locations.inspectTemplates/create
    example:
      inputs: [
        {
          "id": "GooglePrivacyDlpV2CreateInspectTemplateRequest",
          "type": "object",
          "properties": {
            "locationId": {
              "type": "string",
              "description": "Deprecated. This field has no effect."
            },
            "templateId": {
              "type": "string",
              "description": "The template id can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one."
            },
            "inspectTemplate": {
              "id": "GooglePrivacyDlpV2InspectTemplate",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. The template name. The template will have one of the following formats: `projects/PROJECT_ID/inspectTemplates/TEMPLATE_ID` OR `organizations/ORGANIZATION_ID/inspectTemplates/TEMPLATE_ID`;"
                },
                "createTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "readOnly": true,
                  "description": "Output only. The creation timestamp of an inspectTemplate."
                },
                "updateTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "readOnly": true,
                  "description": "Output only. The last update timestamp of an inspectTemplate."
                },
                "description": {
                  "type": "string",
                  "description": "Short description (max 256 chars)."
                },
                "displayName": {
                  "type": "string",
                  "description": "Display name (max 256 chars)."
                },
                "inspectConfig": {
                  "id": "GooglePrivacyDlpV2InspectConfig",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "id": "GooglePrivacyDlpV2FindingLimits",
                      "type": "object",
                      "properties": {
                        "maxFindingsPerItem": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Max number of findings that will be returned for each item scanned. When set within `InspectJobConfig`, the maximum returned is 2000 regardless if this is set higher. When set within `InspectContentRequest`, this field is ignored."
                        },
                        "maxFindingsPerRequest": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Max number of findings that will be returned per request/job. When set within `InspectContentRequest`, the maximum returned is 2000 regardless if this is set higher."
                        },
                        "maxFindingsPerInfoType": {
                          "type": "array",
                          "items": {
                            "id": "GooglePrivacyDlpV2InfoTypeLimit",
                            "type": "object",
                            "properties": {
                              "infoType": {
                                "id": "GooglePrivacyDlpV2InfoType",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                  }
                                },
                                "description": "Type of information detected by the API."
                              },
                              "maxFindings": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Max findings limit for the given infoType."
                              }
                            },
                            "description": "Max findings configuration per infoType, per content item or long running DlpJob."
                          },
                          "description": "Configuration of findings limit given for specified infoTypes."
                        }
                      },
                      "description": "Configuration to control the number of findings returned."
                    },
                    "ruleSet": {
                      "type": "array",
                      "items": {
                        "id": "GooglePrivacyDlpV2InspectionRuleSet",
                        "type": "object",
                        "properties": {
                          "rules": {
                            "type": "array",
                            "items": {
                              "id": "GooglePrivacyDlpV2InspectionRule",
                              "type": "object",
                              "properties": {
                                "hotwordRule": {
                                  "id": "GooglePrivacyDlpV2HotwordRule",
                                  "type": "object",
                                  "properties": {
                                    "proximity": {
                                      "id": "GooglePrivacyDlpV2Proximity",
                                      "type": "object",
                                      "properties": {
                                        "windowAfter": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Number of characters after the finding to consider."
                                        },
                                        "windowBefore": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Number of characters before the finding to consider."
                                        }
                                      },
                                      "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                    },
                                    "hotwordRegex": {
                                      "id": "GooglePrivacyDlpV2Regex",
                                      "type": "object",
                                      "properties": {
                                        "pattern": {
                                          "type": "string",
                                          "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                        },
                                        "groupIndexes": {
                                          "type": "array",
                                          "items": {
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                        }
                                      },
                                      "description": "Regular expression pattern defining what qualifies as a hotword."
                                    },
                                    "likelihoodAdjustment": {
                                      "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                      "type": "object",
                                      "properties": {
                                        "fixedLikelihood": {
                                          "enum": [
                                            "LIKELIHOOD_UNSPECIFIED",
                                            "VERY_UNLIKELY",
                                            "UNLIKELY",
                                            "POSSIBLE",
                                            "LIKELY",
                                            "VERY_LIKELY"
                                          ],
                                          "type": "string",
                                          "description": "Set the likelihood of a finding to a fixed value.",
                                          "enumDescriptions": [
                                            "Default value; same as POSSIBLE.",
                                            "Few matching elements.",
                                            "",
                                            "Some matching elements.",
                                            "",
                                            "Many matching elements."
                                          ]
                                        },
                                        "relativeLikelihood": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                        }
                                      },
                                      "description": "Likelihood adjustment to apply to all matching findings."
                                    }
                                  },
                                  "description": "Hotword-based detection rule."
                                },
                                "exclusionRule": {
                                  "id": "GooglePrivacyDlpV2ExclusionRule",
                                  "type": "object",
                                  "properties": {
                                    "regex": {
                                      "id": "GooglePrivacyDlpV2Regex",
                                      "type": "object",
                                      "properties": {
                                        "pattern": {
                                          "type": "string",
                                          "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                        },
                                        "groupIndexes": {
                                          "type": "array",
                                          "items": {
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                        }
                                      },
                                      "description": "Regular expression which defines the rule."
                                    },
                                    "dictionary": {
                                      "id": "GooglePrivacyDlpV2Dictionary",
                                      "type": "object",
                                      "properties": {
                                        "wordList": {
                                          "id": "GooglePrivacyDlpV2WordList",
                                          "type": "object",
                                          "properties": {
                                            "words": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                            }
                                          },
                                          "description": "List of words or phrases to search for."
                                        },
                                        "cloudStoragePath": {
                                          "id": "GooglePrivacyDlpV2CloudStoragePath",
                                          "type": "object",
                                          "properties": {
                                            "path": {
                                              "type": "string",
                                              "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                            }
                                          },
                                          "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                                        }
                                      },
                                      "description": "Dictionary which defines the rule."
                                    },
                                    "matchingType": {
                                      "enum": [
                                        "MATCHING_TYPE_UNSPECIFIED",
                                        "MATCHING_TYPE_FULL_MATCH",
                                        "MATCHING_TYPE_PARTIAL_MATCH",
                                        "MATCHING_TYPE_INVERSE_MATCH"
                                      ],
                                      "type": "string",
                                      "description": "How the rule is applied, see MatchingType documentation for details.",
                                      "enumDescriptions": [
                                        "Invalid.",
                                        "Full match. - Dictionary: join of Dictionary results matched complete finding quote - Regex: all regex matches fill a finding quote start to end - Exclude info type: completely inside affecting info types findings",
                                        "Partial match. - Dictionary: at least one of the tokens in the finding matches - Regex: substring of the finding matches - Exclude info type: intersects with affecting info types findings",
                                        "Inverse match. - Dictionary: no tokens in the finding match the dictionary - Regex: finding doesn't match the regex - Exclude info type: no intersection with affecting info types findings"
                                      ]
                                    },
                                    "excludeInfoTypes": {
                                      "id": "GooglePrivacyDlpV2ExcludeInfoTypes",
                                      "type": "object",
                                      "properties": {
                                        "infoTypes": {
                                          "type": "array",
                                          "items": {
                                            "id": "GooglePrivacyDlpV2InfoType",
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                              }
                                            },
                                            "description": "Type of information detected by the API."
                                          },
                                          "description": "InfoType list in ExclusionRule rule drops a finding when it overlaps or contained within with a finding of an infoType from this list. For example, for `InspectionRuleSet.info_types` containing \"PHONE_NUMBER\"` and `exclusion_rule` containing `exclude_info_types.info_types` with \"EMAIL_ADDRESS\" the phone number findings are dropped if they overlap with EMAIL_ADDRESS finding. That leads to \"555-222-2222@example.org\" to generate only a single finding, namely email address."
                                        }
                                      },
                                      "description": "Set of infoTypes for which findings would affect this rule."
                                    }
                                  },
                                  "description": "Exclusion rule."
                                }
                              },
                              "description": "A single inspection rule to be applied to infoTypes, specified in `InspectionRuleSet`."
                            },
                            "description": "Set of rules to be applied to infoTypes. The rules are applied in order."
                          },
                          "infoTypes": {
                            "type": "array",
                            "items": {
                              "id": "GooglePrivacyDlpV2InfoType",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                }
                              },
                              "description": "Type of information detected by the API."
                            },
                            "description": "List of infoTypes this rule set is applied to."
                          }
                        },
                        "description": "Rule set for modifying a set of infoTypes to alter behavior under certain circumstances, depending on the specific details of the rules within the set."
                      },
                      "description": "Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type."
                    },
                    "infoTypes": {
                      "type": "array",
                      "items": {
                        "id": "GooglePrivacyDlpV2InfoType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                          }
                        },
                        "description": "Type of information detected by the API."
                      },
                      "description": "Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/dlp/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time."
                    },
                    "includeQuote": {
                      "type": "boolean",
                      "description": "When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote."
                    },
                    "minLikelihood": {
                      "enum": [
                        "LIKELIHOOD_UNSPECIFIED",
                        "VERY_UNLIKELY",
                        "UNLIKELY",
                        "POSSIBLE",
                        "LIKELY",
                        "VERY_LIKELY"
                      ],
                      "type": "string",
                      "description": "Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more.",
                      "enumDescriptions": [
                        "Default value; same as POSSIBLE.",
                        "Few matching elements.",
                        "",
                        "Some matching elements.",
                        "",
                        "Many matching elements."
                      ]
                    },
                    "contentOptions": {
                      "type": "array",
                      "items": {
                        "enum": [
                          "CONTENT_UNSPECIFIED",
                          "CONTENT_TEXT",
                          "CONTENT_IMAGE"
                        ],
                        "type": "string",
                        "enumDescriptions": [
                          "Includes entire content of a file or a data stream.",
                          "Text content within the data, excluding any metadata.",
                          "Images found in the data."
                        ]
                      },
                      "description": "List of options defining data content to scan. If empty, text, images, and other content will be included."
                    },
                    "customInfoTypes": {
                      "type": "array",
                      "items": {
                        "id": "GooglePrivacyDlpV2CustomInfoType",
                        "type": "object",
                        "properties": {
                          "regex": {
                            "id": "GooglePrivacyDlpV2Regex",
                            "type": "object",
                            "properties": {
                              "pattern": {
                                "type": "string",
                                "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                              },
                              "groupIndexes": {
                                "type": "array",
                                "items": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                              }
                            },
                            "description": "Regular expression based CustomInfoType."
                          },
                          "infoType": {
                            "id": "GooglePrivacyDlpV2InfoType",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                              }
                            },
                            "description": "Type of information detected by the API."
                          },
                          "dictionary": {
                            "id": "GooglePrivacyDlpV2Dictionary",
                            "type": "object",
                            "properties": {
                              "wordList": {
                                "id": "GooglePrivacyDlpV2WordList",
                                "type": "object",
                                "properties": {
                                  "words": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                  }
                                },
                                "description": "List of words or phrases to search for."
                              },
                              "cloudStoragePath": {
                                "id": "GooglePrivacyDlpV2CloudStoragePath",
                                "type": "object",
                                "properties": {
                                  "path": {
                                    "type": "string",
                                    "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                  }
                                },
                                "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                              }
                            },
                            "description": "A list of phrases to detect as a CustomInfoType."
                          },
                          "likelihood": {
                            "enum": [
                              "LIKELIHOOD_UNSPECIFIED",
                              "VERY_UNLIKELY",
                              "UNLIKELY",
                              "POSSIBLE",
                              "LIKELY",
                              "VERY_LIKELY"
                            ],
                            "type": "string",
                            "description": "Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not specified.",
                            "enumDescriptions": [
                              "Default value; same as POSSIBLE.",
                              "Few matching elements.",
                              "",
                              "Some matching elements.",
                              "",
                              "Many matching elements."
                            ]
                          },
                          "storedType": {
                            "id": "GooglePrivacyDlpV2StoredType",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Resource name of the requested `StoredInfoType`, for example `organizations/433245324/storedInfoTypes/432452342` or `projects/project-id/storedInfoTypes/432452342`."
                              },
                              "createTime": {
                                "type": "string",
                                "format": "google-datetime",
                                "description": "Timestamp indicating when the version of the `StoredInfoType` used for inspection was created. Output-only field, populated by the system."
                              }
                            },
                            "description": "Load an existing `StoredInfoType` resource for use in `InspectDataSource`. Not currently supported in `InspectContent`."
                          },
                          "exclusionType": {
                            "enum": [
                              "EXCLUSION_TYPE_UNSPECIFIED",
                              "EXCLUSION_TYPE_EXCLUDE"
                            ],
                            "type": "string",
                            "description": "If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching.",
                            "enumDescriptions": [
                              "A finding of this custom info type will not be excluded from results.",
                              "A finding of this custom info type will be excluded from final results, but can still affect rule execution."
                            ]
                          },
                          "surrogateType": {
                            "id": "GooglePrivacyDlpV2SurrogateType",
                            "type": "object",
                            "properties": {},
                            "description": "Message for detecting output from deidentification transformations that support reversing."
                          },
                          "detectionRules": {
                            "type": "array",
                            "items": {
                              "id": "GooglePrivacyDlpV2DetectionRule",
                              "type": "object",
                              "properties": {
                                "hotwordRule": {
                                  "id": "GooglePrivacyDlpV2HotwordRule",
                                  "type": "object",
                                  "properties": {
                                    "proximity": {
                                      "id": "GooglePrivacyDlpV2Proximity",
                                      "type": "object",
                                      "properties": {
                                        "windowAfter": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Number of characters after the finding to consider."
                                        },
                                        "windowBefore": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Number of characters before the finding to consider."
                                        }
                                      },
                                      "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                    },
                                    "hotwordRegex": {
                                      "id": "GooglePrivacyDlpV2Regex",
                                      "type": "object",
                                      "properties": {
                                        "pattern": {
                                          "type": "string",
                                          "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                        },
                                        "groupIndexes": {
                                          "type": "array",
                                          "items": {
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                        }
                                      },
                                      "description": "Regular expression pattern defining what qualifies as a hotword."
                                    },
                                    "likelihoodAdjustment": {
                                      "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                      "type": "object",
                                      "properties": {
                                        "fixedLikelihood": {
                                          "enum": [
                                            "LIKELIHOOD_UNSPECIFIED",
                                            "VERY_UNLIKELY",
                                            "UNLIKELY",
                                            "POSSIBLE",
                                            "LIKELY",
                                            "VERY_LIKELY"
                                          ],
                                          "type": "string",
                                          "description": "Set the likelihood of a finding to a fixed value.",
                                          "enumDescriptions": [
                                            "Default value; same as POSSIBLE.",
                                            "Few matching elements.",
                                            "",
                                            "Some matching elements.",
                                            "",
                                            "Many matching elements."
                                          ]
                                        },
                                        "relativeLikelihood": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                        }
                                      },
                                      "description": "Likelihood adjustment to apply to all matching findings."
                                    }
                                  },
                                  "description": "Hotword-based detection rule."
                                }
                              },
                              "description": "Deprecated; use `InspectionRuleSet` instead. Rule for modifying a `CustomInfoType` to alter behavior under certain circumstances, depending on the specific details of the rule. Not supported for the `surrogate_type` custom infoType."
                            },
                            "description": "Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in order that they are specified. Not supported for the `surrogate_type` CustomInfoType."
                          }
                        },
                        "description": "Custom information type provided by the user. Used to find domain-specific sensitive information configurable to the data in question."
                      },
                      "description": "CustomInfoTypes provided by the user. See https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more."
                    },
                    "excludeInfoTypes": {
                      "type": "boolean",
                      "description": "When true, excludes type information of the findings."
                    }
                  },
                  "description": "The core content of the template. Configuration of the scanning process."
                }
              },
              "description": "Required. The InspectTemplate to create."
            }
          },
          "description": "Request message for CreateInspectTemplate."
        }
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2InspectTemplate",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The template name. The template will have one of the following formats: `projects/PROJECT_ID/inspectTemplates/TEMPLATE_ID` OR `organizations/ORGANIZATION_ID/inspectTemplates/TEMPLATE_ID`;"
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The creation timestamp of an inspectTemplate."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The last update timestamp of an inspectTemplate."
            },
            "description": {
              "type": "string",
              "description": "Short description (max 256 chars)."
            },
            "displayName": {
              "type": "string",
              "description": "Display name (max 256 chars)."
            },
            "inspectConfig": {
              "id": "GooglePrivacyDlpV2InspectConfig",
              "type": "object",
              "properties": {
                "limits": {
                  "id": "GooglePrivacyDlpV2FindingLimits",
                  "type": "object",
                  "properties": {
                    "maxFindingsPerItem": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Max number of findings that will be returned for each item scanned. When set within `InspectJobConfig`, the maximum returned is 2000 regardless if this is set higher. When set within `InspectContentRequest`, this field is ignored."
                    },
                    "maxFindingsPerRequest": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Max number of findings that will be returned per request/job. When set within `InspectContentRequest`, the maximum returned is 2000 regardless if this is set higher."
                    },
                    "maxFindingsPerInfoType": {
                      "type": "array",
                      "items": {
                        "id": "GooglePrivacyDlpV2InfoTypeLimit",
                        "type": "object",
                        "properties": {
                          "infoType": {
                            "id": "GooglePrivacyDlpV2InfoType",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                              }
                            },
                            "description": "Type of information detected by the API."
                          },
                          "maxFindings": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Max findings limit for the given infoType."
                          }
                        },
                        "description": "Max findings configuration per infoType, per content item or long running DlpJob."
                      },
                      "description": "Configuration of findings limit given for specified infoTypes."
                    }
                  },
                  "description": "Configuration to control the number of findings returned."
                },
                "ruleSet": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2InspectionRuleSet",
                    "type": "object",
                    "properties": {
                      "rules": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2InspectionRule",
                          "type": "object",
                          "properties": {
                            "hotwordRule": {
                              "id": "GooglePrivacyDlpV2HotwordRule",
                              "type": "object",
                              "properties": {
                                "proximity": {
                                  "id": "GooglePrivacyDlpV2Proximity",
                                  "type": "object",
                                  "properties": {
                                    "windowAfter": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters after the finding to consider."
                                    },
                                    "windowBefore": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters before the finding to consider."
                                    }
                                  },
                                  "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                },
                                "hotwordRegex": {
                                  "id": "GooglePrivacyDlpV2Regex",
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string",
                                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                    },
                                    "groupIndexes": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                    }
                                  },
                                  "description": "Regular expression pattern defining what qualifies as a hotword."
                                },
                                "likelihoodAdjustment": {
                                  "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                  "type": "object",
                                  "properties": {
                                    "fixedLikelihood": {
                                      "enum": [
                                        "LIKELIHOOD_UNSPECIFIED",
                                        "VERY_UNLIKELY",
                                        "UNLIKELY",
                                        "POSSIBLE",
                                        "LIKELY",
                                        "VERY_LIKELY"
                                      ],
                                      "type": "string",
                                      "description": "Set the likelihood of a finding to a fixed value.",
                                      "enumDescriptions": [
                                        "Default value; same as POSSIBLE.",
                                        "Few matching elements.",
                                        "",
                                        "Some matching elements.",
                                        "",
                                        "Many matching elements."
                                      ]
                                    },
                                    "relativeLikelihood": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                    }
                                  },
                                  "description": "Likelihood adjustment to apply to all matching findings."
                                }
                              },
                              "description": "Hotword-based detection rule."
                            },
                            "exclusionRule": {
                              "id": "GooglePrivacyDlpV2ExclusionRule",
                              "type": "object",
                              "properties": {
                                "regex": {
                                  "id": "GooglePrivacyDlpV2Regex",
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string",
                                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                    },
                                    "groupIndexes": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                    }
                                  },
                                  "description": "Regular expression which defines the rule."
                                },
                                "dictionary": {
                                  "id": "GooglePrivacyDlpV2Dictionary",
                                  "type": "object",
                                  "properties": {
                                    "wordList": {
                                      "id": "GooglePrivacyDlpV2WordList",
                                      "type": "object",
                                      "properties": {
                                        "words": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                        }
                                      },
                                      "description": "List of words or phrases to search for."
                                    },
                                    "cloudStoragePath": {
                                      "id": "GooglePrivacyDlpV2CloudStoragePath",
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string",
                                          "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                        }
                                      },
                                      "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                                    }
                                  },
                                  "description": "Dictionary which defines the rule."
                                },
                                "matchingType": {
                                  "enum": [
                                    "MATCHING_TYPE_UNSPECIFIED",
                                    "MATCHING_TYPE_FULL_MATCH",
                                    "MATCHING_TYPE_PARTIAL_MATCH",
                                    "MATCHING_TYPE_INVERSE_MATCH"
                                  ],
                                  "type": "string",
                                  "description": "How the rule is applied, see MatchingType documentation for details.",
                                  "enumDescriptions": [
                                    "Invalid.",
                                    "Full match. - Dictionary: join of Dictionary results matched complete finding quote - Regex: all regex matches fill a finding quote start to end - Exclude info type: completely inside affecting info types findings",
                                    "Partial match. - Dictionary: at least one of the tokens in the finding matches - Regex: substring of the finding matches - Exclude info type: intersects with affecting info types findings",
                                    "Inverse match. - Dictionary: no tokens in the finding match the dictionary - Regex: finding doesn't match the regex - Exclude info type: no intersection with affecting info types findings"
                                  ]
                                },
                                "excludeInfoTypes": {
                                  "id": "GooglePrivacyDlpV2ExcludeInfoTypes",
                                  "type": "object",
                                  "properties": {
                                    "infoTypes": {
                                      "type": "array",
                                      "items": {
                                        "id": "GooglePrivacyDlpV2InfoType",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                          }
                                        },
                                        "description": "Type of information detected by the API."
                                      },
                                      "description": "InfoType list in ExclusionRule rule drops a finding when it overlaps or contained within with a finding of an infoType from this list. For example, for `InspectionRuleSet.info_types` containing \"PHONE_NUMBER\"` and `exclusion_rule` containing `exclude_info_types.info_types` with \"EMAIL_ADDRESS\" the phone number findings are dropped if they overlap with EMAIL_ADDRESS finding. That leads to \"555-222-2222@example.org\" to generate only a single finding, namely email address."
                                    }
                                  },
                                  "description": "Set of infoTypes for which findings would affect this rule."
                                }
                              },
                              "description": "Exclusion rule."
                            }
                          },
                          "description": "A single inspection rule to be applied to infoTypes, specified in `InspectionRuleSet`."
                        },
                        "description": "Set of rules to be applied to infoTypes. The rules are applied in order."
                      },
                      "infoTypes": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2InfoType",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                            }
                          },
                          "description": "Type of information detected by the API."
                        },
                        "description": "List of infoTypes this rule set is applied to."
                      }
                    },
                    "description": "Rule set for modifying a set of infoTypes to alter behavior under certain circumstances, depending on the specific details of the rules within the set."
                  },
                  "description": "Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type."
                },
                "infoTypes": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2InfoType",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                      }
                    },
                    "description": "Type of information detected by the API."
                  },
                  "description": "Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/dlp/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time."
                },
                "includeQuote": {
                  "type": "boolean",
                  "description": "When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote."
                },
                "minLikelihood": {
                  "enum": [
                    "LIKELIHOOD_UNSPECIFIED",
                    "VERY_UNLIKELY",
                    "UNLIKELY",
                    "POSSIBLE",
                    "LIKELY",
                    "VERY_LIKELY"
                  ],
                  "type": "string",
                  "description": "Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more.",
                  "enumDescriptions": [
                    "Default value; same as POSSIBLE.",
                    "Few matching elements.",
                    "",
                    "Some matching elements.",
                    "",
                    "Many matching elements."
                  ]
                },
                "contentOptions": {
                  "type": "array",
                  "items": {
                    "enum": [
                      "CONTENT_UNSPECIFIED",
                      "CONTENT_TEXT",
                      "CONTENT_IMAGE"
                    ],
                    "type": "string",
                    "enumDescriptions": [
                      "Includes entire content of a file or a data stream.",
                      "Text content within the data, excluding any metadata.",
                      "Images found in the data."
                    ]
                  },
                  "description": "List of options defining data content to scan. If empty, text, images, and other content will be included."
                },
                "customInfoTypes": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2CustomInfoType",
                    "type": "object",
                    "properties": {
                      "regex": {
                        "id": "GooglePrivacyDlpV2Regex",
                        "type": "object",
                        "properties": {
                          "pattern": {
                            "type": "string",
                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                          },
                          "groupIndexes": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                          }
                        },
                        "description": "Regular expression based CustomInfoType."
                      },
                      "infoType": {
                        "id": "GooglePrivacyDlpV2InfoType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                          }
                        },
                        "description": "Type of information detected by the API."
                      },
                      "dictionary": {
                        "id": "GooglePrivacyDlpV2Dictionary",
                        "type": "object",
                        "properties": {
                          "wordList": {
                            "id": "GooglePrivacyDlpV2WordList",
                            "type": "object",
                            "properties": {
                              "words": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                              }
                            },
                            "description": "List of words or phrases to search for."
                          },
                          "cloudStoragePath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                          }
                        },
                        "description": "A list of phrases to detect as a CustomInfoType."
                      },
                      "likelihood": {
                        "enum": [
                          "LIKELIHOOD_UNSPECIFIED",
                          "VERY_UNLIKELY",
                          "UNLIKELY",
                          "POSSIBLE",
                          "LIKELY",
                          "VERY_LIKELY"
                        ],
                        "type": "string",
                        "description": "Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not specified.",
                        "enumDescriptions": [
                          "Default value; same as POSSIBLE.",
                          "Few matching elements.",
                          "",
                          "Some matching elements.",
                          "",
                          "Many matching elements."
                        ]
                      },
                      "storedType": {
                        "id": "GooglePrivacyDlpV2StoredType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Resource name of the requested `StoredInfoType`, for example `organizations/433245324/storedInfoTypes/432452342` or `projects/project-id/storedInfoTypes/432452342`."
                          },
                          "createTime": {
                            "type": "string",
                            "format": "google-datetime",
                            "description": "Timestamp indicating when the version of the `StoredInfoType` used for inspection was created. Output-only field, populated by the system."
                          }
                        },
                        "description": "Load an existing `StoredInfoType` resource for use in `InspectDataSource`. Not currently supported in `InspectContent`."
                      },
                      "exclusionType": {
                        "enum": [
                          "EXCLUSION_TYPE_UNSPECIFIED",
                          "EXCLUSION_TYPE_EXCLUDE"
                        ],
                        "type": "string",
                        "description": "If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching.",
                        "enumDescriptions": [
                          "A finding of this custom info type will not be excluded from results.",
                          "A finding of this custom info type will be excluded from final results, but can still affect rule execution."
                        ]
                      },
                      "surrogateType": {
                        "id": "GooglePrivacyDlpV2SurrogateType",
                        "type": "object",
                        "properties": {},
                        "description": "Message for detecting output from deidentification transformations that support reversing."
                      },
                      "detectionRules": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2DetectionRule",
                          "type": "object",
                          "properties": {
                            "hotwordRule": {
                              "id": "GooglePrivacyDlpV2HotwordRule",
                              "type": "object",
                              "properties": {
                                "proximity": {
                                  "id": "GooglePrivacyDlpV2Proximity",
                                  "type": "object",
                                  "properties": {
                                    "windowAfter": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters after the finding to consider."
                                    },
                                    "windowBefore": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters before the finding to consider."
                                    }
                                  },
                                  "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                },
                                "hotwordRegex": {
                                  "id": "GooglePrivacyDlpV2Regex",
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string",
                                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                    },
                                    "groupIndexes": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                    }
                                  },
                                  "description": "Regular expression pattern defining what qualifies as a hotword."
                                },
                                "likelihoodAdjustment": {
                                  "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                  "type": "object",
                                  "properties": {
                                    "fixedLikelihood": {
                                      "enum": [
                                        "LIKELIHOOD_UNSPECIFIED",
                                        "VERY_UNLIKELY",
                                        "UNLIKELY",
                                        "POSSIBLE",
                                        "LIKELY",
                                        "VERY_LIKELY"
                                      ],
                                      "type": "string",
                                      "description": "Set the likelihood of a finding to a fixed value.",
                                      "enumDescriptions": [
                                        "Default value; same as POSSIBLE.",
                                        "Few matching elements.",
                                        "",
                                        "Some matching elements.",
                                        "",
                                        "Many matching elements."
                                      ]
                                    },
                                    "relativeLikelihood": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                    }
                                  },
                                  "description": "Likelihood adjustment to apply to all matching findings."
                                }
                              },
                              "description": "Hotword-based detection rule."
                            }
                          },
                          "description": "Deprecated; use `InspectionRuleSet` instead. Rule for modifying a `CustomInfoType` to alter behavior under certain circumstances, depending on the specific details of the rule. Not supported for the `surrogate_type` custom infoType."
                        },
                        "description": "Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in order that they are specified. Not supported for the `surrogate_type` CustomInfoType."
                      }
                    },
                    "description": "Custom information type provided by the user. Used to find domain-specific sensitive information configurable to the data in question."
                  },
                  "description": "CustomInfoTypes provided by the user. See https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more."
                },
                "excludeInfoTypes": {
                  "type": "boolean",
                  "description": "When true, excludes type information of the findings."
                }
              },
              "description": "The core content of the template. Configuration of the scanning process."
            }
          },
          "description": "The inspectTemplate contains a configuration (set of types of sensitive data to be detected) to be used anywhere you otherwise would normally specify InspectConfig. See https://cloud.google.com/dlp/docs/concepts-templates to learn more."
        }
      ]
  projects.locations.inspectTemplates.delete:
    description: |-
      Deletes an InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.locations.inspectTemplates/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  projects.locations.inspectTemplates.get:
    description: |-
      Gets an InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.locations.inspectTemplates/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2InspectTemplate",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The template name. The template will have one of the following formats: `projects/PROJECT_ID/inspectTemplates/TEMPLATE_ID` OR `organizations/ORGANIZATION_ID/inspectTemplates/TEMPLATE_ID`;"
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The creation timestamp of an inspectTemplate."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The last update timestamp of an inspectTemplate."
            },
            "description": {
              "type": "string",
              "description": "Short description (max 256 chars)."
            },
            "displayName": {
              "type": "string",
              "description": "Display name (max 256 chars)."
            },
            "inspectConfig": {
              "id": "GooglePrivacyDlpV2InspectConfig",
              "type": "object",
              "properties": {
                "limits": {
                  "id": "GooglePrivacyDlpV2FindingLimits",
                  "type": "object",
                  "properties": {
                    "maxFindingsPerItem": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Max number of findings that will be returned for each item scanned. When set within `InspectJobConfig`, the maximum returned is 2000 regardless if this is set higher. When set within `InspectContentRequest`, this field is ignored."
                    },
                    "maxFindingsPerRequest": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Max number of findings that will be returned per request/job. When set within `InspectContentRequest`, the maximum returned is 2000 regardless if this is set higher."
                    },
                    "maxFindingsPerInfoType": {
                      "type": "array",
                      "items": {
                        "id": "GooglePrivacyDlpV2InfoTypeLimit",
                        "type": "object",
                        "properties": {
                          "infoType": {
                            "id": "GooglePrivacyDlpV2InfoType",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                              }
                            },
                            "description": "Type of information detected by the API."
                          },
                          "maxFindings": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Max findings limit for the given infoType."
                          }
                        },
                        "description": "Max findings configuration per infoType, per content item or long running DlpJob."
                      },
                      "description": "Configuration of findings limit given for specified infoTypes."
                    }
                  },
                  "description": "Configuration to control the number of findings returned."
                },
                "ruleSet": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2InspectionRuleSet",
                    "type": "object",
                    "properties": {
                      "rules": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2InspectionRule",
                          "type": "object",
                          "properties": {
                            "hotwordRule": {
                              "id": "GooglePrivacyDlpV2HotwordRule",
                              "type": "object",
                              "properties": {
                                "proximity": {
                                  "id": "GooglePrivacyDlpV2Proximity",
                                  "type": "object",
                                  "properties": {
                                    "windowAfter": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters after the finding to consider."
                                    },
                                    "windowBefore": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters before the finding to consider."
                                    }
                                  },
                                  "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                },
                                "hotwordRegex": {
                                  "id": "GooglePrivacyDlpV2Regex",
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string",
                                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                    },
                                    "groupIndexes": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                    }
                                  },
                                  "description": "Regular expression pattern defining what qualifies as a hotword."
                                },
                                "likelihoodAdjustment": {
                                  "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                  "type": "object",
                                  "properties": {
                                    "fixedLikelihood": {
                                      "enum": [
                                        "LIKELIHOOD_UNSPECIFIED",
                                        "VERY_UNLIKELY",
                                        "UNLIKELY",
                                        "POSSIBLE",
                                        "LIKELY",
                                        "VERY_LIKELY"
                                      ],
                                      "type": "string",
                                      "description": "Set the likelihood of a finding to a fixed value.",
                                      "enumDescriptions": [
                                        "Default value; same as POSSIBLE.",
                                        "Few matching elements.",
                                        "",
                                        "Some matching elements.",
                                        "",
                                        "Many matching elements."
                                      ]
                                    },
                                    "relativeLikelihood": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                    }
                                  },
                                  "description": "Likelihood adjustment to apply to all matching findings."
                                }
                              },
                              "description": "Hotword-based detection rule."
                            },
                            "exclusionRule": {
                              "id": "GooglePrivacyDlpV2ExclusionRule",
                              "type": "object",
                              "properties": {
                                "regex": {
                                  "id": "GooglePrivacyDlpV2Regex",
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string",
                                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                    },
                                    "groupIndexes": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                    }
                                  },
                                  "description": "Regular expression which defines the rule."
                                },
                                "dictionary": {
                                  "id": "GooglePrivacyDlpV2Dictionary",
                                  "type": "object",
                                  "properties": {
                                    "wordList": {
                                      "id": "GooglePrivacyDlpV2WordList",
                                      "type": "object",
                                      "properties": {
                                        "words": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                        }
                                      },
                                      "description": "List of words or phrases to search for."
                                    },
                                    "cloudStoragePath": {
                                      "id": "GooglePrivacyDlpV2CloudStoragePath",
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string",
                                          "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                        }
                                      },
                                      "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                                    }
                                  },
                                  "description": "Dictionary which defines the rule."
                                },
                                "matchingType": {
                                  "enum": [
                                    "MATCHING_TYPE_UNSPECIFIED",
                                    "MATCHING_TYPE_FULL_MATCH",
                                    "MATCHING_TYPE_PARTIAL_MATCH",
                                    "MATCHING_TYPE_INVERSE_MATCH"
                                  ],
                                  "type": "string",
                                  "description": "How the rule is applied, see MatchingType documentation for details.",
                                  "enumDescriptions": [
                                    "Invalid.",
                                    "Full match. - Dictionary: join of Dictionary results matched complete finding quote - Regex: all regex matches fill a finding quote start to end - Exclude info type: completely inside affecting info types findings",
                                    "Partial match. - Dictionary: at least one of the tokens in the finding matches - Regex: substring of the finding matches - Exclude info type: intersects with affecting info types findings",
                                    "Inverse match. - Dictionary: no tokens in the finding match the dictionary - Regex: finding doesn't match the regex - Exclude info type: no intersection with affecting info types findings"
                                  ]
                                },
                                "excludeInfoTypes": {
                                  "id": "GooglePrivacyDlpV2ExcludeInfoTypes",
                                  "type": "object",
                                  "properties": {
                                    "infoTypes": {
                                      "type": "array",
                                      "items": {
                                        "id": "GooglePrivacyDlpV2InfoType",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                          }
                                        },
                                        "description": "Type of information detected by the API."
                                      },
                                      "description": "InfoType list in ExclusionRule rule drops a finding when it overlaps or contained within with a finding of an infoType from this list. For example, for `InspectionRuleSet.info_types` containing \"PHONE_NUMBER\"` and `exclusion_rule` containing `exclude_info_types.info_types` with \"EMAIL_ADDRESS\" the phone number findings are dropped if they overlap with EMAIL_ADDRESS finding. That leads to \"555-222-2222@example.org\" to generate only a single finding, namely email address."
                                    }
                                  },
                                  "description": "Set of infoTypes for which findings would affect this rule."
                                }
                              },
                              "description": "Exclusion rule."
                            }
                          },
                          "description": "A single inspection rule to be applied to infoTypes, specified in `InspectionRuleSet`."
                        },
                        "description": "Set of rules to be applied to infoTypes. The rules are applied in order."
                      },
                      "infoTypes": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2InfoType",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                            }
                          },
                          "description": "Type of information detected by the API."
                        },
                        "description": "List of infoTypes this rule set is applied to."
                      }
                    },
                    "description": "Rule set for modifying a set of infoTypes to alter behavior under certain circumstances, depending on the specific details of the rules within the set."
                  },
                  "description": "Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type."
                },
                "infoTypes": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2InfoType",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                      }
                    },
                    "description": "Type of information detected by the API."
                  },
                  "description": "Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/dlp/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time."
                },
                "includeQuote": {
                  "type": "boolean",
                  "description": "When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote."
                },
                "minLikelihood": {
                  "enum": [
                    "LIKELIHOOD_UNSPECIFIED",
                    "VERY_UNLIKELY",
                    "UNLIKELY",
                    "POSSIBLE",
                    "LIKELY",
                    "VERY_LIKELY"
                  ],
                  "type": "string",
                  "description": "Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more.",
                  "enumDescriptions": [
                    "Default value; same as POSSIBLE.",
                    "Few matching elements.",
                    "",
                    "Some matching elements.",
                    "",
                    "Many matching elements."
                  ]
                },
                "contentOptions": {
                  "type": "array",
                  "items": {
                    "enum": [
                      "CONTENT_UNSPECIFIED",
                      "CONTENT_TEXT",
                      "CONTENT_IMAGE"
                    ],
                    "type": "string",
                    "enumDescriptions": [
                      "Includes entire content of a file or a data stream.",
                      "Text content within the data, excluding any metadata.",
                      "Images found in the data."
                    ]
                  },
                  "description": "List of options defining data content to scan. If empty, text, images, and other content will be included."
                },
                "customInfoTypes": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2CustomInfoType",
                    "type": "object",
                    "properties": {
                      "regex": {
                        "id": "GooglePrivacyDlpV2Regex",
                        "type": "object",
                        "properties": {
                          "pattern": {
                            "type": "string",
                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                          },
                          "groupIndexes": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                          }
                        },
                        "description": "Regular expression based CustomInfoType."
                      },
                      "infoType": {
                        "id": "GooglePrivacyDlpV2InfoType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                          }
                        },
                        "description": "Type of information detected by the API."
                      },
                      "dictionary": {
                        "id": "GooglePrivacyDlpV2Dictionary",
                        "type": "object",
                        "properties": {
                          "wordList": {
                            "id": "GooglePrivacyDlpV2WordList",
                            "type": "object",
                            "properties": {
                              "words": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                              }
                            },
                            "description": "List of words or phrases to search for."
                          },
                          "cloudStoragePath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                          }
                        },
                        "description": "A list of phrases to detect as a CustomInfoType."
                      },
                      "likelihood": {
                        "enum": [
                          "LIKELIHOOD_UNSPECIFIED",
                          "VERY_UNLIKELY",
                          "UNLIKELY",
                          "POSSIBLE",
                          "LIKELY",
                          "VERY_LIKELY"
                        ],
                        "type": "string",
                        "description": "Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not specified.",
                        "enumDescriptions": [
                          "Default value; same as POSSIBLE.",
                          "Few matching elements.",
                          "",
                          "Some matching elements.",
                          "",
                          "Many matching elements."
                        ]
                      },
                      "storedType": {
                        "id": "GooglePrivacyDlpV2StoredType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Resource name of the requested `StoredInfoType`, for example `organizations/433245324/storedInfoTypes/432452342` or `projects/project-id/storedInfoTypes/432452342`."
                          },
                          "createTime": {
                            "type": "string",
                            "format": "google-datetime",
                            "description": "Timestamp indicating when the version of the `StoredInfoType` used for inspection was created. Output-only field, populated by the system."
                          }
                        },
                        "description": "Load an existing `StoredInfoType` resource for use in `InspectDataSource`. Not currently supported in `InspectContent`."
                      },
                      "exclusionType": {
                        "enum": [
                          "EXCLUSION_TYPE_UNSPECIFIED",
                          "EXCLUSION_TYPE_EXCLUDE"
                        ],
                        "type": "string",
                        "description": "If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching.",
                        "enumDescriptions": [
                          "A finding of this custom info type will not be excluded from results.",
                          "A finding of this custom info type will be excluded from final results, but can still affect rule execution."
                        ]
                      },
                      "surrogateType": {
                        "id": "GooglePrivacyDlpV2SurrogateType",
                        "type": "object",
                        "properties": {},
                        "description": "Message for detecting output from deidentification transformations that support reversing."
                      },
                      "detectionRules": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2DetectionRule",
                          "type": "object",
                          "properties": {
                            "hotwordRule": {
                              "id": "GooglePrivacyDlpV2HotwordRule",
                              "type": "object",
                              "properties": {
                                "proximity": {
                                  "id": "GooglePrivacyDlpV2Proximity",
                                  "type": "object",
                                  "properties": {
                                    "windowAfter": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters after the finding to consider."
                                    },
                                    "windowBefore": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Number of characters before the finding to consider."
                                    }
                                  },
                                  "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                },
                                "hotwordRegex": {
                                  "id": "GooglePrivacyDlpV2Regex",
                                  "type": "object",
                                  "properties": {
                                    "pattern": {
                                      "type": "string",
                                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                    },
                                    "groupIndexes": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                    }
                                  },
                                  "description": "Regular expression pattern defining what qualifies as a hotword."
                                },
                                "likelihoodAdjustment": {
                                  "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                  "type": "object",
                                  "properties": {
                                    "fixedLikelihood": {
                                      "enum": [
                                        "LIKELIHOOD_UNSPECIFIED",
                                        "VERY_UNLIKELY",
                                        "UNLIKELY",
                                        "POSSIBLE",
                                        "LIKELY",
                                        "VERY_LIKELY"
                                      ],
                                      "type": "string",
                                      "description": "Set the likelihood of a finding to a fixed value.",
                                      "enumDescriptions": [
                                        "Default value; same as POSSIBLE.",
                                        "Few matching elements.",
                                        "",
                                        "Some matching elements.",
                                        "",
                                        "Many matching elements."
                                      ]
                                    },
                                    "relativeLikelihood": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                    }
                                  },
                                  "description": "Likelihood adjustment to apply to all matching findings."
                                }
                              },
                              "description": "Hotword-based detection rule."
                            }
                          },
                          "description": "Deprecated; use `InspectionRuleSet` instead. Rule for modifying a `CustomInfoType` to alter behavior under certain circumstances, depending on the specific details of the rule. Not supported for the `surrogate_type` custom infoType."
                        },
                        "description": "Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in order that they are specified. Not supported for the `surrogate_type` CustomInfoType."
                      }
                    },
                    "description": "Custom information type provided by the user. Used to find domain-specific sensitive information configurable to the data in question."
                  },
                  "description": "CustomInfoTypes provided by the user. See https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more."
                },
                "excludeInfoTypes": {
                  "type": "boolean",
                  "description": "When true, excludes type information of the findings."
                }
              },
              "description": "The core content of the template. Configuration of the scanning process."
            }
          },
          "description": "The inspectTemplate contains a configuration (set of types of sensitive data to be detected) to be used anywhere you otherwise would normally specify InspectConfig. See https://cloud.google.com/dlp/docs/concepts-templates to learn more."
        }
      ]
  projects.locations.inspectTemplates.list:
    description: |-
      Lists InspectTemplates. See https://cloud.google.com/dlp/docs/creating-templates to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.locations.inspectTemplates/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2ListInspectTemplatesResponse",
          "type": "object",
          "properties": {
            "nextPageToken": {
              "type": "string",
              "description": "If the next page is available then the next page token to be used in following ListInspectTemplates request."
            },
            "inspectTemplates": {
              "type": "array",
              "items": {
                "id": "GooglePrivacyDlpV2InspectTemplate",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The template name. The template will have one of the following formats: `projects/PROJECT_ID/inspectTemplates/TEMPLATE_ID` OR `organizations/ORGANIZATION_ID/inspectTemplates/TEMPLATE_ID`;"
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The creation timestamp of an inspectTemplate."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The last update timestamp of an inspectTemplate."
                  },
                  "description": {
                    "type": "string",
                    "description": "Short description (max 256 chars)."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Display name (max 256 chars)."
                  },
                  "inspectConfig": {
                    "id": "GooglePrivacyDlpV2InspectConfig",
                    "type": "object",
                    "properties": {
                      "limits": {
                        "id": "GooglePrivacyDlpV2FindingLimits",
                        "type": "object",
                        "properties": {
                          "maxFindingsPerItem": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Max number of findings that will be returned for each item scanned. When set within `InspectJobConfig`, the maximum returned is 2000 regardless if this is set higher. When set within `InspectContentRequest`, this field is ignored."
                          },
                          "maxFindingsPerRequest": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Max number of findings that will be returned per request/job. When set within `InspectContentRequest`, the maximum returned is 2000 regardless if this is set higher."
                          },
                          "maxFindingsPerInfoType": {
                            "type": "array",
                            "items": {
                              "id": "GooglePrivacyDlpV2InfoTypeLimit",
                              "type": "object",
                              "properties": {
                                "infoType": {
                                  "id": "GooglePrivacyDlpV2InfoType",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                    }
                                  },
                                  "description": "Type of information detected by the API."
                                },
                                "maxFindings": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Max findings limit for the given infoType."
                                }
                              },
                              "description": "Max findings configuration per infoType, per content item or long running DlpJob."
                            },
                            "description": "Configuration of findings limit given for specified infoTypes."
                          }
                        },
                        "description": "Configuration to control the number of findings returned."
                      },
                      "ruleSet": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2InspectionRuleSet",
                          "type": "object",
                          "properties": {
                            "rules": {
                              "type": "array",
                              "items": {
                                "id": "GooglePrivacyDlpV2InspectionRule",
                                "type": "object",
                                "properties": {
                                  "hotwordRule": {
                                    "id": "GooglePrivacyDlpV2HotwordRule",
                                    "type": "object",
                                    "properties": {
                                      "proximity": {
                                        "id": "GooglePrivacyDlpV2Proximity",
                                        "type": "object",
                                        "properties": {
                                          "windowAfter": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Number of characters after the finding to consider."
                                          },
                                          "windowBefore": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Number of characters before the finding to consider."
                                          }
                                        },
                                        "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                      },
                                      "hotwordRegex": {
                                        "id": "GooglePrivacyDlpV2Regex",
                                        "type": "object",
                                        "properties": {
                                          "pattern": {
                                            "type": "string",
                                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                          },
                                          "groupIndexes": {
                                            "type": "array",
                                            "items": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                          }
                                        },
                                        "description": "Regular expression pattern defining what qualifies as a hotword."
                                      },
                                      "likelihoodAdjustment": {
                                        "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                        "type": "object",
                                        "properties": {
                                          "fixedLikelihood": {
                                            "enum": [
                                              "LIKELIHOOD_UNSPECIFIED",
                                              "VERY_UNLIKELY",
                                              "UNLIKELY",
                                              "POSSIBLE",
                                              "LIKELY",
                                              "VERY_LIKELY"
                                            ],
                                            "type": "string",
                                            "description": "Set the likelihood of a finding to a fixed value.",
                                            "enumDescriptions": [
                                              "Default value; same as POSSIBLE.",
                                              "Few matching elements.",
                                              "",
                                              "Some matching elements.",
                                              "",
                                              "Many matching elements."
                                            ]
                                          },
                                          "relativeLikelihood": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                          }
                                        },
                                        "description": "Likelihood adjustment to apply to all matching findings."
                                      }
                                    },
                                    "description": "Hotword-based detection rule."
                                  },
                                  "exclusionRule": {
                                    "id": "GooglePrivacyDlpV2ExclusionRule",
                                    "type": "object",
                                    "properties": {
                                      "regex": {
                                        "id": "GooglePrivacyDlpV2Regex",
                                        "type": "object",
                                        "properties": {
                                          "pattern": {
                                            "type": "string",
                                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                          },
                                          "groupIndexes": {
                                            "type": "array",
                                            "items": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                          }
                                        },
                                        "description": "Regular expression which defines the rule."
                                      },
                                      "dictionary": {
                                        "id": "GooglePrivacyDlpV2Dictionary",
                                        "type": "object",
                                        "properties": {
                                          "wordList": {
                                            "id": "GooglePrivacyDlpV2WordList",
                                            "type": "object",
                                            "properties": {
                                              "words": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                              }
                                            },
                                            "description": "List of words or phrases to search for."
                                          },
                                          "cloudStoragePath": {
                                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                                            "type": "object",
                                            "properties": {
                                              "path": {
                                                "type": "string",
                                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                              }
                                            },
                                            "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                                          }
                                        },
                                        "description": "Dictionary which defines the rule."
                                      },
                                      "matchingType": {
                                        "enum": [
                                          "MATCHING_TYPE_UNSPECIFIED",
                                          "MATCHING_TYPE_FULL_MATCH",
                                          "MATCHING_TYPE_PARTIAL_MATCH",
                                          "MATCHING_TYPE_INVERSE_MATCH"
                                        ],
                                        "type": "string",
                                        "description": "How the rule is applied, see MatchingType documentation for details.",
                                        "enumDescriptions": [
                                          "Invalid.",
                                          "Full match. - Dictionary: join of Dictionary results matched complete finding quote - Regex: all regex matches fill a finding quote start to end - Exclude info type: completely inside affecting info types findings",
                                          "Partial match. - Dictionary: at least one of the tokens in the finding matches - Regex: substring of the finding matches - Exclude info type: intersects with affecting info types findings",
                                          "Inverse match. - Dictionary: no tokens in the finding match the dictionary - Regex: finding doesn't match the regex - Exclude info type: no intersection with affecting info types findings"
                                        ]
                                      },
                                      "excludeInfoTypes": {
                                        "id": "GooglePrivacyDlpV2ExcludeInfoTypes",
                                        "type": "object",
                                        "properties": {
                                          "infoTypes": {
                                            "type": "array",
                                            "items": {
                                              "id": "GooglePrivacyDlpV2InfoType",
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                                }
                                              },
                                              "description": "Type of information detected by the API."
                                            },
                                            "description": "InfoType list in ExclusionRule rule drops a finding when it overlaps or contained within with a finding of an infoType from this list. For example, for `InspectionRuleSet.info_types` containing \"PHONE_NUMBER\"` and `exclusion_rule` containing `exclude_info_types.info_types` with \"EMAIL_ADDRESS\" the phone number findings are dropped if they overlap with EMAIL_ADDRESS finding. That leads to \"555-222-2222@example.org\" to generate only a single finding, namely email address."
                                          }
                                        },
                                        "description": "Set of infoTypes for which findings would affect this rule."
                                      }
                                    },
                                    "description": "Exclusion rule."
                                  }
                                },
                                "description": "A single inspection rule to be applied to infoTypes, specified in `InspectionRuleSet`."
                              },
                              "description": "Set of rules to be applied to infoTypes. The rules are applied in order."
                            },
                            "infoTypes": {
                              "type": "array",
                              "items": {
                                "id": "GooglePrivacyDlpV2InfoType",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                  }
                                },
                                "description": "Type of information detected by the API."
                              },
                              "description": "List of infoTypes this rule set is applied to."
                            }
                          },
                          "description": "Rule set for modifying a set of infoTypes to alter behavior under certain circumstances, depending on the specific details of the rules within the set."
                        },
                        "description": "Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type."
                      },
                      "infoTypes": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2InfoType",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                            }
                          },
                          "description": "Type of information detected by the API."
                        },
                        "description": "Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/dlp/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time."
                      },
                      "includeQuote": {
                        "type": "boolean",
                        "description": "When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote."
                      },
                      "minLikelihood": {
                        "enum": [
                          "LIKELIHOOD_UNSPECIFIED",
                          "VERY_UNLIKELY",
                          "UNLIKELY",
                          "POSSIBLE",
                          "LIKELY",
                          "VERY_LIKELY"
                        ],
                        "type": "string",
                        "description": "Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more.",
                        "enumDescriptions": [
                          "Default value; same as POSSIBLE.",
                          "Few matching elements.",
                          "",
                          "Some matching elements.",
                          "",
                          "Many matching elements."
                        ]
                      },
                      "contentOptions": {
                        "type": "array",
                        "items": {
                          "enum": [
                            "CONTENT_UNSPECIFIED",
                            "CONTENT_TEXT",
                            "CONTENT_IMAGE"
                          ],
                          "type": "string",
                          "enumDescriptions": [
                            "Includes entire content of a file or a data stream.",
                            "Text content within the data, excluding any metadata.",
                            "Images found in the data."
                          ]
                        },
                        "description": "List of options defining data content to scan. If empty, text, images, and other content will be included."
                      },
                      "customInfoTypes": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2CustomInfoType",
                          "type": "object",
                          "properties": {
                            "regex": {
                              "id": "GooglePrivacyDlpV2Regex",
                              "type": "object",
                              "properties": {
                                "pattern": {
                                  "type": "string",
                                  "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                },
                                "groupIndexes": {
                                  "type": "array",
                                  "items": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                }
                              },
                              "description": "Regular expression based CustomInfoType."
                            },
                            "infoType": {
                              "id": "GooglePrivacyDlpV2InfoType",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                }
                              },
                              "description": "Type of information detected by the API."
                            },
                            "dictionary": {
                              "id": "GooglePrivacyDlpV2Dictionary",
                              "type": "object",
                              "properties": {
                                "wordList": {
                                  "id": "GooglePrivacyDlpV2WordList",
                                  "type": "object",
                                  "properties": {
                                    "words": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                    }
                                  },
                                  "description": "List of words or phrases to search for."
                                },
                                "cloudStoragePath": {
                                  "id": "GooglePrivacyDlpV2CloudStoragePath",
                                  "type": "object",
                                  "properties": {
                                    "path": {
                                      "type": "string",
                                      "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                    }
                                  },
                                  "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                                }
                              },
                              "description": "A list of phrases to detect as a CustomInfoType."
                            },
                            "likelihood": {
                              "enum": [
                                "LIKELIHOOD_UNSPECIFIED",
                                "VERY_UNLIKELY",
                                "UNLIKELY",
                                "POSSIBLE",
                                "LIKELY",
                                "VERY_LIKELY"
                              ],
                              "type": "string",
                              "description": "Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not specified.",
                              "enumDescriptions": [
                                "Default value; same as POSSIBLE.",
                                "Few matching elements.",
                                "",
                                "Some matching elements.",
                                "",
                                "Many matching elements."
                              ]
                            },
                            "storedType": {
                              "id": "GooglePrivacyDlpV2StoredType",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Resource name of the requested `StoredInfoType`, for example `organizations/433245324/storedInfoTypes/432452342` or `projects/project-id/storedInfoTypes/432452342`."
                                },
                                "createTime": {
                                  "type": "string",
                                  "format": "google-datetime",
                                  "description": "Timestamp indicating when the version of the `StoredInfoType` used for inspection was created. Output-only field, populated by the system."
                                }
                              },
                              "description": "Load an existing `StoredInfoType` resource for use in `InspectDataSource`. Not currently supported in `InspectContent`."
                            },
                            "exclusionType": {
                              "enum": [
                                "EXCLUSION_TYPE_UNSPECIFIED",
                                "EXCLUSION_TYPE_EXCLUDE"
                              ],
                              "type": "string",
                              "description": "If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching.",
                              "enumDescriptions": [
                                "A finding of this custom info type will not be excluded from results.",
                                "A finding of this custom info type will be excluded from final results, but can still affect rule execution."
                              ]
                            },
                            "surrogateType": {
                              "id": "GooglePrivacyDlpV2SurrogateType",
                              "type": "object",
                              "properties": {},
                              "description": "Message for detecting output from deidentification transformations that support reversing."
                            },
                            "detectionRules": {
                              "type": "array",
                              "items": {
                                "id": "GooglePrivacyDlpV2DetectionRule",
                                "type": "object",
                                "properties": {
                                  "hotwordRule": {
                                    "id": "GooglePrivacyDlpV2HotwordRule",
                                    "type": "object",
                                    "properties": {
                                      "proximity": {
                                        "id": "GooglePrivacyDlpV2Proximity",
                                        "type": "object",
                                        "properties": {
                                          "windowAfter": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Number of characters after the finding to consider."
                                          },
                                          "windowBefore": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Number of characters before the finding to consider."
                                          }
                                        },
                                        "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                      },
                                      "hotwordRegex": {
                                        "id": "GooglePrivacyDlpV2Regex",
                                        "type": "object",
                                        "properties": {
                                          "pattern": {
                                            "type": "string",
                                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                          },
                                          "groupIndexes": {
                                            "type": "array",
                                            "items": {
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                          }
                                        },
                                        "description": "Regular expression pattern defining what qualifies as a hotword."
                                      },
                                      "likelihoodAdjustment": {
                                        "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                        "type": "object",
                                        "properties": {
                                          "fixedLikelihood": {
                                            "enum": [
                                              "LIKELIHOOD_UNSPECIFIED",
                                              "VERY_UNLIKELY",
                                              "UNLIKELY",
                                              "POSSIBLE",
                                              "LIKELY",
                                              "VERY_LIKELY"
                                            ],
                                            "type": "string",
                                            "description": "Set the likelihood of a finding to a fixed value.",
                                            "enumDescriptions": [
                                              "Default value; same as POSSIBLE.",
                                              "Few matching elements.",
                                              "",
                                              "Some matching elements.",
                                              "",
                                              "Many matching elements."
                                            ]
                                          },
                                          "relativeLikelihood": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                          }
                                        },
                                        "description": "Likelihood adjustment to apply to all matching findings."
                                      }
                                    },
                                    "description": "Hotword-based detection rule."
                                  }
                                },
                                "description": "Deprecated; use `InspectionRuleSet` instead. Rule for modifying a `CustomInfoType` to alter behavior under certain circumstances, depending on the specific details of the rule. Not supported for the `surrogate_type` custom infoType."
                              },
                              "description": "Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in order that they are specified. Not supported for the `surrogate_type` CustomInfoType."
                            }
                          },
                          "description": "Custom information type provided by the user. Used to find domain-specific sensitive information configurable to the data in question."
                        },
                        "description": "CustomInfoTypes provided by the user. See https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more."
                      },
                      "excludeInfoTypes": {
                        "type": "boolean",
                        "description": "When true, excludes type information of the findings."
                      }
                    },
                    "description": "The core content of the template. Configuration of the scanning process."
                  }
                },
                "description": "The inspectTemplate contains a configuration (set of types of sensitive data to be detected) to be used anywhere you otherwise would normally specify InspectConfig. See https://cloud.google.com/dlp/docs/concepts-templates to learn more."
              },
              "description": "List of inspectTemplates, up to page_size in ListInspectTemplatesRequest."
            }
          },
          "description": "Response message for ListInspectTemplates."
        }
      ]
  projects.locations.inspectTemplates.patch:
    description: |-
      Updates the InspectTemplate. See https://cloud.google.com/dlp/docs/creating-templates to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.locations.inspectTemplates/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.jobTriggers.activate:
    description: |-
      Activate a job trigger. Causes the immediate execute of a trigger instead of waiting on the trigger event to occur.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.locations.jobTriggers/activate
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.jobTriggers.create:
    description: |-
      Creates a job trigger to run DLP actions such as scanning storage for sensitive information on a set schedule. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.locations.jobTriggers/create
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.jobTriggers.delete:
    description: |-
      Deletes a job trigger. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.locations.jobTriggers/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  projects.locations.jobTriggers.get:
    description: |-
      Gets a job trigger. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.locations.jobTriggers/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2JobTrigger",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Unique resource name for the triggeredJob, assigned by the service when the triggeredJob is created, for example `projects/dlp-test-project/jobTriggers/53234423`."
            },
            "errors": {
              "type": "array",
              "items": {
                "id": "GooglePrivacyDlpV2Error",
                "type": "object",
                "properties": {
                  "details": {
                    "id": "GoogleRpcStatus",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The status code, which should be an enum value of google.rpc.Code."
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object. Contains field @type with type URL."
                          }
                        },
                        "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                      },
                      "message": {
                        "type": "string",
                        "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                      }
                    },
                    "description": "Detailed error codes and messages."
                  },
                  "timestamps": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "google-datetime"
                    },
                    "description": "The times the error occurred."
                  }
                },
                "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
              },
              "readOnly": true,
              "description": "Output only. A stream of errors encountered when the trigger was activated. Repeated errors may result in the JobTrigger automatically being paused. Will return the last 100 errors. Whenever the JobTrigger is modified this list will be cleared."
            },
            "status": {
              "enum": [
                "STATUS_UNSPECIFIED",
                "HEALTHY",
                "PAUSED",
                "CANCELLED"
              ],
              "type": "string",
              "description": "Required. A status for this trigger.",
              "enumDescriptions": [
                "Unused.",
                "Trigger is healthy.",
                "Trigger is temporarily paused.",
                "Trigger is cancelled and can not be resumed."
              ]
            },
            "triggers": {
              "type": "array",
              "items": {
                "id": "GooglePrivacyDlpV2Trigger",
                "type": "object",
                "properties": {
                  "manual": {
                    "id": "GooglePrivacyDlpV2Manual",
                    "type": "object",
                    "properties": {},
                    "description": "For use with hybrid jobs. Jobs must be manually created and finished."
                  },
                  "schedule": {
                    "id": "GooglePrivacyDlpV2Schedule",
                    "type": "object",
                    "properties": {
                      "recurrencePeriodDuration": {
                        "type": "string",
                        "format": "google-duration",
                        "description": "With this option a job is started a regular periodic basis. For example: every day (86400 seconds). A scheduled start time will be skipped if the previous execution has not ended when its scheduled time occurs. This value must be set to a time duration greater than or equal to 1 day and can be no longer than 60 days."
                      }
                    },
                    "description": "Create a job on a repeating basis based on the elapse of time."
                  }
                },
                "description": "What event needs to occur for a new job to be started."
              },
              "description": "A list of triggers which will be OR'ed together. Only one in the list needs to trigger for a job to be started. The list may contain only a single Schedule trigger and must have at least one object."
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The creation timestamp of a triggeredJob."
            },
            "inspectJob": {
              "id": "GooglePrivacyDlpV2InspectJobConfig",
              "type": "object",
              "properties": {
                "actions": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2Action",
                    "type": "object",
                    "properties": {
                      "pubSub": {
                        "id": "GooglePrivacyDlpV2PublishToPubSub",
                        "type": "object",
                        "properties": {
                          "topic": {
                            "type": "string",
                            "description": "Cloud Pub/Sub topic to send notifications to. The topic must have given publishing access rights to the DLP API service account executing the long running DlpJob sending the notifications. Format is projects/{project}/topics/{topic}."
                          }
                        },
                        "description": "Publish a notification to a pubsub topic."
                      },
                      "saveFindings": {
                        "id": "GooglePrivacyDlpV2SaveFindings",
                        "type": "object",
                        "properties": {
                          "outputConfig": {
                            "id": "GooglePrivacyDlpV2OutputStorageConfig",
                            "type": "object",
                            "properties": {
                              "table": {
                                "id": "GooglePrivacyDlpV2BigQueryTable",
                                "type": "object",
                                "properties": {
                                  "tableId": {
                                    "type": "string",
                                    "description": "Name of the table."
                                  },
                                  "datasetId": {
                                    "type": "string",
                                    "description": "Dataset ID of the table."
                                  },
                                  "projectId": {
                                    "type": "string",
                                    "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                  }
                                },
                                "description": "Store findings in an existing table or a new table in an existing dataset. If table_id is not set a new one will be generated for you with the following format: dlp_googleapis_yyyy_mm_dd_[dlp_job_id]. Pacific timezone will be used for generating the date details. For Inspect, each column in an existing output table must have the same name, type, and mode of a field in the `Finding` object. For Risk, an existing output table should be the output of a previous Risk analysis job run on the same source table, with the same privacy metric and quasi-identifiers. Risk jobs that analyze the same table but compute a different privacy metric, or use different sets of quasi-identifiers, cannot store their results in the same table."
                              },
                              "outputSchema": {
                                "enum": [
                                  "OUTPUT_SCHEMA_UNSPECIFIED",
                                  "BASIC_COLUMNS",
                                  "GCS_COLUMNS",
                                  "DATASTORE_COLUMNS",
                                  "BIG_QUERY_COLUMNS",
                                  "ALL_COLUMNS"
                                ],
                                "type": "string",
                                "description": "Schema used for writing the findings for Inspect jobs. This field is only used for Inspect and must be unspecified for Risk jobs. Columns are derived from the `Finding` object. If appending to an existing table, any columns from the predefined schema that are missing will be added. No columns in the existing table will be deleted. If unspecified, then all available columns will be used for a new table or an (existing) table with no schema, and no changes will be made to an existing table that has a schema. Only for use with external storage.",
                                "enumDescriptions": [
                                  "Unused.",
                                  "Basic schema including only `info_type`, `quote`, `certainty`, and `timestamp`.",
                                  "Schema tailored to findings from scanning Google Cloud Storage.",
                                  "Schema tailored to findings from scanning Google Datastore.",
                                  "Schema tailored to findings from scanning Google BigQuery.",
                                  "Schema containing all columns."
                                ]
                              }
                            },
                            "description": "Location to store findings outside of DLP."
                          }
                        },
                        "description": "Save resulting findings in a provided location."
                      },
                      "publishSummaryToCscc": {
                        "id": "GooglePrivacyDlpV2PublishSummaryToCscc",
                        "type": "object",
                        "properties": {},
                        "description": "Publish summary to Cloud Security Command Center (Alpha)."
                      },
                      "publishToStackdriver": {
                        "id": "GooglePrivacyDlpV2PublishToStackdriver",
                        "type": "object",
                        "properties": {},
                        "description": "Enable Stackdriver metric dlp.googleapis.com/finding_count."
                      },
                      "jobNotificationEmails": {
                        "id": "GooglePrivacyDlpV2JobNotificationEmails",
                        "type": "object",
                        "properties": {},
                        "description": "Enable email notification for project owners and editors on job's completion/failure."
                      },
                      "publishFindingsToCloudDataCatalog": {
                        "id": "GooglePrivacyDlpV2PublishFindingsToCloudDataCatalog",
                        "type": "object",
                        "properties": {},
                        "description": "Publish findings to Cloud Datahub."
                      }
                    },
                    "description": "A task to execute on the completion of a job. See https://cloud.google.com/dlp/docs/concepts-actions to learn more."
                  },
                  "description": "Actions to execute at the completion of the job."
                },
                "inspectConfig": {
                  "id": "GooglePrivacyDlpV2InspectConfig",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "id": "GooglePrivacyDlpV2FindingLimits",
                      "type": "object",
                      "properties": {
                        "maxFindingsPerItem": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Max number of findings that will be returned for each item scanned. When set within `InspectJobConfig`, the maximum returned is 2000 regardless if this is set higher. When set within `InspectContentRequest`, this field is ignored."
                        },
                        "maxFindingsPerRequest": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Max number of findings that will be returned per request/job. When set within `InspectContentRequest`, the maximum returned is 2000 regardless if this is set higher."
                        },
                        "maxFindingsPerInfoType": {
                          "type": "array",
                          "items": {
                            "id": "GooglePrivacyDlpV2InfoTypeLimit",
                            "type": "object",
                            "properties": {
                              "infoType": {
                                "id": "GooglePrivacyDlpV2InfoType",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                  }
                                },
                                "description": "Type of information detected by the API."
                              },
                              "maxFindings": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Max findings limit for the given infoType."
                              }
                            },
                            "description": "Max findings configuration per infoType, per content item or long running DlpJob."
                          },
                          "description": "Configuration of findings limit given for specified infoTypes."
                        }
                      },
                      "description": "Configuration to control the number of findings returned."
                    },
                    "ruleSet": {
                      "type": "array",
                      "items": {
                        "id": "GooglePrivacyDlpV2InspectionRuleSet",
                        "type": "object",
                        "properties": {
                          "rules": {
                            "type": "array",
                            "items": {
                              "id": "GooglePrivacyDlpV2InspectionRule",
                              "type": "object",
                              "properties": {
                                "hotwordRule": {
                                  "id": "GooglePrivacyDlpV2HotwordRule",
                                  "type": "object",
                                  "properties": {
                                    "proximity": {
                                      "id": "GooglePrivacyDlpV2Proximity",
                                      "type": "object",
                                      "properties": {
                                        "windowAfter": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Number of characters after the finding to consider."
                                        },
                                        "windowBefore": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Number of characters before the finding to consider."
                                        }
                                      },
                                      "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                    },
                                    "hotwordRegex": {
                                      "id": "GooglePrivacyDlpV2Regex",
                                      "type": "object",
                                      "properties": {
                                        "pattern": {
                                          "type": "string",
                                          "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                        },
                                        "groupIndexes": {
                                          "type": "array",
                                          "items": {
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                        }
                                      },
                                      "description": "Regular expression pattern defining what qualifies as a hotword."
                                    },
                                    "likelihoodAdjustment": {
                                      "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                      "type": "object",
                                      "properties": {
                                        "fixedLikelihood": {
                                          "enum": [
                                            "LIKELIHOOD_UNSPECIFIED",
                                            "VERY_UNLIKELY",
                                            "UNLIKELY",
                                            "POSSIBLE",
                                            "LIKELY",
                                            "VERY_LIKELY"
                                          ],
                                          "type": "string",
                                          "description": "Set the likelihood of a finding to a fixed value.",
                                          "enumDescriptions": [
                                            "Default value; same as POSSIBLE.",
                                            "Few matching elements.",
                                            "",
                                            "Some matching elements.",
                                            "",
                                            "Many matching elements."
                                          ]
                                        },
                                        "relativeLikelihood": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                        }
                                      },
                                      "description": "Likelihood adjustment to apply to all matching findings."
                                    }
                                  },
                                  "description": "Hotword-based detection rule."
                                },
                                "exclusionRule": {
                                  "id": "GooglePrivacyDlpV2ExclusionRule",
                                  "type": "object",
                                  "properties": {
                                    "regex": {
                                      "id": "GooglePrivacyDlpV2Regex",
                                      "type": "object",
                                      "properties": {
                                        "pattern": {
                                          "type": "string",
                                          "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                        },
                                        "groupIndexes": {
                                          "type": "array",
                                          "items": {
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                        }
                                      },
                                      "description": "Regular expression which defines the rule."
                                    },
                                    "dictionary": {
                                      "id": "GooglePrivacyDlpV2Dictionary",
                                      "type": "object",
                                      "properties": {
                                        "wordList": {
                                          "id": "GooglePrivacyDlpV2WordList",
                                          "type": "object",
                                          "properties": {
                                            "words": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                            }
                                          },
                                          "description": "List of words or phrases to search for."
                                        },
                                        "cloudStoragePath": {
                                          "id": "GooglePrivacyDlpV2CloudStoragePath",
                                          "type": "object",
                                          "properties": {
                                            "path": {
                                              "type": "string",
                                              "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                            }
                                          },
                                          "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                                        }
                                      },
                                      "description": "Dictionary which defines the rule."
                                    },
                                    "matchingType": {
                                      "enum": [
                                        "MATCHING_TYPE_UNSPECIFIED",
                                        "MATCHING_TYPE_FULL_MATCH",
                                        "MATCHING_TYPE_PARTIAL_MATCH",
                                        "MATCHING_TYPE_INVERSE_MATCH"
                                      ],
                                      "type": "string",
                                      "description": "How the rule is applied, see MatchingType documentation for details.",
                                      "enumDescriptions": [
                                        "Invalid.",
                                        "Full match. - Dictionary: join of Dictionary results matched complete finding quote - Regex: all regex matches fill a finding quote start to end - Exclude info type: completely inside affecting info types findings",
                                        "Partial match. - Dictionary: at least one of the tokens in the finding matches - Regex: substring of the finding matches - Exclude info type: intersects with affecting info types findings",
                                        "Inverse match. - Dictionary: no tokens in the finding match the dictionary - Regex: finding doesn't match the regex - Exclude info type: no intersection with affecting info types findings"
                                      ]
                                    },
                                    "excludeInfoTypes": {
                                      "id": "GooglePrivacyDlpV2ExcludeInfoTypes",
                                      "type": "object",
                                      "properties": {
                                        "infoTypes": {
                                          "type": "array",
                                          "items": {
                                            "id": "GooglePrivacyDlpV2InfoType",
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                              }
                                            },
                                            "description": "Type of information detected by the API."
                                          },
                                          "description": "InfoType list in ExclusionRule rule drops a finding when it overlaps or contained within with a finding of an infoType from this list. For example, for `InspectionRuleSet.info_types` containing \"PHONE_NUMBER\"` and `exclusion_rule` containing `exclude_info_types.info_types` with \"EMAIL_ADDRESS\" the phone number findings are dropped if they overlap with EMAIL_ADDRESS finding. That leads to \"555-222-2222@example.org\" to generate only a single finding, namely email address."
                                        }
                                      },
                                      "description": "Set of infoTypes for which findings would affect this rule."
                                    }
                                  },
                                  "description": "Exclusion rule."
                                }
                              },
                              "description": "A single inspection rule to be applied to infoTypes, specified in `InspectionRuleSet`."
                            },
                            "description": "Set of rules to be applied to infoTypes. The rules are applied in order."
                          },
                          "infoTypes": {
                            "type": "array",
                            "items": {
                              "id": "GooglePrivacyDlpV2InfoType",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                                }
                              },
                              "description": "Type of information detected by the API."
                            },
                            "description": "List of infoTypes this rule set is applied to."
                          }
                        },
                        "description": "Rule set for modifying a set of infoTypes to alter behavior under certain circumstances, depending on the specific details of the rules within the set."
                      },
                      "description": "Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type."
                    },
                    "infoTypes": {
                      "type": "array",
                      "items": {
                        "id": "GooglePrivacyDlpV2InfoType",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                          }
                        },
                        "description": "Type of information detected by the API."
                      },
                      "description": "Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/dlp/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time."
                    },
                    "includeQuote": {
                      "type": "boolean",
                      "description": "When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote."
                    },
                    "minLikelihood": {
                      "enum": [
                        "LIKELIHOOD_UNSPECIFIED",
                        "VERY_UNLIKELY",
                        "UNLIKELY",
                        "POSSIBLE",
                        "LIKELY",
                        "VERY_LIKELY"
                      ],
                      "type": "string",
                      "description": "Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more.",
                      "enumDescriptions": [
                        "Default value; same as POSSIBLE.",
                        "Few matching elements.",
                        "",
                        "Some matching elements.",
                        "",
                        "Many matching elements."
                      ]
                    },
                    "contentOptions": {
                      "type": "array",
                      "items": {
                        "enum": [
                          "CONTENT_UNSPECIFIED",
                          "CONTENT_TEXT",
                          "CONTENT_IMAGE"
                        ],
                        "type": "string",
                        "enumDescriptions": [
                          "Includes entire content of a file or a data stream.",
                          "Text content within the data, excluding any metadata.",
                          "Images found in the data."
                        ]
                      },
                      "description": "List of options defining data content to scan. If empty, text, images, and other content will be included."
                    },
                    "customInfoTypes": {
                      "type": "array",
                      "items": {
                        "id": "GooglePrivacyDlpV2CustomInfoType",
                        "type": "object",
                        "properties": {
                          "regex": {
                            "id": "GooglePrivacyDlpV2Regex",
                            "type": "object",
                            "properties": {
                              "pattern": {
                                "type": "string",
                                "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                              },
                              "groupIndexes": {
                                "type": "array",
                                "items": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                              }
                            },
                            "description": "Regular expression based CustomInfoType."
                          },
                          "infoType": {
                            "id": "GooglePrivacyDlpV2InfoType",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type. When sending Cloud DLP results to Data Catalog, infoType names should conform to the pattern `[A-Za-z0-9$-_]{1,64}`."
                              }
                            },
                            "description": "Type of information detected by the API."
                          },
                          "dictionary": {
                            "id": "GooglePrivacyDlpV2Dictionary",
                            "type": "object",
                            "properties": {
                              "wordList": {
                                "id": "GooglePrivacyDlpV2WordList",
                                "type": "object",
                                "properties": {
                                  "words": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                  }
                                },
                                "description": "List of words or phrases to search for."
                              },
                              "cloudStoragePath": {
                                "id": "GooglePrivacyDlpV2CloudStoragePath",
                                "type": "object",
                                "properties": {
                                  "path": {
                                    "type": "string",
                                    "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                  }
                                },
                                "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                              }
                            },
                            "description": "A list of phrases to detect as a CustomInfoType."
                          },
                          "likelihood": {
                            "enum": [
                              "LIKELIHOOD_UNSPECIFIED",
                              "VERY_UNLIKELY",
                              "UNLIKELY",
                              "POSSIBLE",
                              "LIKELY",
                              "VERY_LIKELY"
                            ],
                            "type": "string",
                            "description": "Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not specified.",
                            "enumDescriptions": [
                              "Default value; same as POSSIBLE.",
                              "Few matching elements.",
                              "",
                              "Some matching elements.",
                              "",
                              "Many matching elements."
                            ]
                          },
                          "storedType": {
                            "id": "GooglePrivacyDlpV2StoredType",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Resource name of the requested `StoredInfoType`, for example `organizations/433245324/storedInfoTypes/432452342` or `projects/project-id/storedInfoTypes/432452342`."
                              },
                              "createTime": {
                                "type": "string",
                                "format": "google-datetime",
                                "description": "Timestamp indicating when the version of the `StoredInfoType` used for inspection was created. Output-only field, populated by the system."
                              }
                            },
                            "description": "Load an existing `StoredInfoType` resource for use in `InspectDataSource`. Not currently supported in `InspectContent`."
                          },
                          "exclusionType": {
                            "enum": [
                              "EXCLUSION_TYPE_UNSPECIFIED",
                              "EXCLUSION_TYPE_EXCLUDE"
                            ],
                            "type": "string",
                            "description": "If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching.",
                            "enumDescriptions": [
                              "A finding of this custom info type will not be excluded from results.",
                              "A finding of this custom info type will be excluded from final results, but can still affect rule execution."
                            ]
                          },
                          "surrogateType": {
                            "id": "GooglePrivacyDlpV2SurrogateType",
                            "type": "object",
                            "properties": {},
                            "description": "Message for detecting output from deidentification transformations that support reversing."
                          },
                          "detectionRules": {
                            "type": "array",
                            "items": {
                              "id": "GooglePrivacyDlpV2DetectionRule",
                              "type": "object",
                              "properties": {
                                "hotwordRule": {
                                  "id": "GooglePrivacyDlpV2HotwordRule",
                                  "type": "object",
                                  "properties": {
                                    "proximity": {
                                      "id": "GooglePrivacyDlpV2Proximity",
                                      "type": "object",
                                      "properties": {
                                        "windowAfter": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Number of characters after the finding to consider."
                                        },
                                        "windowBefore": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Number of characters before the finding to consider."
                                        }
                                      },
                                      "description": "Proximity of the finding within which the entire hotword must reside. The total length of the window cannot exceed 1000 characters. Note that the finding itself will be included in the window, so that hotwords may be used to match substrings of the finding itself. For example, the certainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be adjusted upwards if the area code is known to be the local area code of a company office using the hotword regex \"\\(xxx\\)\", where \"xxx\" is the area code in question."
                                    },
                                    "hotwordRegex": {
                                      "id": "GooglePrivacyDlpV2Regex",
                                      "type": "object",
                                      "properties": {
                                        "pattern": {
                                          "type": "string",
                                          "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                        },
                                        "groupIndexes": {
                                          "type": "array",
                                          "items": {
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                        }
                                      },
                                      "description": "Regular expression pattern defining what qualifies as a hotword."
                                    },
                                    "likelihoodAdjustment": {
                                      "id": "GooglePrivacyDlpV2LikelihoodAdjustment",
                                      "type": "object",
                                      "properties": {
                                        "fixedLikelihood": {
                                          "enum": [
                                            "LIKELIHOOD_UNSPECIFIED",
                                            "VERY_UNLIKELY",
                                            "UNLIKELY",
                                            "POSSIBLE",
                                            "LIKELY",
                                            "VERY_LIKELY"
                                          ],
                                          "type": "string",
                                          "description": "Set the likelihood of a finding to a fixed value.",
                                          "enumDescriptions": [
                                            "Default value; same as POSSIBLE.",
                                            "Few matching elements.",
                                            "",
                                            "Some matching elements.",
                                            "",
                                            "Many matching elements."
                                          ]
                                        },
                                        "relativeLikelihood": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`."
                                        }
                                      },
                                      "description": "Likelihood adjustment to apply to all matching findings."
                                    }
                                  },
                                  "description": "Hotword-based detection rule."
                                }
                              },
                              "description": "Deprecated; use `InspectionRuleSet` instead. Rule for modifying a `CustomInfoType` to alter behavior under certain circumstances, depending on the specific details of the rule. Not supported for the `surrogate_type` custom infoType."
                            },
                            "description": "Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in order that they are specified. Not supported for the `surrogate_type` CustomInfoType."
                          }
                        },
                        "description": "Custom information type provided by the user. Used to find domain-specific sensitive information configurable to the data in question."
                      },
                      "description": "CustomInfoTypes provided by the user. See https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more."
                    },
                    "excludeInfoTypes": {
                      "type": "boolean",
                      "description": "When true, excludes type information of the findings."
                    }
                  },
                  "description": "How and what to scan for."
                },
                "storageConfig": {
                  "id": "GooglePrivacyDlpV2StorageConfig",
                  "type": "object",
                  "properties": {
                    "hybridOptions": {
                      "id": "GooglePrivacyDlpV2HybridOptions",
                      "type": "object",
                      "properties": {
                        "labels": {
                          "type": "object",
                          "description": "To organize findings, these labels will be added to each finding. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples: * `\"environment\" : \"production\"` * `\"pipeline\" : \"etl\"`",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "A short description of where the data is coming from. Will be stored once in the job. 256 max length."
                        },
                        "tableOptions": {
                          "id": "GooglePrivacyDlpV2TableOptions",
                          "type": "object",
                          "properties": {
                            "identifyingFields": {
                              "type": "array",
                              "items": {
                                "id": "GooglePrivacyDlpV2FieldId",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name describing the field."
                                  }
                                },
                                "description": "General identifier of a data field in a storage service."
                              },
                              "description": "The columns that are the primary keys for table objects included in ContentItem. A copy of this cell's value will stored alongside alongside each finding so that the finding can be traced to the specific row it came from. No more than 3 may be provided."
                            }
                          },
                          "description": "If the container is a table, additional information to make findings meaningful such as the columns that are primary keys."
                        },
                        "requiredFindingLabelKeys": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "These are labels that each inspection request must include within their 'finding_labels' map. Request may contain others, but any missing one of these will be rejected. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. No more than 10 keys can be required."
                        }
                      },
                      "description": "Hybrid inspection options."
                    },
                    "timespanConfig": {
                      "id": "GooglePrivacyDlpV2TimespanConfig",
                      "type": "object",
                      "properties": {
                        "endTime": {
                          "type": "string",
                          "format": "google-datetime",
                          "description": "Exclude files, tables, or rows newer than this value. If not set, no upper time limit is applied."
                        },
                        "startTime": {
                          "type": "string",
                          "format": "google-datetime",
                          "description": "Exclude files, tables, or rows older than this value. If not set, no lower time limit is applied."
                        },
                        "timestampField": {
                          "id": "GooglePrivacyDlpV2FieldId",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name describing the field."
                            }
                          },
                          "description": "General identifier of a data field in a storage service."
                        },
                        "enableAutoPopulationOfTimespanConfig": {
                          "type": "boolean",
                          "description": "When the job is started by a JobTrigger we will automatically figure out a valid start_time to avoid scanning files that have not been modified since the last time the JobTrigger executed. This will be based on the time of the execution of the last run of the JobTrigger."
                        }
                      },
                      "description": "Configuration of the timespan of the items to include in scanning. Currently only supported when inspecting Google Cloud Storage and BigQuery."
                    },
                    "bigQueryOptions": {
                      "id": "GooglePrivacyDlpV2BigQueryOptions",
                      "type": "object",
                      "properties": {
                        "rowsLimit": {
                          "type": "string",
                          "format": "int64",
                          "description": "Max number of rows to scan. If the table has more rows than this value, the rest of the rows are omitted. If not set, or if set to 0, all rows will be scanned. Only one of rows_limit and rows_limit_percent can be specified. Cannot be used in conjunction with TimespanConfig."
                        },
                        "sampleMethod": {
                          "enum": [
                            "SAMPLE_METHOD_UNSPECIFIED",
                            "TOP",
                            "RANDOM_START"
                          ],
                          "type": "string",
                          "enumDescriptions": [
                            "",
                            "Scan groups of rows in the order BigQuery provides (default). Multiple groups of rows may be scanned in parallel, so results may not appear in the same order the rows are read.",
                            "Randomly pick groups of rows to scan."
                          ]
                        },
                        "excludedFields": {
                          "type": "array",
                          "items": {
                            "id": "GooglePrivacyDlpV2FieldId",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name describing the field."
                              }
                            },
                            "description": "General identifier of a data field in a storage service."
                          },
                          "description": "References to fields excluded from scanning. This allows you to skip inspection of entire columns which you know have no findings."
                        },
                        "tableReference": {
                          "id": "GooglePrivacyDlpV2BigQueryTable",
                          "type": "object",
                          "properties": {
                            "tableId": {
                              "type": "string",
                              "description": "Name of the table."
                            },
                            "datasetId": {
                              "type": "string",
                              "description": "Dataset ID of the table."
                            },
                            "projectId": {
                              "type": "string",
                              "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                            }
                          },
                          "description": "Complete BigQuery table reference."
                        },
                        "rowsLimitPercent": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Max percentage of rows to scan. The rest are omitted. The number of rows scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one of rows_limit and rows_limit_percent can be specified. Cannot be used in conjunction with TimespanConfig."
                        },
                        "identifyingFields": {
                          "type": "array",
                          "items": {
                            "id": "GooglePrivacyDlpV2FieldId",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name describing the field."
                              }
                            },
                            "description": "General identifier of a data field in a storage service."
                          },
                          "description": "Table fields that may uniquely identify a row within the table. When `actions.saveFindings.outputConfig.table` is specified, the values of columns specified here are available in the output table under `location.content_locations.record_location.record_key.id_values`. Nested fields such as `person.birthdate.year` are allowed."
                        }
                      },
                      "description": "BigQuery options."
                    },
                    "datastoreOptions": {
                      "id": "GooglePrivacyDlpV2DatastoreOptions",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "id": "GooglePrivacyDlpV2KindExpression",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the kind."
                            }
                          },
                          "description": "The kind to process."
                        },
                        "partitionId": {
                          "id": "GooglePrivacyDlpV2PartitionId",
                          "type": "object",
                          "properties": {
                            "projectId": {
                              "type": "string",
                              "description": "The ID of the project to which the entities belong."
                            },
                            "namespaceId": {
                              "type": "string",
                              "description": "If not empty, the ID of the namespace to which the entities belong."
                            }
                          },
                          "description": "A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty."
                        }
                      },
                      "description": "Google Cloud Datastore options."
                    },
                    "cloudStorageOptions": {
                      "id": "GooglePrivacyDlpV2CloudStorageOptions",
                      "type": "object",
                      "properties": {
                        "fileSet": {
                          "id": "GooglePrivacyDlpV2FileSet",
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "description": "The Cloud Storage url of the file(s) to scan, in the format `gs:///`. Trailing wildcard in the path is allowed. If the url ends in a trailing slash, the bucket or directory represented by the url will be scanned non-recursively (content in sub-directories will not be scanned). This means that `gs://mybucket/` is equivalent to `gs://mybucket/*`, and `gs://mybucket/directory/` is equivalent to `gs://mybucket/directory/*`. Exactly one of `url` or `regex_file_set` must be set."
                            },
                            "regexFileSet": {
                              "id": "GooglePrivacyDlpV2CloudStorageRegexFileSet",
                              "type": "object",
                              "properties": {
                                "bucketName": {
                                  "type": "string",
                                  "description": "The name of a Cloud Storage bucket. Required."
                                },
                                "excludeRegex": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "A list of regular expressions matching file paths to exclude. All files in the bucket that match at least one of these regular expressions will be excluded from the scan. Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub."
                                },
                                "includeRegex": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "A list of regular expressions matching file paths to include. All files in the bucket that match at least one of these regular expressions will be included in the set of files, except for those that also match an item in `exclude_regex`. Leaving this field empty will match all files by default (this is equivalent to including `.*` in the list). Regular expressions use RE2 [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found under the google/re2 repository on GitHub."
                                }
                              },
                              "description": "The regex-filtered set of files to scan. Exactly one of `url` or `regex_file_set` must be set."
                            }
                          },
                          "description": "The set of one or more files to scan."
                        },
                        "fileTypes": {
                          "type": "array",
                          "items": {
                            "enum": [
                              "FILE_TYPE_UNSPECIFIED",
                              "BINARY_FILE",
                              "TEXT_FILE",
                              "IMAGE",
                              "WORD",
                              "PDF",
                              "AVRO",
                              "CSV",
                              "TSV"
                            ],
                            "type": "string",
                            "enumDescriptions": [
                              "Includes all files.",
                              "Includes all file extensions not covered by another entry. Binary scanning attempts to convert the content of the file to utf_8 to scan the file. If you wish to avoid this fall back, specify one or more of the other FileType's in your storage scan.",
                              "Included file extensions: asc,asp, aspx, brf, c, cc,cfm, cgi, cpp, csv, cxx, c++, cs, css, dart, dat, dot, eml,, epbub, ged, go, h, hh, hpp, hxx, h++, hs, html, htm, mkd, markdown, m, ml, mli, perl, pl, plist, pm, php, phtml, pht, properties, py, pyw, rb, rbw, rs, rss, rc, scala, sh, sql, swift, tex, shtml, shtm, xhtml, lhs, ics, ini, java, js, json, kix, kml, ocaml, md, txt, text, tsv, vb, vcard, vcs, wml, xcodeproj, xml, xsl, xsd, yml, yaml.",
                              "Included file extensions: bmp, gif, jpg, jpeg, jpe, png. bytes_limit_per_file has no effect on image files. Image inspection is restricted to 'global', 'us', 'asia', and 'europe'.",
                              "Word files >30 MB will be scanned as binary files. Included file extensions: docx, dotx, docm, dotm",
                              "PDF files >30 MB will be scanned as binary files. Included file extensions: pdf",
                              "Included file extensions: avro",
                              "Included file extensions: csv",
                              "Included file extensions: tsv"
                            ]
                          },
                          "description": "List of file type groups to include in the scan. If empty, all files are scanned and available data format processors are applied. In addition, the binary content of the selected files is always scanned as well. Images are scanned only as binary if the specified region does not support image inspection and no file_types were specified. Image inspection is restricted to 'global', 'us', 'asia', and 'europe'."
                        },
                        "sampleMethod": {
                          "enum": [
                            "SAMPLE_METHOD_UNSPECIFIED",
                            "TOP",
                            "RANDOM_START"
                          ],
                          "type": "string",
                          "enumDescriptions": [
                            "",
                            "Scan from the top (default).",
                            "For each file larger than bytes_limit_per_file, randomly pick the offset to start scanning. The scanned bytes are contiguous."
                          ]
                        },
                        "bytesLimitPerFile": {
                          "type": "string",
                          "format": "int64",
                          "description": "Max number of bytes to scan from a file. If a scanned file's size is bigger than this value then the rest of the bytes are omitted. Only one of bytes_limit_per_file and bytes_limit_per_file_percent can be specified. Cannot be set if de-identification is requested."
                        },
                        "filesLimitPercent": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Limits the number of files to scan to this percentage of the input FileSet. Number of files scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0."
                        },
                        "bytesLimitPerFilePercent": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Max percentage of bytes to scan from a file. The rest are omitted. The number of bytes scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one of bytes_limit_per_file and bytes_limit_per_file_percent can be specified. Cannot be set if de-identification is requested."
                        }
                      },
                      "description": "Google Cloud Storage options."
                    }
                  },
                  "description": "The data to scan."
                },
                "inspectTemplateName": {
                  "type": "string",
                  "description": "If provided, will be used as the default for all values in InspectConfig. `inspect_config` will be merged into the values persisted as part of the template."
                }
              },
              "description": "For inspect jobs, a snapshot of the configuration."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The last update timestamp of a triggeredJob."
            },
            "description": {
              "type": "string",
              "description": "User provided description (max 256 chars)"
            },
            "displayName": {
              "type": "string",
              "description": "Display name (max 100 chars)"
            },
            "lastRunTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The timestamp of the last time this trigger executed."
            }
          },
          "description": "Contains a configuration to make dlp api calls on a repeating basis. See https://cloud.google.com/dlp/docs/concepts-job-triggers to learn more."
        }
      ]
  projects.locations.jobTriggers.hybridInspect:
    description: |-
      Inspect hybrid content and store findings to a trigger. The inspection will be processed asynchronously. To review the findings monitor the jobs within the trigger.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.locations.jobTriggers/hybridInspect
    example:
      inputs: [
        {
          "id": "GooglePrivacyDlpV2HybridInspectJobTriggerRequest",
          "type": "object",
          "properties": {
            "hybridItem": {
              "id": "GooglePrivacyDlpV2HybridContentItem",
              "type": "object",
              "properties": {
                "item": {
                  "id": "GooglePrivacyDlpV2ContentItem",
                  "type": "object",
                  "properties": {
                    "table": {
                      "id": "GooglePrivacyDlpV2Table",
                      "type": "object",
                      "properties": {
                        "rows": {
                          "type": "array",
                          "items": {
                            "id": "GooglePrivacyDlpV2Row",
                            "type": "object",
                            "properties": {
                              "values": {
                                "type": "array",
                                "items": {
                                  "id": "GooglePrivacyDlpV2Value",
                                  "type": "object",
                                  "properties": {
                                    "dateValue": {
                                      "id": "GoogleTypeDate",
                                      "type": "object",
                                      "properties": {
                                        "day": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
                                        },
                                        "year": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
                                        },
                                        "month": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
                                        }
                                      },
                                      "description": "date"
                                    },
                                    "timeValue": {
                                      "id": "GoogleTypeTimeOfDay",
                                      "type": "object",
                                      "properties": {
                                        "hours": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time."
                                        },
                                        "nanos": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999."
                                        },
                                        "minutes": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Minutes of hour of day. Must be from 0 to 59."
                                        },
                                        "seconds": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds."
                                        }
                                      },
                                      "description": "time of day"
                                    },
                                    "floatValue": {
                                      "type": "number",
                                      "format": "double",
                                      "description": "float"
                                    },
                                    "stringValue": {
                                      "type": "string",
                                      "description": "string"
                                    },
                                    "booleanValue": {
                                      "type": "boolean",
                                      "description": "boolean"
                                    },
                                    "integerValue": {
                                      "type": "string",
                                      "format": "int64",
                                      "description": "integer"
                                    },
                                    "dayOfWeekValue": {
                                      "enum": [
                                        "DAY_OF_WEEK_UNSPECIFIED",
                                        "MONDAY",
                                        "TUESDAY",
                                        "WEDNESDAY",
                                        "THURSDAY",
                                        "FRIDAY",
                                        "SATURDAY",
                                        "SUNDAY"
                                      ],
                                      "type": "string",
                                      "description": "day of week",
                                      "enumDescriptions": [
                                        "The day of the week is unspecified.",
                                        "Monday",
                                        "Tuesday",
                                        "Wednesday",
                                        "Thursday",
                                        "Friday",
                                        "Saturday",
                                        "Sunday"
                                      ]
                                    },
                                    "timestampValue": {
                                      "type": "string",
                                      "format": "google-datetime",
                                      "description": "timestamp"
                                    }
                                  },
                                  "description": "Set of primitive values supported by the system. Note that for the purposes of inspection or transformation, the number of bytes considered to comprise a 'Value' is based on its representation as a UTF-8 encoded string. For example, if 'integer_value' is set to 123456789, the number of bytes would be counted as 9, even though an int64 only holds up to 8 bytes of data."
                                },
                                "description": "Individual cells."
                              }
                            },
                            "description": "Values of the row."
                          },
                          "description": "Rows of the table."
                        },
                        "headers": {
                          "type": "array",
                          "items": {
                            "id": "GooglePrivacyDlpV2FieldId",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name describing the field."
                              }
                            },
                            "description": "General identifier of a data field in a storage service."
                          },
                          "description": "Headers of the table."
                        }
                      },
                      "description": "Structured content for inspection. See https://cloud.google.com/dlp/docs/inspecting-text#inspecting_a_table to learn more."
                    },
                    "value": {
                      "type": "string",
                      "description": "String data to inspect or redact."
                    },
                    "byteItem": {
                      "id": "GooglePrivacyDlpV2ByteContentItem",
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "string",
                          "format": "byte",
                          "description": "Content data to inspect or redact."
                        },
                        "type": {
                          "enum": [
                            "BYTES_TYPE_UNSPECIFIED",
                            "IMAGE",
                            "IMAGE_JPEG",
                            "IMAGE_BMP",
                            "IMAGE_PNG",
                            "IMAGE_SVG",
                            "TEXT_UTF8",
                            "WORD_DOCUMENT",
                            "PDF",
                            "AVRO",
                            "CSV",
                            "TSV"
                          ],
                          "type": "string",
                          "description": "The type of data stored in the bytes string. Default will be TEXT_UTF8.",
                          "enumDescriptions": [
                            "Unused",
                            "Any image type.",
                            "jpeg",
                            "bmp",
                            "png",
                            "svg",
                            "plain text",
                            "docx, docm, dotx, dotm",
                            "pdf",
                            "avro",
                            "csv",
                            "tsv"
                          ]
                        }
                      },
                      "description": "Content data to inspect or redact. Replaces `type` and `data`."
                    }
                  },
                  "description": "The item to inspect."
                },
                "findingDetails": {
                  "id": "GooglePrivacyDlpV2HybridFindingDetails",
                  "type": "object",
                  "properties": {
                    "labels": {
                      "type": "object",
                      "description": "Labels to represent user provided metadata about the data being inspected. If configured by the job, some key values may be required. The labels associated with `Finding`'s produced by hybrid inspection. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples: * `\"environment\" : \"production\"` * `\"pipeline\" : \"etl\"`",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "rowOffset": {
                      "type": "string",
                      "format": "int64",
                      "description": "Offset of the row for tables. Populate if the row(s) being scanned are part of a bigger dataset and you want to keep track of their absolute position."
                    },
                    "fileOffset": {
                      "type": "string",
                      "format": "int64",
                      "description": "Offset in bytes of the line, from the beginning of the file, where the finding is located. Populate if the item being scanned is only part of a bigger item, such as a shard of a file and you want to track the absolute position of the finding."
                    },
                    "tableOptions": {
                      "id": "GooglePrivacyDlpV2TableOptions",
                      "type": "object",
                      "properties": {
                        "identifyingFields": {
                          "type": "array",
                          "items": {
                            "id": "GooglePrivacyDlpV2FieldId",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name describing the field."
                              }
                            },
                            "description": "General identifier of a data field in a storage service."
                          },
                          "description": "The columns that are the primary keys for table objects included in ContentItem. A copy of this cell's value will stored alongside alongside each finding so that the finding can be traced to the specific row it came from. No more than 3 may be provided."
                        }
                      },
                      "description": "If the container is a table, additional information to make findings meaningful such as the columns that are primary keys. If not known ahead of time, can also be set within each inspect hybrid call and the two will be merged. Note that identifying_fields will only be stored to BigQuery, and only if the BigQuery action has been included."
                    },
                    "containerDetails": {
                      "id": "GooglePrivacyDlpV2Container",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Container type, for example BigQuery or Google Cloud Storage."
                        },
                        "version": {
                          "type": "string",
                          "description": "Findings container version, if available (\"generation\" for Google Cloud Storage)."
                        },
                        "fullPath": {
                          "type": "string",
                          "description": "A string representation of the full container name. Examples: - BigQuery: 'Project:DataSetId.TableId' - Google Cloud Storage: 'gs://Bucket/folders/filename.txt'"
                        },
                        "rootPath": {
                          "type": "string",
                          "description": "The root of the container. Examples: - For BigQuery table `project_id:dataset_id.table_id`, the root is `dataset_id` - For Google Cloud Storage file `gs://bucket/folder/filename.txt`, the root is `gs://bucket`"
                        },
                        "projectId": {
                          "type": "string",
                          "description": "Project where the finding was found. Can be different from the project that owns the finding."
                        },
                        "updateTime": {
                          "type": "string",
                          "format": "google-datetime",
                          "description": "Findings container modification timestamp, if applicable. For Google Cloud Storage contains last file modification timestamp. For BigQuery table contains last_modified_time property. For Datastore - not populated."
                        },
                        "relativePath": {
                          "type": "string",
                          "description": "The rest of the path after the root. Examples: - For BigQuery table `project_id:dataset_id.table_id`, the relative path is `table_id` - Google Cloud Storage file `gs://bucket/folder/filename.txt`, the relative path is `folder/filename.txt`"
                        }
                      },
                      "description": "Details about the container where the content being inspected is from."
                    }
                  },
                  "description": "Supplementary information that will be added to each finding."
                }
              },
              "description": "The item to inspect."
            }
          },
          "description": "Request to search for potentially sensitive info in a custom location."
        }
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2HybridInspectResponse",
          "type": "object",
          "properties": {},
          "description": "Quota exceeded errors will be thrown once quota has been met."
        }
      ]
  projects.locations.jobTriggers.list:
    description: |-
      Lists job triggers. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.locations.jobTriggers/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.jobTriggers.patch:
    description: |-
      Updates a job trigger. See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.locations.jobTriggers/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.storedInfoTypes.create:
    description: |-
      Creates a pre-built stored infoType to be used for inspection. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.locations.storedInfoTypes/create
    example:
      inputs: [
        {
          "id": "GooglePrivacyDlpV2CreateStoredInfoTypeRequest",
          "type": "object",
          "properties": {
            "config": {
              "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
              "type": "object",
              "properties": {
                "regex": {
                  "id": "GooglePrivacyDlpV2Regex",
                  "type": "object",
                  "properties": {
                    "pattern": {
                      "type": "string",
                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                    },
                    "groupIndexes": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                    }
                  },
                  "description": "Store regular expression-based StoredInfoType."
                },
                "dictionary": {
                  "id": "GooglePrivacyDlpV2Dictionary",
                  "type": "object",
                  "properties": {
                    "wordList": {
                      "id": "GooglePrivacyDlpV2WordList",
                      "type": "object",
                      "properties": {
                        "words": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                        }
                      },
                      "description": "List of words or phrases to search for."
                    },
                    "cloudStoragePath": {
                      "id": "GooglePrivacyDlpV2CloudStoragePath",
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                        }
                      },
                      "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                    }
                  },
                  "description": "Store dictionary-based CustomInfoType."
                },
                "description": {
                  "type": "string",
                  "description": "Description of the StoredInfoType (max 256 characters)."
                },
                "displayName": {
                  "type": "string",
                  "description": "Display name of the StoredInfoType (max 256 characters)."
                },
                "largeCustomDictionary": {
                  "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                  "type": "object",
                  "properties": {
                    "outputPath": {
                      "id": "GooglePrivacyDlpV2CloudStoragePath",
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                        }
                      },
                      "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                    },
                    "bigQueryField": {
                      "id": "GooglePrivacyDlpV2BigQueryField",
                      "type": "object",
                      "properties": {
                        "field": {
                          "id": "GooglePrivacyDlpV2FieldId",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name describing the field."
                            }
                          },
                          "description": "General identifier of a data field in a storage service."
                        },
                        "table": {
                          "id": "GooglePrivacyDlpV2BigQueryTable",
                          "type": "object",
                          "properties": {
                            "tableId": {
                              "type": "string",
                              "description": "Name of the table."
                            },
                            "datasetId": {
                              "type": "string",
                              "description": "Dataset ID of the table."
                            },
                            "projectId": {
                              "type": "string",
                              "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                            }
                          },
                          "description": "Source table of the field."
                        }
                      },
                      "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                    },
                    "cloudStorageFileSet": {
                      "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                        }
                      },
                      "description": "Set of files containing newline-delimited lists of dictionary phrases."
                    }
                  },
                  "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                }
              },
              "description": "Required. Configuration of the storedInfoType to create."
            },
            "locationId": {
              "type": "string",
              "description": "Deprecated. This field has no effect."
            },
            "storedInfoTypeId": {
              "type": "string",
              "description": "The storedInfoType ID can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one."
            }
          },
          "description": "Request message for CreateStoredInfoType."
        }
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2StoredInfoType",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Resource name."
            },
            "currentVersion": {
              "id": "GooglePrivacyDlpV2StoredInfoTypeVersion",
              "type": "object",
              "properties": {
                "state": {
                  "enum": [
                    "STORED_INFO_TYPE_STATE_UNSPECIFIED",
                    "PENDING",
                    "READY",
                    "FAILED",
                    "INVALID"
                  ],
                  "type": "string",
                  "description": "Stored info type version state. Read-only, updated by the system during dictionary creation.",
                  "enumDescriptions": [
                    "Unused",
                    "StoredInfoType version is being created.",
                    "StoredInfoType version is ready for use.",
                    "StoredInfoType creation failed. All relevant error messages are returned in the `StoredInfoTypeVersion` message.",
                    "StoredInfoType is no longer valid because artifacts stored in user-controlled storage were modified. To fix an invalid StoredInfoType, use the `UpdateStoredInfoType` method to create a new version."
                  ]
                },
                "stats": {
                  "id": "GooglePrivacyDlpV2StoredInfoTypeStats",
                  "type": "object",
                  "properties": {
                    "largeCustomDictionary": {
                      "id": "GooglePrivacyDlpV2LargeCustomDictionaryStats",
                      "type": "object",
                      "properties": {
                        "approxNumPhrases": {
                          "type": "string",
                          "format": "int64",
                          "description": "Approximate number of distinct phrases in the dictionary."
                        }
                      },
                      "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                    }
                  },
                  "description": "Statistics about this storedInfoType version."
                },
                "config": {
                  "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
                  "type": "object",
                  "properties": {
                    "regex": {
                      "id": "GooglePrivacyDlpV2Regex",
                      "type": "object",
                      "properties": {
                        "pattern": {
                          "type": "string",
                          "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                        },
                        "groupIndexes": {
                          "type": "array",
                          "items": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                        }
                      },
                      "description": "Store regular expression-based StoredInfoType."
                    },
                    "dictionary": {
                      "id": "GooglePrivacyDlpV2Dictionary",
                      "type": "object",
                      "properties": {
                        "wordList": {
                          "id": "GooglePrivacyDlpV2WordList",
                          "type": "object",
                          "properties": {
                            "words": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                            }
                          },
                          "description": "List of words or phrases to search for."
                        },
                        "cloudStoragePath": {
                          "id": "GooglePrivacyDlpV2CloudStoragePath",
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                            }
                          },
                          "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                        }
                      },
                      "description": "Store dictionary-based CustomInfoType."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the StoredInfoType (max 256 characters)."
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the StoredInfoType (max 256 characters)."
                    },
                    "largeCustomDictionary": {
                      "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                      "type": "object",
                      "properties": {
                        "outputPath": {
                          "id": "GooglePrivacyDlpV2CloudStoragePath",
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                            }
                          },
                          "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                        },
                        "bigQueryField": {
                          "id": "GooglePrivacyDlpV2BigQueryField",
                          "type": "object",
                          "properties": {
                            "field": {
                              "id": "GooglePrivacyDlpV2FieldId",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name describing the field."
                                }
                              },
                              "description": "General identifier of a data field in a storage service."
                            },
                            "table": {
                              "id": "GooglePrivacyDlpV2BigQueryTable",
                              "type": "object",
                              "properties": {
                                "tableId": {
                                  "type": "string",
                                  "description": "Name of the table."
                                },
                                "datasetId": {
                                  "type": "string",
                                  "description": "Dataset ID of the table."
                                },
                                "projectId": {
                                  "type": "string",
                                  "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                }
                              },
                              "description": "Source table of the field."
                            }
                          },
                          "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                        },
                        "cloudStorageFileSet": {
                          "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                            }
                          },
                          "description": "Set of files containing newline-delimited lists of dictionary phrases."
                        }
                      },
                      "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                    }
                  },
                  "description": "StoredInfoType configuration."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2Error",
                    "type": "object",
                    "properties": {
                      "details": {
                        "id": "GoogleRpcStatus",
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The status code, which should be an enum value of google.rpc.Code."
                          },
                          "details": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "any",
                                "description": "Properties of the object. Contains field @type with type URL."
                              }
                            },
                            "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                          },
                          "message": {
                            "type": "string",
                            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                          }
                        },
                        "description": "Detailed error codes and messages."
                      },
                      "timestamps": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "google-datetime"
                        },
                        "description": "The times the error occurred."
                      }
                    },
                    "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
                  },
                  "description": "Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error."
                },
                "createTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "Create timestamp of the version. Read-only, determined by the system when the version is created."
                }
              },
              "description": "Current version of the stored info type."
            },
            "pendingVersions": {
              "type": "array",
              "items": {
                "id": "GooglePrivacyDlpV2StoredInfoTypeVersion",
                "type": "object",
                "properties": {
                  "state": {
                    "enum": [
                      "STORED_INFO_TYPE_STATE_UNSPECIFIED",
                      "PENDING",
                      "READY",
                      "FAILED",
                      "INVALID"
                    ],
                    "type": "string",
                    "description": "Stored info type version state. Read-only, updated by the system during dictionary creation.",
                    "enumDescriptions": [
                      "Unused",
                      "StoredInfoType version is being created.",
                      "StoredInfoType version is ready for use.",
                      "StoredInfoType creation failed. All relevant error messages are returned in the `StoredInfoTypeVersion` message.",
                      "StoredInfoType is no longer valid because artifacts stored in user-controlled storage were modified. To fix an invalid StoredInfoType, use the `UpdateStoredInfoType` method to create a new version."
                    ]
                  },
                  "stats": {
                    "id": "GooglePrivacyDlpV2StoredInfoTypeStats",
                    "type": "object",
                    "properties": {
                      "largeCustomDictionary": {
                        "id": "GooglePrivacyDlpV2LargeCustomDictionaryStats",
                        "type": "object",
                        "properties": {
                          "approxNumPhrases": {
                            "type": "string",
                            "format": "int64",
                            "description": "Approximate number of distinct phrases in the dictionary."
                          }
                        },
                        "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                      }
                    },
                    "description": "Statistics about this storedInfoType version."
                  },
                  "config": {
                    "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
                    "type": "object",
                    "properties": {
                      "regex": {
                        "id": "GooglePrivacyDlpV2Regex",
                        "type": "object",
                        "properties": {
                          "pattern": {
                            "type": "string",
                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                          },
                          "groupIndexes": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                          }
                        },
                        "description": "Store regular expression-based StoredInfoType."
                      },
                      "dictionary": {
                        "id": "GooglePrivacyDlpV2Dictionary",
                        "type": "object",
                        "properties": {
                          "wordList": {
                            "id": "GooglePrivacyDlpV2WordList",
                            "type": "object",
                            "properties": {
                              "words": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                              }
                            },
                            "description": "List of words or phrases to search for."
                          },
                          "cloudStoragePath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                          }
                        },
                        "description": "Store dictionary-based CustomInfoType."
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the StoredInfoType (max 256 characters)."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Display name of the StoredInfoType (max 256 characters)."
                      },
                      "largeCustomDictionary": {
                        "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                        "type": "object",
                        "properties": {
                          "outputPath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                          },
                          "bigQueryField": {
                            "id": "GooglePrivacyDlpV2BigQueryField",
                            "type": "object",
                            "properties": {
                              "field": {
                                "id": "GooglePrivacyDlpV2FieldId",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name describing the field."
                                  }
                                },
                                "description": "General identifier of a data field in a storage service."
                              },
                              "table": {
                                "id": "GooglePrivacyDlpV2BigQueryTable",
                                "type": "object",
                                "properties": {
                                  "tableId": {
                                    "type": "string",
                                    "description": "Name of the table."
                                  },
                                  "datasetId": {
                                    "type": "string",
                                    "description": "Dataset ID of the table."
                                  },
                                  "projectId": {
                                    "type": "string",
                                    "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                  }
                                },
                                "description": "Source table of the field."
                              }
                            },
                            "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                          },
                          "cloudStorageFileSet": {
                            "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string",
                                "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                              }
                            },
                            "description": "Set of files containing newline-delimited lists of dictionary phrases."
                          }
                        },
                        "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                      }
                    },
                    "description": "StoredInfoType configuration."
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "id": "GooglePrivacyDlpV2Error",
                      "type": "object",
                      "properties": {
                        "details": {
                          "id": "GoogleRpcStatus",
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The status code, which should be an enum value of google.rpc.Code."
                            },
                            "details": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "any",
                                  "description": "Properties of the object. Contains field @type with type URL."
                                }
                              },
                              "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                            },
                            "message": {
                              "type": "string",
                              "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                            }
                          },
                          "description": "Detailed error codes and messages."
                        },
                        "timestamps": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "google-datetime"
                          },
                          "description": "The times the error occurred."
                        }
                      },
                      "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
                    },
                    "description": "Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Create timestamp of the version. Read-only, determined by the system when the version is created."
                  }
                },
                "description": "Version of a StoredInfoType, including the configuration used to build it, create timestamp, and current state."
              },
              "description": "Pending versions of the stored info type. Empty if no versions are pending."
            }
          },
          "description": "StoredInfoType resource message that contains information about the current version and any pending updates."
        }
      ]
  projects.locations.storedInfoTypes.delete:
    description: |-
      Deletes a stored infoType. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.locations.storedInfoTypes/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  projects.locations.storedInfoTypes.get:
    description: |-
      Gets a stored infoType. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.locations.storedInfoTypes/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2StoredInfoType",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Resource name."
            },
            "currentVersion": {
              "id": "GooglePrivacyDlpV2StoredInfoTypeVersion",
              "type": "object",
              "properties": {
                "state": {
                  "enum": [
                    "STORED_INFO_TYPE_STATE_UNSPECIFIED",
                    "PENDING",
                    "READY",
                    "FAILED",
                    "INVALID"
                  ],
                  "type": "string",
                  "description": "Stored info type version state. Read-only, updated by the system during dictionary creation.",
                  "enumDescriptions": [
                    "Unused",
                    "StoredInfoType version is being created.",
                    "StoredInfoType version is ready for use.",
                    "StoredInfoType creation failed. All relevant error messages are returned in the `StoredInfoTypeVersion` message.",
                    "StoredInfoType is no longer valid because artifacts stored in user-controlled storage were modified. To fix an invalid StoredInfoType, use the `UpdateStoredInfoType` method to create a new version."
                  ]
                },
                "stats": {
                  "id": "GooglePrivacyDlpV2StoredInfoTypeStats",
                  "type": "object",
                  "properties": {
                    "largeCustomDictionary": {
                      "id": "GooglePrivacyDlpV2LargeCustomDictionaryStats",
                      "type": "object",
                      "properties": {
                        "approxNumPhrases": {
                          "type": "string",
                          "format": "int64",
                          "description": "Approximate number of distinct phrases in the dictionary."
                        }
                      },
                      "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                    }
                  },
                  "description": "Statistics about this storedInfoType version."
                },
                "config": {
                  "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
                  "type": "object",
                  "properties": {
                    "regex": {
                      "id": "GooglePrivacyDlpV2Regex",
                      "type": "object",
                      "properties": {
                        "pattern": {
                          "type": "string",
                          "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                        },
                        "groupIndexes": {
                          "type": "array",
                          "items": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                        }
                      },
                      "description": "Store regular expression-based StoredInfoType."
                    },
                    "dictionary": {
                      "id": "GooglePrivacyDlpV2Dictionary",
                      "type": "object",
                      "properties": {
                        "wordList": {
                          "id": "GooglePrivacyDlpV2WordList",
                          "type": "object",
                          "properties": {
                            "words": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                            }
                          },
                          "description": "List of words or phrases to search for."
                        },
                        "cloudStoragePath": {
                          "id": "GooglePrivacyDlpV2CloudStoragePath",
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                            }
                          },
                          "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                        }
                      },
                      "description": "Store dictionary-based CustomInfoType."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the StoredInfoType (max 256 characters)."
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the StoredInfoType (max 256 characters)."
                    },
                    "largeCustomDictionary": {
                      "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                      "type": "object",
                      "properties": {
                        "outputPath": {
                          "id": "GooglePrivacyDlpV2CloudStoragePath",
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                            }
                          },
                          "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                        },
                        "bigQueryField": {
                          "id": "GooglePrivacyDlpV2BigQueryField",
                          "type": "object",
                          "properties": {
                            "field": {
                              "id": "GooglePrivacyDlpV2FieldId",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name describing the field."
                                }
                              },
                              "description": "General identifier of a data field in a storage service."
                            },
                            "table": {
                              "id": "GooglePrivacyDlpV2BigQueryTable",
                              "type": "object",
                              "properties": {
                                "tableId": {
                                  "type": "string",
                                  "description": "Name of the table."
                                },
                                "datasetId": {
                                  "type": "string",
                                  "description": "Dataset ID of the table."
                                },
                                "projectId": {
                                  "type": "string",
                                  "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                }
                              },
                              "description": "Source table of the field."
                            }
                          },
                          "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                        },
                        "cloudStorageFileSet": {
                          "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                            }
                          },
                          "description": "Set of files containing newline-delimited lists of dictionary phrases."
                        }
                      },
                      "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                    }
                  },
                  "description": "StoredInfoType configuration."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2Error",
                    "type": "object",
                    "properties": {
                      "details": {
                        "id": "GoogleRpcStatus",
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The status code, which should be an enum value of google.rpc.Code."
                          },
                          "details": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "any",
                                "description": "Properties of the object. Contains field @type with type URL."
                              }
                            },
                            "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                          },
                          "message": {
                            "type": "string",
                            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                          }
                        },
                        "description": "Detailed error codes and messages."
                      },
                      "timestamps": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "google-datetime"
                        },
                        "description": "The times the error occurred."
                      }
                    },
                    "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
                  },
                  "description": "Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error."
                },
                "createTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "Create timestamp of the version. Read-only, determined by the system when the version is created."
                }
              },
              "description": "Current version of the stored info type."
            },
            "pendingVersions": {
              "type": "array",
              "items": {
                "id": "GooglePrivacyDlpV2StoredInfoTypeVersion",
                "type": "object",
                "properties": {
                  "state": {
                    "enum": [
                      "STORED_INFO_TYPE_STATE_UNSPECIFIED",
                      "PENDING",
                      "READY",
                      "FAILED",
                      "INVALID"
                    ],
                    "type": "string",
                    "description": "Stored info type version state. Read-only, updated by the system during dictionary creation.",
                    "enumDescriptions": [
                      "Unused",
                      "StoredInfoType version is being created.",
                      "StoredInfoType version is ready for use.",
                      "StoredInfoType creation failed. All relevant error messages are returned in the `StoredInfoTypeVersion` message.",
                      "StoredInfoType is no longer valid because artifacts stored in user-controlled storage were modified. To fix an invalid StoredInfoType, use the `UpdateStoredInfoType` method to create a new version."
                    ]
                  },
                  "stats": {
                    "id": "GooglePrivacyDlpV2StoredInfoTypeStats",
                    "type": "object",
                    "properties": {
                      "largeCustomDictionary": {
                        "id": "GooglePrivacyDlpV2LargeCustomDictionaryStats",
                        "type": "object",
                        "properties": {
                          "approxNumPhrases": {
                            "type": "string",
                            "format": "int64",
                            "description": "Approximate number of distinct phrases in the dictionary."
                          }
                        },
                        "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                      }
                    },
                    "description": "Statistics about this storedInfoType version."
                  },
                  "config": {
                    "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
                    "type": "object",
                    "properties": {
                      "regex": {
                        "id": "GooglePrivacyDlpV2Regex",
                        "type": "object",
                        "properties": {
                          "pattern": {
                            "type": "string",
                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                          },
                          "groupIndexes": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                          }
                        },
                        "description": "Store regular expression-based StoredInfoType."
                      },
                      "dictionary": {
                        "id": "GooglePrivacyDlpV2Dictionary",
                        "type": "object",
                        "properties": {
                          "wordList": {
                            "id": "GooglePrivacyDlpV2WordList",
                            "type": "object",
                            "properties": {
                              "words": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                              }
                            },
                            "description": "List of words or phrases to search for."
                          },
                          "cloudStoragePath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                          }
                        },
                        "description": "Store dictionary-based CustomInfoType."
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the StoredInfoType (max 256 characters)."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Display name of the StoredInfoType (max 256 characters)."
                      },
                      "largeCustomDictionary": {
                        "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                        "type": "object",
                        "properties": {
                          "outputPath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                          },
                          "bigQueryField": {
                            "id": "GooglePrivacyDlpV2BigQueryField",
                            "type": "object",
                            "properties": {
                              "field": {
                                "id": "GooglePrivacyDlpV2FieldId",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name describing the field."
                                  }
                                },
                                "description": "General identifier of a data field in a storage service."
                              },
                              "table": {
                                "id": "GooglePrivacyDlpV2BigQueryTable",
                                "type": "object",
                                "properties": {
                                  "tableId": {
                                    "type": "string",
                                    "description": "Name of the table."
                                  },
                                  "datasetId": {
                                    "type": "string",
                                    "description": "Dataset ID of the table."
                                  },
                                  "projectId": {
                                    "type": "string",
                                    "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                  }
                                },
                                "description": "Source table of the field."
                              }
                            },
                            "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                          },
                          "cloudStorageFileSet": {
                            "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string",
                                "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                              }
                            },
                            "description": "Set of files containing newline-delimited lists of dictionary phrases."
                          }
                        },
                        "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                      }
                    },
                    "description": "StoredInfoType configuration."
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "id": "GooglePrivacyDlpV2Error",
                      "type": "object",
                      "properties": {
                        "details": {
                          "id": "GoogleRpcStatus",
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The status code, which should be an enum value of google.rpc.Code."
                            },
                            "details": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "any",
                                  "description": "Properties of the object. Contains field @type with type URL."
                                }
                              },
                              "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                            },
                            "message": {
                              "type": "string",
                              "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                            }
                          },
                          "description": "Detailed error codes and messages."
                        },
                        "timestamps": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "google-datetime"
                          },
                          "description": "The times the error occurred."
                        }
                      },
                      "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
                    },
                    "description": "Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Create timestamp of the version. Read-only, determined by the system when the version is created."
                  }
                },
                "description": "Version of a StoredInfoType, including the configuration used to build it, create timestamp, and current state."
              },
              "description": "Pending versions of the stored info type. Empty if no versions are pending."
            }
          },
          "description": "StoredInfoType resource message that contains information about the current version and any pending updates."
        }
      ]
  projects.locations.storedInfoTypes.list:
    description: |-
      Lists stored infoTypes. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.locations.storedInfoTypes/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2ListStoredInfoTypesResponse",
          "type": "object",
          "properties": {
            "nextPageToken": {
              "type": "string",
              "description": "If the next page is available then the next page token to be used in following ListStoredInfoTypes request."
            },
            "storedInfoTypes": {
              "type": "array",
              "items": {
                "id": "GooglePrivacyDlpV2StoredInfoType",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Resource name."
                  },
                  "currentVersion": {
                    "id": "GooglePrivacyDlpV2StoredInfoTypeVersion",
                    "type": "object",
                    "properties": {
                      "state": {
                        "enum": [
                          "STORED_INFO_TYPE_STATE_UNSPECIFIED",
                          "PENDING",
                          "READY",
                          "FAILED",
                          "INVALID"
                        ],
                        "type": "string",
                        "description": "Stored info type version state. Read-only, updated by the system during dictionary creation.",
                        "enumDescriptions": [
                          "Unused",
                          "StoredInfoType version is being created.",
                          "StoredInfoType version is ready for use.",
                          "StoredInfoType creation failed. All relevant error messages are returned in the `StoredInfoTypeVersion` message.",
                          "StoredInfoType is no longer valid because artifacts stored in user-controlled storage were modified. To fix an invalid StoredInfoType, use the `UpdateStoredInfoType` method to create a new version."
                        ]
                      },
                      "stats": {
                        "id": "GooglePrivacyDlpV2StoredInfoTypeStats",
                        "type": "object",
                        "properties": {
                          "largeCustomDictionary": {
                            "id": "GooglePrivacyDlpV2LargeCustomDictionaryStats",
                            "type": "object",
                            "properties": {
                              "approxNumPhrases": {
                                "type": "string",
                                "format": "int64",
                                "description": "Approximate number of distinct phrases in the dictionary."
                              }
                            },
                            "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                          }
                        },
                        "description": "Statistics about this storedInfoType version."
                      },
                      "config": {
                        "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
                        "type": "object",
                        "properties": {
                          "regex": {
                            "id": "GooglePrivacyDlpV2Regex",
                            "type": "object",
                            "properties": {
                              "pattern": {
                                "type": "string",
                                "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                              },
                              "groupIndexes": {
                                "type": "array",
                                "items": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                              }
                            },
                            "description": "Store regular expression-based StoredInfoType."
                          },
                          "dictionary": {
                            "id": "GooglePrivacyDlpV2Dictionary",
                            "type": "object",
                            "properties": {
                              "wordList": {
                                "id": "GooglePrivacyDlpV2WordList",
                                "type": "object",
                                "properties": {
                                  "words": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                  }
                                },
                                "description": "List of words or phrases to search for."
                              },
                              "cloudStoragePath": {
                                "id": "GooglePrivacyDlpV2CloudStoragePath",
                                "type": "object",
                                "properties": {
                                  "path": {
                                    "type": "string",
                                    "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                  }
                                },
                                "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                              }
                            },
                            "description": "Store dictionary-based CustomInfoType."
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the StoredInfoType (max 256 characters)."
                          },
                          "displayName": {
                            "type": "string",
                            "description": "Display name of the StoredInfoType (max 256 characters)."
                          },
                          "largeCustomDictionary": {
                            "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                            "type": "object",
                            "properties": {
                              "outputPath": {
                                "id": "GooglePrivacyDlpV2CloudStoragePath",
                                "type": "object",
                                "properties": {
                                  "path": {
                                    "type": "string",
                                    "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                  }
                                },
                                "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                              },
                              "bigQueryField": {
                                "id": "GooglePrivacyDlpV2BigQueryField",
                                "type": "object",
                                "properties": {
                                  "field": {
                                    "id": "GooglePrivacyDlpV2FieldId",
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name describing the field."
                                      }
                                    },
                                    "description": "General identifier of a data field in a storage service."
                                  },
                                  "table": {
                                    "id": "GooglePrivacyDlpV2BigQueryTable",
                                    "type": "object",
                                    "properties": {
                                      "tableId": {
                                        "type": "string",
                                        "description": "Name of the table."
                                      },
                                      "datasetId": {
                                        "type": "string",
                                        "description": "Dataset ID of the table."
                                      },
                                      "projectId": {
                                        "type": "string",
                                        "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                      }
                                    },
                                    "description": "Source table of the field."
                                  }
                                },
                                "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                              },
                              "cloudStorageFileSet": {
                                "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                                  }
                                },
                                "description": "Set of files containing newline-delimited lists of dictionary phrases."
                              }
                            },
                            "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                          }
                        },
                        "description": "StoredInfoType configuration."
                      },
                      "errors": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2Error",
                          "type": "object",
                          "properties": {
                            "details": {
                              "id": "GoogleRpcStatus",
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The status code, which should be an enum value of google.rpc.Code."
                                },
                                "details": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "any",
                                      "description": "Properties of the object. Contains field @type with type URL."
                                    }
                                  },
                                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                                },
                                "message": {
                                  "type": "string",
                                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                                }
                              },
                              "description": "Detailed error codes and messages."
                            },
                            "timestamps": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "format": "google-datetime"
                              },
                              "description": "The times the error occurred."
                            }
                          },
                          "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
                        },
                        "description": "Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error."
                      },
                      "createTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "Create timestamp of the version. Read-only, determined by the system when the version is created."
                      }
                    },
                    "description": "Current version of the stored info type."
                  },
                  "pendingVersions": {
                    "type": "array",
                    "items": {
                      "id": "GooglePrivacyDlpV2StoredInfoTypeVersion",
                      "type": "object",
                      "properties": {
                        "state": {
                          "enum": [
                            "STORED_INFO_TYPE_STATE_UNSPECIFIED",
                            "PENDING",
                            "READY",
                            "FAILED",
                            "INVALID"
                          ],
                          "type": "string",
                          "description": "Stored info type version state. Read-only, updated by the system during dictionary creation.",
                          "enumDescriptions": [
                            "Unused",
                            "StoredInfoType version is being created.",
                            "StoredInfoType version is ready for use.",
                            "StoredInfoType creation failed. All relevant error messages are returned in the `StoredInfoTypeVersion` message.",
                            "StoredInfoType is no longer valid because artifacts stored in user-controlled storage were modified. To fix an invalid StoredInfoType, use the `UpdateStoredInfoType` method to create a new version."
                          ]
                        },
                        "stats": {
                          "id": "GooglePrivacyDlpV2StoredInfoTypeStats",
                          "type": "object",
                          "properties": {
                            "largeCustomDictionary": {
                              "id": "GooglePrivacyDlpV2LargeCustomDictionaryStats",
                              "type": "object",
                              "properties": {
                                "approxNumPhrases": {
                                  "type": "string",
                                  "format": "int64",
                                  "description": "Approximate number of distinct phrases in the dictionary."
                                }
                              },
                              "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                            }
                          },
                          "description": "Statistics about this storedInfoType version."
                        },
                        "config": {
                          "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
                          "type": "object",
                          "properties": {
                            "regex": {
                              "id": "GooglePrivacyDlpV2Regex",
                              "type": "object",
                              "properties": {
                                "pattern": {
                                  "type": "string",
                                  "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                },
                                "groupIndexes": {
                                  "type": "array",
                                  "items": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                }
                              },
                              "description": "Store regular expression-based StoredInfoType."
                            },
                            "dictionary": {
                              "id": "GooglePrivacyDlpV2Dictionary",
                              "type": "object",
                              "properties": {
                                "wordList": {
                                  "id": "GooglePrivacyDlpV2WordList",
                                  "type": "object",
                                  "properties": {
                                    "words": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                    }
                                  },
                                  "description": "List of words or phrases to search for."
                                },
                                "cloudStoragePath": {
                                  "id": "GooglePrivacyDlpV2CloudStoragePath",
                                  "type": "object",
                                  "properties": {
                                    "path": {
                                      "type": "string",
                                      "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                    }
                                  },
                                  "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                                }
                              },
                              "description": "Store dictionary-based CustomInfoType."
                            },
                            "description": {
                              "type": "string",
                              "description": "Description of the StoredInfoType (max 256 characters)."
                            },
                            "displayName": {
                              "type": "string",
                              "description": "Display name of the StoredInfoType (max 256 characters)."
                            },
                            "largeCustomDictionary": {
                              "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                              "type": "object",
                              "properties": {
                                "outputPath": {
                                  "id": "GooglePrivacyDlpV2CloudStoragePath",
                                  "type": "object",
                                  "properties": {
                                    "path": {
                                      "type": "string",
                                      "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                    }
                                  },
                                  "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                                },
                                "bigQueryField": {
                                  "id": "GooglePrivacyDlpV2BigQueryField",
                                  "type": "object",
                                  "properties": {
                                    "field": {
                                      "id": "GooglePrivacyDlpV2FieldId",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Name describing the field."
                                        }
                                      },
                                      "description": "General identifier of a data field in a storage service."
                                    },
                                    "table": {
                                      "id": "GooglePrivacyDlpV2BigQueryTable",
                                      "type": "object",
                                      "properties": {
                                        "tableId": {
                                          "type": "string",
                                          "description": "Name of the table."
                                        },
                                        "datasetId": {
                                          "type": "string",
                                          "description": "Dataset ID of the table."
                                        },
                                        "projectId": {
                                          "type": "string",
                                          "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                        }
                                      },
                                      "description": "Source table of the field."
                                    }
                                  },
                                  "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                                },
                                "cloudStorageFileSet": {
                                  "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                                  "type": "object",
                                  "properties": {
                                    "url": {
                                      "type": "string",
                                      "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                                    }
                                  },
                                  "description": "Set of files containing newline-delimited lists of dictionary phrases."
                                }
                              },
                              "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                            }
                          },
                          "description": "StoredInfoType configuration."
                        },
                        "errors": {
                          "type": "array",
                          "items": {
                            "id": "GooglePrivacyDlpV2Error",
                            "type": "object",
                            "properties": {
                              "details": {
                                "id": "GoogleRpcStatus",
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The status code, which should be an enum value of google.rpc.Code."
                                  },
                                  "details": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "any",
                                        "description": "Properties of the object. Contains field @type with type URL."
                                      }
                                    },
                                    "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                                  },
                                  "message": {
                                    "type": "string",
                                    "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                                  }
                                },
                                "description": "Detailed error codes and messages."
                              },
                              "timestamps": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "format": "google-datetime"
                                },
                                "description": "The times the error occurred."
                              }
                            },
                            "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
                          },
                          "description": "Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error."
                        },
                        "createTime": {
                          "type": "string",
                          "format": "google-datetime",
                          "description": "Create timestamp of the version. Read-only, determined by the system when the version is created."
                        }
                      },
                      "description": "Version of a StoredInfoType, including the configuration used to build it, create timestamp, and current state."
                    },
                    "description": "Pending versions of the stored info type. Empty if no versions are pending."
                  }
                },
                "description": "StoredInfoType resource message that contains information about the current version and any pending updates."
              },
              "description": "List of storedInfoTypes, up to page_size in ListStoredInfoTypesRequest."
            }
          },
          "description": "Response message for ListStoredInfoTypes."
        }
      ]
  projects.locations.storedInfoTypes.patch:
    description: |-
      Updates the stored infoType by creating a new version. The existing version will continue to be used until the new version is ready. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.locations.storedInfoTypes/patch
    example:
      inputs: [
        {
          "id": "GooglePrivacyDlpV2UpdateStoredInfoTypeRequest",
          "type": "object",
          "properties": {
            "config": {
              "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
              "type": "object",
              "properties": {
                "regex": {
                  "id": "GooglePrivacyDlpV2Regex",
                  "type": "object",
                  "properties": {
                    "pattern": {
                      "type": "string",
                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                    },
                    "groupIndexes": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                    }
                  },
                  "description": "Store regular expression-based StoredInfoType."
                },
                "dictionary": {
                  "id": "GooglePrivacyDlpV2Dictionary",
                  "type": "object",
                  "properties": {
                    "wordList": {
                      "id": "GooglePrivacyDlpV2WordList",
                      "type": "object",
                      "properties": {
                        "words": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                        }
                      },
                      "description": "List of words or phrases to search for."
                    },
                    "cloudStoragePath": {
                      "id": "GooglePrivacyDlpV2CloudStoragePath",
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                        }
                      },
                      "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                    }
                  },
                  "description": "Store dictionary-based CustomInfoType."
                },
                "description": {
                  "type": "string",
                  "description": "Description of the StoredInfoType (max 256 characters)."
                },
                "displayName": {
                  "type": "string",
                  "description": "Display name of the StoredInfoType (max 256 characters)."
                },
                "largeCustomDictionary": {
                  "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                  "type": "object",
                  "properties": {
                    "outputPath": {
                      "id": "GooglePrivacyDlpV2CloudStoragePath",
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                        }
                      },
                      "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                    },
                    "bigQueryField": {
                      "id": "GooglePrivacyDlpV2BigQueryField",
                      "type": "object",
                      "properties": {
                        "field": {
                          "id": "GooglePrivacyDlpV2FieldId",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name describing the field."
                            }
                          },
                          "description": "General identifier of a data field in a storage service."
                        },
                        "table": {
                          "id": "GooglePrivacyDlpV2BigQueryTable",
                          "type": "object",
                          "properties": {
                            "tableId": {
                              "type": "string",
                              "description": "Name of the table."
                            },
                            "datasetId": {
                              "type": "string",
                              "description": "Dataset ID of the table."
                            },
                            "projectId": {
                              "type": "string",
                              "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                            }
                          },
                          "description": "Source table of the field."
                        }
                      },
                      "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                    },
                    "cloudStorageFileSet": {
                      "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                        }
                      },
                      "description": "Set of files containing newline-delimited lists of dictionary phrases."
                    }
                  },
                  "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                }
              },
              "description": "Updated configuration for the storedInfoType. If not provided, a new version of the storedInfoType will be created with the existing configuration."
            },
            "updateMask": {
              "type": "string",
              "format": "google-fieldmask",
              "description": "Mask to control which fields get updated."
            }
          },
          "description": "Request message for UpdateStoredInfoType."
        }
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2StoredInfoType",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Resource name."
            },
            "currentVersion": {
              "id": "GooglePrivacyDlpV2StoredInfoTypeVersion",
              "type": "object",
              "properties": {
                "state": {
                  "enum": [
                    "STORED_INFO_TYPE_STATE_UNSPECIFIED",
                    "PENDING",
                    "READY",
                    "FAILED",
                    "INVALID"
                  ],
                  "type": "string",
                  "description": "Stored info type version state. Read-only, updated by the system during dictionary creation.",
                  "enumDescriptions": [
                    "Unused",
                    "StoredInfoType version is being created.",
                    "StoredInfoType version is ready for use.",
                    "StoredInfoType creation failed. All relevant error messages are returned in the `StoredInfoTypeVersion` message.",
                    "StoredInfoType is no longer valid because artifacts stored in user-controlled storage were modified. To fix an invalid StoredInfoType, use the `UpdateStoredInfoType` method to create a new version."
                  ]
                },
                "stats": {
                  "id": "GooglePrivacyDlpV2StoredInfoTypeStats",
                  "type": "object",
                  "properties": {
                    "largeCustomDictionary": {
                      "id": "GooglePrivacyDlpV2LargeCustomDictionaryStats",
                      "type": "object",
                      "properties": {
                        "approxNumPhrases": {
                          "type": "string",
                          "format": "int64",
                          "description": "Approximate number of distinct phrases in the dictionary."
                        }
                      },
                      "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                    }
                  },
                  "description": "Statistics about this storedInfoType version."
                },
                "config": {
                  "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
                  "type": "object",
                  "properties": {
                    "regex": {
                      "id": "GooglePrivacyDlpV2Regex",
                      "type": "object",
                      "properties": {
                        "pattern": {
                          "type": "string",
                          "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                        },
                        "groupIndexes": {
                          "type": "array",
                          "items": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                        }
                      },
                      "description": "Store regular expression-based StoredInfoType."
                    },
                    "dictionary": {
                      "id": "GooglePrivacyDlpV2Dictionary",
                      "type": "object",
                      "properties": {
                        "wordList": {
                          "id": "GooglePrivacyDlpV2WordList",
                          "type": "object",
                          "properties": {
                            "words": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                            }
                          },
                          "description": "List of words or phrases to search for."
                        },
                        "cloudStoragePath": {
                          "id": "GooglePrivacyDlpV2CloudStoragePath",
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                            }
                          },
                          "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                        }
                      },
                      "description": "Store dictionary-based CustomInfoType."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the StoredInfoType (max 256 characters)."
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the StoredInfoType (max 256 characters)."
                    },
                    "largeCustomDictionary": {
                      "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                      "type": "object",
                      "properties": {
                        "outputPath": {
                          "id": "GooglePrivacyDlpV2CloudStoragePath",
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                            }
                          },
                          "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                        },
                        "bigQueryField": {
                          "id": "GooglePrivacyDlpV2BigQueryField",
                          "type": "object",
                          "properties": {
                            "field": {
                              "id": "GooglePrivacyDlpV2FieldId",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name describing the field."
                                }
                              },
                              "description": "General identifier of a data field in a storage service."
                            },
                            "table": {
                              "id": "GooglePrivacyDlpV2BigQueryTable",
                              "type": "object",
                              "properties": {
                                "tableId": {
                                  "type": "string",
                                  "description": "Name of the table."
                                },
                                "datasetId": {
                                  "type": "string",
                                  "description": "Dataset ID of the table."
                                },
                                "projectId": {
                                  "type": "string",
                                  "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                }
                              },
                              "description": "Source table of the field."
                            }
                          },
                          "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                        },
                        "cloudStorageFileSet": {
                          "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                            }
                          },
                          "description": "Set of files containing newline-delimited lists of dictionary phrases."
                        }
                      },
                      "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                    }
                  },
                  "description": "StoredInfoType configuration."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2Error",
                    "type": "object",
                    "properties": {
                      "details": {
                        "id": "GoogleRpcStatus",
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The status code, which should be an enum value of google.rpc.Code."
                          },
                          "details": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "any",
                                "description": "Properties of the object. Contains field @type with type URL."
                              }
                            },
                            "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                          },
                          "message": {
                            "type": "string",
                            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                          }
                        },
                        "description": "Detailed error codes and messages."
                      },
                      "timestamps": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "google-datetime"
                        },
                        "description": "The times the error occurred."
                      }
                    },
                    "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
                  },
                  "description": "Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error."
                },
                "createTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "Create timestamp of the version. Read-only, determined by the system when the version is created."
                }
              },
              "description": "Current version of the stored info type."
            },
            "pendingVersions": {
              "type": "array",
              "items": {
                "id": "GooglePrivacyDlpV2StoredInfoTypeVersion",
                "type": "object",
                "properties": {
                  "state": {
                    "enum": [
                      "STORED_INFO_TYPE_STATE_UNSPECIFIED",
                      "PENDING",
                      "READY",
                      "FAILED",
                      "INVALID"
                    ],
                    "type": "string",
                    "description": "Stored info type version state. Read-only, updated by the system during dictionary creation.",
                    "enumDescriptions": [
                      "Unused",
                      "StoredInfoType version is being created.",
                      "StoredInfoType version is ready for use.",
                      "StoredInfoType creation failed. All relevant error messages are returned in the `StoredInfoTypeVersion` message.",
                      "StoredInfoType is no longer valid because artifacts stored in user-controlled storage were modified. To fix an invalid StoredInfoType, use the `UpdateStoredInfoType` method to create a new version."
                    ]
                  },
                  "stats": {
                    "id": "GooglePrivacyDlpV2StoredInfoTypeStats",
                    "type": "object",
                    "properties": {
                      "largeCustomDictionary": {
                        "id": "GooglePrivacyDlpV2LargeCustomDictionaryStats",
                        "type": "object",
                        "properties": {
                          "approxNumPhrases": {
                            "type": "string",
                            "format": "int64",
                            "description": "Approximate number of distinct phrases in the dictionary."
                          }
                        },
                        "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                      }
                    },
                    "description": "Statistics about this storedInfoType version."
                  },
                  "config": {
                    "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
                    "type": "object",
                    "properties": {
                      "regex": {
                        "id": "GooglePrivacyDlpV2Regex",
                        "type": "object",
                        "properties": {
                          "pattern": {
                            "type": "string",
                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                          },
                          "groupIndexes": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                          }
                        },
                        "description": "Store regular expression-based StoredInfoType."
                      },
                      "dictionary": {
                        "id": "GooglePrivacyDlpV2Dictionary",
                        "type": "object",
                        "properties": {
                          "wordList": {
                            "id": "GooglePrivacyDlpV2WordList",
                            "type": "object",
                            "properties": {
                              "words": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                              }
                            },
                            "description": "List of words or phrases to search for."
                          },
                          "cloudStoragePath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                          }
                        },
                        "description": "Store dictionary-based CustomInfoType."
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the StoredInfoType (max 256 characters)."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Display name of the StoredInfoType (max 256 characters)."
                      },
                      "largeCustomDictionary": {
                        "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                        "type": "object",
                        "properties": {
                          "outputPath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                          },
                          "bigQueryField": {
                            "id": "GooglePrivacyDlpV2BigQueryField",
                            "type": "object",
                            "properties": {
                              "field": {
                                "id": "GooglePrivacyDlpV2FieldId",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name describing the field."
                                  }
                                },
                                "description": "General identifier of a data field in a storage service."
                              },
                              "table": {
                                "id": "GooglePrivacyDlpV2BigQueryTable",
                                "type": "object",
                                "properties": {
                                  "tableId": {
                                    "type": "string",
                                    "description": "Name of the table."
                                  },
                                  "datasetId": {
                                    "type": "string",
                                    "description": "Dataset ID of the table."
                                  },
                                  "projectId": {
                                    "type": "string",
                                    "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                  }
                                },
                                "description": "Source table of the field."
                              }
                            },
                            "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                          },
                          "cloudStorageFileSet": {
                            "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string",
                                "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                              }
                            },
                            "description": "Set of files containing newline-delimited lists of dictionary phrases."
                          }
                        },
                        "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                      }
                    },
                    "description": "StoredInfoType configuration."
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "id": "GooglePrivacyDlpV2Error",
                      "type": "object",
                      "properties": {
                        "details": {
                          "id": "GoogleRpcStatus",
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The status code, which should be an enum value of google.rpc.Code."
                            },
                            "details": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "any",
                                  "description": "Properties of the object. Contains field @type with type URL."
                                }
                              },
                              "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                            },
                            "message": {
                              "type": "string",
                              "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                            }
                          },
                          "description": "Detailed error codes and messages."
                        },
                        "timestamps": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "google-datetime"
                          },
                          "description": "The times the error occurred."
                        }
                      },
                      "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
                    },
                    "description": "Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Create timestamp of the version. Read-only, determined by the system when the version is created."
                  }
                },
                "description": "Version of a StoredInfoType, including the configuration used to build it, create timestamp, and current state."
              },
              "description": "Pending versions of the stored info type. Empty if no versions are pending."
            }
          },
          "description": "StoredInfoType resource message that contains information about the current version and any pending updates."
        }
      ]
  projects.storedInfoTypes.create:
    description: |-
      Creates a pre-built stored infoType to be used for inspection. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.storedInfoTypes/create
    example:
      inputs: [
        {
          "id": "GooglePrivacyDlpV2CreateStoredInfoTypeRequest",
          "type": "object",
          "properties": {
            "config": {
              "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
              "type": "object",
              "properties": {
                "regex": {
                  "id": "GooglePrivacyDlpV2Regex",
                  "type": "object",
                  "properties": {
                    "pattern": {
                      "type": "string",
                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                    },
                    "groupIndexes": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                    }
                  },
                  "description": "Store regular expression-based StoredInfoType."
                },
                "dictionary": {
                  "id": "GooglePrivacyDlpV2Dictionary",
                  "type": "object",
                  "properties": {
                    "wordList": {
                      "id": "GooglePrivacyDlpV2WordList",
                      "type": "object",
                      "properties": {
                        "words": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                        }
                      },
                      "description": "List of words or phrases to search for."
                    },
                    "cloudStoragePath": {
                      "id": "GooglePrivacyDlpV2CloudStoragePath",
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                        }
                      },
                      "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                    }
                  },
                  "description": "Store dictionary-based CustomInfoType."
                },
                "description": {
                  "type": "string",
                  "description": "Description of the StoredInfoType (max 256 characters)."
                },
                "displayName": {
                  "type": "string",
                  "description": "Display name of the StoredInfoType (max 256 characters)."
                },
                "largeCustomDictionary": {
                  "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                  "type": "object",
                  "properties": {
                    "outputPath": {
                      "id": "GooglePrivacyDlpV2CloudStoragePath",
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                        }
                      },
                      "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                    },
                    "bigQueryField": {
                      "id": "GooglePrivacyDlpV2BigQueryField",
                      "type": "object",
                      "properties": {
                        "field": {
                          "id": "GooglePrivacyDlpV2FieldId",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name describing the field."
                            }
                          },
                          "description": "General identifier of a data field in a storage service."
                        },
                        "table": {
                          "id": "GooglePrivacyDlpV2BigQueryTable",
                          "type": "object",
                          "properties": {
                            "tableId": {
                              "type": "string",
                              "description": "Name of the table."
                            },
                            "datasetId": {
                              "type": "string",
                              "description": "Dataset ID of the table."
                            },
                            "projectId": {
                              "type": "string",
                              "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                            }
                          },
                          "description": "Source table of the field."
                        }
                      },
                      "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                    },
                    "cloudStorageFileSet": {
                      "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                        }
                      },
                      "description": "Set of files containing newline-delimited lists of dictionary phrases."
                    }
                  },
                  "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                }
              },
              "description": "Required. Configuration of the storedInfoType to create."
            },
            "locationId": {
              "type": "string",
              "description": "Deprecated. This field has no effect."
            },
            "storedInfoTypeId": {
              "type": "string",
              "description": "The storedInfoType ID can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one."
            }
          },
          "description": "Request message for CreateStoredInfoType."
        }
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2StoredInfoType",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Resource name."
            },
            "currentVersion": {
              "id": "GooglePrivacyDlpV2StoredInfoTypeVersion",
              "type": "object",
              "properties": {
                "state": {
                  "enum": [
                    "STORED_INFO_TYPE_STATE_UNSPECIFIED",
                    "PENDING",
                    "READY",
                    "FAILED",
                    "INVALID"
                  ],
                  "type": "string",
                  "description": "Stored info type version state. Read-only, updated by the system during dictionary creation.",
                  "enumDescriptions": [
                    "Unused",
                    "StoredInfoType version is being created.",
                    "StoredInfoType version is ready for use.",
                    "StoredInfoType creation failed. All relevant error messages are returned in the `StoredInfoTypeVersion` message.",
                    "StoredInfoType is no longer valid because artifacts stored in user-controlled storage were modified. To fix an invalid StoredInfoType, use the `UpdateStoredInfoType` method to create a new version."
                  ]
                },
                "stats": {
                  "id": "GooglePrivacyDlpV2StoredInfoTypeStats",
                  "type": "object",
                  "properties": {
                    "largeCustomDictionary": {
                      "id": "GooglePrivacyDlpV2LargeCustomDictionaryStats",
                      "type": "object",
                      "properties": {
                        "approxNumPhrases": {
                          "type": "string",
                          "format": "int64",
                          "description": "Approximate number of distinct phrases in the dictionary."
                        }
                      },
                      "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                    }
                  },
                  "description": "Statistics about this storedInfoType version."
                },
                "config": {
                  "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
                  "type": "object",
                  "properties": {
                    "regex": {
                      "id": "GooglePrivacyDlpV2Regex",
                      "type": "object",
                      "properties": {
                        "pattern": {
                          "type": "string",
                          "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                        },
                        "groupIndexes": {
                          "type": "array",
                          "items": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                        }
                      },
                      "description": "Store regular expression-based StoredInfoType."
                    },
                    "dictionary": {
                      "id": "GooglePrivacyDlpV2Dictionary",
                      "type": "object",
                      "properties": {
                        "wordList": {
                          "id": "GooglePrivacyDlpV2WordList",
                          "type": "object",
                          "properties": {
                            "words": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                            }
                          },
                          "description": "List of words or phrases to search for."
                        },
                        "cloudStoragePath": {
                          "id": "GooglePrivacyDlpV2CloudStoragePath",
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                            }
                          },
                          "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                        }
                      },
                      "description": "Store dictionary-based CustomInfoType."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the StoredInfoType (max 256 characters)."
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the StoredInfoType (max 256 characters)."
                    },
                    "largeCustomDictionary": {
                      "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                      "type": "object",
                      "properties": {
                        "outputPath": {
                          "id": "GooglePrivacyDlpV2CloudStoragePath",
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                            }
                          },
                          "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                        },
                        "bigQueryField": {
                          "id": "GooglePrivacyDlpV2BigQueryField",
                          "type": "object",
                          "properties": {
                            "field": {
                              "id": "GooglePrivacyDlpV2FieldId",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name describing the field."
                                }
                              },
                              "description": "General identifier of a data field in a storage service."
                            },
                            "table": {
                              "id": "GooglePrivacyDlpV2BigQueryTable",
                              "type": "object",
                              "properties": {
                                "tableId": {
                                  "type": "string",
                                  "description": "Name of the table."
                                },
                                "datasetId": {
                                  "type": "string",
                                  "description": "Dataset ID of the table."
                                },
                                "projectId": {
                                  "type": "string",
                                  "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                }
                              },
                              "description": "Source table of the field."
                            }
                          },
                          "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                        },
                        "cloudStorageFileSet": {
                          "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                            }
                          },
                          "description": "Set of files containing newline-delimited lists of dictionary phrases."
                        }
                      },
                      "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                    }
                  },
                  "description": "StoredInfoType configuration."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2Error",
                    "type": "object",
                    "properties": {
                      "details": {
                        "id": "GoogleRpcStatus",
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The status code, which should be an enum value of google.rpc.Code."
                          },
                          "details": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "any",
                                "description": "Properties of the object. Contains field @type with type URL."
                              }
                            },
                            "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                          },
                          "message": {
                            "type": "string",
                            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                          }
                        },
                        "description": "Detailed error codes and messages."
                      },
                      "timestamps": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "google-datetime"
                        },
                        "description": "The times the error occurred."
                      }
                    },
                    "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
                  },
                  "description": "Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error."
                },
                "createTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "Create timestamp of the version. Read-only, determined by the system when the version is created."
                }
              },
              "description": "Current version of the stored info type."
            },
            "pendingVersions": {
              "type": "array",
              "items": {
                "id": "GooglePrivacyDlpV2StoredInfoTypeVersion",
                "type": "object",
                "properties": {
                  "state": {
                    "enum": [
                      "STORED_INFO_TYPE_STATE_UNSPECIFIED",
                      "PENDING",
                      "READY",
                      "FAILED",
                      "INVALID"
                    ],
                    "type": "string",
                    "description": "Stored info type version state. Read-only, updated by the system during dictionary creation.",
                    "enumDescriptions": [
                      "Unused",
                      "StoredInfoType version is being created.",
                      "StoredInfoType version is ready for use.",
                      "StoredInfoType creation failed. All relevant error messages are returned in the `StoredInfoTypeVersion` message.",
                      "StoredInfoType is no longer valid because artifacts stored in user-controlled storage were modified. To fix an invalid StoredInfoType, use the `UpdateStoredInfoType` method to create a new version."
                    ]
                  },
                  "stats": {
                    "id": "GooglePrivacyDlpV2StoredInfoTypeStats",
                    "type": "object",
                    "properties": {
                      "largeCustomDictionary": {
                        "id": "GooglePrivacyDlpV2LargeCustomDictionaryStats",
                        "type": "object",
                        "properties": {
                          "approxNumPhrases": {
                            "type": "string",
                            "format": "int64",
                            "description": "Approximate number of distinct phrases in the dictionary."
                          }
                        },
                        "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                      }
                    },
                    "description": "Statistics about this storedInfoType version."
                  },
                  "config": {
                    "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
                    "type": "object",
                    "properties": {
                      "regex": {
                        "id": "GooglePrivacyDlpV2Regex",
                        "type": "object",
                        "properties": {
                          "pattern": {
                            "type": "string",
                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                          },
                          "groupIndexes": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                          }
                        },
                        "description": "Store regular expression-based StoredInfoType."
                      },
                      "dictionary": {
                        "id": "GooglePrivacyDlpV2Dictionary",
                        "type": "object",
                        "properties": {
                          "wordList": {
                            "id": "GooglePrivacyDlpV2WordList",
                            "type": "object",
                            "properties": {
                              "words": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                              }
                            },
                            "description": "List of words or phrases to search for."
                          },
                          "cloudStoragePath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                          }
                        },
                        "description": "Store dictionary-based CustomInfoType."
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the StoredInfoType (max 256 characters)."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Display name of the StoredInfoType (max 256 characters)."
                      },
                      "largeCustomDictionary": {
                        "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                        "type": "object",
                        "properties": {
                          "outputPath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                          },
                          "bigQueryField": {
                            "id": "GooglePrivacyDlpV2BigQueryField",
                            "type": "object",
                            "properties": {
                              "field": {
                                "id": "GooglePrivacyDlpV2FieldId",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name describing the field."
                                  }
                                },
                                "description": "General identifier of a data field in a storage service."
                              },
                              "table": {
                                "id": "GooglePrivacyDlpV2BigQueryTable",
                                "type": "object",
                                "properties": {
                                  "tableId": {
                                    "type": "string",
                                    "description": "Name of the table."
                                  },
                                  "datasetId": {
                                    "type": "string",
                                    "description": "Dataset ID of the table."
                                  },
                                  "projectId": {
                                    "type": "string",
                                    "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                  }
                                },
                                "description": "Source table of the field."
                              }
                            },
                            "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                          },
                          "cloudStorageFileSet": {
                            "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string",
                                "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                              }
                            },
                            "description": "Set of files containing newline-delimited lists of dictionary phrases."
                          }
                        },
                        "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                      }
                    },
                    "description": "StoredInfoType configuration."
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "id": "GooglePrivacyDlpV2Error",
                      "type": "object",
                      "properties": {
                        "details": {
                          "id": "GoogleRpcStatus",
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The status code, which should be an enum value of google.rpc.Code."
                            },
                            "details": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "any",
                                  "description": "Properties of the object. Contains field @type with type URL."
                                }
                              },
                              "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                            },
                            "message": {
                              "type": "string",
                              "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                            }
                          },
                          "description": "Detailed error codes and messages."
                        },
                        "timestamps": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "google-datetime"
                          },
                          "description": "The times the error occurred."
                        }
                      },
                      "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
                    },
                    "description": "Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Create timestamp of the version. Read-only, determined by the system when the version is created."
                  }
                },
                "description": "Version of a StoredInfoType, including the configuration used to build it, create timestamp, and current state."
              },
              "description": "Pending versions of the stored info type. Empty if no versions are pending."
            }
          },
          "description": "StoredInfoType resource message that contains information about the current version and any pending updates."
        }
      ]
  projects.storedInfoTypes.delete:
    description: |-
      Deletes a stored infoType. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.storedInfoTypes/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  projects.storedInfoTypes.get:
    description: |-
      Gets a stored infoType. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.storedInfoTypes/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2StoredInfoType",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Resource name."
            },
            "currentVersion": {
              "id": "GooglePrivacyDlpV2StoredInfoTypeVersion",
              "type": "object",
              "properties": {
                "state": {
                  "enum": [
                    "STORED_INFO_TYPE_STATE_UNSPECIFIED",
                    "PENDING",
                    "READY",
                    "FAILED",
                    "INVALID"
                  ],
                  "type": "string",
                  "description": "Stored info type version state. Read-only, updated by the system during dictionary creation.",
                  "enumDescriptions": [
                    "Unused",
                    "StoredInfoType version is being created.",
                    "StoredInfoType version is ready for use.",
                    "StoredInfoType creation failed. All relevant error messages are returned in the `StoredInfoTypeVersion` message.",
                    "StoredInfoType is no longer valid because artifacts stored in user-controlled storage were modified. To fix an invalid StoredInfoType, use the `UpdateStoredInfoType` method to create a new version."
                  ]
                },
                "stats": {
                  "id": "GooglePrivacyDlpV2StoredInfoTypeStats",
                  "type": "object",
                  "properties": {
                    "largeCustomDictionary": {
                      "id": "GooglePrivacyDlpV2LargeCustomDictionaryStats",
                      "type": "object",
                      "properties": {
                        "approxNumPhrases": {
                          "type": "string",
                          "format": "int64",
                          "description": "Approximate number of distinct phrases in the dictionary."
                        }
                      },
                      "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                    }
                  },
                  "description": "Statistics about this storedInfoType version."
                },
                "config": {
                  "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
                  "type": "object",
                  "properties": {
                    "regex": {
                      "id": "GooglePrivacyDlpV2Regex",
                      "type": "object",
                      "properties": {
                        "pattern": {
                          "type": "string",
                          "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                        },
                        "groupIndexes": {
                          "type": "array",
                          "items": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                        }
                      },
                      "description": "Store regular expression-based StoredInfoType."
                    },
                    "dictionary": {
                      "id": "GooglePrivacyDlpV2Dictionary",
                      "type": "object",
                      "properties": {
                        "wordList": {
                          "id": "GooglePrivacyDlpV2WordList",
                          "type": "object",
                          "properties": {
                            "words": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                            }
                          },
                          "description": "List of words or phrases to search for."
                        },
                        "cloudStoragePath": {
                          "id": "GooglePrivacyDlpV2CloudStoragePath",
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                            }
                          },
                          "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                        }
                      },
                      "description": "Store dictionary-based CustomInfoType."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the StoredInfoType (max 256 characters)."
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the StoredInfoType (max 256 characters)."
                    },
                    "largeCustomDictionary": {
                      "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                      "type": "object",
                      "properties": {
                        "outputPath": {
                          "id": "GooglePrivacyDlpV2CloudStoragePath",
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                            }
                          },
                          "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                        },
                        "bigQueryField": {
                          "id": "GooglePrivacyDlpV2BigQueryField",
                          "type": "object",
                          "properties": {
                            "field": {
                              "id": "GooglePrivacyDlpV2FieldId",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name describing the field."
                                }
                              },
                              "description": "General identifier of a data field in a storage service."
                            },
                            "table": {
                              "id": "GooglePrivacyDlpV2BigQueryTable",
                              "type": "object",
                              "properties": {
                                "tableId": {
                                  "type": "string",
                                  "description": "Name of the table."
                                },
                                "datasetId": {
                                  "type": "string",
                                  "description": "Dataset ID of the table."
                                },
                                "projectId": {
                                  "type": "string",
                                  "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                }
                              },
                              "description": "Source table of the field."
                            }
                          },
                          "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                        },
                        "cloudStorageFileSet": {
                          "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                            }
                          },
                          "description": "Set of files containing newline-delimited lists of dictionary phrases."
                        }
                      },
                      "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                    }
                  },
                  "description": "StoredInfoType configuration."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2Error",
                    "type": "object",
                    "properties": {
                      "details": {
                        "id": "GoogleRpcStatus",
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The status code, which should be an enum value of google.rpc.Code."
                          },
                          "details": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "any",
                                "description": "Properties of the object. Contains field @type with type URL."
                              }
                            },
                            "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                          },
                          "message": {
                            "type": "string",
                            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                          }
                        },
                        "description": "Detailed error codes and messages."
                      },
                      "timestamps": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "google-datetime"
                        },
                        "description": "The times the error occurred."
                      }
                    },
                    "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
                  },
                  "description": "Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error."
                },
                "createTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "Create timestamp of the version. Read-only, determined by the system when the version is created."
                }
              },
              "description": "Current version of the stored info type."
            },
            "pendingVersions": {
              "type": "array",
              "items": {
                "id": "GooglePrivacyDlpV2StoredInfoTypeVersion",
                "type": "object",
                "properties": {
                  "state": {
                    "enum": [
                      "STORED_INFO_TYPE_STATE_UNSPECIFIED",
                      "PENDING",
                      "READY",
                      "FAILED",
                      "INVALID"
                    ],
                    "type": "string",
                    "description": "Stored info type version state. Read-only, updated by the system during dictionary creation.",
                    "enumDescriptions": [
                      "Unused",
                      "StoredInfoType version is being created.",
                      "StoredInfoType version is ready for use.",
                      "StoredInfoType creation failed. All relevant error messages are returned in the `StoredInfoTypeVersion` message.",
                      "StoredInfoType is no longer valid because artifacts stored in user-controlled storage were modified. To fix an invalid StoredInfoType, use the `UpdateStoredInfoType` method to create a new version."
                    ]
                  },
                  "stats": {
                    "id": "GooglePrivacyDlpV2StoredInfoTypeStats",
                    "type": "object",
                    "properties": {
                      "largeCustomDictionary": {
                        "id": "GooglePrivacyDlpV2LargeCustomDictionaryStats",
                        "type": "object",
                        "properties": {
                          "approxNumPhrases": {
                            "type": "string",
                            "format": "int64",
                            "description": "Approximate number of distinct phrases in the dictionary."
                          }
                        },
                        "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                      }
                    },
                    "description": "Statistics about this storedInfoType version."
                  },
                  "config": {
                    "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
                    "type": "object",
                    "properties": {
                      "regex": {
                        "id": "GooglePrivacyDlpV2Regex",
                        "type": "object",
                        "properties": {
                          "pattern": {
                            "type": "string",
                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                          },
                          "groupIndexes": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                          }
                        },
                        "description": "Store regular expression-based StoredInfoType."
                      },
                      "dictionary": {
                        "id": "GooglePrivacyDlpV2Dictionary",
                        "type": "object",
                        "properties": {
                          "wordList": {
                            "id": "GooglePrivacyDlpV2WordList",
                            "type": "object",
                            "properties": {
                              "words": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                              }
                            },
                            "description": "List of words or phrases to search for."
                          },
                          "cloudStoragePath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                          }
                        },
                        "description": "Store dictionary-based CustomInfoType."
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the StoredInfoType (max 256 characters)."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Display name of the StoredInfoType (max 256 characters)."
                      },
                      "largeCustomDictionary": {
                        "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                        "type": "object",
                        "properties": {
                          "outputPath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                          },
                          "bigQueryField": {
                            "id": "GooglePrivacyDlpV2BigQueryField",
                            "type": "object",
                            "properties": {
                              "field": {
                                "id": "GooglePrivacyDlpV2FieldId",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name describing the field."
                                  }
                                },
                                "description": "General identifier of a data field in a storage service."
                              },
                              "table": {
                                "id": "GooglePrivacyDlpV2BigQueryTable",
                                "type": "object",
                                "properties": {
                                  "tableId": {
                                    "type": "string",
                                    "description": "Name of the table."
                                  },
                                  "datasetId": {
                                    "type": "string",
                                    "description": "Dataset ID of the table."
                                  },
                                  "projectId": {
                                    "type": "string",
                                    "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                  }
                                },
                                "description": "Source table of the field."
                              }
                            },
                            "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                          },
                          "cloudStorageFileSet": {
                            "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string",
                                "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                              }
                            },
                            "description": "Set of files containing newline-delimited lists of dictionary phrases."
                          }
                        },
                        "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                      }
                    },
                    "description": "StoredInfoType configuration."
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "id": "GooglePrivacyDlpV2Error",
                      "type": "object",
                      "properties": {
                        "details": {
                          "id": "GoogleRpcStatus",
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The status code, which should be an enum value of google.rpc.Code."
                            },
                            "details": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "any",
                                  "description": "Properties of the object. Contains field @type with type URL."
                                }
                              },
                              "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                            },
                            "message": {
                              "type": "string",
                              "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                            }
                          },
                          "description": "Detailed error codes and messages."
                        },
                        "timestamps": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "google-datetime"
                          },
                          "description": "The times the error occurred."
                        }
                      },
                      "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
                    },
                    "description": "Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Create timestamp of the version. Read-only, determined by the system when the version is created."
                  }
                },
                "description": "Version of a StoredInfoType, including the configuration used to build it, create timestamp, and current state."
              },
              "description": "Pending versions of the stored info type. Empty if no versions are pending."
            }
          },
          "description": "StoredInfoType resource message that contains information about the current version and any pending updates."
        }
      ]
  projects.storedInfoTypes.list:
    description: |-
      Lists stored infoTypes. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.storedInfoTypes/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2ListStoredInfoTypesResponse",
          "type": "object",
          "properties": {
            "nextPageToken": {
              "type": "string",
              "description": "If the next page is available then the next page token to be used in following ListStoredInfoTypes request."
            },
            "storedInfoTypes": {
              "type": "array",
              "items": {
                "id": "GooglePrivacyDlpV2StoredInfoType",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Resource name."
                  },
                  "currentVersion": {
                    "id": "GooglePrivacyDlpV2StoredInfoTypeVersion",
                    "type": "object",
                    "properties": {
                      "state": {
                        "enum": [
                          "STORED_INFO_TYPE_STATE_UNSPECIFIED",
                          "PENDING",
                          "READY",
                          "FAILED",
                          "INVALID"
                        ],
                        "type": "string",
                        "description": "Stored info type version state. Read-only, updated by the system during dictionary creation.",
                        "enumDescriptions": [
                          "Unused",
                          "StoredInfoType version is being created.",
                          "StoredInfoType version is ready for use.",
                          "StoredInfoType creation failed. All relevant error messages are returned in the `StoredInfoTypeVersion` message.",
                          "StoredInfoType is no longer valid because artifacts stored in user-controlled storage were modified. To fix an invalid StoredInfoType, use the `UpdateStoredInfoType` method to create a new version."
                        ]
                      },
                      "stats": {
                        "id": "GooglePrivacyDlpV2StoredInfoTypeStats",
                        "type": "object",
                        "properties": {
                          "largeCustomDictionary": {
                            "id": "GooglePrivacyDlpV2LargeCustomDictionaryStats",
                            "type": "object",
                            "properties": {
                              "approxNumPhrases": {
                                "type": "string",
                                "format": "int64",
                                "description": "Approximate number of distinct phrases in the dictionary."
                              }
                            },
                            "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                          }
                        },
                        "description": "Statistics about this storedInfoType version."
                      },
                      "config": {
                        "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
                        "type": "object",
                        "properties": {
                          "regex": {
                            "id": "GooglePrivacyDlpV2Regex",
                            "type": "object",
                            "properties": {
                              "pattern": {
                                "type": "string",
                                "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                              },
                              "groupIndexes": {
                                "type": "array",
                                "items": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                              }
                            },
                            "description": "Store regular expression-based StoredInfoType."
                          },
                          "dictionary": {
                            "id": "GooglePrivacyDlpV2Dictionary",
                            "type": "object",
                            "properties": {
                              "wordList": {
                                "id": "GooglePrivacyDlpV2WordList",
                                "type": "object",
                                "properties": {
                                  "words": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                  }
                                },
                                "description": "List of words or phrases to search for."
                              },
                              "cloudStoragePath": {
                                "id": "GooglePrivacyDlpV2CloudStoragePath",
                                "type": "object",
                                "properties": {
                                  "path": {
                                    "type": "string",
                                    "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                  }
                                },
                                "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                              }
                            },
                            "description": "Store dictionary-based CustomInfoType."
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the StoredInfoType (max 256 characters)."
                          },
                          "displayName": {
                            "type": "string",
                            "description": "Display name of the StoredInfoType (max 256 characters)."
                          },
                          "largeCustomDictionary": {
                            "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                            "type": "object",
                            "properties": {
                              "outputPath": {
                                "id": "GooglePrivacyDlpV2CloudStoragePath",
                                "type": "object",
                                "properties": {
                                  "path": {
                                    "type": "string",
                                    "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                  }
                                },
                                "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                              },
                              "bigQueryField": {
                                "id": "GooglePrivacyDlpV2BigQueryField",
                                "type": "object",
                                "properties": {
                                  "field": {
                                    "id": "GooglePrivacyDlpV2FieldId",
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name describing the field."
                                      }
                                    },
                                    "description": "General identifier of a data field in a storage service."
                                  },
                                  "table": {
                                    "id": "GooglePrivacyDlpV2BigQueryTable",
                                    "type": "object",
                                    "properties": {
                                      "tableId": {
                                        "type": "string",
                                        "description": "Name of the table."
                                      },
                                      "datasetId": {
                                        "type": "string",
                                        "description": "Dataset ID of the table."
                                      },
                                      "projectId": {
                                        "type": "string",
                                        "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                      }
                                    },
                                    "description": "Source table of the field."
                                  }
                                },
                                "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                              },
                              "cloudStorageFileSet": {
                                "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                                  }
                                },
                                "description": "Set of files containing newline-delimited lists of dictionary phrases."
                              }
                            },
                            "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                          }
                        },
                        "description": "StoredInfoType configuration."
                      },
                      "errors": {
                        "type": "array",
                        "items": {
                          "id": "GooglePrivacyDlpV2Error",
                          "type": "object",
                          "properties": {
                            "details": {
                              "id": "GoogleRpcStatus",
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The status code, which should be an enum value of google.rpc.Code."
                                },
                                "details": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "any",
                                      "description": "Properties of the object. Contains field @type with type URL."
                                    }
                                  },
                                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                                },
                                "message": {
                                  "type": "string",
                                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                                }
                              },
                              "description": "Detailed error codes and messages."
                            },
                            "timestamps": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "format": "google-datetime"
                              },
                              "description": "The times the error occurred."
                            }
                          },
                          "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
                        },
                        "description": "Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error."
                      },
                      "createTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "Create timestamp of the version. Read-only, determined by the system when the version is created."
                      }
                    },
                    "description": "Current version of the stored info type."
                  },
                  "pendingVersions": {
                    "type": "array",
                    "items": {
                      "id": "GooglePrivacyDlpV2StoredInfoTypeVersion",
                      "type": "object",
                      "properties": {
                        "state": {
                          "enum": [
                            "STORED_INFO_TYPE_STATE_UNSPECIFIED",
                            "PENDING",
                            "READY",
                            "FAILED",
                            "INVALID"
                          ],
                          "type": "string",
                          "description": "Stored info type version state. Read-only, updated by the system during dictionary creation.",
                          "enumDescriptions": [
                            "Unused",
                            "StoredInfoType version is being created.",
                            "StoredInfoType version is ready for use.",
                            "StoredInfoType creation failed. All relevant error messages are returned in the `StoredInfoTypeVersion` message.",
                            "StoredInfoType is no longer valid because artifacts stored in user-controlled storage were modified. To fix an invalid StoredInfoType, use the `UpdateStoredInfoType` method to create a new version."
                          ]
                        },
                        "stats": {
                          "id": "GooglePrivacyDlpV2StoredInfoTypeStats",
                          "type": "object",
                          "properties": {
                            "largeCustomDictionary": {
                              "id": "GooglePrivacyDlpV2LargeCustomDictionaryStats",
                              "type": "object",
                              "properties": {
                                "approxNumPhrases": {
                                  "type": "string",
                                  "format": "int64",
                                  "description": "Approximate number of distinct phrases in the dictionary."
                                }
                              },
                              "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                            }
                          },
                          "description": "Statistics about this storedInfoType version."
                        },
                        "config": {
                          "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
                          "type": "object",
                          "properties": {
                            "regex": {
                              "id": "GooglePrivacyDlpV2Regex",
                              "type": "object",
                              "properties": {
                                "pattern": {
                                  "type": "string",
                                  "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                                },
                                "groupIndexes": {
                                  "type": "array",
                                  "items": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                                }
                              },
                              "description": "Store regular expression-based StoredInfoType."
                            },
                            "dictionary": {
                              "id": "GooglePrivacyDlpV2Dictionary",
                              "type": "object",
                              "properties": {
                                "wordList": {
                                  "id": "GooglePrivacyDlpV2WordList",
                                  "type": "object",
                                  "properties": {
                                    "words": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                                    }
                                  },
                                  "description": "List of words or phrases to search for."
                                },
                                "cloudStoragePath": {
                                  "id": "GooglePrivacyDlpV2CloudStoragePath",
                                  "type": "object",
                                  "properties": {
                                    "path": {
                                      "type": "string",
                                      "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                    }
                                  },
                                  "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                                }
                              },
                              "description": "Store dictionary-based CustomInfoType."
                            },
                            "description": {
                              "type": "string",
                              "description": "Description of the StoredInfoType (max 256 characters)."
                            },
                            "displayName": {
                              "type": "string",
                              "description": "Display name of the StoredInfoType (max 256 characters)."
                            },
                            "largeCustomDictionary": {
                              "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                              "type": "object",
                              "properties": {
                                "outputPath": {
                                  "id": "GooglePrivacyDlpV2CloudStoragePath",
                                  "type": "object",
                                  "properties": {
                                    "path": {
                                      "type": "string",
                                      "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                                    }
                                  },
                                  "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                                },
                                "bigQueryField": {
                                  "id": "GooglePrivacyDlpV2BigQueryField",
                                  "type": "object",
                                  "properties": {
                                    "field": {
                                      "id": "GooglePrivacyDlpV2FieldId",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Name describing the field."
                                        }
                                      },
                                      "description": "General identifier of a data field in a storage service."
                                    },
                                    "table": {
                                      "id": "GooglePrivacyDlpV2BigQueryTable",
                                      "type": "object",
                                      "properties": {
                                        "tableId": {
                                          "type": "string",
                                          "description": "Name of the table."
                                        },
                                        "datasetId": {
                                          "type": "string",
                                          "description": "Dataset ID of the table."
                                        },
                                        "projectId": {
                                          "type": "string",
                                          "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                        }
                                      },
                                      "description": "Source table of the field."
                                    }
                                  },
                                  "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                                },
                                "cloudStorageFileSet": {
                                  "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                                  "type": "object",
                                  "properties": {
                                    "url": {
                                      "type": "string",
                                      "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                                    }
                                  },
                                  "description": "Set of files containing newline-delimited lists of dictionary phrases."
                                }
                              },
                              "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                            }
                          },
                          "description": "StoredInfoType configuration."
                        },
                        "errors": {
                          "type": "array",
                          "items": {
                            "id": "GooglePrivacyDlpV2Error",
                            "type": "object",
                            "properties": {
                              "details": {
                                "id": "GoogleRpcStatus",
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The status code, which should be an enum value of google.rpc.Code."
                                  },
                                  "details": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "any",
                                        "description": "Properties of the object. Contains field @type with type URL."
                                      }
                                    },
                                    "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                                  },
                                  "message": {
                                    "type": "string",
                                    "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                                  }
                                },
                                "description": "Detailed error codes and messages."
                              },
                              "timestamps": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "format": "google-datetime"
                                },
                                "description": "The times the error occurred."
                              }
                            },
                            "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
                          },
                          "description": "Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error."
                        },
                        "createTime": {
                          "type": "string",
                          "format": "google-datetime",
                          "description": "Create timestamp of the version. Read-only, determined by the system when the version is created."
                        }
                      },
                      "description": "Version of a StoredInfoType, including the configuration used to build it, create timestamp, and current state."
                    },
                    "description": "Pending versions of the stored info type. Empty if no versions are pending."
                  }
                },
                "description": "StoredInfoType resource message that contains information about the current version and any pending updates."
              },
              "description": "List of storedInfoTypes, up to page_size in ListStoredInfoTypesRequest."
            }
          },
          "description": "Response message for ListStoredInfoTypes."
        }
      ]
  projects.storedInfoTypes.patch:
    description: |-
      Updates the stored infoType by creating a new version. The existing version will continue to be used until the new version is ready. See https://cloud.google.com/dlp/docs/creating-stored-infotypes to learn more.
    versions:
      from: 2.0.0
    link: https://cloud.google.com/dlp/docs/reference/rest/v2/projects.storedInfoTypes/patch
    example:
      inputs: [
        {
          "id": "GooglePrivacyDlpV2UpdateStoredInfoTypeRequest",
          "type": "object",
          "properties": {
            "config": {
              "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
              "type": "object",
              "properties": {
                "regex": {
                  "id": "GooglePrivacyDlpV2Regex",
                  "type": "object",
                  "properties": {
                    "pattern": {
                      "type": "string",
                      "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                    },
                    "groupIndexes": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                    }
                  },
                  "description": "Store regular expression-based StoredInfoType."
                },
                "dictionary": {
                  "id": "GooglePrivacyDlpV2Dictionary",
                  "type": "object",
                  "properties": {
                    "wordList": {
                      "id": "GooglePrivacyDlpV2WordList",
                      "type": "object",
                      "properties": {
                        "words": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                        }
                      },
                      "description": "List of words or phrases to search for."
                    },
                    "cloudStoragePath": {
                      "id": "GooglePrivacyDlpV2CloudStoragePath",
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                        }
                      },
                      "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                    }
                  },
                  "description": "Store dictionary-based CustomInfoType."
                },
                "description": {
                  "type": "string",
                  "description": "Description of the StoredInfoType (max 256 characters)."
                },
                "displayName": {
                  "type": "string",
                  "description": "Display name of the StoredInfoType (max 256 characters)."
                },
                "largeCustomDictionary": {
                  "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                  "type": "object",
                  "properties": {
                    "outputPath": {
                      "id": "GooglePrivacyDlpV2CloudStoragePath",
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                        }
                      },
                      "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                    },
                    "bigQueryField": {
                      "id": "GooglePrivacyDlpV2BigQueryField",
                      "type": "object",
                      "properties": {
                        "field": {
                          "id": "GooglePrivacyDlpV2FieldId",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name describing the field."
                            }
                          },
                          "description": "General identifier of a data field in a storage service."
                        },
                        "table": {
                          "id": "GooglePrivacyDlpV2BigQueryTable",
                          "type": "object",
                          "properties": {
                            "tableId": {
                              "type": "string",
                              "description": "Name of the table."
                            },
                            "datasetId": {
                              "type": "string",
                              "description": "Dataset ID of the table."
                            },
                            "projectId": {
                              "type": "string",
                              "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                            }
                          },
                          "description": "Source table of the field."
                        }
                      },
                      "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                    },
                    "cloudStorageFileSet": {
                      "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                        }
                      },
                      "description": "Set of files containing newline-delimited lists of dictionary phrases."
                    }
                  },
                  "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                }
              },
              "description": "Updated configuration for the storedInfoType. If not provided, a new version of the storedInfoType will be created with the existing configuration."
            },
            "updateMask": {
              "type": "string",
              "format": "google-fieldmask",
              "description": "Mask to control which fields get updated."
            }
          },
          "description": "Request message for UpdateStoredInfoType."
        }
      ]
      outputs: [
        {
          "id": "GooglePrivacyDlpV2StoredInfoType",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Resource name."
            },
            "currentVersion": {
              "id": "GooglePrivacyDlpV2StoredInfoTypeVersion",
              "type": "object",
              "properties": {
                "state": {
                  "enum": [
                    "STORED_INFO_TYPE_STATE_UNSPECIFIED",
                    "PENDING",
                    "READY",
                    "FAILED",
                    "INVALID"
                  ],
                  "type": "string",
                  "description": "Stored info type version state. Read-only, updated by the system during dictionary creation.",
                  "enumDescriptions": [
                    "Unused",
                    "StoredInfoType version is being created.",
                    "StoredInfoType version is ready for use.",
                    "StoredInfoType creation failed. All relevant error messages are returned in the `StoredInfoTypeVersion` message.",
                    "StoredInfoType is no longer valid because artifacts stored in user-controlled storage were modified. To fix an invalid StoredInfoType, use the `UpdateStoredInfoType` method to create a new version."
                  ]
                },
                "stats": {
                  "id": "GooglePrivacyDlpV2StoredInfoTypeStats",
                  "type": "object",
                  "properties": {
                    "largeCustomDictionary": {
                      "id": "GooglePrivacyDlpV2LargeCustomDictionaryStats",
                      "type": "object",
                      "properties": {
                        "approxNumPhrases": {
                          "type": "string",
                          "format": "int64",
                          "description": "Approximate number of distinct phrases in the dictionary."
                        }
                      },
                      "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                    }
                  },
                  "description": "Statistics about this storedInfoType version."
                },
                "config": {
                  "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
                  "type": "object",
                  "properties": {
                    "regex": {
                      "id": "GooglePrivacyDlpV2Regex",
                      "type": "object",
                      "properties": {
                        "pattern": {
                          "type": "string",
                          "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                        },
                        "groupIndexes": {
                          "type": "array",
                          "items": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                        }
                      },
                      "description": "Store regular expression-based StoredInfoType."
                    },
                    "dictionary": {
                      "id": "GooglePrivacyDlpV2Dictionary",
                      "type": "object",
                      "properties": {
                        "wordList": {
                          "id": "GooglePrivacyDlpV2WordList",
                          "type": "object",
                          "properties": {
                            "words": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                            }
                          },
                          "description": "List of words or phrases to search for."
                        },
                        "cloudStoragePath": {
                          "id": "GooglePrivacyDlpV2CloudStoragePath",
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                            }
                          },
                          "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                        }
                      },
                      "description": "Store dictionary-based CustomInfoType."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the StoredInfoType (max 256 characters)."
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the StoredInfoType (max 256 characters)."
                    },
                    "largeCustomDictionary": {
                      "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                      "type": "object",
                      "properties": {
                        "outputPath": {
                          "id": "GooglePrivacyDlpV2CloudStoragePath",
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                            }
                          },
                          "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                        },
                        "bigQueryField": {
                          "id": "GooglePrivacyDlpV2BigQueryField",
                          "type": "object",
                          "properties": {
                            "field": {
                              "id": "GooglePrivacyDlpV2FieldId",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name describing the field."
                                }
                              },
                              "description": "General identifier of a data field in a storage service."
                            },
                            "table": {
                              "id": "GooglePrivacyDlpV2BigQueryTable",
                              "type": "object",
                              "properties": {
                                "tableId": {
                                  "type": "string",
                                  "description": "Name of the table."
                                },
                                "datasetId": {
                                  "type": "string",
                                  "description": "Dataset ID of the table."
                                },
                                "projectId": {
                                  "type": "string",
                                  "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                }
                              },
                              "description": "Source table of the field."
                            }
                          },
                          "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                        },
                        "cloudStorageFileSet": {
                          "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                            }
                          },
                          "description": "Set of files containing newline-delimited lists of dictionary phrases."
                        }
                      },
                      "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                    }
                  },
                  "description": "StoredInfoType configuration."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "GooglePrivacyDlpV2Error",
                    "type": "object",
                    "properties": {
                      "details": {
                        "id": "GoogleRpcStatus",
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The status code, which should be an enum value of google.rpc.Code."
                          },
                          "details": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "any",
                                "description": "Properties of the object. Contains field @type with type URL."
                              }
                            },
                            "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                          },
                          "message": {
                            "type": "string",
                            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                          }
                        },
                        "description": "Detailed error codes and messages."
                      },
                      "timestamps": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "google-datetime"
                        },
                        "description": "The times the error occurred."
                      }
                    },
                    "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
                  },
                  "description": "Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error."
                },
                "createTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "Create timestamp of the version. Read-only, determined by the system when the version is created."
                }
              },
              "description": "Current version of the stored info type."
            },
            "pendingVersions": {
              "type": "array",
              "items": {
                "id": "GooglePrivacyDlpV2StoredInfoTypeVersion",
                "type": "object",
                "properties": {
                  "state": {
                    "enum": [
                      "STORED_INFO_TYPE_STATE_UNSPECIFIED",
                      "PENDING",
                      "READY",
                      "FAILED",
                      "INVALID"
                    ],
                    "type": "string",
                    "description": "Stored info type version state. Read-only, updated by the system during dictionary creation.",
                    "enumDescriptions": [
                      "Unused",
                      "StoredInfoType version is being created.",
                      "StoredInfoType version is ready for use.",
                      "StoredInfoType creation failed. All relevant error messages are returned in the `StoredInfoTypeVersion` message.",
                      "StoredInfoType is no longer valid because artifacts stored in user-controlled storage were modified. To fix an invalid StoredInfoType, use the `UpdateStoredInfoType` method to create a new version."
                    ]
                  },
                  "stats": {
                    "id": "GooglePrivacyDlpV2StoredInfoTypeStats",
                    "type": "object",
                    "properties": {
                      "largeCustomDictionary": {
                        "id": "GooglePrivacyDlpV2LargeCustomDictionaryStats",
                        "type": "object",
                        "properties": {
                          "approxNumPhrases": {
                            "type": "string",
                            "format": "int64",
                            "description": "Approximate number of distinct phrases in the dictionary."
                          }
                        },
                        "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                      }
                    },
                    "description": "Statistics about this storedInfoType version."
                  },
                  "config": {
                    "id": "GooglePrivacyDlpV2StoredInfoTypeConfig",
                    "type": "object",
                    "properties": {
                      "regex": {
                        "id": "GooglePrivacyDlpV2Regex",
                        "type": "object",
                        "properties": {
                          "pattern": {
                            "type": "string",
                            "description": "Pattern defining the regular expression. Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub."
                          },
                          "groupIndexes": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "description": "The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included."
                          }
                        },
                        "description": "Store regular expression-based StoredInfoType."
                      },
                      "dictionary": {
                        "id": "GooglePrivacyDlpV2Dictionary",
                        "type": "object",
                        "properties": {
                          "wordList": {
                            "id": "GooglePrivacyDlpV2WordList",
                            "type": "object",
                            "properties": {
                              "words": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Words or phrases defining the dictionary. The dictionary must contain at least one phrase and every phrase must contain at least 2 characters that are letters or digits. [required]"
                              }
                            },
                            "description": "List of words or phrases to search for."
                          },
                          "cloudStoragePath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Newline-delimited file of words in Cloud Storage. Only a single file is accepted."
                          }
                        },
                        "description": "Store dictionary-based CustomInfoType."
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the StoredInfoType (max 256 characters)."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Display name of the StoredInfoType (max 256 characters)."
                      },
                      "largeCustomDictionary": {
                        "id": "GooglePrivacyDlpV2LargeCustomDictionaryConfig",
                        "type": "object",
                        "properties": {
                          "outputPath": {
                            "id": "GooglePrivacyDlpV2CloudStoragePath",
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "A url representing a file or path (no wildcards) in Cloud Storage. Example: gs://[BUCKET_NAME]/dictionary.txt"
                              }
                            },
                            "description": "Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API. If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used."
                          },
                          "bigQueryField": {
                            "id": "GooglePrivacyDlpV2BigQueryField",
                            "type": "object",
                            "properties": {
                              "field": {
                                "id": "GooglePrivacyDlpV2FieldId",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name describing the field."
                                  }
                                },
                                "description": "General identifier of a data field in a storage service."
                              },
                              "table": {
                                "id": "GooglePrivacyDlpV2BigQueryTable",
                                "type": "object",
                                "properties": {
                                  "tableId": {
                                    "type": "string",
                                    "description": "Name of the table."
                                  },
                                  "datasetId": {
                                    "type": "string",
                                    "description": "Dataset ID of the table."
                                  },
                                  "projectId": {
                                    "type": "string",
                                    "description": "The Google Cloud Platform project ID of the project containing the table. If omitted, project ID is inferred from the API call."
                                  }
                                },
                                "description": "Source table of the field."
                              }
                            },
                            "description": "Field in a BigQuery table where each cell represents a dictionary phrase."
                          },
                          "cloudStorageFileSet": {
                            "id": "GooglePrivacyDlpV2CloudStorageFileSet",
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string",
                                "description": "The url, in the format `gs:///`. Trailing wildcard in the path is allowed."
                              }
                            },
                            "description": "Set of files containing newline-delimited lists of dictionary phrases."
                          }
                        },
                        "description": "StoredInfoType where findings are defined by a dictionary of phrases."
                      }
                    },
                    "description": "StoredInfoType configuration."
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "id": "GooglePrivacyDlpV2Error",
                      "type": "object",
                      "properties": {
                        "details": {
                          "id": "GoogleRpcStatus",
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The status code, which should be an enum value of google.rpc.Code."
                            },
                            "details": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "any",
                                  "description": "Properties of the object. Contains field @type with type URL."
                                }
                              },
                              "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                            },
                            "message": {
                              "type": "string",
                              "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                            }
                          },
                          "description": "Detailed error codes and messages."
                        },
                        "timestamps": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "google-datetime"
                          },
                          "description": "The times the error occurred."
                        }
                      },
                      "description": "Details information about an error encountered during job execution or the results of an unsuccessful activation of the JobTrigger."
                    },
                    "description": "Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Google Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Create timestamp of the version. Read-only, determined by the system when the version is created."
                  }
                },
                "description": "Version of a StoredInfoType, including the configuration used to build it, create timestamp, and current state."
              },
              "description": "Pending versions of the stored info type. Empty if no versions are pending."
            }
          },
          "description": "StoredInfoType resource message that contains information about the current version and any pending updates."
        }
      ]