Product:
  name: GCP Deployment Manager
  versions: [1.0.0]
  package: google.gcp.deploymentmanager
  description: |-
    Cloud Deployment Manager
  link: https://cloud.google.com/deployment-manager
  contentType: json
Operations:
  deploymentmanager.deployments.cancelPreview:
    description: |-
      Cancels and removes the preview currently associated with the deployment.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/docs/reference/latest/deployments/cancelPreview
    example:
      inputs: [
        {
          "id": "DeploymentsCancelPreviewRequest",
          "type": "object",
          "properties": {
            "fingerprint": {
              "type": "string",
              "format": "byte",
              "description": "Specifies a fingerprint for `cancelPreview()` requests. A fingerprint is a randomly generated value that must be provided in `cancelPreview()` requests to perform optimistic locking. This ensures optimistic concurrency so that the deployment does not have conflicting requests (e.g. if someone attempts to make a new update request while another user attempts to cancel a preview, this would prevent one of the requests). The fingerprint is initially generated by Deployment Manager and changes after every request to modify a deployment. To get the latest fingerprint value, perform a `get()` request on the deployment."
            }
          }
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uint64",
              "description": "[Output Only] The unique identifier for the operation. This identifier is defined by the server."
            },
            "kind": {
              "type": "string",
              "default": "deploymentmanager#operation",
              "description": "[Output Only] Type of the resource. Always `compute#operation` for Operation resources."
            },
            "name": {
              "type": "string",
              "description": "[Output Only] Name of the operation."
            },
            "user": {
              "type": "string",
              "description": "[Output Only] User who requested the operation, for example: `user@example.com`."
            },
            "zone": {
              "type": "string",
              "description": "[Output Only] The URL of the zone where the operation resides. Only applicable when performing per-zone operations."
            },
            "error": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "[Output Only] The error type identifier for this error."
                      },
                      "message": {
                        "type": "string",
                        "description": "[Output Only] An optional, human-readable error message."
                      },
                      "location": {
                        "type": "string",
                        "description": "[Output Only] Indicates the field in the request that caused the error. This property is optional."
                      }
                    }
                  },
                  "description": "[Output Only] The array of errors encountered while processing this operation."
                }
              },
              "description": "[Output Only] If errors are generated during processing of the operation, this field will be populated."
            },
            "region": {
              "type": "string",
              "description": "[Output Only] The URL of the region where the operation resides. Only applicable when performing regional operations."
            },
            "status": {
              "enum": [
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "[Output Only] The status of the operation, which can be one of the following: `PENDING`, `RUNNING`, or `DONE`.",
              "enumDescriptions": [
                "",
                "",
                ""
              ]
            },
            "endTime": {
              "type": "string",
              "description": "[Output Only] The time that this operation was completed. This value is in RFC3339 text format."
            },
            "progress": {
              "type": "integer",
              "format": "int32",
              "description": "[Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses."
            },
            "selfLink": {
              "type": "string",
              "description": "[Output Only] Server-defined URL for the resource."
            },
            "targetId": {
              "type": "string",
              "format": "uint64",
              "description": "[Output Only] The unique target ID, which identifies a specific incarnation of the target resource."
            },
            "warnings": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "code": {
                    "enum": [
                      "DEPRECATED_RESOURCE_USED",
                      "NO_RESULTS_ON_PAGE",
                      "UNREACHABLE",
                      "NEXT_HOP_ADDRESS_NOT_ASSIGNED",
                      "NEXT_HOP_INSTANCE_NOT_FOUND",
                      "NEXT_HOP_INSTANCE_NOT_ON_NETWORK",
                      "NEXT_HOP_CANNOT_IP_FORWARD",
                      "NEXT_HOP_NOT_RUNNING",
                      "INJECTED_KERNELS_DEPRECATED",
                      "REQUIRED_TOS_AGREEMENT",
                      "DISK_SIZE_LARGER_THAN_IMAGE_SIZE",
                      "RESOURCE_NOT_DELETED",
                      "SINGLE_INSTANCE_PROPERTY_TEMPLATE",
                      "NOT_CRITICAL_ERROR",
                      "CLEANUP_FAILED",
                      "FIELD_VALUE_OVERRIDEN",
                      "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING",
                      "MISSING_TYPE_DEPENDENCY",
                      "EXTERNAL_API_WARNING",
                      "SCHEMA_VALIDATION_IGNORED",
                      "UNDECLARED_PROPERTIES",
                      "EXPERIMENTAL_TYPE_USED",
                      "DEPRECATED_TYPE_USED",
                      "PARTIAL_SUCCESS",
                      "LARGE_DEPLOYMENT_WARNING"
                    ],
                    "type": "string",
                    "description": "[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.",
                    "enumDescriptions": [
                      "A link to a deprecated resource was created.",
                      "No results are present on a particular list page.",
                      "A given scope cannot be reached.",
                      "The route's nextHopIp address is not assigned to an instance on the network.",
                      "The route's nextHopInstance URL refers to an instance that does not exist.",
                      "The route's nextHopInstance URL refers to an instance that is not on the same network as the route.",
                      "The route's next hop instance cannot ip forward.",
                      "The route's next hop instance does not have a status of RUNNING.",
                      "The operation involved use of an injected kernel, which is deprecated.",
                      "The user attempted to use a resource that requires a TOS they have not accepted.",
                      "The user created a boot disk that is larger than image size.",
                      "One or more of the resources set to auto-delete could not be deleted because they were in use.",
                      "Instance template used in instance group manager is valid as such, but its application does not make a lot of sense, because it allows only single instance in instance group.",
                      "Error which is not critical. We decided to continue the process despite the mentioned error.",
                      "Warning about failed cleanup of transient changes made by a failed operation.",
                      "Warning that value of a field has been overridden. Deprecated unused field.",
                      "Warning that a resource is in use.",
                      "A resource depends on a missing type",
                      "Warning that is present in an external api call",
                      "When a resource schema validation is ignored.",
                      "When undeclared properties in the schema are present",
                      "When deploying and at least one of the resources has a type marked as experimental",
                      "When deploying and at least one of the resources has a type marked as deprecated",
                      "Success is reported, but some results may be missing due to errors",
                      "When deploying a deployment with a exceedingly large number of resources"
                    ]
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding)."
                        },
                        "value": {
                          "type": "string",
                          "description": "[Output Only] A warning data value corresponding to the key."
                        }
                      }
                    },
                    "description": "[Output Only] Metadata about this warning in key: value format. For example: \"data\": [ { \"key\": \"scope\", \"value\": \"zones/us-east1-d\" } "
                  },
                  "message": {
                    "type": "string",
                    "description": "[Output Only] A human-readable description of the warning code."
                  }
                }
              },
              "description": "[Output Only] If warning messages are generated during processing of the operation, this field will be populated."
            },
            "startTime": {
              "type": "string",
              "description": "[Output Only] The time that this operation was started by the server. This value is in RFC3339 text format."
            },
            "insertTime": {
              "type": "string",
              "description": "[Output Only] The time that this operation was requested. This value is in RFC3339 text format."
            },
            "targetLink": {
              "type": "string",
              "description": "[Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the persistent disk that the snapshot was created from."
            },
            "description": {
              "type": "string",
              "description": "[Output Only] A textual description of the operation, which is set when the operation is created."
            },
            "operationType": {
              "type": "string",
              "description": "[Output Only] The type of operation, such as `insert`, `update`, or `delete`, and so on."
            },
            "statusMessage": {
              "type": "string",
              "description": "[Output Only] An optional textual description of the current status of the operation."
            },
            "httpErrorMessage": {
              "type": "string",
              "description": "[Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as `NOT FOUND`."
            },
            "operationGroupId": {
              "type": "string",
              "description": "[Output Only] An ID that represents a group of operations, such as when a group of operations results from a `bulkInsert` API request."
            },
            "clientOperationId": {
              "type": "string",
              "description": "[Output Only] The value of `requestId` if you provided it in the request. Not present otherwise."
            },
            "creationTimestamp": {
              "type": "string",
              "description": "[Deprecated] This field is deprecated."
            },
            "httpErrorStatusCode": {
              "type": "integer",
              "format": "int32",
              "description": "[Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a `404` means the resource was not found."
            }
          },
          "description": "Represents an Operation resource. Google Compute Engine has three Operation resources: * [Global](/compute/docs/reference/rest/{$api_version}/globalOperations) * [Regional](/compute/docs/reference/rest/{$api_version}/regionOperations) * [Zonal](/compute/docs/reference/rest/{$api_version}/zoneOperations) You can use an operation resource to manage asynchronous API requests. For more information, read Handling API responses. Operations can be global, regional or zonal. - For global operations, use the `globalOperations` resource. - For regional operations, use the `regionOperations` resource. - For zonal operations, use the `zonalOperations` resource. For more information, read Global, Regional, and Zonal Resources."
        }
      ]
  deploymentmanager.deployments.delete:
    description: |-
      Deletes a deployment and all of the resources in the deployment.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/docs/reference/latest/deployments/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uint64",
              "description": "[Output Only] The unique identifier for the operation. This identifier is defined by the server."
            },
            "kind": {
              "type": "string",
              "default": "deploymentmanager#operation",
              "description": "[Output Only] Type of the resource. Always `compute#operation` for Operation resources."
            },
            "name": {
              "type": "string",
              "description": "[Output Only] Name of the operation."
            },
            "user": {
              "type": "string",
              "description": "[Output Only] User who requested the operation, for example: `user@example.com`."
            },
            "zone": {
              "type": "string",
              "description": "[Output Only] The URL of the zone where the operation resides. Only applicable when performing per-zone operations."
            },
            "error": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "[Output Only] The error type identifier for this error."
                      },
                      "message": {
                        "type": "string",
                        "description": "[Output Only] An optional, human-readable error message."
                      },
                      "location": {
                        "type": "string",
                        "description": "[Output Only] Indicates the field in the request that caused the error. This property is optional."
                      }
                    }
                  },
                  "description": "[Output Only] The array of errors encountered while processing this operation."
                }
              },
              "description": "[Output Only] If errors are generated during processing of the operation, this field will be populated."
            },
            "region": {
              "type": "string",
              "description": "[Output Only] The URL of the region where the operation resides. Only applicable when performing regional operations."
            },
            "status": {
              "enum": [
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "[Output Only] The status of the operation, which can be one of the following: `PENDING`, `RUNNING`, or `DONE`.",
              "enumDescriptions": [
                "",
                "",
                ""
              ]
            },
            "endTime": {
              "type": "string",
              "description": "[Output Only] The time that this operation was completed. This value is in RFC3339 text format."
            },
            "progress": {
              "type": "integer",
              "format": "int32",
              "description": "[Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses."
            },
            "selfLink": {
              "type": "string",
              "description": "[Output Only] Server-defined URL for the resource."
            },
            "targetId": {
              "type": "string",
              "format": "uint64",
              "description": "[Output Only] The unique target ID, which identifies a specific incarnation of the target resource."
            },
            "warnings": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "code": {
                    "enum": [
                      "DEPRECATED_RESOURCE_USED",
                      "NO_RESULTS_ON_PAGE",
                      "UNREACHABLE",
                      "NEXT_HOP_ADDRESS_NOT_ASSIGNED",
                      "NEXT_HOP_INSTANCE_NOT_FOUND",
                      "NEXT_HOP_INSTANCE_NOT_ON_NETWORK",
                      "NEXT_HOP_CANNOT_IP_FORWARD",
                      "NEXT_HOP_NOT_RUNNING",
                      "INJECTED_KERNELS_DEPRECATED",
                      "REQUIRED_TOS_AGREEMENT",
                      "DISK_SIZE_LARGER_THAN_IMAGE_SIZE",
                      "RESOURCE_NOT_DELETED",
                      "SINGLE_INSTANCE_PROPERTY_TEMPLATE",
                      "NOT_CRITICAL_ERROR",
                      "CLEANUP_FAILED",
                      "FIELD_VALUE_OVERRIDEN",
                      "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING",
                      "MISSING_TYPE_DEPENDENCY",
                      "EXTERNAL_API_WARNING",
                      "SCHEMA_VALIDATION_IGNORED",
                      "UNDECLARED_PROPERTIES",
                      "EXPERIMENTAL_TYPE_USED",
                      "DEPRECATED_TYPE_USED",
                      "PARTIAL_SUCCESS",
                      "LARGE_DEPLOYMENT_WARNING"
                    ],
                    "type": "string",
                    "description": "[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.",
                    "enumDescriptions": [
                      "A link to a deprecated resource was created.",
                      "No results are present on a particular list page.",
                      "A given scope cannot be reached.",
                      "The route's nextHopIp address is not assigned to an instance on the network.",
                      "The route's nextHopInstance URL refers to an instance that does not exist.",
                      "The route's nextHopInstance URL refers to an instance that is not on the same network as the route.",
                      "The route's next hop instance cannot ip forward.",
                      "The route's next hop instance does not have a status of RUNNING.",
                      "The operation involved use of an injected kernel, which is deprecated.",
                      "The user attempted to use a resource that requires a TOS they have not accepted.",
                      "The user created a boot disk that is larger than image size.",
                      "One or more of the resources set to auto-delete could not be deleted because they were in use.",
                      "Instance template used in instance group manager is valid as such, but its application does not make a lot of sense, because it allows only single instance in instance group.",
                      "Error which is not critical. We decided to continue the process despite the mentioned error.",
                      "Warning about failed cleanup of transient changes made by a failed operation.",
                      "Warning that value of a field has been overridden. Deprecated unused field.",
                      "Warning that a resource is in use.",
                      "A resource depends on a missing type",
                      "Warning that is present in an external api call",
                      "When a resource schema validation is ignored.",
                      "When undeclared properties in the schema are present",
                      "When deploying and at least one of the resources has a type marked as experimental",
                      "When deploying and at least one of the resources has a type marked as deprecated",
                      "Success is reported, but some results may be missing due to errors",
                      "When deploying a deployment with a exceedingly large number of resources"
                    ]
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding)."
                        },
                        "value": {
                          "type": "string",
                          "description": "[Output Only] A warning data value corresponding to the key."
                        }
                      }
                    },
                    "description": "[Output Only] Metadata about this warning in key: value format. For example: \"data\": [ { \"key\": \"scope\", \"value\": \"zones/us-east1-d\" } "
                  },
                  "message": {
                    "type": "string",
                    "description": "[Output Only] A human-readable description of the warning code."
                  }
                }
              },
              "description": "[Output Only] If warning messages are generated during processing of the operation, this field will be populated."
            },
            "startTime": {
              "type": "string",
              "description": "[Output Only] The time that this operation was started by the server. This value is in RFC3339 text format."
            },
            "insertTime": {
              "type": "string",
              "description": "[Output Only] The time that this operation was requested. This value is in RFC3339 text format."
            },
            "targetLink": {
              "type": "string",
              "description": "[Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the persistent disk that the snapshot was created from."
            },
            "description": {
              "type": "string",
              "description": "[Output Only] A textual description of the operation, which is set when the operation is created."
            },
            "operationType": {
              "type": "string",
              "description": "[Output Only] The type of operation, such as `insert`, `update`, or `delete`, and so on."
            },
            "statusMessage": {
              "type": "string",
              "description": "[Output Only] An optional textual description of the current status of the operation."
            },
            "httpErrorMessage": {
              "type": "string",
              "description": "[Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as `NOT FOUND`."
            },
            "operationGroupId": {
              "type": "string",
              "description": "[Output Only] An ID that represents a group of operations, such as when a group of operations results from a `bulkInsert` API request."
            },
            "clientOperationId": {
              "type": "string",
              "description": "[Output Only] The value of `requestId` if you provided it in the request. Not present otherwise."
            },
            "creationTimestamp": {
              "type": "string",
              "description": "[Deprecated] This field is deprecated."
            },
            "httpErrorStatusCode": {
              "type": "integer",
              "format": "int32",
              "description": "[Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a `404` means the resource was not found."
            }
          },
          "description": "Represents an Operation resource. Google Compute Engine has three Operation resources: * [Global](/compute/docs/reference/rest/{$api_version}/globalOperations) * [Regional](/compute/docs/reference/rest/{$api_version}/regionOperations) * [Zonal](/compute/docs/reference/rest/{$api_version}/zoneOperations) You can use an operation resource to manage asynchronous API requests. For more information, read Handling API responses. Operations can be global, regional or zonal. - For global operations, use the `globalOperations` resource. - For regional operations, use the `regionOperations` resource. - For zonal operations, use the `zonalOperations` resource. For more information, read Global, Regional, and Zonal Resources."
        }
      ]
  deploymentmanager.deployments.get:
    description: |-
      Gets information about a specific deployment.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/docs/reference/latest/deployments/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Deployment",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uint64"
            },
            "name": {
              "type": "string",
              "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."
            },
            "labels": {
              "type": "array",
              "items": {
                "id": "DeploymentLabelEntry",
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "Key of the label"
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of the label"
                  }
                },
                "description": "Label object for Deployments"
              },
              "description": "Map of One Platform labels; provided by the client when the resource is created or updated. Specifically: Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?` Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`."
            },
            "target": {
              "id": "TargetConfiguration",
              "type": "object",
              "properties": {
                "config": {
                  "id": "ConfigFile",
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "string",
                      "description": "The contents of the file."
                    }
                  },
                  "description": "The configuration to use for this deployment."
                },
                "imports": {
                  "type": "array",
                  "items": {
                    "id": "ImportFile",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the file."
                      },
                      "content": {
                        "type": "string",
                        "description": "The contents of the file."
                      }
                    }
                  },
                  "description": "Specifies any files to import for this configuration. This can be used to import templates or other files. For example, you might import a text file in order to use the file in a template."
                }
              },
              "description": "[Input Only] The parameters that define your deployment, including the deployment configuration and relevant templates."
            },
            "update": {
              "id": "DeploymentUpdate",
              "type": "object",
              "properties": {
                "labels": {
                  "type": "array",
                  "items": {
                    "id": "DeploymentUpdateLabelEntry",
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "Key of the label"
                      },
                      "value": {
                        "type": "string",
                        "description": "Value of the label"
                      }
                    },
                    "description": "Label object for DeploymentUpdate"
                  },
                  "description": "Map of One Platform labels; provided by the client when the resource is created or updated. Specifically: Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?` Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`."
                },
                "manifest": {
                  "type": "string",
                  "description": "Output only. URL of the manifest representing the update configuration of this deployment."
                },
                "description": {
                  "type": "string",
                  "description": "Output only. An optional user-provided description of the deployment after the current update has been applied."
                }
              },
              "description": "Output only. If Deployment Manager is currently updating or previewing an update to this deployment, the updated configuration appears here."
            },
            "manifest": {
              "type": "string",
              "description": "Output only. URL of the manifest representing the last manifest that was successfully deployed. If no manifest has been successfully deployed, this field will be absent."
            },
            "selfLink": {
              "type": "string",
              "description": "Output only. Server defined URL for the resource."
            },
            "operation": {
              "id": "Operation",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uint64",
                  "description": "[Output Only] The unique identifier for the operation. This identifier is defined by the server."
                },
                "kind": {
                  "type": "string",
                  "default": "deploymentmanager#operation",
                  "description": "[Output Only] Type of the resource. Always `compute#operation` for Operation resources."
                },
                "name": {
                  "type": "string",
                  "description": "[Output Only] Name of the operation."
                },
                "user": {
                  "type": "string",
                  "description": "[Output Only] User who requested the operation, for example: `user@example.com`."
                },
                "zone": {
                  "type": "string",
                  "description": "[Output Only] The URL of the zone where the operation resides. Only applicable when performing per-zone operations."
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "[Output Only] The error type identifier for this error."
                          },
                          "message": {
                            "type": "string",
                            "description": "[Output Only] An optional, human-readable error message."
                          },
                          "location": {
                            "type": "string",
                            "description": "[Output Only] Indicates the field in the request that caused the error. This property is optional."
                          }
                        }
                      },
                      "description": "[Output Only] The array of errors encountered while processing this operation."
                    }
                  },
                  "description": "[Output Only] If errors are generated during processing of the operation, this field will be populated."
                },
                "region": {
                  "type": "string",
                  "description": "[Output Only] The URL of the region where the operation resides. Only applicable when performing regional operations."
                },
                "status": {
                  "enum": [
                    "PENDING",
                    "RUNNING",
                    "DONE"
                  ],
                  "type": "string",
                  "description": "[Output Only] The status of the operation, which can be one of the following: `PENDING`, `RUNNING`, or `DONE`.",
                  "enumDescriptions": [
                    "",
                    "",
                    ""
                  ]
                },
                "endTime": {
                  "type": "string",
                  "description": "[Output Only] The time that this operation was completed. This value is in RFC3339 text format."
                },
                "progress": {
                  "type": "integer",
                  "format": "int32",
                  "description": "[Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses."
                },
                "selfLink": {
                  "type": "string",
                  "description": "[Output Only] Server-defined URL for the resource."
                },
                "targetId": {
                  "type": "string",
                  "format": "uint64",
                  "description": "[Output Only] The unique target ID, which identifies a specific incarnation of the target resource."
                },
                "warnings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "enum": [
                          "DEPRECATED_RESOURCE_USED",
                          "NO_RESULTS_ON_PAGE",
                          "UNREACHABLE",
                          "NEXT_HOP_ADDRESS_NOT_ASSIGNED",
                          "NEXT_HOP_INSTANCE_NOT_FOUND",
                          "NEXT_HOP_INSTANCE_NOT_ON_NETWORK",
                          "NEXT_HOP_CANNOT_IP_FORWARD",
                          "NEXT_HOP_NOT_RUNNING",
                          "INJECTED_KERNELS_DEPRECATED",
                          "REQUIRED_TOS_AGREEMENT",
                          "DISK_SIZE_LARGER_THAN_IMAGE_SIZE",
                          "RESOURCE_NOT_DELETED",
                          "SINGLE_INSTANCE_PROPERTY_TEMPLATE",
                          "NOT_CRITICAL_ERROR",
                          "CLEANUP_FAILED",
                          "FIELD_VALUE_OVERRIDEN",
                          "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING",
                          "MISSING_TYPE_DEPENDENCY",
                          "EXTERNAL_API_WARNING",
                          "SCHEMA_VALIDATION_IGNORED",
                          "UNDECLARED_PROPERTIES",
                          "EXPERIMENTAL_TYPE_USED",
                          "DEPRECATED_TYPE_USED",
                          "PARTIAL_SUCCESS",
                          "LARGE_DEPLOYMENT_WARNING"
                        ],
                        "type": "string",
                        "description": "[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.",
                        "enumDescriptions": [
                          "A link to a deprecated resource was created.",
                          "No results are present on a particular list page.",
                          "A given scope cannot be reached.",
                          "The route's nextHopIp address is not assigned to an instance on the network.",
                          "The route's nextHopInstance URL refers to an instance that does not exist.",
                          "The route's nextHopInstance URL refers to an instance that is not on the same network as the route.",
                          "The route's next hop instance cannot ip forward.",
                          "The route's next hop instance does not have a status of RUNNING.",
                          "The operation involved use of an injected kernel, which is deprecated.",
                          "The user attempted to use a resource that requires a TOS they have not accepted.",
                          "The user created a boot disk that is larger than image size.",
                          "One or more of the resources set to auto-delete could not be deleted because they were in use.",
                          "Instance template used in instance group manager is valid as such, but its application does not make a lot of sense, because it allows only single instance in instance group.",
                          "Error which is not critical. We decided to continue the process despite the mentioned error.",
                          "Warning about failed cleanup of transient changes made by a failed operation.",
                          "Warning that value of a field has been overridden. Deprecated unused field.",
                          "Warning that a resource is in use.",
                          "A resource depends on a missing type",
                          "Warning that is present in an external api call",
                          "When a resource schema validation is ignored.",
                          "When undeclared properties in the schema are present",
                          "When deploying and at least one of the resources has a type marked as experimental",
                          "When deploying and at least one of the resources has a type marked as deprecated",
                          "Success is reported, but some results may be missing due to errors",
                          "When deploying a deployment with a exceedingly large number of resources"
                        ]
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding)."
                            },
                            "value": {
                              "type": "string",
                              "description": "[Output Only] A warning data value corresponding to the key."
                            }
                          }
                        },
                        "description": "[Output Only] Metadata about this warning in key: value format. For example: \"data\": [ { \"key\": \"scope\", \"value\": \"zones/us-east1-d\" } "
                      },
                      "message": {
                        "type": "string",
                        "description": "[Output Only] A human-readable description of the warning code."
                      }
                    }
                  },
                  "description": "[Output Only] If warning messages are generated during processing of the operation, this field will be populated."
                },
                "startTime": {
                  "type": "string",
                  "description": "[Output Only] The time that this operation was started by the server. This value is in RFC3339 text format."
                },
                "insertTime": {
                  "type": "string",
                  "description": "[Output Only] The time that this operation was requested. This value is in RFC3339 text format."
                },
                "targetLink": {
                  "type": "string",
                  "description": "[Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the persistent disk that the snapshot was created from."
                },
                "description": {
                  "type": "string",
                  "description": "[Output Only] A textual description of the operation, which is set when the operation is created."
                },
                "operationType": {
                  "type": "string",
                  "description": "[Output Only] The type of operation, such as `insert`, `update`, or `delete`, and so on."
                },
                "statusMessage": {
                  "type": "string",
                  "description": "[Output Only] An optional textual description of the current status of the operation."
                },
                "httpErrorMessage": {
                  "type": "string",
                  "description": "[Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as `NOT FOUND`."
                },
                "operationGroupId": {
                  "type": "string",
                  "description": "[Output Only] An ID that represents a group of operations, such as when a group of operations results from a `bulkInsert` API request."
                },
                "clientOperationId": {
                  "type": "string",
                  "description": "[Output Only] The value of `requestId` if you provided it in the request. Not present otherwise."
                },
                "creationTimestamp": {
                  "type": "string",
                  "description": "[Deprecated] This field is deprecated."
                },
                "httpErrorStatusCode": {
                  "type": "integer",
                  "format": "int32",
                  "description": "[Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a `404` means the resource was not found."
                }
              },
              "description": "Represents an Operation resource. Google Compute Engine has three Operation resources: * [Global](/compute/docs/reference/rest/{$api_version}/globalOperations) * [Regional](/compute/docs/reference/rest/{$api_version}/regionOperations) * [Zonal](/compute/docs/reference/rest/{$api_version}/zoneOperations) You can use an operation resource to manage asynchronous API requests. For more information, read Handling API responses. Operations can be global, regional or zonal. - For global operations, use the `globalOperations` resource. - For regional operations, use the `regionOperations` resource. - For zonal operations, use the `zonalOperations` resource. For more information, read Global, Regional, and Zonal Resources."
            },
            "insertTime": {
              "type": "string",
              "description": "Output only. Creation timestamp in RFC3339 text format."
            },
            "updateTime": {
              "type": "string",
              "description": "Output only. Update timestamp in RFC3339 text format."
            },
            "description": {
              "type": "string",
              "description": "An optional user-provided description of the deployment."
            },
            "fingerprint": {
              "type": "string",
              "format": "byte",
              "description": "Provides a fingerprint to use in requests to modify a deployment, such as `update()`, `stop()`, and `cancelPreview()` requests. A fingerprint is a randomly generated value that must be provided with `update()`, `stop()`, and `cancelPreview()` requests to perform optimistic locking. This ensures optimistic concurrency so that only one request happens at a time. The fingerprint is initially generated by Deployment Manager and changes after every request to modify data. To get the latest fingerprint value, perform a `get()` request to a deployment."
            }
          }
        }
      ]
  deploymentmanager.deployments.getIamPolicy:
    description: |-
      Gets the access control policy for a resource. May be empty if no such policy or resource exists.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/docs/reference/latest/deployments/getIamPolicy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            },
            "auditConfigs": {
              "type": "array",
              "items": {
                "id": "AuditConfig",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                  },
                  "auditLogConfigs": {
                    "type": "array",
                    "items": {
                      "id": "AuditLogConfig",
                      "type": "object",
                      "properties": {
                        "logType": {
                          "enum": [
                            "LOG_TYPE_UNSPECIFIED",
                            "ADMIN_READ",
                            "DATA_WRITE",
                            "DATA_READ"
                          ],
                          "type": "string",
                          "description": "The log type that this config enables.",
                          "enumDescriptions": [
                            "Default case. Should never be this.",
                            "Admin reads. Example: CloudIAM getIamPolicy",
                            "Data writes. Example: CloudSQL Users create",
                            "Data reads. Example: CloudSQL Users list"
                          ]
                        },
                        "exemptedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                        }
                      },
                      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                    },
                    "description": "The configuration for logging of each type of permission."
                  }
                },
                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
              },
              "description": "Specifies cloud audit logging configuration for this policy."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  deploymentmanager.deployments.insert:
    description: |-
      Creates a deployment and all of the resources described by the deployment manifest.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/docs/reference/latest/deployments/insert
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uint64",
              "description": "[Output Only] The unique identifier for the operation. This identifier is defined by the server."
            },
            "kind": {
              "type": "string",
              "default": "deploymentmanager#operation",
              "description": "[Output Only] Type of the resource. Always `compute#operation` for Operation resources."
            },
            "name": {
              "type": "string",
              "description": "[Output Only] Name of the operation."
            },
            "user": {
              "type": "string",
              "description": "[Output Only] User who requested the operation, for example: `user@example.com`."
            },
            "zone": {
              "type": "string",
              "description": "[Output Only] The URL of the zone where the operation resides. Only applicable when performing per-zone operations."
            },
            "error": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "[Output Only] The error type identifier for this error."
                      },
                      "message": {
                        "type": "string",
                        "description": "[Output Only] An optional, human-readable error message."
                      },
                      "location": {
                        "type": "string",
                        "description": "[Output Only] Indicates the field in the request that caused the error. This property is optional."
                      }
                    }
                  },
                  "description": "[Output Only] The array of errors encountered while processing this operation."
                }
              },
              "description": "[Output Only] If errors are generated during processing of the operation, this field will be populated."
            },
            "region": {
              "type": "string",
              "description": "[Output Only] The URL of the region where the operation resides. Only applicable when performing regional operations."
            },
            "status": {
              "enum": [
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "[Output Only] The status of the operation, which can be one of the following: `PENDING`, `RUNNING`, or `DONE`.",
              "enumDescriptions": [
                "",
                "",
                ""
              ]
            },
            "endTime": {
              "type": "string",
              "description": "[Output Only] The time that this operation was completed. This value is in RFC3339 text format."
            },
            "progress": {
              "type": "integer",
              "format": "int32",
              "description": "[Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses."
            },
            "selfLink": {
              "type": "string",
              "description": "[Output Only] Server-defined URL for the resource."
            },
            "targetId": {
              "type": "string",
              "format": "uint64",
              "description": "[Output Only] The unique target ID, which identifies a specific incarnation of the target resource."
            },
            "warnings": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "code": {
                    "enum": [
                      "DEPRECATED_RESOURCE_USED",
                      "NO_RESULTS_ON_PAGE",
                      "UNREACHABLE",
                      "NEXT_HOP_ADDRESS_NOT_ASSIGNED",
                      "NEXT_HOP_INSTANCE_NOT_FOUND",
                      "NEXT_HOP_INSTANCE_NOT_ON_NETWORK",
                      "NEXT_HOP_CANNOT_IP_FORWARD",
                      "NEXT_HOP_NOT_RUNNING",
                      "INJECTED_KERNELS_DEPRECATED",
                      "REQUIRED_TOS_AGREEMENT",
                      "DISK_SIZE_LARGER_THAN_IMAGE_SIZE",
                      "RESOURCE_NOT_DELETED",
                      "SINGLE_INSTANCE_PROPERTY_TEMPLATE",
                      "NOT_CRITICAL_ERROR",
                      "CLEANUP_FAILED",
                      "FIELD_VALUE_OVERRIDEN",
                      "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING",
                      "MISSING_TYPE_DEPENDENCY",
                      "EXTERNAL_API_WARNING",
                      "SCHEMA_VALIDATION_IGNORED",
                      "UNDECLARED_PROPERTIES",
                      "EXPERIMENTAL_TYPE_USED",
                      "DEPRECATED_TYPE_USED",
                      "PARTIAL_SUCCESS",
                      "LARGE_DEPLOYMENT_WARNING"
                    ],
                    "type": "string",
                    "description": "[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.",
                    "enumDescriptions": [
                      "A link to a deprecated resource was created.",
                      "No results are present on a particular list page.",
                      "A given scope cannot be reached.",
                      "The route's nextHopIp address is not assigned to an instance on the network.",
                      "The route's nextHopInstance URL refers to an instance that does not exist.",
                      "The route's nextHopInstance URL refers to an instance that is not on the same network as the route.",
                      "The route's next hop instance cannot ip forward.",
                      "The route's next hop instance does not have a status of RUNNING.",
                      "The operation involved use of an injected kernel, which is deprecated.",
                      "The user attempted to use a resource that requires a TOS they have not accepted.",
                      "The user created a boot disk that is larger than image size.",
                      "One or more of the resources set to auto-delete could not be deleted because they were in use.",
                      "Instance template used in instance group manager is valid as such, but its application does not make a lot of sense, because it allows only single instance in instance group.",
                      "Error which is not critical. We decided to continue the process despite the mentioned error.",
                      "Warning about failed cleanup of transient changes made by a failed operation.",
                      "Warning that value of a field has been overridden. Deprecated unused field.",
                      "Warning that a resource is in use.",
                      "A resource depends on a missing type",
                      "Warning that is present in an external api call",
                      "When a resource schema validation is ignored.",
                      "When undeclared properties in the schema are present",
                      "When deploying and at least one of the resources has a type marked as experimental",
                      "When deploying and at least one of the resources has a type marked as deprecated",
                      "Success is reported, but some results may be missing due to errors",
                      "When deploying a deployment with a exceedingly large number of resources"
                    ]
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding)."
                        },
                        "value": {
                          "type": "string",
                          "description": "[Output Only] A warning data value corresponding to the key."
                        }
                      }
                    },
                    "description": "[Output Only] Metadata about this warning in key: value format. For example: \"data\": [ { \"key\": \"scope\", \"value\": \"zones/us-east1-d\" } "
                  },
                  "message": {
                    "type": "string",
                    "description": "[Output Only] A human-readable description of the warning code."
                  }
                }
              },
              "description": "[Output Only] If warning messages are generated during processing of the operation, this field will be populated."
            },
            "startTime": {
              "type": "string",
              "description": "[Output Only] The time that this operation was started by the server. This value is in RFC3339 text format."
            },
            "insertTime": {
              "type": "string",
              "description": "[Output Only] The time that this operation was requested. This value is in RFC3339 text format."
            },
            "targetLink": {
              "type": "string",
              "description": "[Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the persistent disk that the snapshot was created from."
            },
            "description": {
              "type": "string",
              "description": "[Output Only] A textual description of the operation, which is set when the operation is created."
            },
            "operationType": {
              "type": "string",
              "description": "[Output Only] The type of operation, such as `insert`, `update`, or `delete`, and so on."
            },
            "statusMessage": {
              "type": "string",
              "description": "[Output Only] An optional textual description of the current status of the operation."
            },
            "httpErrorMessage": {
              "type": "string",
              "description": "[Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as `NOT FOUND`."
            },
            "operationGroupId": {
              "type": "string",
              "description": "[Output Only] An ID that represents a group of operations, such as when a group of operations results from a `bulkInsert` API request."
            },
            "clientOperationId": {
              "type": "string",
              "description": "[Output Only] The value of `requestId` if you provided it in the request. Not present otherwise."
            },
            "creationTimestamp": {
              "type": "string",
              "description": "[Deprecated] This field is deprecated."
            },
            "httpErrorStatusCode": {
              "type": "integer",
              "format": "int32",
              "description": "[Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a `404` means the resource was not found."
            }
          },
          "description": "Represents an Operation resource. Google Compute Engine has three Operation resources: * [Global](/compute/docs/reference/rest/{$api_version}/globalOperations) * [Regional](/compute/docs/reference/rest/{$api_version}/regionOperations) * [Zonal](/compute/docs/reference/rest/{$api_version}/zoneOperations) You can use an operation resource to manage asynchronous API requests. For more information, read Handling API responses. Operations can be global, regional or zonal. - For global operations, use the `globalOperations` resource. - For regional operations, use the `regionOperations` resource. - For zonal operations, use the `zonalOperations` resource. For more information, read Global, Regional, and Zonal Resources."
        }
      ]
  deploymentmanager.deployments.list:
    description: |-
      Lists all deployments for a given project.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/docs/reference/latest/deployments/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "DeploymentsListResponse",
          "type": "object",
          "properties": {
            "deployments": {
              "type": "array",
              "items": {
                "id": "Deployment",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uint64"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."
                  },
                  "labels": {
                    "type": "array",
                    "items": {
                      "id": "DeploymentLabelEntry",
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "Key of the label"
                        },
                        "value": {
                          "type": "string",
                          "description": "Value of the label"
                        }
                      },
                      "description": "Label object for Deployments"
                    },
                    "description": "Map of One Platform labels; provided by the client when the resource is created or updated. Specifically: Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?` Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`."
                  },
                  "target": {
                    "id": "TargetConfiguration",
                    "type": "object",
                    "properties": {
                      "config": {
                        "id": "ConfigFile",
                        "type": "object",
                        "properties": {
                          "content": {
                            "type": "string",
                            "description": "The contents of the file."
                          }
                        },
                        "description": "The configuration to use for this deployment."
                      },
                      "imports": {
                        "type": "array",
                        "items": {
                          "id": "ImportFile",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the file."
                            },
                            "content": {
                              "type": "string",
                              "description": "The contents of the file."
                            }
                          }
                        },
                        "description": "Specifies any files to import for this configuration. This can be used to import templates or other files. For example, you might import a text file in order to use the file in a template."
                      }
                    },
                    "description": "[Input Only] The parameters that define your deployment, including the deployment configuration and relevant templates."
                  },
                  "update": {
                    "id": "DeploymentUpdate",
                    "type": "object",
                    "properties": {
                      "labels": {
                        "type": "array",
                        "items": {
                          "id": "DeploymentUpdateLabelEntry",
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "Key of the label"
                            },
                            "value": {
                              "type": "string",
                              "description": "Value of the label"
                            }
                          },
                          "description": "Label object for DeploymentUpdate"
                        },
                        "description": "Map of One Platform labels; provided by the client when the resource is created or updated. Specifically: Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?` Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`."
                      },
                      "manifest": {
                        "type": "string",
                        "description": "Output only. URL of the manifest representing the update configuration of this deployment."
                      },
                      "description": {
                        "type": "string",
                        "description": "Output only. An optional user-provided description of the deployment after the current update has been applied."
                      }
                    },
                    "description": "Output only. If Deployment Manager is currently updating or previewing an update to this deployment, the updated configuration appears here."
                  },
                  "manifest": {
                    "type": "string",
                    "description": "Output only. URL of the manifest representing the last manifest that was successfully deployed. If no manifest has been successfully deployed, this field will be absent."
                  },
                  "selfLink": {
                    "type": "string",
                    "description": "Output only. Server defined URL for the resource."
                  },
                  "operation": {
                    "id": "Operation",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uint64",
                        "description": "[Output Only] The unique identifier for the operation. This identifier is defined by the server."
                      },
                      "kind": {
                        "type": "string",
                        "default": "deploymentmanager#operation",
                        "description": "[Output Only] Type of the resource. Always `compute#operation` for Operation resources."
                      },
                      "name": {
                        "type": "string",
                        "description": "[Output Only] Name of the operation."
                      },
                      "user": {
                        "type": "string",
                        "description": "[Output Only] User who requested the operation, for example: `user@example.com`."
                      },
                      "zone": {
                        "type": "string",
                        "description": "[Output Only] The URL of the zone where the operation resides. Only applicable when performing per-zone operations."
                      },
                      "error": {
                        "type": "object",
                        "properties": {
                          "errors": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "description": "[Output Only] The error type identifier for this error."
                                },
                                "message": {
                                  "type": "string",
                                  "description": "[Output Only] An optional, human-readable error message."
                                },
                                "location": {
                                  "type": "string",
                                  "description": "[Output Only] Indicates the field in the request that caused the error. This property is optional."
                                }
                              }
                            },
                            "description": "[Output Only] The array of errors encountered while processing this operation."
                          }
                        },
                        "description": "[Output Only] If errors are generated during processing of the operation, this field will be populated."
                      },
                      "region": {
                        "type": "string",
                        "description": "[Output Only] The URL of the region where the operation resides. Only applicable when performing regional operations."
                      },
                      "status": {
                        "enum": [
                          "PENDING",
                          "RUNNING",
                          "DONE"
                        ],
                        "type": "string",
                        "description": "[Output Only] The status of the operation, which can be one of the following: `PENDING`, `RUNNING`, or `DONE`.",
                        "enumDescriptions": [
                          "",
                          "",
                          ""
                        ]
                      },
                      "endTime": {
                        "type": "string",
                        "description": "[Output Only] The time that this operation was completed. This value is in RFC3339 text format."
                      },
                      "progress": {
                        "type": "integer",
                        "format": "int32",
                        "description": "[Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses."
                      },
                      "selfLink": {
                        "type": "string",
                        "description": "[Output Only] Server-defined URL for the resource."
                      },
                      "targetId": {
                        "type": "string",
                        "format": "uint64",
                        "description": "[Output Only] The unique target ID, which identifies a specific incarnation of the target resource."
                      },
                      "warnings": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "enum": [
                                "DEPRECATED_RESOURCE_USED",
                                "NO_RESULTS_ON_PAGE",
                                "UNREACHABLE",
                                "NEXT_HOP_ADDRESS_NOT_ASSIGNED",
                                "NEXT_HOP_INSTANCE_NOT_FOUND",
                                "NEXT_HOP_INSTANCE_NOT_ON_NETWORK",
                                "NEXT_HOP_CANNOT_IP_FORWARD",
                                "NEXT_HOP_NOT_RUNNING",
                                "INJECTED_KERNELS_DEPRECATED",
                                "REQUIRED_TOS_AGREEMENT",
                                "DISK_SIZE_LARGER_THAN_IMAGE_SIZE",
                                "RESOURCE_NOT_DELETED",
                                "SINGLE_INSTANCE_PROPERTY_TEMPLATE",
                                "NOT_CRITICAL_ERROR",
                                "CLEANUP_FAILED",
                                "FIELD_VALUE_OVERRIDEN",
                                "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING",
                                "MISSING_TYPE_DEPENDENCY",
                                "EXTERNAL_API_WARNING",
                                "SCHEMA_VALIDATION_IGNORED",
                                "UNDECLARED_PROPERTIES",
                                "EXPERIMENTAL_TYPE_USED",
                                "DEPRECATED_TYPE_USED",
                                "PARTIAL_SUCCESS",
                                "LARGE_DEPLOYMENT_WARNING"
                              ],
                              "type": "string",
                              "description": "[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.",
                              "enumDescriptions": [
                                "A link to a deprecated resource was created.",
                                "No results are present on a particular list page.",
                                "A given scope cannot be reached.",
                                "The route's nextHopIp address is not assigned to an instance on the network.",
                                "The route's nextHopInstance URL refers to an instance that does not exist.",
                                "The route's nextHopInstance URL refers to an instance that is not on the same network as the route.",
                                "The route's next hop instance cannot ip forward.",
                                "The route's next hop instance does not have a status of RUNNING.",
                                "The operation involved use of an injected kernel, which is deprecated.",
                                "The user attempted to use a resource that requires a TOS they have not accepted.",
                                "The user created a boot disk that is larger than image size.",
                                "One or more of the resources set to auto-delete could not be deleted because they were in use.",
                                "Instance template used in instance group manager is valid as such, but its application does not make a lot of sense, because it allows only single instance in instance group.",
                                "Error which is not critical. We decided to continue the process despite the mentioned error.",
                                "Warning about failed cleanup of transient changes made by a failed operation.",
                                "Warning that value of a field has been overridden. Deprecated unused field.",
                                "Warning that a resource is in use.",
                                "A resource depends on a missing type",
                                "Warning that is present in an external api call",
                                "When a resource schema validation is ignored.",
                                "When undeclared properties in the schema are present",
                                "When deploying and at least one of the resources has a type marked as experimental",
                                "When deploying and at least one of the resources has a type marked as deprecated",
                                "Success is reported, but some results may be missing due to errors",
                                "When deploying a deployment with a exceedingly large number of resources"
                              ]
                            },
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding)."
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "[Output Only] A warning data value corresponding to the key."
                                  }
                                }
                              },
                              "description": "[Output Only] Metadata about this warning in key: value format. For example: \"data\": [ { \"key\": \"scope\", \"value\": \"zones/us-east1-d\" } "
                            },
                            "message": {
                              "type": "string",
                              "description": "[Output Only] A human-readable description of the warning code."
                            }
                          }
                        },
                        "description": "[Output Only] If warning messages are generated during processing of the operation, this field will be populated."
                      },
                      "startTime": {
                        "type": "string",
                        "description": "[Output Only] The time that this operation was started by the server. This value is in RFC3339 text format."
                      },
                      "insertTime": {
                        "type": "string",
                        "description": "[Output Only] The time that this operation was requested. This value is in RFC3339 text format."
                      },
                      "targetLink": {
                        "type": "string",
                        "description": "[Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the persistent disk that the snapshot was created from."
                      },
                      "description": {
                        "type": "string",
                        "description": "[Output Only] A textual description of the operation, which is set when the operation is created."
                      },
                      "operationType": {
                        "type": "string",
                        "description": "[Output Only] The type of operation, such as `insert`, `update`, or `delete`, and so on."
                      },
                      "statusMessage": {
                        "type": "string",
                        "description": "[Output Only] An optional textual description of the current status of the operation."
                      },
                      "httpErrorMessage": {
                        "type": "string",
                        "description": "[Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as `NOT FOUND`."
                      },
                      "operationGroupId": {
                        "type": "string",
                        "description": "[Output Only] An ID that represents a group of operations, such as when a group of operations results from a `bulkInsert` API request."
                      },
                      "clientOperationId": {
                        "type": "string",
                        "description": "[Output Only] The value of `requestId` if you provided it in the request. Not present otherwise."
                      },
                      "creationTimestamp": {
                        "type": "string",
                        "description": "[Deprecated] This field is deprecated."
                      },
                      "httpErrorStatusCode": {
                        "type": "integer",
                        "format": "int32",
                        "description": "[Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a `404` means the resource was not found."
                      }
                    },
                    "description": "Represents an Operation resource. Google Compute Engine has three Operation resources: * [Global](/compute/docs/reference/rest/{$api_version}/globalOperations) * [Regional](/compute/docs/reference/rest/{$api_version}/regionOperations) * [Zonal](/compute/docs/reference/rest/{$api_version}/zoneOperations) You can use an operation resource to manage asynchronous API requests. For more information, read Handling API responses. Operations can be global, regional or zonal. - For global operations, use the `globalOperations` resource. - For regional operations, use the `regionOperations` resource. - For zonal operations, use the `zonalOperations` resource. For more information, read Global, Regional, and Zonal Resources."
                  },
                  "insertTime": {
                    "type": "string",
                    "description": "Output only. Creation timestamp in RFC3339 text format."
                  },
                  "updateTime": {
                    "type": "string",
                    "description": "Output only. Update timestamp in RFC3339 text format."
                  },
                  "description": {
                    "type": "string",
                    "description": "An optional user-provided description of the deployment."
                  },
                  "fingerprint": {
                    "type": "string",
                    "format": "byte",
                    "description": "Provides a fingerprint to use in requests to modify a deployment, such as `update()`, `stop()`, and `cancelPreview()` requests. A fingerprint is a randomly generated value that must be provided with `update()`, `stop()`, and `cancelPreview()` requests to perform optimistic locking. This ensures optimistic concurrency so that only one request happens at a time. The fingerprint is initially generated by Deployment Manager and changes after every request to modify data. To get the latest fingerprint value, perform a `get()` request to a deployment."
                  }
                }
              },
              "description": "Output only. The deployments contained in this response."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Output only. A token used to continue a truncated list request."
            }
          },
          "description": "A response containing a partial list of deployments and a page token used to build the next request if the request has been truncated."
        }
      ]
  deploymentmanager.deployments.patch:
    description: |-
      Patches a deployment and all of the resources described by the deployment manifest.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/docs/reference/latest/deployments/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uint64",
              "description": "[Output Only] The unique identifier for the operation. This identifier is defined by the server."
            },
            "kind": {
              "type": "string",
              "default": "deploymentmanager#operation",
              "description": "[Output Only] Type of the resource. Always `compute#operation` for Operation resources."
            },
            "name": {
              "type": "string",
              "description": "[Output Only] Name of the operation."
            },
            "user": {
              "type": "string",
              "description": "[Output Only] User who requested the operation, for example: `user@example.com`."
            },
            "zone": {
              "type": "string",
              "description": "[Output Only] The URL of the zone where the operation resides. Only applicable when performing per-zone operations."
            },
            "error": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "[Output Only] The error type identifier for this error."
                      },
                      "message": {
                        "type": "string",
                        "description": "[Output Only] An optional, human-readable error message."
                      },
                      "location": {
                        "type": "string",
                        "description": "[Output Only] Indicates the field in the request that caused the error. This property is optional."
                      }
                    }
                  },
                  "description": "[Output Only] The array of errors encountered while processing this operation."
                }
              },
              "description": "[Output Only] If errors are generated during processing of the operation, this field will be populated."
            },
            "region": {
              "type": "string",
              "description": "[Output Only] The URL of the region where the operation resides. Only applicable when performing regional operations."
            },
            "status": {
              "enum": [
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "[Output Only] The status of the operation, which can be one of the following: `PENDING`, `RUNNING`, or `DONE`.",
              "enumDescriptions": [
                "",
                "",
                ""
              ]
            },
            "endTime": {
              "type": "string",
              "description": "[Output Only] The time that this operation was completed. This value is in RFC3339 text format."
            },
            "progress": {
              "type": "integer",
              "format": "int32",
              "description": "[Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses."
            },
            "selfLink": {
              "type": "string",
              "description": "[Output Only] Server-defined URL for the resource."
            },
            "targetId": {
              "type": "string",
              "format": "uint64",
              "description": "[Output Only] The unique target ID, which identifies a specific incarnation of the target resource."
            },
            "warnings": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "code": {
                    "enum": [
                      "DEPRECATED_RESOURCE_USED",
                      "NO_RESULTS_ON_PAGE",
                      "UNREACHABLE",
                      "NEXT_HOP_ADDRESS_NOT_ASSIGNED",
                      "NEXT_HOP_INSTANCE_NOT_FOUND",
                      "NEXT_HOP_INSTANCE_NOT_ON_NETWORK",
                      "NEXT_HOP_CANNOT_IP_FORWARD",
                      "NEXT_HOP_NOT_RUNNING",
                      "INJECTED_KERNELS_DEPRECATED",
                      "REQUIRED_TOS_AGREEMENT",
                      "DISK_SIZE_LARGER_THAN_IMAGE_SIZE",
                      "RESOURCE_NOT_DELETED",
                      "SINGLE_INSTANCE_PROPERTY_TEMPLATE",
                      "NOT_CRITICAL_ERROR",
                      "CLEANUP_FAILED",
                      "FIELD_VALUE_OVERRIDEN",
                      "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING",
                      "MISSING_TYPE_DEPENDENCY",
                      "EXTERNAL_API_WARNING",
                      "SCHEMA_VALIDATION_IGNORED",
                      "UNDECLARED_PROPERTIES",
                      "EXPERIMENTAL_TYPE_USED",
                      "DEPRECATED_TYPE_USED",
                      "PARTIAL_SUCCESS",
                      "LARGE_DEPLOYMENT_WARNING"
                    ],
                    "type": "string",
                    "description": "[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.",
                    "enumDescriptions": [
                      "A link to a deprecated resource was created.",
                      "No results are present on a particular list page.",
                      "A given scope cannot be reached.",
                      "The route's nextHopIp address is not assigned to an instance on the network.",
                      "The route's nextHopInstance URL refers to an instance that does not exist.",
                      "The route's nextHopInstance URL refers to an instance that is not on the same network as the route.",
                      "The route's next hop instance cannot ip forward.",
                      "The route's next hop instance does not have a status of RUNNING.",
                      "The operation involved use of an injected kernel, which is deprecated.",
                      "The user attempted to use a resource that requires a TOS they have not accepted.",
                      "The user created a boot disk that is larger than image size.",
                      "One or more of the resources set to auto-delete could not be deleted because they were in use.",
                      "Instance template used in instance group manager is valid as such, but its application does not make a lot of sense, because it allows only single instance in instance group.",
                      "Error which is not critical. We decided to continue the process despite the mentioned error.",
                      "Warning about failed cleanup of transient changes made by a failed operation.",
                      "Warning that value of a field has been overridden. Deprecated unused field.",
                      "Warning that a resource is in use.",
                      "A resource depends on a missing type",
                      "Warning that is present in an external api call",
                      "When a resource schema validation is ignored.",
                      "When undeclared properties in the schema are present",
                      "When deploying and at least one of the resources has a type marked as experimental",
                      "When deploying and at least one of the resources has a type marked as deprecated",
                      "Success is reported, but some results may be missing due to errors",
                      "When deploying a deployment with a exceedingly large number of resources"
                    ]
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding)."
                        },
                        "value": {
                          "type": "string",
                          "description": "[Output Only] A warning data value corresponding to the key."
                        }
                      }
                    },
                    "description": "[Output Only] Metadata about this warning in key: value format. For example: \"data\": [ { \"key\": \"scope\", \"value\": \"zones/us-east1-d\" } "
                  },
                  "message": {
                    "type": "string",
                    "description": "[Output Only] A human-readable description of the warning code."
                  }
                }
              },
              "description": "[Output Only] If warning messages are generated during processing of the operation, this field will be populated."
            },
            "startTime": {
              "type": "string",
              "description": "[Output Only] The time that this operation was started by the server. This value is in RFC3339 text format."
            },
            "insertTime": {
              "type": "string",
              "description": "[Output Only] The time that this operation was requested. This value is in RFC3339 text format."
            },
            "targetLink": {
              "type": "string",
              "description": "[Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the persistent disk that the snapshot was created from."
            },
            "description": {
              "type": "string",
              "description": "[Output Only] A textual description of the operation, which is set when the operation is created."
            },
            "operationType": {
              "type": "string",
              "description": "[Output Only] The type of operation, such as `insert`, `update`, or `delete`, and so on."
            },
            "statusMessage": {
              "type": "string",
              "description": "[Output Only] An optional textual description of the current status of the operation."
            },
            "httpErrorMessage": {
              "type": "string",
              "description": "[Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as `NOT FOUND`."
            },
            "operationGroupId": {
              "type": "string",
              "description": "[Output Only] An ID that represents a group of operations, such as when a group of operations results from a `bulkInsert` API request."
            },
            "clientOperationId": {
              "type": "string",
              "description": "[Output Only] The value of `requestId` if you provided it in the request. Not present otherwise."
            },
            "creationTimestamp": {
              "type": "string",
              "description": "[Deprecated] This field is deprecated."
            },
            "httpErrorStatusCode": {
              "type": "integer",
              "format": "int32",
              "description": "[Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a `404` means the resource was not found."
            }
          },
          "description": "Represents an Operation resource. Google Compute Engine has three Operation resources: * [Global](/compute/docs/reference/rest/{$api_version}/globalOperations) * [Regional](/compute/docs/reference/rest/{$api_version}/regionOperations) * [Zonal](/compute/docs/reference/rest/{$api_version}/zoneOperations) You can use an operation resource to manage asynchronous API requests. For more information, read Handling API responses. Operations can be global, regional or zonal. - For global operations, use the `globalOperations` resource. - For regional operations, use the `regionOperations` resource. - For zonal operations, use the `zonalOperations` resource. For more information, read Global, Regional, and Zonal Resources."
        }
      ]
  deploymentmanager.deployments.setIamPolicy:
    description: |-
      Sets the access control policy on the specified resource. Replaces any existing policy.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/docs/reference/latest/deployments/setIamPolicy
    example:
      inputs: [
        {
          "id": "GlobalSetPolicyRequest",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "Flatten Policy to create a backward compatible wire-format. Deprecated. Use 'policy' to specify the etag."
            },
            "policy": {
              "id": "Policy",
              "type": "object",
              "properties": {
                "etag": {
                  "type": "string",
                  "format": "byte",
                  "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
                },
                "version": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                },
                "bindings": {
                  "type": "array",
                  "items": {
                    "id": "Binding",
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                      },
                      "members": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                      },
                      "condition": {
                        "id": "Expr",
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                          },
                          "location": {
                            "type": "string",
                            "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                          },
                          "expression": {
                            "type": "string",
                            "description": "Textual representation of an expression in Common Expression Language syntax."
                          },
                          "description": {
                            "type": "string",
                            "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                          }
                        },
                        "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                      }
                    },
                    "description": "Associates `members` with a `role`."
                  },
                  "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
                },
                "auditConfigs": {
                  "type": "array",
                  "items": {
                    "id": "AuditConfig",
                    "type": "object",
                    "properties": {
                      "service": {
                        "type": "string",
                        "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                      },
                      "auditLogConfigs": {
                        "type": "array",
                        "items": {
                          "id": "AuditLogConfig",
                          "type": "object",
                          "properties": {
                            "logType": {
                              "enum": [
                                "LOG_TYPE_UNSPECIFIED",
                                "ADMIN_READ",
                                "DATA_WRITE",
                                "DATA_READ"
                              ],
                              "type": "string",
                              "description": "The log type that this config enables.",
                              "enumDescriptions": [
                                "Default case. Should never be this.",
                                "Admin reads. Example: CloudIAM getIamPolicy",
                                "Data writes. Example: CloudSQL Users create",
                                "Data reads. Example: CloudSQL Users list"
                              ]
                            },
                            "exemptedMembers": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                            }
                          },
                          "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                        },
                        "description": "The configuration for logging of each type of permission."
                      }
                    },
                    "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
                  },
                  "description": "Specifies cloud audit logging configuration for this policy."
                }
              },
              "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Flatten Policy to create a backward compatible wire-format. Deprecated. Use 'policy' to specify bindings."
            }
          }
        }
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            },
            "auditConfigs": {
              "type": "array",
              "items": {
                "id": "AuditConfig",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                  },
                  "auditLogConfigs": {
                    "type": "array",
                    "items": {
                      "id": "AuditLogConfig",
                      "type": "object",
                      "properties": {
                        "logType": {
                          "enum": [
                            "LOG_TYPE_UNSPECIFIED",
                            "ADMIN_READ",
                            "DATA_WRITE",
                            "DATA_READ"
                          ],
                          "type": "string",
                          "description": "The log type that this config enables.",
                          "enumDescriptions": [
                            "Default case. Should never be this.",
                            "Admin reads. Example: CloudIAM getIamPolicy",
                            "Data writes. Example: CloudSQL Users create",
                            "Data reads. Example: CloudSQL Users list"
                          ]
                        },
                        "exemptedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                        }
                      },
                      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                    },
                    "description": "The configuration for logging of each type of permission."
                  }
                },
                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
              },
              "description": "Specifies cloud audit logging configuration for this policy."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  deploymentmanager.deployments.stop:
    description: |-
      Stops an ongoing operation. This does not roll back any work that has already been completed, but prevents any new work from being started.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/docs/reference/latest/deployments/stop
    example:
      inputs: [
        {
          "id": "DeploymentsStopRequest",
          "type": "object",
          "properties": {
            "fingerprint": {
              "type": "string",
              "format": "byte",
              "description": "Specifies a fingerprint for `stop()` requests. A fingerprint is a randomly generated value that must be provided in `stop()` requests to perform optimistic locking. This ensures optimistic concurrency so that the deployment does not have conflicting requests (e.g. if someone attempts to make a new update request while another user attempts to stop an ongoing update request, this would prevent a collision). The fingerprint is initially generated by Deployment Manager and changes after every request to modify a deployment. To get the latest fingerprint value, perform a `get()` request on the deployment."
            }
          }
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uint64",
              "description": "[Output Only] The unique identifier for the operation. This identifier is defined by the server."
            },
            "kind": {
              "type": "string",
              "default": "deploymentmanager#operation",
              "description": "[Output Only] Type of the resource. Always `compute#operation` for Operation resources."
            },
            "name": {
              "type": "string",
              "description": "[Output Only] Name of the operation."
            },
            "user": {
              "type": "string",
              "description": "[Output Only] User who requested the operation, for example: `user@example.com`."
            },
            "zone": {
              "type": "string",
              "description": "[Output Only] The URL of the zone where the operation resides. Only applicable when performing per-zone operations."
            },
            "error": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "[Output Only] The error type identifier for this error."
                      },
                      "message": {
                        "type": "string",
                        "description": "[Output Only] An optional, human-readable error message."
                      },
                      "location": {
                        "type": "string",
                        "description": "[Output Only] Indicates the field in the request that caused the error. This property is optional."
                      }
                    }
                  },
                  "description": "[Output Only] The array of errors encountered while processing this operation."
                }
              },
              "description": "[Output Only] If errors are generated during processing of the operation, this field will be populated."
            },
            "region": {
              "type": "string",
              "description": "[Output Only] The URL of the region where the operation resides. Only applicable when performing regional operations."
            },
            "status": {
              "enum": [
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "[Output Only] The status of the operation, which can be one of the following: `PENDING`, `RUNNING`, or `DONE`.",
              "enumDescriptions": [
                "",
                "",
                ""
              ]
            },
            "endTime": {
              "type": "string",
              "description": "[Output Only] The time that this operation was completed. This value is in RFC3339 text format."
            },
            "progress": {
              "type": "integer",
              "format": "int32",
              "description": "[Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses."
            },
            "selfLink": {
              "type": "string",
              "description": "[Output Only] Server-defined URL for the resource."
            },
            "targetId": {
              "type": "string",
              "format": "uint64",
              "description": "[Output Only] The unique target ID, which identifies a specific incarnation of the target resource."
            },
            "warnings": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "code": {
                    "enum": [
                      "DEPRECATED_RESOURCE_USED",
                      "NO_RESULTS_ON_PAGE",
                      "UNREACHABLE",
                      "NEXT_HOP_ADDRESS_NOT_ASSIGNED",
                      "NEXT_HOP_INSTANCE_NOT_FOUND",
                      "NEXT_HOP_INSTANCE_NOT_ON_NETWORK",
                      "NEXT_HOP_CANNOT_IP_FORWARD",
                      "NEXT_HOP_NOT_RUNNING",
                      "INJECTED_KERNELS_DEPRECATED",
                      "REQUIRED_TOS_AGREEMENT",
                      "DISK_SIZE_LARGER_THAN_IMAGE_SIZE",
                      "RESOURCE_NOT_DELETED",
                      "SINGLE_INSTANCE_PROPERTY_TEMPLATE",
                      "NOT_CRITICAL_ERROR",
                      "CLEANUP_FAILED",
                      "FIELD_VALUE_OVERRIDEN",
                      "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING",
                      "MISSING_TYPE_DEPENDENCY",
                      "EXTERNAL_API_WARNING",
                      "SCHEMA_VALIDATION_IGNORED",
                      "UNDECLARED_PROPERTIES",
                      "EXPERIMENTAL_TYPE_USED",
                      "DEPRECATED_TYPE_USED",
                      "PARTIAL_SUCCESS",
                      "LARGE_DEPLOYMENT_WARNING"
                    ],
                    "type": "string",
                    "description": "[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.",
                    "enumDescriptions": [
                      "A link to a deprecated resource was created.",
                      "No results are present on a particular list page.",
                      "A given scope cannot be reached.",
                      "The route's nextHopIp address is not assigned to an instance on the network.",
                      "The route's nextHopInstance URL refers to an instance that does not exist.",
                      "The route's nextHopInstance URL refers to an instance that is not on the same network as the route.",
                      "The route's next hop instance cannot ip forward.",
                      "The route's next hop instance does not have a status of RUNNING.",
                      "The operation involved use of an injected kernel, which is deprecated.",
                      "The user attempted to use a resource that requires a TOS they have not accepted.",
                      "The user created a boot disk that is larger than image size.",
                      "One or more of the resources set to auto-delete could not be deleted because they were in use.",
                      "Instance template used in instance group manager is valid as such, but its application does not make a lot of sense, because it allows only single instance in instance group.",
                      "Error which is not critical. We decided to continue the process despite the mentioned error.",
                      "Warning about failed cleanup of transient changes made by a failed operation.",
                      "Warning that value of a field has been overridden. Deprecated unused field.",
                      "Warning that a resource is in use.",
                      "A resource depends on a missing type",
                      "Warning that is present in an external api call",
                      "When a resource schema validation is ignored.",
                      "When undeclared properties in the schema are present",
                      "When deploying and at least one of the resources has a type marked as experimental",
                      "When deploying and at least one of the resources has a type marked as deprecated",
                      "Success is reported, but some results may be missing due to errors",
                      "When deploying a deployment with a exceedingly large number of resources"
                    ]
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding)."
                        },
                        "value": {
                          "type": "string",
                          "description": "[Output Only] A warning data value corresponding to the key."
                        }
                      }
                    },
                    "description": "[Output Only] Metadata about this warning in key: value format. For example: \"data\": [ { \"key\": \"scope\", \"value\": \"zones/us-east1-d\" } "
                  },
                  "message": {
                    "type": "string",
                    "description": "[Output Only] A human-readable description of the warning code."
                  }
                }
              },
              "description": "[Output Only] If warning messages are generated during processing of the operation, this field will be populated."
            },
            "startTime": {
              "type": "string",
              "description": "[Output Only] The time that this operation was started by the server. This value is in RFC3339 text format."
            },
            "insertTime": {
              "type": "string",
              "description": "[Output Only] The time that this operation was requested. This value is in RFC3339 text format."
            },
            "targetLink": {
              "type": "string",
              "description": "[Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the persistent disk that the snapshot was created from."
            },
            "description": {
              "type": "string",
              "description": "[Output Only] A textual description of the operation, which is set when the operation is created."
            },
            "operationType": {
              "type": "string",
              "description": "[Output Only] The type of operation, such as `insert`, `update`, or `delete`, and so on."
            },
            "statusMessage": {
              "type": "string",
              "description": "[Output Only] An optional textual description of the current status of the operation."
            },
            "httpErrorMessage": {
              "type": "string",
              "description": "[Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as `NOT FOUND`."
            },
            "operationGroupId": {
              "type": "string",
              "description": "[Output Only] An ID that represents a group of operations, such as when a group of operations results from a `bulkInsert` API request."
            },
            "clientOperationId": {
              "type": "string",
              "description": "[Output Only] The value of `requestId` if you provided it in the request. Not present otherwise."
            },
            "creationTimestamp": {
              "type": "string",
              "description": "[Deprecated] This field is deprecated."
            },
            "httpErrorStatusCode": {
              "type": "integer",
              "format": "int32",
              "description": "[Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a `404` means the resource was not found."
            }
          },
          "description": "Represents an Operation resource. Google Compute Engine has three Operation resources: * [Global](/compute/docs/reference/rest/{$api_version}/globalOperations) * [Regional](/compute/docs/reference/rest/{$api_version}/regionOperations) * [Zonal](/compute/docs/reference/rest/{$api_version}/zoneOperations) You can use an operation resource to manage asynchronous API requests. For more information, read Handling API responses. Operations can be global, regional or zonal. - For global operations, use the `globalOperations` resource. - For regional operations, use the `regionOperations` resource. - For zonal operations, use the `zonalOperations` resource. For more information, read Global, Regional, and Zonal Resources."
        }
      ]
  deploymentmanager.deployments.testIamPermissions:
    description: |-
      Returns permissions that a caller has on the specified resource.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/docs/reference/latest/deployments/testIamPermissions
    example:
      inputs: [
        {
          "id": "TestPermissionsRequest",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The set of permissions to check for the 'resource'. Permissions with wildcards (such as '*' or 'storage.*') are not allowed."
            }
          }
        }
      ]
      outputs: [
        {
          "id": "TestPermissionsResponse",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
            }
          }
        }
      ]
  deploymentmanager.deployments.update:
    description: |-
      Updates a deployment and all of the resources described by the deployment manifest.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/docs/reference/latest/deployments/update
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uint64",
              "description": "[Output Only] The unique identifier for the operation. This identifier is defined by the server."
            },
            "kind": {
              "type": "string",
              "default": "deploymentmanager#operation",
              "description": "[Output Only] Type of the resource. Always `compute#operation` for Operation resources."
            },
            "name": {
              "type": "string",
              "description": "[Output Only] Name of the operation."
            },
            "user": {
              "type": "string",
              "description": "[Output Only] User who requested the operation, for example: `user@example.com`."
            },
            "zone": {
              "type": "string",
              "description": "[Output Only] The URL of the zone where the operation resides. Only applicable when performing per-zone operations."
            },
            "error": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "[Output Only] The error type identifier for this error."
                      },
                      "message": {
                        "type": "string",
                        "description": "[Output Only] An optional, human-readable error message."
                      },
                      "location": {
                        "type": "string",
                        "description": "[Output Only] Indicates the field in the request that caused the error. This property is optional."
                      }
                    }
                  },
                  "description": "[Output Only] The array of errors encountered while processing this operation."
                }
              },
              "description": "[Output Only] If errors are generated during processing of the operation, this field will be populated."
            },
            "region": {
              "type": "string",
              "description": "[Output Only] The URL of the region where the operation resides. Only applicable when performing regional operations."
            },
            "status": {
              "enum": [
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "[Output Only] The status of the operation, which can be one of the following: `PENDING`, `RUNNING`, or `DONE`.",
              "enumDescriptions": [
                "",
                "",
                ""
              ]
            },
            "endTime": {
              "type": "string",
              "description": "[Output Only] The time that this operation was completed. This value is in RFC3339 text format."
            },
            "progress": {
              "type": "integer",
              "format": "int32",
              "description": "[Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses."
            },
            "selfLink": {
              "type": "string",
              "description": "[Output Only] Server-defined URL for the resource."
            },
            "targetId": {
              "type": "string",
              "format": "uint64",
              "description": "[Output Only] The unique target ID, which identifies a specific incarnation of the target resource."
            },
            "warnings": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "code": {
                    "enum": [
                      "DEPRECATED_RESOURCE_USED",
                      "NO_RESULTS_ON_PAGE",
                      "UNREACHABLE",
                      "NEXT_HOP_ADDRESS_NOT_ASSIGNED",
                      "NEXT_HOP_INSTANCE_NOT_FOUND",
                      "NEXT_HOP_INSTANCE_NOT_ON_NETWORK",
                      "NEXT_HOP_CANNOT_IP_FORWARD",
                      "NEXT_HOP_NOT_RUNNING",
                      "INJECTED_KERNELS_DEPRECATED",
                      "REQUIRED_TOS_AGREEMENT",
                      "DISK_SIZE_LARGER_THAN_IMAGE_SIZE",
                      "RESOURCE_NOT_DELETED",
                      "SINGLE_INSTANCE_PROPERTY_TEMPLATE",
                      "NOT_CRITICAL_ERROR",
                      "CLEANUP_FAILED",
                      "FIELD_VALUE_OVERRIDEN",
                      "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING",
                      "MISSING_TYPE_DEPENDENCY",
                      "EXTERNAL_API_WARNING",
                      "SCHEMA_VALIDATION_IGNORED",
                      "UNDECLARED_PROPERTIES",
                      "EXPERIMENTAL_TYPE_USED",
                      "DEPRECATED_TYPE_USED",
                      "PARTIAL_SUCCESS",
                      "LARGE_DEPLOYMENT_WARNING"
                    ],
                    "type": "string",
                    "description": "[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.",
                    "enumDescriptions": [
                      "A link to a deprecated resource was created.",
                      "No results are present on a particular list page.",
                      "A given scope cannot be reached.",
                      "The route's nextHopIp address is not assigned to an instance on the network.",
                      "The route's nextHopInstance URL refers to an instance that does not exist.",
                      "The route's nextHopInstance URL refers to an instance that is not on the same network as the route.",
                      "The route's next hop instance cannot ip forward.",
                      "The route's next hop instance does not have a status of RUNNING.",
                      "The operation involved use of an injected kernel, which is deprecated.",
                      "The user attempted to use a resource that requires a TOS they have not accepted.",
                      "The user created a boot disk that is larger than image size.",
                      "One or more of the resources set to auto-delete could not be deleted because they were in use.",
                      "Instance template used in instance group manager is valid as such, but its application does not make a lot of sense, because it allows only single instance in instance group.",
                      "Error which is not critical. We decided to continue the process despite the mentioned error.",
                      "Warning about failed cleanup of transient changes made by a failed operation.",
                      "Warning that value of a field has been overridden. Deprecated unused field.",
                      "Warning that a resource is in use.",
                      "A resource depends on a missing type",
                      "Warning that is present in an external api call",
                      "When a resource schema validation is ignored.",
                      "When undeclared properties in the schema are present",
                      "When deploying and at least one of the resources has a type marked as experimental",
                      "When deploying and at least one of the resources has a type marked as deprecated",
                      "Success is reported, but some results may be missing due to errors",
                      "When deploying a deployment with a exceedingly large number of resources"
                    ]
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding)."
                        },
                        "value": {
                          "type": "string",
                          "description": "[Output Only] A warning data value corresponding to the key."
                        }
                      }
                    },
                    "description": "[Output Only] Metadata about this warning in key: value format. For example: \"data\": [ { \"key\": \"scope\", \"value\": \"zones/us-east1-d\" } "
                  },
                  "message": {
                    "type": "string",
                    "description": "[Output Only] A human-readable description of the warning code."
                  }
                }
              },
              "description": "[Output Only] If warning messages are generated during processing of the operation, this field will be populated."
            },
            "startTime": {
              "type": "string",
              "description": "[Output Only] The time that this operation was started by the server. This value is in RFC3339 text format."
            },
            "insertTime": {
              "type": "string",
              "description": "[Output Only] The time that this operation was requested. This value is in RFC3339 text format."
            },
            "targetLink": {
              "type": "string",
              "description": "[Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the persistent disk that the snapshot was created from."
            },
            "description": {
              "type": "string",
              "description": "[Output Only] A textual description of the operation, which is set when the operation is created."
            },
            "operationType": {
              "type": "string",
              "description": "[Output Only] The type of operation, such as `insert`, `update`, or `delete`, and so on."
            },
            "statusMessage": {
              "type": "string",
              "description": "[Output Only] An optional textual description of the current status of the operation."
            },
            "httpErrorMessage": {
              "type": "string",
              "description": "[Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as `NOT FOUND`."
            },
            "operationGroupId": {
              "type": "string",
              "description": "[Output Only] An ID that represents a group of operations, such as when a group of operations results from a `bulkInsert` API request."
            },
            "clientOperationId": {
              "type": "string",
              "description": "[Output Only] The value of `requestId` if you provided it in the request. Not present otherwise."
            },
            "creationTimestamp": {
              "type": "string",
              "description": "[Deprecated] This field is deprecated."
            },
            "httpErrorStatusCode": {
              "type": "integer",
              "format": "int32",
              "description": "[Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a `404` means the resource was not found."
            }
          },
          "description": "Represents an Operation resource. Google Compute Engine has three Operation resources: * [Global](/compute/docs/reference/rest/{$api_version}/globalOperations) * [Regional](/compute/docs/reference/rest/{$api_version}/regionOperations) * [Zonal](/compute/docs/reference/rest/{$api_version}/zoneOperations) You can use an operation resource to manage asynchronous API requests. For more information, read Handling API responses. Operations can be global, regional or zonal. - For global operations, use the `globalOperations` resource. - For regional operations, use the `regionOperations` resource. - For zonal operations, use the `zonalOperations` resource. For more information, read Global, Regional, and Zonal Resources."
        }
      ]
  deploymentmanager.manifests.get:
    description: |-
      Gets information about a specific manifest.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/docs/reference/latest/manifests/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Manifest",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uint64"
            },
            "name": {
              "type": "string",
              "description": "Output only. The name of the manifest."
            },
            "config": {
              "id": "ConfigFile",
              "type": "object",
              "properties": {
                "content": {
                  "type": "string",
                  "description": "The contents of the file."
                }
              },
              "description": "Output only. The YAML configuration for this manifest."
            },
            "layout": {
              "type": "string",
              "description": "Output only. The YAML layout for this manifest."
            },
            "imports": {
              "type": "array",
              "items": {
                "id": "ImportFile",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the file."
                  },
                  "content": {
                    "type": "string",
                    "description": "The contents of the file."
                  }
                }
              },
              "description": "Output only. The imported files for this manifest."
            },
            "selfLink": {
              "type": "string",
              "description": "Output only. Self link for the manifest."
            },
            "insertTime": {
              "type": "string",
              "description": "Output only. Creation timestamp in RFC3339 text format."
            },
            "expandedConfig": {
              "type": "string",
              "description": "Output only. The fully-expanded configuration file, including any templates and references."
            },
            "manifestSizeBytes": {
              "type": "string",
              "format": "int64",
              "description": "Output only. The computed size of the fully expanded manifest."
            },
            "manifestSizeLimitBytes": {
              "type": "string",
              "format": "int64",
              "description": "Output only. The size limit for expanded manifests in the project."
            }
          }
        }
      ]
  deploymentmanager.manifests.list:
    description: |-
      Lists all manifests for a given deployment.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/docs/reference/latest/manifests/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ManifestsListResponse",
          "type": "object",
          "properties": {
            "manifests": {
              "type": "array",
              "items": {
                "id": "Manifest",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uint64"
                  },
                  "name": {
                    "type": "string",
                    "description": "Output only. The name of the manifest."
                  },
                  "config": {
                    "id": "ConfigFile",
                    "type": "object",
                    "properties": {
                      "content": {
                        "type": "string",
                        "description": "The contents of the file."
                      }
                    },
                    "description": "Output only. The YAML configuration for this manifest."
                  },
                  "layout": {
                    "type": "string",
                    "description": "Output only. The YAML layout for this manifest."
                  },
                  "imports": {
                    "type": "array",
                    "items": {
                      "id": "ImportFile",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the file."
                        },
                        "content": {
                          "type": "string",
                          "description": "The contents of the file."
                        }
                      }
                    },
                    "description": "Output only. The imported files for this manifest."
                  },
                  "selfLink": {
                    "type": "string",
                    "description": "Output only. Self link for the manifest."
                  },
                  "insertTime": {
                    "type": "string",
                    "description": "Output only. Creation timestamp in RFC3339 text format."
                  },
                  "expandedConfig": {
                    "type": "string",
                    "description": "Output only. The fully-expanded configuration file, including any templates and references."
                  },
                  "manifestSizeBytes": {
                    "type": "string",
                    "format": "int64",
                    "description": "Output only. The computed size of the fully expanded manifest."
                  },
                  "manifestSizeLimitBytes": {
                    "type": "string",
                    "format": "int64",
                    "description": "Output only. The size limit for expanded manifests in the project."
                  }
                }
              },
              "description": "Output only. Manifests contained in this list response."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Output only. A token used to continue a truncated list request."
            }
          },
          "description": "A response containing a partial list of manifests and a page token used to build the next request if the request has been truncated."
        }
      ]
  deploymentmanager.operations.get:
    description: |-
      Gets information about a specific operation.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/docs/reference/latest/operations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uint64",
              "description": "[Output Only] The unique identifier for the operation. This identifier is defined by the server."
            },
            "kind": {
              "type": "string",
              "default": "deploymentmanager#operation",
              "description": "[Output Only] Type of the resource. Always `compute#operation` for Operation resources."
            },
            "name": {
              "type": "string",
              "description": "[Output Only] Name of the operation."
            },
            "user": {
              "type": "string",
              "description": "[Output Only] User who requested the operation, for example: `user@example.com`."
            },
            "zone": {
              "type": "string",
              "description": "[Output Only] The URL of the zone where the operation resides. Only applicable when performing per-zone operations."
            },
            "error": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "[Output Only] The error type identifier for this error."
                      },
                      "message": {
                        "type": "string",
                        "description": "[Output Only] An optional, human-readable error message."
                      },
                      "location": {
                        "type": "string",
                        "description": "[Output Only] Indicates the field in the request that caused the error. This property is optional."
                      }
                    }
                  },
                  "description": "[Output Only] The array of errors encountered while processing this operation."
                }
              },
              "description": "[Output Only] If errors are generated during processing of the operation, this field will be populated."
            },
            "region": {
              "type": "string",
              "description": "[Output Only] The URL of the region where the operation resides. Only applicable when performing regional operations."
            },
            "status": {
              "enum": [
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "[Output Only] The status of the operation, which can be one of the following: `PENDING`, `RUNNING`, or `DONE`.",
              "enumDescriptions": [
                "",
                "",
                ""
              ]
            },
            "endTime": {
              "type": "string",
              "description": "[Output Only] The time that this operation was completed. This value is in RFC3339 text format."
            },
            "progress": {
              "type": "integer",
              "format": "int32",
              "description": "[Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses."
            },
            "selfLink": {
              "type": "string",
              "description": "[Output Only] Server-defined URL for the resource."
            },
            "targetId": {
              "type": "string",
              "format": "uint64",
              "description": "[Output Only] The unique target ID, which identifies a specific incarnation of the target resource."
            },
            "warnings": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "code": {
                    "enum": [
                      "DEPRECATED_RESOURCE_USED",
                      "NO_RESULTS_ON_PAGE",
                      "UNREACHABLE",
                      "NEXT_HOP_ADDRESS_NOT_ASSIGNED",
                      "NEXT_HOP_INSTANCE_NOT_FOUND",
                      "NEXT_HOP_INSTANCE_NOT_ON_NETWORK",
                      "NEXT_HOP_CANNOT_IP_FORWARD",
                      "NEXT_HOP_NOT_RUNNING",
                      "INJECTED_KERNELS_DEPRECATED",
                      "REQUIRED_TOS_AGREEMENT",
                      "DISK_SIZE_LARGER_THAN_IMAGE_SIZE",
                      "RESOURCE_NOT_DELETED",
                      "SINGLE_INSTANCE_PROPERTY_TEMPLATE",
                      "NOT_CRITICAL_ERROR",
                      "CLEANUP_FAILED",
                      "FIELD_VALUE_OVERRIDEN",
                      "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING",
                      "MISSING_TYPE_DEPENDENCY",
                      "EXTERNAL_API_WARNING",
                      "SCHEMA_VALIDATION_IGNORED",
                      "UNDECLARED_PROPERTIES",
                      "EXPERIMENTAL_TYPE_USED",
                      "DEPRECATED_TYPE_USED",
                      "PARTIAL_SUCCESS",
                      "LARGE_DEPLOYMENT_WARNING"
                    ],
                    "type": "string",
                    "description": "[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.",
                    "enumDescriptions": [
                      "A link to a deprecated resource was created.",
                      "No results are present on a particular list page.",
                      "A given scope cannot be reached.",
                      "The route's nextHopIp address is not assigned to an instance on the network.",
                      "The route's nextHopInstance URL refers to an instance that does not exist.",
                      "The route's nextHopInstance URL refers to an instance that is not on the same network as the route.",
                      "The route's next hop instance cannot ip forward.",
                      "The route's next hop instance does not have a status of RUNNING.",
                      "The operation involved use of an injected kernel, which is deprecated.",
                      "The user attempted to use a resource that requires a TOS they have not accepted.",
                      "The user created a boot disk that is larger than image size.",
                      "One or more of the resources set to auto-delete could not be deleted because they were in use.",
                      "Instance template used in instance group manager is valid as such, but its application does not make a lot of sense, because it allows only single instance in instance group.",
                      "Error which is not critical. We decided to continue the process despite the mentioned error.",
                      "Warning about failed cleanup of transient changes made by a failed operation.",
                      "Warning that value of a field has been overridden. Deprecated unused field.",
                      "Warning that a resource is in use.",
                      "A resource depends on a missing type",
                      "Warning that is present in an external api call",
                      "When a resource schema validation is ignored.",
                      "When undeclared properties in the schema are present",
                      "When deploying and at least one of the resources has a type marked as experimental",
                      "When deploying and at least one of the resources has a type marked as deprecated",
                      "Success is reported, but some results may be missing due to errors",
                      "When deploying a deployment with a exceedingly large number of resources"
                    ]
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding)."
                        },
                        "value": {
                          "type": "string",
                          "description": "[Output Only] A warning data value corresponding to the key."
                        }
                      }
                    },
                    "description": "[Output Only] Metadata about this warning in key: value format. For example: \"data\": [ { \"key\": \"scope\", \"value\": \"zones/us-east1-d\" } "
                  },
                  "message": {
                    "type": "string",
                    "description": "[Output Only] A human-readable description of the warning code."
                  }
                }
              },
              "description": "[Output Only] If warning messages are generated during processing of the operation, this field will be populated."
            },
            "startTime": {
              "type": "string",
              "description": "[Output Only] The time that this operation was started by the server. This value is in RFC3339 text format."
            },
            "insertTime": {
              "type": "string",
              "description": "[Output Only] The time that this operation was requested. This value is in RFC3339 text format."
            },
            "targetLink": {
              "type": "string",
              "description": "[Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the persistent disk that the snapshot was created from."
            },
            "description": {
              "type": "string",
              "description": "[Output Only] A textual description of the operation, which is set when the operation is created."
            },
            "operationType": {
              "type": "string",
              "description": "[Output Only] The type of operation, such as `insert`, `update`, or `delete`, and so on."
            },
            "statusMessage": {
              "type": "string",
              "description": "[Output Only] An optional textual description of the current status of the operation."
            },
            "httpErrorMessage": {
              "type": "string",
              "description": "[Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as `NOT FOUND`."
            },
            "operationGroupId": {
              "type": "string",
              "description": "[Output Only] An ID that represents a group of operations, such as when a group of operations results from a `bulkInsert` API request."
            },
            "clientOperationId": {
              "type": "string",
              "description": "[Output Only] The value of `requestId` if you provided it in the request. Not present otherwise."
            },
            "creationTimestamp": {
              "type": "string",
              "description": "[Deprecated] This field is deprecated."
            },
            "httpErrorStatusCode": {
              "type": "integer",
              "format": "int32",
              "description": "[Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a `404` means the resource was not found."
            }
          },
          "description": "Represents an Operation resource. Google Compute Engine has three Operation resources: * [Global](/compute/docs/reference/rest/{$api_version}/globalOperations) * [Regional](/compute/docs/reference/rest/{$api_version}/regionOperations) * [Zonal](/compute/docs/reference/rest/{$api_version}/zoneOperations) You can use an operation resource to manage asynchronous API requests. For more information, read Handling API responses. Operations can be global, regional or zonal. - For global operations, use the `globalOperations` resource. - For regional operations, use the `regionOperations` resource. - For zonal operations, use the `zonalOperations` resource. For more information, read Global, Regional, and Zonal Resources."
        }
      ]
  deploymentmanager.operations.list:
    description: |-
      Lists all operations for a project.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/docs/reference/latest/operations/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "OperationsListResponse",
          "type": "object",
          "properties": {
            "operations": {
              "type": "array",
              "items": {
                "id": "Operation",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uint64",
                    "description": "[Output Only] The unique identifier for the operation. This identifier is defined by the server."
                  },
                  "kind": {
                    "type": "string",
                    "default": "deploymentmanager#operation",
                    "description": "[Output Only] Type of the resource. Always `compute#operation` for Operation resources."
                  },
                  "name": {
                    "type": "string",
                    "description": "[Output Only] Name of the operation."
                  },
                  "user": {
                    "type": "string",
                    "description": "[Output Only] User who requested the operation, for example: `user@example.com`."
                  },
                  "zone": {
                    "type": "string",
                    "description": "[Output Only] The URL of the zone where the operation resides. Only applicable when performing per-zone operations."
                  },
                  "error": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "[Output Only] The error type identifier for this error."
                            },
                            "message": {
                              "type": "string",
                              "description": "[Output Only] An optional, human-readable error message."
                            },
                            "location": {
                              "type": "string",
                              "description": "[Output Only] Indicates the field in the request that caused the error. This property is optional."
                            }
                          }
                        },
                        "description": "[Output Only] The array of errors encountered while processing this operation."
                      }
                    },
                    "description": "[Output Only] If errors are generated during processing of the operation, this field will be populated."
                  },
                  "region": {
                    "type": "string",
                    "description": "[Output Only] The URL of the region where the operation resides. Only applicable when performing regional operations."
                  },
                  "status": {
                    "enum": [
                      "PENDING",
                      "RUNNING",
                      "DONE"
                    ],
                    "type": "string",
                    "description": "[Output Only] The status of the operation, which can be one of the following: `PENDING`, `RUNNING`, or `DONE`.",
                    "enumDescriptions": [
                      "",
                      "",
                      ""
                    ]
                  },
                  "endTime": {
                    "type": "string",
                    "description": "[Output Only] The time that this operation was completed. This value is in RFC3339 text format."
                  },
                  "progress": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses."
                  },
                  "selfLink": {
                    "type": "string",
                    "description": "[Output Only] Server-defined URL for the resource."
                  },
                  "targetId": {
                    "type": "string",
                    "format": "uint64",
                    "description": "[Output Only] The unique target ID, which identifies a specific incarnation of the target resource."
                  },
                  "warnings": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "enum": [
                            "DEPRECATED_RESOURCE_USED",
                            "NO_RESULTS_ON_PAGE",
                            "UNREACHABLE",
                            "NEXT_HOP_ADDRESS_NOT_ASSIGNED",
                            "NEXT_HOP_INSTANCE_NOT_FOUND",
                            "NEXT_HOP_INSTANCE_NOT_ON_NETWORK",
                            "NEXT_HOP_CANNOT_IP_FORWARD",
                            "NEXT_HOP_NOT_RUNNING",
                            "INJECTED_KERNELS_DEPRECATED",
                            "REQUIRED_TOS_AGREEMENT",
                            "DISK_SIZE_LARGER_THAN_IMAGE_SIZE",
                            "RESOURCE_NOT_DELETED",
                            "SINGLE_INSTANCE_PROPERTY_TEMPLATE",
                            "NOT_CRITICAL_ERROR",
                            "CLEANUP_FAILED",
                            "FIELD_VALUE_OVERRIDEN",
                            "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING",
                            "MISSING_TYPE_DEPENDENCY",
                            "EXTERNAL_API_WARNING",
                            "SCHEMA_VALIDATION_IGNORED",
                            "UNDECLARED_PROPERTIES",
                            "EXPERIMENTAL_TYPE_USED",
                            "DEPRECATED_TYPE_USED",
                            "PARTIAL_SUCCESS",
                            "LARGE_DEPLOYMENT_WARNING"
                          ],
                          "type": "string",
                          "description": "[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.",
                          "enumDescriptions": [
                            "A link to a deprecated resource was created.",
                            "No results are present on a particular list page.",
                            "A given scope cannot be reached.",
                            "The route's nextHopIp address is not assigned to an instance on the network.",
                            "The route's nextHopInstance URL refers to an instance that does not exist.",
                            "The route's nextHopInstance URL refers to an instance that is not on the same network as the route.",
                            "The route's next hop instance cannot ip forward.",
                            "The route's next hop instance does not have a status of RUNNING.",
                            "The operation involved use of an injected kernel, which is deprecated.",
                            "The user attempted to use a resource that requires a TOS they have not accepted.",
                            "The user created a boot disk that is larger than image size.",
                            "One or more of the resources set to auto-delete could not be deleted because they were in use.",
                            "Instance template used in instance group manager is valid as such, but its application does not make a lot of sense, because it allows only single instance in instance group.",
                            "Error which is not critical. We decided to continue the process despite the mentioned error.",
                            "Warning about failed cleanup of transient changes made by a failed operation.",
                            "Warning that value of a field has been overridden. Deprecated unused field.",
                            "Warning that a resource is in use.",
                            "A resource depends on a missing type",
                            "Warning that is present in an external api call",
                            "When a resource schema validation is ignored.",
                            "When undeclared properties in the schema are present",
                            "When deploying and at least one of the resources has a type marked as experimental",
                            "When deploying and at least one of the resources has a type marked as deprecated",
                            "Success is reported, but some results may be missing due to errors",
                            "When deploying a deployment with a exceedingly large number of resources"
                          ]
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "key": {
                                "type": "string",
                                "description": "[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding)."
                              },
                              "value": {
                                "type": "string",
                                "description": "[Output Only] A warning data value corresponding to the key."
                              }
                            }
                          },
                          "description": "[Output Only] Metadata about this warning in key: value format. For example: \"data\": [ { \"key\": \"scope\", \"value\": \"zones/us-east1-d\" } "
                        },
                        "message": {
                          "type": "string",
                          "description": "[Output Only] A human-readable description of the warning code."
                        }
                      }
                    },
                    "description": "[Output Only] If warning messages are generated during processing of the operation, this field will be populated."
                  },
                  "startTime": {
                    "type": "string",
                    "description": "[Output Only] The time that this operation was started by the server. This value is in RFC3339 text format."
                  },
                  "insertTime": {
                    "type": "string",
                    "description": "[Output Only] The time that this operation was requested. This value is in RFC3339 text format."
                  },
                  "targetLink": {
                    "type": "string",
                    "description": "[Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the persistent disk that the snapshot was created from."
                  },
                  "description": {
                    "type": "string",
                    "description": "[Output Only] A textual description of the operation, which is set when the operation is created."
                  },
                  "operationType": {
                    "type": "string",
                    "description": "[Output Only] The type of operation, such as `insert`, `update`, or `delete`, and so on."
                  },
                  "statusMessage": {
                    "type": "string",
                    "description": "[Output Only] An optional textual description of the current status of the operation."
                  },
                  "httpErrorMessage": {
                    "type": "string",
                    "description": "[Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as `NOT FOUND`."
                  },
                  "operationGroupId": {
                    "type": "string",
                    "description": "[Output Only] An ID that represents a group of operations, such as when a group of operations results from a `bulkInsert` API request."
                  },
                  "clientOperationId": {
                    "type": "string",
                    "description": "[Output Only] The value of `requestId` if you provided it in the request. Not present otherwise."
                  },
                  "creationTimestamp": {
                    "type": "string",
                    "description": "[Deprecated] This field is deprecated."
                  },
                  "httpErrorStatusCode": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a `404` means the resource was not found."
                  }
                },
                "description": "Represents an Operation resource. Google Compute Engine has three Operation resources: * [Global](/compute/docs/reference/rest/{$api_version}/globalOperations) * [Regional](/compute/docs/reference/rest/{$api_version}/regionOperations) * [Zonal](/compute/docs/reference/rest/{$api_version}/zoneOperations) You can use an operation resource to manage asynchronous API requests. For more information, read Handling API responses. Operations can be global, regional or zonal. - For global operations, use the `globalOperations` resource. - For regional operations, use the `regionOperations` resource. - For zonal operations, use the `zonalOperations` resource. For more information, read Global, Regional, and Zonal Resources."
              },
              "description": "Output only. Operations contained in this list response."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Output only. A token used to continue a truncated list request."
            }
          },
          "description": "A response containing a partial list of operations and a page token used to build the next request if the request has been truncated."
        }
      ]
  deploymentmanager.resources.get:
    description: |-
      Gets information about a single resource.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/docs/reference/latest/resources/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Resource",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uint64"
            },
            "url": {
              "type": "string",
              "description": "Output only. The URL of the actual resource."
            },
            "name": {
              "type": "string",
              "description": "Output only. The name of the resource as it appears in the YAML config."
            },
            "type": {
              "type": "string",
              "description": "Output only. The type of the resource, for example `compute.v1.instance`, or `cloudfunctions.v1beta1.function`."
            },
            "update": {
              "id": "ResourceUpdate",
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "[Output Only] The error type identifier for this error."
                          },
                          "message": {
                            "type": "string",
                            "description": "[Output Only] An optional, human-readable error message."
                          },
                          "location": {
                            "type": "string",
                            "description": "[Output Only] Indicates the field in the request that caused the error. This property is optional."
                          }
                        }
                      },
                      "description": "[Output Only] The array of errors encountered while processing this operation."
                    }
                  },
                  "description": "Output only. If errors are generated during update of the resource, this field will be populated."
                },
                "state": {
                  "enum": [
                    "PENDING",
                    "IN_PROGRESS",
                    "IN_PREVIEW",
                    "FAILED",
                    "ABORTED"
                  ],
                  "type": "string",
                  "description": "Output only. The state of the resource.",
                  "enumDescriptions": [
                    "There are changes pending for this resource.",
                    "The service is executing changes on the resource.",
                    "The service is previewing changes on the resource.",
                    "The service has failed to change the resource.",
                    "The service has aborted trying to change the resource."
                  ]
                },
                "intent": {
                  "enum": [
                    "CREATE_OR_ACQUIRE",
                    "DELETE",
                    "ACQUIRE",
                    "UPDATE",
                    "ABANDON",
                    "CREATE"
                  ],
                  "type": "string",
                  "description": "Output only. The intent of the resource: `PREVIEW`, `UPDATE`, or `CANCEL`.",
                  "enumDescriptions": [
                    "The resource is scheduled to be created, or if it already exists, acquired.",
                    "The resource is scheduled to be deleted.",
                    "The resource is scheduled to be acquired.",
                    "The resource is scheduled to be updated via the UPDATE method.",
                    "The resource is scheduled to be abandoned.",
                    "The resource is scheduled to be created."
                  ]
                },
                "manifest": {
                  "type": "string",
                  "description": "Output only. URL of the manifest representing the update configuration of this resource."
                },
                "warnings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "enum": [
                          "DEPRECATED_RESOURCE_USED",
                          "NO_RESULTS_ON_PAGE",
                          "UNREACHABLE",
                          "NEXT_HOP_ADDRESS_NOT_ASSIGNED",
                          "NEXT_HOP_INSTANCE_NOT_FOUND",
                          "NEXT_HOP_INSTANCE_NOT_ON_NETWORK",
                          "NEXT_HOP_CANNOT_IP_FORWARD",
                          "NEXT_HOP_NOT_RUNNING",
                          "INJECTED_KERNELS_DEPRECATED",
                          "REQUIRED_TOS_AGREEMENT",
                          "DISK_SIZE_LARGER_THAN_IMAGE_SIZE",
                          "RESOURCE_NOT_DELETED",
                          "SINGLE_INSTANCE_PROPERTY_TEMPLATE",
                          "NOT_CRITICAL_ERROR",
                          "CLEANUP_FAILED",
                          "FIELD_VALUE_OVERRIDEN",
                          "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING",
                          "MISSING_TYPE_DEPENDENCY",
                          "EXTERNAL_API_WARNING",
                          "SCHEMA_VALIDATION_IGNORED",
                          "UNDECLARED_PROPERTIES",
                          "EXPERIMENTAL_TYPE_USED",
                          "DEPRECATED_TYPE_USED",
                          "PARTIAL_SUCCESS",
                          "LARGE_DEPLOYMENT_WARNING"
                        ],
                        "type": "string",
                        "description": "[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.",
                        "enumDescriptions": [
                          "A link to a deprecated resource was created.",
                          "No results are present on a particular list page.",
                          "A given scope cannot be reached.",
                          "The route's nextHopIp address is not assigned to an instance on the network.",
                          "The route's nextHopInstance URL refers to an instance that does not exist.",
                          "The route's nextHopInstance URL refers to an instance that is not on the same network as the route.",
                          "The route's next hop instance cannot ip forward.",
                          "The route's next hop instance does not have a status of RUNNING.",
                          "The operation involved use of an injected kernel, which is deprecated.",
                          "The user attempted to use a resource that requires a TOS they have not accepted.",
                          "The user created a boot disk that is larger than image size.",
                          "One or more of the resources set to auto-delete could not be deleted because they were in use.",
                          "Instance template used in instance group manager is valid as such, but its application does not make a lot of sense, because it allows only single instance in instance group.",
                          "Error which is not critical. We decided to continue the process despite the mentioned error.",
                          "Warning about failed cleanup of transient changes made by a failed operation.",
                          "Warning that value of a field has been overridden. Deprecated unused field.",
                          "Warning that a resource is in use.",
                          "A resource depends on a missing type",
                          "Warning that is present in an external api call",
                          "When a resource schema validation is ignored.",
                          "When undeclared properties in the schema are present",
                          "When deploying and at least one of the resources has a type marked as experimental",
                          "When deploying and at least one of the resources has a type marked as deprecated",
                          "Success is reported, but some results may be missing due to errors",
                          "When deploying a deployment with a exceedingly large number of resources"
                        ]
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding)."
                            },
                            "value": {
                              "type": "string",
                              "description": "[Output Only] A warning data value corresponding to the key."
                            }
                          }
                        },
                        "description": "[Output Only] Metadata about this warning in key: value format. For example: \"data\": [ { \"key\": \"scope\", \"value\": \"zones/us-east1-d\" } "
                      },
                      "message": {
                        "type": "string",
                        "description": "[Output Only] A human-readable description of the warning code."
                      }
                    }
                  },
                  "description": "Output only. If warning messages are generated during processing of this resource, this field will be populated."
                },
                "properties": {
                  "type": "string",
                  "description": "Output only. The set of updated properties for this resource, before references are expanded. Returned as serialized YAML."
                },
                "accessControl": {
                  "id": "ResourceAccessControl",
                  "type": "object",
                  "properties": {
                    "gcpIamPolicy": {
                      "type": "string",
                      "description": "The GCP IAM Policy to set on the resource."
                    }
                  },
                  "description": "The Access Control Policy to set on this resource after updating the resource itself."
                },
                "finalProperties": {
                  "type": "string",
                  "description": "Output only. The expanded properties of the resource with reference values expanded. Returned as serialized YAML."
                }
              },
              "description": "Output only. If Deployment Manager is currently updating or previewing an update to this resource, the updated configuration appears here."
            },
            "manifest": {
              "type": "string",
              "description": "Output only. URL of the manifest representing the current configuration of this resource."
            },
            "warnings": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "code": {
                    "enum": [
                      "DEPRECATED_RESOURCE_USED",
                      "NO_RESULTS_ON_PAGE",
                      "UNREACHABLE",
                      "NEXT_HOP_ADDRESS_NOT_ASSIGNED",
                      "NEXT_HOP_INSTANCE_NOT_FOUND",
                      "NEXT_HOP_INSTANCE_NOT_ON_NETWORK",
                      "NEXT_HOP_CANNOT_IP_FORWARD",
                      "NEXT_HOP_NOT_RUNNING",
                      "INJECTED_KERNELS_DEPRECATED",
                      "REQUIRED_TOS_AGREEMENT",
                      "DISK_SIZE_LARGER_THAN_IMAGE_SIZE",
                      "RESOURCE_NOT_DELETED",
                      "SINGLE_INSTANCE_PROPERTY_TEMPLATE",
                      "NOT_CRITICAL_ERROR",
                      "CLEANUP_FAILED",
                      "FIELD_VALUE_OVERRIDEN",
                      "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING",
                      "MISSING_TYPE_DEPENDENCY",
                      "EXTERNAL_API_WARNING",
                      "SCHEMA_VALIDATION_IGNORED",
                      "UNDECLARED_PROPERTIES",
                      "EXPERIMENTAL_TYPE_USED",
                      "DEPRECATED_TYPE_USED",
                      "PARTIAL_SUCCESS",
                      "LARGE_DEPLOYMENT_WARNING"
                    ],
                    "type": "string",
                    "description": "[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.",
                    "enumDescriptions": [
                      "A link to a deprecated resource was created.",
                      "No results are present on a particular list page.",
                      "A given scope cannot be reached.",
                      "The route's nextHopIp address is not assigned to an instance on the network.",
                      "The route's nextHopInstance URL refers to an instance that does not exist.",
                      "The route's nextHopInstance URL refers to an instance that is not on the same network as the route.",
                      "The route's next hop instance cannot ip forward.",
                      "The route's next hop instance does not have a status of RUNNING.",
                      "The operation involved use of an injected kernel, which is deprecated.",
                      "The user attempted to use a resource that requires a TOS they have not accepted.",
                      "The user created a boot disk that is larger than image size.",
                      "One or more of the resources set to auto-delete could not be deleted because they were in use.",
                      "Instance template used in instance group manager is valid as such, but its application does not make a lot of sense, because it allows only single instance in instance group.",
                      "Error which is not critical. We decided to continue the process despite the mentioned error.",
                      "Warning about failed cleanup of transient changes made by a failed operation.",
                      "Warning that value of a field has been overridden. Deprecated unused field.",
                      "Warning that a resource is in use.",
                      "A resource depends on a missing type",
                      "Warning that is present in an external api call",
                      "When a resource schema validation is ignored.",
                      "When undeclared properties in the schema are present",
                      "When deploying and at least one of the resources has a type marked as experimental",
                      "When deploying and at least one of the resources has a type marked as deprecated",
                      "Success is reported, but some results may be missing due to errors",
                      "When deploying a deployment with a exceedingly large number of resources"
                    ]
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding)."
                        },
                        "value": {
                          "type": "string",
                          "description": "[Output Only] A warning data value corresponding to the key."
                        }
                      }
                    },
                    "description": "[Output Only] Metadata about this warning in key: value format. For example: \"data\": [ { \"key\": \"scope\", \"value\": \"zones/us-east1-d\" } "
                  },
                  "message": {
                    "type": "string",
                    "description": "[Output Only] A human-readable description of the warning code."
                  }
                }
              },
              "description": "Output only. If warning messages are generated during processing of this resource, this field will be populated."
            },
            "insertTime": {
              "type": "string",
              "description": "Output only. Creation timestamp in RFC3339 text format."
            },
            "properties": {
              "type": "string",
              "description": "Output only. The current properties of the resource before any references have been filled in. Returned as serialized YAML."
            },
            "updateTime": {
              "type": "string",
              "description": "Output only. Update timestamp in RFC3339 text format."
            },
            "accessControl": {
              "id": "ResourceAccessControl",
              "type": "object",
              "properties": {
                "gcpIamPolicy": {
                  "type": "string",
                  "description": "The GCP IAM Policy to set on the resource."
                }
              },
              "description": "The Access Control Policy set on this resource."
            },
            "finalProperties": {
              "type": "string",
              "description": "Output only. The evaluated properties of the resource with references expanded. Returned as serialized YAML."
            }
          }
        }
      ]
  deploymentmanager.resources.list:
    description: |-
      Lists all resources in a given deployment.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/docs/reference/latest/resources/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ResourcesListResponse",
          "type": "object",
          "properties": {
            "resources": {
              "type": "array",
              "items": {
                "id": "Resource",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uint64"
                  },
                  "url": {
                    "type": "string",
                    "description": "Output only. The URL of the actual resource."
                  },
                  "name": {
                    "type": "string",
                    "description": "Output only. The name of the resource as it appears in the YAML config."
                  },
                  "type": {
                    "type": "string",
                    "description": "Output only. The type of the resource, for example `compute.v1.instance`, or `cloudfunctions.v1beta1.function`."
                  },
                  "update": {
                    "id": "ResourceUpdate",
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "object",
                        "properties": {
                          "errors": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "description": "[Output Only] The error type identifier for this error."
                                },
                                "message": {
                                  "type": "string",
                                  "description": "[Output Only] An optional, human-readable error message."
                                },
                                "location": {
                                  "type": "string",
                                  "description": "[Output Only] Indicates the field in the request that caused the error. This property is optional."
                                }
                              }
                            },
                            "description": "[Output Only] The array of errors encountered while processing this operation."
                          }
                        },
                        "description": "Output only. If errors are generated during update of the resource, this field will be populated."
                      },
                      "state": {
                        "enum": [
                          "PENDING",
                          "IN_PROGRESS",
                          "IN_PREVIEW",
                          "FAILED",
                          "ABORTED"
                        ],
                        "type": "string",
                        "description": "Output only. The state of the resource.",
                        "enumDescriptions": [
                          "There are changes pending for this resource.",
                          "The service is executing changes on the resource.",
                          "The service is previewing changes on the resource.",
                          "The service has failed to change the resource.",
                          "The service has aborted trying to change the resource."
                        ]
                      },
                      "intent": {
                        "enum": [
                          "CREATE_OR_ACQUIRE",
                          "DELETE",
                          "ACQUIRE",
                          "UPDATE",
                          "ABANDON",
                          "CREATE"
                        ],
                        "type": "string",
                        "description": "Output only. The intent of the resource: `PREVIEW`, `UPDATE`, or `CANCEL`.",
                        "enumDescriptions": [
                          "The resource is scheduled to be created, or if it already exists, acquired.",
                          "The resource is scheduled to be deleted.",
                          "The resource is scheduled to be acquired.",
                          "The resource is scheduled to be updated via the UPDATE method.",
                          "The resource is scheduled to be abandoned.",
                          "The resource is scheduled to be created."
                        ]
                      },
                      "manifest": {
                        "type": "string",
                        "description": "Output only. URL of the manifest representing the update configuration of this resource."
                      },
                      "warnings": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "enum": [
                                "DEPRECATED_RESOURCE_USED",
                                "NO_RESULTS_ON_PAGE",
                                "UNREACHABLE",
                                "NEXT_HOP_ADDRESS_NOT_ASSIGNED",
                                "NEXT_HOP_INSTANCE_NOT_FOUND",
                                "NEXT_HOP_INSTANCE_NOT_ON_NETWORK",
                                "NEXT_HOP_CANNOT_IP_FORWARD",
                                "NEXT_HOP_NOT_RUNNING",
                                "INJECTED_KERNELS_DEPRECATED",
                                "REQUIRED_TOS_AGREEMENT",
                                "DISK_SIZE_LARGER_THAN_IMAGE_SIZE",
                                "RESOURCE_NOT_DELETED",
                                "SINGLE_INSTANCE_PROPERTY_TEMPLATE",
                                "NOT_CRITICAL_ERROR",
                                "CLEANUP_FAILED",
                                "FIELD_VALUE_OVERRIDEN",
                                "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING",
                                "MISSING_TYPE_DEPENDENCY",
                                "EXTERNAL_API_WARNING",
                                "SCHEMA_VALIDATION_IGNORED",
                                "UNDECLARED_PROPERTIES",
                                "EXPERIMENTAL_TYPE_USED",
                                "DEPRECATED_TYPE_USED",
                                "PARTIAL_SUCCESS",
                                "LARGE_DEPLOYMENT_WARNING"
                              ],
                              "type": "string",
                              "description": "[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.",
                              "enumDescriptions": [
                                "A link to a deprecated resource was created.",
                                "No results are present on a particular list page.",
                                "A given scope cannot be reached.",
                                "The route's nextHopIp address is not assigned to an instance on the network.",
                                "The route's nextHopInstance URL refers to an instance that does not exist.",
                                "The route's nextHopInstance URL refers to an instance that is not on the same network as the route.",
                                "The route's next hop instance cannot ip forward.",
                                "The route's next hop instance does not have a status of RUNNING.",
                                "The operation involved use of an injected kernel, which is deprecated.",
                                "The user attempted to use a resource that requires a TOS they have not accepted.",
                                "The user created a boot disk that is larger than image size.",
                                "One or more of the resources set to auto-delete could not be deleted because they were in use.",
                                "Instance template used in instance group manager is valid as such, but its application does not make a lot of sense, because it allows only single instance in instance group.",
                                "Error which is not critical. We decided to continue the process despite the mentioned error.",
                                "Warning about failed cleanup of transient changes made by a failed operation.",
                                "Warning that value of a field has been overridden. Deprecated unused field.",
                                "Warning that a resource is in use.",
                                "A resource depends on a missing type",
                                "Warning that is present in an external api call",
                                "When a resource schema validation is ignored.",
                                "When undeclared properties in the schema are present",
                                "When deploying and at least one of the resources has a type marked as experimental",
                                "When deploying and at least one of the resources has a type marked as deprecated",
                                "Success is reported, but some results may be missing due to errors",
                                "When deploying a deployment with a exceedingly large number of resources"
                              ]
                            },
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding)."
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "[Output Only] A warning data value corresponding to the key."
                                  }
                                }
                              },
                              "description": "[Output Only] Metadata about this warning in key: value format. For example: \"data\": [ { \"key\": \"scope\", \"value\": \"zones/us-east1-d\" } "
                            },
                            "message": {
                              "type": "string",
                              "description": "[Output Only] A human-readable description of the warning code."
                            }
                          }
                        },
                        "description": "Output only. If warning messages are generated during processing of this resource, this field will be populated."
                      },
                      "properties": {
                        "type": "string",
                        "description": "Output only. The set of updated properties for this resource, before references are expanded. Returned as serialized YAML."
                      },
                      "accessControl": {
                        "id": "ResourceAccessControl",
                        "type": "object",
                        "properties": {
                          "gcpIamPolicy": {
                            "type": "string",
                            "description": "The GCP IAM Policy to set on the resource."
                          }
                        },
                        "description": "The Access Control Policy to set on this resource after updating the resource itself."
                      },
                      "finalProperties": {
                        "type": "string",
                        "description": "Output only. The expanded properties of the resource with reference values expanded. Returned as serialized YAML."
                      }
                    },
                    "description": "Output only. If Deployment Manager is currently updating or previewing an update to this resource, the updated configuration appears here."
                  },
                  "manifest": {
                    "type": "string",
                    "description": "Output only. URL of the manifest representing the current configuration of this resource."
                  },
                  "warnings": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "enum": [
                            "DEPRECATED_RESOURCE_USED",
                            "NO_RESULTS_ON_PAGE",
                            "UNREACHABLE",
                            "NEXT_HOP_ADDRESS_NOT_ASSIGNED",
                            "NEXT_HOP_INSTANCE_NOT_FOUND",
                            "NEXT_HOP_INSTANCE_NOT_ON_NETWORK",
                            "NEXT_HOP_CANNOT_IP_FORWARD",
                            "NEXT_HOP_NOT_RUNNING",
                            "INJECTED_KERNELS_DEPRECATED",
                            "REQUIRED_TOS_AGREEMENT",
                            "DISK_SIZE_LARGER_THAN_IMAGE_SIZE",
                            "RESOURCE_NOT_DELETED",
                            "SINGLE_INSTANCE_PROPERTY_TEMPLATE",
                            "NOT_CRITICAL_ERROR",
                            "CLEANUP_FAILED",
                            "FIELD_VALUE_OVERRIDEN",
                            "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING",
                            "MISSING_TYPE_DEPENDENCY",
                            "EXTERNAL_API_WARNING",
                            "SCHEMA_VALIDATION_IGNORED",
                            "UNDECLARED_PROPERTIES",
                            "EXPERIMENTAL_TYPE_USED",
                            "DEPRECATED_TYPE_USED",
                            "PARTIAL_SUCCESS",
                            "LARGE_DEPLOYMENT_WARNING"
                          ],
                          "type": "string",
                          "description": "[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.",
                          "enumDescriptions": [
                            "A link to a deprecated resource was created.",
                            "No results are present on a particular list page.",
                            "A given scope cannot be reached.",
                            "The route's nextHopIp address is not assigned to an instance on the network.",
                            "The route's nextHopInstance URL refers to an instance that does not exist.",
                            "The route's nextHopInstance URL refers to an instance that is not on the same network as the route.",
                            "The route's next hop instance cannot ip forward.",
                            "The route's next hop instance does not have a status of RUNNING.",
                            "The operation involved use of an injected kernel, which is deprecated.",
                            "The user attempted to use a resource that requires a TOS they have not accepted.",
                            "The user created a boot disk that is larger than image size.",
                            "One or more of the resources set to auto-delete could not be deleted because they were in use.",
                            "Instance template used in instance group manager is valid as such, but its application does not make a lot of sense, because it allows only single instance in instance group.",
                            "Error which is not critical. We decided to continue the process despite the mentioned error.",
                            "Warning about failed cleanup of transient changes made by a failed operation.",
                            "Warning that value of a field has been overridden. Deprecated unused field.",
                            "Warning that a resource is in use.",
                            "A resource depends on a missing type",
                            "Warning that is present in an external api call",
                            "When a resource schema validation is ignored.",
                            "When undeclared properties in the schema are present",
                            "When deploying and at least one of the resources has a type marked as experimental",
                            "When deploying and at least one of the resources has a type marked as deprecated",
                            "Success is reported, but some results may be missing due to errors",
                            "When deploying a deployment with a exceedingly large number of resources"
                          ]
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "key": {
                                "type": "string",
                                "description": "[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding)."
                              },
                              "value": {
                                "type": "string",
                                "description": "[Output Only] A warning data value corresponding to the key."
                              }
                            }
                          },
                          "description": "[Output Only] Metadata about this warning in key: value format. For example: \"data\": [ { \"key\": \"scope\", \"value\": \"zones/us-east1-d\" } "
                        },
                        "message": {
                          "type": "string",
                          "description": "[Output Only] A human-readable description of the warning code."
                        }
                      }
                    },
                    "description": "Output only. If warning messages are generated during processing of this resource, this field will be populated."
                  },
                  "insertTime": {
                    "type": "string",
                    "description": "Output only. Creation timestamp in RFC3339 text format."
                  },
                  "properties": {
                    "type": "string",
                    "description": "Output only. The current properties of the resource before any references have been filled in. Returned as serialized YAML."
                  },
                  "updateTime": {
                    "type": "string",
                    "description": "Output only. Update timestamp in RFC3339 text format."
                  },
                  "accessControl": {
                    "id": "ResourceAccessControl",
                    "type": "object",
                    "properties": {
                      "gcpIamPolicy": {
                        "type": "string",
                        "description": "The GCP IAM Policy to set on the resource."
                      }
                    },
                    "description": "The Access Control Policy set on this resource."
                  },
                  "finalProperties": {
                    "type": "string",
                    "description": "Output only. The evaluated properties of the resource with references expanded. Returned as serialized YAML."
                  }
                }
              },
              "description": "Resources contained in this list response."
            },
            "nextPageToken": {
              "type": "string",
              "description": "A token used to continue a truncated list request."
            }
          },
          "description": "A response containing a partial list of resources and a page token used to build the next request if the request has been truncated."
        }
      ]
  deploymentmanager.types.list:
    description: |-
      Lists all resource types for Deployment Manager.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/docs/reference/latest/types/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "TypesListResponse",
          "type": "object",
          "properties": {
            "types": {
              "type": "array",
              "items": {
                "id": "Type",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uint64"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the type."
                  },
                  "selfLink": {
                    "type": "string",
                    "description": "Output only. Server defined URL for the resource."
                  },
                  "operation": {
                    "id": "Operation",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uint64",
                        "description": "[Output Only] The unique identifier for the operation. This identifier is defined by the server."
                      },
                      "kind": {
                        "type": "string",
                        "default": "deploymentmanager#operation",
                        "description": "[Output Only] Type of the resource. Always `compute#operation` for Operation resources."
                      },
                      "name": {
                        "type": "string",
                        "description": "[Output Only] Name of the operation."
                      },
                      "user": {
                        "type": "string",
                        "description": "[Output Only] User who requested the operation, for example: `user@example.com`."
                      },
                      "zone": {
                        "type": "string",
                        "description": "[Output Only] The URL of the zone where the operation resides. Only applicable when performing per-zone operations."
                      },
                      "error": {
                        "type": "object",
                        "properties": {
                          "errors": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "description": "[Output Only] The error type identifier for this error."
                                },
                                "message": {
                                  "type": "string",
                                  "description": "[Output Only] An optional, human-readable error message."
                                },
                                "location": {
                                  "type": "string",
                                  "description": "[Output Only] Indicates the field in the request that caused the error. This property is optional."
                                }
                              }
                            },
                            "description": "[Output Only] The array of errors encountered while processing this operation."
                          }
                        },
                        "description": "[Output Only] If errors are generated during processing of the operation, this field will be populated."
                      },
                      "region": {
                        "type": "string",
                        "description": "[Output Only] The URL of the region where the operation resides. Only applicable when performing regional operations."
                      },
                      "status": {
                        "enum": [
                          "PENDING",
                          "RUNNING",
                          "DONE"
                        ],
                        "type": "string",
                        "description": "[Output Only] The status of the operation, which can be one of the following: `PENDING`, `RUNNING`, or `DONE`.",
                        "enumDescriptions": [
                          "",
                          "",
                          ""
                        ]
                      },
                      "endTime": {
                        "type": "string",
                        "description": "[Output Only] The time that this operation was completed. This value is in RFC3339 text format."
                      },
                      "progress": {
                        "type": "integer",
                        "format": "int32",
                        "description": "[Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses."
                      },
                      "selfLink": {
                        "type": "string",
                        "description": "[Output Only] Server-defined URL for the resource."
                      },
                      "targetId": {
                        "type": "string",
                        "format": "uint64",
                        "description": "[Output Only] The unique target ID, which identifies a specific incarnation of the target resource."
                      },
                      "warnings": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "enum": [
                                "DEPRECATED_RESOURCE_USED",
                                "NO_RESULTS_ON_PAGE",
                                "UNREACHABLE",
                                "NEXT_HOP_ADDRESS_NOT_ASSIGNED",
                                "NEXT_HOP_INSTANCE_NOT_FOUND",
                                "NEXT_HOP_INSTANCE_NOT_ON_NETWORK",
                                "NEXT_HOP_CANNOT_IP_FORWARD",
                                "NEXT_HOP_NOT_RUNNING",
                                "INJECTED_KERNELS_DEPRECATED",
                                "REQUIRED_TOS_AGREEMENT",
                                "DISK_SIZE_LARGER_THAN_IMAGE_SIZE",
                                "RESOURCE_NOT_DELETED",
                                "SINGLE_INSTANCE_PROPERTY_TEMPLATE",
                                "NOT_CRITICAL_ERROR",
                                "CLEANUP_FAILED",
                                "FIELD_VALUE_OVERRIDEN",
                                "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING",
                                "MISSING_TYPE_DEPENDENCY",
                                "EXTERNAL_API_WARNING",
                                "SCHEMA_VALIDATION_IGNORED",
                                "UNDECLARED_PROPERTIES",
                                "EXPERIMENTAL_TYPE_USED",
                                "DEPRECATED_TYPE_USED",
                                "PARTIAL_SUCCESS",
                                "LARGE_DEPLOYMENT_WARNING"
                              ],
                              "type": "string",
                              "description": "[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.",
                              "enumDescriptions": [
                                "A link to a deprecated resource was created.",
                                "No results are present on a particular list page.",
                                "A given scope cannot be reached.",
                                "The route's nextHopIp address is not assigned to an instance on the network.",
                                "The route's nextHopInstance URL refers to an instance that does not exist.",
                                "The route's nextHopInstance URL refers to an instance that is not on the same network as the route.",
                                "The route's next hop instance cannot ip forward.",
                                "The route's next hop instance does not have a status of RUNNING.",
                                "The operation involved use of an injected kernel, which is deprecated.",
                                "The user attempted to use a resource that requires a TOS they have not accepted.",
                                "The user created a boot disk that is larger than image size.",
                                "One or more of the resources set to auto-delete could not be deleted because they were in use.",
                                "Instance template used in instance group manager is valid as such, but its application does not make a lot of sense, because it allows only single instance in instance group.",
                                "Error which is not critical. We decided to continue the process despite the mentioned error.",
                                "Warning about failed cleanup of transient changes made by a failed operation.",
                                "Warning that value of a field has been overridden. Deprecated unused field.",
                                "Warning that a resource is in use.",
                                "A resource depends on a missing type",
                                "Warning that is present in an external api call",
                                "When a resource schema validation is ignored.",
                                "When undeclared properties in the schema are present",
                                "When deploying and at least one of the resources has a type marked as experimental",
                                "When deploying and at least one of the resources has a type marked as deprecated",
                                "Success is reported, but some results may be missing due to errors",
                                "When deploying a deployment with a exceedingly large number of resources"
                              ]
                            },
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding)."
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "[Output Only] A warning data value corresponding to the key."
                                  }
                                }
                              },
                              "description": "[Output Only] Metadata about this warning in key: value format. For example: \"data\": [ { \"key\": \"scope\", \"value\": \"zones/us-east1-d\" } "
                            },
                            "message": {
                              "type": "string",
                              "description": "[Output Only] A human-readable description of the warning code."
                            }
                          }
                        },
                        "description": "[Output Only] If warning messages are generated during processing of the operation, this field will be populated."
                      },
                      "startTime": {
                        "type": "string",
                        "description": "[Output Only] The time that this operation was started by the server. This value is in RFC3339 text format."
                      },
                      "insertTime": {
                        "type": "string",
                        "description": "[Output Only] The time that this operation was requested. This value is in RFC3339 text format."
                      },
                      "targetLink": {
                        "type": "string",
                        "description": "[Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the persistent disk that the snapshot was created from."
                      },
                      "description": {
                        "type": "string",
                        "description": "[Output Only] A textual description of the operation, which is set when the operation is created."
                      },
                      "operationType": {
                        "type": "string",
                        "description": "[Output Only] The type of operation, such as `insert`, `update`, or `delete`, and so on."
                      },
                      "statusMessage": {
                        "type": "string",
                        "description": "[Output Only] An optional textual description of the current status of the operation."
                      },
                      "httpErrorMessage": {
                        "type": "string",
                        "description": "[Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as `NOT FOUND`."
                      },
                      "operationGroupId": {
                        "type": "string",
                        "description": "[Output Only] An ID that represents a group of operations, such as when a group of operations results from a `bulkInsert` API request."
                      },
                      "clientOperationId": {
                        "type": "string",
                        "description": "[Output Only] The value of `requestId` if you provided it in the request. Not present otherwise."
                      },
                      "creationTimestamp": {
                        "type": "string",
                        "description": "[Deprecated] This field is deprecated."
                      },
                      "httpErrorStatusCode": {
                        "type": "integer",
                        "format": "int32",
                        "description": "[Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a `404` means the resource was not found."
                      }
                    },
                    "description": "Represents an Operation resource. Google Compute Engine has three Operation resources: * [Global](/compute/docs/reference/rest/{$api_version}/globalOperations) * [Regional](/compute/docs/reference/rest/{$api_version}/regionOperations) * [Zonal](/compute/docs/reference/rest/{$api_version}/zoneOperations) You can use an operation resource to manage asynchronous API requests. For more information, read Handling API responses. Operations can be global, regional or zonal. - For global operations, use the `globalOperations` resource. - For regional operations, use the `regionOperations` resource. - For zonal operations, use the `zonalOperations` resource. For more information, read Global, Regional, and Zonal Resources."
                  },
                  "insertTime": {
                    "type": "string",
                    "description": "Output only. Creation timestamp in RFC3339 text format."
                  }
                },
                "description": "A resource type supported by Deployment Manager."
              },
              "description": "Output only. A list of resource types supported by Deployment Manager."
            },
            "nextPageToken": {
              "type": "string",
              "description": "A token used to continue a truncated list request."
            }
          },
          "description": "A response that returns all Types supported by Deployment Manager"
        }
      ]
  runtimeconfig.projects.configs.create:
    description: |-
      Creates a new RuntimeConfig resource. The configuration name must be unique within project.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/runtime-configurator/reference/rest/v1beta1/projects.configs/create
    example:
      inputs: [
        {
          "id": "RuntimeConfig",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The resource name of a runtime config. The name must have the format: projects/[PROJECT_ID]/configs/[CONFIG_NAME] The `[PROJECT_ID]` must be a valid project ID, and `[CONFIG_NAME]` is an arbitrary name that matches the `[0-9A-Za-z](?:[_.A-Za-z0-9-]{0,62}[_.A-Za-z0-9])?` regular expression. The length of `[CONFIG_NAME]` must be less than 64 characters. You pick the RuntimeConfig resource name, but the server will validate that the name adheres to this format. After you create the resource, you cannot change the resource's name."
            },
            "description": {
              "type": "string",
              "description": "An optional description of the RuntimeConfig object."
            }
          },
          "description": "A RuntimeConfig resource is the primary resource in the Cloud RuntimeConfig service. A RuntimeConfig resource consists of metadata and a hierarchy of variables."
        }
      ]
      outputs: [
        {}
      ]
  runtimeconfig.projects.configs.delete:
    description: |-
      Deletes a RuntimeConfig resource.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/runtime-configurator/reference/rest/v1beta1/projects.configs/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  runtimeconfig.projects.configs.get:
    description: |-
      Gets information about a RuntimeConfig resource.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/runtime-configurator/reference/rest/v1beta1/projects.configs/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  runtimeconfig.projects.configs.getIamPolicy:
    description: |-
      Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/runtime-configurator/reference/rest/v1beta1/projects.configs/getIamPolicy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  runtimeconfig.projects.configs.list:
    description: |-
      Lists all the RuntimeConfig resources within project.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/runtime-configurator/reference/rest/v1beta1/projects.configs/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListConfigsResponse",
          "type": "object",
          "properties": {
            "configs": {
              "type": "array",
              "items": {
                "id": "RuntimeConfig",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The resource name of a runtime config. The name must have the format: projects/[PROJECT_ID]/configs/[CONFIG_NAME] The `[PROJECT_ID]` must be a valid project ID, and `[CONFIG_NAME]` is an arbitrary name that matches the `[0-9A-Za-z](?:[_.A-Za-z0-9-]{0,62}[_.A-Za-z0-9])?` regular expression. The length of `[CONFIG_NAME]` must be less than 64 characters. You pick the RuntimeConfig resource name, but the server will validate that the name adheres to this format. After you create the resource, you cannot change the resource's name."
                  },
                  "description": {
                    "type": "string",
                    "description": "An optional description of the RuntimeConfig object."
                  }
                },
                "description": "A RuntimeConfig resource is the primary resource in the Cloud RuntimeConfig service. A RuntimeConfig resource consists of metadata and a hierarchy of variables."
              },
              "description": "A list of the configurations in the project. The order of returned objects is arbitrary; that is, it is not ordered in any particular way."
            },
            "nextPageToken": {
              "type": "string",
              "description": "This token allows you to get the next page of results for list requests. If the number of results is larger than `pageSize`, use the `nextPageToken` as a value for the query parameter `pageToken` in the next list request. Subsequent list requests will have their own `nextPageToken` to continue paging through the results"
            }
          },
          "description": "`ListConfigs()` returns the following response. The order of returned objects is arbitrary; that is, it is not ordered in any particular way."
        }
      ]
  runtimeconfig.projects.configs.operations.get:
    description: |-
      Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/runtime-configurator/reference/rest/v1beta1/projects.configs.operations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  runtimeconfig.projects.configs.operations.testIamPermissions:
    description: |-
      Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/runtime-configurator/reference/rest/v1beta1/projects.configs.operations/testIamPermissions
    example:
      inputs: [
        {
          "id": "TestIamPermissionsRequest",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
            }
          },
          "description": "Request message for `TestIamPermissions` method."
        }
      ]
      outputs: [
        {
          "id": "TestIamPermissionsResponse",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
            }
          },
          "description": "Response message for `TestIamPermissions` method."
        }
      ]
  runtimeconfig.projects.configs.setIamPolicy:
    description: |-
      Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/runtime-configurator/reference/rest/v1beta1/projects.configs/setIamPolicy
    example:
      inputs: [
        {
          "id": "SetIamPolicyRequest",
          "type": "object",
          "properties": {
            "policy": {
              "id": "Policy",
              "type": "object",
              "properties": {
                "etag": {
                  "type": "string",
                  "format": "byte",
                  "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
                },
                "version": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                },
                "bindings": {
                  "type": "array",
                  "items": {
                    "id": "Binding",
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                      },
                      "members": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                      },
                      "condition": {
                        "id": "Expr",
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                          },
                          "location": {
                            "type": "string",
                            "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                          },
                          "expression": {
                            "type": "string",
                            "description": "Textual representation of an expression in Common Expression Language syntax."
                          },
                          "description": {
                            "type": "string",
                            "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                          }
                        },
                        "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                      }
                    },
                    "description": "Associates `members` with a `role`."
                  },
                  "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
                }
              },
              "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
            }
          },
          "description": "Request message for `SetIamPolicy` method."
        }
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  runtimeconfig.projects.configs.testIamPermissions:
    description: |-
      Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/runtime-configurator/reference/rest/v1beta1/projects.configs/testIamPermissions
    example:
      inputs: [
        {
          "id": "TestIamPermissionsRequest",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
            }
          },
          "description": "Request message for `TestIamPermissions` method."
        }
      ]
      outputs: [
        {
          "id": "TestIamPermissionsResponse",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
            }
          },
          "description": "Response message for `TestIamPermissions` method."
        }
      ]
  runtimeconfig.projects.configs.update:
    description: |-
      Updates a RuntimeConfig resource. The configuration must exist beforehand.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/runtime-configurator/reference/rest/v1beta1/projects.configs/update
    example:
      inputs: [
        {
          "id": "RuntimeConfig",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The resource name of a runtime config. The name must have the format: projects/[PROJECT_ID]/configs/[CONFIG_NAME] The `[PROJECT_ID]` must be a valid project ID, and `[CONFIG_NAME]` is an arbitrary name that matches the `[0-9A-Za-z](?:[_.A-Za-z0-9-]{0,62}[_.A-Za-z0-9])?` regular expression. The length of `[CONFIG_NAME]` must be less than 64 characters. You pick the RuntimeConfig resource name, but the server will validate that the name adheres to this format. After you create the resource, you cannot change the resource's name."
            },
            "description": {
              "type": "string",
              "description": "An optional description of the RuntimeConfig object."
            }
          },
          "description": "A RuntimeConfig resource is the primary resource in the Cloud RuntimeConfig service. A RuntimeConfig resource consists of metadata and a hierarchy of variables."
        }
      ]
      outputs: [
        {}
      ]
  runtimeconfig.projects.configs.variables.create:
    description: |-
      Creates a variable within the given configuration. You cannot create a variable with a name that is a prefix of an existing variable name, or a name that has an existing variable name as a prefix. To learn more about creating a variable, read the [Setting and Getting Data](/deployment-manager/runtime-configurator/set-and-get-variables) documentation.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/runtime-configurator/reference/rest/v1beta1/projects.configs.variables/create
    example:
      inputs: [
        {
          "id": "Variable",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the variable resource, in the format: projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIABLE_NAME] The `[PROJECT_ID]` must be a valid project ID, `[CONFIG_NAME]` must be a valid RuntimeConfig resource and `[VARIABLE_NAME]` follows Unix file system file path naming. The `[VARIABLE_NAME]` can contain ASCII letters, numbers, slashes and dashes. Slashes are used as path element separators and are not part of the `[VARIABLE_NAME]` itself, so `[VARIABLE_NAME]` must contain at least one non-slash character. Multiple slashes are coalesced into single slash character. Each path segment should match [0-9A-Za-z](?:[_.A-Za-z0-9-]{0,62}[_.A-Za-z0-9])? regular expression. The length of a `[VARIABLE_NAME]` must be less than 256 characters. Once you create a variable, you cannot change the variable name."
            },
            "text": {
              "type": "string",
              "description": "The string value of the variable. The length of the value must be less than 4096 bytes. Empty values are also accepted. For example, `text: \"my text value\"`. The string must be valid UTF-8."
            },
            "state": {
              "enum": [
                "VARIABLE_STATE_UNSPECIFIED",
                "UPDATED",
                "DELETED"
              ],
              "type": "string",
              "description": "Output only. The current state of the variable. The variable state indicates the outcome of the `variables().watch` call and is visible through the `get` and `list` calls.",
              "enumDescriptions": [
                "Default variable state.",
                "The variable was updated, while `variables().watch` was executing.",
                "The variable was deleted, while `variables().watch` was executing."
              ]
            },
            "value": {
              "type": "string",
              "format": "byte",
              "description": "The binary value of the variable. The length of the value must be less than 4096 bytes. Empty values are also accepted. The value must be base64 encoded, and must comply with IETF RFC4648 (https://www.ietf.org/rfc/rfc4648.txt). Only one of `value` or `text` can be set."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Output only. The time of the last variable update. Timestamp will be UTC timestamp."
            }
          },
          "description": "Describes a single variable within a RuntimeConfig resource. The name denotes the hierarchical variable name. For example, `ports/serving_port` is a valid variable name. The variable value is an opaque string and only leaf variables can have values (that is, variables that do not have any child variables)."
        }
      ]
      outputs: [
        {}
      ]
  runtimeconfig.projects.configs.variables.delete:
    description: |-
      Deletes a variable or multiple variables. If you specify a variable name, then that variable is deleted. If you specify a prefix and `recursive` is true, then all variables with that prefix are deleted. You must set a `recursive` to true if you delete variables by prefix.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/runtime-configurator/reference/rest/v1beta1/projects.configs.variables/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  runtimeconfig.projects.configs.variables.get:
    description: |-
      Gets information about a single variable.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/runtime-configurator/reference/rest/v1beta1/projects.configs.variables/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  runtimeconfig.projects.configs.variables.list:
    description: |-
      Lists variables within given a configuration, matching any provided filters. This only lists variable names, not the values, unless `return_values` is true, in which case only variables that user has IAM permission to GetVariable will be returned.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/runtime-configurator/reference/rest/v1beta1/projects.configs.variables/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListVariablesResponse",
          "type": "object",
          "properties": {
            "variables": {
              "type": "array",
              "items": {
                "id": "Variable",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the variable resource, in the format: projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIABLE_NAME] The `[PROJECT_ID]` must be a valid project ID, `[CONFIG_NAME]` must be a valid RuntimeConfig resource and `[VARIABLE_NAME]` follows Unix file system file path naming. The `[VARIABLE_NAME]` can contain ASCII letters, numbers, slashes and dashes. Slashes are used as path element separators and are not part of the `[VARIABLE_NAME]` itself, so `[VARIABLE_NAME]` must contain at least one non-slash character. Multiple slashes are coalesced into single slash character. Each path segment should match [0-9A-Za-z](?:[_.A-Za-z0-9-]{0,62}[_.A-Za-z0-9])? regular expression. The length of a `[VARIABLE_NAME]` must be less than 256 characters. Once you create a variable, you cannot change the variable name."
                  },
                  "text": {
                    "type": "string",
                    "description": "The string value of the variable. The length of the value must be less than 4096 bytes. Empty values are also accepted. For example, `text: \"my text value\"`. The string must be valid UTF-8."
                  },
                  "state": {
                    "enum": [
                      "VARIABLE_STATE_UNSPECIFIED",
                      "UPDATED",
                      "DELETED"
                    ],
                    "type": "string",
                    "description": "Output only. The current state of the variable. The variable state indicates the outcome of the `variables().watch` call and is visible through the `get` and `list` calls.",
                    "enumDescriptions": [
                      "Default variable state.",
                      "The variable was updated, while `variables().watch` was executing.",
                      "The variable was deleted, while `variables().watch` was executing."
                    ]
                  },
                  "value": {
                    "type": "string",
                    "format": "byte",
                    "description": "The binary value of the variable. The length of the value must be less than 4096 bytes. Empty values are also accepted. The value must be base64 encoded, and must comply with IETF RFC4648 (https://www.ietf.org/rfc/rfc4648.txt). Only one of `value` or `text` can be set."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Output only. The time of the last variable update. Timestamp will be UTC timestamp."
                  }
                },
                "description": "Describes a single variable within a RuntimeConfig resource. The name denotes the hierarchical variable name. For example, `ports/serving_port` is a valid variable name. The variable value is an opaque string and only leaf variables can have values (that is, variables that do not have any child variables)."
              },
              "description": "A list of variables and their values. The order of returned variable objects is arbitrary."
            },
            "nextPageToken": {
              "type": "string",
              "description": "This token allows you to get the next page of results for list requests. If the number of results is larger than `pageSize`, use the `nextPageToken` as a value for the query parameter `pageToken` in the next list request. Subsequent list requests will have their own `nextPageToken` to continue paging through the results"
            }
          },
          "description": "Response for the `ListVariables()` method."
        }
      ]
  runtimeconfig.projects.configs.variables.testIamPermissions:
    description: |-
      Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/runtime-configurator/reference/rest/v1beta1/projects.configs.variables/testIamPermissions
    example:
      inputs: [
        {
          "id": "TestIamPermissionsRequest",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
            }
          },
          "description": "Request message for `TestIamPermissions` method."
        }
      ]
      outputs: [
        {
          "id": "TestIamPermissionsResponse",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
            }
          },
          "description": "Response message for `TestIamPermissions` method."
        }
      ]
  runtimeconfig.projects.configs.variables.update:
    description: |-
      Updates an existing variable with a new value.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/runtime-configurator/reference/rest/v1beta1/projects.configs.variables/update
    example:
      inputs: [
        {
          "id": "Variable",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the variable resource, in the format: projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIABLE_NAME] The `[PROJECT_ID]` must be a valid project ID, `[CONFIG_NAME]` must be a valid RuntimeConfig resource and `[VARIABLE_NAME]` follows Unix file system file path naming. The `[VARIABLE_NAME]` can contain ASCII letters, numbers, slashes and dashes. Slashes are used as path element separators and are not part of the `[VARIABLE_NAME]` itself, so `[VARIABLE_NAME]` must contain at least one non-slash character. Multiple slashes are coalesced into single slash character. Each path segment should match [0-9A-Za-z](?:[_.A-Za-z0-9-]{0,62}[_.A-Za-z0-9])? regular expression. The length of a `[VARIABLE_NAME]` must be less than 256 characters. Once you create a variable, you cannot change the variable name."
            },
            "text": {
              "type": "string",
              "description": "The string value of the variable. The length of the value must be less than 4096 bytes. Empty values are also accepted. For example, `text: \"my text value\"`. The string must be valid UTF-8."
            },
            "state": {
              "enum": [
                "VARIABLE_STATE_UNSPECIFIED",
                "UPDATED",
                "DELETED"
              ],
              "type": "string",
              "description": "Output only. The current state of the variable. The variable state indicates the outcome of the `variables().watch` call and is visible through the `get` and `list` calls.",
              "enumDescriptions": [
                "Default variable state.",
                "The variable was updated, while `variables().watch` was executing.",
                "The variable was deleted, while `variables().watch` was executing."
              ]
            },
            "value": {
              "type": "string",
              "format": "byte",
              "description": "The binary value of the variable. The length of the value must be less than 4096 bytes. Empty values are also accepted. The value must be base64 encoded, and must comply with IETF RFC4648 (https://www.ietf.org/rfc/rfc4648.txt). Only one of `value` or `text` can be set."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Output only. The time of the last variable update. Timestamp will be UTC timestamp."
            }
          },
          "description": "Describes a single variable within a RuntimeConfig resource. The name denotes the hierarchical variable name. For example, `ports/serving_port` is a valid variable name. The variable value is an opaque string and only leaf variables can have values (that is, variables that do not have any child variables)."
        }
      ]
      outputs: [
        {}
      ]
  runtimeconfig.projects.configs.variables.watch:
    description: |-
      Watches a specific variable and waits for a change in the variable's value. When there is a change, this method returns the new value or times out. If a variable is deleted while being watched, the `variableState` state is set to `DELETED` and the method returns the last known variable `value`. If you set the deadline for watching to a larger value than internal timeout (60 seconds), the current variable value is returned and the `variableState` will be `VARIABLE_STATE_UNSPECIFIED`. To learn more about creating a watcher, read the [Watching a Variable for Changes](/deployment-manager/runtime-configurator/watching-a-variable) documentation.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/runtime-configurator/reference/rest/v1beta1/projects.configs.variables/watch
    example:
      inputs: [
        {
          "id": "WatchVariableRequest",
          "type": "object",
          "properties": {
            "newerThan": {
              "type": "string",
              "format": "google-datetime",
              "description": "If specified, checks the current timestamp of the variable and if the current timestamp is newer than `newerThan` timestamp, the method returns immediately. If not specified or the variable has an older timestamp, the watcher waits for a the value to change before returning."
            }
          },
          "description": "Request for the `WatchVariable()` method."
        }
      ]
      outputs: [
        {}
      ]
  runtimeconfig.projects.configs.waiters.create:
    description: |-
      Creates a Waiter resource. This operation returns a long-running Operation resource which can be polled for completion. However, a waiter with the given name will exist (and can be retrieved) prior to the operation completing. If the operation fails, the failed Waiter resource will still exist and must be deleted prior to subsequent creation attempts.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/runtime-configurator/reference/rest/v1beta1/projects.configs.waiters/create
    example:
      inputs: [
        {
          "id": "Waiter",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "Output only. If the value is `false`, it means the waiter is still waiting for one of its conditions to be met. If true, the waiter has finished. If the waiter finished due to a timeout or failure, `error` will be set."
            },
            "name": {
              "type": "string",
              "description": "The name of the Waiter resource, in the format: projects/[PROJECT_ID]/configs/[CONFIG_NAME]/waiters/[WAITER_NAME] The `[PROJECT_ID]` must be a valid Google Cloud project ID, the `[CONFIG_NAME]` must be a valid RuntimeConfig resource, the `[WAITER_NAME]` must match RFC 1035 segment specification, and the length of `[WAITER_NAME]` must be less than 64 bytes. After you create a Waiter resource, you cannot change the resource name."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "Output only. If the waiter ended due to a failure or timeout, this value will be set."
            },
            "failure": {
              "id": "EndCondition",
              "type": "object",
              "properties": {
                "cardinality": {
                  "id": "Cardinality",
                  "type": "object",
                  "properties": {
                    "path": {
                      "type": "string",
                      "description": "The root of the variable subtree to monitor. For example, `/foo`."
                    },
                    "number": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number variables under the `path` that must exist to meet this condition. Defaults to 1 if not specified."
                    }
                  },
                  "description": "The cardinality of the `EndCondition`."
                }
              },
              "description": "[Optional] The failure condition of this waiter. If this condition is met, `done` will be set to `true` and the `error` code will be set to `ABORTED`. The failure condition takes precedence over the success condition. If both conditions are met, a failure will be indicated. This value is optional; if no failure condition is set, the only failure scenario will be a timeout."
            },
            "success": {
              "id": "EndCondition",
              "type": "object",
              "properties": {
                "cardinality": {
                  "id": "Cardinality",
                  "type": "object",
                  "properties": {
                    "path": {
                      "type": "string",
                      "description": "The root of the variable subtree to monitor. For example, `/foo`."
                    },
                    "number": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number variables under the `path` that must exist to meet this condition. Defaults to 1 if not specified."
                    }
                  },
                  "description": "The cardinality of the `EndCondition`."
                }
              },
              "description": "[Required] The success condition. If this condition is met, `done` will be set to `true` and the `error` value will remain unset. The failure condition takes precedence over the success condition. If both conditions are met, a failure will be indicated."
            },
            "timeout": {
              "type": "string",
              "format": "google-duration",
              "description": "[Required] Specifies the timeout of the waiter in seconds, beginning from the instant that `waiters().create` method is called. If this time elapses before the success or failure conditions are met, the waiter fails and sets the `error` code to `DEADLINE_EXCEEDED`."
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Output only. The instant at which this Waiter resource was created. Adding the value of `timeout` to this instant yields the timeout deadline for the waiter."
            }
          },
          "description": "A Waiter resource waits for some end condition within a RuntimeConfig resource to be met before it returns. For example, assume you have a distributed system where each node writes to a Variable resource indicating the node's readiness as part of the startup process. You then configure a Waiter resource with the success condition set to wait until some number of nodes have checked in. Afterwards, your application runs some arbitrary code after the condition has been met and the waiter returns successfully. Once created, a Waiter resource is immutable. To learn more about using waiters, read the [Creating a Waiter](/deployment-manager/runtime-configurator/creating-a-waiter) documentation."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  runtimeconfig.projects.configs.waiters.delete:
    description: |-
      Deletes the waiter with the specified name.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/runtime-configurator/reference/rest/v1beta1/projects.configs.waiters/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  runtimeconfig.projects.configs.waiters.get:
    description: |-
      Gets information about a single waiter.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/runtime-configurator/reference/rest/v1beta1/projects.configs.waiters/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  runtimeconfig.projects.configs.waiters.list:
    description: |-
      List waiters within the given configuration.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/runtime-configurator/reference/rest/v1beta1/projects.configs.waiters/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListWaitersResponse",
          "type": "object",
          "properties": {
            "waiters": {
              "type": "array",
              "items": {
                "id": "Waiter",
                "type": "object",
                "properties": {
                  "done": {
                    "type": "boolean",
                    "description": "Output only. If the value is `false`, it means the waiter is still waiting for one of its conditions to be met. If true, the waiter has finished. If the waiter finished due to a timeout or failure, `error` will be set."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the Waiter resource, in the format: projects/[PROJECT_ID]/configs/[CONFIG_NAME]/waiters/[WAITER_NAME] The `[PROJECT_ID]` must be a valid Google Cloud project ID, the `[CONFIG_NAME]` must be a valid RuntimeConfig resource, the `[WAITER_NAME]` must match RFC 1035 segment specification, and the length of `[WAITER_NAME]` must be less than 64 bytes. After you create a Waiter resource, you cannot change the resource name."
                  },
                  "error": {
                    "id": "Status",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The status code, which should be an enum value of google.rpc.Code."
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object. Contains field @type with type URL."
                          }
                        },
                        "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                      },
                      "message": {
                        "type": "string",
                        "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                      }
                    },
                    "description": "Output only. If the waiter ended due to a failure or timeout, this value will be set."
                  },
                  "failure": {
                    "id": "EndCondition",
                    "type": "object",
                    "properties": {
                      "cardinality": {
                        "id": "Cardinality",
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string",
                            "description": "The root of the variable subtree to monitor. For example, `/foo`."
                          },
                          "number": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The number variables under the `path` that must exist to meet this condition. Defaults to 1 if not specified."
                          }
                        },
                        "description": "The cardinality of the `EndCondition`."
                      }
                    },
                    "description": "[Optional] The failure condition of this waiter. If this condition is met, `done` will be set to `true` and the `error` code will be set to `ABORTED`. The failure condition takes precedence over the success condition. If both conditions are met, a failure will be indicated. This value is optional; if no failure condition is set, the only failure scenario will be a timeout."
                  },
                  "success": {
                    "id": "EndCondition",
                    "type": "object",
                    "properties": {
                      "cardinality": {
                        "id": "Cardinality",
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string",
                            "description": "The root of the variable subtree to monitor. For example, `/foo`."
                          },
                          "number": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The number variables under the `path` that must exist to meet this condition. Defaults to 1 if not specified."
                          }
                        },
                        "description": "The cardinality of the `EndCondition`."
                      }
                    },
                    "description": "[Required] The success condition. If this condition is met, `done` will be set to `true` and the `error` value will remain unset. The failure condition takes precedence over the success condition. If both conditions are met, a failure will be indicated."
                  },
                  "timeout": {
                    "type": "string",
                    "format": "google-duration",
                    "description": "[Required] Specifies the timeout of the waiter in seconds, beginning from the instant that `waiters().create` method is called. If this time elapses before the success or failure conditions are met, the waiter fails and sets the `error` code to `DEADLINE_EXCEEDED`."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Output only. The instant at which this Waiter resource was created. Adding the value of `timeout` to this instant yields the timeout deadline for the waiter."
                  }
                },
                "description": "A Waiter resource waits for some end condition within a RuntimeConfig resource to be met before it returns. For example, assume you have a distributed system where each node writes to a Variable resource indicating the node's readiness as part of the startup process. You then configure a Waiter resource with the success condition set to wait until some number of nodes have checked in. Afterwards, your application runs some arbitrary code after the condition has been met and the waiter returns successfully. Once created, a Waiter resource is immutable. To learn more about using waiters, read the [Creating a Waiter](/deployment-manager/runtime-configurator/creating-a-waiter) documentation."
              },
              "description": "Found waiters in the project."
            },
            "nextPageToken": {
              "type": "string",
              "description": "This token allows you to get the next page of results for list requests. If the number of results is larger than `pageSize`, use the `nextPageToken` as a value for the query parameter `pageToken` in the next list request. Subsequent list requests will have their own `nextPageToken` to continue paging through the results"
            }
          },
          "description": "Response for the `ListWaiters()` method. Order of returned waiter objects is arbitrary."
        }
      ]
  runtimeconfig.projects.configs.waiters.testIamPermissions:
    description: |-
      Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/deployment-manager/runtime-configurator/reference/rest/v1beta1/projects.configs.waiters/testIamPermissions
    example:
      inputs: [
        {
          "id": "TestIamPermissionsRequest",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
            }
          },
          "description": "Request message for `TestIamPermissions` method."
        }
      ]
      outputs: [
        {
          "id": "TestIamPermissionsResponse",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
            }
          },
          "description": "Response message for `TestIamPermissions` method."
        }
      ]