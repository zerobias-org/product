Product:
  name: GCP Resource Manager
  versions: [1.0.0]
  package: google.gcp.resourcemanager
  description: |-
    Resource Manager
  link: https://cloud.google.com/resource-manager
  contentType: json
Operations:
  orgpolicy.folders.constraints.list:
    description: |-
      Lists `Constraints` that could be applied on the specified resource.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/orgpolicy/docs/reference/rest/v2/folders.constraints/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudOrgpolicyV2ListConstraintsResponse",
          "type": "object",
          "properties": {
            "constraints": {
              "type": "array",
              "items": {
                "id": "GoogleCloudOrgpolicyV2Constraint",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Immutable. The resource name of the Constraint. Must be in one of the following forms: * `projects/{project_number}/constraints/{constraint_name}` * `folders/{folder_id}/constraints/{constraint_name}` * `organizations/{organization_id}/constraints/{constraint_name}` For example, \"/projects/123/constraints/compute.disableSerialPortAccess\"."
                  },
                  "description": {
                    "type": "string",
                    "description": "Detailed description of what this `Constraint` controls as well as how and where it is enforced. Mutable."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The human readable name. Mutable."
                  },
                  "listConstraint": {
                    "id": "GoogleCloudOrgpolicyV2ConstraintListConstraint",
                    "type": "object",
                    "properties": {
                      "supportsIn": {
                        "type": "boolean",
                        "description": "Indicates whether values grouped into categories can be used in `Policy.allowed_values` and `Policy.denied_values`. For example, `\"in:Python\"` would match any value in the 'Python' group."
                      },
                      "supportsUnder": {
                        "type": "boolean",
                        "description": "Indicates whether subtrees of Cloud Resource Manager resource hierarchy can be used in `Policy.allowed_values` and `Policy.denied_values`. For example, `\"under:folders/123\"` would match any resource under the 'folders/123' folder."
                      }
                    },
                    "description": "Defines this constraint as being a ListConstraint."
                  },
                  "booleanConstraint": {
                    "id": "GoogleCloudOrgpolicyV2ConstraintBooleanConstraint",
                    "type": "object",
                    "properties": {},
                    "description": "Defines this constraint as being a BooleanConstraint."
                  },
                  "constraintDefault": {
                    "enum": [
                      "CONSTRAINT_DEFAULT_UNSPECIFIED",
                      "ALLOW",
                      "DENY"
                    ],
                    "type": "string",
                    "description": "The evaluation behavior of this constraint in the absence of 'Policy'.",
                    "enumDescriptions": [
                      "This is only used for distinguishing unset values and should never be used.",
                      "Indicate that all values are allowed for list constraints. Indicate that enforcement is off for boolean constraints.",
                      "Indicate that all values are denied for list constraints. Indicate that enforcement is on for boolean constraints."
                    ]
                  }
                },
                "description": "A `constraint` describes a way to restrict resource's configuration. For example, you could enforce a constraint that controls which cloud services can be activated across an organization, or whether a Compute Engine instance can have serial port connections established. `Constraints` can be configured by the organization's policy adminstrator to fit the needs of the organzation by setting a `policy` that includes `constraints` at different locations in the organization's resource hierarchy. Policies are inherited down the resource hierarchy from higher levels, but can also be overridden. For details about the inheritance rules please read about `policies`. `Constraints` have a default behavior determined by the `constraint_default` field, which is the enforcement behavior that is used in the absence of a `policy` being defined or inherited for the resource in question."
              },
              "description": "The collection of constraints that are available on the targeted resource."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Page token used to retrieve the next page. This is currently not used."
            }
          },
          "description": "The response returned from the ListConstraints method."
        }
      ]
  orgpolicy.folders.policies.create:
    description: |-
      Creates a Policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the constraint does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.ALREADY_EXISTS` if the policy already exists on the given Cloud resource.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/orgpolicy/docs/reference/rest/v2/folders.policies/create
    example:
      inputs: [
        {
          "id": "GoogleCloudOrgpolicyV2Policy",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Immutable. The resource name of the Policy. Must be one of the following forms, where constraint_name is the name of the constraint which this Policy configures: * `projects/{project_number}/policies/{constraint_name}` * `folders/{folder_id}/policies/{constraint_name}` * `organizations/{organization_id}/policies/{constraint_name}` For example, \"projects/123/policies/compute.disableSerialPortAccess\". Note: `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API requests, but responses will return the name using the equivalent project number."
            },
            "spec": {
              "id": "GoogleCloudOrgpolicyV2PolicySpec",
              "type": "object",
              "properties": {
                "etag": {
                  "type": "string",
                  "description": "An opaque tag indicating the current version of the `Policy`, used for concurrency control. This field is ignored if used in a `CreatePolicy` request. When the `Policy` is returned from either a `GetPolicy` or a `ListPolicies` request, this `etag` indicates the version of the current `Policy` to use when executing a read-modify-write loop. When the `Policy` is returned from a `GetEffectivePolicy` request, the `etag` will be unset."
                },
                "reset": {
                  "type": "boolean",
                  "description": "Ignores policies set above this resource and restores the `constraint_default` enforcement behavior of the specific `Constraint` at this resource. This field can be set in policies for either list or boolean constraints. If set, `rules` must be empty and `inherit_from_parent` must be set to false."
                },
                "rules": {
                  "type": "array",
                  "items": {
                    "id": "GoogleCloudOrgpolicyV2PolicySpecPolicyRule",
                    "type": "object",
                    "properties": {
                      "values": {
                        "id": "GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues",
                        "type": "object",
                        "properties": {
                          "deniedValues": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of values denied at this resource."
                          },
                          "allowedValues": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of values allowed at this resource."
                          }
                        },
                        "description": "List of values to be used for this PolicyRule. This field can be set only in Policies for list constraints."
                      },
                      "denyAll": {
                        "type": "boolean",
                        "description": "Setting this to true means that all values are denied. This field can be set only in Policies for list constraints."
                      },
                      "enforce": {
                        "type": "boolean",
                        "description": "If `true`, then the `Policy` is enforced. If `false`, then any configuration is acceptable. This field can be set only in Policies for boolean constraints."
                      },
                      "allowAll": {
                        "type": "boolean",
                        "description": "Setting this to true means that all values are allowed. This field can be set only in Policies for list constraints."
                      },
                      "condition": {
                        "id": "GoogleTypeExpr",
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                          },
                          "location": {
                            "type": "string",
                            "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                          },
                          "expression": {
                            "type": "string",
                            "description": "Textual representation of an expression in Common Expression Language syntax."
                          },
                          "description": {
                            "type": "string",
                            "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                          }
                        },
                        "description": "A condition which determines whether this rule is used in the evaluation of the policy. When set, the `expression` field in the `Expr' must include from 1 to 10 subexpressions, joined by the \"||\" or \"&&\" operators. Each subexpression must be of the form \"resource.matchTag('/tag_key_short_name, 'tag_value_short_name')\". or \"resource.matchTagId('tagKeys/key_id', 'tagValues/value_id')\". where key_name and value_name are the resource names for Label Keys and Values. These names are available from the Tag Manager Service. An example expression is: \"resource.matchTag('123456789/environment, 'prod')\". or \"resource.matchTagId('tagKeys/123', 'tagValues/456')\"."
                      }
                    },
                    "description": "A rule used to express this policy."
                  },
                  "description": "Up to 10 PolicyRules are allowed. In Policies for boolean constraints, the following requirements apply: - There must be one and only one PolicyRule where condition is unset. - BooleanPolicyRules with conditions must set `enforced` to the opposite of the PolicyRule without a condition. - During policy evaluation, PolicyRules with conditions that are true for a target resource take precedence."
                },
                "updateTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "readOnly": true,
                  "description": "Output only. The time stamp this was previously updated. This represents the last time a call to `CreatePolicy` or `UpdatePolicy` was made for that `Policy`."
                },
                "inheritFromParent": {
                  "type": "boolean",
                  "description": "Determines the inheritance behavior for this `Policy`. If `inherit_from_parent` is true, PolicyRules set higher up in the hierarchy (up to the closest root) are inherited and present in the effective policy. If it is false, then no rules are inherited, and this Policy becomes the new root for evaluation. This field can be set only for Policies which configure list constraints."
                }
              },
              "description": "Basic information about the Organization Policy."
            }
          },
          "description": "Defines a Cloud Organization `Policy` which is used to specify `Constraints` for configurations of Cloud Platform resources."
        }
      ]
      outputs: [
        {}
      ]
  orgpolicy.folders.policies.delete:
    description: |-
      Deletes a Policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the constraint or Org Policy does not exist.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/orgpolicy/docs/reference/rest/v2/folders.policies/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  orgpolicy.folders.policies.get:
    description: |-
      Gets a `Policy` on a resource. If no `Policy` is set on the resource, NOT_FOUND is returned. The `etag` value can be used with `UpdatePolicy()` to update a `Policy` during read-modify-write.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/orgpolicy/docs/reference/rest/v2/folders.policies/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  orgpolicy.folders.policies.getEffectivePolicy:
    description: |-
      Gets the effective `Policy` on a resource. This is the result of merging `Policies` in the resource hierarchy and evaluating conditions. The returned `Policy` will not have an `etag` or `condition` set because it is a computed `Policy` across multiple resources. Subtrees of Resource Manager resource hierarchy with 'under:' prefix will not be expanded.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/orgpolicy/docs/reference/rest/v2/folders.policies/getEffectivePolicy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  orgpolicy.folders.policies.list:
    description: |-
      Retrieves all of the `Policies` that exist on a particular resource.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/orgpolicy/docs/reference/rest/v2/folders.policies/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudOrgpolicyV2ListPoliciesResponse",
          "type": "object",
          "properties": {
            "policies": {
              "type": "array",
              "items": {
                "id": "GoogleCloudOrgpolicyV2Policy",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Immutable. The resource name of the Policy. Must be one of the following forms, where constraint_name is the name of the constraint which this Policy configures: * `projects/{project_number}/policies/{constraint_name}` * `folders/{folder_id}/policies/{constraint_name}` * `organizations/{organization_id}/policies/{constraint_name}` For example, \"projects/123/policies/compute.disableSerialPortAccess\". Note: `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API requests, but responses will return the name using the equivalent project number."
                  },
                  "spec": {
                    "id": "GoogleCloudOrgpolicyV2PolicySpec",
                    "type": "object",
                    "properties": {
                      "etag": {
                        "type": "string",
                        "description": "An opaque tag indicating the current version of the `Policy`, used for concurrency control. This field is ignored if used in a `CreatePolicy` request. When the `Policy` is returned from either a `GetPolicy` or a `ListPolicies` request, this `etag` indicates the version of the current `Policy` to use when executing a read-modify-write loop. When the `Policy` is returned from a `GetEffectivePolicy` request, the `etag` will be unset."
                      },
                      "reset": {
                        "type": "boolean",
                        "description": "Ignores policies set above this resource and restores the `constraint_default` enforcement behavior of the specific `Constraint` at this resource. This field can be set in policies for either list or boolean constraints. If set, `rules` must be empty and `inherit_from_parent` must be set to false."
                      },
                      "rules": {
                        "type": "array",
                        "items": {
                          "id": "GoogleCloudOrgpolicyV2PolicySpecPolicyRule",
                          "type": "object",
                          "properties": {
                            "values": {
                              "id": "GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues",
                              "type": "object",
                              "properties": {
                                "deniedValues": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "List of values denied at this resource."
                                },
                                "allowedValues": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "List of values allowed at this resource."
                                }
                              },
                              "description": "List of values to be used for this PolicyRule. This field can be set only in Policies for list constraints."
                            },
                            "denyAll": {
                              "type": "boolean",
                              "description": "Setting this to true means that all values are denied. This field can be set only in Policies for list constraints."
                            },
                            "enforce": {
                              "type": "boolean",
                              "description": "If `true`, then the `Policy` is enforced. If `false`, then any configuration is acceptable. This field can be set only in Policies for boolean constraints."
                            },
                            "allowAll": {
                              "type": "boolean",
                              "description": "Setting this to true means that all values are allowed. This field can be set only in Policies for list constraints."
                            },
                            "condition": {
                              "id": "GoogleTypeExpr",
                              "type": "object",
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                                },
                                "location": {
                                  "type": "string",
                                  "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                                },
                                "expression": {
                                  "type": "string",
                                  "description": "Textual representation of an expression in Common Expression Language syntax."
                                },
                                "description": {
                                  "type": "string",
                                  "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                                }
                              },
                              "description": "A condition which determines whether this rule is used in the evaluation of the policy. When set, the `expression` field in the `Expr' must include from 1 to 10 subexpressions, joined by the \"||\" or \"&&\" operators. Each subexpression must be of the form \"resource.matchTag('/tag_key_short_name, 'tag_value_short_name')\". or \"resource.matchTagId('tagKeys/key_id', 'tagValues/value_id')\". where key_name and value_name are the resource names for Label Keys and Values. These names are available from the Tag Manager Service. An example expression is: \"resource.matchTag('123456789/environment, 'prod')\". or \"resource.matchTagId('tagKeys/123', 'tagValues/456')\"."
                            }
                          },
                          "description": "A rule used to express this policy."
                        },
                        "description": "Up to 10 PolicyRules are allowed. In Policies for boolean constraints, the following requirements apply: - There must be one and only one PolicyRule where condition is unset. - BooleanPolicyRules with conditions must set `enforced` to the opposite of the PolicyRule without a condition. - During policy evaluation, PolicyRules with conditions that are true for a target resource take precedence."
                      },
                      "updateTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "readOnly": true,
                        "description": "Output only. The time stamp this was previously updated. This represents the last time a call to `CreatePolicy` or `UpdatePolicy` was made for that `Policy`."
                      },
                      "inheritFromParent": {
                        "type": "boolean",
                        "description": "Determines the inheritance behavior for this `Policy`. If `inherit_from_parent` is true, PolicyRules set higher up in the hierarchy (up to the closest root) are inherited and present in the effective policy. If it is false, then no rules are inherited, and this Policy becomes the new root for evaluation. This field can be set only for Policies which configure list constraints."
                      }
                    },
                    "description": "Basic information about the Organization Policy."
                  }
                },
                "description": "Defines a Cloud Organization `Policy` which is used to specify `Constraints` for configurations of Cloud Platform resources."
              },
              "description": "All `Policies` that exist on the resource. It will be empty if no `Policies` are set."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Page token used to retrieve the next page. This is currently not used, but the server may at any point start supplying a valid token."
            }
          },
          "description": "The response returned from the ListPolicies method. It will be empty if no `Policies` are set on the resource."
        }
      ]
  orgpolicy.folders.policies.patch:
    description: |-
      Updates a Policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the constraint or the policy do not exist. Returns a `google.rpc.Status` with `google.rpc.Code.ABORTED` if the etag supplied in the request does not match the persisted etag of the policy Note: the supplied policy will perform a full overwrite of all fields.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/orgpolicy/docs/reference/rest/v2/folders.policies/patch
    example:
      inputs: [
        {
          "id": "GoogleCloudOrgpolicyV2Policy",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Immutable. The resource name of the Policy. Must be one of the following forms, where constraint_name is the name of the constraint which this Policy configures: * `projects/{project_number}/policies/{constraint_name}` * `folders/{folder_id}/policies/{constraint_name}` * `organizations/{organization_id}/policies/{constraint_name}` For example, \"projects/123/policies/compute.disableSerialPortAccess\". Note: `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API requests, but responses will return the name using the equivalent project number."
            },
            "spec": {
              "id": "GoogleCloudOrgpolicyV2PolicySpec",
              "type": "object",
              "properties": {
                "etag": {
                  "type": "string",
                  "description": "An opaque tag indicating the current version of the `Policy`, used for concurrency control. This field is ignored if used in a `CreatePolicy` request. When the `Policy` is returned from either a `GetPolicy` or a `ListPolicies` request, this `etag` indicates the version of the current `Policy` to use when executing a read-modify-write loop. When the `Policy` is returned from a `GetEffectivePolicy` request, the `etag` will be unset."
                },
                "reset": {
                  "type": "boolean",
                  "description": "Ignores policies set above this resource and restores the `constraint_default` enforcement behavior of the specific `Constraint` at this resource. This field can be set in policies for either list or boolean constraints. If set, `rules` must be empty and `inherit_from_parent` must be set to false."
                },
                "rules": {
                  "type": "array",
                  "items": {
                    "id": "GoogleCloudOrgpolicyV2PolicySpecPolicyRule",
                    "type": "object",
                    "properties": {
                      "values": {
                        "id": "GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues",
                        "type": "object",
                        "properties": {
                          "deniedValues": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of values denied at this resource."
                          },
                          "allowedValues": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of values allowed at this resource."
                          }
                        },
                        "description": "List of values to be used for this PolicyRule. This field can be set only in Policies for list constraints."
                      },
                      "denyAll": {
                        "type": "boolean",
                        "description": "Setting this to true means that all values are denied. This field can be set only in Policies for list constraints."
                      },
                      "enforce": {
                        "type": "boolean",
                        "description": "If `true`, then the `Policy` is enforced. If `false`, then any configuration is acceptable. This field can be set only in Policies for boolean constraints."
                      },
                      "allowAll": {
                        "type": "boolean",
                        "description": "Setting this to true means that all values are allowed. This field can be set only in Policies for list constraints."
                      },
                      "condition": {
                        "id": "GoogleTypeExpr",
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                          },
                          "location": {
                            "type": "string",
                            "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                          },
                          "expression": {
                            "type": "string",
                            "description": "Textual representation of an expression in Common Expression Language syntax."
                          },
                          "description": {
                            "type": "string",
                            "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                          }
                        },
                        "description": "A condition which determines whether this rule is used in the evaluation of the policy. When set, the `expression` field in the `Expr' must include from 1 to 10 subexpressions, joined by the \"||\" or \"&&\" operators. Each subexpression must be of the form \"resource.matchTag('/tag_key_short_name, 'tag_value_short_name')\". or \"resource.matchTagId('tagKeys/key_id', 'tagValues/value_id')\". where key_name and value_name are the resource names for Label Keys and Values. These names are available from the Tag Manager Service. An example expression is: \"resource.matchTag('123456789/environment, 'prod')\". or \"resource.matchTagId('tagKeys/123', 'tagValues/456')\"."
                      }
                    },
                    "description": "A rule used to express this policy."
                  },
                  "description": "Up to 10 PolicyRules are allowed. In Policies for boolean constraints, the following requirements apply: - There must be one and only one PolicyRule where condition is unset. - BooleanPolicyRules with conditions must set `enforced` to the opposite of the PolicyRule without a condition. - During policy evaluation, PolicyRules with conditions that are true for a target resource take precedence."
                },
                "updateTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "readOnly": true,
                  "description": "Output only. The time stamp this was previously updated. This represents the last time a call to `CreatePolicy` or `UpdatePolicy` was made for that `Policy`."
                },
                "inheritFromParent": {
                  "type": "boolean",
                  "description": "Determines the inheritance behavior for this `Policy`. If `inherit_from_parent` is true, PolicyRules set higher up in the hierarchy (up to the closest root) are inherited and present in the effective policy. If it is false, then no rules are inherited, and this Policy becomes the new root for evaluation. This field can be set only for Policies which configure list constraints."
                }
              },
              "description": "Basic information about the Organization Policy."
            }
          },
          "description": "Defines a Cloud Organization `Policy` which is used to specify `Constraints` for configurations of Cloud Platform resources."
        }
      ]
      outputs: [
        {}
      ]
  orgpolicy.organizations.constraints.list:
    description: |-
      Lists `Constraints` that could be applied on the specified resource.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/orgpolicy/docs/reference/rest/v2/organizations.constraints/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudOrgpolicyV2ListConstraintsResponse",
          "type": "object",
          "properties": {
            "constraints": {
              "type": "array",
              "items": {
                "id": "GoogleCloudOrgpolicyV2Constraint",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Immutable. The resource name of the Constraint. Must be in one of the following forms: * `projects/{project_number}/constraints/{constraint_name}` * `folders/{folder_id}/constraints/{constraint_name}` * `organizations/{organization_id}/constraints/{constraint_name}` For example, \"/projects/123/constraints/compute.disableSerialPortAccess\"."
                  },
                  "description": {
                    "type": "string",
                    "description": "Detailed description of what this `Constraint` controls as well as how and where it is enforced. Mutable."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The human readable name. Mutable."
                  },
                  "listConstraint": {
                    "id": "GoogleCloudOrgpolicyV2ConstraintListConstraint",
                    "type": "object",
                    "properties": {
                      "supportsIn": {
                        "type": "boolean",
                        "description": "Indicates whether values grouped into categories can be used in `Policy.allowed_values` and `Policy.denied_values`. For example, `\"in:Python\"` would match any value in the 'Python' group."
                      },
                      "supportsUnder": {
                        "type": "boolean",
                        "description": "Indicates whether subtrees of Cloud Resource Manager resource hierarchy can be used in `Policy.allowed_values` and `Policy.denied_values`. For example, `\"under:folders/123\"` would match any resource under the 'folders/123' folder."
                      }
                    },
                    "description": "Defines this constraint as being a ListConstraint."
                  },
                  "booleanConstraint": {
                    "id": "GoogleCloudOrgpolicyV2ConstraintBooleanConstraint",
                    "type": "object",
                    "properties": {},
                    "description": "Defines this constraint as being a BooleanConstraint."
                  },
                  "constraintDefault": {
                    "enum": [
                      "CONSTRAINT_DEFAULT_UNSPECIFIED",
                      "ALLOW",
                      "DENY"
                    ],
                    "type": "string",
                    "description": "The evaluation behavior of this constraint in the absence of 'Policy'.",
                    "enumDescriptions": [
                      "This is only used for distinguishing unset values and should never be used.",
                      "Indicate that all values are allowed for list constraints. Indicate that enforcement is off for boolean constraints.",
                      "Indicate that all values are denied for list constraints. Indicate that enforcement is on for boolean constraints."
                    ]
                  }
                },
                "description": "A `constraint` describes a way to restrict resource's configuration. For example, you could enforce a constraint that controls which cloud services can be activated across an organization, or whether a Compute Engine instance can have serial port connections established. `Constraints` can be configured by the organization's policy adminstrator to fit the needs of the organzation by setting a `policy` that includes `constraints` at different locations in the organization's resource hierarchy. Policies are inherited down the resource hierarchy from higher levels, but can also be overridden. For details about the inheritance rules please read about `policies`. `Constraints` have a default behavior determined by the `constraint_default` field, which is the enforcement behavior that is used in the absence of a `policy` being defined or inherited for the resource in question."
              },
              "description": "The collection of constraints that are available on the targeted resource."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Page token used to retrieve the next page. This is currently not used."
            }
          },
          "description": "The response returned from the ListConstraints method."
        }
      ]
  orgpolicy.organizations.policies.create:
    description: |-
      Creates a Policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the constraint does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.ALREADY_EXISTS` if the policy already exists on the given Cloud resource.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/orgpolicy/docs/reference/rest/v2/organizations.policies/create
    example:
      inputs: [
        {
          "id": "GoogleCloudOrgpolicyV2Policy",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Immutable. The resource name of the Policy. Must be one of the following forms, where constraint_name is the name of the constraint which this Policy configures: * `projects/{project_number}/policies/{constraint_name}` * `folders/{folder_id}/policies/{constraint_name}` * `organizations/{organization_id}/policies/{constraint_name}` For example, \"projects/123/policies/compute.disableSerialPortAccess\". Note: `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API requests, but responses will return the name using the equivalent project number."
            },
            "spec": {
              "id": "GoogleCloudOrgpolicyV2PolicySpec",
              "type": "object",
              "properties": {
                "etag": {
                  "type": "string",
                  "description": "An opaque tag indicating the current version of the `Policy`, used for concurrency control. This field is ignored if used in a `CreatePolicy` request. When the `Policy` is returned from either a `GetPolicy` or a `ListPolicies` request, this `etag` indicates the version of the current `Policy` to use when executing a read-modify-write loop. When the `Policy` is returned from a `GetEffectivePolicy` request, the `etag` will be unset."
                },
                "reset": {
                  "type": "boolean",
                  "description": "Ignores policies set above this resource and restores the `constraint_default` enforcement behavior of the specific `Constraint` at this resource. This field can be set in policies for either list or boolean constraints. If set, `rules` must be empty and `inherit_from_parent` must be set to false."
                },
                "rules": {
                  "type": "array",
                  "items": {
                    "id": "GoogleCloudOrgpolicyV2PolicySpecPolicyRule",
                    "type": "object",
                    "properties": {
                      "values": {
                        "id": "GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues",
                        "type": "object",
                        "properties": {
                          "deniedValues": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of values denied at this resource."
                          },
                          "allowedValues": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of values allowed at this resource."
                          }
                        },
                        "description": "List of values to be used for this PolicyRule. This field can be set only in Policies for list constraints."
                      },
                      "denyAll": {
                        "type": "boolean",
                        "description": "Setting this to true means that all values are denied. This field can be set only in Policies for list constraints."
                      },
                      "enforce": {
                        "type": "boolean",
                        "description": "If `true`, then the `Policy` is enforced. If `false`, then any configuration is acceptable. This field can be set only in Policies for boolean constraints."
                      },
                      "allowAll": {
                        "type": "boolean",
                        "description": "Setting this to true means that all values are allowed. This field can be set only in Policies for list constraints."
                      },
                      "condition": {
                        "id": "GoogleTypeExpr",
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                          },
                          "location": {
                            "type": "string",
                            "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                          },
                          "expression": {
                            "type": "string",
                            "description": "Textual representation of an expression in Common Expression Language syntax."
                          },
                          "description": {
                            "type": "string",
                            "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                          }
                        },
                        "description": "A condition which determines whether this rule is used in the evaluation of the policy. When set, the `expression` field in the `Expr' must include from 1 to 10 subexpressions, joined by the \"||\" or \"&&\" operators. Each subexpression must be of the form \"resource.matchTag('/tag_key_short_name, 'tag_value_short_name')\". or \"resource.matchTagId('tagKeys/key_id', 'tagValues/value_id')\". where key_name and value_name are the resource names for Label Keys and Values. These names are available from the Tag Manager Service. An example expression is: \"resource.matchTag('123456789/environment, 'prod')\". or \"resource.matchTagId('tagKeys/123', 'tagValues/456')\"."
                      }
                    },
                    "description": "A rule used to express this policy."
                  },
                  "description": "Up to 10 PolicyRules are allowed. In Policies for boolean constraints, the following requirements apply: - There must be one and only one PolicyRule where condition is unset. - BooleanPolicyRules with conditions must set `enforced` to the opposite of the PolicyRule without a condition. - During policy evaluation, PolicyRules with conditions that are true for a target resource take precedence."
                },
                "updateTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "readOnly": true,
                  "description": "Output only. The time stamp this was previously updated. This represents the last time a call to `CreatePolicy` or `UpdatePolicy` was made for that `Policy`."
                },
                "inheritFromParent": {
                  "type": "boolean",
                  "description": "Determines the inheritance behavior for this `Policy`. If `inherit_from_parent` is true, PolicyRules set higher up in the hierarchy (up to the closest root) are inherited and present in the effective policy. If it is false, then no rules are inherited, and this Policy becomes the new root for evaluation. This field can be set only for Policies which configure list constraints."
                }
              },
              "description": "Basic information about the Organization Policy."
            }
          },
          "description": "Defines a Cloud Organization `Policy` which is used to specify `Constraints` for configurations of Cloud Platform resources."
        }
      ]
      outputs: [
        {}
      ]
  orgpolicy.organizations.policies.delete:
    description: |-
      Deletes a Policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the constraint or Org Policy does not exist.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/orgpolicy/docs/reference/rest/v2/organizations.policies/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  orgpolicy.organizations.policies.get:
    description: |-
      Gets a `Policy` on a resource. If no `Policy` is set on the resource, NOT_FOUND is returned. The `etag` value can be used with `UpdatePolicy()` to update a `Policy` during read-modify-write.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/orgpolicy/docs/reference/rest/v2/organizations.policies/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  orgpolicy.organizations.policies.getEffectivePolicy:
    description: |-
      Gets the effective `Policy` on a resource. This is the result of merging `Policies` in the resource hierarchy and evaluating conditions. The returned `Policy` will not have an `etag` or `condition` set because it is a computed `Policy` across multiple resources. Subtrees of Resource Manager resource hierarchy with 'under:' prefix will not be expanded.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/orgpolicy/docs/reference/rest/v2/organizations.policies/getEffectivePolicy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  orgpolicy.organizations.policies.list:
    description: |-
      Retrieves all of the `Policies` that exist on a particular resource.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/orgpolicy/docs/reference/rest/v2/organizations.policies/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudOrgpolicyV2ListPoliciesResponse",
          "type": "object",
          "properties": {
            "policies": {
              "type": "array",
              "items": {
                "id": "GoogleCloudOrgpolicyV2Policy",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Immutable. The resource name of the Policy. Must be one of the following forms, where constraint_name is the name of the constraint which this Policy configures: * `projects/{project_number}/policies/{constraint_name}` * `folders/{folder_id}/policies/{constraint_name}` * `organizations/{organization_id}/policies/{constraint_name}` For example, \"projects/123/policies/compute.disableSerialPortAccess\". Note: `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API requests, but responses will return the name using the equivalent project number."
                  },
                  "spec": {
                    "id": "GoogleCloudOrgpolicyV2PolicySpec",
                    "type": "object",
                    "properties": {
                      "etag": {
                        "type": "string",
                        "description": "An opaque tag indicating the current version of the `Policy`, used for concurrency control. This field is ignored if used in a `CreatePolicy` request. When the `Policy` is returned from either a `GetPolicy` or a `ListPolicies` request, this `etag` indicates the version of the current `Policy` to use when executing a read-modify-write loop. When the `Policy` is returned from a `GetEffectivePolicy` request, the `etag` will be unset."
                      },
                      "reset": {
                        "type": "boolean",
                        "description": "Ignores policies set above this resource and restores the `constraint_default` enforcement behavior of the specific `Constraint` at this resource. This field can be set in policies for either list or boolean constraints. If set, `rules` must be empty and `inherit_from_parent` must be set to false."
                      },
                      "rules": {
                        "type": "array",
                        "items": {
                          "id": "GoogleCloudOrgpolicyV2PolicySpecPolicyRule",
                          "type": "object",
                          "properties": {
                            "values": {
                              "id": "GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues",
                              "type": "object",
                              "properties": {
                                "deniedValues": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "List of values denied at this resource."
                                },
                                "allowedValues": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "List of values allowed at this resource."
                                }
                              },
                              "description": "List of values to be used for this PolicyRule. This field can be set only in Policies for list constraints."
                            },
                            "denyAll": {
                              "type": "boolean",
                              "description": "Setting this to true means that all values are denied. This field can be set only in Policies for list constraints."
                            },
                            "enforce": {
                              "type": "boolean",
                              "description": "If `true`, then the `Policy` is enforced. If `false`, then any configuration is acceptable. This field can be set only in Policies for boolean constraints."
                            },
                            "allowAll": {
                              "type": "boolean",
                              "description": "Setting this to true means that all values are allowed. This field can be set only in Policies for list constraints."
                            },
                            "condition": {
                              "id": "GoogleTypeExpr",
                              "type": "object",
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                                },
                                "location": {
                                  "type": "string",
                                  "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                                },
                                "expression": {
                                  "type": "string",
                                  "description": "Textual representation of an expression in Common Expression Language syntax."
                                },
                                "description": {
                                  "type": "string",
                                  "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                                }
                              },
                              "description": "A condition which determines whether this rule is used in the evaluation of the policy. When set, the `expression` field in the `Expr' must include from 1 to 10 subexpressions, joined by the \"||\" or \"&&\" operators. Each subexpression must be of the form \"resource.matchTag('/tag_key_short_name, 'tag_value_short_name')\". or \"resource.matchTagId('tagKeys/key_id', 'tagValues/value_id')\". where key_name and value_name are the resource names for Label Keys and Values. These names are available from the Tag Manager Service. An example expression is: \"resource.matchTag('123456789/environment, 'prod')\". or \"resource.matchTagId('tagKeys/123', 'tagValues/456')\"."
                            }
                          },
                          "description": "A rule used to express this policy."
                        },
                        "description": "Up to 10 PolicyRules are allowed. In Policies for boolean constraints, the following requirements apply: - There must be one and only one PolicyRule where condition is unset. - BooleanPolicyRules with conditions must set `enforced` to the opposite of the PolicyRule without a condition. - During policy evaluation, PolicyRules with conditions that are true for a target resource take precedence."
                      },
                      "updateTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "readOnly": true,
                        "description": "Output only. The time stamp this was previously updated. This represents the last time a call to `CreatePolicy` or `UpdatePolicy` was made for that `Policy`."
                      },
                      "inheritFromParent": {
                        "type": "boolean",
                        "description": "Determines the inheritance behavior for this `Policy`. If `inherit_from_parent` is true, PolicyRules set higher up in the hierarchy (up to the closest root) are inherited and present in the effective policy. If it is false, then no rules are inherited, and this Policy becomes the new root for evaluation. This field can be set only for Policies which configure list constraints."
                      }
                    },
                    "description": "Basic information about the Organization Policy."
                  }
                },
                "description": "Defines a Cloud Organization `Policy` which is used to specify `Constraints` for configurations of Cloud Platform resources."
              },
              "description": "All `Policies` that exist on the resource. It will be empty if no `Policies` are set."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Page token used to retrieve the next page. This is currently not used, but the server may at any point start supplying a valid token."
            }
          },
          "description": "The response returned from the ListPolicies method. It will be empty if no `Policies` are set on the resource."
        }
      ]
  orgpolicy.organizations.policies.patch:
    description: |-
      Updates a Policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the constraint or the policy do not exist. Returns a `google.rpc.Status` with `google.rpc.Code.ABORTED` if the etag supplied in the request does not match the persisted etag of the policy Note: the supplied policy will perform a full overwrite of all fields.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/orgpolicy/docs/reference/rest/v2/organizations.policies/patch
    example:
      inputs: [
        {
          "id": "GoogleCloudOrgpolicyV2Policy",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Immutable. The resource name of the Policy. Must be one of the following forms, where constraint_name is the name of the constraint which this Policy configures: * `projects/{project_number}/policies/{constraint_name}` * `folders/{folder_id}/policies/{constraint_name}` * `organizations/{organization_id}/policies/{constraint_name}` For example, \"projects/123/policies/compute.disableSerialPortAccess\". Note: `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API requests, but responses will return the name using the equivalent project number."
            },
            "spec": {
              "id": "GoogleCloudOrgpolicyV2PolicySpec",
              "type": "object",
              "properties": {
                "etag": {
                  "type": "string",
                  "description": "An opaque tag indicating the current version of the `Policy`, used for concurrency control. This field is ignored if used in a `CreatePolicy` request. When the `Policy` is returned from either a `GetPolicy` or a `ListPolicies` request, this `etag` indicates the version of the current `Policy` to use when executing a read-modify-write loop. When the `Policy` is returned from a `GetEffectivePolicy` request, the `etag` will be unset."
                },
                "reset": {
                  "type": "boolean",
                  "description": "Ignores policies set above this resource and restores the `constraint_default` enforcement behavior of the specific `Constraint` at this resource. This field can be set in policies for either list or boolean constraints. If set, `rules` must be empty and `inherit_from_parent` must be set to false."
                },
                "rules": {
                  "type": "array",
                  "items": {
                    "id": "GoogleCloudOrgpolicyV2PolicySpecPolicyRule",
                    "type": "object",
                    "properties": {
                      "values": {
                        "id": "GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues",
                        "type": "object",
                        "properties": {
                          "deniedValues": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of values denied at this resource."
                          },
                          "allowedValues": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of values allowed at this resource."
                          }
                        },
                        "description": "List of values to be used for this PolicyRule. This field can be set only in Policies for list constraints."
                      },
                      "denyAll": {
                        "type": "boolean",
                        "description": "Setting this to true means that all values are denied. This field can be set only in Policies for list constraints."
                      },
                      "enforce": {
                        "type": "boolean",
                        "description": "If `true`, then the `Policy` is enforced. If `false`, then any configuration is acceptable. This field can be set only in Policies for boolean constraints."
                      },
                      "allowAll": {
                        "type": "boolean",
                        "description": "Setting this to true means that all values are allowed. This field can be set only in Policies for list constraints."
                      },
                      "condition": {
                        "id": "GoogleTypeExpr",
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                          },
                          "location": {
                            "type": "string",
                            "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                          },
                          "expression": {
                            "type": "string",
                            "description": "Textual representation of an expression in Common Expression Language syntax."
                          },
                          "description": {
                            "type": "string",
                            "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                          }
                        },
                        "description": "A condition which determines whether this rule is used in the evaluation of the policy. When set, the `expression` field in the `Expr' must include from 1 to 10 subexpressions, joined by the \"||\" or \"&&\" operators. Each subexpression must be of the form \"resource.matchTag('/tag_key_short_name, 'tag_value_short_name')\". or \"resource.matchTagId('tagKeys/key_id', 'tagValues/value_id')\". where key_name and value_name are the resource names for Label Keys and Values. These names are available from the Tag Manager Service. An example expression is: \"resource.matchTag('123456789/environment, 'prod')\". or \"resource.matchTagId('tagKeys/123', 'tagValues/456')\"."
                      }
                    },
                    "description": "A rule used to express this policy."
                  },
                  "description": "Up to 10 PolicyRules are allowed. In Policies for boolean constraints, the following requirements apply: - There must be one and only one PolicyRule where condition is unset. - BooleanPolicyRules with conditions must set `enforced` to the opposite of the PolicyRule without a condition. - During policy evaluation, PolicyRules with conditions that are true for a target resource take precedence."
                },
                "updateTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "readOnly": true,
                  "description": "Output only. The time stamp this was previously updated. This represents the last time a call to `CreatePolicy` or `UpdatePolicy` was made for that `Policy`."
                },
                "inheritFromParent": {
                  "type": "boolean",
                  "description": "Determines the inheritance behavior for this `Policy`. If `inherit_from_parent` is true, PolicyRules set higher up in the hierarchy (up to the closest root) are inherited and present in the effective policy. If it is false, then no rules are inherited, and this Policy becomes the new root for evaluation. This field can be set only for Policies which configure list constraints."
                }
              },
              "description": "Basic information about the Organization Policy."
            }
          },
          "description": "Defines a Cloud Organization `Policy` which is used to specify `Constraints` for configurations of Cloud Platform resources."
        }
      ]
      outputs: [
        {}
      ]
  orgpolicy.projects.constraints.list:
    description: |-
      Lists `Constraints` that could be applied on the specified resource.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/orgpolicy/docs/reference/rest/v2/projects.constraints/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudOrgpolicyV2ListConstraintsResponse",
          "type": "object",
          "properties": {
            "constraints": {
              "type": "array",
              "items": {
                "id": "GoogleCloudOrgpolicyV2Constraint",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Immutable. The resource name of the Constraint. Must be in one of the following forms: * `projects/{project_number}/constraints/{constraint_name}` * `folders/{folder_id}/constraints/{constraint_name}` * `organizations/{organization_id}/constraints/{constraint_name}` For example, \"/projects/123/constraints/compute.disableSerialPortAccess\"."
                  },
                  "description": {
                    "type": "string",
                    "description": "Detailed description of what this `Constraint` controls as well as how and where it is enforced. Mutable."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The human readable name. Mutable."
                  },
                  "listConstraint": {
                    "id": "GoogleCloudOrgpolicyV2ConstraintListConstraint",
                    "type": "object",
                    "properties": {
                      "supportsIn": {
                        "type": "boolean",
                        "description": "Indicates whether values grouped into categories can be used in `Policy.allowed_values` and `Policy.denied_values`. For example, `\"in:Python\"` would match any value in the 'Python' group."
                      },
                      "supportsUnder": {
                        "type": "boolean",
                        "description": "Indicates whether subtrees of Cloud Resource Manager resource hierarchy can be used in `Policy.allowed_values` and `Policy.denied_values`. For example, `\"under:folders/123\"` would match any resource under the 'folders/123' folder."
                      }
                    },
                    "description": "Defines this constraint as being a ListConstraint."
                  },
                  "booleanConstraint": {
                    "id": "GoogleCloudOrgpolicyV2ConstraintBooleanConstraint",
                    "type": "object",
                    "properties": {},
                    "description": "Defines this constraint as being a BooleanConstraint."
                  },
                  "constraintDefault": {
                    "enum": [
                      "CONSTRAINT_DEFAULT_UNSPECIFIED",
                      "ALLOW",
                      "DENY"
                    ],
                    "type": "string",
                    "description": "The evaluation behavior of this constraint in the absence of 'Policy'.",
                    "enumDescriptions": [
                      "This is only used for distinguishing unset values and should never be used.",
                      "Indicate that all values are allowed for list constraints. Indicate that enforcement is off for boolean constraints.",
                      "Indicate that all values are denied for list constraints. Indicate that enforcement is on for boolean constraints."
                    ]
                  }
                },
                "description": "A `constraint` describes a way to restrict resource's configuration. For example, you could enforce a constraint that controls which cloud services can be activated across an organization, or whether a Compute Engine instance can have serial port connections established. `Constraints` can be configured by the organization's policy adminstrator to fit the needs of the organzation by setting a `policy` that includes `constraints` at different locations in the organization's resource hierarchy. Policies are inherited down the resource hierarchy from higher levels, but can also be overridden. For details about the inheritance rules please read about `policies`. `Constraints` have a default behavior determined by the `constraint_default` field, which is the enforcement behavior that is used in the absence of a `policy` being defined or inherited for the resource in question."
              },
              "description": "The collection of constraints that are available on the targeted resource."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Page token used to retrieve the next page. This is currently not used."
            }
          },
          "description": "The response returned from the ListConstraints method."
        }
      ]
  orgpolicy.projects.policies.create:
    description: |-
      Creates a Policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the constraint does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.ALREADY_EXISTS` if the policy already exists on the given Cloud resource.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/orgpolicy/docs/reference/rest/v2/projects.policies/create
    example:
      inputs: [
        {
          "id": "GoogleCloudOrgpolicyV2Policy",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Immutable. The resource name of the Policy. Must be one of the following forms, where constraint_name is the name of the constraint which this Policy configures: * `projects/{project_number}/policies/{constraint_name}` * `folders/{folder_id}/policies/{constraint_name}` * `organizations/{organization_id}/policies/{constraint_name}` For example, \"projects/123/policies/compute.disableSerialPortAccess\". Note: `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API requests, but responses will return the name using the equivalent project number."
            },
            "spec": {
              "id": "GoogleCloudOrgpolicyV2PolicySpec",
              "type": "object",
              "properties": {
                "etag": {
                  "type": "string",
                  "description": "An opaque tag indicating the current version of the `Policy`, used for concurrency control. This field is ignored if used in a `CreatePolicy` request. When the `Policy` is returned from either a `GetPolicy` or a `ListPolicies` request, this `etag` indicates the version of the current `Policy` to use when executing a read-modify-write loop. When the `Policy` is returned from a `GetEffectivePolicy` request, the `etag` will be unset."
                },
                "reset": {
                  "type": "boolean",
                  "description": "Ignores policies set above this resource and restores the `constraint_default` enforcement behavior of the specific `Constraint` at this resource. This field can be set in policies for either list or boolean constraints. If set, `rules` must be empty and `inherit_from_parent` must be set to false."
                },
                "rules": {
                  "type": "array",
                  "items": {
                    "id": "GoogleCloudOrgpolicyV2PolicySpecPolicyRule",
                    "type": "object",
                    "properties": {
                      "values": {
                        "id": "GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues",
                        "type": "object",
                        "properties": {
                          "deniedValues": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of values denied at this resource."
                          },
                          "allowedValues": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of values allowed at this resource."
                          }
                        },
                        "description": "List of values to be used for this PolicyRule. This field can be set only in Policies for list constraints."
                      },
                      "denyAll": {
                        "type": "boolean",
                        "description": "Setting this to true means that all values are denied. This field can be set only in Policies for list constraints."
                      },
                      "enforce": {
                        "type": "boolean",
                        "description": "If `true`, then the `Policy` is enforced. If `false`, then any configuration is acceptable. This field can be set only in Policies for boolean constraints."
                      },
                      "allowAll": {
                        "type": "boolean",
                        "description": "Setting this to true means that all values are allowed. This field can be set only in Policies for list constraints."
                      },
                      "condition": {
                        "id": "GoogleTypeExpr",
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                          },
                          "location": {
                            "type": "string",
                            "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                          },
                          "expression": {
                            "type": "string",
                            "description": "Textual representation of an expression in Common Expression Language syntax."
                          },
                          "description": {
                            "type": "string",
                            "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                          }
                        },
                        "description": "A condition which determines whether this rule is used in the evaluation of the policy. When set, the `expression` field in the `Expr' must include from 1 to 10 subexpressions, joined by the \"||\" or \"&&\" operators. Each subexpression must be of the form \"resource.matchTag('/tag_key_short_name, 'tag_value_short_name')\". or \"resource.matchTagId('tagKeys/key_id', 'tagValues/value_id')\". where key_name and value_name are the resource names for Label Keys and Values. These names are available from the Tag Manager Service. An example expression is: \"resource.matchTag('123456789/environment, 'prod')\". or \"resource.matchTagId('tagKeys/123', 'tagValues/456')\"."
                      }
                    },
                    "description": "A rule used to express this policy."
                  },
                  "description": "Up to 10 PolicyRules are allowed. In Policies for boolean constraints, the following requirements apply: - There must be one and only one PolicyRule where condition is unset. - BooleanPolicyRules with conditions must set `enforced` to the opposite of the PolicyRule without a condition. - During policy evaluation, PolicyRules with conditions that are true for a target resource take precedence."
                },
                "updateTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "readOnly": true,
                  "description": "Output only. The time stamp this was previously updated. This represents the last time a call to `CreatePolicy` or `UpdatePolicy` was made for that `Policy`."
                },
                "inheritFromParent": {
                  "type": "boolean",
                  "description": "Determines the inheritance behavior for this `Policy`. If `inherit_from_parent` is true, PolicyRules set higher up in the hierarchy (up to the closest root) are inherited and present in the effective policy. If it is false, then no rules are inherited, and this Policy becomes the new root for evaluation. This field can be set only for Policies which configure list constraints."
                }
              },
              "description": "Basic information about the Organization Policy."
            }
          },
          "description": "Defines a Cloud Organization `Policy` which is used to specify `Constraints` for configurations of Cloud Platform resources."
        }
      ]
      outputs: [
        {}
      ]
  orgpolicy.projects.policies.delete:
    description: |-
      Deletes a Policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the constraint or Org Policy does not exist.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/orgpolicy/docs/reference/rest/v2/projects.policies/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  orgpolicy.projects.policies.get:
    description: |-
      Gets a `Policy` on a resource. If no `Policy` is set on the resource, NOT_FOUND is returned. The `etag` value can be used with `UpdatePolicy()` to update a `Policy` during read-modify-write.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/orgpolicy/docs/reference/rest/v2/projects.policies/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  orgpolicy.projects.policies.getEffectivePolicy:
    description: |-
      Gets the effective `Policy` on a resource. This is the result of merging `Policies` in the resource hierarchy and evaluating conditions. The returned `Policy` will not have an `etag` or `condition` set because it is a computed `Policy` across multiple resources. Subtrees of Resource Manager resource hierarchy with 'under:' prefix will not be expanded.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/orgpolicy/docs/reference/rest/v2/projects.policies/getEffectivePolicy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  orgpolicy.projects.policies.list:
    description: |-
      Retrieves all of the `Policies` that exist on a particular resource.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/orgpolicy/docs/reference/rest/v2/projects.policies/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudOrgpolicyV2ListPoliciesResponse",
          "type": "object",
          "properties": {
            "policies": {
              "type": "array",
              "items": {
                "id": "GoogleCloudOrgpolicyV2Policy",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Immutable. The resource name of the Policy. Must be one of the following forms, where constraint_name is the name of the constraint which this Policy configures: * `projects/{project_number}/policies/{constraint_name}` * `folders/{folder_id}/policies/{constraint_name}` * `organizations/{organization_id}/policies/{constraint_name}` For example, \"projects/123/policies/compute.disableSerialPortAccess\". Note: `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API requests, but responses will return the name using the equivalent project number."
                  },
                  "spec": {
                    "id": "GoogleCloudOrgpolicyV2PolicySpec",
                    "type": "object",
                    "properties": {
                      "etag": {
                        "type": "string",
                        "description": "An opaque tag indicating the current version of the `Policy`, used for concurrency control. This field is ignored if used in a `CreatePolicy` request. When the `Policy` is returned from either a `GetPolicy` or a `ListPolicies` request, this `etag` indicates the version of the current `Policy` to use when executing a read-modify-write loop. When the `Policy` is returned from a `GetEffectivePolicy` request, the `etag` will be unset."
                      },
                      "reset": {
                        "type": "boolean",
                        "description": "Ignores policies set above this resource and restores the `constraint_default` enforcement behavior of the specific `Constraint` at this resource. This field can be set in policies for either list or boolean constraints. If set, `rules` must be empty and `inherit_from_parent` must be set to false."
                      },
                      "rules": {
                        "type": "array",
                        "items": {
                          "id": "GoogleCloudOrgpolicyV2PolicySpecPolicyRule",
                          "type": "object",
                          "properties": {
                            "values": {
                              "id": "GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues",
                              "type": "object",
                              "properties": {
                                "deniedValues": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "List of values denied at this resource."
                                },
                                "allowedValues": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "List of values allowed at this resource."
                                }
                              },
                              "description": "List of values to be used for this PolicyRule. This field can be set only in Policies for list constraints."
                            },
                            "denyAll": {
                              "type": "boolean",
                              "description": "Setting this to true means that all values are denied. This field can be set only in Policies for list constraints."
                            },
                            "enforce": {
                              "type": "boolean",
                              "description": "If `true`, then the `Policy` is enforced. If `false`, then any configuration is acceptable. This field can be set only in Policies for boolean constraints."
                            },
                            "allowAll": {
                              "type": "boolean",
                              "description": "Setting this to true means that all values are allowed. This field can be set only in Policies for list constraints."
                            },
                            "condition": {
                              "id": "GoogleTypeExpr",
                              "type": "object",
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                                },
                                "location": {
                                  "type": "string",
                                  "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                                },
                                "expression": {
                                  "type": "string",
                                  "description": "Textual representation of an expression in Common Expression Language syntax."
                                },
                                "description": {
                                  "type": "string",
                                  "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                                }
                              },
                              "description": "A condition which determines whether this rule is used in the evaluation of the policy. When set, the `expression` field in the `Expr' must include from 1 to 10 subexpressions, joined by the \"||\" or \"&&\" operators. Each subexpression must be of the form \"resource.matchTag('/tag_key_short_name, 'tag_value_short_name')\". or \"resource.matchTagId('tagKeys/key_id', 'tagValues/value_id')\". where key_name and value_name are the resource names for Label Keys and Values. These names are available from the Tag Manager Service. An example expression is: \"resource.matchTag('123456789/environment, 'prod')\". or \"resource.matchTagId('tagKeys/123', 'tagValues/456')\"."
                            }
                          },
                          "description": "A rule used to express this policy."
                        },
                        "description": "Up to 10 PolicyRules are allowed. In Policies for boolean constraints, the following requirements apply: - There must be one and only one PolicyRule where condition is unset. - BooleanPolicyRules with conditions must set `enforced` to the opposite of the PolicyRule without a condition. - During policy evaluation, PolicyRules with conditions that are true for a target resource take precedence."
                      },
                      "updateTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "readOnly": true,
                        "description": "Output only. The time stamp this was previously updated. This represents the last time a call to `CreatePolicy` or `UpdatePolicy` was made for that `Policy`."
                      },
                      "inheritFromParent": {
                        "type": "boolean",
                        "description": "Determines the inheritance behavior for this `Policy`. If `inherit_from_parent` is true, PolicyRules set higher up in the hierarchy (up to the closest root) are inherited and present in the effective policy. If it is false, then no rules are inherited, and this Policy becomes the new root for evaluation. This field can be set only for Policies which configure list constraints."
                      }
                    },
                    "description": "Basic information about the Organization Policy."
                  }
                },
                "description": "Defines a Cloud Organization `Policy` which is used to specify `Constraints` for configurations of Cloud Platform resources."
              },
              "description": "All `Policies` that exist on the resource. It will be empty if no `Policies` are set."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Page token used to retrieve the next page. This is currently not used, but the server may at any point start supplying a valid token."
            }
          },
          "description": "The response returned from the ListPolicies method. It will be empty if no `Policies` are set on the resource."
        }
      ]
  orgpolicy.projects.policies.patch:
    description: |-
      Updates a Policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the constraint or the policy do not exist. Returns a `google.rpc.Status` with `google.rpc.Code.ABORTED` if the etag supplied in the request does not match the persisted etag of the policy Note: the supplied policy will perform a full overwrite of all fields.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/orgpolicy/docs/reference/rest/v2/projects.policies/patch
    example:
      inputs: [
        {
          "id": "GoogleCloudOrgpolicyV2Policy",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Immutable. The resource name of the Policy. Must be one of the following forms, where constraint_name is the name of the constraint which this Policy configures: * `projects/{project_number}/policies/{constraint_name}` * `folders/{folder_id}/policies/{constraint_name}` * `organizations/{organization_id}/policies/{constraint_name}` For example, \"projects/123/policies/compute.disableSerialPortAccess\". Note: `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API requests, but responses will return the name using the equivalent project number."
            },
            "spec": {
              "id": "GoogleCloudOrgpolicyV2PolicySpec",
              "type": "object",
              "properties": {
                "etag": {
                  "type": "string",
                  "description": "An opaque tag indicating the current version of the `Policy`, used for concurrency control. This field is ignored if used in a `CreatePolicy` request. When the `Policy` is returned from either a `GetPolicy` or a `ListPolicies` request, this `etag` indicates the version of the current `Policy` to use when executing a read-modify-write loop. When the `Policy` is returned from a `GetEffectivePolicy` request, the `etag` will be unset."
                },
                "reset": {
                  "type": "boolean",
                  "description": "Ignores policies set above this resource and restores the `constraint_default` enforcement behavior of the specific `Constraint` at this resource. This field can be set in policies for either list or boolean constraints. If set, `rules` must be empty and `inherit_from_parent` must be set to false."
                },
                "rules": {
                  "type": "array",
                  "items": {
                    "id": "GoogleCloudOrgpolicyV2PolicySpecPolicyRule",
                    "type": "object",
                    "properties": {
                      "values": {
                        "id": "GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues",
                        "type": "object",
                        "properties": {
                          "deniedValues": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of values denied at this resource."
                          },
                          "allowedValues": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of values allowed at this resource."
                          }
                        },
                        "description": "List of values to be used for this PolicyRule. This field can be set only in Policies for list constraints."
                      },
                      "denyAll": {
                        "type": "boolean",
                        "description": "Setting this to true means that all values are denied. This field can be set only in Policies for list constraints."
                      },
                      "enforce": {
                        "type": "boolean",
                        "description": "If `true`, then the `Policy` is enforced. If `false`, then any configuration is acceptable. This field can be set only in Policies for boolean constraints."
                      },
                      "allowAll": {
                        "type": "boolean",
                        "description": "Setting this to true means that all values are allowed. This field can be set only in Policies for list constraints."
                      },
                      "condition": {
                        "id": "GoogleTypeExpr",
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                          },
                          "location": {
                            "type": "string",
                            "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                          },
                          "expression": {
                            "type": "string",
                            "description": "Textual representation of an expression in Common Expression Language syntax."
                          },
                          "description": {
                            "type": "string",
                            "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                          }
                        },
                        "description": "A condition which determines whether this rule is used in the evaluation of the policy. When set, the `expression` field in the `Expr' must include from 1 to 10 subexpressions, joined by the \"||\" or \"&&\" operators. Each subexpression must be of the form \"resource.matchTag('/tag_key_short_name, 'tag_value_short_name')\". or \"resource.matchTagId('tagKeys/key_id', 'tagValues/value_id')\". where key_name and value_name are the resource names for Label Keys and Values. These names are available from the Tag Manager Service. An example expression is: \"resource.matchTag('123456789/environment, 'prod')\". or \"resource.matchTagId('tagKeys/123', 'tagValues/456')\"."
                      }
                    },
                    "description": "A rule used to express this policy."
                  },
                  "description": "Up to 10 PolicyRules are allowed. In Policies for boolean constraints, the following requirements apply: - There must be one and only one PolicyRule where condition is unset. - BooleanPolicyRules with conditions must set `enforced` to the opposite of the PolicyRule without a condition. - During policy evaluation, PolicyRules with conditions that are true for a target resource take precedence."
                },
                "updateTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "readOnly": true,
                  "description": "Output only. The time stamp this was previously updated. This represents the last time a call to `CreatePolicy` or `UpdatePolicy` was made for that `Policy`."
                },
                "inheritFromParent": {
                  "type": "boolean",
                  "description": "Determines the inheritance behavior for this `Policy`. If `inherit_from_parent` is true, PolicyRules set higher up in the hierarchy (up to the closest root) are inherited and present in the effective policy. If it is false, then no rules are inherited, and this Policy becomes the new root for evaluation. This field can be set only for Policies which configure list constraints."
                }
              },
              "description": "Basic information about the Organization Policy."
            }
          },
          "description": "Defines a Cloud Organization `Policy` which is used to specify `Constraints` for configurations of Cloud Platform resources."
        }
      ]
      outputs: [
        {}
      ]
  essentialcontacts.folders.contacts.compute:
    description: |-
      Lists all contacts for the resource that are subscribed to the specified notification categories, including contacts inherited from any parent resources.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/docs/reference/essentialcontacts/rest/v1/folders.contacts/compute
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudEssentialcontactsV1ComputeContactsResponse",
          "type": "object",
          "properties": {
            "contacts": {
              "type": "array",
              "items": {
                "id": "GoogleCloudEssentialcontactsV1Contact",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The identifier for the contact. Format: {resource_type}/{resource_id}/contacts/{contact_id}"
                  },
                  "email": {
                    "type": "string",
                    "description": "Required. The email address to send notifications to. This does not need to be a Google account."
                  },
                  "languageTag": {
                    "type": "string",
                    "description": "The preferred language for notifications, as a ISO 639-1 language code. See [Supported languages](https://cloud.google.com/resource-manager/docs/managing-notification-contacts#supported-languages) for a list of supported languages."
                  },
                  "validateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The last time the validation_state was updated, either manually or automatically. A contact is considered stale if its validation state was updated more than 1 year ago."
                  },
                  "validationState": {
                    "enum": [
                      "VALIDATION_STATE_UNSPECIFIED",
                      "VALID",
                      "INVALID"
                    ],
                    "type": "string",
                    "description": "The validity of the contact. A contact is considered valid if it is the correct recipient for notifications for a particular resource.",
                    "enumDescriptions": [
                      "The validation state is unknown or unspecified.",
                      "The contact is marked as valid. This is usually done manually by the contact admin. All new contacts begin in the valid state.",
                      "The contact is considered invalid. This may become the state if the contact's email is found to be unreachable."
                    ]
                  },
                  "notificationCategorySubscriptions": {
                    "type": "array",
                    "items": {
                      "enum": [
                        "NOTIFICATION_CATEGORY_UNSPECIFIED",
                        "ALL",
                        "SUSPENSION",
                        "SECURITY",
                        "TECHNICAL",
                        "BILLING",
                        "LEGAL",
                        "PRODUCT_UPDATES",
                        "TECHNICAL_INCIDENTS"
                      ],
                      "type": "string",
                      "enumDescriptions": [
                        "Notification category is unrecognized or unspecified.",
                        "All notifications related to the resource, including notifications pertaining to categories added in the future.",
                        "Notifications related to imminent account suspension.",
                        "Notifications related to security/privacy incidents, notifications, and vulnerabilities.",
                        "Notifications related to technical events and issues such as outages, errors, or bugs.",
                        "Notifications related to billing and payments notifications, price updates, errors, or credits.",
                        "Notifications related to enforcement actions, regulatory compliance, or government notices.",
                        "Notifications related to new versions, product terms updates, or deprecations.",
                        "Child category of TECHNICAL. If assigned, technical incident notifications will go to these contacts instead of TECHNICAL."
                      ]
                    },
                    "description": "The categories of notifications that the contact will receive communications for."
                  }
                },
                "description": "A contact that will receive notifications from Google Cloud."
              },
              "description": "All contacts for the resource that are subscribed to the specified notification categories, including contacts inherited from any parent resources."
            },
            "nextPageToken": {
              "type": "string",
              "description": "If there are more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token` and the rest of the parameters the same as the original request."
            }
          },
          "description": "Response message for the ComputeContacts method."
        }
      ]
  essentialcontacts.folders.contacts.create:
    description: |-
      Adds a new contact for a resource.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/docs/reference/essentialcontacts/rest/v1/folders.contacts/create
    example:
      inputs: [
        {
          "id": "GoogleCloudEssentialcontactsV1Contact",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The identifier for the contact. Format: {resource_type}/{resource_id}/contacts/{contact_id}"
            },
            "email": {
              "type": "string",
              "description": "Required. The email address to send notifications to. This does not need to be a Google account."
            },
            "languageTag": {
              "type": "string",
              "description": "The preferred language for notifications, as a ISO 639-1 language code. See [Supported languages](https://cloud.google.com/resource-manager/docs/managing-notification-contacts#supported-languages) for a list of supported languages."
            },
            "validateTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The last time the validation_state was updated, either manually or automatically. A contact is considered stale if its validation state was updated more than 1 year ago."
            },
            "validationState": {
              "enum": [
                "VALIDATION_STATE_UNSPECIFIED",
                "VALID",
                "INVALID"
              ],
              "type": "string",
              "description": "The validity of the contact. A contact is considered valid if it is the correct recipient for notifications for a particular resource.",
              "enumDescriptions": [
                "The validation state is unknown or unspecified.",
                "The contact is marked as valid. This is usually done manually by the contact admin. All new contacts begin in the valid state.",
                "The contact is considered invalid. This may become the state if the contact's email is found to be unreachable."
              ]
            },
            "notificationCategorySubscriptions": {
              "type": "array",
              "items": {
                "enum": [
                  "NOTIFICATION_CATEGORY_UNSPECIFIED",
                  "ALL",
                  "SUSPENSION",
                  "SECURITY",
                  "TECHNICAL",
                  "BILLING",
                  "LEGAL",
                  "PRODUCT_UPDATES",
                  "TECHNICAL_INCIDENTS"
                ],
                "type": "string",
                "enumDescriptions": [
                  "Notification category is unrecognized or unspecified.",
                  "All notifications related to the resource, including notifications pertaining to categories added in the future.",
                  "Notifications related to imminent account suspension.",
                  "Notifications related to security/privacy incidents, notifications, and vulnerabilities.",
                  "Notifications related to technical events and issues such as outages, errors, or bugs.",
                  "Notifications related to billing and payments notifications, price updates, errors, or credits.",
                  "Notifications related to enforcement actions, regulatory compliance, or government notices.",
                  "Notifications related to new versions, product terms updates, or deprecations.",
                  "Child category of TECHNICAL. If assigned, technical incident notifications will go to these contacts instead of TECHNICAL."
                ]
              },
              "description": "The categories of notifications that the contact will receive communications for."
            }
          },
          "description": "A contact that will receive notifications from Google Cloud."
        }
      ]
      outputs: [
        {}
      ]
  essentialcontacts.folders.contacts.delete:
    description: |-
      Deletes a contact.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/docs/reference/essentialcontacts/rest/v1/folders.contacts/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  essentialcontacts.folders.contacts.get:
    description: |-
      Gets a single contact.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/docs/reference/essentialcontacts/rest/v1/folders.contacts/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  essentialcontacts.folders.contacts.list:
    description: |-
      Lists the contacts that have been set on a resource.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/docs/reference/essentialcontacts/rest/v1/folders.contacts/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudEssentialcontactsV1ListContactsResponse",
          "type": "object",
          "properties": {
            "contacts": {
              "type": "array",
              "items": {
                "id": "GoogleCloudEssentialcontactsV1Contact",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The identifier for the contact. Format: {resource_type}/{resource_id}/contacts/{contact_id}"
                  },
                  "email": {
                    "type": "string",
                    "description": "Required. The email address to send notifications to. This does not need to be a Google account."
                  },
                  "languageTag": {
                    "type": "string",
                    "description": "The preferred language for notifications, as a ISO 639-1 language code. See [Supported languages](https://cloud.google.com/resource-manager/docs/managing-notification-contacts#supported-languages) for a list of supported languages."
                  },
                  "validateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The last time the validation_state was updated, either manually or automatically. A contact is considered stale if its validation state was updated more than 1 year ago."
                  },
                  "validationState": {
                    "enum": [
                      "VALIDATION_STATE_UNSPECIFIED",
                      "VALID",
                      "INVALID"
                    ],
                    "type": "string",
                    "description": "The validity of the contact. A contact is considered valid if it is the correct recipient for notifications for a particular resource.",
                    "enumDescriptions": [
                      "The validation state is unknown or unspecified.",
                      "The contact is marked as valid. This is usually done manually by the contact admin. All new contacts begin in the valid state.",
                      "The contact is considered invalid. This may become the state if the contact's email is found to be unreachable."
                    ]
                  },
                  "notificationCategorySubscriptions": {
                    "type": "array",
                    "items": {
                      "enum": [
                        "NOTIFICATION_CATEGORY_UNSPECIFIED",
                        "ALL",
                        "SUSPENSION",
                        "SECURITY",
                        "TECHNICAL",
                        "BILLING",
                        "LEGAL",
                        "PRODUCT_UPDATES",
                        "TECHNICAL_INCIDENTS"
                      ],
                      "type": "string",
                      "enumDescriptions": [
                        "Notification category is unrecognized or unspecified.",
                        "All notifications related to the resource, including notifications pertaining to categories added in the future.",
                        "Notifications related to imminent account suspension.",
                        "Notifications related to security/privacy incidents, notifications, and vulnerabilities.",
                        "Notifications related to technical events and issues such as outages, errors, or bugs.",
                        "Notifications related to billing and payments notifications, price updates, errors, or credits.",
                        "Notifications related to enforcement actions, regulatory compliance, or government notices.",
                        "Notifications related to new versions, product terms updates, or deprecations.",
                        "Child category of TECHNICAL. If assigned, technical incident notifications will go to these contacts instead of TECHNICAL."
                      ]
                    },
                    "description": "The categories of notifications that the contact will receive communications for."
                  }
                },
                "description": "A contact that will receive notifications from Google Cloud."
              },
              "description": "The contacts for the specified resource."
            },
            "nextPageToken": {
              "type": "string",
              "description": "If there are more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token` and the rest of the parameters the same as the original request."
            }
          },
          "description": "Response message for the ListContacts method."
        }
      ]
  essentialcontacts.folders.contacts.patch:
    description: |-
      Updates a contact. Note: A contact's email address cannot be changed.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/docs/reference/essentialcontacts/rest/v1/folders.contacts/patch
    example:
      inputs: [
        {
          "id": "GoogleCloudEssentialcontactsV1Contact",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The identifier for the contact. Format: {resource_type}/{resource_id}/contacts/{contact_id}"
            },
            "email": {
              "type": "string",
              "description": "Required. The email address to send notifications to. This does not need to be a Google account."
            },
            "languageTag": {
              "type": "string",
              "description": "The preferred language for notifications, as a ISO 639-1 language code. See [Supported languages](https://cloud.google.com/resource-manager/docs/managing-notification-contacts#supported-languages) for a list of supported languages."
            },
            "validateTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The last time the validation_state was updated, either manually or automatically. A contact is considered stale if its validation state was updated more than 1 year ago."
            },
            "validationState": {
              "enum": [
                "VALIDATION_STATE_UNSPECIFIED",
                "VALID",
                "INVALID"
              ],
              "type": "string",
              "description": "The validity of the contact. A contact is considered valid if it is the correct recipient for notifications for a particular resource.",
              "enumDescriptions": [
                "The validation state is unknown or unspecified.",
                "The contact is marked as valid. This is usually done manually by the contact admin. All new contacts begin in the valid state.",
                "The contact is considered invalid. This may become the state if the contact's email is found to be unreachable."
              ]
            },
            "notificationCategorySubscriptions": {
              "type": "array",
              "items": {
                "enum": [
                  "NOTIFICATION_CATEGORY_UNSPECIFIED",
                  "ALL",
                  "SUSPENSION",
                  "SECURITY",
                  "TECHNICAL",
                  "BILLING",
                  "LEGAL",
                  "PRODUCT_UPDATES",
                  "TECHNICAL_INCIDENTS"
                ],
                "type": "string",
                "enumDescriptions": [
                  "Notification category is unrecognized or unspecified.",
                  "All notifications related to the resource, including notifications pertaining to categories added in the future.",
                  "Notifications related to imminent account suspension.",
                  "Notifications related to security/privacy incidents, notifications, and vulnerabilities.",
                  "Notifications related to technical events and issues such as outages, errors, or bugs.",
                  "Notifications related to billing and payments notifications, price updates, errors, or credits.",
                  "Notifications related to enforcement actions, regulatory compliance, or government notices.",
                  "Notifications related to new versions, product terms updates, or deprecations.",
                  "Child category of TECHNICAL. If assigned, technical incident notifications will go to these contacts instead of TECHNICAL."
                ]
              },
              "description": "The categories of notifications that the contact will receive communications for."
            }
          },
          "description": "A contact that will receive notifications from Google Cloud."
        }
      ]
      outputs: [
        {}
      ]
  essentialcontacts.folders.contacts.sendTestMessage:
    description: |-
      Allows a contact admin to send a test message to contact to verify that it has been configured correctly.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/docs/reference/essentialcontacts/rest/v1/folders.contacts/sendTestMessage
    example:
      inputs: [
        {
          "id": "GoogleCloudEssentialcontactsV1SendTestMessageRequest",
          "type": "object",
          "properties": {
            "contacts": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Required. The list of names of the contacts to send a test message to. Format: organizations/{organization_id}/contacts/{contact_id}, folders/{folder_id}/contacts/{contact_id} or projects/{project_id}/contacts/{contact_id}"
            },
            "notificationCategory": {
              "enum": [
                "NOTIFICATION_CATEGORY_UNSPECIFIED",
                "ALL",
                "SUSPENSION",
                "SECURITY",
                "TECHNICAL",
                "BILLING",
                "LEGAL",
                "PRODUCT_UPDATES",
                "TECHNICAL_INCIDENTS"
              ],
              "type": "string",
              "description": "Required. The notification category to send the test message for. All contacts must be subscribed to this category.",
              "enumDescriptions": [
                "Notification category is unrecognized or unspecified.",
                "All notifications related to the resource, including notifications pertaining to categories added in the future.",
                "Notifications related to imminent account suspension.",
                "Notifications related to security/privacy incidents, notifications, and vulnerabilities.",
                "Notifications related to technical events and issues such as outages, errors, or bugs.",
                "Notifications related to billing and payments notifications, price updates, errors, or credits.",
                "Notifications related to enforcement actions, regulatory compliance, or government notices.",
                "Notifications related to new versions, product terms updates, or deprecations.",
                "Child category of TECHNICAL. If assigned, technical incident notifications will go to these contacts instead of TECHNICAL."
              ]
            }
          },
          "description": "Request message for the SendTestMessage method."
        }
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  essentialcontacts.organizations.contacts.compute:
    description: |-
      Lists all contacts for the resource that are subscribed to the specified notification categories, including contacts inherited from any parent resources.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/docs/reference/essentialcontacts/rest/v1/organizations.contacts/compute
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudEssentialcontactsV1ComputeContactsResponse",
          "type": "object",
          "properties": {
            "contacts": {
              "type": "array",
              "items": {
                "id": "GoogleCloudEssentialcontactsV1Contact",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The identifier for the contact. Format: {resource_type}/{resource_id}/contacts/{contact_id}"
                  },
                  "email": {
                    "type": "string",
                    "description": "Required. The email address to send notifications to. This does not need to be a Google account."
                  },
                  "languageTag": {
                    "type": "string",
                    "description": "The preferred language for notifications, as a ISO 639-1 language code. See [Supported languages](https://cloud.google.com/resource-manager/docs/managing-notification-contacts#supported-languages) for a list of supported languages."
                  },
                  "validateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The last time the validation_state was updated, either manually or automatically. A contact is considered stale if its validation state was updated more than 1 year ago."
                  },
                  "validationState": {
                    "enum": [
                      "VALIDATION_STATE_UNSPECIFIED",
                      "VALID",
                      "INVALID"
                    ],
                    "type": "string",
                    "description": "The validity of the contact. A contact is considered valid if it is the correct recipient for notifications for a particular resource.",
                    "enumDescriptions": [
                      "The validation state is unknown or unspecified.",
                      "The contact is marked as valid. This is usually done manually by the contact admin. All new contacts begin in the valid state.",
                      "The contact is considered invalid. This may become the state if the contact's email is found to be unreachable."
                    ]
                  },
                  "notificationCategorySubscriptions": {
                    "type": "array",
                    "items": {
                      "enum": [
                        "NOTIFICATION_CATEGORY_UNSPECIFIED",
                        "ALL",
                        "SUSPENSION",
                        "SECURITY",
                        "TECHNICAL",
                        "BILLING",
                        "LEGAL",
                        "PRODUCT_UPDATES",
                        "TECHNICAL_INCIDENTS"
                      ],
                      "type": "string",
                      "enumDescriptions": [
                        "Notification category is unrecognized or unspecified.",
                        "All notifications related to the resource, including notifications pertaining to categories added in the future.",
                        "Notifications related to imminent account suspension.",
                        "Notifications related to security/privacy incidents, notifications, and vulnerabilities.",
                        "Notifications related to technical events and issues such as outages, errors, or bugs.",
                        "Notifications related to billing and payments notifications, price updates, errors, or credits.",
                        "Notifications related to enforcement actions, regulatory compliance, or government notices.",
                        "Notifications related to new versions, product terms updates, or deprecations.",
                        "Child category of TECHNICAL. If assigned, technical incident notifications will go to these contacts instead of TECHNICAL."
                      ]
                    },
                    "description": "The categories of notifications that the contact will receive communications for."
                  }
                },
                "description": "A contact that will receive notifications from Google Cloud."
              },
              "description": "All contacts for the resource that are subscribed to the specified notification categories, including contacts inherited from any parent resources."
            },
            "nextPageToken": {
              "type": "string",
              "description": "If there are more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token` and the rest of the parameters the same as the original request."
            }
          },
          "description": "Response message for the ComputeContacts method."
        }
      ]
  essentialcontacts.organizations.contacts.create:
    description: |-
      Adds a new contact for a resource.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/docs/reference/essentialcontacts/rest/v1/organizations.contacts/create
    example:
      inputs: [
        {
          "id": "GoogleCloudEssentialcontactsV1Contact",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The identifier for the contact. Format: {resource_type}/{resource_id}/contacts/{contact_id}"
            },
            "email": {
              "type": "string",
              "description": "Required. The email address to send notifications to. This does not need to be a Google account."
            },
            "languageTag": {
              "type": "string",
              "description": "The preferred language for notifications, as a ISO 639-1 language code. See [Supported languages](https://cloud.google.com/resource-manager/docs/managing-notification-contacts#supported-languages) for a list of supported languages."
            },
            "validateTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The last time the validation_state was updated, either manually or automatically. A contact is considered stale if its validation state was updated more than 1 year ago."
            },
            "validationState": {
              "enum": [
                "VALIDATION_STATE_UNSPECIFIED",
                "VALID",
                "INVALID"
              ],
              "type": "string",
              "description": "The validity of the contact. A contact is considered valid if it is the correct recipient for notifications for a particular resource.",
              "enumDescriptions": [
                "The validation state is unknown or unspecified.",
                "The contact is marked as valid. This is usually done manually by the contact admin. All new contacts begin in the valid state.",
                "The contact is considered invalid. This may become the state if the contact's email is found to be unreachable."
              ]
            },
            "notificationCategorySubscriptions": {
              "type": "array",
              "items": {
                "enum": [
                  "NOTIFICATION_CATEGORY_UNSPECIFIED",
                  "ALL",
                  "SUSPENSION",
                  "SECURITY",
                  "TECHNICAL",
                  "BILLING",
                  "LEGAL",
                  "PRODUCT_UPDATES",
                  "TECHNICAL_INCIDENTS"
                ],
                "type": "string",
                "enumDescriptions": [
                  "Notification category is unrecognized or unspecified.",
                  "All notifications related to the resource, including notifications pertaining to categories added in the future.",
                  "Notifications related to imminent account suspension.",
                  "Notifications related to security/privacy incidents, notifications, and vulnerabilities.",
                  "Notifications related to technical events and issues such as outages, errors, or bugs.",
                  "Notifications related to billing and payments notifications, price updates, errors, or credits.",
                  "Notifications related to enforcement actions, regulatory compliance, or government notices.",
                  "Notifications related to new versions, product terms updates, or deprecations.",
                  "Child category of TECHNICAL. If assigned, technical incident notifications will go to these contacts instead of TECHNICAL."
                ]
              },
              "description": "The categories of notifications that the contact will receive communications for."
            }
          },
          "description": "A contact that will receive notifications from Google Cloud."
        }
      ]
      outputs: [
        {}
      ]
  essentialcontacts.organizations.contacts.delete:
    description: |-
      Deletes a contact.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/docs/reference/essentialcontacts/rest/v1/organizations.contacts/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  essentialcontacts.organizations.contacts.get:
    description: |-
      Gets a single contact.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/docs/reference/essentialcontacts/rest/v1/organizations.contacts/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  essentialcontacts.organizations.contacts.list:
    description: |-
      Lists the contacts that have been set on a resource.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/docs/reference/essentialcontacts/rest/v1/organizations.contacts/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudEssentialcontactsV1ListContactsResponse",
          "type": "object",
          "properties": {
            "contacts": {
              "type": "array",
              "items": {
                "id": "GoogleCloudEssentialcontactsV1Contact",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The identifier for the contact. Format: {resource_type}/{resource_id}/contacts/{contact_id}"
                  },
                  "email": {
                    "type": "string",
                    "description": "Required. The email address to send notifications to. This does not need to be a Google account."
                  },
                  "languageTag": {
                    "type": "string",
                    "description": "The preferred language for notifications, as a ISO 639-1 language code. See [Supported languages](https://cloud.google.com/resource-manager/docs/managing-notification-contacts#supported-languages) for a list of supported languages."
                  },
                  "validateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The last time the validation_state was updated, either manually or automatically. A contact is considered stale if its validation state was updated more than 1 year ago."
                  },
                  "validationState": {
                    "enum": [
                      "VALIDATION_STATE_UNSPECIFIED",
                      "VALID",
                      "INVALID"
                    ],
                    "type": "string",
                    "description": "The validity of the contact. A contact is considered valid if it is the correct recipient for notifications for a particular resource.",
                    "enumDescriptions": [
                      "The validation state is unknown or unspecified.",
                      "The contact is marked as valid. This is usually done manually by the contact admin. All new contacts begin in the valid state.",
                      "The contact is considered invalid. This may become the state if the contact's email is found to be unreachable."
                    ]
                  },
                  "notificationCategorySubscriptions": {
                    "type": "array",
                    "items": {
                      "enum": [
                        "NOTIFICATION_CATEGORY_UNSPECIFIED",
                        "ALL",
                        "SUSPENSION",
                        "SECURITY",
                        "TECHNICAL",
                        "BILLING",
                        "LEGAL",
                        "PRODUCT_UPDATES",
                        "TECHNICAL_INCIDENTS"
                      ],
                      "type": "string",
                      "enumDescriptions": [
                        "Notification category is unrecognized or unspecified.",
                        "All notifications related to the resource, including notifications pertaining to categories added in the future.",
                        "Notifications related to imminent account suspension.",
                        "Notifications related to security/privacy incidents, notifications, and vulnerabilities.",
                        "Notifications related to technical events and issues such as outages, errors, or bugs.",
                        "Notifications related to billing and payments notifications, price updates, errors, or credits.",
                        "Notifications related to enforcement actions, regulatory compliance, or government notices.",
                        "Notifications related to new versions, product terms updates, or deprecations.",
                        "Child category of TECHNICAL. If assigned, technical incident notifications will go to these contacts instead of TECHNICAL."
                      ]
                    },
                    "description": "The categories of notifications that the contact will receive communications for."
                  }
                },
                "description": "A contact that will receive notifications from Google Cloud."
              },
              "description": "The contacts for the specified resource."
            },
            "nextPageToken": {
              "type": "string",
              "description": "If there are more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token` and the rest of the parameters the same as the original request."
            }
          },
          "description": "Response message for the ListContacts method."
        }
      ]
  essentialcontacts.organizations.contacts.patch:
    description: |-
      Updates a contact. Note: A contact's email address cannot be changed.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/docs/reference/essentialcontacts/rest/v1/organizations.contacts/patch
    example:
      inputs: [
        {
          "id": "GoogleCloudEssentialcontactsV1Contact",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The identifier for the contact. Format: {resource_type}/{resource_id}/contacts/{contact_id}"
            },
            "email": {
              "type": "string",
              "description": "Required. The email address to send notifications to. This does not need to be a Google account."
            },
            "languageTag": {
              "type": "string",
              "description": "The preferred language for notifications, as a ISO 639-1 language code. See [Supported languages](https://cloud.google.com/resource-manager/docs/managing-notification-contacts#supported-languages) for a list of supported languages."
            },
            "validateTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The last time the validation_state was updated, either manually or automatically. A contact is considered stale if its validation state was updated more than 1 year ago."
            },
            "validationState": {
              "enum": [
                "VALIDATION_STATE_UNSPECIFIED",
                "VALID",
                "INVALID"
              ],
              "type": "string",
              "description": "The validity of the contact. A contact is considered valid if it is the correct recipient for notifications for a particular resource.",
              "enumDescriptions": [
                "The validation state is unknown or unspecified.",
                "The contact is marked as valid. This is usually done manually by the contact admin. All new contacts begin in the valid state.",
                "The contact is considered invalid. This may become the state if the contact's email is found to be unreachable."
              ]
            },
            "notificationCategorySubscriptions": {
              "type": "array",
              "items": {
                "enum": [
                  "NOTIFICATION_CATEGORY_UNSPECIFIED",
                  "ALL",
                  "SUSPENSION",
                  "SECURITY",
                  "TECHNICAL",
                  "BILLING",
                  "LEGAL",
                  "PRODUCT_UPDATES",
                  "TECHNICAL_INCIDENTS"
                ],
                "type": "string",
                "enumDescriptions": [
                  "Notification category is unrecognized or unspecified.",
                  "All notifications related to the resource, including notifications pertaining to categories added in the future.",
                  "Notifications related to imminent account suspension.",
                  "Notifications related to security/privacy incidents, notifications, and vulnerabilities.",
                  "Notifications related to technical events and issues such as outages, errors, or bugs.",
                  "Notifications related to billing and payments notifications, price updates, errors, or credits.",
                  "Notifications related to enforcement actions, regulatory compliance, or government notices.",
                  "Notifications related to new versions, product terms updates, or deprecations.",
                  "Child category of TECHNICAL. If assigned, technical incident notifications will go to these contacts instead of TECHNICAL."
                ]
              },
              "description": "The categories of notifications that the contact will receive communications for."
            }
          },
          "description": "A contact that will receive notifications from Google Cloud."
        }
      ]
      outputs: [
        {}
      ]
  essentialcontacts.organizations.contacts.sendTestMessage:
    description: |-
      Allows a contact admin to send a test message to contact to verify that it has been configured correctly.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/docs/reference/essentialcontacts/rest/v1/organizations.contacts/sendTestMessage
    example:
      inputs: [
        {
          "id": "GoogleCloudEssentialcontactsV1SendTestMessageRequest",
          "type": "object",
          "properties": {
            "contacts": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Required. The list of names of the contacts to send a test message to. Format: organizations/{organization_id}/contacts/{contact_id}, folders/{folder_id}/contacts/{contact_id} or projects/{project_id}/contacts/{contact_id}"
            },
            "notificationCategory": {
              "enum": [
                "NOTIFICATION_CATEGORY_UNSPECIFIED",
                "ALL",
                "SUSPENSION",
                "SECURITY",
                "TECHNICAL",
                "BILLING",
                "LEGAL",
                "PRODUCT_UPDATES",
                "TECHNICAL_INCIDENTS"
              ],
              "type": "string",
              "description": "Required. The notification category to send the test message for. All contacts must be subscribed to this category.",
              "enumDescriptions": [
                "Notification category is unrecognized or unspecified.",
                "All notifications related to the resource, including notifications pertaining to categories added in the future.",
                "Notifications related to imminent account suspension.",
                "Notifications related to security/privacy incidents, notifications, and vulnerabilities.",
                "Notifications related to technical events and issues such as outages, errors, or bugs.",
                "Notifications related to billing and payments notifications, price updates, errors, or credits.",
                "Notifications related to enforcement actions, regulatory compliance, or government notices.",
                "Notifications related to new versions, product terms updates, or deprecations.",
                "Child category of TECHNICAL. If assigned, technical incident notifications will go to these contacts instead of TECHNICAL."
              ]
            }
          },
          "description": "Request message for the SendTestMessage method."
        }
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  essentialcontacts.projects.contacts.compute:
    description: |-
      Lists all contacts for the resource that are subscribed to the specified notification categories, including contacts inherited from any parent resources.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/docs/reference/essentialcontacts/rest/v1/projects.contacts/compute
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudEssentialcontactsV1ComputeContactsResponse",
          "type": "object",
          "properties": {
            "contacts": {
              "type": "array",
              "items": {
                "id": "GoogleCloudEssentialcontactsV1Contact",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The identifier for the contact. Format: {resource_type}/{resource_id}/contacts/{contact_id}"
                  },
                  "email": {
                    "type": "string",
                    "description": "Required. The email address to send notifications to. This does not need to be a Google account."
                  },
                  "languageTag": {
                    "type": "string",
                    "description": "The preferred language for notifications, as a ISO 639-1 language code. See [Supported languages](https://cloud.google.com/resource-manager/docs/managing-notification-contacts#supported-languages) for a list of supported languages."
                  },
                  "validateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The last time the validation_state was updated, either manually or automatically. A contact is considered stale if its validation state was updated more than 1 year ago."
                  },
                  "validationState": {
                    "enum": [
                      "VALIDATION_STATE_UNSPECIFIED",
                      "VALID",
                      "INVALID"
                    ],
                    "type": "string",
                    "description": "The validity of the contact. A contact is considered valid if it is the correct recipient for notifications for a particular resource.",
                    "enumDescriptions": [
                      "The validation state is unknown or unspecified.",
                      "The contact is marked as valid. This is usually done manually by the contact admin. All new contacts begin in the valid state.",
                      "The contact is considered invalid. This may become the state if the contact's email is found to be unreachable."
                    ]
                  },
                  "notificationCategorySubscriptions": {
                    "type": "array",
                    "items": {
                      "enum": [
                        "NOTIFICATION_CATEGORY_UNSPECIFIED",
                        "ALL",
                        "SUSPENSION",
                        "SECURITY",
                        "TECHNICAL",
                        "BILLING",
                        "LEGAL",
                        "PRODUCT_UPDATES",
                        "TECHNICAL_INCIDENTS"
                      ],
                      "type": "string",
                      "enumDescriptions": [
                        "Notification category is unrecognized or unspecified.",
                        "All notifications related to the resource, including notifications pertaining to categories added in the future.",
                        "Notifications related to imminent account suspension.",
                        "Notifications related to security/privacy incidents, notifications, and vulnerabilities.",
                        "Notifications related to technical events and issues such as outages, errors, or bugs.",
                        "Notifications related to billing and payments notifications, price updates, errors, or credits.",
                        "Notifications related to enforcement actions, regulatory compliance, or government notices.",
                        "Notifications related to new versions, product terms updates, or deprecations.",
                        "Child category of TECHNICAL. If assigned, technical incident notifications will go to these contacts instead of TECHNICAL."
                      ]
                    },
                    "description": "The categories of notifications that the contact will receive communications for."
                  }
                },
                "description": "A contact that will receive notifications from Google Cloud."
              },
              "description": "All contacts for the resource that are subscribed to the specified notification categories, including contacts inherited from any parent resources."
            },
            "nextPageToken": {
              "type": "string",
              "description": "If there are more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token` and the rest of the parameters the same as the original request."
            }
          },
          "description": "Response message for the ComputeContacts method."
        }
      ]
  essentialcontacts.projects.contacts.create:
    description: |-
      Adds a new contact for a resource.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/docs/reference/essentialcontacts/rest/v1/projects.contacts/create
    example:
      inputs: [
        {
          "id": "GoogleCloudEssentialcontactsV1Contact",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The identifier for the contact. Format: {resource_type}/{resource_id}/contacts/{contact_id}"
            },
            "email": {
              "type": "string",
              "description": "Required. The email address to send notifications to. This does not need to be a Google account."
            },
            "languageTag": {
              "type": "string",
              "description": "The preferred language for notifications, as a ISO 639-1 language code. See [Supported languages](https://cloud.google.com/resource-manager/docs/managing-notification-contacts#supported-languages) for a list of supported languages."
            },
            "validateTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The last time the validation_state was updated, either manually or automatically. A contact is considered stale if its validation state was updated more than 1 year ago."
            },
            "validationState": {
              "enum": [
                "VALIDATION_STATE_UNSPECIFIED",
                "VALID",
                "INVALID"
              ],
              "type": "string",
              "description": "The validity of the contact. A contact is considered valid if it is the correct recipient for notifications for a particular resource.",
              "enumDescriptions": [
                "The validation state is unknown or unspecified.",
                "The contact is marked as valid. This is usually done manually by the contact admin. All new contacts begin in the valid state.",
                "The contact is considered invalid. This may become the state if the contact's email is found to be unreachable."
              ]
            },
            "notificationCategorySubscriptions": {
              "type": "array",
              "items": {
                "enum": [
                  "NOTIFICATION_CATEGORY_UNSPECIFIED",
                  "ALL",
                  "SUSPENSION",
                  "SECURITY",
                  "TECHNICAL",
                  "BILLING",
                  "LEGAL",
                  "PRODUCT_UPDATES",
                  "TECHNICAL_INCIDENTS"
                ],
                "type": "string",
                "enumDescriptions": [
                  "Notification category is unrecognized or unspecified.",
                  "All notifications related to the resource, including notifications pertaining to categories added in the future.",
                  "Notifications related to imminent account suspension.",
                  "Notifications related to security/privacy incidents, notifications, and vulnerabilities.",
                  "Notifications related to technical events and issues such as outages, errors, or bugs.",
                  "Notifications related to billing and payments notifications, price updates, errors, or credits.",
                  "Notifications related to enforcement actions, regulatory compliance, or government notices.",
                  "Notifications related to new versions, product terms updates, or deprecations.",
                  "Child category of TECHNICAL. If assigned, technical incident notifications will go to these contacts instead of TECHNICAL."
                ]
              },
              "description": "The categories of notifications that the contact will receive communications for."
            }
          },
          "description": "A contact that will receive notifications from Google Cloud."
        }
      ]
      outputs: [
        {}
      ]
  essentialcontacts.projects.contacts.delete:
    description: |-
      Deletes a contact.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/docs/reference/essentialcontacts/rest/v1/projects.contacts/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  essentialcontacts.projects.contacts.get:
    description: |-
      Gets a single contact.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/docs/reference/essentialcontacts/rest/v1/projects.contacts/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  essentialcontacts.projects.contacts.list:
    description: |-
      Lists the contacts that have been set on a resource.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/docs/reference/essentialcontacts/rest/v1/projects.contacts/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudEssentialcontactsV1ListContactsResponse",
          "type": "object",
          "properties": {
            "contacts": {
              "type": "array",
              "items": {
                "id": "GoogleCloudEssentialcontactsV1Contact",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The identifier for the contact. Format: {resource_type}/{resource_id}/contacts/{contact_id}"
                  },
                  "email": {
                    "type": "string",
                    "description": "Required. The email address to send notifications to. This does not need to be a Google account."
                  },
                  "languageTag": {
                    "type": "string",
                    "description": "The preferred language for notifications, as a ISO 639-1 language code. See [Supported languages](https://cloud.google.com/resource-manager/docs/managing-notification-contacts#supported-languages) for a list of supported languages."
                  },
                  "validateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The last time the validation_state was updated, either manually or automatically. A contact is considered stale if its validation state was updated more than 1 year ago."
                  },
                  "validationState": {
                    "enum": [
                      "VALIDATION_STATE_UNSPECIFIED",
                      "VALID",
                      "INVALID"
                    ],
                    "type": "string",
                    "description": "The validity of the contact. A contact is considered valid if it is the correct recipient for notifications for a particular resource.",
                    "enumDescriptions": [
                      "The validation state is unknown or unspecified.",
                      "The contact is marked as valid. This is usually done manually by the contact admin. All new contacts begin in the valid state.",
                      "The contact is considered invalid. This may become the state if the contact's email is found to be unreachable."
                    ]
                  },
                  "notificationCategorySubscriptions": {
                    "type": "array",
                    "items": {
                      "enum": [
                        "NOTIFICATION_CATEGORY_UNSPECIFIED",
                        "ALL",
                        "SUSPENSION",
                        "SECURITY",
                        "TECHNICAL",
                        "BILLING",
                        "LEGAL",
                        "PRODUCT_UPDATES",
                        "TECHNICAL_INCIDENTS"
                      ],
                      "type": "string",
                      "enumDescriptions": [
                        "Notification category is unrecognized or unspecified.",
                        "All notifications related to the resource, including notifications pertaining to categories added in the future.",
                        "Notifications related to imminent account suspension.",
                        "Notifications related to security/privacy incidents, notifications, and vulnerabilities.",
                        "Notifications related to technical events and issues such as outages, errors, or bugs.",
                        "Notifications related to billing and payments notifications, price updates, errors, or credits.",
                        "Notifications related to enforcement actions, regulatory compliance, or government notices.",
                        "Notifications related to new versions, product terms updates, or deprecations.",
                        "Child category of TECHNICAL. If assigned, technical incident notifications will go to these contacts instead of TECHNICAL."
                      ]
                    },
                    "description": "The categories of notifications that the contact will receive communications for."
                  }
                },
                "description": "A contact that will receive notifications from Google Cloud."
              },
              "description": "The contacts for the specified resource."
            },
            "nextPageToken": {
              "type": "string",
              "description": "If there are more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token` and the rest of the parameters the same as the original request."
            }
          },
          "description": "Response message for the ListContacts method."
        }
      ]
  essentialcontacts.projects.contacts.patch:
    description: |-
      Updates a contact. Note: A contact's email address cannot be changed.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/docs/reference/essentialcontacts/rest/v1/projects.contacts/patch
    example:
      inputs: [
        {
          "id": "GoogleCloudEssentialcontactsV1Contact",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The identifier for the contact. Format: {resource_type}/{resource_id}/contacts/{contact_id}"
            },
            "email": {
              "type": "string",
              "description": "Required. The email address to send notifications to. This does not need to be a Google account."
            },
            "languageTag": {
              "type": "string",
              "description": "The preferred language for notifications, as a ISO 639-1 language code. See [Supported languages](https://cloud.google.com/resource-manager/docs/managing-notification-contacts#supported-languages) for a list of supported languages."
            },
            "validateTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The last time the validation_state was updated, either manually or automatically. A contact is considered stale if its validation state was updated more than 1 year ago."
            },
            "validationState": {
              "enum": [
                "VALIDATION_STATE_UNSPECIFIED",
                "VALID",
                "INVALID"
              ],
              "type": "string",
              "description": "The validity of the contact. A contact is considered valid if it is the correct recipient for notifications for a particular resource.",
              "enumDescriptions": [
                "The validation state is unknown or unspecified.",
                "The contact is marked as valid. This is usually done manually by the contact admin. All new contacts begin in the valid state.",
                "The contact is considered invalid. This may become the state if the contact's email is found to be unreachable."
              ]
            },
            "notificationCategorySubscriptions": {
              "type": "array",
              "items": {
                "enum": [
                  "NOTIFICATION_CATEGORY_UNSPECIFIED",
                  "ALL",
                  "SUSPENSION",
                  "SECURITY",
                  "TECHNICAL",
                  "BILLING",
                  "LEGAL",
                  "PRODUCT_UPDATES",
                  "TECHNICAL_INCIDENTS"
                ],
                "type": "string",
                "enumDescriptions": [
                  "Notification category is unrecognized or unspecified.",
                  "All notifications related to the resource, including notifications pertaining to categories added in the future.",
                  "Notifications related to imminent account suspension.",
                  "Notifications related to security/privacy incidents, notifications, and vulnerabilities.",
                  "Notifications related to technical events and issues such as outages, errors, or bugs.",
                  "Notifications related to billing and payments notifications, price updates, errors, or credits.",
                  "Notifications related to enforcement actions, regulatory compliance, or government notices.",
                  "Notifications related to new versions, product terms updates, or deprecations.",
                  "Child category of TECHNICAL. If assigned, technical incident notifications will go to these contacts instead of TECHNICAL."
                ]
              },
              "description": "The categories of notifications that the contact will receive communications for."
            }
          },
          "description": "A contact that will receive notifications from Google Cloud."
        }
      ]
      outputs: [
        {}
      ]
  essentialcontacts.projects.contacts.sendTestMessage:
    description: |-
      Allows a contact admin to send a test message to contact to verify that it has been configured correctly.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/docs/reference/essentialcontacts/rest/v1/projects.contacts/sendTestMessage
    example:
      inputs: [
        {
          "id": "GoogleCloudEssentialcontactsV1SendTestMessageRequest",
          "type": "object",
          "properties": {
            "contacts": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Required. The list of names of the contacts to send a test message to. Format: organizations/{organization_id}/contacts/{contact_id}, folders/{folder_id}/contacts/{contact_id} or projects/{project_id}/contacts/{contact_id}"
            },
            "notificationCategory": {
              "enum": [
                "NOTIFICATION_CATEGORY_UNSPECIFIED",
                "ALL",
                "SUSPENSION",
                "SECURITY",
                "TECHNICAL",
                "BILLING",
                "LEGAL",
                "PRODUCT_UPDATES",
                "TECHNICAL_INCIDENTS"
              ],
              "type": "string",
              "description": "Required. The notification category to send the test message for. All contacts must be subscribed to this category.",
              "enumDescriptions": [
                "Notification category is unrecognized or unspecified.",
                "All notifications related to the resource, including notifications pertaining to categories added in the future.",
                "Notifications related to imminent account suspension.",
                "Notifications related to security/privacy incidents, notifications, and vulnerabilities.",
                "Notifications related to technical events and issues such as outages, errors, or bugs.",
                "Notifications related to billing and payments notifications, price updates, errors, or credits.",
                "Notifications related to enforcement actions, regulatory compliance, or government notices.",
                "Notifications related to new versions, product terms updates, or deprecations.",
                "Child category of TECHNICAL. If assigned, technical incident notifications will go to these contacts instead of TECHNICAL."
              ]
            }
          },
          "description": "Request message for the SendTestMessage method."
        }
      ]
      outputs: [
        {
          "id": "GoogleProtobufEmpty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  resourcesettings.folders.settings.get:
    description: |-
      Returns a specified setting. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the setting does not exist.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/docs/reference/resource-settings/rest/v1/folders.settings/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudResourcesettingsV1Setting",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "A fingerprint used for optimistic concurrency. See UpdateSetting for more details."
            },
            "name": {
              "type": "string",
              "description": "The resource name of the setting. Must be in one of the following forms: * `projects/{project_number}/settings/{setting_name}` * `folders/{folder_id}/settings/{setting_name}` * `organizations/{organization_id}/settings/{setting_name}` For example, \"/projects/123/settings/gcp-enableMyFeature\""
            },
            "metadata": {
              "id": "GoogleCloudResourcesettingsV1SettingMetadata",
              "type": "object",
              "readOnly": true,
              "properties": {
                "dataType": {
                  "enum": [
                    "DATA_TYPE_UNSPECIFIED",
                    "BOOLEAN",
                    "STRING",
                    "STRING_SET",
                    "ENUM_VALUE",
                    "DURATION_VALUE",
                    "STRING_MAP"
                  ],
                  "type": "string",
                  "description": "The data type for this setting.",
                  "enumDescriptions": [
                    "Unspecified data type.",
                    "A boolean setting.",
                    "A string setting.",
                    "A string set setting.",
                    "A Enum setting",
                    "A Duration setting",
                    "A string->string map setting"
                  ]
                },
                "readOnly": {
                  "type": "boolean",
                  "description": "A flag indicating that values of this setting cannot be modified. See documentation for the specific setting for updates and reasons."
                },
                "description": {
                  "type": "string",
                  "description": "A detailed description of what this setting does."
                },
                "displayName": {
                  "type": "string",
                  "description": "The human readable name for this setting."
                },
                "defaultValue": {
                  "id": "GoogleCloudResourcesettingsV1Value",
                  "type": "object",
                  "properties": {
                    "enumValue": {
                      "id": "GoogleCloudResourcesettingsV1ValueEnumValue",
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "The value of this enum"
                        }
                      },
                      "description": "Defines this value as being a Enum."
                    },
                    "stringValue": {
                      "type": "string",
                      "description": "Defines this value as being a string value."
                    },
                    "booleanValue": {
                      "type": "boolean",
                      "description": "Defines this value as being a boolean value."
                    },
                    "durationValue": {
                      "type": "string",
                      "format": "google-duration",
                      "description": "Defines this value as being a Duration."
                    },
                    "stringMapValue": {
                      "id": "GoogleCloudResourcesettingsV1ValueStringMap",
                      "type": "object",
                      "properties": {
                        "mappings": {
                          "type": "object",
                          "description": "The key-value pairs in the map",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "Defines this value as being a StringMap."
                    },
                    "stringSetValue": {
                      "id": "GoogleCloudResourcesettingsV1ValueStringSet",
                      "type": "object",
                      "properties": {
                        "values": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The strings in the set"
                        }
                      },
                      "description": "Defines this value as being a StringSet."
                    }
                  },
                  "description": "The value provided by Setting.effective_value if no setting value is explicitly set. Note: not all settings have a default value."
                }
              },
              "description": "Output only. Metadata about a setting which is not editable by the end user."
            },
            "localValue": {
              "id": "GoogleCloudResourcesettingsV1Value",
              "type": "object",
              "properties": {
                "enumValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueEnumValue",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The value of this enum"
                    }
                  },
                  "description": "Defines this value as being a Enum."
                },
                "stringValue": {
                  "type": "string",
                  "description": "Defines this value as being a string value."
                },
                "booleanValue": {
                  "type": "boolean",
                  "description": "Defines this value as being a boolean value."
                },
                "durationValue": {
                  "type": "string",
                  "format": "google-duration",
                  "description": "Defines this value as being a Duration."
                },
                "stringMapValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueStringMap",
                  "type": "object",
                  "properties": {
                    "mappings": {
                      "type": "object",
                      "description": "The key-value pairs in the map",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Defines this value as being a StringMap."
                },
                "stringSetValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueStringSet",
                  "type": "object",
                  "properties": {
                    "values": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The strings in the set"
                    }
                  },
                  "description": "Defines this value as being a StringSet."
                }
              },
              "description": "The configured value of the setting at the given parent resource, ignoring the resource hierarchy. The data type of Value must always be consistent with the data type defined in Setting.metadata."
            },
            "effectiveValue": {
              "id": "GoogleCloudResourcesettingsV1Value",
              "type": "object",
              "readOnly": true,
              "properties": {
                "enumValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueEnumValue",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The value of this enum"
                    }
                  },
                  "description": "Defines this value as being a Enum."
                },
                "stringValue": {
                  "type": "string",
                  "description": "Defines this value as being a string value."
                },
                "booleanValue": {
                  "type": "boolean",
                  "description": "Defines this value as being a boolean value."
                },
                "durationValue": {
                  "type": "string",
                  "format": "google-duration",
                  "description": "Defines this value as being a Duration."
                },
                "stringMapValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueStringMap",
                  "type": "object",
                  "properties": {
                    "mappings": {
                      "type": "object",
                      "description": "The key-value pairs in the map",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Defines this value as being a StringMap."
                },
                "stringSetValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueStringSet",
                  "type": "object",
                  "properties": {
                    "values": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The strings in the set"
                    }
                  },
                  "description": "Defines this value as being a StringSet."
                }
              },
              "description": "Output only. The effective value of the setting at the given parent resource, evaluated based on the resource hierarchy The effective value evaluates to one of the following options, in this order. If an option is not valid or doesn't exist, then the next option is used: 1. The local setting value on the given resource: Setting.local_value 2. If one of the given resource's ancestors in the resource hierarchy have a local setting value, the local value at the nearest such ancestor. 3. The setting's default value: SettingMetadata.default_value 4. An empty value, defined as a `Value` with all fields unset. The data type of Value must always be consistent with the data type defined in Setting.metadata."
            }
          },
          "description": "The schema for settings."
        }
      ]
  resourcesettings.folders.settings.list:
    description: |-
      Lists all the settings that are available on the Cloud resource `parent`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/docs/reference/resource-settings/rest/v1/folders.settings/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudResourcesettingsV1ListSettingsResponse",
          "type": "object",
          "properties": {
            "settings": {
              "type": "array",
              "items": {
                "id": "GoogleCloudResourcesettingsV1Setting",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "description": "A fingerprint used for optimistic concurrency. See UpdateSetting for more details."
                  },
                  "name": {
                    "type": "string",
                    "description": "The resource name of the setting. Must be in one of the following forms: * `projects/{project_number}/settings/{setting_name}` * `folders/{folder_id}/settings/{setting_name}` * `organizations/{organization_id}/settings/{setting_name}` For example, \"/projects/123/settings/gcp-enableMyFeature\""
                  },
                  "metadata": {
                    "id": "GoogleCloudResourcesettingsV1SettingMetadata",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "dataType": {
                        "enum": [
                          "DATA_TYPE_UNSPECIFIED",
                          "BOOLEAN",
                          "STRING",
                          "STRING_SET",
                          "ENUM_VALUE",
                          "DURATION_VALUE",
                          "STRING_MAP"
                        ],
                        "type": "string",
                        "description": "The data type for this setting.",
                        "enumDescriptions": [
                          "Unspecified data type.",
                          "A boolean setting.",
                          "A string setting.",
                          "A string set setting.",
                          "A Enum setting",
                          "A Duration setting",
                          "A string->string map setting"
                        ]
                      },
                      "readOnly": {
                        "type": "boolean",
                        "description": "A flag indicating that values of this setting cannot be modified. See documentation for the specific setting for updates and reasons."
                      },
                      "description": {
                        "type": "string",
                        "description": "A detailed description of what this setting does."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "The human readable name for this setting."
                      },
                      "defaultValue": {
                        "id": "GoogleCloudResourcesettingsV1Value",
                        "type": "object",
                        "properties": {
                          "enumValue": {
                            "id": "GoogleCloudResourcesettingsV1ValueEnumValue",
                            "type": "object",
                            "properties": {
                              "value": {
                                "type": "string",
                                "description": "The value of this enum"
                              }
                            },
                            "description": "Defines this value as being a Enum."
                          },
                          "stringValue": {
                            "type": "string",
                            "description": "Defines this value as being a string value."
                          },
                          "booleanValue": {
                            "type": "boolean",
                            "description": "Defines this value as being a boolean value."
                          },
                          "durationValue": {
                            "type": "string",
                            "format": "google-duration",
                            "description": "Defines this value as being a Duration."
                          },
                          "stringMapValue": {
                            "id": "GoogleCloudResourcesettingsV1ValueStringMap",
                            "type": "object",
                            "properties": {
                              "mappings": {
                                "type": "object",
                                "description": "The key-value pairs in the map",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            },
                            "description": "Defines this value as being a StringMap."
                          },
                          "stringSetValue": {
                            "id": "GoogleCloudResourcesettingsV1ValueStringSet",
                            "type": "object",
                            "properties": {
                              "values": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The strings in the set"
                              }
                            },
                            "description": "Defines this value as being a StringSet."
                          }
                        },
                        "description": "The value provided by Setting.effective_value if no setting value is explicitly set. Note: not all settings have a default value."
                      }
                    },
                    "description": "Output only. Metadata about a setting which is not editable by the end user."
                  },
                  "localValue": {
                    "id": "GoogleCloudResourcesettingsV1Value",
                    "type": "object",
                    "properties": {
                      "enumValue": {
                        "id": "GoogleCloudResourcesettingsV1ValueEnumValue",
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value of this enum"
                          }
                        },
                        "description": "Defines this value as being a Enum."
                      },
                      "stringValue": {
                        "type": "string",
                        "description": "Defines this value as being a string value."
                      },
                      "booleanValue": {
                        "type": "boolean",
                        "description": "Defines this value as being a boolean value."
                      },
                      "durationValue": {
                        "type": "string",
                        "format": "google-duration",
                        "description": "Defines this value as being a Duration."
                      },
                      "stringMapValue": {
                        "id": "GoogleCloudResourcesettingsV1ValueStringMap",
                        "type": "object",
                        "properties": {
                          "mappings": {
                            "type": "object",
                            "description": "The key-value pairs in the map",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        },
                        "description": "Defines this value as being a StringMap."
                      },
                      "stringSetValue": {
                        "id": "GoogleCloudResourcesettingsV1ValueStringSet",
                        "type": "object",
                        "properties": {
                          "values": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The strings in the set"
                          }
                        },
                        "description": "Defines this value as being a StringSet."
                      }
                    },
                    "description": "The configured value of the setting at the given parent resource, ignoring the resource hierarchy. The data type of Value must always be consistent with the data type defined in Setting.metadata."
                  },
                  "effectiveValue": {
                    "id": "GoogleCloudResourcesettingsV1Value",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "enumValue": {
                        "id": "GoogleCloudResourcesettingsV1ValueEnumValue",
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value of this enum"
                          }
                        },
                        "description": "Defines this value as being a Enum."
                      },
                      "stringValue": {
                        "type": "string",
                        "description": "Defines this value as being a string value."
                      },
                      "booleanValue": {
                        "type": "boolean",
                        "description": "Defines this value as being a boolean value."
                      },
                      "durationValue": {
                        "type": "string",
                        "format": "google-duration",
                        "description": "Defines this value as being a Duration."
                      },
                      "stringMapValue": {
                        "id": "GoogleCloudResourcesettingsV1ValueStringMap",
                        "type": "object",
                        "properties": {
                          "mappings": {
                            "type": "object",
                            "description": "The key-value pairs in the map",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        },
                        "description": "Defines this value as being a StringMap."
                      },
                      "stringSetValue": {
                        "id": "GoogleCloudResourcesettingsV1ValueStringSet",
                        "type": "object",
                        "properties": {
                          "values": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The strings in the set"
                          }
                        },
                        "description": "Defines this value as being a StringSet."
                      }
                    },
                    "description": "Output only. The effective value of the setting at the given parent resource, evaluated based on the resource hierarchy The effective value evaluates to one of the following options, in this order. If an option is not valid or doesn't exist, then the next option is used: 1. The local setting value on the given resource: Setting.local_value 2. If one of the given resource's ancestors in the resource hierarchy have a local setting value, the local value at the nearest such ancestor. 3. The setting's default value: SettingMetadata.default_value 4. An empty value, defined as a `Value` with all fields unset. The data type of Value must always be consistent with the data type defined in Setting.metadata."
                  }
                },
                "description": "The schema for settings."
              },
              "description": "A list of settings that are available at the specified Cloud resource."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Unused. A page token used to retrieve the next page."
            }
          },
          "description": "The response from ListSettings."
        }
      ]
  resourcesettings.folders.settings.patch:
    description: |-
      Updates a specified setting. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the setting does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.FAILED_PRECONDITION` if the setting is flagged as read only. Returns a `google.rpc.Status` with `google.rpc.Code.ABORTED` if the etag supplied in the request does not match the persisted etag of the setting value. On success, the response will contain only `name`, `local_value` and `etag`. The `metadata` and `effective_value` cannot be updated through this API. Note: the supplied setting will perform a full overwrite of the `local_value` field.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/docs/reference/resource-settings/rest/v1/folders.settings/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudResourcesettingsV1Setting",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "A fingerprint used for optimistic concurrency. See UpdateSetting for more details."
            },
            "name": {
              "type": "string",
              "description": "The resource name of the setting. Must be in one of the following forms: * `projects/{project_number}/settings/{setting_name}` * `folders/{folder_id}/settings/{setting_name}` * `organizations/{organization_id}/settings/{setting_name}` For example, \"/projects/123/settings/gcp-enableMyFeature\""
            },
            "metadata": {
              "id": "GoogleCloudResourcesettingsV1SettingMetadata",
              "type": "object",
              "readOnly": true,
              "properties": {
                "dataType": {
                  "enum": [
                    "DATA_TYPE_UNSPECIFIED",
                    "BOOLEAN",
                    "STRING",
                    "STRING_SET",
                    "ENUM_VALUE",
                    "DURATION_VALUE",
                    "STRING_MAP"
                  ],
                  "type": "string",
                  "description": "The data type for this setting.",
                  "enumDescriptions": [
                    "Unspecified data type.",
                    "A boolean setting.",
                    "A string setting.",
                    "A string set setting.",
                    "A Enum setting",
                    "A Duration setting",
                    "A string->string map setting"
                  ]
                },
                "readOnly": {
                  "type": "boolean",
                  "description": "A flag indicating that values of this setting cannot be modified. See documentation for the specific setting for updates and reasons."
                },
                "description": {
                  "type": "string",
                  "description": "A detailed description of what this setting does."
                },
                "displayName": {
                  "type": "string",
                  "description": "The human readable name for this setting."
                },
                "defaultValue": {
                  "id": "GoogleCloudResourcesettingsV1Value",
                  "type": "object",
                  "properties": {
                    "enumValue": {
                      "id": "GoogleCloudResourcesettingsV1ValueEnumValue",
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "The value of this enum"
                        }
                      },
                      "description": "Defines this value as being a Enum."
                    },
                    "stringValue": {
                      "type": "string",
                      "description": "Defines this value as being a string value."
                    },
                    "booleanValue": {
                      "type": "boolean",
                      "description": "Defines this value as being a boolean value."
                    },
                    "durationValue": {
                      "type": "string",
                      "format": "google-duration",
                      "description": "Defines this value as being a Duration."
                    },
                    "stringMapValue": {
                      "id": "GoogleCloudResourcesettingsV1ValueStringMap",
                      "type": "object",
                      "properties": {
                        "mappings": {
                          "type": "object",
                          "description": "The key-value pairs in the map",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "Defines this value as being a StringMap."
                    },
                    "stringSetValue": {
                      "id": "GoogleCloudResourcesettingsV1ValueStringSet",
                      "type": "object",
                      "properties": {
                        "values": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The strings in the set"
                        }
                      },
                      "description": "Defines this value as being a StringSet."
                    }
                  },
                  "description": "The value provided by Setting.effective_value if no setting value is explicitly set. Note: not all settings have a default value."
                }
              },
              "description": "Output only. Metadata about a setting which is not editable by the end user."
            },
            "localValue": {
              "id": "GoogleCloudResourcesettingsV1Value",
              "type": "object",
              "properties": {
                "enumValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueEnumValue",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The value of this enum"
                    }
                  },
                  "description": "Defines this value as being a Enum."
                },
                "stringValue": {
                  "type": "string",
                  "description": "Defines this value as being a string value."
                },
                "booleanValue": {
                  "type": "boolean",
                  "description": "Defines this value as being a boolean value."
                },
                "durationValue": {
                  "type": "string",
                  "format": "google-duration",
                  "description": "Defines this value as being a Duration."
                },
                "stringMapValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueStringMap",
                  "type": "object",
                  "properties": {
                    "mappings": {
                      "type": "object",
                      "description": "The key-value pairs in the map",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Defines this value as being a StringMap."
                },
                "stringSetValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueStringSet",
                  "type": "object",
                  "properties": {
                    "values": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The strings in the set"
                    }
                  },
                  "description": "Defines this value as being a StringSet."
                }
              },
              "description": "The configured value of the setting at the given parent resource, ignoring the resource hierarchy. The data type of Value must always be consistent with the data type defined in Setting.metadata."
            },
            "effectiveValue": {
              "id": "GoogleCloudResourcesettingsV1Value",
              "type": "object",
              "readOnly": true,
              "properties": {
                "enumValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueEnumValue",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The value of this enum"
                    }
                  },
                  "description": "Defines this value as being a Enum."
                },
                "stringValue": {
                  "type": "string",
                  "description": "Defines this value as being a string value."
                },
                "booleanValue": {
                  "type": "boolean",
                  "description": "Defines this value as being a boolean value."
                },
                "durationValue": {
                  "type": "string",
                  "format": "google-duration",
                  "description": "Defines this value as being a Duration."
                },
                "stringMapValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueStringMap",
                  "type": "object",
                  "properties": {
                    "mappings": {
                      "type": "object",
                      "description": "The key-value pairs in the map",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Defines this value as being a StringMap."
                },
                "stringSetValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueStringSet",
                  "type": "object",
                  "properties": {
                    "values": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The strings in the set"
                    }
                  },
                  "description": "Defines this value as being a StringSet."
                }
              },
              "description": "Output only. The effective value of the setting at the given parent resource, evaluated based on the resource hierarchy The effective value evaluates to one of the following options, in this order. If an option is not valid or doesn't exist, then the next option is used: 1. The local setting value on the given resource: Setting.local_value 2. If one of the given resource's ancestors in the resource hierarchy have a local setting value, the local value at the nearest such ancestor. 3. The setting's default value: SettingMetadata.default_value 4. An empty value, defined as a `Value` with all fields unset. The data type of Value must always be consistent with the data type defined in Setting.metadata."
            }
          },
          "description": "The schema for settings."
        }
      ]
  resourcesettings.organizations.settings.get:
    description: |-
      Returns a specified setting. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the setting does not exist.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/docs/reference/resource-settings/rest/v1/organizations.settings/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudResourcesettingsV1Setting",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "A fingerprint used for optimistic concurrency. See UpdateSetting for more details."
            },
            "name": {
              "type": "string",
              "description": "The resource name of the setting. Must be in one of the following forms: * `projects/{project_number}/settings/{setting_name}` * `folders/{folder_id}/settings/{setting_name}` * `organizations/{organization_id}/settings/{setting_name}` For example, \"/projects/123/settings/gcp-enableMyFeature\""
            },
            "metadata": {
              "id": "GoogleCloudResourcesettingsV1SettingMetadata",
              "type": "object",
              "readOnly": true,
              "properties": {
                "dataType": {
                  "enum": [
                    "DATA_TYPE_UNSPECIFIED",
                    "BOOLEAN",
                    "STRING",
                    "STRING_SET",
                    "ENUM_VALUE",
                    "DURATION_VALUE",
                    "STRING_MAP"
                  ],
                  "type": "string",
                  "description": "The data type for this setting.",
                  "enumDescriptions": [
                    "Unspecified data type.",
                    "A boolean setting.",
                    "A string setting.",
                    "A string set setting.",
                    "A Enum setting",
                    "A Duration setting",
                    "A string->string map setting"
                  ]
                },
                "readOnly": {
                  "type": "boolean",
                  "description": "A flag indicating that values of this setting cannot be modified. See documentation for the specific setting for updates and reasons."
                },
                "description": {
                  "type": "string",
                  "description": "A detailed description of what this setting does."
                },
                "displayName": {
                  "type": "string",
                  "description": "The human readable name for this setting."
                },
                "defaultValue": {
                  "id": "GoogleCloudResourcesettingsV1Value",
                  "type": "object",
                  "properties": {
                    "enumValue": {
                      "id": "GoogleCloudResourcesettingsV1ValueEnumValue",
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "The value of this enum"
                        }
                      },
                      "description": "Defines this value as being a Enum."
                    },
                    "stringValue": {
                      "type": "string",
                      "description": "Defines this value as being a string value."
                    },
                    "booleanValue": {
                      "type": "boolean",
                      "description": "Defines this value as being a boolean value."
                    },
                    "durationValue": {
                      "type": "string",
                      "format": "google-duration",
                      "description": "Defines this value as being a Duration."
                    },
                    "stringMapValue": {
                      "id": "GoogleCloudResourcesettingsV1ValueStringMap",
                      "type": "object",
                      "properties": {
                        "mappings": {
                          "type": "object",
                          "description": "The key-value pairs in the map",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "Defines this value as being a StringMap."
                    },
                    "stringSetValue": {
                      "id": "GoogleCloudResourcesettingsV1ValueStringSet",
                      "type": "object",
                      "properties": {
                        "values": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The strings in the set"
                        }
                      },
                      "description": "Defines this value as being a StringSet."
                    }
                  },
                  "description": "The value provided by Setting.effective_value if no setting value is explicitly set. Note: not all settings have a default value."
                }
              },
              "description": "Output only. Metadata about a setting which is not editable by the end user."
            },
            "localValue": {
              "id": "GoogleCloudResourcesettingsV1Value",
              "type": "object",
              "properties": {
                "enumValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueEnumValue",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The value of this enum"
                    }
                  },
                  "description": "Defines this value as being a Enum."
                },
                "stringValue": {
                  "type": "string",
                  "description": "Defines this value as being a string value."
                },
                "booleanValue": {
                  "type": "boolean",
                  "description": "Defines this value as being a boolean value."
                },
                "durationValue": {
                  "type": "string",
                  "format": "google-duration",
                  "description": "Defines this value as being a Duration."
                },
                "stringMapValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueStringMap",
                  "type": "object",
                  "properties": {
                    "mappings": {
                      "type": "object",
                      "description": "The key-value pairs in the map",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Defines this value as being a StringMap."
                },
                "stringSetValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueStringSet",
                  "type": "object",
                  "properties": {
                    "values": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The strings in the set"
                    }
                  },
                  "description": "Defines this value as being a StringSet."
                }
              },
              "description": "The configured value of the setting at the given parent resource, ignoring the resource hierarchy. The data type of Value must always be consistent with the data type defined in Setting.metadata."
            },
            "effectiveValue": {
              "id": "GoogleCloudResourcesettingsV1Value",
              "type": "object",
              "readOnly": true,
              "properties": {
                "enumValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueEnumValue",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The value of this enum"
                    }
                  },
                  "description": "Defines this value as being a Enum."
                },
                "stringValue": {
                  "type": "string",
                  "description": "Defines this value as being a string value."
                },
                "booleanValue": {
                  "type": "boolean",
                  "description": "Defines this value as being a boolean value."
                },
                "durationValue": {
                  "type": "string",
                  "format": "google-duration",
                  "description": "Defines this value as being a Duration."
                },
                "stringMapValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueStringMap",
                  "type": "object",
                  "properties": {
                    "mappings": {
                      "type": "object",
                      "description": "The key-value pairs in the map",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Defines this value as being a StringMap."
                },
                "stringSetValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueStringSet",
                  "type": "object",
                  "properties": {
                    "values": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The strings in the set"
                    }
                  },
                  "description": "Defines this value as being a StringSet."
                }
              },
              "description": "Output only. The effective value of the setting at the given parent resource, evaluated based on the resource hierarchy The effective value evaluates to one of the following options, in this order. If an option is not valid or doesn't exist, then the next option is used: 1. The local setting value on the given resource: Setting.local_value 2. If one of the given resource's ancestors in the resource hierarchy have a local setting value, the local value at the nearest such ancestor. 3. The setting's default value: SettingMetadata.default_value 4. An empty value, defined as a `Value` with all fields unset. The data type of Value must always be consistent with the data type defined in Setting.metadata."
            }
          },
          "description": "The schema for settings."
        }
      ]
  resourcesettings.organizations.settings.list:
    description: |-
      Lists all the settings that are available on the Cloud resource `parent`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/docs/reference/resource-settings/rest/v1/organizations.settings/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudResourcesettingsV1ListSettingsResponse",
          "type": "object",
          "properties": {
            "settings": {
              "type": "array",
              "items": {
                "id": "GoogleCloudResourcesettingsV1Setting",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "description": "A fingerprint used for optimistic concurrency. See UpdateSetting for more details."
                  },
                  "name": {
                    "type": "string",
                    "description": "The resource name of the setting. Must be in one of the following forms: * `projects/{project_number}/settings/{setting_name}` * `folders/{folder_id}/settings/{setting_name}` * `organizations/{organization_id}/settings/{setting_name}` For example, \"/projects/123/settings/gcp-enableMyFeature\""
                  },
                  "metadata": {
                    "id": "GoogleCloudResourcesettingsV1SettingMetadata",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "dataType": {
                        "enum": [
                          "DATA_TYPE_UNSPECIFIED",
                          "BOOLEAN",
                          "STRING",
                          "STRING_SET",
                          "ENUM_VALUE",
                          "DURATION_VALUE",
                          "STRING_MAP"
                        ],
                        "type": "string",
                        "description": "The data type for this setting.",
                        "enumDescriptions": [
                          "Unspecified data type.",
                          "A boolean setting.",
                          "A string setting.",
                          "A string set setting.",
                          "A Enum setting",
                          "A Duration setting",
                          "A string->string map setting"
                        ]
                      },
                      "readOnly": {
                        "type": "boolean",
                        "description": "A flag indicating that values of this setting cannot be modified. See documentation for the specific setting for updates and reasons."
                      },
                      "description": {
                        "type": "string",
                        "description": "A detailed description of what this setting does."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "The human readable name for this setting."
                      },
                      "defaultValue": {
                        "id": "GoogleCloudResourcesettingsV1Value",
                        "type": "object",
                        "properties": {
                          "enumValue": {
                            "id": "GoogleCloudResourcesettingsV1ValueEnumValue",
                            "type": "object",
                            "properties": {
                              "value": {
                                "type": "string",
                                "description": "The value of this enum"
                              }
                            },
                            "description": "Defines this value as being a Enum."
                          },
                          "stringValue": {
                            "type": "string",
                            "description": "Defines this value as being a string value."
                          },
                          "booleanValue": {
                            "type": "boolean",
                            "description": "Defines this value as being a boolean value."
                          },
                          "durationValue": {
                            "type": "string",
                            "format": "google-duration",
                            "description": "Defines this value as being a Duration."
                          },
                          "stringMapValue": {
                            "id": "GoogleCloudResourcesettingsV1ValueStringMap",
                            "type": "object",
                            "properties": {
                              "mappings": {
                                "type": "object",
                                "description": "The key-value pairs in the map",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            },
                            "description": "Defines this value as being a StringMap."
                          },
                          "stringSetValue": {
                            "id": "GoogleCloudResourcesettingsV1ValueStringSet",
                            "type": "object",
                            "properties": {
                              "values": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The strings in the set"
                              }
                            },
                            "description": "Defines this value as being a StringSet."
                          }
                        },
                        "description": "The value provided by Setting.effective_value if no setting value is explicitly set. Note: not all settings have a default value."
                      }
                    },
                    "description": "Output only. Metadata about a setting which is not editable by the end user."
                  },
                  "localValue": {
                    "id": "GoogleCloudResourcesettingsV1Value",
                    "type": "object",
                    "properties": {
                      "enumValue": {
                        "id": "GoogleCloudResourcesettingsV1ValueEnumValue",
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value of this enum"
                          }
                        },
                        "description": "Defines this value as being a Enum."
                      },
                      "stringValue": {
                        "type": "string",
                        "description": "Defines this value as being a string value."
                      },
                      "booleanValue": {
                        "type": "boolean",
                        "description": "Defines this value as being a boolean value."
                      },
                      "durationValue": {
                        "type": "string",
                        "format": "google-duration",
                        "description": "Defines this value as being a Duration."
                      },
                      "stringMapValue": {
                        "id": "GoogleCloudResourcesettingsV1ValueStringMap",
                        "type": "object",
                        "properties": {
                          "mappings": {
                            "type": "object",
                            "description": "The key-value pairs in the map",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        },
                        "description": "Defines this value as being a StringMap."
                      },
                      "stringSetValue": {
                        "id": "GoogleCloudResourcesettingsV1ValueStringSet",
                        "type": "object",
                        "properties": {
                          "values": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The strings in the set"
                          }
                        },
                        "description": "Defines this value as being a StringSet."
                      }
                    },
                    "description": "The configured value of the setting at the given parent resource, ignoring the resource hierarchy. The data type of Value must always be consistent with the data type defined in Setting.metadata."
                  },
                  "effectiveValue": {
                    "id": "GoogleCloudResourcesettingsV1Value",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "enumValue": {
                        "id": "GoogleCloudResourcesettingsV1ValueEnumValue",
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value of this enum"
                          }
                        },
                        "description": "Defines this value as being a Enum."
                      },
                      "stringValue": {
                        "type": "string",
                        "description": "Defines this value as being a string value."
                      },
                      "booleanValue": {
                        "type": "boolean",
                        "description": "Defines this value as being a boolean value."
                      },
                      "durationValue": {
                        "type": "string",
                        "format": "google-duration",
                        "description": "Defines this value as being a Duration."
                      },
                      "stringMapValue": {
                        "id": "GoogleCloudResourcesettingsV1ValueStringMap",
                        "type": "object",
                        "properties": {
                          "mappings": {
                            "type": "object",
                            "description": "The key-value pairs in the map",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        },
                        "description": "Defines this value as being a StringMap."
                      },
                      "stringSetValue": {
                        "id": "GoogleCloudResourcesettingsV1ValueStringSet",
                        "type": "object",
                        "properties": {
                          "values": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The strings in the set"
                          }
                        },
                        "description": "Defines this value as being a StringSet."
                      }
                    },
                    "description": "Output only. The effective value of the setting at the given parent resource, evaluated based on the resource hierarchy The effective value evaluates to one of the following options, in this order. If an option is not valid or doesn't exist, then the next option is used: 1. The local setting value on the given resource: Setting.local_value 2. If one of the given resource's ancestors in the resource hierarchy have a local setting value, the local value at the nearest such ancestor. 3. The setting's default value: SettingMetadata.default_value 4. An empty value, defined as a `Value` with all fields unset. The data type of Value must always be consistent with the data type defined in Setting.metadata."
                  }
                },
                "description": "The schema for settings."
              },
              "description": "A list of settings that are available at the specified Cloud resource."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Unused. A page token used to retrieve the next page."
            }
          },
          "description": "The response from ListSettings."
        }
      ]
  resourcesettings.organizations.settings.patch:
    description: |-
      Updates a specified setting. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the setting does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.FAILED_PRECONDITION` if the setting is flagged as read only. Returns a `google.rpc.Status` with `google.rpc.Code.ABORTED` if the etag supplied in the request does not match the persisted etag of the setting value. On success, the response will contain only `name`, `local_value` and `etag`. The `metadata` and `effective_value` cannot be updated through this API. Note: the supplied setting will perform a full overwrite of the `local_value` field.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/docs/reference/resource-settings/rest/v1/organizations.settings/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudResourcesettingsV1Setting",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "A fingerprint used for optimistic concurrency. See UpdateSetting for more details."
            },
            "name": {
              "type": "string",
              "description": "The resource name of the setting. Must be in one of the following forms: * `projects/{project_number}/settings/{setting_name}` * `folders/{folder_id}/settings/{setting_name}` * `organizations/{organization_id}/settings/{setting_name}` For example, \"/projects/123/settings/gcp-enableMyFeature\""
            },
            "metadata": {
              "id": "GoogleCloudResourcesettingsV1SettingMetadata",
              "type": "object",
              "readOnly": true,
              "properties": {
                "dataType": {
                  "enum": [
                    "DATA_TYPE_UNSPECIFIED",
                    "BOOLEAN",
                    "STRING",
                    "STRING_SET",
                    "ENUM_VALUE",
                    "DURATION_VALUE",
                    "STRING_MAP"
                  ],
                  "type": "string",
                  "description": "The data type for this setting.",
                  "enumDescriptions": [
                    "Unspecified data type.",
                    "A boolean setting.",
                    "A string setting.",
                    "A string set setting.",
                    "A Enum setting",
                    "A Duration setting",
                    "A string->string map setting"
                  ]
                },
                "readOnly": {
                  "type": "boolean",
                  "description": "A flag indicating that values of this setting cannot be modified. See documentation for the specific setting for updates and reasons."
                },
                "description": {
                  "type": "string",
                  "description": "A detailed description of what this setting does."
                },
                "displayName": {
                  "type": "string",
                  "description": "The human readable name for this setting."
                },
                "defaultValue": {
                  "id": "GoogleCloudResourcesettingsV1Value",
                  "type": "object",
                  "properties": {
                    "enumValue": {
                      "id": "GoogleCloudResourcesettingsV1ValueEnumValue",
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "The value of this enum"
                        }
                      },
                      "description": "Defines this value as being a Enum."
                    },
                    "stringValue": {
                      "type": "string",
                      "description": "Defines this value as being a string value."
                    },
                    "booleanValue": {
                      "type": "boolean",
                      "description": "Defines this value as being a boolean value."
                    },
                    "durationValue": {
                      "type": "string",
                      "format": "google-duration",
                      "description": "Defines this value as being a Duration."
                    },
                    "stringMapValue": {
                      "id": "GoogleCloudResourcesettingsV1ValueStringMap",
                      "type": "object",
                      "properties": {
                        "mappings": {
                          "type": "object",
                          "description": "The key-value pairs in the map",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "Defines this value as being a StringMap."
                    },
                    "stringSetValue": {
                      "id": "GoogleCloudResourcesettingsV1ValueStringSet",
                      "type": "object",
                      "properties": {
                        "values": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The strings in the set"
                        }
                      },
                      "description": "Defines this value as being a StringSet."
                    }
                  },
                  "description": "The value provided by Setting.effective_value if no setting value is explicitly set. Note: not all settings have a default value."
                }
              },
              "description": "Output only. Metadata about a setting which is not editable by the end user."
            },
            "localValue": {
              "id": "GoogleCloudResourcesettingsV1Value",
              "type": "object",
              "properties": {
                "enumValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueEnumValue",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The value of this enum"
                    }
                  },
                  "description": "Defines this value as being a Enum."
                },
                "stringValue": {
                  "type": "string",
                  "description": "Defines this value as being a string value."
                },
                "booleanValue": {
                  "type": "boolean",
                  "description": "Defines this value as being a boolean value."
                },
                "durationValue": {
                  "type": "string",
                  "format": "google-duration",
                  "description": "Defines this value as being a Duration."
                },
                "stringMapValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueStringMap",
                  "type": "object",
                  "properties": {
                    "mappings": {
                      "type": "object",
                      "description": "The key-value pairs in the map",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Defines this value as being a StringMap."
                },
                "stringSetValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueStringSet",
                  "type": "object",
                  "properties": {
                    "values": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The strings in the set"
                    }
                  },
                  "description": "Defines this value as being a StringSet."
                }
              },
              "description": "The configured value of the setting at the given parent resource, ignoring the resource hierarchy. The data type of Value must always be consistent with the data type defined in Setting.metadata."
            },
            "effectiveValue": {
              "id": "GoogleCloudResourcesettingsV1Value",
              "type": "object",
              "readOnly": true,
              "properties": {
                "enumValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueEnumValue",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The value of this enum"
                    }
                  },
                  "description": "Defines this value as being a Enum."
                },
                "stringValue": {
                  "type": "string",
                  "description": "Defines this value as being a string value."
                },
                "booleanValue": {
                  "type": "boolean",
                  "description": "Defines this value as being a boolean value."
                },
                "durationValue": {
                  "type": "string",
                  "format": "google-duration",
                  "description": "Defines this value as being a Duration."
                },
                "stringMapValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueStringMap",
                  "type": "object",
                  "properties": {
                    "mappings": {
                      "type": "object",
                      "description": "The key-value pairs in the map",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Defines this value as being a StringMap."
                },
                "stringSetValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueStringSet",
                  "type": "object",
                  "properties": {
                    "values": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The strings in the set"
                    }
                  },
                  "description": "Defines this value as being a StringSet."
                }
              },
              "description": "Output only. The effective value of the setting at the given parent resource, evaluated based on the resource hierarchy The effective value evaluates to one of the following options, in this order. If an option is not valid or doesn't exist, then the next option is used: 1. The local setting value on the given resource: Setting.local_value 2. If one of the given resource's ancestors in the resource hierarchy have a local setting value, the local value at the nearest such ancestor. 3. The setting's default value: SettingMetadata.default_value 4. An empty value, defined as a `Value` with all fields unset. The data type of Value must always be consistent with the data type defined in Setting.metadata."
            }
          },
          "description": "The schema for settings."
        }
      ]
  resourcesettings.projects.settings.get:
    description: |-
      Returns a specified setting. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the setting does not exist.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/docs/reference/resource-settings/rest/v1/projects.settings/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudResourcesettingsV1Setting",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "A fingerprint used for optimistic concurrency. See UpdateSetting for more details."
            },
            "name": {
              "type": "string",
              "description": "The resource name of the setting. Must be in one of the following forms: * `projects/{project_number}/settings/{setting_name}` * `folders/{folder_id}/settings/{setting_name}` * `organizations/{organization_id}/settings/{setting_name}` For example, \"/projects/123/settings/gcp-enableMyFeature\""
            },
            "metadata": {
              "id": "GoogleCloudResourcesettingsV1SettingMetadata",
              "type": "object",
              "readOnly": true,
              "properties": {
                "dataType": {
                  "enum": [
                    "DATA_TYPE_UNSPECIFIED",
                    "BOOLEAN",
                    "STRING",
                    "STRING_SET",
                    "ENUM_VALUE",
                    "DURATION_VALUE",
                    "STRING_MAP"
                  ],
                  "type": "string",
                  "description": "The data type for this setting.",
                  "enumDescriptions": [
                    "Unspecified data type.",
                    "A boolean setting.",
                    "A string setting.",
                    "A string set setting.",
                    "A Enum setting",
                    "A Duration setting",
                    "A string->string map setting"
                  ]
                },
                "readOnly": {
                  "type": "boolean",
                  "description": "A flag indicating that values of this setting cannot be modified. See documentation for the specific setting for updates and reasons."
                },
                "description": {
                  "type": "string",
                  "description": "A detailed description of what this setting does."
                },
                "displayName": {
                  "type": "string",
                  "description": "The human readable name for this setting."
                },
                "defaultValue": {
                  "id": "GoogleCloudResourcesettingsV1Value",
                  "type": "object",
                  "properties": {
                    "enumValue": {
                      "id": "GoogleCloudResourcesettingsV1ValueEnumValue",
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "The value of this enum"
                        }
                      },
                      "description": "Defines this value as being a Enum."
                    },
                    "stringValue": {
                      "type": "string",
                      "description": "Defines this value as being a string value."
                    },
                    "booleanValue": {
                      "type": "boolean",
                      "description": "Defines this value as being a boolean value."
                    },
                    "durationValue": {
                      "type": "string",
                      "format": "google-duration",
                      "description": "Defines this value as being a Duration."
                    },
                    "stringMapValue": {
                      "id": "GoogleCloudResourcesettingsV1ValueStringMap",
                      "type": "object",
                      "properties": {
                        "mappings": {
                          "type": "object",
                          "description": "The key-value pairs in the map",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "Defines this value as being a StringMap."
                    },
                    "stringSetValue": {
                      "id": "GoogleCloudResourcesettingsV1ValueStringSet",
                      "type": "object",
                      "properties": {
                        "values": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The strings in the set"
                        }
                      },
                      "description": "Defines this value as being a StringSet."
                    }
                  },
                  "description": "The value provided by Setting.effective_value if no setting value is explicitly set. Note: not all settings have a default value."
                }
              },
              "description": "Output only. Metadata about a setting which is not editable by the end user."
            },
            "localValue": {
              "id": "GoogleCloudResourcesettingsV1Value",
              "type": "object",
              "properties": {
                "enumValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueEnumValue",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The value of this enum"
                    }
                  },
                  "description": "Defines this value as being a Enum."
                },
                "stringValue": {
                  "type": "string",
                  "description": "Defines this value as being a string value."
                },
                "booleanValue": {
                  "type": "boolean",
                  "description": "Defines this value as being a boolean value."
                },
                "durationValue": {
                  "type": "string",
                  "format": "google-duration",
                  "description": "Defines this value as being a Duration."
                },
                "stringMapValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueStringMap",
                  "type": "object",
                  "properties": {
                    "mappings": {
                      "type": "object",
                      "description": "The key-value pairs in the map",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Defines this value as being a StringMap."
                },
                "stringSetValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueStringSet",
                  "type": "object",
                  "properties": {
                    "values": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The strings in the set"
                    }
                  },
                  "description": "Defines this value as being a StringSet."
                }
              },
              "description": "The configured value of the setting at the given parent resource, ignoring the resource hierarchy. The data type of Value must always be consistent with the data type defined in Setting.metadata."
            },
            "effectiveValue": {
              "id": "GoogleCloudResourcesettingsV1Value",
              "type": "object",
              "readOnly": true,
              "properties": {
                "enumValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueEnumValue",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The value of this enum"
                    }
                  },
                  "description": "Defines this value as being a Enum."
                },
                "stringValue": {
                  "type": "string",
                  "description": "Defines this value as being a string value."
                },
                "booleanValue": {
                  "type": "boolean",
                  "description": "Defines this value as being a boolean value."
                },
                "durationValue": {
                  "type": "string",
                  "format": "google-duration",
                  "description": "Defines this value as being a Duration."
                },
                "stringMapValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueStringMap",
                  "type": "object",
                  "properties": {
                    "mappings": {
                      "type": "object",
                      "description": "The key-value pairs in the map",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Defines this value as being a StringMap."
                },
                "stringSetValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueStringSet",
                  "type": "object",
                  "properties": {
                    "values": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The strings in the set"
                    }
                  },
                  "description": "Defines this value as being a StringSet."
                }
              },
              "description": "Output only. The effective value of the setting at the given parent resource, evaluated based on the resource hierarchy The effective value evaluates to one of the following options, in this order. If an option is not valid or doesn't exist, then the next option is used: 1. The local setting value on the given resource: Setting.local_value 2. If one of the given resource's ancestors in the resource hierarchy have a local setting value, the local value at the nearest such ancestor. 3. The setting's default value: SettingMetadata.default_value 4. An empty value, defined as a `Value` with all fields unset. The data type of Value must always be consistent with the data type defined in Setting.metadata."
            }
          },
          "description": "The schema for settings."
        }
      ]
  resourcesettings.projects.settings.list:
    description: |-
      Lists all the settings that are available on the Cloud resource `parent`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/docs/reference/resource-settings/rest/v1/projects.settings/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudResourcesettingsV1ListSettingsResponse",
          "type": "object",
          "properties": {
            "settings": {
              "type": "array",
              "items": {
                "id": "GoogleCloudResourcesettingsV1Setting",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "description": "A fingerprint used for optimistic concurrency. See UpdateSetting for more details."
                  },
                  "name": {
                    "type": "string",
                    "description": "The resource name of the setting. Must be in one of the following forms: * `projects/{project_number}/settings/{setting_name}` * `folders/{folder_id}/settings/{setting_name}` * `organizations/{organization_id}/settings/{setting_name}` For example, \"/projects/123/settings/gcp-enableMyFeature\""
                  },
                  "metadata": {
                    "id": "GoogleCloudResourcesettingsV1SettingMetadata",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "dataType": {
                        "enum": [
                          "DATA_TYPE_UNSPECIFIED",
                          "BOOLEAN",
                          "STRING",
                          "STRING_SET",
                          "ENUM_VALUE",
                          "DURATION_VALUE",
                          "STRING_MAP"
                        ],
                        "type": "string",
                        "description": "The data type for this setting.",
                        "enumDescriptions": [
                          "Unspecified data type.",
                          "A boolean setting.",
                          "A string setting.",
                          "A string set setting.",
                          "A Enum setting",
                          "A Duration setting",
                          "A string->string map setting"
                        ]
                      },
                      "readOnly": {
                        "type": "boolean",
                        "description": "A flag indicating that values of this setting cannot be modified. See documentation for the specific setting for updates and reasons."
                      },
                      "description": {
                        "type": "string",
                        "description": "A detailed description of what this setting does."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "The human readable name for this setting."
                      },
                      "defaultValue": {
                        "id": "GoogleCloudResourcesettingsV1Value",
                        "type": "object",
                        "properties": {
                          "enumValue": {
                            "id": "GoogleCloudResourcesettingsV1ValueEnumValue",
                            "type": "object",
                            "properties": {
                              "value": {
                                "type": "string",
                                "description": "The value of this enum"
                              }
                            },
                            "description": "Defines this value as being a Enum."
                          },
                          "stringValue": {
                            "type": "string",
                            "description": "Defines this value as being a string value."
                          },
                          "booleanValue": {
                            "type": "boolean",
                            "description": "Defines this value as being a boolean value."
                          },
                          "durationValue": {
                            "type": "string",
                            "format": "google-duration",
                            "description": "Defines this value as being a Duration."
                          },
                          "stringMapValue": {
                            "id": "GoogleCloudResourcesettingsV1ValueStringMap",
                            "type": "object",
                            "properties": {
                              "mappings": {
                                "type": "object",
                                "description": "The key-value pairs in the map",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            },
                            "description": "Defines this value as being a StringMap."
                          },
                          "stringSetValue": {
                            "id": "GoogleCloudResourcesettingsV1ValueStringSet",
                            "type": "object",
                            "properties": {
                              "values": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The strings in the set"
                              }
                            },
                            "description": "Defines this value as being a StringSet."
                          }
                        },
                        "description": "The value provided by Setting.effective_value if no setting value is explicitly set. Note: not all settings have a default value."
                      }
                    },
                    "description": "Output only. Metadata about a setting which is not editable by the end user."
                  },
                  "localValue": {
                    "id": "GoogleCloudResourcesettingsV1Value",
                    "type": "object",
                    "properties": {
                      "enumValue": {
                        "id": "GoogleCloudResourcesettingsV1ValueEnumValue",
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value of this enum"
                          }
                        },
                        "description": "Defines this value as being a Enum."
                      },
                      "stringValue": {
                        "type": "string",
                        "description": "Defines this value as being a string value."
                      },
                      "booleanValue": {
                        "type": "boolean",
                        "description": "Defines this value as being a boolean value."
                      },
                      "durationValue": {
                        "type": "string",
                        "format": "google-duration",
                        "description": "Defines this value as being a Duration."
                      },
                      "stringMapValue": {
                        "id": "GoogleCloudResourcesettingsV1ValueStringMap",
                        "type": "object",
                        "properties": {
                          "mappings": {
                            "type": "object",
                            "description": "The key-value pairs in the map",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        },
                        "description": "Defines this value as being a StringMap."
                      },
                      "stringSetValue": {
                        "id": "GoogleCloudResourcesettingsV1ValueStringSet",
                        "type": "object",
                        "properties": {
                          "values": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The strings in the set"
                          }
                        },
                        "description": "Defines this value as being a StringSet."
                      }
                    },
                    "description": "The configured value of the setting at the given parent resource, ignoring the resource hierarchy. The data type of Value must always be consistent with the data type defined in Setting.metadata."
                  },
                  "effectiveValue": {
                    "id": "GoogleCloudResourcesettingsV1Value",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "enumValue": {
                        "id": "GoogleCloudResourcesettingsV1ValueEnumValue",
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value of this enum"
                          }
                        },
                        "description": "Defines this value as being a Enum."
                      },
                      "stringValue": {
                        "type": "string",
                        "description": "Defines this value as being a string value."
                      },
                      "booleanValue": {
                        "type": "boolean",
                        "description": "Defines this value as being a boolean value."
                      },
                      "durationValue": {
                        "type": "string",
                        "format": "google-duration",
                        "description": "Defines this value as being a Duration."
                      },
                      "stringMapValue": {
                        "id": "GoogleCloudResourcesettingsV1ValueStringMap",
                        "type": "object",
                        "properties": {
                          "mappings": {
                            "type": "object",
                            "description": "The key-value pairs in the map",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        },
                        "description": "Defines this value as being a StringMap."
                      },
                      "stringSetValue": {
                        "id": "GoogleCloudResourcesettingsV1ValueStringSet",
                        "type": "object",
                        "properties": {
                          "values": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The strings in the set"
                          }
                        },
                        "description": "Defines this value as being a StringSet."
                      }
                    },
                    "description": "Output only. The effective value of the setting at the given parent resource, evaluated based on the resource hierarchy The effective value evaluates to one of the following options, in this order. If an option is not valid or doesn't exist, then the next option is used: 1. The local setting value on the given resource: Setting.local_value 2. If one of the given resource's ancestors in the resource hierarchy have a local setting value, the local value at the nearest such ancestor. 3. The setting's default value: SettingMetadata.default_value 4. An empty value, defined as a `Value` with all fields unset. The data type of Value must always be consistent with the data type defined in Setting.metadata."
                  }
                },
                "description": "The schema for settings."
              },
              "description": "A list of settings that are available at the specified Cloud resource."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Unused. A page token used to retrieve the next page."
            }
          },
          "description": "The response from ListSettings."
        }
      ]
  resourcesettings.projects.settings.patch:
    description: |-
      Updates a specified setting. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the setting does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.FAILED_PRECONDITION` if the setting is flagged as read only. Returns a `google.rpc.Status` with `google.rpc.Code.ABORTED` if the etag supplied in the request does not match the persisted etag of the setting value. On success, the response will contain only `name`, `local_value` and `etag`. The `metadata` and `effective_value` cannot be updated through this API. Note: the supplied setting will perform a full overwrite of the `local_value` field.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/docs/reference/resource-settings/rest/v1/projects.settings/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudResourcesettingsV1Setting",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "A fingerprint used for optimistic concurrency. See UpdateSetting for more details."
            },
            "name": {
              "type": "string",
              "description": "The resource name of the setting. Must be in one of the following forms: * `projects/{project_number}/settings/{setting_name}` * `folders/{folder_id}/settings/{setting_name}` * `organizations/{organization_id}/settings/{setting_name}` For example, \"/projects/123/settings/gcp-enableMyFeature\""
            },
            "metadata": {
              "id": "GoogleCloudResourcesettingsV1SettingMetadata",
              "type": "object",
              "readOnly": true,
              "properties": {
                "dataType": {
                  "enum": [
                    "DATA_TYPE_UNSPECIFIED",
                    "BOOLEAN",
                    "STRING",
                    "STRING_SET",
                    "ENUM_VALUE",
                    "DURATION_VALUE",
                    "STRING_MAP"
                  ],
                  "type": "string",
                  "description": "The data type for this setting.",
                  "enumDescriptions": [
                    "Unspecified data type.",
                    "A boolean setting.",
                    "A string setting.",
                    "A string set setting.",
                    "A Enum setting",
                    "A Duration setting",
                    "A string->string map setting"
                  ]
                },
                "readOnly": {
                  "type": "boolean",
                  "description": "A flag indicating that values of this setting cannot be modified. See documentation for the specific setting for updates and reasons."
                },
                "description": {
                  "type": "string",
                  "description": "A detailed description of what this setting does."
                },
                "displayName": {
                  "type": "string",
                  "description": "The human readable name for this setting."
                },
                "defaultValue": {
                  "id": "GoogleCloudResourcesettingsV1Value",
                  "type": "object",
                  "properties": {
                    "enumValue": {
                      "id": "GoogleCloudResourcesettingsV1ValueEnumValue",
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "The value of this enum"
                        }
                      },
                      "description": "Defines this value as being a Enum."
                    },
                    "stringValue": {
                      "type": "string",
                      "description": "Defines this value as being a string value."
                    },
                    "booleanValue": {
                      "type": "boolean",
                      "description": "Defines this value as being a boolean value."
                    },
                    "durationValue": {
                      "type": "string",
                      "format": "google-duration",
                      "description": "Defines this value as being a Duration."
                    },
                    "stringMapValue": {
                      "id": "GoogleCloudResourcesettingsV1ValueStringMap",
                      "type": "object",
                      "properties": {
                        "mappings": {
                          "type": "object",
                          "description": "The key-value pairs in the map",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "Defines this value as being a StringMap."
                    },
                    "stringSetValue": {
                      "id": "GoogleCloudResourcesettingsV1ValueStringSet",
                      "type": "object",
                      "properties": {
                        "values": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The strings in the set"
                        }
                      },
                      "description": "Defines this value as being a StringSet."
                    }
                  },
                  "description": "The value provided by Setting.effective_value if no setting value is explicitly set. Note: not all settings have a default value."
                }
              },
              "description": "Output only. Metadata about a setting which is not editable by the end user."
            },
            "localValue": {
              "id": "GoogleCloudResourcesettingsV1Value",
              "type": "object",
              "properties": {
                "enumValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueEnumValue",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The value of this enum"
                    }
                  },
                  "description": "Defines this value as being a Enum."
                },
                "stringValue": {
                  "type": "string",
                  "description": "Defines this value as being a string value."
                },
                "booleanValue": {
                  "type": "boolean",
                  "description": "Defines this value as being a boolean value."
                },
                "durationValue": {
                  "type": "string",
                  "format": "google-duration",
                  "description": "Defines this value as being a Duration."
                },
                "stringMapValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueStringMap",
                  "type": "object",
                  "properties": {
                    "mappings": {
                      "type": "object",
                      "description": "The key-value pairs in the map",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Defines this value as being a StringMap."
                },
                "stringSetValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueStringSet",
                  "type": "object",
                  "properties": {
                    "values": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The strings in the set"
                    }
                  },
                  "description": "Defines this value as being a StringSet."
                }
              },
              "description": "The configured value of the setting at the given parent resource, ignoring the resource hierarchy. The data type of Value must always be consistent with the data type defined in Setting.metadata."
            },
            "effectiveValue": {
              "id": "GoogleCloudResourcesettingsV1Value",
              "type": "object",
              "readOnly": true,
              "properties": {
                "enumValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueEnumValue",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The value of this enum"
                    }
                  },
                  "description": "Defines this value as being a Enum."
                },
                "stringValue": {
                  "type": "string",
                  "description": "Defines this value as being a string value."
                },
                "booleanValue": {
                  "type": "boolean",
                  "description": "Defines this value as being a boolean value."
                },
                "durationValue": {
                  "type": "string",
                  "format": "google-duration",
                  "description": "Defines this value as being a Duration."
                },
                "stringMapValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueStringMap",
                  "type": "object",
                  "properties": {
                    "mappings": {
                      "type": "object",
                      "description": "The key-value pairs in the map",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Defines this value as being a StringMap."
                },
                "stringSetValue": {
                  "id": "GoogleCloudResourcesettingsV1ValueStringSet",
                  "type": "object",
                  "properties": {
                    "values": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The strings in the set"
                    }
                  },
                  "description": "Defines this value as being a StringSet."
                }
              },
              "description": "Output only. The effective value of the setting at the given parent resource, evaluated based on the resource hierarchy The effective value evaluates to one of the following options, in this order. If an option is not valid or doesn't exist, then the next option is used: 1. The local setting value on the given resource: Setting.local_value 2. If one of the given resource's ancestors in the resource hierarchy have a local setting value, the local value at the nearest such ancestor. 3. The setting's default value: SettingMetadata.default_value 4. An empty value, defined as a `Value` with all fields unset. The data type of Value must always be consistent with the data type defined in Setting.metadata."
            }
          },
          "description": "The schema for settings."
        }
      ]
  cloudresourcemanager.folders.create:
    description: |-
      Creates a folder in the resource hierarchy. Returns an `Operation` which can be used to track the progress of the folder creation workflow. Upon success, the `Operation.response` field will be populated with the created Folder. In order to succeed, the addition of this new folder must not violate the folder naming, height, or fanout constraints. + The folder's `display_name` must be distinct from all other folders that share its parent. + The addition of the folder must not cause the active folder hierarchy to exceed a height of 10. Note, the full active + deleted folder hierarchy is allowed to reach a height of 20; this provides additional headroom when moving folders that contain deleted folders. + The addition of the folder must not cause the total number of folders under its parent to exceed 300. If the operation fails due to a folder constraint violation, some errors may be returned by the `CreateFolder` request, with status code `FAILED_PRECONDITION` and an error description. Other folder constraint violations will be communicated in the `Operation`, with the specific `PreconditionFailure` returned in the details list in the `Operation.error` field. The caller must have `resourcemanager.folders.create` permission on the identified parent.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/folders/create
    example:
      inputs: [
        {
          "id": "Folder",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. A checksum computed by the server based on the current value of the folder resource. This may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding."
            },
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The resource name of the folder. Its format is `folders/{folder_id}`, for example: \"folders/1234\"."
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "ACTIVE",
                "DELETE_REQUESTED"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. The lifecycle state of the folder. Updates to the state must be performed using DeleteFolder and UndeleteFolder.",
              "enumDescriptions": [
                "Unspecified state.",
                "The normal and active state.",
                "The folder has been marked for deletion by the user."
              ]
            },
            "parent": {
              "type": "string",
              "description": "Required. The folder's parent's resource name. Updates to the folder's parent must be performed using MoveFolder."
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Timestamp when the folder was created."
            },
            "deleteTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Timestamp when the folder was requested to be deleted."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Timestamp when the folder was last modified."
            },
            "displayName": {
              "type": "string",
              "description": "The folder's display name. A folder's display name must be unique amongst its siblings. For example, no two folders with the same parent can share the same display name. The display name must start and end with a letter or digit, may contain letters, digits, spaces, hyphens and underscores and can be no longer than 30 characters. This is captured by the regular expression: `[\\p{L}\\p{N}]([\\p{L}\\p{N}_- ]{0,28}[\\p{L}\\p{N}])?`."
            }
          },
          "description": "A folder in an organization's resource hierarchy, used to organize that organization's resources."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  cloudresourcemanager.folders.delete:
    description: |-
      Requests deletion of a folder. The folder is moved into the DELETE_REQUESTED state immediately, and is deleted approximately 30 days later. This method may only be called on an empty folder, where a folder is empty if it doesn't contain any folders or projects in the ACTIVE state. If called on a folder in DELETE_REQUESTED state the operation will result in a no-op success. The caller must have `resourcemanager.folders.delete` permission on the identified folder.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/folders/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  cloudresourcemanager.folders.get:
    description: |-
      Retrieves a folder identified by the supplied resource name. Valid folder resource names have the format `folders/{folder_id}` (for example, `folders/1234`). The caller must have `resourcemanager.folders.get` permission on the identified folder.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/folders/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  cloudresourcemanager.folders.getIamPolicy:
    description: |-
      Gets the access control policy for a folder. The returned policy may be empty if no such policy or resource exists. The `resource` field should be the folder's resource name, for example: "folders/1234". The caller must have `resourcemanager.folders.getIamPolicy` permission on the identified folder.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/folders/getIamPolicy
    example:
      inputs: [
        {
          "id": "GetIamPolicyRequest",
          "type": "object",
          "properties": {
            "options": {
              "id": "GetPolicyOptions",
              "type": "object",
              "properties": {
                "requestedPolicyVersion": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                }
              },
              "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`."
            }
          },
          "description": "Request message for `GetIamPolicy` method."
        }
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            },
            "auditConfigs": {
              "type": "array",
              "items": {
                "id": "AuditConfig",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                  },
                  "auditLogConfigs": {
                    "type": "array",
                    "items": {
                      "id": "AuditLogConfig",
                      "type": "object",
                      "properties": {
                        "logType": {
                          "enum": [
                            "LOG_TYPE_UNSPECIFIED",
                            "ADMIN_READ",
                            "DATA_WRITE",
                            "DATA_READ"
                          ],
                          "type": "string",
                          "description": "The log type that this config enables.",
                          "enumDescriptions": [
                            "Default case. Should never be this.",
                            "Admin reads. Example: CloudIAM getIamPolicy",
                            "Data writes. Example: CloudSQL Users create",
                            "Data reads. Example: CloudSQL Users list"
                          ]
                        },
                        "exemptedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                        }
                      },
                      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                    },
                    "description": "The configuration for logging of each type of permission."
                  }
                },
                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
              },
              "description": "Specifies cloud audit logging configuration for this policy."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  cloudresourcemanager.folders.list:
    description: |-
      Lists the folders that are direct descendants of supplied parent resource. `list()` provides a strongly consistent view of the folders underneath the specified parent resource. `list()` returns folders sorted based upon the (ascending) lexical ordering of their display_name. The caller must have `resourcemanager.folders.list` permission on the identified parent.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/folders/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListFoldersResponse",
          "type": "object",
          "properties": {
            "folders": {
              "type": "array",
              "items": {
                "id": "Folder",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. A checksum computed by the server based on the current value of the folder resource. This may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding."
                  },
                  "name": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The resource name of the folder. Its format is `folders/{folder_id}`, for example: \"folders/1234\"."
                  },
                  "state": {
                    "enum": [
                      "STATE_UNSPECIFIED",
                      "ACTIVE",
                      "DELETE_REQUESTED"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The lifecycle state of the folder. Updates to the state must be performed using DeleteFolder and UndeleteFolder.",
                    "enumDescriptions": [
                      "Unspecified state.",
                      "The normal and active state.",
                      "The folder has been marked for deletion by the user."
                    ]
                  },
                  "parent": {
                    "type": "string",
                    "description": "Required. The folder's parent's resource name. Updates to the folder's parent must be performed using MoveFolder."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Timestamp when the folder was created."
                  },
                  "deleteTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Timestamp when the folder was requested to be deleted."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Timestamp when the folder was last modified."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The folder's display name. A folder's display name must be unique amongst its siblings. For example, no two folders with the same parent can share the same display name. The display name must start and end with a letter or digit, may contain letters, digits, spaces, hyphens and underscores and can be no longer than 30 characters. This is captured by the regular expression: `[\\p{L}\\p{N}]([\\p{L}\\p{N}_- ]{0,28}[\\p{L}\\p{N}])?`."
                  }
                },
                "description": "A folder in an organization's resource hierarchy, used to organize that organization's resources."
              },
              "description": "A possibly paginated list of folders that are direct descendants of the specified parent resource."
            },
            "nextPageToken": {
              "type": "string",
              "description": "A pagination token returned from a previous call to `ListFolders` that indicates from where listing should continue."
            }
          },
          "description": "The ListFolders response message."
        }
      ]
  cloudresourcemanager.folders.move:
    description: |-
      Moves a folder under a new resource parent. Returns an `Operation` which can be used to track the progress of the folder move workflow. Upon success, the `Operation.response` field will be populated with the moved folder. Upon failure, a `FolderOperationError` categorizing the failure cause will be returned - if the failure occurs synchronously then the `FolderOperationError` will be returned in the `Status.details` field. If it occurs asynchronously, then the FolderOperation will be returned in the `Operation.error` field. In addition, the `Operation.metadata` field will be populated with a `FolderOperation` message as an aid to stateless clients. Folder moves will be rejected if they violate either the naming, height, or fanout constraints described in the CreateFolder documentation. The caller must have `resourcemanager.folders.move` permission on the folder's current and proposed new parent.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/folders/move
    example:
      inputs: [
        {
          "id": "MoveFolderRequest",
          "type": "object",
          "properties": {
            "destinationParent": {
              "type": "string",
              "description": "Required. The resource name of the folder or organization which should be the folder's new parent. Must be of the form `folders/{folder_id}` or `organizations/{org_id}`."
            }
          },
          "description": "The MoveFolder request message."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  cloudresourcemanager.folders.patch:
    description: |-
      Updates a folder, changing its `display_name`. Changes to the folder `display_name` will be rejected if they violate either the `display_name` formatting rules or the naming constraints described in the CreateFolder documentation. The folder's `display_name` must start and end with a letter or digit, may contain letters, digits, spaces, hyphens and underscores and can be between 3 and 30 characters. This is captured by the regular expression: `\p{L}\p{N}{1,28}[\p{L}\p{N}]`. The caller must have `resourcemanager.folders.update` permission on the identified folder. If the update fails due to the unique name constraint then a `PreconditionFailure` explaining this violation will be returned in the Status.details field.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/folders/patch
    example:
      inputs: [
        {
          "id": "Folder",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. A checksum computed by the server based on the current value of the folder resource. This may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding."
            },
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The resource name of the folder. Its format is `folders/{folder_id}`, for example: \"folders/1234\"."
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "ACTIVE",
                "DELETE_REQUESTED"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. The lifecycle state of the folder. Updates to the state must be performed using DeleteFolder and UndeleteFolder.",
              "enumDescriptions": [
                "Unspecified state.",
                "The normal and active state.",
                "The folder has been marked for deletion by the user."
              ]
            },
            "parent": {
              "type": "string",
              "description": "Required. The folder's parent's resource name. Updates to the folder's parent must be performed using MoveFolder."
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Timestamp when the folder was created."
            },
            "deleteTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Timestamp when the folder was requested to be deleted."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Timestamp when the folder was last modified."
            },
            "displayName": {
              "type": "string",
              "description": "The folder's display name. A folder's display name must be unique amongst its siblings. For example, no two folders with the same parent can share the same display name. The display name must start and end with a letter or digit, may contain letters, digits, spaces, hyphens and underscores and can be no longer than 30 characters. This is captured by the regular expression: `[\\p{L}\\p{N}]([\\p{L}\\p{N}_- ]{0,28}[\\p{L}\\p{N}])?`."
            }
          },
          "description": "A folder in an organization's resource hierarchy, used to organize that organization's resources."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  cloudresourcemanager.folders.search:
    description: |-
      Search for folders that match specific filter criteria. `search()` provides an eventually consistent view of the folders a user has access to which meet the specified filter criteria. This will only return folders on which the caller has the permission `resourcemanager.folders.get`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/folders/search
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "SearchFoldersResponse",
          "type": "object",
          "properties": {
            "folders": {
              "type": "array",
              "items": {
                "id": "Folder",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. A checksum computed by the server based on the current value of the folder resource. This may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding."
                  },
                  "name": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The resource name of the folder. Its format is `folders/{folder_id}`, for example: \"folders/1234\"."
                  },
                  "state": {
                    "enum": [
                      "STATE_UNSPECIFIED",
                      "ACTIVE",
                      "DELETE_REQUESTED"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The lifecycle state of the folder. Updates to the state must be performed using DeleteFolder and UndeleteFolder.",
                    "enumDescriptions": [
                      "Unspecified state.",
                      "The normal and active state.",
                      "The folder has been marked for deletion by the user."
                    ]
                  },
                  "parent": {
                    "type": "string",
                    "description": "Required. The folder's parent's resource name. Updates to the folder's parent must be performed using MoveFolder."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Timestamp when the folder was created."
                  },
                  "deleteTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Timestamp when the folder was requested to be deleted."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Timestamp when the folder was last modified."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The folder's display name. A folder's display name must be unique amongst its siblings. For example, no two folders with the same parent can share the same display name. The display name must start and end with a letter or digit, may contain letters, digits, spaces, hyphens and underscores and can be no longer than 30 characters. This is captured by the regular expression: `[\\p{L}\\p{N}]([\\p{L}\\p{N}_- ]{0,28}[\\p{L}\\p{N}])?`."
                  }
                },
                "description": "A folder in an organization's resource hierarchy, used to organize that organization's resources."
              },
              "description": "A possibly paginated folder search results. the specified parent resource."
            },
            "nextPageToken": {
              "type": "string",
              "description": "A pagination token returned from a previous call to `SearchFolders` that indicates from where searching should continue."
            }
          },
          "description": "The response message for searching folders."
        }
      ]
  cloudresourcemanager.folders.setIamPolicy:
    description: |-
      Sets the access control policy on a folder, replacing any existing policy. The `resource` field should be the folder's resource name, for example: "folders/1234". The caller must have `resourcemanager.folders.setIamPolicy` permission on the identified folder.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/folders/setIamPolicy
    example:
      inputs: [
        {
          "id": "SetIamPolicyRequest",
          "type": "object",
          "properties": {
            "policy": {
              "id": "Policy",
              "type": "object",
              "properties": {
                "etag": {
                  "type": "string",
                  "format": "byte",
                  "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
                },
                "version": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                },
                "bindings": {
                  "type": "array",
                  "items": {
                    "id": "Binding",
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                      },
                      "members": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                      },
                      "condition": {
                        "id": "Expr",
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                          },
                          "location": {
                            "type": "string",
                            "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                          },
                          "expression": {
                            "type": "string",
                            "description": "Textual representation of an expression in Common Expression Language syntax."
                          },
                          "description": {
                            "type": "string",
                            "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                          }
                        },
                        "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                      }
                    },
                    "description": "Associates `members` with a `role`."
                  },
                  "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
                },
                "auditConfigs": {
                  "type": "array",
                  "items": {
                    "id": "AuditConfig",
                    "type": "object",
                    "properties": {
                      "service": {
                        "type": "string",
                        "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                      },
                      "auditLogConfigs": {
                        "type": "array",
                        "items": {
                          "id": "AuditLogConfig",
                          "type": "object",
                          "properties": {
                            "logType": {
                              "enum": [
                                "LOG_TYPE_UNSPECIFIED",
                                "ADMIN_READ",
                                "DATA_WRITE",
                                "DATA_READ"
                              ],
                              "type": "string",
                              "description": "The log type that this config enables.",
                              "enumDescriptions": [
                                "Default case. Should never be this.",
                                "Admin reads. Example: CloudIAM getIamPolicy",
                                "Data writes. Example: CloudSQL Users create",
                                "Data reads. Example: CloudSQL Users list"
                              ]
                            },
                            "exemptedMembers": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                            }
                          },
                          "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                        },
                        "description": "The configuration for logging of each type of permission."
                      }
                    },
                    "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
                  },
                  "description": "Specifies cloud audit logging configuration for this policy."
                }
              },
              "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
            },
            "updateMask": {
              "type": "string",
              "format": "google-fieldmask",
              "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`"
            }
          },
          "description": "Request message for `SetIamPolicy` method."
        }
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            },
            "auditConfigs": {
              "type": "array",
              "items": {
                "id": "AuditConfig",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                  },
                  "auditLogConfigs": {
                    "type": "array",
                    "items": {
                      "id": "AuditLogConfig",
                      "type": "object",
                      "properties": {
                        "logType": {
                          "enum": [
                            "LOG_TYPE_UNSPECIFIED",
                            "ADMIN_READ",
                            "DATA_WRITE",
                            "DATA_READ"
                          ],
                          "type": "string",
                          "description": "The log type that this config enables.",
                          "enumDescriptions": [
                            "Default case. Should never be this.",
                            "Admin reads. Example: CloudIAM getIamPolicy",
                            "Data writes. Example: CloudSQL Users create",
                            "Data reads. Example: CloudSQL Users list"
                          ]
                        },
                        "exemptedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                        }
                      },
                      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                    },
                    "description": "The configuration for logging of each type of permission."
                  }
                },
                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
              },
              "description": "Specifies cloud audit logging configuration for this policy."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  cloudresourcemanager.folders.testIamPermissions:
    description: |-
      Returns permissions that a caller has on the specified folder. The `resource` field should be the folder's resource name, for example: "folders/1234". There are no permissions required for making this API call.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/folders/testIamPermissions
    example:
      inputs: [
        {
          "id": "TestIamPermissionsRequest",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
            }
          },
          "description": "Request message for `TestIamPermissions` method."
        }
      ]
      outputs: [
        {
          "id": "TestIamPermissionsResponse",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
            }
          },
          "description": "Response message for `TestIamPermissions` method."
        }
      ]
  cloudresourcemanager.folders.undelete:
    description: |-
      Cancels the deletion request for a folder. This method may be called on a folder in any state. If the folder is in the ACTIVE state the result will be a no-op success. In order to succeed, the folder's parent must be in the ACTIVE state. In addition, reintroducing the folder into the tree must not violate folder naming, height, and fanout constraints described in the CreateFolder documentation. The caller must have `resourcemanager.folders.undelete` permission on the identified folder.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/folders/undelete
    example:
      inputs: [
        {
          "id": "UndeleteFolderRequest",
          "type": "object",
          "properties": {},
          "description": "The UndeleteFolder request message."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  cloudresourcemanager.liens.create:
    description: |-
      Create a Lien which applies to the resource denoted by the `parent` field. Callers of this method will require permission on the `parent` resource. For example, applying to `projects/1234` requires permission `resourcemanager.projects.updateLiens`. NOTE: Some resources may limit the number of Liens which may be applied.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/liens/create
    example:
      inputs: [
        {
          "id": "Lien",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "A system-generated unique identifier for this Lien. Example: `liens/1234abcd`"
            },
            "origin": {
              "type": "string",
              "description": "A stable, user-visible/meaningful string identifying the origin of the Lien, intended to be inspected programmatically. Maximum length of 200 characters. Example: 'compute.googleapis.com'"
            },
            "parent": {
              "type": "string",
              "description": "A reference to the resource this Lien is attached to. The server will validate the parent against those for which Liens are supported. Example: `projects/1234`"
            },
            "reason": {
              "type": "string",
              "description": "Concise user-visible strings indicating why an action cannot be performed on a resource. Maximum length of 200 characters. Example: 'Holds production API key'"
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The creation time of this Lien."
            },
            "restrictions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The types of operations which should be blocked as a result of this Lien. Each value should correspond to an IAM permission. The server will validate the permissions against those for which Liens are supported. An empty list is meaningless and will be rejected. Example: ['resourcemanager.projects.delete']"
            }
          },
          "description": "A Lien represents an encumbrance on the actions that can be performed on a resource."
        }
      ]
      outputs: [
        {}
      ]
  cloudresourcemanager.liens.delete:
    description: |-
      Delete a Lien by `name`. Callers of this method will require permission on the `parent` resource. For example, a Lien with a `parent` of `projects/1234` requires permission `resourcemanager.projects.updateLiens`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/liens/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  cloudresourcemanager.liens.get:
    description: |-
      Retrieve a Lien by `name`. Callers of this method will require permission on the `parent` resource. For example, a Lien with a `parent` of `projects/1234` requires permission `resourcemanager.projects.get`
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/liens/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  cloudresourcemanager.liens.list:
    description: |-
      List all Liens applied to the `parent` resource. Callers of this method will require permission on the `parent` resource. For example, a Lien with a `parent` of `projects/1234` requires permission `resourcemanager.projects.get`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/liens/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListLiensResponse",
          "type": "object",
          "properties": {
            "liens": {
              "type": "array",
              "items": {
                "id": "Lien",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "A system-generated unique identifier for this Lien. Example: `liens/1234abcd`"
                  },
                  "origin": {
                    "type": "string",
                    "description": "A stable, user-visible/meaningful string identifying the origin of the Lien, intended to be inspected programmatically. Maximum length of 200 characters. Example: 'compute.googleapis.com'"
                  },
                  "parent": {
                    "type": "string",
                    "description": "A reference to the resource this Lien is attached to. The server will validate the parent against those for which Liens are supported. Example: `projects/1234`"
                  },
                  "reason": {
                    "type": "string",
                    "description": "Concise user-visible strings indicating why an action cannot be performed on a resource. Maximum length of 200 characters. Example: 'Holds production API key'"
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The creation time of this Lien."
                  },
                  "restrictions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The types of operations which should be blocked as a result of this Lien. Each value should correspond to an IAM permission. The server will validate the permissions against those for which Liens are supported. An empty list is meaningless and will be rejected. Example: ['resourcemanager.projects.delete']"
                  }
                },
                "description": "A Lien represents an encumbrance on the actions that can be performed on a resource."
              },
              "description": "A list of Liens."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
            }
          },
          "description": "The response message for Liens.ListLiens."
        }
      ]
  cloudresourcemanager.operations.get:
    description: |-
      Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/operations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  cloudresourcemanager.organizations.get:
    description: |-
      Fetches an organization resource identified by the specified resource name.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/organizations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Organization",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. A checksum computed by the server based on the current value of the Organization resource. This may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding."
            },
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The resource name of the organization. This is the organization's relative path in the API. Its format is \"organizations/[organization_id]\". For example, \"organizations/1234\"."
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "ACTIVE",
                "DELETE_REQUESTED"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. The organization's current lifecycle state.",
              "enumDescriptions": [
                "Unspecified state. This is only useful for distinguishing unset values.",
                "The normal and active state.",
                "The organization has been marked for deletion by the user."
              ]
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Timestamp when the Organization was created."
            },
            "deleteTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Timestamp when the Organization was requested for deletion."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Timestamp when the Organization was last modified."
            },
            "displayName": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. A human-readable string that refers to the organization in the Google Cloud Console. This string is set by the server and cannot be changed. The string will be set to the primary domain (for example, \"google.com\") of the Google Workspace customer that owns the organization."
            },
            "directoryCustomerId": {
              "type": "string",
              "description": "Immutable. The G Suite / Workspace customer id used in the Directory API."
            }
          },
          "description": "The root node in the resource hierarchy to which a particular entity's (a company, for example) resources belong."
        }
      ]
  cloudresourcemanager.organizations.getIamPolicy:
    description: |-
      Gets the access control policy for an organization resource. The policy may be empty if no such policy or resource exists. The `resource` field should be the organization's resource name, for example: "organizations/123". Authorization requires the IAM permission `resourcemanager.organizations.getIamPolicy` on the specified organization.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/organizations/getIamPolicy
    example:
      inputs: [
        {
          "id": "GetIamPolicyRequest",
          "type": "object",
          "properties": {
            "options": {
              "id": "GetPolicyOptions",
              "type": "object",
              "properties": {
                "requestedPolicyVersion": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                }
              },
              "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`."
            }
          },
          "description": "Request message for `GetIamPolicy` method."
        }
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            },
            "auditConfigs": {
              "type": "array",
              "items": {
                "id": "AuditConfig",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                  },
                  "auditLogConfigs": {
                    "type": "array",
                    "items": {
                      "id": "AuditLogConfig",
                      "type": "object",
                      "properties": {
                        "logType": {
                          "enum": [
                            "LOG_TYPE_UNSPECIFIED",
                            "ADMIN_READ",
                            "DATA_WRITE",
                            "DATA_READ"
                          ],
                          "type": "string",
                          "description": "The log type that this config enables.",
                          "enumDescriptions": [
                            "Default case. Should never be this.",
                            "Admin reads. Example: CloudIAM getIamPolicy",
                            "Data writes. Example: CloudSQL Users create",
                            "Data reads. Example: CloudSQL Users list"
                          ]
                        },
                        "exemptedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                        }
                      },
                      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                    },
                    "description": "The configuration for logging of each type of permission."
                  }
                },
                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
              },
              "description": "Specifies cloud audit logging configuration for this policy."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  cloudresourcemanager.organizations.search:
    description: |-
      Searches organization resources that are visible to the user and satisfy the specified filter. This method returns organizations in an unspecified order. New organizations do not necessarily appear at the end of the results, and may take a small amount of time to appear. Search will only return organizations on which the user has the permission `resourcemanager.organizations.get`
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/organizations/search
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "SearchOrganizationsResponse",
          "type": "object",
          "properties": {
            "nextPageToken": {
              "type": "string",
              "description": "A pagination token to be used to retrieve the next page of results. If the result is too large to fit within the page size specified in the request, this field will be set with a token that can be used to fetch the next page of results. If this field is empty, it indicates that this response contains the last page of results."
            },
            "organizations": {
              "type": "array",
              "items": {
                "id": "Organization",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. A checksum computed by the server based on the current value of the Organization resource. This may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding."
                  },
                  "name": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The resource name of the organization. This is the organization's relative path in the API. Its format is \"organizations/[organization_id]\". For example, \"organizations/1234\"."
                  },
                  "state": {
                    "enum": [
                      "STATE_UNSPECIFIED",
                      "ACTIVE",
                      "DELETE_REQUESTED"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The organization's current lifecycle state.",
                    "enumDescriptions": [
                      "Unspecified state. This is only useful for distinguishing unset values.",
                      "The normal and active state.",
                      "The organization has been marked for deletion by the user."
                    ]
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Timestamp when the Organization was created."
                  },
                  "deleteTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Timestamp when the Organization was requested for deletion."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Timestamp when the Organization was last modified."
                  },
                  "displayName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. A human-readable string that refers to the organization in the Google Cloud Console. This string is set by the server and cannot be changed. The string will be set to the primary domain (for example, \"google.com\") of the Google Workspace customer that owns the organization."
                  },
                  "directoryCustomerId": {
                    "type": "string",
                    "description": "Immutable. The G Suite / Workspace customer id used in the Directory API."
                  }
                },
                "description": "The root node in the resource hierarchy to which a particular entity's (a company, for example) resources belong."
              },
              "description": "The list of Organizations that matched the search query, possibly paginated."
            }
          },
          "description": "The response returned from the `SearchOrganizations` method."
        }
      ]
  cloudresourcemanager.organizations.setIamPolicy:
    description: |-
      Sets the access control policy on an organization resource. Replaces any existing policy. The `resource` field should be the organization's resource name, for example: "organizations/123". Authorization requires the IAM permission `resourcemanager.organizations.setIamPolicy` on the specified organization.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/organizations/setIamPolicy
    example:
      inputs: [
        {
          "id": "SetIamPolicyRequest",
          "type": "object",
          "properties": {
            "policy": {
              "id": "Policy",
              "type": "object",
              "properties": {
                "etag": {
                  "type": "string",
                  "format": "byte",
                  "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
                },
                "version": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                },
                "bindings": {
                  "type": "array",
                  "items": {
                    "id": "Binding",
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                      },
                      "members": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                      },
                      "condition": {
                        "id": "Expr",
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                          },
                          "location": {
                            "type": "string",
                            "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                          },
                          "expression": {
                            "type": "string",
                            "description": "Textual representation of an expression in Common Expression Language syntax."
                          },
                          "description": {
                            "type": "string",
                            "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                          }
                        },
                        "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                      }
                    },
                    "description": "Associates `members` with a `role`."
                  },
                  "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
                },
                "auditConfigs": {
                  "type": "array",
                  "items": {
                    "id": "AuditConfig",
                    "type": "object",
                    "properties": {
                      "service": {
                        "type": "string",
                        "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                      },
                      "auditLogConfigs": {
                        "type": "array",
                        "items": {
                          "id": "AuditLogConfig",
                          "type": "object",
                          "properties": {
                            "logType": {
                              "enum": [
                                "LOG_TYPE_UNSPECIFIED",
                                "ADMIN_READ",
                                "DATA_WRITE",
                                "DATA_READ"
                              ],
                              "type": "string",
                              "description": "The log type that this config enables.",
                              "enumDescriptions": [
                                "Default case. Should never be this.",
                                "Admin reads. Example: CloudIAM getIamPolicy",
                                "Data writes. Example: CloudSQL Users create",
                                "Data reads. Example: CloudSQL Users list"
                              ]
                            },
                            "exemptedMembers": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                            }
                          },
                          "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                        },
                        "description": "The configuration for logging of each type of permission."
                      }
                    },
                    "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
                  },
                  "description": "Specifies cloud audit logging configuration for this policy."
                }
              },
              "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
            },
            "updateMask": {
              "type": "string",
              "format": "google-fieldmask",
              "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`"
            }
          },
          "description": "Request message for `SetIamPolicy` method."
        }
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            },
            "auditConfigs": {
              "type": "array",
              "items": {
                "id": "AuditConfig",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                  },
                  "auditLogConfigs": {
                    "type": "array",
                    "items": {
                      "id": "AuditLogConfig",
                      "type": "object",
                      "properties": {
                        "logType": {
                          "enum": [
                            "LOG_TYPE_UNSPECIFIED",
                            "ADMIN_READ",
                            "DATA_WRITE",
                            "DATA_READ"
                          ],
                          "type": "string",
                          "description": "The log type that this config enables.",
                          "enumDescriptions": [
                            "Default case. Should never be this.",
                            "Admin reads. Example: CloudIAM getIamPolicy",
                            "Data writes. Example: CloudSQL Users create",
                            "Data reads. Example: CloudSQL Users list"
                          ]
                        },
                        "exemptedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                        }
                      },
                      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                    },
                    "description": "The configuration for logging of each type of permission."
                  }
                },
                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
              },
              "description": "Specifies cloud audit logging configuration for this policy."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  cloudresourcemanager.organizations.testIamPermissions:
    description: |-
      Returns the permissions that a caller has on the specified organization. The `resource` field should be the organization's resource name, for example: "organizations/123". There are no permissions required for making this API call.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/organizations/testIamPermissions
    example:
      inputs: [
        {
          "id": "TestIamPermissionsRequest",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
            }
          },
          "description": "Request message for `TestIamPermissions` method."
        }
      ]
      outputs: [
        {
          "id": "TestIamPermissionsResponse",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
            }
          },
          "description": "Response message for `TestIamPermissions` method."
        }
      ]
  cloudresourcemanager.projects.create:
    description: |-
      Request that a new project be created. The result is an `Operation` which can be used to track the creation process. This process usually takes a few seconds, but can sometimes take much longer. The tracking `Operation` is automatically deleted after a few hours, so there is no need to call `DeleteOperation`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/projects/create
    example:
      inputs: [
        {
          "id": "Project",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. A checksum computed by the server based on the current value of the Project resource. This may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding."
            },
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The unique resource name of the project. It is an int64 generated number prefixed by \"projects/\". Example: `projects/415104041262`"
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "ACTIVE",
                "DELETE_REQUESTED"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. The project lifecycle state.",
              "enumDescriptions": [
                "Unspecified state. This is only used/useful for distinguishing unset values.",
                "The normal and active state.",
                "The project has been marked for deletion by the user (by invoking DeleteProject) or by the system (Google Cloud Platform). This can generally be reversed by invoking UndeleteProject."
              ]
            },
            "labels": {
              "type": "object",
              "description": "Optional. The labels associated with this project. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: \\[a-z\\](\\[-a-z0-9\\]*\\[a-z0-9\\])?. Label values must be between 0 and 63 characters long and must conform to the regular expression (\\[a-z\\](\\[-a-z0-9\\]*\\[a-z0-9\\])?)?. No more than 256 labels can be associated with a given resource. Clients should store labels in a representation such as JSON that does not depend on specific characters being disallowed. Example: `\"myBusinessDimension\" : \"businessValue\"`",
              "additionalProperties": {
                "type": "string"
              }
            },
            "parent": {
              "type": "string",
              "description": "Optional. A reference to a parent Resource. eg., `organizations/123` or `folders/876`."
            },
            "projectId": {
              "type": "string",
              "description": "Immutable. The unique, user-assigned id of the project. It must be 6 to 30 lowercase ASCII letters, digits, or hyphens. It must start with a letter. Trailing hyphens are prohibited. Example: `tokyo-rain-123`"
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Creation time."
            },
            "deleteTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The time at which this resource was requested for deletion."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The most recent time this resource was modified."
            },
            "displayName": {
              "type": "string",
              "description": "Optional. A user-assigned display name of the project. When present it must be between 4 to 30 characters. Allowed characters are: lowercase and uppercase letters, numbers, hyphen, single-quote, double-quote, space, and exclamation point. Example: `My Project`"
            }
          },
          "description": "A project is a high-level Google Cloud entity. It is a container for ACLs, APIs, App Engine Apps, VMs, and other Google Cloud Platform resources."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  cloudresourcemanager.projects.delete:
    description: |-
      Marks the project identified by the specified `name` (for example, `projects/415104041262`) for deletion. This method will only affect the project if it has a lifecycle state of ACTIVE. This method changes the Project's lifecycle state from ACTIVE to DELETE_REQUESTED. The deletion starts at an unspecified time, at which point the Project is no longer accessible. Until the deletion completes, you can check the lifecycle state checked by retrieving the project with GetProject, and the project remains visible to ListProjects. However, you cannot update the project. After the deletion completes, the project is not retrievable by the GetProject, ListProjects, and SearchProjects methods. This method behaves idempotently, such that deleting a `DELETE_REQUESTED` project will not cause an error, but also won't do anything. The caller must have `resourcemanager.projects.delete` permissions for this project.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/projects/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  cloudresourcemanager.projects.get:
    description: |-
      Retrieves the project identified by the specified `name` (for example, `projects/415104041262`). The caller must have `resourcemanager.projects.get` permission for this project.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/projects/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  cloudresourcemanager.projects.getIamPolicy:
    description: |-
      Returns the IAM access control policy for the specified project. Permission is denied if the policy or the resource do not exist.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/projects/getIamPolicy
    example:
      inputs: [
        {
          "id": "GetIamPolicyRequest",
          "type": "object",
          "properties": {
            "options": {
              "id": "GetPolicyOptions",
              "type": "object",
              "properties": {
                "requestedPolicyVersion": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                }
              },
              "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`."
            }
          },
          "description": "Request message for `GetIamPolicy` method."
        }
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            },
            "auditConfigs": {
              "type": "array",
              "items": {
                "id": "AuditConfig",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                  },
                  "auditLogConfigs": {
                    "type": "array",
                    "items": {
                      "id": "AuditLogConfig",
                      "type": "object",
                      "properties": {
                        "logType": {
                          "enum": [
                            "LOG_TYPE_UNSPECIFIED",
                            "ADMIN_READ",
                            "DATA_WRITE",
                            "DATA_READ"
                          ],
                          "type": "string",
                          "description": "The log type that this config enables.",
                          "enumDescriptions": [
                            "Default case. Should never be this.",
                            "Admin reads. Example: CloudIAM getIamPolicy",
                            "Data writes. Example: CloudSQL Users create",
                            "Data reads. Example: CloudSQL Users list"
                          ]
                        },
                        "exemptedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                        }
                      },
                      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                    },
                    "description": "The configuration for logging of each type of permission."
                  }
                },
                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
              },
              "description": "Specifies cloud audit logging configuration for this policy."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  cloudresourcemanager.projects.list:
    description: |-
      Lists projects that are direct children of the specified folder or organization resource. `list()` provides a strongly consistent view of the projects underneath the specified parent resource. `list()` returns projects sorted based upon the (ascending) lexical ordering of their `display_name`. The caller must have `resourcemanager.projects.list` permission on the identified parent.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/projects/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListProjectsResponse",
          "type": "object",
          "properties": {
            "projects": {
              "type": "array",
              "items": {
                "id": "Project",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. A checksum computed by the server based on the current value of the Project resource. This may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding."
                  },
                  "name": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The unique resource name of the project. It is an int64 generated number prefixed by \"projects/\". Example: `projects/415104041262`"
                  },
                  "state": {
                    "enum": [
                      "STATE_UNSPECIFIED",
                      "ACTIVE",
                      "DELETE_REQUESTED"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The project lifecycle state.",
                    "enumDescriptions": [
                      "Unspecified state. This is only used/useful for distinguishing unset values.",
                      "The normal and active state.",
                      "The project has been marked for deletion by the user (by invoking DeleteProject) or by the system (Google Cloud Platform). This can generally be reversed by invoking UndeleteProject."
                    ]
                  },
                  "labels": {
                    "type": "object",
                    "description": "Optional. The labels associated with this project. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: \\[a-z\\](\\[-a-z0-9\\]*\\[a-z0-9\\])?. Label values must be between 0 and 63 characters long and must conform to the regular expression (\\[a-z\\](\\[-a-z0-9\\]*\\[a-z0-9\\])?)?. No more than 256 labels can be associated with a given resource. Clients should store labels in a representation such as JSON that does not depend on specific characters being disallowed. Example: `\"myBusinessDimension\" : \"businessValue\"`",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "parent": {
                    "type": "string",
                    "description": "Optional. A reference to a parent Resource. eg., `organizations/123` or `folders/876`."
                  },
                  "projectId": {
                    "type": "string",
                    "description": "Immutable. The unique, user-assigned id of the project. It must be 6 to 30 lowercase ASCII letters, digits, or hyphens. It must start with a letter. Trailing hyphens are prohibited. Example: `tokyo-rain-123`"
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Creation time."
                  },
                  "deleteTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The time at which this resource was requested for deletion."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The most recent time this resource was modified."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Optional. A user-assigned display name of the project. When present it must be between 4 to 30 characters. Allowed characters are: lowercase and uppercase letters, numbers, hyphen, single-quote, double-quote, space, and exclamation point. Example: `My Project`"
                  }
                },
                "description": "A project is a high-level Google Cloud entity. It is a container for ACLs, APIs, App Engine Apps, VMs, and other Google Cloud Platform resources."
              },
              "description": "The list of Projects under the parent. This list can be paginated."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Pagination token. If the result set is too large to fit in a single response, this token is returned. It encodes the position of the current result cursor. Feeding this value into a new list request with the `page_token` parameter gives the next page of the results. When `next_page_token` is not filled in, there is no next page and the list returned is the last page in the result set. Pagination tokens have a limited lifetime."
            }
          },
          "description": "A page of the response received from the ListProjects method. A paginated response where more pages are available has `next_page_token` set. This token can be used in a subsequent request to retrieve the next request page. NOTE: A response may contain fewer elements than the request `page_size` and still have a `next_page_token`."
        }
      ]
  cloudresourcemanager.projects.move:
    description: |-
      Move a project to another place in your resource hierarchy, under a new resource parent. Returns an operation which can be used to track the process of the project move workflow. Upon success, the `Operation.response` field will be populated with the moved project. The caller must have `resourcemanager.projects.update` permission on the project and have `resourcemanager.projects.move` permission on the project's current and proposed new parent. If project has no current parent, or it currently does not have an associated organization resource, you will also need the `resourcemanager.projects.setIamPolicy` permission in the project. 
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/projects/move
    example:
      inputs: [
        {
          "id": "MoveProjectRequest",
          "type": "object",
          "properties": {
            "destinationParent": {
              "type": "string",
              "description": "Required. The new parent to move the Project under."
            }
          },
          "description": "The request sent to MoveProject method."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  cloudresourcemanager.projects.patch:
    description: |-
      Updates the `display_name` and labels of the project identified by the specified `name` (for example, `projects/415104041262`). Deleting all labels requires an update mask for labels field. The caller must have `resourcemanager.projects.update` permission for this project.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/projects/patch
    example:
      inputs: [
        {
          "id": "Project",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. A checksum computed by the server based on the current value of the Project resource. This may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding."
            },
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The unique resource name of the project. It is an int64 generated number prefixed by \"projects/\". Example: `projects/415104041262`"
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "ACTIVE",
                "DELETE_REQUESTED"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. The project lifecycle state.",
              "enumDescriptions": [
                "Unspecified state. This is only used/useful for distinguishing unset values.",
                "The normal and active state.",
                "The project has been marked for deletion by the user (by invoking DeleteProject) or by the system (Google Cloud Platform). This can generally be reversed by invoking UndeleteProject."
              ]
            },
            "labels": {
              "type": "object",
              "description": "Optional. The labels associated with this project. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: \\[a-z\\](\\[-a-z0-9\\]*\\[a-z0-9\\])?. Label values must be between 0 and 63 characters long and must conform to the regular expression (\\[a-z\\](\\[-a-z0-9\\]*\\[a-z0-9\\])?)?. No more than 256 labels can be associated with a given resource. Clients should store labels in a representation such as JSON that does not depend on specific characters being disallowed. Example: `\"myBusinessDimension\" : \"businessValue\"`",
              "additionalProperties": {
                "type": "string"
              }
            },
            "parent": {
              "type": "string",
              "description": "Optional. A reference to a parent Resource. eg., `organizations/123` or `folders/876`."
            },
            "projectId": {
              "type": "string",
              "description": "Immutable. The unique, user-assigned id of the project. It must be 6 to 30 lowercase ASCII letters, digits, or hyphens. It must start with a letter. Trailing hyphens are prohibited. Example: `tokyo-rain-123`"
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Creation time."
            },
            "deleteTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The time at which this resource was requested for deletion."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The most recent time this resource was modified."
            },
            "displayName": {
              "type": "string",
              "description": "Optional. A user-assigned display name of the project. When present it must be between 4 to 30 characters. Allowed characters are: lowercase and uppercase letters, numbers, hyphen, single-quote, double-quote, space, and exclamation point. Example: `My Project`"
            }
          },
          "description": "A project is a high-level Google Cloud entity. It is a container for ACLs, APIs, App Engine Apps, VMs, and other Google Cloud Platform resources."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  cloudresourcemanager.projects.search:
    description: |-
      Search for projects that the caller has both `resourcemanager.projects.get` permission on, and also satisfy the specified query. This method returns projects in an unspecified order. This method is eventually consistent with project mutations; this means that a newly created project may not appear in the results or recent updates to an existing project may not be reflected in the results. To retrieve the latest state of a project, use the GetProject method.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/projects/search
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "SearchProjectsResponse",
          "type": "object",
          "properties": {
            "projects": {
              "type": "array",
              "items": {
                "id": "Project",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. A checksum computed by the server based on the current value of the Project resource. This may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding."
                  },
                  "name": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The unique resource name of the project. It is an int64 generated number prefixed by \"projects/\". Example: `projects/415104041262`"
                  },
                  "state": {
                    "enum": [
                      "STATE_UNSPECIFIED",
                      "ACTIVE",
                      "DELETE_REQUESTED"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The project lifecycle state.",
                    "enumDescriptions": [
                      "Unspecified state. This is only used/useful for distinguishing unset values.",
                      "The normal and active state.",
                      "The project has been marked for deletion by the user (by invoking DeleteProject) or by the system (Google Cloud Platform). This can generally be reversed by invoking UndeleteProject."
                    ]
                  },
                  "labels": {
                    "type": "object",
                    "description": "Optional. The labels associated with this project. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: \\[a-z\\](\\[-a-z0-9\\]*\\[a-z0-9\\])?. Label values must be between 0 and 63 characters long and must conform to the regular expression (\\[a-z\\](\\[-a-z0-9\\]*\\[a-z0-9\\])?)?. No more than 256 labels can be associated with a given resource. Clients should store labels in a representation such as JSON that does not depend on specific characters being disallowed. Example: `\"myBusinessDimension\" : \"businessValue\"`",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "parent": {
                    "type": "string",
                    "description": "Optional. A reference to a parent Resource. eg., `organizations/123` or `folders/876`."
                  },
                  "projectId": {
                    "type": "string",
                    "description": "Immutable. The unique, user-assigned id of the project. It must be 6 to 30 lowercase ASCII letters, digits, or hyphens. It must start with a letter. Trailing hyphens are prohibited. Example: `tokyo-rain-123`"
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Creation time."
                  },
                  "deleteTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The time at which this resource was requested for deletion."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The most recent time this resource was modified."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Optional. A user-assigned display name of the project. When present it must be between 4 to 30 characters. Allowed characters are: lowercase and uppercase letters, numbers, hyphen, single-quote, double-quote, space, and exclamation point. Example: `My Project`"
                  }
                },
                "description": "A project is a high-level Google Cloud entity. It is a container for ACLs, APIs, App Engine Apps, VMs, and other Google Cloud Platform resources."
              },
              "description": "The list of Projects that matched the list filter query. This list can be paginated."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Pagination token. If the result set is too large to fit in a single response, this token is returned. It encodes the position of the current result cursor. Feeding this value into a new list request with the `page_token` parameter gives the next page of the results. When `next_page_token` is not filled in, there is no next page and the list returned is the last page in the result set. Pagination tokens have a limited lifetime."
            }
          },
          "description": "A page of the response received from the SearchProjects method. A paginated response where more pages are available has `next_page_token` set. This token can be used in a subsequent request to retrieve the next request page."
        }
      ]
  cloudresourcemanager.projects.setIamPolicy:
    description: |-
      Sets the IAM access control policy for the specified project. CAUTION: This method will replace the existing policy, and cannot be used to append additional IAM settings. Note: Removing service accounts from policies or changing their roles can render services completely inoperable. It is important to understand how the service account is being used before removing or updating its roles. The following constraints apply when using `setIamPolicy()`: + Project does not support `allUsers` and `allAuthenticatedUsers` as `members` in a `Binding` of a `Policy`. + The owner role can be granted to a `user`, `serviceAccount`, or a group that is part of an organization. For example, group@myownpersonaldomain.com could be added as an owner to a project in the myownpersonaldomain.com organization, but not the examplepetstore.com organization. + Service accounts can be made owners of a project directly without any restrictions. However, to be added as an owner, a user must be invited using the Cloud Platform console and must accept the invitation. + A user cannot be granted the owner role using `setIamPolicy()`. The user must be granted the owner role using the Cloud Platform Console and must explicitly accept the invitation. + Invitations to grant the owner role cannot be sent using `setIamPolicy()`; they must be sent only using the Cloud Platform Console. + Membership changes that leave the project without any owners that have accepted the Terms of Service (ToS) will be rejected. + If the project is not part of an organization, there must be at least one owner who has accepted the Terms of Service (ToS) agreement in the policy. Calling `setIamPolicy()` to remove the last ToS-accepted owner from the policy will fail. This restriction also applies to legacy projects that no longer have owners who have accepted the ToS. Edits to IAM policies will be rejected until the lack of a ToS-accepting owner is rectified. + Calling this method requires enabling the App Engine Admin API.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/projects/setIamPolicy
    example:
      inputs: [
        {
          "id": "SetIamPolicyRequest",
          "type": "object",
          "properties": {
            "policy": {
              "id": "Policy",
              "type": "object",
              "properties": {
                "etag": {
                  "type": "string",
                  "format": "byte",
                  "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
                },
                "version": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                },
                "bindings": {
                  "type": "array",
                  "items": {
                    "id": "Binding",
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                      },
                      "members": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                      },
                      "condition": {
                        "id": "Expr",
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                          },
                          "location": {
                            "type": "string",
                            "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                          },
                          "expression": {
                            "type": "string",
                            "description": "Textual representation of an expression in Common Expression Language syntax."
                          },
                          "description": {
                            "type": "string",
                            "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                          }
                        },
                        "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                      }
                    },
                    "description": "Associates `members` with a `role`."
                  },
                  "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
                },
                "auditConfigs": {
                  "type": "array",
                  "items": {
                    "id": "AuditConfig",
                    "type": "object",
                    "properties": {
                      "service": {
                        "type": "string",
                        "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                      },
                      "auditLogConfigs": {
                        "type": "array",
                        "items": {
                          "id": "AuditLogConfig",
                          "type": "object",
                          "properties": {
                            "logType": {
                              "enum": [
                                "LOG_TYPE_UNSPECIFIED",
                                "ADMIN_READ",
                                "DATA_WRITE",
                                "DATA_READ"
                              ],
                              "type": "string",
                              "description": "The log type that this config enables.",
                              "enumDescriptions": [
                                "Default case. Should never be this.",
                                "Admin reads. Example: CloudIAM getIamPolicy",
                                "Data writes. Example: CloudSQL Users create",
                                "Data reads. Example: CloudSQL Users list"
                              ]
                            },
                            "exemptedMembers": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                            }
                          },
                          "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                        },
                        "description": "The configuration for logging of each type of permission."
                      }
                    },
                    "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
                  },
                  "description": "Specifies cloud audit logging configuration for this policy."
                }
              },
              "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
            },
            "updateMask": {
              "type": "string",
              "format": "google-fieldmask",
              "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`"
            }
          },
          "description": "Request message for `SetIamPolicy` method."
        }
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            },
            "auditConfigs": {
              "type": "array",
              "items": {
                "id": "AuditConfig",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                  },
                  "auditLogConfigs": {
                    "type": "array",
                    "items": {
                      "id": "AuditLogConfig",
                      "type": "object",
                      "properties": {
                        "logType": {
                          "enum": [
                            "LOG_TYPE_UNSPECIFIED",
                            "ADMIN_READ",
                            "DATA_WRITE",
                            "DATA_READ"
                          ],
                          "type": "string",
                          "description": "The log type that this config enables.",
                          "enumDescriptions": [
                            "Default case. Should never be this.",
                            "Admin reads. Example: CloudIAM getIamPolicy",
                            "Data writes. Example: CloudSQL Users create",
                            "Data reads. Example: CloudSQL Users list"
                          ]
                        },
                        "exemptedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                        }
                      },
                      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                    },
                    "description": "The configuration for logging of each type of permission."
                  }
                },
                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
              },
              "description": "Specifies cloud audit logging configuration for this policy."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  cloudresourcemanager.projects.testIamPermissions:
    description: |-
      Returns permissions that a caller has on the specified project.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/projects/testIamPermissions
    example:
      inputs: [
        {
          "id": "TestIamPermissionsRequest",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
            }
          },
          "description": "Request message for `TestIamPermissions` method."
        }
      ]
      outputs: [
        {
          "id": "TestIamPermissionsResponse",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
            }
          },
          "description": "Response message for `TestIamPermissions` method."
        }
      ]
  cloudresourcemanager.projects.undelete:
    description: |-
      Restores the project identified by the specified `name` (for example, `projects/415104041262`). You can only use this method for a project that has a lifecycle state of DELETE_REQUESTED. After deletion starts, the project cannot be restored. The caller must have `resourcemanager.projects.undelete` permission for this project.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/projects/undelete
    example:
      inputs: [
        {
          "id": "UndeleteProjectRequest",
          "type": "object",
          "properties": {},
          "description": "The request sent to the UndeleteProject method."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  cloudresourcemanager.tagBindings.create:
    description: |-
      Creates a TagBinding between a TagValue and a cloud resource (currently project, folder, or organization).
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/tagBindings/create
    example:
      inputs: [
        {
          "id": "TagBinding",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The name of the TagBinding. This is a String of the form: `tagBindings/{full-resource-name}/{tag-value-name}` (e.g. `tagBindings/%2F%2Fcloudresourcemanager.googleapis.com%2Fprojects%2F123/tagValues/456`)."
            },
            "parent": {
              "type": "string",
              "description": "The full resource name of the resource the TagValue is bound to. E.g. `//cloudresourcemanager.googleapis.com/projects/123`"
            },
            "tagValue": {
              "type": "string",
              "description": "The TagValue of the TagBinding. Must be of the form `tagValues/456`."
            }
          },
          "description": "A TagBinding represents a connection between a TagValue and a cloud resource (currently project, folder, or organization). Once a TagBinding is created, the TagValue is applied to all the descendants of the cloud resource."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  cloudresourcemanager.tagBindings.delete:
    description: |-
      Deletes a TagBinding.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/tagBindings/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  cloudresourcemanager.tagBindings.list:
    description: |-
      Lists the TagBindings for the given cloud resource, as specified with `parent`. NOTE: The `parent` field is expected to be a full resource name: https://cloud.google.com/apis/design/resource_names#full_resource_name
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/tagBindings/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListTagBindingsResponse",
          "type": "object",
          "properties": {
            "tagBindings": {
              "type": "array",
              "items": {
                "id": "TagBinding",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The name of the TagBinding. This is a String of the form: `tagBindings/{full-resource-name}/{tag-value-name}` (e.g. `tagBindings/%2F%2Fcloudresourcemanager.googleapis.com%2Fprojects%2F123/tagValues/456`)."
                  },
                  "parent": {
                    "type": "string",
                    "description": "The full resource name of the resource the TagValue is bound to. E.g. `//cloudresourcemanager.googleapis.com/projects/123`"
                  },
                  "tagValue": {
                    "type": "string",
                    "description": "The TagValue of the TagBinding. Must be of the form `tagValues/456`."
                  }
                },
                "description": "A TagBinding represents a connection between a TagValue and a cloud resource (currently project, folder, or organization). Once a TagBinding is created, the TagValue is applied to all the descendants of the cloud resource."
              },
              "description": "A possibly paginated list of TagBindings for the specified resource."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Pagination token. If the result set is too large to fit in a single response, this token is returned. It encodes the position of the current result cursor. Feeding this value into a new list request with the `page_token` parameter gives the next page of the results. When `next_page_token` is not filled in, there is no next page and the list returned is the last page in the result set. Pagination tokens have a limited lifetime."
            }
          },
          "description": "The ListTagBindings response."
        }
      ]
  cloudresourcemanager.tagKeys.create:
    description: |-
      Creates a new TagKey. If another request with the same parameters is sent while the original request is in process, the second request will receive an error. A maximum of 300 TagKeys can exist under a parent at any given time.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/tagKeys/create
    example:
      inputs: [
        {
          "id": "TagKey",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "Optional. Entity tag which users can pass to prevent race conditions. This field is always set in server responses. See UpdateTagKeyRequest for details."
            },
            "name": {
              "type": "string",
              "description": "Immutable. The resource name for a TagKey. Must be in the format `tagKeys/{tag_key_id}`, where `tag_key_id` is the generated numeric id for the TagKey."
            },
            "parent": {
              "type": "string",
              "description": "Immutable. The resource name of the new TagKey's parent. Must be of the form `organizations/{org_id}`."
            },
            "shortName": {
              "type": "string",
              "description": "Required. Immutable. The user friendly name for a TagKey. The short name should be unique for TagKeys within the same tag namespace. The short name must be 1-63 characters, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between."
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Creation time."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Update time."
            },
            "description": {
              "type": "string",
              "description": "Optional. User-assigned description of the TagKey. Must not exceed 256 characters. Read-write."
            },
            "namespacedName": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Immutable. Namespaced name of the TagKey."
            }
          },
          "description": "A TagKey, used to group a set of TagValues."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  cloudresourcemanager.tagKeys.delete:
    description: |-
      Deletes a TagKey. The TagKey cannot be deleted if it has any child TagValues.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/tagKeys/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  cloudresourcemanager.tagKeys.get:
    description: |-
      Retrieves a TagKey. This method will return `PERMISSION_DENIED` if the key does not exist or the user does not have permission to view it.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/tagKeys/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  cloudresourcemanager.tagKeys.getIamPolicy:
    description: |-
      Gets the access control policy for a TagKey. The returned policy may be empty if no such policy or resource exists. The `resource` field should be the TagKey's resource name. For example, "tagKeys/1234". The caller must have `cloudresourcemanager.googleapis.com/tagKeys.getIamPolicy` permission on the specified TagKey.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/tagKeys/getIamPolicy
    example:
      inputs: [
        {
          "id": "GetIamPolicyRequest",
          "type": "object",
          "properties": {
            "options": {
              "id": "GetPolicyOptions",
              "type": "object",
              "properties": {
                "requestedPolicyVersion": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                }
              },
              "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`."
            }
          },
          "description": "Request message for `GetIamPolicy` method."
        }
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            },
            "auditConfigs": {
              "type": "array",
              "items": {
                "id": "AuditConfig",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                  },
                  "auditLogConfigs": {
                    "type": "array",
                    "items": {
                      "id": "AuditLogConfig",
                      "type": "object",
                      "properties": {
                        "logType": {
                          "enum": [
                            "LOG_TYPE_UNSPECIFIED",
                            "ADMIN_READ",
                            "DATA_WRITE",
                            "DATA_READ"
                          ],
                          "type": "string",
                          "description": "The log type that this config enables.",
                          "enumDescriptions": [
                            "Default case. Should never be this.",
                            "Admin reads. Example: CloudIAM getIamPolicy",
                            "Data writes. Example: CloudSQL Users create",
                            "Data reads. Example: CloudSQL Users list"
                          ]
                        },
                        "exemptedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                        }
                      },
                      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                    },
                    "description": "The configuration for logging of each type of permission."
                  }
                },
                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
              },
              "description": "Specifies cloud audit logging configuration for this policy."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  cloudresourcemanager.tagKeys.list:
    description: |-
      Lists all TagKeys for a parent resource.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/tagKeys/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListTagKeysResponse",
          "type": "object",
          "properties": {
            "tagKeys": {
              "type": "array",
              "items": {
                "id": "TagKey",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "description": "Optional. Entity tag which users can pass to prevent race conditions. This field is always set in server responses. See UpdateTagKeyRequest for details."
                  },
                  "name": {
                    "type": "string",
                    "description": "Immutable. The resource name for a TagKey. Must be in the format `tagKeys/{tag_key_id}`, where `tag_key_id` is the generated numeric id for the TagKey."
                  },
                  "parent": {
                    "type": "string",
                    "description": "Immutable. The resource name of the new TagKey's parent. Must be of the form `organizations/{org_id}`."
                  },
                  "shortName": {
                    "type": "string",
                    "description": "Required. Immutable. The user friendly name for a TagKey. The short name should be unique for TagKeys within the same tag namespace. The short name must be 1-63 characters, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Creation time."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Update time."
                  },
                  "description": {
                    "type": "string",
                    "description": "Optional. User-assigned description of the TagKey. Must not exceed 256 characters. Read-write."
                  },
                  "namespacedName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Immutable. Namespaced name of the TagKey."
                  }
                },
                "description": "A TagKey, used to group a set of TagValues."
              },
              "description": "List of TagKeys that live under the specified parent in the request."
            },
            "nextPageToken": {
              "type": "string",
              "description": "A pagination token returned from a previous call to `ListTagKeys` that indicates from where listing should continue."
            }
          },
          "description": "The ListTagKeys response message."
        }
      ]
  cloudresourcemanager.tagKeys.patch:
    description: |-
      Updates the attributes of the TagKey resource.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/tagKeys/patch
    example:
      inputs: [
        {
          "id": "TagKey",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "Optional. Entity tag which users can pass to prevent race conditions. This field is always set in server responses. See UpdateTagKeyRequest for details."
            },
            "name": {
              "type": "string",
              "description": "Immutable. The resource name for a TagKey. Must be in the format `tagKeys/{tag_key_id}`, where `tag_key_id` is the generated numeric id for the TagKey."
            },
            "parent": {
              "type": "string",
              "description": "Immutable. The resource name of the new TagKey's parent. Must be of the form `organizations/{org_id}`."
            },
            "shortName": {
              "type": "string",
              "description": "Required. Immutable. The user friendly name for a TagKey. The short name should be unique for TagKeys within the same tag namespace. The short name must be 1-63 characters, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between."
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Creation time."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Update time."
            },
            "description": {
              "type": "string",
              "description": "Optional. User-assigned description of the TagKey. Must not exceed 256 characters. Read-write."
            },
            "namespacedName": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Immutable. Namespaced name of the TagKey."
            }
          },
          "description": "A TagKey, used to group a set of TagValues."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  cloudresourcemanager.tagKeys.setIamPolicy:
    description: |-
      Sets the access control policy on a TagKey, replacing any existing policy. The `resource` field should be the TagKey's resource name. For example, "tagKeys/1234". The caller must have `resourcemanager.tagKeys.setIamPolicy` permission on the identified tagValue.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/tagKeys/setIamPolicy
    example:
      inputs: [
        {
          "id": "SetIamPolicyRequest",
          "type": "object",
          "properties": {
            "policy": {
              "id": "Policy",
              "type": "object",
              "properties": {
                "etag": {
                  "type": "string",
                  "format": "byte",
                  "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
                },
                "version": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                },
                "bindings": {
                  "type": "array",
                  "items": {
                    "id": "Binding",
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                      },
                      "members": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                      },
                      "condition": {
                        "id": "Expr",
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                          },
                          "location": {
                            "type": "string",
                            "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                          },
                          "expression": {
                            "type": "string",
                            "description": "Textual representation of an expression in Common Expression Language syntax."
                          },
                          "description": {
                            "type": "string",
                            "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                          }
                        },
                        "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                      }
                    },
                    "description": "Associates `members` with a `role`."
                  },
                  "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
                },
                "auditConfigs": {
                  "type": "array",
                  "items": {
                    "id": "AuditConfig",
                    "type": "object",
                    "properties": {
                      "service": {
                        "type": "string",
                        "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                      },
                      "auditLogConfigs": {
                        "type": "array",
                        "items": {
                          "id": "AuditLogConfig",
                          "type": "object",
                          "properties": {
                            "logType": {
                              "enum": [
                                "LOG_TYPE_UNSPECIFIED",
                                "ADMIN_READ",
                                "DATA_WRITE",
                                "DATA_READ"
                              ],
                              "type": "string",
                              "description": "The log type that this config enables.",
                              "enumDescriptions": [
                                "Default case. Should never be this.",
                                "Admin reads. Example: CloudIAM getIamPolicy",
                                "Data writes. Example: CloudSQL Users create",
                                "Data reads. Example: CloudSQL Users list"
                              ]
                            },
                            "exemptedMembers": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                            }
                          },
                          "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                        },
                        "description": "The configuration for logging of each type of permission."
                      }
                    },
                    "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
                  },
                  "description": "Specifies cloud audit logging configuration for this policy."
                }
              },
              "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
            },
            "updateMask": {
              "type": "string",
              "format": "google-fieldmask",
              "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`"
            }
          },
          "description": "Request message for `SetIamPolicy` method."
        }
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            },
            "auditConfigs": {
              "type": "array",
              "items": {
                "id": "AuditConfig",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                  },
                  "auditLogConfigs": {
                    "type": "array",
                    "items": {
                      "id": "AuditLogConfig",
                      "type": "object",
                      "properties": {
                        "logType": {
                          "enum": [
                            "LOG_TYPE_UNSPECIFIED",
                            "ADMIN_READ",
                            "DATA_WRITE",
                            "DATA_READ"
                          ],
                          "type": "string",
                          "description": "The log type that this config enables.",
                          "enumDescriptions": [
                            "Default case. Should never be this.",
                            "Admin reads. Example: CloudIAM getIamPolicy",
                            "Data writes. Example: CloudSQL Users create",
                            "Data reads. Example: CloudSQL Users list"
                          ]
                        },
                        "exemptedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                        }
                      },
                      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                    },
                    "description": "The configuration for logging of each type of permission."
                  }
                },
                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
              },
              "description": "Specifies cloud audit logging configuration for this policy."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  cloudresourcemanager.tagKeys.testIamPermissions:
    description: |-
      Returns permissions that a caller has on the specified TagKey. The `resource` field should be the TagKey's resource name. For example, "tagKeys/1234". There are no permissions required for making this API call.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/tagKeys/testIamPermissions
    example:
      inputs: [
        {
          "id": "TestIamPermissionsRequest",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
            }
          },
          "description": "Request message for `TestIamPermissions` method."
        }
      ]
      outputs: [
        {
          "id": "TestIamPermissionsResponse",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
            }
          },
          "description": "Response message for `TestIamPermissions` method."
        }
      ]
  cloudresourcemanager.tagValues.create:
    description: |-
      Creates a TagValue as a child of the specified TagKey. If a another request with the same parameters is sent while the original request is in process the second request will receive an error. A maximum of 300 TagValues can exist under a TagKey at any given time.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/tagValues/create
    example:
      inputs: [
        {
          "id": "TagValue",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "Optional. Entity tag which users can pass to prevent race conditions. This field is always set in server responses. See UpdateTagValueRequest for details."
            },
            "name": {
              "type": "string",
              "description": "Immutable. Resource name for TagValue in the format `tagValues/456`."
            },
            "parent": {
              "type": "string",
              "description": "Immutable. The resource name of the new TagValue's parent TagKey. Must be of the form `tagKeys/{tag_key_id}`."
            },
            "shortName": {
              "type": "string",
              "description": "Required. Immutable. User-assigned short name for TagValue. The short name should be unique for TagValues within the same parent TagKey. The short name must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between."
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Creation time."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Update time."
            },
            "description": {
              "type": "string",
              "description": "Optional. User-assigned description of the TagValue. Must not exceed 256 characters. Read-write."
            },
            "namespacedName": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Namespaced name of the TagValue. Must be in the format `{organization_id}/{tag_key_short_name}/{short_name}`."
            }
          },
          "description": "A TagValue is a child of a particular TagKey. This is used to group cloud resources for the purpose of controlling them using policies."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  cloudresourcemanager.tagValues.delete:
    description: |-
      Deletes a TagValue. The TagValue cannot have any bindings when it is deleted.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/tagValues/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  cloudresourcemanager.tagValues.get:
    description: |-
      Retrieves TagValue. If the TagValue or namespaced name does not exist, or if the user does not have permission to view it, this method will return `PERMISSION_DENIED`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/tagValues/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  cloudresourcemanager.tagValues.getIamPolicy:
    description: |-
      Gets the access control policy for a TagValue. The returned policy may be empty if no such policy or resource exists. The `resource` field should be the TagValue's resource name. For example: `tagValues/1234`. The caller must have the `cloudresourcemanager.googleapis.com/tagValues.getIamPolicy` permission on the identified TagValue to get the access control policy.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/tagValues/getIamPolicy
    example:
      inputs: [
        {
          "id": "GetIamPolicyRequest",
          "type": "object",
          "properties": {
            "options": {
              "id": "GetPolicyOptions",
              "type": "object",
              "properties": {
                "requestedPolicyVersion": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                }
              },
              "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`."
            }
          },
          "description": "Request message for `GetIamPolicy` method."
        }
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            },
            "auditConfigs": {
              "type": "array",
              "items": {
                "id": "AuditConfig",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                  },
                  "auditLogConfigs": {
                    "type": "array",
                    "items": {
                      "id": "AuditLogConfig",
                      "type": "object",
                      "properties": {
                        "logType": {
                          "enum": [
                            "LOG_TYPE_UNSPECIFIED",
                            "ADMIN_READ",
                            "DATA_WRITE",
                            "DATA_READ"
                          ],
                          "type": "string",
                          "description": "The log type that this config enables.",
                          "enumDescriptions": [
                            "Default case. Should never be this.",
                            "Admin reads. Example: CloudIAM getIamPolicy",
                            "Data writes. Example: CloudSQL Users create",
                            "Data reads. Example: CloudSQL Users list"
                          ]
                        },
                        "exemptedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                        }
                      },
                      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                    },
                    "description": "The configuration for logging of each type of permission."
                  }
                },
                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
              },
              "description": "Specifies cloud audit logging configuration for this policy."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  cloudresourcemanager.tagValues.list:
    description: |-
      Lists all TagValues for a specific TagKey.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/tagValues/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListTagValuesResponse",
          "type": "object",
          "properties": {
            "tagValues": {
              "type": "array",
              "items": {
                "id": "TagValue",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "description": "Optional. Entity tag which users can pass to prevent race conditions. This field is always set in server responses. See UpdateTagValueRequest for details."
                  },
                  "name": {
                    "type": "string",
                    "description": "Immutable. Resource name for TagValue in the format `tagValues/456`."
                  },
                  "parent": {
                    "type": "string",
                    "description": "Immutable. The resource name of the new TagValue's parent TagKey. Must be of the form `tagKeys/{tag_key_id}`."
                  },
                  "shortName": {
                    "type": "string",
                    "description": "Required. Immutable. User-assigned short name for TagValue. The short name should be unique for TagValues within the same parent TagKey. The short name must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Creation time."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Update time."
                  },
                  "description": {
                    "type": "string",
                    "description": "Optional. User-assigned description of the TagValue. Must not exceed 256 characters. Read-write."
                  },
                  "namespacedName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Namespaced name of the TagValue. Must be in the format `{organization_id}/{tag_key_short_name}/{short_name}`."
                  }
                },
                "description": "A TagValue is a child of a particular TagKey. This is used to group cloud resources for the purpose of controlling them using policies."
              },
              "description": "A possibly paginated list of TagValues that are direct descendants of the specified parent TagKey."
            },
            "nextPageToken": {
              "type": "string",
              "description": "A pagination token returned from a previous call to `ListTagValues` that indicates from where listing should continue. This is currently not used, but the server may at any point start supplying a valid token."
            }
          },
          "description": "The ListTagValues response."
        }
      ]
  cloudresourcemanager.tagValues.patch:
    description: |-
      Updates the attributes of the TagValue resource.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/tagValues/patch
    example:
      inputs: [
        {
          "id": "TagValue",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "Optional. Entity tag which users can pass to prevent race conditions. This field is always set in server responses. See UpdateTagValueRequest for details."
            },
            "name": {
              "type": "string",
              "description": "Immutable. Resource name for TagValue in the format `tagValues/456`."
            },
            "parent": {
              "type": "string",
              "description": "Immutable. The resource name of the new TagValue's parent TagKey. Must be of the form `tagKeys/{tag_key_id}`."
            },
            "shortName": {
              "type": "string",
              "description": "Required. Immutable. User-assigned short name for TagValue. The short name should be unique for TagValues within the same parent TagKey. The short name must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between."
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Creation time."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Update time."
            },
            "description": {
              "type": "string",
              "description": "Optional. User-assigned description of the TagValue. Must not exceed 256 characters. Read-write."
            },
            "namespacedName": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Namespaced name of the TagValue. Must be in the format `{organization_id}/{tag_key_short_name}/{short_name}`."
            }
          },
          "description": "A TagValue is a child of a particular TagKey. This is used to group cloud resources for the purpose of controlling them using policies."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  cloudresourcemanager.tagValues.setIamPolicy:
    description: |-
      Sets the access control policy on a TagValue, replacing any existing policy. The `resource` field should be the TagValue's resource name. For example: `tagValues/1234`. The caller must have `resourcemanager.tagValues.setIamPolicy` permission on the identified tagValue.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/tagValues/setIamPolicy
    example:
      inputs: [
        {
          "id": "SetIamPolicyRequest",
          "type": "object",
          "properties": {
            "policy": {
              "id": "Policy",
              "type": "object",
              "properties": {
                "etag": {
                  "type": "string",
                  "format": "byte",
                  "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
                },
                "version": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                },
                "bindings": {
                  "type": "array",
                  "items": {
                    "id": "Binding",
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                      },
                      "members": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                      },
                      "condition": {
                        "id": "Expr",
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                          },
                          "location": {
                            "type": "string",
                            "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                          },
                          "expression": {
                            "type": "string",
                            "description": "Textual representation of an expression in Common Expression Language syntax."
                          },
                          "description": {
                            "type": "string",
                            "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                          }
                        },
                        "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                      }
                    },
                    "description": "Associates `members` with a `role`."
                  },
                  "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
                },
                "auditConfigs": {
                  "type": "array",
                  "items": {
                    "id": "AuditConfig",
                    "type": "object",
                    "properties": {
                      "service": {
                        "type": "string",
                        "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                      },
                      "auditLogConfigs": {
                        "type": "array",
                        "items": {
                          "id": "AuditLogConfig",
                          "type": "object",
                          "properties": {
                            "logType": {
                              "enum": [
                                "LOG_TYPE_UNSPECIFIED",
                                "ADMIN_READ",
                                "DATA_WRITE",
                                "DATA_READ"
                              ],
                              "type": "string",
                              "description": "The log type that this config enables.",
                              "enumDescriptions": [
                                "Default case. Should never be this.",
                                "Admin reads. Example: CloudIAM getIamPolicy",
                                "Data writes. Example: CloudSQL Users create",
                                "Data reads. Example: CloudSQL Users list"
                              ]
                            },
                            "exemptedMembers": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                            }
                          },
                          "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                        },
                        "description": "The configuration for logging of each type of permission."
                      }
                    },
                    "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
                  },
                  "description": "Specifies cloud audit logging configuration for this policy."
                }
              },
              "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
            },
            "updateMask": {
              "type": "string",
              "format": "google-fieldmask",
              "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`"
            }
          },
          "description": "Request message for `SetIamPolicy` method."
        }
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            },
            "auditConfigs": {
              "type": "array",
              "items": {
                "id": "AuditConfig",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                  },
                  "auditLogConfigs": {
                    "type": "array",
                    "items": {
                      "id": "AuditLogConfig",
                      "type": "object",
                      "properties": {
                        "logType": {
                          "enum": [
                            "LOG_TYPE_UNSPECIFIED",
                            "ADMIN_READ",
                            "DATA_WRITE",
                            "DATA_READ"
                          ],
                          "type": "string",
                          "description": "The log type that this config enables.",
                          "enumDescriptions": [
                            "Default case. Should never be this.",
                            "Admin reads. Example: CloudIAM getIamPolicy",
                            "Data writes. Example: CloudSQL Users create",
                            "Data reads. Example: CloudSQL Users list"
                          ]
                        },
                        "exemptedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                        }
                      },
                      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                    },
                    "description": "The configuration for logging of each type of permission."
                  }
                },
                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
              },
              "description": "Specifies cloud audit logging configuration for this policy."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  cloudresourcemanager.tagValues.testIamPermissions:
    description: |-
      Returns permissions that a caller has on the specified TagValue. The `resource` field should be the TagValue's resource name. For example: `tagValues/1234`. There are no permissions required for making this API call.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/resource-manager/reference/rest/v3/tagValues/testIamPermissions
    example:
      inputs: [
        {
          "id": "TestIamPermissionsRequest",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
            }
          },
          "description": "Request message for `TestIamPermissions` method."
        }
      ]
      outputs: [
        {
          "id": "TestIamPermissionsResponse",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
            }
          },
          "description": "Response message for `TestIamPermissions` method."
        }
      ]