Product:
  name: GCP Database Migration Service
  versions: [1.0.0]
  package: google.gcp.databasemigration
  description: |-
    Database Migration Service
  link: https://cloud.google.com/database-migration
  contentType: json
Operations:
  projects.locations.connectionProfiles.create:
    description: |-
      Creates a new connection profile in a given project and location.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.connectionProfiles/create
    example:
      inputs: [
        {
          "id": "ConnectionProfile",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of this connection profile resource in the form of projects/{project}/locations/{location}/instances/{instance}."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "readOnly": true,
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "Output only. The error details in case of state FAILED."
            },
            "mysql": {
              "id": "MySqlConnectionProfile",
              "type": "object",
              "properties": {
                "ssl": {
                  "id": "SslConfig",
                  "type": "object",
                  "properties": {
                    "type": {
                      "enum": [
                        "SSL_TYPE_UNSPECIFIED",
                        "SERVER_ONLY",
                        "SERVER_CLIENT"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "description": "Output only. The ssl config type according to 'client_key', 'client_certificate' and 'ca_certificate'.",
                      "enumDescriptions": [
                        "Unspecified.",
                        "Only 'ca_certificate' specified.",
                        "Both server ('ca_certificate'), and client ('client_key', 'client_certificate') specified."
                      ]
                    },
                    "clientKey": {
                      "type": "string",
                      "description": "Input only. The unencrypted PKCS#1 or PKCS#8 PEM-encoded private key associated with the Client Certificate. If this field is used then the 'client_certificate' field is mandatory."
                    },
                    "caCertificate": {
                      "type": "string",
                      "description": "Required. Input only. The x509 PEM-encoded certificate of the CA that signed the source database server's certificate. The replica will use this certificate to verify it's connecting to the right host."
                    },
                    "clientCertificate": {
                      "type": "string",
                      "description": "Input only. The x509 PEM-encoded certificate that will be used by the replica to authenticate against the source database server.If this field is used then the 'client_key' field is mandatory."
                    }
                  },
                  "description": "SSL configuration for the destination to connect to the source database."
                },
                "host": {
                  "type": "string",
                  "description": "Required. The IP or hostname of the source MySQL database."
                },
                "port": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Required. The network port of the source MySQL database."
                },
                "password": {
                  "type": "string",
                  "description": "Required. Input only. The password for the user that Database Migration Service will be using to connect to the database. This field is not returned on request, and the value is encrypted when stored in Database Migration Service."
                },
                "username": {
                  "type": "string",
                  "description": "Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service."
                },
                "cloudSqlId": {
                  "type": "string",
                  "description": "If the source is a Cloud SQL database, use this field to provide the Cloud SQL instance ID of the source."
                },
                "passwordSet": {
                  "type": "boolean",
                  "readOnly": true,
                  "description": "Output only. Indicates If this connection profile password is stored."
                }
              },
              "description": "A MySQL database connection profile."
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "DRAFT",
                "CREATING",
                "READY",
                "UPDATING",
                "DELETING",
                "DELETED",
                "FAILED"
              ],
              "type": "string",
              "description": "The current connection profile state (e.g. DRAFT, READY, or FAILED).",
              "enumDescriptions": [
                "The state of the connection profile is unknown.",
                "The connection profile is in draft mode and fully editable.",
                "The connection profile is being created.",
                "The connection profile is ready.",
                "The connection profile is being updated.",
                "The connection profile is being deleted.",
                "The connection profile has been deleted.",
                "The last action on the connection profile failed."
              ]
            },
            "labels": {
              "type": "object",
              "description": "The resource labels for connection profile to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of \"key\": \"value\" pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }`.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "cloudsql": {
              "id": "CloudSqlConnectionProfile",
              "type": "object",
              "properties": {
                "publicIp": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. The Cloud SQL database instance's public IP."
                },
                "settings": {
                  "id": "CloudSqlSettings",
                  "type": "object",
                  "properties": {
                    "tier": {
                      "type": "string",
                      "description": "The tier (or machine type) for this instance, for example: `db-n1-standard-1` (MySQL instances) or `db-custom-1-3840` (PostgreSQL instances). For more information, see [Cloud SQL Instance Settings](https://cloud.google.com/sql/docs/mysql/instance-settings)."
                    },
                    "zone": {
                      "type": "string",
                      "description": "The Google Cloud Platform zone where your Cloud SQL datdabse instance is located."
                    },
                    "ipConfig": {
                      "id": "SqlIpConfig",
                      "type": "object",
                      "properties": {
                        "enableIpv4": {
                          "type": "boolean",
                          "description": "Whether the instance should be assigned an IPv4 address or not."
                        },
                        "requireSsl": {
                          "type": "boolean",
                          "description": "Whether SSL connections over IP should be enforced or not."
                        },
                        "privateNetwork": {
                          "type": "string",
                          "description": "The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, `/projects/myProject/global/networks/default`. This setting can be updated, but it cannot be removed after it is set."
                        },
                        "authorizedNetworks": {
                          "type": "array",
                          "items": {
                            "id": "SqlAclEntry",
                            "type": "object",
                            "properties": {
                              "ttl": {
                                "type": "string",
                                "format": "google-duration",
                                "description": "Input only. The time-to-leave of this access control entry."
                              },
                              "label": {
                                "type": "string",
                                "description": "A label to identify this entry."
                              },
                              "value": {
                                "type": "string",
                                "description": "The allowlisted value for the access control list."
                              },
                              "expireTime": {
                                "type": "string",
                                "format": "google-datetime",
                                "description": "The time when this access control entry expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example: `2012-11-15T16:19:00.094Z`."
                              }
                            },
                            "description": "An entry for an Access Control list."
                          },
                          "description": "The list of external networks that are allowed to connect to the instance using the IP. See https://en.wikipedia.org/wiki/CIDR_notation#CIDR_notation, also known as 'slash' notation (e.g. `192.168.100.0/24`)."
                        }
                      },
                      "description": "The settings for IP Management. This allows to enable or disable the instance IP and manage which external networks can connect to the instance. The IPv4 address cannot be disabled."
                    },
                    "sourceId": {
                      "type": "string",
                      "description": "The Database Migration Service source connection profile ID, in the format: `projects/my_project_name/locations/us-central1/connectionProfiles/connection_profile_ID`"
                    },
                    "collation": {
                      "type": "string",
                      "description": "The Cloud SQL default instance level collation."
                    },
                    "userLabels": {
                      "type": "object",
                      "description": "The resource labels for a Cloud SQL instance to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of \"key\": \"value\" pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"18kg\", \"count\": \"3\" }`.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "dataDiskType": {
                      "enum": [
                        "SQL_DATA_DISK_TYPE_UNSPECIFIED",
                        "PD_SSD",
                        "PD_HDD"
                      ],
                      "type": "string",
                      "description": "The type of storage: `PD_SSD` (default) or `PD_HDD`.",
                      "enumDescriptions": [
                        "Unspecified.",
                        "SSD disk.",
                        "HDD disk."
                      ]
                    },
                    "rootPassword": {
                      "type": "string",
                      "description": "Input only. Initial root password."
                    },
                    "databaseFlags": {
                      "type": "object",
                      "description": "The database flags passed to the Cloud SQL instance at startup. An object containing a list of \"key\": value pairs. Example: { \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "dataDiskSizeGb": {
                      "type": "string",
                      "format": "int64",
                      "description": "The storage capacity available to the database, in GB. The minimum (and default) size is 10GB."
                    },
                    "databaseVersion": {
                      "enum": [
                        "SQL_DATABASE_VERSION_UNSPECIFIED",
                        "MYSQL_5_6",
                        "MYSQL_5_7",
                        "POSTGRES_9_6",
                        "POSTGRES_11",
                        "POSTGRES_10",
                        "MYSQL_8_0",
                        "POSTGRES_12",
                        "POSTGRES_13"
                      ],
                      "type": "string",
                      "description": "The database engine type and version.",
                      "enumDescriptions": [
                        "Unspecified version.",
                        "MySQL 5.6.",
                        "MySQL 5.7.",
                        "PostgreSQL 9.6.",
                        "PostgreSQL 11.",
                        "PostgreSQL 10.",
                        "MySQL 8.0.",
                        "PostgreSQL 12.",
                        "PostgreSQL 13."
                      ]
                    },
                    "rootPasswordSet": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Output only. Indicates If this connection profile root password is stored."
                    },
                    "activationPolicy": {
                      "enum": [
                        "SQL_ACTIVATION_POLICY_UNSPECIFIED",
                        "ALWAYS",
                        "NEVER"
                      ],
                      "type": "string",
                      "description": "The activation policy specifies when the instance is activated; it is applicable only when the instance state is 'RUNNABLE'. Valid values: 'ALWAYS': The instance is on, and remains so even in the absence of connection requests. `NEVER`: The instance is off; it is not activated, even if a connection request arrives.",
                      "enumDescriptions": [
                        "unspecified policy.",
                        "The instance is always up and running.",
                        "The instance should never spin up."
                      ]
                    },
                    "autoStorageIncrease": {
                      "type": "boolean",
                      "description": "[default: ON] If you enable this setting, Cloud SQL checks your available storage every 30 seconds. If the available storage falls below a threshold size, Cloud SQL automatically adds additional storage capacity. If the available storage repeatedly falls below the threshold size, Cloud SQL continues to add storage until it reaches the maximum of 30 TB."
                    },
                    "storageAutoResizeLimit": {
                      "type": "string",
                      "format": "int64",
                      "description": "The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit."
                    }
                  },
                  "description": "Immutable. Metadata used to create the destination Cloud SQL database."
                },
                "privateIp": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. The Cloud SQL database instance's private IP."
                },
                "cloudSqlId": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. The Cloud SQL instance ID that this connection profile is associated with."
                }
              },
              "description": "A CloudSQL database connection profile."
            },
            "provider": {
              "enum": [
                "DATABASE_PROVIDER_UNSPECIFIED",
                "CLOUDSQL",
                "RDS"
              ],
              "type": "string",
              "description": "The database provider.",
              "enumDescriptions": [
                "The database provider is unknown.",
                "CloudSQL runs the database.",
                "RDS runs the database."
              ]
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The timestamp when the resource was created. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\"."
            },
            "postgresql": {
              "id": "PostgreSqlConnectionProfile",
              "type": "object",
              "properties": {
                "ssl": {
                  "id": "SslConfig",
                  "type": "object",
                  "properties": {
                    "type": {
                      "enum": [
                        "SSL_TYPE_UNSPECIFIED",
                        "SERVER_ONLY",
                        "SERVER_CLIENT"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "description": "Output only. The ssl config type according to 'client_key', 'client_certificate' and 'ca_certificate'.",
                      "enumDescriptions": [
                        "Unspecified.",
                        "Only 'ca_certificate' specified.",
                        "Both server ('ca_certificate'), and client ('client_key', 'client_certificate') specified."
                      ]
                    },
                    "clientKey": {
                      "type": "string",
                      "description": "Input only. The unencrypted PKCS#1 or PKCS#8 PEM-encoded private key associated with the Client Certificate. If this field is used then the 'client_certificate' field is mandatory."
                    },
                    "caCertificate": {
                      "type": "string",
                      "description": "Required. Input only. The x509 PEM-encoded certificate of the CA that signed the source database server's certificate. The replica will use this certificate to verify it's connecting to the right host."
                    },
                    "clientCertificate": {
                      "type": "string",
                      "description": "Input only. The x509 PEM-encoded certificate that will be used by the replica to authenticate against the source database server.If this field is used then the 'client_key' field is mandatory."
                    }
                  },
                  "description": "SSL configuration for the destination to connect to the source database."
                },
                "host": {
                  "type": "string",
                  "description": "Required. The IP or hostname of the source PostgreSQL database."
                },
                "port": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Required. The network port of the source PostgreSQL database."
                },
                "password": {
                  "type": "string",
                  "description": "Required. Input only. The password for the user that Database Migration Service will be using to connect to the database. This field is not returned on request, and the value is encrypted when stored in Database Migration Service."
                },
                "username": {
                  "type": "string",
                  "description": "Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service."
                },
                "cloudSqlId": {
                  "type": "string",
                  "description": "If the source is a Cloud SQL database, use this field to provide the Cloud SQL instance ID of the source."
                },
                "passwordSet": {
                  "type": "boolean",
                  "readOnly": true,
                  "description": "Output only. Indicates If this connection profile password is stored."
                }
              },
              "description": "A PostgreSQL database connection profile."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The timestamp when the resource was last updated. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\"."
            },
            "displayName": {
              "type": "string",
              "description": "The connection profile display name."
            }
          },
          "description": "A connection profile definition."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.connectionProfiles.delete:
    description: |-
      Deletes a single Database Migration Service connection profile. A connection profile can only be deleted if it is not in use by any active migration jobs.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.connectionProfiles/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.connectionProfiles.get:
    description: |-
      Gets details of a single connection profile.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.connectionProfiles/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.connectionProfiles.getIamPolicy:
    description: |-
      Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.connectionProfiles/getIamPolicy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            },
            "auditConfigs": {
              "type": "array",
              "items": {
                "id": "AuditConfig",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                  },
                  "auditLogConfigs": {
                    "type": "array",
                    "items": {
                      "id": "AuditLogConfig",
                      "type": "object",
                      "properties": {
                        "logType": {
                          "enum": [
                            "LOG_TYPE_UNSPECIFIED",
                            "ADMIN_READ",
                            "DATA_WRITE",
                            "DATA_READ"
                          ],
                          "type": "string",
                          "description": "The log type that this config enables.",
                          "enumDescriptions": [
                            "Default case. Should never be this.",
                            "Admin reads. Example: CloudIAM getIamPolicy",
                            "Data writes. Example: CloudSQL Users create",
                            "Data reads. Example: CloudSQL Users list"
                          ]
                        },
                        "exemptedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                        }
                      },
                      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                    },
                    "description": "The configuration for logging of each type of permission."
                  }
                },
                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
              },
              "description": "Specifies cloud audit logging configuration for this policy."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  projects.locations.connectionProfiles.list:
    description: |-
      Retrieve a list of all connection profiles in a given project and location.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.connectionProfiles/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListConnectionProfilesResponse",
          "type": "object",
          "properties": {
            "unreachable": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Locations that could not be reached."
            },
            "nextPageToken": {
              "type": "string",
              "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
            },
            "connectionProfiles": {
              "type": "array",
              "items": {
                "id": "ConnectionProfile",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of this connection profile resource in the form of projects/{project}/locations/{location}/instances/{instance}."
                  },
                  "error": {
                    "id": "Status",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The status code, which should be an enum value of google.rpc.Code."
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object. Contains field @type with type URL."
                          }
                        },
                        "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                      },
                      "message": {
                        "type": "string",
                        "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                      }
                    },
                    "description": "Output only. The error details in case of state FAILED."
                  },
                  "mysql": {
                    "id": "MySqlConnectionProfile",
                    "type": "object",
                    "properties": {
                      "ssl": {
                        "id": "SslConfig",
                        "type": "object",
                        "properties": {
                          "type": {
                            "enum": [
                              "SSL_TYPE_UNSPECIFIED",
                              "SERVER_ONLY",
                              "SERVER_CLIENT"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "description": "Output only. The ssl config type according to 'client_key', 'client_certificate' and 'ca_certificate'.",
                            "enumDescriptions": [
                              "Unspecified.",
                              "Only 'ca_certificate' specified.",
                              "Both server ('ca_certificate'), and client ('client_key', 'client_certificate') specified."
                            ]
                          },
                          "clientKey": {
                            "type": "string",
                            "description": "Input only. The unencrypted PKCS#1 or PKCS#8 PEM-encoded private key associated with the Client Certificate. If this field is used then the 'client_certificate' field is mandatory."
                          },
                          "caCertificate": {
                            "type": "string",
                            "description": "Required. Input only. The x509 PEM-encoded certificate of the CA that signed the source database server's certificate. The replica will use this certificate to verify it's connecting to the right host."
                          },
                          "clientCertificate": {
                            "type": "string",
                            "description": "Input only. The x509 PEM-encoded certificate that will be used by the replica to authenticate against the source database server.If this field is used then the 'client_key' field is mandatory."
                          }
                        },
                        "description": "SSL configuration for the destination to connect to the source database."
                      },
                      "host": {
                        "type": "string",
                        "description": "Required. The IP or hostname of the source MySQL database."
                      },
                      "port": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Required. The network port of the source MySQL database."
                      },
                      "password": {
                        "type": "string",
                        "description": "Required. Input only. The password for the user that Database Migration Service will be using to connect to the database. This field is not returned on request, and the value is encrypted when stored in Database Migration Service."
                      },
                      "username": {
                        "type": "string",
                        "description": "Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service."
                      },
                      "cloudSqlId": {
                        "type": "string",
                        "description": "If the source is a Cloud SQL database, use this field to provide the Cloud SQL instance ID of the source."
                      },
                      "passwordSet": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Output only. Indicates If this connection profile password is stored."
                      }
                    },
                    "description": "A MySQL database connection profile."
                  },
                  "state": {
                    "enum": [
                      "STATE_UNSPECIFIED",
                      "DRAFT",
                      "CREATING",
                      "READY",
                      "UPDATING",
                      "DELETING",
                      "DELETED",
                      "FAILED"
                    ],
                    "type": "string",
                    "description": "The current connection profile state (e.g. DRAFT, READY, or FAILED).",
                    "enumDescriptions": [
                      "The state of the connection profile is unknown.",
                      "The connection profile is in draft mode and fully editable.",
                      "The connection profile is being created.",
                      "The connection profile is ready.",
                      "The connection profile is being updated.",
                      "The connection profile is being deleted.",
                      "The connection profile has been deleted.",
                      "The last action on the connection profile failed."
                    ]
                  },
                  "labels": {
                    "type": "object",
                    "description": "The resource labels for connection profile to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of \"key\": \"value\" pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }`.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "cloudsql": {
                    "id": "CloudSqlConnectionProfile",
                    "type": "object",
                    "properties": {
                      "publicIp": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Output only. The Cloud SQL database instance's public IP."
                      },
                      "settings": {
                        "id": "CloudSqlSettings",
                        "type": "object",
                        "properties": {
                          "tier": {
                            "type": "string",
                            "description": "The tier (or machine type) for this instance, for example: `db-n1-standard-1` (MySQL instances) or `db-custom-1-3840` (PostgreSQL instances). For more information, see [Cloud SQL Instance Settings](https://cloud.google.com/sql/docs/mysql/instance-settings)."
                          },
                          "zone": {
                            "type": "string",
                            "description": "The Google Cloud Platform zone where your Cloud SQL datdabse instance is located."
                          },
                          "ipConfig": {
                            "id": "SqlIpConfig",
                            "type": "object",
                            "properties": {
                              "enableIpv4": {
                                "type": "boolean",
                                "description": "Whether the instance should be assigned an IPv4 address or not."
                              },
                              "requireSsl": {
                                "type": "boolean",
                                "description": "Whether SSL connections over IP should be enforced or not."
                              },
                              "privateNetwork": {
                                "type": "string",
                                "description": "The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, `/projects/myProject/global/networks/default`. This setting can be updated, but it cannot be removed after it is set."
                              },
                              "authorizedNetworks": {
                                "type": "array",
                                "items": {
                                  "id": "SqlAclEntry",
                                  "type": "object",
                                  "properties": {
                                    "ttl": {
                                      "type": "string",
                                      "format": "google-duration",
                                      "description": "Input only. The time-to-leave of this access control entry."
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "A label to identify this entry."
                                    },
                                    "value": {
                                      "type": "string",
                                      "description": "The allowlisted value for the access control list."
                                    },
                                    "expireTime": {
                                      "type": "string",
                                      "format": "google-datetime",
                                      "description": "The time when this access control entry expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example: `2012-11-15T16:19:00.094Z`."
                                    }
                                  },
                                  "description": "An entry for an Access Control list."
                                },
                                "description": "The list of external networks that are allowed to connect to the instance using the IP. See https://en.wikipedia.org/wiki/CIDR_notation#CIDR_notation, also known as 'slash' notation (e.g. `192.168.100.0/24`)."
                              }
                            },
                            "description": "The settings for IP Management. This allows to enable or disable the instance IP and manage which external networks can connect to the instance. The IPv4 address cannot be disabled."
                          },
                          "sourceId": {
                            "type": "string",
                            "description": "The Database Migration Service source connection profile ID, in the format: `projects/my_project_name/locations/us-central1/connectionProfiles/connection_profile_ID`"
                          },
                          "collation": {
                            "type": "string",
                            "description": "The Cloud SQL default instance level collation."
                          },
                          "userLabels": {
                            "type": "object",
                            "description": "The resource labels for a Cloud SQL instance to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of \"key\": \"value\" pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"18kg\", \"count\": \"3\" }`.",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "dataDiskType": {
                            "enum": [
                              "SQL_DATA_DISK_TYPE_UNSPECIFIED",
                              "PD_SSD",
                              "PD_HDD"
                            ],
                            "type": "string",
                            "description": "The type of storage: `PD_SSD` (default) or `PD_HDD`.",
                            "enumDescriptions": [
                              "Unspecified.",
                              "SSD disk.",
                              "HDD disk."
                            ]
                          },
                          "rootPassword": {
                            "type": "string",
                            "description": "Input only. Initial root password."
                          },
                          "databaseFlags": {
                            "type": "object",
                            "description": "The database flags passed to the Cloud SQL instance at startup. An object containing a list of \"key\": value pairs. Example: { \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }.",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "dataDiskSizeGb": {
                            "type": "string",
                            "format": "int64",
                            "description": "The storage capacity available to the database, in GB. The minimum (and default) size is 10GB."
                          },
                          "databaseVersion": {
                            "enum": [
                              "SQL_DATABASE_VERSION_UNSPECIFIED",
                              "MYSQL_5_6",
                              "MYSQL_5_7",
                              "POSTGRES_9_6",
                              "POSTGRES_11",
                              "POSTGRES_10",
                              "MYSQL_8_0",
                              "POSTGRES_12",
                              "POSTGRES_13"
                            ],
                            "type": "string",
                            "description": "The database engine type and version.",
                            "enumDescriptions": [
                              "Unspecified version.",
                              "MySQL 5.6.",
                              "MySQL 5.7.",
                              "PostgreSQL 9.6.",
                              "PostgreSQL 11.",
                              "PostgreSQL 10.",
                              "MySQL 8.0.",
                              "PostgreSQL 12.",
                              "PostgreSQL 13."
                            ]
                          },
                          "rootPasswordSet": {
                            "type": "boolean",
                            "readOnly": true,
                            "description": "Output only. Indicates If this connection profile root password is stored."
                          },
                          "activationPolicy": {
                            "enum": [
                              "SQL_ACTIVATION_POLICY_UNSPECIFIED",
                              "ALWAYS",
                              "NEVER"
                            ],
                            "type": "string",
                            "description": "The activation policy specifies when the instance is activated; it is applicable only when the instance state is 'RUNNABLE'. Valid values: 'ALWAYS': The instance is on, and remains so even in the absence of connection requests. `NEVER`: The instance is off; it is not activated, even if a connection request arrives.",
                            "enumDescriptions": [
                              "unspecified policy.",
                              "The instance is always up and running.",
                              "The instance should never spin up."
                            ]
                          },
                          "autoStorageIncrease": {
                            "type": "boolean",
                            "description": "[default: ON] If you enable this setting, Cloud SQL checks your available storage every 30 seconds. If the available storage falls below a threshold size, Cloud SQL automatically adds additional storage capacity. If the available storage repeatedly falls below the threshold size, Cloud SQL continues to add storage until it reaches the maximum of 30 TB."
                          },
                          "storageAutoResizeLimit": {
                            "type": "string",
                            "format": "int64",
                            "description": "The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit."
                          }
                        },
                        "description": "Immutable. Metadata used to create the destination Cloud SQL database."
                      },
                      "privateIp": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Output only. The Cloud SQL database instance's private IP."
                      },
                      "cloudSqlId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Output only. The Cloud SQL instance ID that this connection profile is associated with."
                      }
                    },
                    "description": "A CloudSQL database connection profile."
                  },
                  "provider": {
                    "enum": [
                      "DATABASE_PROVIDER_UNSPECIFIED",
                      "CLOUDSQL",
                      "RDS"
                    ],
                    "type": "string",
                    "description": "The database provider.",
                    "enumDescriptions": [
                      "The database provider is unknown.",
                      "CloudSQL runs the database.",
                      "RDS runs the database."
                    ]
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The timestamp when the resource was created. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\"."
                  },
                  "postgresql": {
                    "id": "PostgreSqlConnectionProfile",
                    "type": "object",
                    "properties": {
                      "ssl": {
                        "id": "SslConfig",
                        "type": "object",
                        "properties": {
                          "type": {
                            "enum": [
                              "SSL_TYPE_UNSPECIFIED",
                              "SERVER_ONLY",
                              "SERVER_CLIENT"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "description": "Output only. The ssl config type according to 'client_key', 'client_certificate' and 'ca_certificate'.",
                            "enumDescriptions": [
                              "Unspecified.",
                              "Only 'ca_certificate' specified.",
                              "Both server ('ca_certificate'), and client ('client_key', 'client_certificate') specified."
                            ]
                          },
                          "clientKey": {
                            "type": "string",
                            "description": "Input only. The unencrypted PKCS#1 or PKCS#8 PEM-encoded private key associated with the Client Certificate. If this field is used then the 'client_certificate' field is mandatory."
                          },
                          "caCertificate": {
                            "type": "string",
                            "description": "Required. Input only. The x509 PEM-encoded certificate of the CA that signed the source database server's certificate. The replica will use this certificate to verify it's connecting to the right host."
                          },
                          "clientCertificate": {
                            "type": "string",
                            "description": "Input only. The x509 PEM-encoded certificate that will be used by the replica to authenticate against the source database server.If this field is used then the 'client_key' field is mandatory."
                          }
                        },
                        "description": "SSL configuration for the destination to connect to the source database."
                      },
                      "host": {
                        "type": "string",
                        "description": "Required. The IP or hostname of the source PostgreSQL database."
                      },
                      "port": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Required. The network port of the source PostgreSQL database."
                      },
                      "password": {
                        "type": "string",
                        "description": "Required. Input only. The password for the user that Database Migration Service will be using to connect to the database. This field is not returned on request, and the value is encrypted when stored in Database Migration Service."
                      },
                      "username": {
                        "type": "string",
                        "description": "Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service."
                      },
                      "cloudSqlId": {
                        "type": "string",
                        "description": "If the source is a Cloud SQL database, use this field to provide the Cloud SQL instance ID of the source."
                      },
                      "passwordSet": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Output only. Indicates If this connection profile password is stored."
                      }
                    },
                    "description": "A PostgreSQL database connection profile."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The timestamp when the resource was last updated. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\"."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The connection profile display name."
                  }
                },
                "description": "A connection profile definition."
              },
              "description": "The response list of connection profiles."
            }
          },
          "description": "Response message for 'ListConnectionProfiles' request."
        }
      ]
  projects.locations.connectionProfiles.patch:
    description: |-
      Update the configuration of a single connection profile.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.connectionProfiles/patch
    example:
      inputs: [
        {
          "id": "ConnectionProfile",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of this connection profile resource in the form of projects/{project}/locations/{location}/instances/{instance}."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "readOnly": true,
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "Output only. The error details in case of state FAILED."
            },
            "mysql": {
              "id": "MySqlConnectionProfile",
              "type": "object",
              "properties": {
                "ssl": {
                  "id": "SslConfig",
                  "type": "object",
                  "properties": {
                    "type": {
                      "enum": [
                        "SSL_TYPE_UNSPECIFIED",
                        "SERVER_ONLY",
                        "SERVER_CLIENT"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "description": "Output only. The ssl config type according to 'client_key', 'client_certificate' and 'ca_certificate'.",
                      "enumDescriptions": [
                        "Unspecified.",
                        "Only 'ca_certificate' specified.",
                        "Both server ('ca_certificate'), and client ('client_key', 'client_certificate') specified."
                      ]
                    },
                    "clientKey": {
                      "type": "string",
                      "description": "Input only. The unencrypted PKCS#1 or PKCS#8 PEM-encoded private key associated with the Client Certificate. If this field is used then the 'client_certificate' field is mandatory."
                    },
                    "caCertificate": {
                      "type": "string",
                      "description": "Required. Input only. The x509 PEM-encoded certificate of the CA that signed the source database server's certificate. The replica will use this certificate to verify it's connecting to the right host."
                    },
                    "clientCertificate": {
                      "type": "string",
                      "description": "Input only. The x509 PEM-encoded certificate that will be used by the replica to authenticate against the source database server.If this field is used then the 'client_key' field is mandatory."
                    }
                  },
                  "description": "SSL configuration for the destination to connect to the source database."
                },
                "host": {
                  "type": "string",
                  "description": "Required. The IP or hostname of the source MySQL database."
                },
                "port": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Required. The network port of the source MySQL database."
                },
                "password": {
                  "type": "string",
                  "description": "Required. Input only. The password for the user that Database Migration Service will be using to connect to the database. This field is not returned on request, and the value is encrypted when stored in Database Migration Service."
                },
                "username": {
                  "type": "string",
                  "description": "Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service."
                },
                "cloudSqlId": {
                  "type": "string",
                  "description": "If the source is a Cloud SQL database, use this field to provide the Cloud SQL instance ID of the source."
                },
                "passwordSet": {
                  "type": "boolean",
                  "readOnly": true,
                  "description": "Output only. Indicates If this connection profile password is stored."
                }
              },
              "description": "A MySQL database connection profile."
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "DRAFT",
                "CREATING",
                "READY",
                "UPDATING",
                "DELETING",
                "DELETED",
                "FAILED"
              ],
              "type": "string",
              "description": "The current connection profile state (e.g. DRAFT, READY, or FAILED).",
              "enumDescriptions": [
                "The state of the connection profile is unknown.",
                "The connection profile is in draft mode and fully editable.",
                "The connection profile is being created.",
                "The connection profile is ready.",
                "The connection profile is being updated.",
                "The connection profile is being deleted.",
                "The connection profile has been deleted.",
                "The last action on the connection profile failed."
              ]
            },
            "labels": {
              "type": "object",
              "description": "The resource labels for connection profile to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of \"key\": \"value\" pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }`.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "cloudsql": {
              "id": "CloudSqlConnectionProfile",
              "type": "object",
              "properties": {
                "publicIp": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. The Cloud SQL database instance's public IP."
                },
                "settings": {
                  "id": "CloudSqlSettings",
                  "type": "object",
                  "properties": {
                    "tier": {
                      "type": "string",
                      "description": "The tier (or machine type) for this instance, for example: `db-n1-standard-1` (MySQL instances) or `db-custom-1-3840` (PostgreSQL instances). For more information, see [Cloud SQL Instance Settings](https://cloud.google.com/sql/docs/mysql/instance-settings)."
                    },
                    "zone": {
                      "type": "string",
                      "description": "The Google Cloud Platform zone where your Cloud SQL datdabse instance is located."
                    },
                    "ipConfig": {
                      "id": "SqlIpConfig",
                      "type": "object",
                      "properties": {
                        "enableIpv4": {
                          "type": "boolean",
                          "description": "Whether the instance should be assigned an IPv4 address or not."
                        },
                        "requireSsl": {
                          "type": "boolean",
                          "description": "Whether SSL connections over IP should be enforced or not."
                        },
                        "privateNetwork": {
                          "type": "string",
                          "description": "The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, `/projects/myProject/global/networks/default`. This setting can be updated, but it cannot be removed after it is set."
                        },
                        "authorizedNetworks": {
                          "type": "array",
                          "items": {
                            "id": "SqlAclEntry",
                            "type": "object",
                            "properties": {
                              "ttl": {
                                "type": "string",
                                "format": "google-duration",
                                "description": "Input only. The time-to-leave of this access control entry."
                              },
                              "label": {
                                "type": "string",
                                "description": "A label to identify this entry."
                              },
                              "value": {
                                "type": "string",
                                "description": "The allowlisted value for the access control list."
                              },
                              "expireTime": {
                                "type": "string",
                                "format": "google-datetime",
                                "description": "The time when this access control entry expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example: `2012-11-15T16:19:00.094Z`."
                              }
                            },
                            "description": "An entry for an Access Control list."
                          },
                          "description": "The list of external networks that are allowed to connect to the instance using the IP. See https://en.wikipedia.org/wiki/CIDR_notation#CIDR_notation, also known as 'slash' notation (e.g. `192.168.100.0/24`)."
                        }
                      },
                      "description": "The settings for IP Management. This allows to enable or disable the instance IP and manage which external networks can connect to the instance. The IPv4 address cannot be disabled."
                    },
                    "sourceId": {
                      "type": "string",
                      "description": "The Database Migration Service source connection profile ID, in the format: `projects/my_project_name/locations/us-central1/connectionProfiles/connection_profile_ID`"
                    },
                    "collation": {
                      "type": "string",
                      "description": "The Cloud SQL default instance level collation."
                    },
                    "userLabels": {
                      "type": "object",
                      "description": "The resource labels for a Cloud SQL instance to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of \"key\": \"value\" pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"18kg\", \"count\": \"3\" }`.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "dataDiskType": {
                      "enum": [
                        "SQL_DATA_DISK_TYPE_UNSPECIFIED",
                        "PD_SSD",
                        "PD_HDD"
                      ],
                      "type": "string",
                      "description": "The type of storage: `PD_SSD` (default) or `PD_HDD`.",
                      "enumDescriptions": [
                        "Unspecified.",
                        "SSD disk.",
                        "HDD disk."
                      ]
                    },
                    "rootPassword": {
                      "type": "string",
                      "description": "Input only. Initial root password."
                    },
                    "databaseFlags": {
                      "type": "object",
                      "description": "The database flags passed to the Cloud SQL instance at startup. An object containing a list of \"key\": value pairs. Example: { \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "dataDiskSizeGb": {
                      "type": "string",
                      "format": "int64",
                      "description": "The storage capacity available to the database, in GB. The minimum (and default) size is 10GB."
                    },
                    "databaseVersion": {
                      "enum": [
                        "SQL_DATABASE_VERSION_UNSPECIFIED",
                        "MYSQL_5_6",
                        "MYSQL_5_7",
                        "POSTGRES_9_6",
                        "POSTGRES_11",
                        "POSTGRES_10",
                        "MYSQL_8_0",
                        "POSTGRES_12",
                        "POSTGRES_13"
                      ],
                      "type": "string",
                      "description": "The database engine type and version.",
                      "enumDescriptions": [
                        "Unspecified version.",
                        "MySQL 5.6.",
                        "MySQL 5.7.",
                        "PostgreSQL 9.6.",
                        "PostgreSQL 11.",
                        "PostgreSQL 10.",
                        "MySQL 8.0.",
                        "PostgreSQL 12.",
                        "PostgreSQL 13."
                      ]
                    },
                    "rootPasswordSet": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Output only. Indicates If this connection profile root password is stored."
                    },
                    "activationPolicy": {
                      "enum": [
                        "SQL_ACTIVATION_POLICY_UNSPECIFIED",
                        "ALWAYS",
                        "NEVER"
                      ],
                      "type": "string",
                      "description": "The activation policy specifies when the instance is activated; it is applicable only when the instance state is 'RUNNABLE'. Valid values: 'ALWAYS': The instance is on, and remains so even in the absence of connection requests. `NEVER`: The instance is off; it is not activated, even if a connection request arrives.",
                      "enumDescriptions": [
                        "unspecified policy.",
                        "The instance is always up and running.",
                        "The instance should never spin up."
                      ]
                    },
                    "autoStorageIncrease": {
                      "type": "boolean",
                      "description": "[default: ON] If you enable this setting, Cloud SQL checks your available storage every 30 seconds. If the available storage falls below a threshold size, Cloud SQL automatically adds additional storage capacity. If the available storage repeatedly falls below the threshold size, Cloud SQL continues to add storage until it reaches the maximum of 30 TB."
                    },
                    "storageAutoResizeLimit": {
                      "type": "string",
                      "format": "int64",
                      "description": "The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit."
                    }
                  },
                  "description": "Immutable. Metadata used to create the destination Cloud SQL database."
                },
                "privateIp": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. The Cloud SQL database instance's private IP."
                },
                "cloudSqlId": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. The Cloud SQL instance ID that this connection profile is associated with."
                }
              },
              "description": "A CloudSQL database connection profile."
            },
            "provider": {
              "enum": [
                "DATABASE_PROVIDER_UNSPECIFIED",
                "CLOUDSQL",
                "RDS"
              ],
              "type": "string",
              "description": "The database provider.",
              "enumDescriptions": [
                "The database provider is unknown.",
                "CloudSQL runs the database.",
                "RDS runs the database."
              ]
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The timestamp when the resource was created. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\"."
            },
            "postgresql": {
              "id": "PostgreSqlConnectionProfile",
              "type": "object",
              "properties": {
                "ssl": {
                  "id": "SslConfig",
                  "type": "object",
                  "properties": {
                    "type": {
                      "enum": [
                        "SSL_TYPE_UNSPECIFIED",
                        "SERVER_ONLY",
                        "SERVER_CLIENT"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "description": "Output only. The ssl config type according to 'client_key', 'client_certificate' and 'ca_certificate'.",
                      "enumDescriptions": [
                        "Unspecified.",
                        "Only 'ca_certificate' specified.",
                        "Both server ('ca_certificate'), and client ('client_key', 'client_certificate') specified."
                      ]
                    },
                    "clientKey": {
                      "type": "string",
                      "description": "Input only. The unencrypted PKCS#1 or PKCS#8 PEM-encoded private key associated with the Client Certificate. If this field is used then the 'client_certificate' field is mandatory."
                    },
                    "caCertificate": {
                      "type": "string",
                      "description": "Required. Input only. The x509 PEM-encoded certificate of the CA that signed the source database server's certificate. The replica will use this certificate to verify it's connecting to the right host."
                    },
                    "clientCertificate": {
                      "type": "string",
                      "description": "Input only. The x509 PEM-encoded certificate that will be used by the replica to authenticate against the source database server.If this field is used then the 'client_key' field is mandatory."
                    }
                  },
                  "description": "SSL configuration for the destination to connect to the source database."
                },
                "host": {
                  "type": "string",
                  "description": "Required. The IP or hostname of the source PostgreSQL database."
                },
                "port": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Required. The network port of the source PostgreSQL database."
                },
                "password": {
                  "type": "string",
                  "description": "Required. Input only. The password for the user that Database Migration Service will be using to connect to the database. This field is not returned on request, and the value is encrypted when stored in Database Migration Service."
                },
                "username": {
                  "type": "string",
                  "description": "Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service."
                },
                "cloudSqlId": {
                  "type": "string",
                  "description": "If the source is a Cloud SQL database, use this field to provide the Cloud SQL instance ID of the source."
                },
                "passwordSet": {
                  "type": "boolean",
                  "readOnly": true,
                  "description": "Output only. Indicates If this connection profile password is stored."
                }
              },
              "description": "A PostgreSQL database connection profile."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The timestamp when the resource was last updated. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\"."
            },
            "displayName": {
              "type": "string",
              "description": "The connection profile display name."
            }
          },
          "description": "A connection profile definition."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.connectionProfiles.setIamPolicy:
    description: |-
      Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.connectionProfiles/setIamPolicy
    example:
      inputs: [
        {
          "id": "SetIamPolicyRequest",
          "type": "object",
          "properties": {
            "policy": {
              "id": "Policy",
              "type": "object",
              "properties": {
                "etag": {
                  "type": "string",
                  "format": "byte",
                  "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
                },
                "version": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                },
                "bindings": {
                  "type": "array",
                  "items": {
                    "id": "Binding",
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                      },
                      "members": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                      },
                      "condition": {
                        "id": "Expr",
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                          },
                          "location": {
                            "type": "string",
                            "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                          },
                          "expression": {
                            "type": "string",
                            "description": "Textual representation of an expression in Common Expression Language syntax."
                          },
                          "description": {
                            "type": "string",
                            "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                          }
                        },
                        "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                      }
                    },
                    "description": "Associates `members` with a `role`."
                  },
                  "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
                },
                "auditConfigs": {
                  "type": "array",
                  "items": {
                    "id": "AuditConfig",
                    "type": "object",
                    "properties": {
                      "service": {
                        "type": "string",
                        "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                      },
                      "auditLogConfigs": {
                        "type": "array",
                        "items": {
                          "id": "AuditLogConfig",
                          "type": "object",
                          "properties": {
                            "logType": {
                              "enum": [
                                "LOG_TYPE_UNSPECIFIED",
                                "ADMIN_READ",
                                "DATA_WRITE",
                                "DATA_READ"
                              ],
                              "type": "string",
                              "description": "The log type that this config enables.",
                              "enumDescriptions": [
                                "Default case. Should never be this.",
                                "Admin reads. Example: CloudIAM getIamPolicy",
                                "Data writes. Example: CloudSQL Users create",
                                "Data reads. Example: CloudSQL Users list"
                              ]
                            },
                            "exemptedMembers": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                            }
                          },
                          "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                        },
                        "description": "The configuration for logging of each type of permission."
                      }
                    },
                    "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
                  },
                  "description": "Specifies cloud audit logging configuration for this policy."
                }
              },
              "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
            },
            "updateMask": {
              "type": "string",
              "format": "google-fieldmask",
              "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`"
            }
          },
          "description": "Request message for `SetIamPolicy` method."
        }
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            },
            "auditConfigs": {
              "type": "array",
              "items": {
                "id": "AuditConfig",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                  },
                  "auditLogConfigs": {
                    "type": "array",
                    "items": {
                      "id": "AuditLogConfig",
                      "type": "object",
                      "properties": {
                        "logType": {
                          "enum": [
                            "LOG_TYPE_UNSPECIFIED",
                            "ADMIN_READ",
                            "DATA_WRITE",
                            "DATA_READ"
                          ],
                          "type": "string",
                          "description": "The log type that this config enables.",
                          "enumDescriptions": [
                            "Default case. Should never be this.",
                            "Admin reads. Example: CloudIAM getIamPolicy",
                            "Data writes. Example: CloudSQL Users create",
                            "Data reads. Example: CloudSQL Users list"
                          ]
                        },
                        "exemptedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                        }
                      },
                      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                    },
                    "description": "The configuration for logging of each type of permission."
                  }
                },
                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
              },
              "description": "Specifies cloud audit logging configuration for this policy."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  projects.locations.connectionProfiles.testIamPermissions:
    description: |-
      Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.connectionProfiles/testIamPermissions
    example:
      inputs: [
        {
          "id": "TestIamPermissionsRequest",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
            }
          },
          "description": "Request message for `TestIamPermissions` method."
        }
      ]
      outputs: [
        {
          "id": "TestIamPermissionsResponse",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
            }
          },
          "description": "Response message for `TestIamPermissions` method."
        }
      ]
  projects.locations.get:
    description: |-
      Gets information about a location.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Location",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
            },
            "labels": {
              "type": "object",
              "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
              "additionalProperties": {
                "type": "string"
              }
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata. For example the available capacity at the given location.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "locationId": {
              "type": "string",
              "description": "The canonical id for this location. For example: `\"us-east1\"`."
            },
            "displayName": {
              "type": "string",
              "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
            }
          },
          "description": "A resource that represents Google Cloud Platform location."
        }
      ]
  projects.locations.list:
    description: |-
      Lists information about the supported locations for this service.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListLocationsResponse",
          "type": "object",
          "properties": {
            "locations": {
              "type": "array",
              "items": {
                "id": "Location",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
                  },
                  "labels": {
                    "type": "object",
                    "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Service-specific metadata. For example the available capacity at the given location.",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "locationId": {
                    "type": "string",
                    "description": "The canonical id for this location. For example: `\"us-east1\"`."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
                  }
                },
                "description": "A resource that represents Google Cloud Platform location."
              },
              "description": "A list of locations that matches the specified filter in the request."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The standard List next-page token."
            }
          },
          "description": "The response message for Locations.ListLocations."
        }
      ]
  projects.locations.migrationJobs.create:
    description: |-
      Creates a new migration job in a given project and location.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.migrationJobs/create
    example:
      inputs: [
        {
          "id": "MigrationJob",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name (URI) of this migration job resource, in the form of: projects/{project}/locations/{location}/instances/{instance}."
            },
            "type": {
              "enum": [
                "TYPE_UNSPECIFIED",
                "ONE_TIME",
                "CONTINUOUS"
              ],
              "type": "string",
              "description": "Required. The migration job type.",
              "enumDescriptions": [
                "The type of the migration job is unknown.",
                "The migration job is a one time migration.",
                "The migration job is a continuous migration."
              ]
            },
            "error": {
              "id": "Status",
              "type": "object",
              "readOnly": true,
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "Output only. The error details in case of state FAILED."
            },
            "phase": {
              "enum": [
                "PHASE_UNSPECIFIED",
                "FULL_DUMP",
                "CDC",
                "PROMOTE_IN_PROGRESS",
                "WAITING_FOR_SOURCE_WRITES_TO_STOP",
                "PREPARING_THE_DUMP"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. The current migration job phase.",
              "enumDescriptions": [
                "The phase of the migration job is unknown.",
                "The migration job is in the full dump phase.",
                "The migration job is CDC phase.",
                "The migration job is running the promote phase.",
                "Only RDS flow - waiting for source writes to stop",
                "Only RDS flow - the sources writes stopped, waiting for dump to begin"
              ]
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "MAINTENANCE",
                "DRAFT",
                "CREATING",
                "NOT_STARTED",
                "RUNNING",
                "FAILED",
                "COMPLETED",
                "DELETING",
                "STOPPING",
                "STOPPED",
                "DELETED",
                "UPDATING",
                "STARTING",
                "RESTARTING",
                "RESUMING"
              ],
              "type": "string",
              "description": "The current migration job state.",
              "enumDescriptions": [
                "The state of the migration job is unknown.",
                "The migration job is down for maintenance.",
                "The migration job is in draft mode and no resources are created.",
                "The migration job is being created.",
                "The migration job is created, not started and is fully editable.",
                "The migration job is running.",
                "The migration job failed.",
                "The migration job has been completed.",
                "The migration job is being deleted.",
                "The migration job is being stopped.",
                "The migration job is currently stopped.",
                "The migration job has been deleted.",
                "The migration job is being updated.",
                "The migration job is starting.",
                "The migration job is restarting.",
                "The migration job is resuming."
              ]
            },
            "labels": {
              "type": "object",
              "description": "The resource labels for migration job to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of \"key\": \"value\" pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }`.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "source": {
              "type": "string",
              "description": "Required. The resource name (URI) of the source connection profile."
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. If the migration job is completed, the time when it was completed."
            },
            "dumpPath": {
              "type": "string",
              "description": "The path to the dump file in Google Cloud Storage, in the format: (gs://[BUCKET_NAME]/[OBJECT_NAME])."
            },
            "duration": {
              "type": "string",
              "format": "google-duration",
              "readOnly": true,
              "description": "Output only. The duration of the migration job (in seconds). A duration in seconds with up to nine fractional digits, terminated by 's'. Example: \"3.5s\"."
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The timestamp when the migration job resource was created. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\"."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The timestamp when the migration job resource was last updated. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\"."
            },
            "destination": {
              "type": "string",
              "description": "Required. The resource name (URI) of the destination connection profile."
            },
            "displayName": {
              "type": "string",
              "description": "The migration job display name."
            },
            "sourceDatabase": {
              "id": "DatabaseType",
              "type": "object",
              "properties": {
                "engine": {
                  "enum": [
                    "DATABASE_ENGINE_UNSPECIFIED",
                    "MYSQL",
                    "POSTGRESQL"
                  ],
                  "type": "string",
                  "description": "The database engine.",
                  "enumDescriptions": [
                    "The source database engine of the migration job is unknown.",
                    "The source engine is MySQL.",
                    "The source engine is PostgreSQL."
                  ]
                },
                "provider": {
                  "enum": [
                    "DATABASE_PROVIDER_UNSPECIFIED",
                    "CLOUDSQL",
                    "RDS"
                  ],
                  "type": "string",
                  "description": "The database provider.",
                  "enumDescriptions": [
                    "The database provider is unknown.",
                    "CloudSQL runs the database.",
                    "RDS runs the database."
                  ]
                }
              },
              "description": "The database engine type and provider of the source."
            },
            "destinationDatabase": {
              "id": "DatabaseType",
              "type": "object",
              "properties": {
                "engine": {
                  "enum": [
                    "DATABASE_ENGINE_UNSPECIFIED",
                    "MYSQL",
                    "POSTGRESQL"
                  ],
                  "type": "string",
                  "description": "The database engine.",
                  "enumDescriptions": [
                    "The source database engine of the migration job is unknown.",
                    "The source engine is MySQL.",
                    "The source engine is PostgreSQL."
                  ]
                },
                "provider": {
                  "enum": [
                    "DATABASE_PROVIDER_UNSPECIFIED",
                    "CLOUDSQL",
                    "RDS"
                  ],
                  "type": "string",
                  "description": "The database provider.",
                  "enumDescriptions": [
                    "The database provider is unknown.",
                    "CloudSQL runs the database.",
                    "RDS runs the database."
                  ]
                }
              },
              "description": "The database engine type and provider of the destination."
            },
            "staticIpConnectivity": {
              "id": "StaticIpConnectivity",
              "type": "object",
              "properties": {},
              "description": "static ip connectivity data (default, no additional details needed)."
            },
            "reverseSshConnectivity": {
              "id": "ReverseSshConnectivity",
              "type": "object",
              "properties": {
                "vm": {
                  "type": "string",
                  "description": "The name of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel."
                },
                "vpc": {
                  "type": "string",
                  "description": "The name of the VPC to peer with the Cloud SQL private network."
                },
                "vmIp": {
                  "type": "string",
                  "description": "Required. The IP of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel."
                },
                "vmPort": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Required. The forwarding port of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel."
                }
              },
              "description": "The details needed to communicate to the source over Reverse SSH tunnel connectivity."
            },
            "vpcPeeringConnectivity": {
              "id": "VpcPeeringConnectivity",
              "type": "object",
              "properties": {
                "vpc": {
                  "type": "string",
                  "description": "The name of the VPC network to peer with the Cloud SQL private network."
                }
              },
              "description": "The details of the VPC network that the source database is located in."
            }
          },
          "description": "Represents a Database Migration Service migration job object."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.migrationJobs.delete:
    description: |-
      Deletes a single migration job.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.migrationJobs/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.migrationJobs.generateSshScript:
    description: |-
      Generate a SSH configuration script to configure the reverse SSH connectivity.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.migrationJobs/generateSshScript
    example:
      inputs: [
        {
          "id": "GenerateSshScriptRequest",
          "type": "object",
          "properties": {
            "vm": {
              "type": "string",
              "description": "Required. Bastion VM Instance name to use or to create."
            },
            "vmPort": {
              "type": "integer",
              "format": "int32",
              "description": "The port that will be open on the bastion host"
            },
            "vmCreationConfig": {
              "id": "VmCreationConfig",
              "type": "object",
              "properties": {
                "subnet": {
                  "type": "string",
                  "description": "The subnet name the vm needs to be created in."
                },
                "vmZone": {
                  "type": "string",
                  "description": "The Google Cloud Platform zone to create the VM in."
                },
                "vmMachineType": {
                  "type": "string",
                  "description": "Required. VM instance machine type to create."
                }
              },
              "description": "The VM creation configuration"
            },
            "vmSelectionConfig": {
              "id": "VmSelectionConfig",
              "type": "object",
              "properties": {
                "vmZone": {
                  "type": "string",
                  "description": "Required. The Google Cloud Platform zone the VM is located."
                }
              },
              "description": "The VM selection configuration"
            }
          },
          "description": "Request message for 'GenerateSshScript' request."
        }
      ]
      outputs: [
        {
          "id": "SshScript",
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "The ssh configuration script."
            }
          },
          "description": "Response message for 'GenerateSshScript' request."
        }
      ]
  projects.locations.migrationJobs.get:
    description: |-
      Gets details of a single migration job.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.migrationJobs/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.migrationJobs.getIamPolicy:
    description: |-
      Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.migrationJobs/getIamPolicy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            },
            "auditConfigs": {
              "type": "array",
              "items": {
                "id": "AuditConfig",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                  },
                  "auditLogConfigs": {
                    "type": "array",
                    "items": {
                      "id": "AuditLogConfig",
                      "type": "object",
                      "properties": {
                        "logType": {
                          "enum": [
                            "LOG_TYPE_UNSPECIFIED",
                            "ADMIN_READ",
                            "DATA_WRITE",
                            "DATA_READ"
                          ],
                          "type": "string",
                          "description": "The log type that this config enables.",
                          "enumDescriptions": [
                            "Default case. Should never be this.",
                            "Admin reads. Example: CloudIAM getIamPolicy",
                            "Data writes. Example: CloudSQL Users create",
                            "Data reads. Example: CloudSQL Users list"
                          ]
                        },
                        "exemptedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                        }
                      },
                      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                    },
                    "description": "The configuration for logging of each type of permission."
                  }
                },
                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
              },
              "description": "Specifies cloud audit logging configuration for this policy."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  projects.locations.migrationJobs.list:
    description: |-
      Lists migration jobs in a given project and location.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.migrationJobs/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListMigrationJobsResponse",
          "type": "object",
          "properties": {
            "unreachable": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Locations that could not be reached."
            },
            "migrationJobs": {
              "type": "array",
              "items": {
                "id": "MigrationJob",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name (URI) of this migration job resource, in the form of: projects/{project}/locations/{location}/instances/{instance}."
                  },
                  "type": {
                    "enum": [
                      "TYPE_UNSPECIFIED",
                      "ONE_TIME",
                      "CONTINUOUS"
                    ],
                    "type": "string",
                    "description": "Required. The migration job type.",
                    "enumDescriptions": [
                      "The type of the migration job is unknown.",
                      "The migration job is a one time migration.",
                      "The migration job is a continuous migration."
                    ]
                  },
                  "error": {
                    "id": "Status",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The status code, which should be an enum value of google.rpc.Code."
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object. Contains field @type with type URL."
                          }
                        },
                        "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                      },
                      "message": {
                        "type": "string",
                        "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                      }
                    },
                    "description": "Output only. The error details in case of state FAILED."
                  },
                  "phase": {
                    "enum": [
                      "PHASE_UNSPECIFIED",
                      "FULL_DUMP",
                      "CDC",
                      "PROMOTE_IN_PROGRESS",
                      "WAITING_FOR_SOURCE_WRITES_TO_STOP",
                      "PREPARING_THE_DUMP"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The current migration job phase.",
                    "enumDescriptions": [
                      "The phase of the migration job is unknown.",
                      "The migration job is in the full dump phase.",
                      "The migration job is CDC phase.",
                      "The migration job is running the promote phase.",
                      "Only RDS flow - waiting for source writes to stop",
                      "Only RDS flow - the sources writes stopped, waiting for dump to begin"
                    ]
                  },
                  "state": {
                    "enum": [
                      "STATE_UNSPECIFIED",
                      "MAINTENANCE",
                      "DRAFT",
                      "CREATING",
                      "NOT_STARTED",
                      "RUNNING",
                      "FAILED",
                      "COMPLETED",
                      "DELETING",
                      "STOPPING",
                      "STOPPED",
                      "DELETED",
                      "UPDATING",
                      "STARTING",
                      "RESTARTING",
                      "RESUMING"
                    ],
                    "type": "string",
                    "description": "The current migration job state.",
                    "enumDescriptions": [
                      "The state of the migration job is unknown.",
                      "The migration job is down for maintenance.",
                      "The migration job is in draft mode and no resources are created.",
                      "The migration job is being created.",
                      "The migration job is created, not started and is fully editable.",
                      "The migration job is running.",
                      "The migration job failed.",
                      "The migration job has been completed.",
                      "The migration job is being deleted.",
                      "The migration job is being stopped.",
                      "The migration job is currently stopped.",
                      "The migration job has been deleted.",
                      "The migration job is being updated.",
                      "The migration job is starting.",
                      "The migration job is restarting.",
                      "The migration job is resuming."
                    ]
                  },
                  "labels": {
                    "type": "object",
                    "description": "The resource labels for migration job to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of \"key\": \"value\" pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }`.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "source": {
                    "type": "string",
                    "description": "Required. The resource name (URI) of the source connection profile."
                  },
                  "endTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. If the migration job is completed, the time when it was completed."
                  },
                  "dumpPath": {
                    "type": "string",
                    "description": "The path to the dump file in Google Cloud Storage, in the format: (gs://[BUCKET_NAME]/[OBJECT_NAME])."
                  },
                  "duration": {
                    "type": "string",
                    "format": "google-duration",
                    "readOnly": true,
                    "description": "Output only. The duration of the migration job (in seconds). A duration in seconds with up to nine fractional digits, terminated by 's'. Example: \"3.5s\"."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The timestamp when the migration job resource was created. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\"."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The timestamp when the migration job resource was last updated. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\"."
                  },
                  "destination": {
                    "type": "string",
                    "description": "Required. The resource name (URI) of the destination connection profile."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The migration job display name."
                  },
                  "sourceDatabase": {
                    "id": "DatabaseType",
                    "type": "object",
                    "properties": {
                      "engine": {
                        "enum": [
                          "DATABASE_ENGINE_UNSPECIFIED",
                          "MYSQL",
                          "POSTGRESQL"
                        ],
                        "type": "string",
                        "description": "The database engine.",
                        "enumDescriptions": [
                          "The source database engine of the migration job is unknown.",
                          "The source engine is MySQL.",
                          "The source engine is PostgreSQL."
                        ]
                      },
                      "provider": {
                        "enum": [
                          "DATABASE_PROVIDER_UNSPECIFIED",
                          "CLOUDSQL",
                          "RDS"
                        ],
                        "type": "string",
                        "description": "The database provider.",
                        "enumDescriptions": [
                          "The database provider is unknown.",
                          "CloudSQL runs the database.",
                          "RDS runs the database."
                        ]
                      }
                    },
                    "description": "The database engine type and provider of the source."
                  },
                  "destinationDatabase": {
                    "id": "DatabaseType",
                    "type": "object",
                    "properties": {
                      "engine": {
                        "enum": [
                          "DATABASE_ENGINE_UNSPECIFIED",
                          "MYSQL",
                          "POSTGRESQL"
                        ],
                        "type": "string",
                        "description": "The database engine.",
                        "enumDescriptions": [
                          "The source database engine of the migration job is unknown.",
                          "The source engine is MySQL.",
                          "The source engine is PostgreSQL."
                        ]
                      },
                      "provider": {
                        "enum": [
                          "DATABASE_PROVIDER_UNSPECIFIED",
                          "CLOUDSQL",
                          "RDS"
                        ],
                        "type": "string",
                        "description": "The database provider.",
                        "enumDescriptions": [
                          "The database provider is unknown.",
                          "CloudSQL runs the database.",
                          "RDS runs the database."
                        ]
                      }
                    },
                    "description": "The database engine type and provider of the destination."
                  },
                  "staticIpConnectivity": {
                    "id": "StaticIpConnectivity",
                    "type": "object",
                    "properties": {},
                    "description": "static ip connectivity data (default, no additional details needed)."
                  },
                  "reverseSshConnectivity": {
                    "id": "ReverseSshConnectivity",
                    "type": "object",
                    "properties": {
                      "vm": {
                        "type": "string",
                        "description": "The name of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel."
                      },
                      "vpc": {
                        "type": "string",
                        "description": "The name of the VPC to peer with the Cloud SQL private network."
                      },
                      "vmIp": {
                        "type": "string",
                        "description": "Required. The IP of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel."
                      },
                      "vmPort": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Required. The forwarding port of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel."
                      }
                    },
                    "description": "The details needed to communicate to the source over Reverse SSH tunnel connectivity."
                  },
                  "vpcPeeringConnectivity": {
                    "id": "VpcPeeringConnectivity",
                    "type": "object",
                    "properties": {
                      "vpc": {
                        "type": "string",
                        "description": "The name of the VPC network to peer with the Cloud SQL private network."
                      }
                    },
                    "description": "The details of the VPC network that the source database is located in."
                  }
                },
                "description": "Represents a Database Migration Service migration job object."
              },
              "description": "The list of migration jobs objects."
            },
            "nextPageToken": {
              "type": "string",
              "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
            }
          },
          "description": "Response message for 'ListMigrationJobs' request."
        }
      ]
  projects.locations.migrationJobs.patch:
    description: |-
      Updates the parameters of a single migration job.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.migrationJobs/patch
    example:
      inputs: [
        {
          "id": "MigrationJob",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name (URI) of this migration job resource, in the form of: projects/{project}/locations/{location}/instances/{instance}."
            },
            "type": {
              "enum": [
                "TYPE_UNSPECIFIED",
                "ONE_TIME",
                "CONTINUOUS"
              ],
              "type": "string",
              "description": "Required. The migration job type.",
              "enumDescriptions": [
                "The type of the migration job is unknown.",
                "The migration job is a one time migration.",
                "The migration job is a continuous migration."
              ]
            },
            "error": {
              "id": "Status",
              "type": "object",
              "readOnly": true,
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "Output only. The error details in case of state FAILED."
            },
            "phase": {
              "enum": [
                "PHASE_UNSPECIFIED",
                "FULL_DUMP",
                "CDC",
                "PROMOTE_IN_PROGRESS",
                "WAITING_FOR_SOURCE_WRITES_TO_STOP",
                "PREPARING_THE_DUMP"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. The current migration job phase.",
              "enumDescriptions": [
                "The phase of the migration job is unknown.",
                "The migration job is in the full dump phase.",
                "The migration job is CDC phase.",
                "The migration job is running the promote phase.",
                "Only RDS flow - waiting for source writes to stop",
                "Only RDS flow - the sources writes stopped, waiting for dump to begin"
              ]
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "MAINTENANCE",
                "DRAFT",
                "CREATING",
                "NOT_STARTED",
                "RUNNING",
                "FAILED",
                "COMPLETED",
                "DELETING",
                "STOPPING",
                "STOPPED",
                "DELETED",
                "UPDATING",
                "STARTING",
                "RESTARTING",
                "RESUMING"
              ],
              "type": "string",
              "description": "The current migration job state.",
              "enumDescriptions": [
                "The state of the migration job is unknown.",
                "The migration job is down for maintenance.",
                "The migration job is in draft mode and no resources are created.",
                "The migration job is being created.",
                "The migration job is created, not started and is fully editable.",
                "The migration job is running.",
                "The migration job failed.",
                "The migration job has been completed.",
                "The migration job is being deleted.",
                "The migration job is being stopped.",
                "The migration job is currently stopped.",
                "The migration job has been deleted.",
                "The migration job is being updated.",
                "The migration job is starting.",
                "The migration job is restarting.",
                "The migration job is resuming."
              ]
            },
            "labels": {
              "type": "object",
              "description": "The resource labels for migration job to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of \"key\": \"value\" pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }`.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "source": {
              "type": "string",
              "description": "Required. The resource name (URI) of the source connection profile."
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. If the migration job is completed, the time when it was completed."
            },
            "dumpPath": {
              "type": "string",
              "description": "The path to the dump file in Google Cloud Storage, in the format: (gs://[BUCKET_NAME]/[OBJECT_NAME])."
            },
            "duration": {
              "type": "string",
              "format": "google-duration",
              "readOnly": true,
              "description": "Output only. The duration of the migration job (in seconds). A duration in seconds with up to nine fractional digits, terminated by 's'. Example: \"3.5s\"."
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The timestamp when the migration job resource was created. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\"."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The timestamp when the migration job resource was last updated. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\"."
            },
            "destination": {
              "type": "string",
              "description": "Required. The resource name (URI) of the destination connection profile."
            },
            "displayName": {
              "type": "string",
              "description": "The migration job display name."
            },
            "sourceDatabase": {
              "id": "DatabaseType",
              "type": "object",
              "properties": {
                "engine": {
                  "enum": [
                    "DATABASE_ENGINE_UNSPECIFIED",
                    "MYSQL",
                    "POSTGRESQL"
                  ],
                  "type": "string",
                  "description": "The database engine.",
                  "enumDescriptions": [
                    "The source database engine of the migration job is unknown.",
                    "The source engine is MySQL.",
                    "The source engine is PostgreSQL."
                  ]
                },
                "provider": {
                  "enum": [
                    "DATABASE_PROVIDER_UNSPECIFIED",
                    "CLOUDSQL",
                    "RDS"
                  ],
                  "type": "string",
                  "description": "The database provider.",
                  "enumDescriptions": [
                    "The database provider is unknown.",
                    "CloudSQL runs the database.",
                    "RDS runs the database."
                  ]
                }
              },
              "description": "The database engine type and provider of the source."
            },
            "destinationDatabase": {
              "id": "DatabaseType",
              "type": "object",
              "properties": {
                "engine": {
                  "enum": [
                    "DATABASE_ENGINE_UNSPECIFIED",
                    "MYSQL",
                    "POSTGRESQL"
                  ],
                  "type": "string",
                  "description": "The database engine.",
                  "enumDescriptions": [
                    "The source database engine of the migration job is unknown.",
                    "The source engine is MySQL.",
                    "The source engine is PostgreSQL."
                  ]
                },
                "provider": {
                  "enum": [
                    "DATABASE_PROVIDER_UNSPECIFIED",
                    "CLOUDSQL",
                    "RDS"
                  ],
                  "type": "string",
                  "description": "The database provider.",
                  "enumDescriptions": [
                    "The database provider is unknown.",
                    "CloudSQL runs the database.",
                    "RDS runs the database."
                  ]
                }
              },
              "description": "The database engine type and provider of the destination."
            },
            "staticIpConnectivity": {
              "id": "StaticIpConnectivity",
              "type": "object",
              "properties": {},
              "description": "static ip connectivity data (default, no additional details needed)."
            },
            "reverseSshConnectivity": {
              "id": "ReverseSshConnectivity",
              "type": "object",
              "properties": {
                "vm": {
                  "type": "string",
                  "description": "The name of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel."
                },
                "vpc": {
                  "type": "string",
                  "description": "The name of the VPC to peer with the Cloud SQL private network."
                },
                "vmIp": {
                  "type": "string",
                  "description": "Required. The IP of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel."
                },
                "vmPort": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Required. The forwarding port of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel."
                }
              },
              "description": "The details needed to communicate to the source over Reverse SSH tunnel connectivity."
            },
            "vpcPeeringConnectivity": {
              "id": "VpcPeeringConnectivity",
              "type": "object",
              "properties": {
                "vpc": {
                  "type": "string",
                  "description": "The name of the VPC network to peer with the Cloud SQL private network."
                }
              },
              "description": "The details of the VPC network that the source database is located in."
            }
          },
          "description": "Represents a Database Migration Service migration job object."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.migrationJobs.promote:
    description: |-
      Promote a migration job, stopping replication to the destination and promoting the destination to be a standalone database.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.migrationJobs/promote
    example:
      inputs: [
        {
          "id": "PromoteMigrationJobRequest",
          "type": "object",
          "properties": {},
          "description": "Request message for 'PromoteMigrationJob' request."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.migrationJobs.restart:
    description: |-
      Restart a stopped or failed migration job, resetting the destination instance to its original state and starting the migration process from scratch.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.migrationJobs/restart
    example:
      inputs: [
        {
          "id": "RestartMigrationJobRequest",
          "type": "object",
          "properties": {},
          "description": "Request message for 'RestartMigrationJob' request."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.migrationJobs.resume:
    description: |-
      Resume a migration job that is currently stopped and is resumable (was stopped during CDC phase).
    versions:
      from: 1.0.0
    link: https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.migrationJobs/resume
    example:
      inputs: [
        {
          "id": "ResumeMigrationJobRequest",
          "type": "object",
          "properties": {},
          "description": "Request message for 'ResumeMigrationJob' request."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.migrationJobs.setIamPolicy:
    description: |-
      Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.migrationJobs/setIamPolicy
    example:
      inputs: [
        {
          "id": "SetIamPolicyRequest",
          "type": "object",
          "properties": {
            "policy": {
              "id": "Policy",
              "type": "object",
              "properties": {
                "etag": {
                  "type": "string",
                  "format": "byte",
                  "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
                },
                "version": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                },
                "bindings": {
                  "type": "array",
                  "items": {
                    "id": "Binding",
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                      },
                      "members": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                      },
                      "condition": {
                        "id": "Expr",
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                          },
                          "location": {
                            "type": "string",
                            "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                          },
                          "expression": {
                            "type": "string",
                            "description": "Textual representation of an expression in Common Expression Language syntax."
                          },
                          "description": {
                            "type": "string",
                            "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                          }
                        },
                        "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                      }
                    },
                    "description": "Associates `members` with a `role`."
                  },
                  "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
                },
                "auditConfigs": {
                  "type": "array",
                  "items": {
                    "id": "AuditConfig",
                    "type": "object",
                    "properties": {
                      "service": {
                        "type": "string",
                        "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                      },
                      "auditLogConfigs": {
                        "type": "array",
                        "items": {
                          "id": "AuditLogConfig",
                          "type": "object",
                          "properties": {
                            "logType": {
                              "enum": [
                                "LOG_TYPE_UNSPECIFIED",
                                "ADMIN_READ",
                                "DATA_WRITE",
                                "DATA_READ"
                              ],
                              "type": "string",
                              "description": "The log type that this config enables.",
                              "enumDescriptions": [
                                "Default case. Should never be this.",
                                "Admin reads. Example: CloudIAM getIamPolicy",
                                "Data writes. Example: CloudSQL Users create",
                                "Data reads. Example: CloudSQL Users list"
                              ]
                            },
                            "exemptedMembers": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                            }
                          },
                          "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                        },
                        "description": "The configuration for logging of each type of permission."
                      }
                    },
                    "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
                  },
                  "description": "Specifies cloud audit logging configuration for this policy."
                }
              },
              "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
            },
            "updateMask": {
              "type": "string",
              "format": "google-fieldmask",
              "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`"
            }
          },
          "description": "Request message for `SetIamPolicy` method."
        }
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            },
            "auditConfigs": {
              "type": "array",
              "items": {
                "id": "AuditConfig",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                  },
                  "auditLogConfigs": {
                    "type": "array",
                    "items": {
                      "id": "AuditLogConfig",
                      "type": "object",
                      "properties": {
                        "logType": {
                          "enum": [
                            "LOG_TYPE_UNSPECIFIED",
                            "ADMIN_READ",
                            "DATA_WRITE",
                            "DATA_READ"
                          ],
                          "type": "string",
                          "description": "The log type that this config enables.",
                          "enumDescriptions": [
                            "Default case. Should never be this.",
                            "Admin reads. Example: CloudIAM getIamPolicy",
                            "Data writes. Example: CloudSQL Users create",
                            "Data reads. Example: CloudSQL Users list"
                          ]
                        },
                        "exemptedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                        }
                      },
                      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                    },
                    "description": "The configuration for logging of each type of permission."
                  }
                },
                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
              },
              "description": "Specifies cloud audit logging configuration for this policy."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  projects.locations.migrationJobs.start:
    description: |-
      Start an already created migration job.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.migrationJobs/start
    example:
      inputs: [
        {
          "id": "StartMigrationJobRequest",
          "type": "object",
          "properties": {},
          "description": "Request message for 'StartMigrationJob' request."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.migrationJobs.stop:
    description: |-
      Stops a running migration job.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.migrationJobs/stop
    example:
      inputs: [
        {
          "id": "StopMigrationJobRequest",
          "type": "object",
          "properties": {},
          "description": "Request message for 'StopMigrationJob' request."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.migrationJobs.testIamPermissions:
    description: |-
      Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.migrationJobs/testIamPermissions
    example:
      inputs: [
        {
          "id": "TestIamPermissionsRequest",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
            }
          },
          "description": "Request message for `TestIamPermissions` method."
        }
      ]
      outputs: [
        {
          "id": "TestIamPermissionsResponse",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
            }
          },
          "description": "Response message for `TestIamPermissions` method."
        }
      ]
  projects.locations.migrationJobs.verify:
    description: |-
      Verify a migration job, making sure the destination can reach the source and that all configuration and prerequisites are met.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.migrationJobs/verify
    example:
      inputs: [
        {
          "id": "VerifyMigrationJobRequest",
          "type": "object",
          "properties": {},
          "description": "Request message for 'VerifyMigrationJob' request."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.operations.cancel:
    description: |-
      Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.operations/cancel
    example:
      inputs: [
        {
          "id": "CancelOperationRequest",
          "type": "object",
          "properties": {},
          "description": "The request message for Operations.CancelOperation."
        }
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  projects.locations.operations.delete:
    description: |-
      Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.operations/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  projects.locations.operations.get:
    description: |-
      Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.operations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.operations.list:
    description: |-
      Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.operations/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListOperationsResponse",
          "type": "object",
          "properties": {
            "operations": {
              "type": "array",
              "items": {
                "id": "Operation",
                "type": "object",
                "properties": {
                  "done": {
                    "type": "boolean",
                    "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
                  },
                  "name": {
                    "type": "string",
                    "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
                  },
                  "error": {
                    "id": "Status",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The status code, which should be an enum value of google.rpc.Code."
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object. Contains field @type with type URL."
                          }
                        },
                        "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                      },
                      "message": {
                        "type": "string",
                        "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                      }
                    },
                    "description": "The error result of the operation in case of failure or cancellation."
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "response": {
                    "type": "object",
                    "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  }
                },
                "description": "This resource represents a long-running operation that is the result of a network API call."
              },
              "description": "A list of operations that matches the specified filter in the request."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The standard List next-page token."
            }
          },
          "description": "The response message for Operations.ListOperations."
        }
      ]