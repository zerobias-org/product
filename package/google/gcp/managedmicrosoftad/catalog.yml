Product:
  name: GCP Managed Microsoft AD
  versions: [1.0.0]
  package: google.gcp.managedmicrosoftad
  description: |-
    Managed Service for Microsoft Active Directory Consumer API
  link: https://cloud.google.com/managed-microsoft-ad
  contentType: json
Operations:
  projects.locations.get:
    description: |-
      Gets information about a location.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/managed-microsoft-ad/reference/rest/v1/projects.locations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Location",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
            },
            "labels": {
              "type": "object",
              "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
              "additionalProperties": {
                "type": "string"
              }
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata. For example the available capacity at the given location.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "locationId": {
              "type": "string",
              "description": "The canonical id for this location. For example: `\"us-east1\"`."
            },
            "displayName": {
              "type": "string",
              "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
            }
          },
          "description": "A resource that represents Google Cloud Platform location."
        }
      ]
  projects.locations.global.domains.attachTrust:
    description: |-
      Adds an AD trust to a domain.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/managed-microsoft-ad/reference/rest/v1/projects.locations.global.domains/attachTrust
    example:
      inputs: [
        {
          "id": "AttachTrustRequest",
          "type": "object",
          "properties": {
            "trust": {
              "id": "Trust",
              "type": "object",
              "properties": {
                "state": {
                  "enum": [
                    "STATE_UNSPECIFIED",
                    "CREATING",
                    "UPDATING",
                    "DELETING",
                    "CONNECTED",
                    "DISCONNECTED"
                  ],
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. The current state of the trust.",
                  "enumDescriptions": [
                    "Not set.",
                    "The domain trust is being created.",
                    "The domain trust is being updated.",
                    "The domain trust is being deleted.",
                    "The domain trust is connected.",
                    "The domain trust is disconnected."
                  ]
                },
                "trustType": {
                  "enum": [
                    "TRUST_TYPE_UNSPECIFIED",
                    "FOREST",
                    "EXTERNAL"
                  ],
                  "type": "string",
                  "description": "Required. The type of trust represented by the trust resource.",
                  "enumDescriptions": [
                    "Not set.",
                    "The forest trust.",
                    "The external domain trust."
                  ]
                },
                "createTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "readOnly": true,
                  "description": "Output only. The time the instance was created."
                },
                "updateTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "readOnly": true,
                  "description": "Output only. The last update time."
                },
                "trustDirection": {
                  "enum": [
                    "TRUST_DIRECTION_UNSPECIFIED",
                    "INBOUND",
                    "OUTBOUND",
                    "BIDIRECTIONAL"
                  ],
                  "type": "string",
                  "description": "Required. The trust direction, which decides if the current domain is trusted, trusting, or both.",
                  "enumDescriptions": [
                    "Not set.",
                    "The inbound direction represents the trusting side.",
                    "The outboud direction represents the trusted side.",
                    "The bidirectional direction represents the trusted / trusting side."
                  ]
                },
                "stateDescription": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. Additional information about the current state of the trust, if available."
                },
                "targetDomainName": {
                  "type": "string",
                  "description": "Required. The fully qualified target domain name which will be in trust with the current domain."
                },
                "targetDnsIpAddresses": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Required. The target DNS server IP addresses which can resolve the remote domain involved in the trust."
                },
                "trustHandshakeSecret": {
                  "type": "string",
                  "description": "Required. The trust secret used for the handshake with the target domain. This will not be stored."
                },
                "lastTrustHeartbeatTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "readOnly": true,
                  "description": "Output only. The last heartbeat time when the trust was known to be connected."
                },
                "selectiveAuthentication": {
                  "type": "boolean",
                  "description": "Optional. The trust authentication type, which decides whether the trusted side has forest/domain wide access or selective access to an approved set of resources."
                }
              },
              "description": "Required. The domain trust resource."
            }
          },
          "description": "Request message for AttachTrust"
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.global.domains.create:
    description: |-
      Creates a Microsoft AD domain.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/managed-microsoft-ad/reference/rest/v1/projects.locations.global.domains/create
    example:
      inputs: [
        {
          "id": "Domain",
          "type": "object",
          "properties": {
            "fqdn": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The fully-qualified domain name of the exposed domain used by clients to connect to the service. Similar to what would be chosen for an Active Directory set up on an internal network."
            },
            "name": {
              "type": "string",
              "description": "Required. The unique name of the domain using the form: `projects/{project_id}/locations/global/domains/{domain_name}`."
            },
            "admin": {
              "type": "string",
              "description": "Optional. The name of delegated administrator account used to perform Active Directory operations. If not specified, `setupadmin` will be used."
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "CREATING",
                "READY",
                "UPDATING",
                "DELETING",
                "REPAIRING",
                "PERFORMING_MAINTENANCE",
                "UNAVAILABLE"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. The current state of this domain.",
              "enumDescriptions": [
                "Not set.",
                "The domain is being created.",
                "The domain has been created and is fully usable.",
                "The domain's configuration is being updated.",
                "The domain is being deleted.",
                "The domain is being repaired and may be unusable. Details can be found in the `status_message` field.",
                "The domain is undergoing maintenance.",
                "The domain is not serving requests."
              ]
            },
            "labels": {
              "type": "object",
              "description": "Optional. Resource labels that can contain user-provided metadata.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "trusts": {
              "type": "array",
              "items": {
                "id": "Trust",
                "type": "object",
                "properties": {
                  "state": {
                    "enum": [
                      "STATE_UNSPECIFIED",
                      "CREATING",
                      "UPDATING",
                      "DELETING",
                      "CONNECTED",
                      "DISCONNECTED"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The current state of the trust.",
                    "enumDescriptions": [
                      "Not set.",
                      "The domain trust is being created.",
                      "The domain trust is being updated.",
                      "The domain trust is being deleted.",
                      "The domain trust is connected.",
                      "The domain trust is disconnected."
                    ]
                  },
                  "trustType": {
                    "enum": [
                      "TRUST_TYPE_UNSPECIFIED",
                      "FOREST",
                      "EXTERNAL"
                    ],
                    "type": "string",
                    "description": "Required. The type of trust represented by the trust resource.",
                    "enumDescriptions": [
                      "Not set.",
                      "The forest trust.",
                      "The external domain trust."
                    ]
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The time the instance was created."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The last update time."
                  },
                  "trustDirection": {
                    "enum": [
                      "TRUST_DIRECTION_UNSPECIFIED",
                      "INBOUND",
                      "OUTBOUND",
                      "BIDIRECTIONAL"
                    ],
                    "type": "string",
                    "description": "Required. The trust direction, which decides if the current domain is trusted, trusting, or both.",
                    "enumDescriptions": [
                      "Not set.",
                      "The inbound direction represents the trusting side.",
                      "The outboud direction represents the trusted side.",
                      "The bidirectional direction represents the trusted / trusting side."
                    ]
                  },
                  "stateDescription": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Additional information about the current state of the trust, if available."
                  },
                  "targetDomainName": {
                    "type": "string",
                    "description": "Required. The fully qualified target domain name which will be in trust with the current domain."
                  },
                  "targetDnsIpAddresses": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Required. The target DNS server IP addresses which can resolve the remote domain involved in the trust."
                  },
                  "trustHandshakeSecret": {
                    "type": "string",
                    "description": "Required. The trust secret used for the handshake with the target domain. This will not be stored."
                  },
                  "lastTrustHeartbeatTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The last heartbeat time when the trust was known to be connected."
                  },
                  "selectiveAuthentication": {
                    "type": "boolean",
                    "description": "Optional. The trust authentication type, which decides whether the trusted side has forest/domain wide access or selective access to an approved set of resources."
                  }
                },
                "description": "Represents a relationship between two domains. This allows a controller in one domain to authenticate a user in another domain. If the trust is being changed, it will be placed into the UPDATING state, which indicates that the resource is being reconciled. At this point, Get will reflect an intermediate state."
              },
              "readOnly": true,
              "description": "Output only. The current trusts associated with the domain."
            },
            "locations": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Required. Locations where domain needs to be provisioned. regions e.g. us-west1 or us-east4 Service supports up to 4 locations at once. Each location will use a /26 block."
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The time the instance was created."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The last update time."
            },
            "statusMessage": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Additional information about the current status of this domain, if available."
            },
            "reservedIpRange": {
              "type": "string",
              "description": "Required. The CIDR range of internal addresses that are reserved for this domain. Reserved networks must be /24 or larger. Ranges must be unique and non-overlapping with existing subnets in [Domain].[authorized_networks]."
            },
            "authorizedNetworks": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Optional. The full names of the Google Compute Engine [networks](/compute/docs/networks-and-firewalls#networks) the domain instance is connected to. Networks can be added using UpdateDomain. The domain is only available on networks listed in `authorized_networks`. If CIDR subnets overlap between networks, domain creation will fail."
            }
          },
          "description": "Represents a managed Microsoft Active Directory domain. If the domain is being changed, it will be placed into the UPDATING state, which indicates that the resource is being reconciled. At this point, Get will reflect an intermediate state."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.global.domains.delete:
    description: |-
      Deletes a domain.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/managed-microsoft-ad/reference/rest/v1/projects.locations.global.domains/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.global.domains.detachTrust:
    description: |-
      Removes an AD trust.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/managed-microsoft-ad/reference/rest/v1/projects.locations.global.domains/detachTrust
    example:
      inputs: [
        {
          "id": "DetachTrustRequest",
          "type": "object",
          "properties": {
            "trust": {
              "id": "Trust",
              "type": "object",
              "properties": {
                "state": {
                  "enum": [
                    "STATE_UNSPECIFIED",
                    "CREATING",
                    "UPDATING",
                    "DELETING",
                    "CONNECTED",
                    "DISCONNECTED"
                  ],
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. The current state of the trust.",
                  "enumDescriptions": [
                    "Not set.",
                    "The domain trust is being created.",
                    "The domain trust is being updated.",
                    "The domain trust is being deleted.",
                    "The domain trust is connected.",
                    "The domain trust is disconnected."
                  ]
                },
                "trustType": {
                  "enum": [
                    "TRUST_TYPE_UNSPECIFIED",
                    "FOREST",
                    "EXTERNAL"
                  ],
                  "type": "string",
                  "description": "Required. The type of trust represented by the trust resource.",
                  "enumDescriptions": [
                    "Not set.",
                    "The forest trust.",
                    "The external domain trust."
                  ]
                },
                "createTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "readOnly": true,
                  "description": "Output only. The time the instance was created."
                },
                "updateTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "readOnly": true,
                  "description": "Output only. The last update time."
                },
                "trustDirection": {
                  "enum": [
                    "TRUST_DIRECTION_UNSPECIFIED",
                    "INBOUND",
                    "OUTBOUND",
                    "BIDIRECTIONAL"
                  ],
                  "type": "string",
                  "description": "Required. The trust direction, which decides if the current domain is trusted, trusting, or both.",
                  "enumDescriptions": [
                    "Not set.",
                    "The inbound direction represents the trusting side.",
                    "The outboud direction represents the trusted side.",
                    "The bidirectional direction represents the trusted / trusting side."
                  ]
                },
                "stateDescription": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. Additional information about the current state of the trust, if available."
                },
                "targetDomainName": {
                  "type": "string",
                  "description": "Required. The fully qualified target domain name which will be in trust with the current domain."
                },
                "targetDnsIpAddresses": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Required. The target DNS server IP addresses which can resolve the remote domain involved in the trust."
                },
                "trustHandshakeSecret": {
                  "type": "string",
                  "description": "Required. The trust secret used for the handshake with the target domain. This will not be stored."
                },
                "lastTrustHeartbeatTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "readOnly": true,
                  "description": "Output only. The last heartbeat time when the trust was known to be connected."
                },
                "selectiveAuthentication": {
                  "type": "boolean",
                  "description": "Optional. The trust authentication type, which decides whether the trusted side has forest/domain wide access or selective access to an approved set of resources."
                }
              },
              "description": "Represents a relationship between two domains. This allows a controller in one domain to authenticate a user in another domain. If the trust is being changed, it will be placed into the UPDATING state, which indicates that the resource is being reconciled. At this point, Get will reflect an intermediate state."
            }
          },
          "description": "Request message for DetachTrust"
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.global.domains.get:
    description: |-
      Gets information about a domain.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/managed-microsoft-ad/reference/rest/v1/projects.locations.global.domains/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.global.domains.getIamPolicy:
    description: |-
      Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/managed-microsoft-ad/reference/rest/v1/projects.locations.global.domains/getIamPolicy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  projects.locations.global.domains.getLdapssettings:
    description: |-
      Gets the domain ldaps settings.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/managed-microsoft-ad/reference/rest/v1/projects.locations.global.domains/getLdapssettings
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "LDAPSSettings",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The resource name of the LDAPS settings. Uses the form: `projects/{project}/locations/{location}/domains/{domain}`."
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "UPDATING",
                "ACTIVE",
                "FAILED"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. The current state of this LDAPS settings.",
              "enumDescriptions": [
                "Not Set",
                "The LDAPS setting is being updated.",
                "The LDAPS setting is ready.",
                "The LDAPS setting is not applied correctly."
              ]
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Last update time."
            },
            "certificate": {
              "id": "Certificate",
              "type": "object",
              "readOnly": true,
              "properties": {
                "subject": {
                  "type": "string",
                  "description": "The certificate subject."
                },
                "expireTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "The certificate expire time."
                },
                "thumbprint": {
                  "type": "string",
                  "description": "The certificate thumbprint which uniquely identifies the certificate."
                },
                "issuingCertificate": {
                  "id": "Certificate",
                  "type": "object",
                  "properties": {},
                  "description": "The issuer of this certificate."
                },
                "subjectAlternativeName": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The additional hostnames for the domain."
                }
              },
              "description": "Output only. The certificate used to configure LDAPS. Certificates can be chained with a maximum length of 15."
            },
            "certificatePfx": {
              "type": "string",
              "format": "byte",
              "description": "Input only. The uploaded PKCS12-formatted certificate to configure LDAPS with. It will enable the domain controllers in this domain to accept LDAPS connections (either LDAP over SSL/TLS or the StartTLS operation). A valid certificate chain must form a valid x.509 certificate chain (or be comprised of a single self-signed certificate. It must be encrypted with either: 1) PBES2 + PBKDF2 + AES256 encryption and SHA256 PRF; or 2) pbeWithSHA1And3-KeyTripleDES-CBC Private key must be included for the leaf / single self-signed certificate. Note: For a fqdn your-example-domain.com, the wildcard fqdn is *.your-example-domain.com. Specifically the leaf certificate must have: - Either a blank subject or a subject with CN matching the wildcard fqdn. - Exactly two SANs - the fqdn and wildcard fqdn. - Encipherment and digital key signature key usages. - Server authentication extended key usage (OID=1.3.6.1.5.5.7.3.1) - Private key must be in one of the following formats: RSA, ECDSA, ED25519. - Private key must have appropriate key length: 2048 for RSA, 256 for ECDSA - Signature algorithm of the leaf certificate cannot be MD2, MD5 or SHA1."
            },
            "certificatePassword": {
              "type": "string",
              "description": "Input only. The password used to encrypt the uploaded pfx certificate."
            }
          },
          "description": "LDAPSSettings represents the ldaps settings for domain resource. LDAP is the Lightweight Directory Access Protocol, defined in https://tools.ietf.org/html/rfc4511. The settings object configures LDAP over SSL/TLS, whether it is over port 636 or the StartTLS operation. If LDAPSSettings is being changed, it will be placed into the UPDATING state, which indicates that the resource is being reconciled. At this point, Get will reflect an intermediate state."
        }
      ]
  projects.locations.global.domains.list:
    description: |-
      Lists domains in a project.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/managed-microsoft-ad/reference/rest/v1/projects.locations.global.domains/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListDomainsResponse",
          "type": "object",
          "properties": {
            "domains": {
              "type": "array",
              "items": {
                "id": "Domain",
                "type": "object",
                "properties": {
                  "fqdn": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The fully-qualified domain name of the exposed domain used by clients to connect to the service. Similar to what would be chosen for an Active Directory set up on an internal network."
                  },
                  "name": {
                    "type": "string",
                    "description": "Required. The unique name of the domain using the form: `projects/{project_id}/locations/global/domains/{domain_name}`."
                  },
                  "admin": {
                    "type": "string",
                    "description": "Optional. The name of delegated administrator account used to perform Active Directory operations. If not specified, `setupadmin` will be used."
                  },
                  "state": {
                    "enum": [
                      "STATE_UNSPECIFIED",
                      "CREATING",
                      "READY",
                      "UPDATING",
                      "DELETING",
                      "REPAIRING",
                      "PERFORMING_MAINTENANCE",
                      "UNAVAILABLE"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The current state of this domain.",
                    "enumDescriptions": [
                      "Not set.",
                      "The domain is being created.",
                      "The domain has been created and is fully usable.",
                      "The domain's configuration is being updated.",
                      "The domain is being deleted.",
                      "The domain is being repaired and may be unusable. Details can be found in the `status_message` field.",
                      "The domain is undergoing maintenance.",
                      "The domain is not serving requests."
                    ]
                  },
                  "labels": {
                    "type": "object",
                    "description": "Optional. Resource labels that can contain user-provided metadata.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "trusts": {
                    "type": "array",
                    "items": {
                      "id": "Trust",
                      "type": "object",
                      "properties": {
                        "state": {
                          "enum": [
                            "STATE_UNSPECIFIED",
                            "CREATING",
                            "UPDATING",
                            "DELETING",
                            "CONNECTED",
                            "DISCONNECTED"
                          ],
                          "type": "string",
                          "readOnly": true,
                          "description": "Output only. The current state of the trust.",
                          "enumDescriptions": [
                            "Not set.",
                            "The domain trust is being created.",
                            "The domain trust is being updated.",
                            "The domain trust is being deleted.",
                            "The domain trust is connected.",
                            "The domain trust is disconnected."
                          ]
                        },
                        "trustType": {
                          "enum": [
                            "TRUST_TYPE_UNSPECIFIED",
                            "FOREST",
                            "EXTERNAL"
                          ],
                          "type": "string",
                          "description": "Required. The type of trust represented by the trust resource.",
                          "enumDescriptions": [
                            "Not set.",
                            "The forest trust.",
                            "The external domain trust."
                          ]
                        },
                        "createTime": {
                          "type": "string",
                          "format": "google-datetime",
                          "readOnly": true,
                          "description": "Output only. The time the instance was created."
                        },
                        "updateTime": {
                          "type": "string",
                          "format": "google-datetime",
                          "readOnly": true,
                          "description": "Output only. The last update time."
                        },
                        "trustDirection": {
                          "enum": [
                            "TRUST_DIRECTION_UNSPECIFIED",
                            "INBOUND",
                            "OUTBOUND",
                            "BIDIRECTIONAL"
                          ],
                          "type": "string",
                          "description": "Required. The trust direction, which decides if the current domain is trusted, trusting, or both.",
                          "enumDescriptions": [
                            "Not set.",
                            "The inbound direction represents the trusting side.",
                            "The outboud direction represents the trusted side.",
                            "The bidirectional direction represents the trusted / trusting side."
                          ]
                        },
                        "stateDescription": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Output only. Additional information about the current state of the trust, if available."
                        },
                        "targetDomainName": {
                          "type": "string",
                          "description": "Required. The fully qualified target domain name which will be in trust with the current domain."
                        },
                        "targetDnsIpAddresses": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Required. The target DNS server IP addresses which can resolve the remote domain involved in the trust."
                        },
                        "trustHandshakeSecret": {
                          "type": "string",
                          "description": "Required. The trust secret used for the handshake with the target domain. This will not be stored."
                        },
                        "lastTrustHeartbeatTime": {
                          "type": "string",
                          "format": "google-datetime",
                          "readOnly": true,
                          "description": "Output only. The last heartbeat time when the trust was known to be connected."
                        },
                        "selectiveAuthentication": {
                          "type": "boolean",
                          "description": "Optional. The trust authentication type, which decides whether the trusted side has forest/domain wide access or selective access to an approved set of resources."
                        }
                      },
                      "description": "Represents a relationship between two domains. This allows a controller in one domain to authenticate a user in another domain. If the trust is being changed, it will be placed into the UPDATING state, which indicates that the resource is being reconciled. At this point, Get will reflect an intermediate state."
                    },
                    "readOnly": true,
                    "description": "Output only. The current trusts associated with the domain."
                  },
                  "locations": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Required. Locations where domain needs to be provisioned. regions e.g. us-west1 or us-east4 Service supports up to 4 locations at once. Each location will use a /26 block."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The time the instance was created."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The last update time."
                  },
                  "statusMessage": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Additional information about the current status of this domain, if available."
                  },
                  "reservedIpRange": {
                    "type": "string",
                    "description": "Required. The CIDR range of internal addresses that are reserved for this domain. Reserved networks must be /24 or larger. Ranges must be unique and non-overlapping with existing subnets in [Domain].[authorized_networks]."
                  },
                  "authorizedNetworks": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Optional. The full names of the Google Compute Engine [networks](/compute/docs/networks-and-firewalls#networks) the domain instance is connected to. Networks can be added using UpdateDomain. The domain is only available on networks listed in `authorized_networks`. If CIDR subnets overlap between networks, domain creation will fail."
                  }
                },
                "description": "Represents a managed Microsoft Active Directory domain. If the domain is being changed, it will be placed into the UPDATING state, which indicates that the resource is being reconciled. At this point, Get will reflect an intermediate state."
              },
              "description": "A list of Managed Identities Service domains in the project."
            },
            "unreachable": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of locations that could not be reached."
            },
            "nextPageToken": {
              "type": "string",
              "description": "A token to retrieve the next page of results, or empty if there are no more results in the list."
            }
          },
          "description": "Response message for ListDomains"
        }
      ]
  projects.locations.global.domains.patch:
    description: |-
      Updates the metadata and configuration of a domain.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/managed-microsoft-ad/reference/rest/v1/projects.locations.global.domains/patch
    example:
      inputs: [
        {
          "id": "Domain",
          "type": "object",
          "properties": {
            "fqdn": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The fully-qualified domain name of the exposed domain used by clients to connect to the service. Similar to what would be chosen for an Active Directory set up on an internal network."
            },
            "name": {
              "type": "string",
              "description": "Required. The unique name of the domain using the form: `projects/{project_id}/locations/global/domains/{domain_name}`."
            },
            "admin": {
              "type": "string",
              "description": "Optional. The name of delegated administrator account used to perform Active Directory operations. If not specified, `setupadmin` will be used."
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "CREATING",
                "READY",
                "UPDATING",
                "DELETING",
                "REPAIRING",
                "PERFORMING_MAINTENANCE",
                "UNAVAILABLE"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. The current state of this domain.",
              "enumDescriptions": [
                "Not set.",
                "The domain is being created.",
                "The domain has been created and is fully usable.",
                "The domain's configuration is being updated.",
                "The domain is being deleted.",
                "The domain is being repaired and may be unusable. Details can be found in the `status_message` field.",
                "The domain is undergoing maintenance.",
                "The domain is not serving requests."
              ]
            },
            "labels": {
              "type": "object",
              "description": "Optional. Resource labels that can contain user-provided metadata.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "trusts": {
              "type": "array",
              "items": {
                "id": "Trust",
                "type": "object",
                "properties": {
                  "state": {
                    "enum": [
                      "STATE_UNSPECIFIED",
                      "CREATING",
                      "UPDATING",
                      "DELETING",
                      "CONNECTED",
                      "DISCONNECTED"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The current state of the trust.",
                    "enumDescriptions": [
                      "Not set.",
                      "The domain trust is being created.",
                      "The domain trust is being updated.",
                      "The domain trust is being deleted.",
                      "The domain trust is connected.",
                      "The domain trust is disconnected."
                    ]
                  },
                  "trustType": {
                    "enum": [
                      "TRUST_TYPE_UNSPECIFIED",
                      "FOREST",
                      "EXTERNAL"
                    ],
                    "type": "string",
                    "description": "Required. The type of trust represented by the trust resource.",
                    "enumDescriptions": [
                      "Not set.",
                      "The forest trust.",
                      "The external domain trust."
                    ]
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The time the instance was created."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The last update time."
                  },
                  "trustDirection": {
                    "enum": [
                      "TRUST_DIRECTION_UNSPECIFIED",
                      "INBOUND",
                      "OUTBOUND",
                      "BIDIRECTIONAL"
                    ],
                    "type": "string",
                    "description": "Required. The trust direction, which decides if the current domain is trusted, trusting, or both.",
                    "enumDescriptions": [
                      "Not set.",
                      "The inbound direction represents the trusting side.",
                      "The outboud direction represents the trusted side.",
                      "The bidirectional direction represents the trusted / trusting side."
                    ]
                  },
                  "stateDescription": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Additional information about the current state of the trust, if available."
                  },
                  "targetDomainName": {
                    "type": "string",
                    "description": "Required. The fully qualified target domain name which will be in trust with the current domain."
                  },
                  "targetDnsIpAddresses": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Required. The target DNS server IP addresses which can resolve the remote domain involved in the trust."
                  },
                  "trustHandshakeSecret": {
                    "type": "string",
                    "description": "Required. The trust secret used for the handshake with the target domain. This will not be stored."
                  },
                  "lastTrustHeartbeatTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The last heartbeat time when the trust was known to be connected."
                  },
                  "selectiveAuthentication": {
                    "type": "boolean",
                    "description": "Optional. The trust authentication type, which decides whether the trusted side has forest/domain wide access or selective access to an approved set of resources."
                  }
                },
                "description": "Represents a relationship between two domains. This allows a controller in one domain to authenticate a user in another domain. If the trust is being changed, it will be placed into the UPDATING state, which indicates that the resource is being reconciled. At this point, Get will reflect an intermediate state."
              },
              "readOnly": true,
              "description": "Output only. The current trusts associated with the domain."
            },
            "locations": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Required. Locations where domain needs to be provisioned. regions e.g. us-west1 or us-east4 Service supports up to 4 locations at once. Each location will use a /26 block."
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The time the instance was created."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The last update time."
            },
            "statusMessage": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Additional information about the current status of this domain, if available."
            },
            "reservedIpRange": {
              "type": "string",
              "description": "Required. The CIDR range of internal addresses that are reserved for this domain. Reserved networks must be /24 or larger. Ranges must be unique and non-overlapping with existing subnets in [Domain].[authorized_networks]."
            },
            "authorizedNetworks": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Optional. The full names of the Google Compute Engine [networks](/compute/docs/networks-and-firewalls#networks) the domain instance is connected to. Networks can be added using UpdateDomain. The domain is only available on networks listed in `authorized_networks`. If CIDR subnets overlap between networks, domain creation will fail."
            }
          },
          "description": "Represents a managed Microsoft Active Directory domain. If the domain is being changed, it will be placed into the UPDATING state, which indicates that the resource is being reconciled. At this point, Get will reflect an intermediate state."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.global.domains.reconfigureTrust:
    description: |-
      Updates the DNS conditional forwarder.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/managed-microsoft-ad/reference/rest/v1/projects.locations.global.domains/reconfigureTrust
    example:
      inputs: [
        {
          "id": "ReconfigureTrustRequest",
          "type": "object",
          "properties": {
            "targetDomainName": {
              "type": "string",
              "description": "Required. The fully-qualified target domain name which will be in trust with current domain."
            },
            "targetDnsIpAddresses": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Required. The target DNS server IP addresses to resolve the remote domain involved in the trust."
            }
          },
          "description": "Request message for ReconfigureTrust"
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.global.domains.resetAdminPassword:
    description: |-
      Resets a domain's administrator password.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/managed-microsoft-ad/reference/rest/v1/projects.locations.global.domains/resetAdminPassword
    example:
      inputs: [
        {
          "id": "ResetAdminPasswordRequest",
          "type": "object",
          "properties": {},
          "description": "Request message for ResetAdminPassword"
        }
      ]
      outputs: [
        {
          "id": "ResetAdminPasswordResponse",
          "type": "object",
          "properties": {
            "password": {
              "type": "string",
              "description": "A random password. See admin for more information."
            }
          },
          "description": "Response message for ResetAdminPassword"
        }
      ]
  projects.locations.global.domains.setIamPolicy:
    description: |-
      Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/managed-microsoft-ad/reference/rest/v1/projects.locations.global.domains/setIamPolicy
    example:
      inputs: [
        {
          "id": "SetIamPolicyRequest",
          "type": "object",
          "properties": {
            "policy": {
              "id": "Policy",
              "type": "object",
              "properties": {
                "etag": {
                  "type": "string",
                  "format": "byte",
                  "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
                },
                "version": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                },
                "bindings": {
                  "type": "array",
                  "items": {
                    "id": "Binding",
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                      },
                      "members": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                      },
                      "condition": {
                        "id": "Expr",
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                          },
                          "location": {
                            "type": "string",
                            "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                          },
                          "expression": {
                            "type": "string",
                            "description": "Textual representation of an expression in Common Expression Language syntax."
                          },
                          "description": {
                            "type": "string",
                            "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                          }
                        },
                        "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                      }
                    },
                    "description": "Associates `members` with a `role`."
                  },
                  "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
                }
              },
              "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
            }
          },
          "description": "Request message for `SetIamPolicy` method."
        }
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  projects.locations.global.domains.sqlIntegrations.get:
    description: |-
      Gets details of a single sqlIntegration.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/managed-microsoft-ad/reference/rest/v1/projects.locations.global.domains.sqlIntegrations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "SqlIntegration",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The unique name of the sql integration in the form of `projects/{project_id}/locations/global/domains/{domain_name}/sqlIntegrations/{sql_integration}`"
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "CREATING",
                "DELETING",
                "READY"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. The current state of the sql integration.",
              "enumDescriptions": [
                "Not Set",
                "The sqlIntegration is being created.",
                "The sqlIntegration is being deleted.",
                "The sqlIntegration is ready."
              ]
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The time sql integration was created. Synthetic field is populated automatically by CCFE."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. The time sql integration was updated. Synthetic field is populated automatically by CCFE."
            },
            "sqlInstance": {
              "type": "string",
              "description": "The full resource name of an integrated sql instance"
            }
          },
          "description": "Represents the Sql instance integrated with AD."
        }
      ]
  projects.locations.global.domains.sqlIntegrations.list:
    description: |-
      Lists SqlIntegrations in a given domain.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/managed-microsoft-ad/reference/rest/v1/projects.locations.global.domains.sqlIntegrations/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListSqlIntegrationsResponse",
          "type": "object",
          "properties": {
            "unreachable": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of locations that could not be reached."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
            },
            "sqlIntegrations": {
              "type": "array",
              "items": {
                "id": "SqlIntegration",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The unique name of the sql integration in the form of `projects/{project_id}/locations/global/domains/{domain_name}/sqlIntegrations/{sql_integration}`"
                  },
                  "state": {
                    "enum": [
                      "STATE_UNSPECIFIED",
                      "CREATING",
                      "DELETING",
                      "READY"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The current state of the sql integration.",
                    "enumDescriptions": [
                      "Not Set",
                      "The sqlIntegration is being created.",
                      "The sqlIntegration is being deleted.",
                      "The sqlIntegration is ready."
                    ]
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The time sql integration was created. Synthetic field is populated automatically by CCFE."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. The time sql integration was updated. Synthetic field is populated automatically by CCFE."
                  },
                  "sqlInstance": {
                    "type": "string",
                    "description": "The full resource name of an integrated sql instance"
                  }
                },
                "description": "Represents the Sql instance integrated with AD."
              },
              "description": "A list of SQLIntegrations of a domain."
            }
          },
          "description": "ListSqlIntegrationsResponse is the response message for ListSqlIntegrations method."
        }
      ]
  projects.locations.global.domains.testIamPermissions:
    description: |-
      Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/managed-microsoft-ad/reference/rest/v1/projects.locations.global.domains/testIamPermissions
    example:
      inputs: [
        {
          "id": "TestIamPermissionsRequest",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
            }
          },
          "description": "Request message for `TestIamPermissions` method."
        }
      ]
      outputs: [
        {
          "id": "TestIamPermissionsResponse",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
            }
          },
          "description": "Response message for `TestIamPermissions` method."
        }
      ]
  projects.locations.global.domains.updateLdapssettings:
    description: |-
      Patches a single ldaps settings.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/managed-microsoft-ad/reference/rest/v1/projects.locations.global.domains/updateLdapssettings
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.global.domains.validateTrust:
    description: |-
      Validates a trust state, that the target domain is reachable, and that the target domain is able to accept incoming trust requests.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/managed-microsoft-ad/reference/rest/v1/projects.locations.global.domains/validateTrust
    example:
      inputs: [
        {
          "id": "ValidateTrustRequest",
          "type": "object",
          "properties": {
            "trust": {
              "id": "Trust",
              "type": "object",
              "properties": {
                "state": {
                  "enum": [
                    "STATE_UNSPECIFIED",
                    "CREATING",
                    "UPDATING",
                    "DELETING",
                    "CONNECTED",
                    "DISCONNECTED"
                  ],
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. The current state of the trust.",
                  "enumDescriptions": [
                    "Not set.",
                    "The domain trust is being created.",
                    "The domain trust is being updated.",
                    "The domain trust is being deleted.",
                    "The domain trust is connected.",
                    "The domain trust is disconnected."
                  ]
                },
                "trustType": {
                  "enum": [
                    "TRUST_TYPE_UNSPECIFIED",
                    "FOREST",
                    "EXTERNAL"
                  ],
                  "type": "string",
                  "description": "Required. The type of trust represented by the trust resource.",
                  "enumDescriptions": [
                    "Not set.",
                    "The forest trust.",
                    "The external domain trust."
                  ]
                },
                "createTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "readOnly": true,
                  "description": "Output only. The time the instance was created."
                },
                "updateTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "readOnly": true,
                  "description": "Output only. The last update time."
                },
                "trustDirection": {
                  "enum": [
                    "TRUST_DIRECTION_UNSPECIFIED",
                    "INBOUND",
                    "OUTBOUND",
                    "BIDIRECTIONAL"
                  ],
                  "type": "string",
                  "description": "Required. The trust direction, which decides if the current domain is trusted, trusting, or both.",
                  "enumDescriptions": [
                    "Not set.",
                    "The inbound direction represents the trusting side.",
                    "The outboud direction represents the trusted side.",
                    "The bidirectional direction represents the trusted / trusting side."
                  ]
                },
                "stateDescription": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. Additional information about the current state of the trust, if available."
                },
                "targetDomainName": {
                  "type": "string",
                  "description": "Required. The fully qualified target domain name which will be in trust with the current domain."
                },
                "targetDnsIpAddresses": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Required. The target DNS server IP addresses which can resolve the remote domain involved in the trust."
                },
                "trustHandshakeSecret": {
                  "type": "string",
                  "description": "Required. The trust secret used for the handshake with the target domain. This will not be stored."
                },
                "lastTrustHeartbeatTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "readOnly": true,
                  "description": "Output only. The last heartbeat time when the trust was known to be connected."
                },
                "selectiveAuthentication": {
                  "type": "boolean",
                  "description": "Optional. The trust authentication type, which decides whether the trusted side has forest/domain wide access or selective access to an approved set of resources."
                }
              },
              "description": "Represents a relationship between two domains. This allows a controller in one domain to authenticate a user in another domain. If the trust is being changed, it will be placed into the UPDATING state, which indicates that the resource is being reconciled. At this point, Get will reflect an intermediate state."
            }
          },
          "description": "Request message for ValidateTrust"
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.global.operations.cancel:
    description: |-
      Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/managed-microsoft-ad/reference/rest/v1/projects.locations.global.operations/cancel
    example:
      inputs: [
        {
          "id": "CancelOperationRequest",
          "type": "object",
          "properties": {},
          "description": "The request message for Operations.CancelOperation."
        }
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  projects.locations.global.operations.delete:
    description: |-
      Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/managed-microsoft-ad/reference/rest/v1/projects.locations.global.operations/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  projects.locations.global.operations.get:
    description: |-
      Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/managed-microsoft-ad/reference/rest/v1/projects.locations.global.operations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  projects.locations.global.operations.list:
    description: |-
      Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/managed-microsoft-ad/reference/rest/v1/projects.locations.global.operations/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListOperationsResponse",
          "type": "object",
          "properties": {
            "operations": {
              "type": "array",
              "items": {
                "id": "Operation",
                "type": "object",
                "properties": {
                  "done": {
                    "type": "boolean",
                    "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
                  },
                  "name": {
                    "type": "string",
                    "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
                  },
                  "error": {
                    "id": "Status",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The status code, which should be an enum value of google.rpc.Code."
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object. Contains field @type with type URL."
                          }
                        },
                        "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                      },
                      "message": {
                        "type": "string",
                        "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                      }
                    },
                    "description": "The error result of the operation in case of failure or cancellation."
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "response": {
                    "type": "object",
                    "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  }
                },
                "description": "This resource represents a long-running operation that is the result of a network API call."
              },
              "description": "A list of operations that matches the specified filter in the request."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The standard List next-page token."
            }
          },
          "description": "The response message for Operations.ListOperations."
        }
      ]
  projects.locations.list:
    description: |-
      Lists information about the supported locations for this service.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/managed-microsoft-ad/reference/rest/v1/projects.locations/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListLocationsResponse",
          "type": "object",
          "properties": {
            "locations": {
              "type": "array",
              "items": {
                "id": "Location",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
                  },
                  "labels": {
                    "type": "object",
                    "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Service-specific metadata. For example the available capacity at the given location.",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "locationId": {
                    "type": "string",
                    "description": "The canonical id for this location. For example: `\"us-east1\"`."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
                  }
                },
                "description": "A resource that represents Google Cloud Platform location."
              },
              "description": "A list of locations that matches the specified filter in the request."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The standard List next-page token."
            }
          },
          "description": "The response message for Locations.ListLocations."
        }
      ]