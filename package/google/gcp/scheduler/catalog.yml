Product:
  name: GCP Scheduler
  versions: [1.0.0]
  package: google.gcp.scheduler
  description: |-
    Cloud Scheduler
  link: https://cloud.google.com/scheduler
  contentType: json
Operations:
  projects.locations.get:
    description: |-
      Gets information about a location.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/scheduler/docs/reference/rest/v1/projects.locations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Location",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
            },
            "labels": {
              "type": "object",
              "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
              "additionalProperties": {
                "type": "string"
              }
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata. For example the available capacity at the given location.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "locationId": {
              "type": "string",
              "description": "The canonical id for this location. For example: `\"us-east1\"`."
            },
            "displayName": {
              "type": "string",
              "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
            }
          },
          "description": "A resource that represents Google Cloud Platform location."
        }
      ]
  projects.locations.jobs.create:
    description: |-
      Creates a job.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/scheduler/docs/reference/rest/v1/projects.locations.jobs/create
    example:
      inputs: [
        {
          "id": "Job",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Optionally caller-specified in CreateJob, after which it becomes output only. The job name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`. * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), or periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects) * `LOCATION_ID` is the canonical ID for the job's location. The list of available locations can be obtained by calling ListLocations. For more information, see https://cloud.google.com/about/locations/. * `JOB_ID` can contain only letters ([A-Za-z]), numbers ([0-9]), hyphens (-), or underscores (_). The maximum length is 500 characters."
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "ENABLED",
                "PAUSED",
                "DISABLED",
                "UPDATE_FAILED"
              ],
              "type": "string",
              "description": "Output only. State of the job.",
              "enumDescriptions": [
                "Unspecified state.",
                "The job is executing normally.",
                "The job is paused by the user. It will not execute. A user can intentionally pause the job using PauseJobRequest.",
                "The job is disabled by the system due to error. The user cannot directly set a job to be disabled.",
                "The job state resulting from a failed CloudScheduler.UpdateJob operation. To recover a job from this state, retry CloudScheduler.UpdateJob until a successful response is received."
              ]
            },
            "status": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "Output only. The response from the target for the last attempted execution."
            },
            "schedule": {
              "type": "string",
              "description": "Required, except when used with UpdateJob. Describes the schedule on which the job will be executed. The schedule can be either of the following types: * [Crontab](http://en.wikipedia.org/wiki/Cron#Overview) * English-like [schedule](https://cloud.google.com/scheduler/docs/configuring/cron-job-schedules) As a general rule, execution `n + 1` of a job will not begin until execution `n` has finished. Cloud Scheduler will never allow two simultaneously outstanding executions. For example, this implies that if the `n+1`th execution is scheduled to run at 16:00 but the `n`th execution takes until 16:15, the `n+1`th execution will not start until `16:15`. A scheduled start time will be delayed if the previous execution has not ended when its scheduled time occurs. If retry_count > 0 and a job attempt fails, the job will be tried a total of retry_count times, with exponential backoff, until the next scheduled start time."
            },
            "timeZone": {
              "type": "string",
              "description": "Specifies the time zone to be used in interpreting schedule. The value of this field must be a time zone name from the [tz database](http://en.wikipedia.org/wiki/Tz_database). Note that some time zones include a provision for daylight savings time. The rules for daylight saving time are determined by the chosen tz. For UTC use the string \"utc\". If a time zone is not specified, the default will be in UTC (also known as GMT)."
            },
            "httpTarget": {
              "id": "HttpTarget",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "Required. The full URI path that the request will be sent to. This string must begin with either \"http://\" or \"https://\". Some examples of valid values for uri are: `http://acme.com` and `https://acme.com/sales:8080`. Cloud Scheduler will encode some characters for safety and compatibility. The maximum allowed URL length is 2083 characters after encoding."
                },
                "body": {
                  "type": "string",
                  "format": "byte",
                  "description": "HTTP request body. A request body is allowed only if the HTTP method is POST, PUT, or PATCH. It is an error to set body on a job with an incompatible HttpMethod."
                },
                "headers": {
                  "type": "object",
                  "description": "The user can specify HTTP request headers to send with the job's HTTP request. This map contains the header field names and values. Repeated headers are not supported, but a header value can contain commas. These headers represent a subset of the headers that will accompany the job's HTTP request. Some HTTP request headers will be ignored or replaced. A partial list of headers that will be ignored or replaced is below: - Host: This will be computed by Cloud Scheduler and derived from uri. * `Content-Length`: This will be computed by Cloud Scheduler. * `User-Agent`: This will be set to `\"Google-Cloud-Scheduler\"`. * `X-Google-*`: Google internal use only. * `X-AppEngine-*`: Google internal use only. The total size of headers must be less than 80KB.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "oidcToken": {
                  "id": "OidcToken",
                  "type": "object",
                  "properties": {
                    "audience": {
                      "type": "string",
                      "description": "Audience to be used when generating OIDC token. If not specified, the URI specified in target will be used."
                    },
                    "serviceAccountEmail": {
                      "type": "string",
                      "description": "[Service account email](https://cloud.google.com/iam/docs/service-accounts) to be used for generating OIDC token. The service account must be within the same project as the job. The caller must have iam.serviceAccounts.actAs permission for the service account."
                    }
                  },
                  "description": "If specified, an [OIDC](https://developers.google.com/identity/protocols/OpenIDConnect) token will be generated and attached as an `Authorization` header in the HTTP request. This type of authorization can be used for many scenarios, including calling Cloud Run, or endpoints where you intend to validate the token yourself."
                },
                "httpMethod": {
                  "enum": [
                    "HTTP_METHOD_UNSPECIFIED",
                    "POST",
                    "GET",
                    "HEAD",
                    "PUT",
                    "DELETE",
                    "PATCH",
                    "OPTIONS"
                  ],
                  "type": "string",
                  "description": "Which HTTP method to use for the request.",
                  "enumDescriptions": [
                    "HTTP method unspecified. Defaults to POST.",
                    "HTTP POST",
                    "HTTP GET",
                    "HTTP HEAD",
                    "HTTP PUT",
                    "HTTP DELETE",
                    "HTTP PATCH",
                    "HTTP OPTIONS"
                  ]
                },
                "oauthToken": {
                  "id": "OAuthToken",
                  "type": "object",
                  "properties": {
                    "scope": {
                      "type": "string",
                      "description": "OAuth scope to be used for generating OAuth access token. If not specified, \"https://www.googleapis.com/auth/cloud-platform\" will be used."
                    },
                    "serviceAccountEmail": {
                      "type": "string",
                      "description": "[Service account email](https://cloud.google.com/iam/docs/service-accounts) to be used for generating OAuth token. The service account must be within the same project as the job. The caller must have iam.serviceAccounts.actAs permission for the service account."
                    }
                  },
                  "description": "If specified, an [OAuth token](https://developers.google.com/identity/protocols/OAuth2) will be generated and attached as an `Authorization` header in the HTTP request. This type of authorization should generally only be used when calling Google APIs hosted on *.googleapis.com."
                }
              },
              "description": "HTTP target."
            },
            "description": {
              "type": "string",
              "description": "Optionally caller-specified in CreateJob or UpdateJob. A human-readable description for the job. This string must not contain more than 500 characters."
            },
            "retryConfig": {
              "id": "RetryConfig",
              "type": "object",
              "properties": {
                "retryCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of attempts that the system will make to run a job using the exponential backoff procedure described by max_doublings. The default value of retry_count is zero. If retry_count is zero, a job attempt will *not* be retried if it fails. Instead the Cloud Scheduler system will wait for the next scheduled execution time. If retry_count is set to a non-zero number then Cloud Scheduler will retry failed attempts, using exponential backoff, retry_count times, or until the next scheduled execution time, whichever comes first. Values greater than 5 and negative values are not allowed."
                },
                "maxDoublings": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The time between retries will double `max_doublings` times. A job's retry interval starts at min_backoff_duration, then doubles `max_doublings` times, then increases linearly, and finally retries at intervals of max_backoff_duration up to retry_count times. For example, if min_backoff_duration is 10s, max_backoff_duration is 300s, and `max_doublings` is 3, then the a job will first be retried in 10s. The retry interval will double three times, and then increase linearly by 2^3 * 10s. Finally, the job will retry at intervals of max_backoff_duration until the job has been attempted retry_count times. Thus, the requests will retry at 10s, 20s, 40s, 80s, 160s, 240s, 300s, 300s, .... The default value of this field is 5."
                },
                "maxRetryDuration": {
                  "type": "string",
                  "format": "google-duration",
                  "description": "The time limit for retrying a failed job, measured from time when an execution was first attempted. If specified with retry_count, the job will be retried until both limits are reached. The default value for max_retry_duration is zero, which means retry duration is unlimited."
                },
                "maxBackoffDuration": {
                  "type": "string",
                  "format": "google-duration",
                  "description": "The maximum amount of time to wait before retrying a job after it fails. The default value of this field is 1 hour."
                },
                "minBackoffDuration": {
                  "type": "string",
                  "format": "google-duration",
                  "description": "The minimum amount of time to wait before retrying a job after it fails. The default value of this field is 5 seconds."
                }
              },
              "description": "Settings that determine the retry behavior."
            },
            "pubsubTarget": {
              "id": "PubsubTarget",
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "byte",
                  "description": "The message payload for PubsubMessage. Pubsub message must contain either non-empty data, or at least one attribute."
                },
                "topicName": {
                  "type": "string",
                  "description": "Required. The name of the Cloud Pub/Sub topic to which messages will be published when a job is delivered. The topic name must be in the same format as required by PubSub's [PublishRequest.name](https://cloud.google.com/pubsub/docs/reference/rpc/google.pubsub.v1#publishrequest), for example `projects/PROJECT_ID/topics/TOPIC_ID`. The topic must be in the same project as the Cloud Scheduler job."
                },
                "attributes": {
                  "type": "object",
                  "description": "Attributes for PubsubMessage. Pubsub message must contain either non-empty data, or at least one attribute.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "description": "Pub/Sub target."
            },
            "scheduleTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Output only. The next time the job is scheduled. Note that this may be a retry of a previously failed attempt or the next execution time according to the schedule."
            },
            "userUpdateTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Output only. The creation time of the job."
            },
            "attemptDeadline": {
              "type": "string",
              "format": "google-duration",
              "description": "The deadline for job attempts. If the request handler does not respond by this deadline then the request is cancelled and the attempt is marked as a `DEADLINE_EXCEEDED` failure. The failed attempt can be viewed in execution logs. Cloud Scheduler will retry the job according to the RetryConfig. The allowed duration for this deadline is: * For HTTP targets, between 15 seconds and 30 minutes. * For App Engine HTTP targets, between 15 seconds and 24 hours."
            },
            "lastAttemptTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Output only. The time the last job attempt started."
            },
            "appEngineHttpTarget": {
              "id": "AppEngineHttpTarget",
              "type": "object",
              "properties": {
                "body": {
                  "type": "string",
                  "format": "byte",
                  "description": "Body. HTTP request body. A request body is allowed only if the HTTP method is POST or PUT. It will result in invalid argument error to set a body on a job with an incompatible HttpMethod."
                },
                "headers": {
                  "type": "object",
                  "description": "HTTP request headers. This map contains the header field names and values. Headers can be set when the job is created. Cloud Scheduler sets some headers to default values: * `User-Agent`: By default, this header is `\"AppEngine-Google; (+http://code.google.com/appengine)\"`. This header can be modified, but Cloud Scheduler will append `\"AppEngine-Google; (+http://code.google.com/appengine)\"` to the modified `User-Agent`. * `X-CloudScheduler`: This header will be set to true. If the job has an body, Cloud Scheduler sets the following headers: * `Content-Type`: By default, the `Content-Type` header is set to `\"application/octet-stream\"`. The default can be overridden by explictly setting `Content-Type` to a particular media type when the job is created. For example, `Content-Type` can be set to `\"application/json\"`. * `Content-Length`: This is computed by Cloud Scheduler. This value is output only. It cannot be changed. The headers below are output only. They cannot be set or overridden: * `X-Google-*`: For Google internal use only. * `X-AppEngine-*`: For Google internal use only. In addition, some App Engine headers, which contain job-specific information, are also be sent to the job handler.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "httpMethod": {
                  "enum": [
                    "HTTP_METHOD_UNSPECIFIED",
                    "POST",
                    "GET",
                    "HEAD",
                    "PUT",
                    "DELETE",
                    "PATCH",
                    "OPTIONS"
                  ],
                  "type": "string",
                  "description": "The HTTP method to use for the request. PATCH and OPTIONS are not permitted.",
                  "enumDescriptions": [
                    "HTTP method unspecified. Defaults to POST.",
                    "HTTP POST",
                    "HTTP GET",
                    "HTTP HEAD",
                    "HTTP PUT",
                    "HTTP DELETE",
                    "HTTP PATCH",
                    "HTTP OPTIONS"
                  ]
                },
                "relativeUri": {
                  "type": "string",
                  "description": "The relative URI. The relative URL must begin with \"/\" and must be a valid HTTP relative URL. It can contain a path, query string arguments, and `#` fragments. If the relative URL is empty, then the root path \"/\" will be used. No spaces are allowed, and the maximum length allowed is 2083 characters."
                },
                "appEngineRouting": {
                  "id": "AppEngineRouting",
                  "type": "object",
                  "properties": {
                    "host": {
                      "type": "string",
                      "description": "Output only. The host that the job is sent to. For more information about how App Engine requests are routed, see [here](https://cloud.google.com/appengine/docs/standard/python/how-requests-are-routed). The host is constructed as: * `host = [application_domain_name]` `| [service] + '.' + [application_domain_name]` `| [version] + '.' + [application_domain_name]` `| [version_dot_service]+ '.' + [application_domain_name]` `| [instance] + '.' + [application_domain_name]` `| [instance_dot_service] + '.' + [application_domain_name]` `| [instance_dot_version] + '.' + [application_domain_name]` `| [instance_dot_version_dot_service] + '.' + [application_domain_name]` * `application_domain_name` = The domain name of the app, for example .appspot.com, which is associated with the job's project ID. * `service =` service * `version =` version * `version_dot_service =` version `+ '.' +` service * `instance =` instance * `instance_dot_service =` instance `+ '.' +` service * `instance_dot_version =` instance `+ '.' +` version * `instance_dot_version_dot_service =` instance `+ '.' +` version `+ '.' +` service If service is empty, then the job will be sent to the service which is the default service when the job is attempted. If version is empty, then the job will be sent to the version which is the default version when the job is attempted. If instance is empty, then the job will be sent to an instance which is available when the job is attempted. If service, version, or instance is invalid, then the job will be sent to the default version of the default service when the job is attempted."
                    },
                    "service": {
                      "type": "string",
                      "description": "App service. By default, the job is sent to the service which is the default service when the job is attempted."
                    },
                    "version": {
                      "type": "string",
                      "description": "App version. By default, the job is sent to the version which is the default version when the job is attempted."
                    },
                    "instance": {
                      "type": "string",
                      "description": "App instance. By default, the job is sent to an instance which is available when the job is attempted. Requests can only be sent to a specific instance if [manual scaling is used in App Engine Standard](https://cloud.google.com/appengine/docs/python/an-overview-of-app-engine?hl=en_US#scaling_types_and_instance_classes). App Engine Flex does not support instances. For more information, see [App Engine Standard request routing](https://cloud.google.com/appengine/docs/standard/python/how-requests-are-routed) and [App Engine Flex request routing](https://cloud.google.com/appengine/docs/flexible/python/how-requests-are-routed)."
                    }
                  },
                  "description": "App Engine Routing setting for the job."
                }
              },
              "description": "App Engine HTTP target."
            }
          },
          "description": "Configuration for a job. The maximum allowed size for a job is 100KB."
        }
      ]
      outputs: [
        {}
      ]
  projects.locations.jobs.delete:
    description: |-
      Deletes a job.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/scheduler/docs/reference/rest/v1/projects.locations.jobs/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  projects.locations.jobs.get:
    description: |-
      Gets a job.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/scheduler/docs/reference/rest/v1/projects.locations.jobs/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.jobs.list:
    description: |-
      Lists jobs.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/scheduler/docs/reference/rest/v1/projects.locations.jobs/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListJobsResponse",
          "type": "object",
          "properties": {
            "jobs": {
              "type": "array",
              "items": {
                "id": "Job",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Optionally caller-specified in CreateJob, after which it becomes output only. The job name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`. * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), or periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects) * `LOCATION_ID` is the canonical ID for the job's location. The list of available locations can be obtained by calling ListLocations. For more information, see https://cloud.google.com/about/locations/. * `JOB_ID` can contain only letters ([A-Za-z]), numbers ([0-9]), hyphens (-), or underscores (_). The maximum length is 500 characters."
                  },
                  "state": {
                    "enum": [
                      "STATE_UNSPECIFIED",
                      "ENABLED",
                      "PAUSED",
                      "DISABLED",
                      "UPDATE_FAILED"
                    ],
                    "type": "string",
                    "description": "Output only. State of the job.",
                    "enumDescriptions": [
                      "Unspecified state.",
                      "The job is executing normally.",
                      "The job is paused by the user. It will not execute. A user can intentionally pause the job using PauseJobRequest.",
                      "The job is disabled by the system due to error. The user cannot directly set a job to be disabled.",
                      "The job state resulting from a failed CloudScheduler.UpdateJob operation. To recover a job from this state, retry CloudScheduler.UpdateJob until a successful response is received."
                    ]
                  },
                  "status": {
                    "id": "Status",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The status code, which should be an enum value of google.rpc.Code."
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object. Contains field @type with type URL."
                          }
                        },
                        "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                      },
                      "message": {
                        "type": "string",
                        "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                      }
                    },
                    "description": "Output only. The response from the target for the last attempted execution."
                  },
                  "schedule": {
                    "type": "string",
                    "description": "Required, except when used with UpdateJob. Describes the schedule on which the job will be executed. The schedule can be either of the following types: * [Crontab](http://en.wikipedia.org/wiki/Cron#Overview) * English-like [schedule](https://cloud.google.com/scheduler/docs/configuring/cron-job-schedules) As a general rule, execution `n + 1` of a job will not begin until execution `n` has finished. Cloud Scheduler will never allow two simultaneously outstanding executions. For example, this implies that if the `n+1`th execution is scheduled to run at 16:00 but the `n`th execution takes until 16:15, the `n+1`th execution will not start until `16:15`. A scheduled start time will be delayed if the previous execution has not ended when its scheduled time occurs. If retry_count > 0 and a job attempt fails, the job will be tried a total of retry_count times, with exponential backoff, until the next scheduled start time."
                  },
                  "timeZone": {
                    "type": "string",
                    "description": "Specifies the time zone to be used in interpreting schedule. The value of this field must be a time zone name from the [tz database](http://en.wikipedia.org/wiki/Tz_database). Note that some time zones include a provision for daylight savings time. The rules for daylight saving time are determined by the chosen tz. For UTC use the string \"utc\". If a time zone is not specified, the default will be in UTC (also known as GMT)."
                  },
                  "httpTarget": {
                    "id": "HttpTarget",
                    "type": "object",
                    "properties": {
                      "uri": {
                        "type": "string",
                        "description": "Required. The full URI path that the request will be sent to. This string must begin with either \"http://\" or \"https://\". Some examples of valid values for uri are: `http://acme.com` and `https://acme.com/sales:8080`. Cloud Scheduler will encode some characters for safety and compatibility. The maximum allowed URL length is 2083 characters after encoding."
                      },
                      "body": {
                        "type": "string",
                        "format": "byte",
                        "description": "HTTP request body. A request body is allowed only if the HTTP method is POST, PUT, or PATCH. It is an error to set body on a job with an incompatible HttpMethod."
                      },
                      "headers": {
                        "type": "object",
                        "description": "The user can specify HTTP request headers to send with the job's HTTP request. This map contains the header field names and values. Repeated headers are not supported, but a header value can contain commas. These headers represent a subset of the headers that will accompany the job's HTTP request. Some HTTP request headers will be ignored or replaced. A partial list of headers that will be ignored or replaced is below: - Host: This will be computed by Cloud Scheduler and derived from uri. * `Content-Length`: This will be computed by Cloud Scheduler. * `User-Agent`: This will be set to `\"Google-Cloud-Scheduler\"`. * `X-Google-*`: Google internal use only. * `X-AppEngine-*`: Google internal use only. The total size of headers must be less than 80KB.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "oidcToken": {
                        "id": "OidcToken",
                        "type": "object",
                        "properties": {
                          "audience": {
                            "type": "string",
                            "description": "Audience to be used when generating OIDC token. If not specified, the URI specified in target will be used."
                          },
                          "serviceAccountEmail": {
                            "type": "string",
                            "description": "[Service account email](https://cloud.google.com/iam/docs/service-accounts) to be used for generating OIDC token. The service account must be within the same project as the job. The caller must have iam.serviceAccounts.actAs permission for the service account."
                          }
                        },
                        "description": "If specified, an [OIDC](https://developers.google.com/identity/protocols/OpenIDConnect) token will be generated and attached as an `Authorization` header in the HTTP request. This type of authorization can be used for many scenarios, including calling Cloud Run, or endpoints where you intend to validate the token yourself."
                      },
                      "httpMethod": {
                        "enum": [
                          "HTTP_METHOD_UNSPECIFIED",
                          "POST",
                          "GET",
                          "HEAD",
                          "PUT",
                          "DELETE",
                          "PATCH",
                          "OPTIONS"
                        ],
                        "type": "string",
                        "description": "Which HTTP method to use for the request.",
                        "enumDescriptions": [
                          "HTTP method unspecified. Defaults to POST.",
                          "HTTP POST",
                          "HTTP GET",
                          "HTTP HEAD",
                          "HTTP PUT",
                          "HTTP DELETE",
                          "HTTP PATCH",
                          "HTTP OPTIONS"
                        ]
                      },
                      "oauthToken": {
                        "id": "OAuthToken",
                        "type": "object",
                        "properties": {
                          "scope": {
                            "type": "string",
                            "description": "OAuth scope to be used for generating OAuth access token. If not specified, \"https://www.googleapis.com/auth/cloud-platform\" will be used."
                          },
                          "serviceAccountEmail": {
                            "type": "string",
                            "description": "[Service account email](https://cloud.google.com/iam/docs/service-accounts) to be used for generating OAuth token. The service account must be within the same project as the job. The caller must have iam.serviceAccounts.actAs permission for the service account."
                          }
                        },
                        "description": "If specified, an [OAuth token](https://developers.google.com/identity/protocols/OAuth2) will be generated and attached as an `Authorization` header in the HTTP request. This type of authorization should generally only be used when calling Google APIs hosted on *.googleapis.com."
                      }
                    },
                    "description": "HTTP target."
                  },
                  "description": {
                    "type": "string",
                    "description": "Optionally caller-specified in CreateJob or UpdateJob. A human-readable description for the job. This string must not contain more than 500 characters."
                  },
                  "retryConfig": {
                    "id": "RetryConfig",
                    "type": "object",
                    "properties": {
                      "retryCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of attempts that the system will make to run a job using the exponential backoff procedure described by max_doublings. The default value of retry_count is zero. If retry_count is zero, a job attempt will *not* be retried if it fails. Instead the Cloud Scheduler system will wait for the next scheduled execution time. If retry_count is set to a non-zero number then Cloud Scheduler will retry failed attempts, using exponential backoff, retry_count times, or until the next scheduled execution time, whichever comes first. Values greater than 5 and negative values are not allowed."
                      },
                      "maxDoublings": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The time between retries will double `max_doublings` times. A job's retry interval starts at min_backoff_duration, then doubles `max_doublings` times, then increases linearly, and finally retries at intervals of max_backoff_duration up to retry_count times. For example, if min_backoff_duration is 10s, max_backoff_duration is 300s, and `max_doublings` is 3, then the a job will first be retried in 10s. The retry interval will double three times, and then increase linearly by 2^3 * 10s. Finally, the job will retry at intervals of max_backoff_duration until the job has been attempted retry_count times. Thus, the requests will retry at 10s, 20s, 40s, 80s, 160s, 240s, 300s, 300s, .... The default value of this field is 5."
                      },
                      "maxRetryDuration": {
                        "type": "string",
                        "format": "google-duration",
                        "description": "The time limit for retrying a failed job, measured from time when an execution was first attempted. If specified with retry_count, the job will be retried until both limits are reached. The default value for max_retry_duration is zero, which means retry duration is unlimited."
                      },
                      "maxBackoffDuration": {
                        "type": "string",
                        "format": "google-duration",
                        "description": "The maximum amount of time to wait before retrying a job after it fails. The default value of this field is 1 hour."
                      },
                      "minBackoffDuration": {
                        "type": "string",
                        "format": "google-duration",
                        "description": "The minimum amount of time to wait before retrying a job after it fails. The default value of this field is 5 seconds."
                      }
                    },
                    "description": "Settings that determine the retry behavior."
                  },
                  "pubsubTarget": {
                    "id": "PubsubTarget",
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "string",
                        "format": "byte",
                        "description": "The message payload for PubsubMessage. Pubsub message must contain either non-empty data, or at least one attribute."
                      },
                      "topicName": {
                        "type": "string",
                        "description": "Required. The name of the Cloud Pub/Sub topic to which messages will be published when a job is delivered. The topic name must be in the same format as required by PubSub's [PublishRequest.name](https://cloud.google.com/pubsub/docs/reference/rpc/google.pubsub.v1#publishrequest), for example `projects/PROJECT_ID/topics/TOPIC_ID`. The topic must be in the same project as the Cloud Scheduler job."
                      },
                      "attributes": {
                        "type": "object",
                        "description": "Attributes for PubsubMessage. Pubsub message must contain either non-empty data, or at least one attribute.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "description": "Pub/Sub target."
                  },
                  "scheduleTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Output only. The next time the job is scheduled. Note that this may be a retry of a previously failed attempt or the next execution time according to the schedule."
                  },
                  "userUpdateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Output only. The creation time of the job."
                  },
                  "attemptDeadline": {
                    "type": "string",
                    "format": "google-duration",
                    "description": "The deadline for job attempts. If the request handler does not respond by this deadline then the request is cancelled and the attempt is marked as a `DEADLINE_EXCEEDED` failure. The failed attempt can be viewed in execution logs. Cloud Scheduler will retry the job according to the RetryConfig. The allowed duration for this deadline is: * For HTTP targets, between 15 seconds and 30 minutes. * For App Engine HTTP targets, between 15 seconds and 24 hours."
                  },
                  "lastAttemptTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Output only. The time the last job attempt started."
                  },
                  "appEngineHttpTarget": {
                    "id": "AppEngineHttpTarget",
                    "type": "object",
                    "properties": {
                      "body": {
                        "type": "string",
                        "format": "byte",
                        "description": "Body. HTTP request body. A request body is allowed only if the HTTP method is POST or PUT. It will result in invalid argument error to set a body on a job with an incompatible HttpMethod."
                      },
                      "headers": {
                        "type": "object",
                        "description": "HTTP request headers. This map contains the header field names and values. Headers can be set when the job is created. Cloud Scheduler sets some headers to default values: * `User-Agent`: By default, this header is `\"AppEngine-Google; (+http://code.google.com/appengine)\"`. This header can be modified, but Cloud Scheduler will append `\"AppEngine-Google; (+http://code.google.com/appengine)\"` to the modified `User-Agent`. * `X-CloudScheduler`: This header will be set to true. If the job has an body, Cloud Scheduler sets the following headers: * `Content-Type`: By default, the `Content-Type` header is set to `\"application/octet-stream\"`. The default can be overridden by explictly setting `Content-Type` to a particular media type when the job is created. For example, `Content-Type` can be set to `\"application/json\"`. * `Content-Length`: This is computed by Cloud Scheduler. This value is output only. It cannot be changed. The headers below are output only. They cannot be set or overridden: * `X-Google-*`: For Google internal use only. * `X-AppEngine-*`: For Google internal use only. In addition, some App Engine headers, which contain job-specific information, are also be sent to the job handler.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "httpMethod": {
                        "enum": [
                          "HTTP_METHOD_UNSPECIFIED",
                          "POST",
                          "GET",
                          "HEAD",
                          "PUT",
                          "DELETE",
                          "PATCH",
                          "OPTIONS"
                        ],
                        "type": "string",
                        "description": "The HTTP method to use for the request. PATCH and OPTIONS are not permitted.",
                        "enumDescriptions": [
                          "HTTP method unspecified. Defaults to POST.",
                          "HTTP POST",
                          "HTTP GET",
                          "HTTP HEAD",
                          "HTTP PUT",
                          "HTTP DELETE",
                          "HTTP PATCH",
                          "HTTP OPTIONS"
                        ]
                      },
                      "relativeUri": {
                        "type": "string",
                        "description": "The relative URI. The relative URL must begin with \"/\" and must be a valid HTTP relative URL. It can contain a path, query string arguments, and `#` fragments. If the relative URL is empty, then the root path \"/\" will be used. No spaces are allowed, and the maximum length allowed is 2083 characters."
                      },
                      "appEngineRouting": {
                        "id": "AppEngineRouting",
                        "type": "object",
                        "properties": {
                          "host": {
                            "type": "string",
                            "description": "Output only. The host that the job is sent to. For more information about how App Engine requests are routed, see [here](https://cloud.google.com/appengine/docs/standard/python/how-requests-are-routed). The host is constructed as: * `host = [application_domain_name]` `| [service] + '.' + [application_domain_name]` `| [version] + '.' + [application_domain_name]` `| [version_dot_service]+ '.' + [application_domain_name]` `| [instance] + '.' + [application_domain_name]` `| [instance_dot_service] + '.' + [application_domain_name]` `| [instance_dot_version] + '.' + [application_domain_name]` `| [instance_dot_version_dot_service] + '.' + [application_domain_name]` * `application_domain_name` = The domain name of the app, for example .appspot.com, which is associated with the job's project ID. * `service =` service * `version =` version * `version_dot_service =` version `+ '.' +` service * `instance =` instance * `instance_dot_service =` instance `+ '.' +` service * `instance_dot_version =` instance `+ '.' +` version * `instance_dot_version_dot_service =` instance `+ '.' +` version `+ '.' +` service If service is empty, then the job will be sent to the service which is the default service when the job is attempted. If version is empty, then the job will be sent to the version which is the default version when the job is attempted. If instance is empty, then the job will be sent to an instance which is available when the job is attempted. If service, version, or instance is invalid, then the job will be sent to the default version of the default service when the job is attempted."
                          },
                          "service": {
                            "type": "string",
                            "description": "App service. By default, the job is sent to the service which is the default service when the job is attempted."
                          },
                          "version": {
                            "type": "string",
                            "description": "App version. By default, the job is sent to the version which is the default version when the job is attempted."
                          },
                          "instance": {
                            "type": "string",
                            "description": "App instance. By default, the job is sent to an instance which is available when the job is attempted. Requests can only be sent to a specific instance if [manual scaling is used in App Engine Standard](https://cloud.google.com/appengine/docs/python/an-overview-of-app-engine?hl=en_US#scaling_types_and_instance_classes). App Engine Flex does not support instances. For more information, see [App Engine Standard request routing](https://cloud.google.com/appengine/docs/standard/python/how-requests-are-routed) and [App Engine Flex request routing](https://cloud.google.com/appengine/docs/flexible/python/how-requests-are-routed)."
                          }
                        },
                        "description": "App Engine Routing setting for the job."
                      }
                    },
                    "description": "App Engine HTTP target."
                  }
                },
                "description": "Configuration for a job. The maximum allowed size for a job is 100KB."
              },
              "description": "The list of jobs."
            },
            "nextPageToken": {
              "type": "string",
              "description": "A token to retrieve next page of results. Pass this value in the page_token field in the subsequent call to ListJobs to retrieve the next page of results. If this is empty it indicates that there are no more results through which to paginate. The page token is valid for only 2 hours."
            }
          },
          "description": "Response message for listing jobs using ListJobs."
        }
      ]
  projects.locations.jobs.patch:
    description: |-
      Updates a job. If successful, the updated Job is returned. If the job does not exist, `NOT_FOUND` is returned. If UpdateJob does not successfully return, it is possible for the job to be in an Job.State.UPDATE_FAILED state. A job in this state may not be executed. If this happens, retry the UpdateJob request until a successful response is received.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/scheduler/docs/reference/rest/v1/projects.locations.jobs/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.jobs.pause:
    description: |-
      Pauses a job. If a job is paused then the system will stop executing the job until it is re-enabled via ResumeJob. The state of the job is stored in state; if paused it will be set to Job.State.PAUSED. A job must be in Job.State.ENABLED to be paused.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/scheduler/docs/reference/rest/v1/projects.locations.jobs/pause
    example:
      inputs: [
        {
          "id": "PauseJobRequest",
          "type": "object",
          "properties": {},
          "description": "Request message for PauseJob."
        }
      ]
      outputs: [
        {}
      ]
  projects.locations.jobs.resume:
    description: |-
      Resume a job. This method reenables a job after it has been Job.State.PAUSED. The state of a job is stored in Job.state; after calling this method it will be set to Job.State.ENABLED. A job must be in Job.State.PAUSED to be resumed.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/scheduler/docs/reference/rest/v1/projects.locations.jobs/resume
    example:
      inputs: [
        {
          "id": "ResumeJobRequest",
          "type": "object",
          "properties": {},
          "description": "Request message for ResumeJob."
        }
      ]
      outputs: [
        {}
      ]
  projects.locations.jobs.run:
    description: |-
      Forces a job to run now. When this method is called, Cloud Scheduler will dispatch the job, even if the job is already running.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/scheduler/docs/reference/rest/v1/projects.locations.jobs/run
    example:
      inputs: [
        {
          "id": "RunJobRequest",
          "type": "object",
          "properties": {},
          "description": "Request message for forcing a job to run now using RunJob."
        }
      ]
      outputs: [
        {}
      ]
  projects.locations.list:
    description: |-
      Lists information about the supported locations for this service.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/scheduler/docs/reference/rest/v1/projects.locations/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListLocationsResponse",
          "type": "object",
          "properties": {
            "locations": {
              "type": "array",
              "items": {
                "id": "Location",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
                  },
                  "labels": {
                    "type": "object",
                    "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Service-specific metadata. For example the available capacity at the given location.",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "locationId": {
                    "type": "string",
                    "description": "The canonical id for this location. For example: `\"us-east1\"`."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
                  }
                },
                "description": "A resource that represents Google Cloud Platform location."
              },
              "description": "A list of locations that matches the specified filter in the request."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The standard List next-page token."
            }
          },
          "description": "The response message for Locations.ListLocations."
        }
      ]