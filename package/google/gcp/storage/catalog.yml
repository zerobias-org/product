Product:
  name: GCP Storage
  versions: [1.0.0]
  package: google.gcp.storage
  description: |-
    Cloud Storage
  link: https://cloud.google.com/storage
  contentType: json
Operations:
  bucketAccessControls.delete:
    description: |-
      Permanently deletes the ACL entry for the specified entity on the specified bucket.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/bucketAccessControls/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  bucketAccessControls.get:
    description: |-
      Returns the ACL entry for the specified entity on the specified bucket.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/bucketAccessControls/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "BucketAccessControl",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of the access-control entry."
            },
            "etag": {
              "type": "string",
              "description": "HTTP 1.1 Entity tag for the access-control entry."
            },
            "kind": {
              "type": "string",
              "default": "storage#bucketAccessControl",
              "description": "The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl."
            },
            "role": {
              "type": "string",
              "annotations": {
                "required": [
                  "storage.bucketAccessControls.insert"
                ]
              },
              "description": "The access permission for the entity."
            },
            "email": {
              "type": "string",
              "description": "The email address associated with the entity, if any."
            },
            "bucket": {
              "type": "string",
              "description": "The name of the bucket."
            },
            "domain": {
              "type": "string",
              "description": "The domain associated with the entity, if any."
            },
            "entity": {
              "type": "string",
              "annotations": {
                "required": [
                  "storage.bucketAccessControls.insert"
                ]
              },
              "description": "The entity holding the permission, in one of the following forms: \\ - user-userId \\ - user-email \\ - group-groupId \\ - group-email \\ - domain-domain \\ - project-team-projectId \\ - allUsers \\ - allAuthenticatedUsers Examples: \\ - The user liz@example.com would be user-liz@example.com. \\ - The group example@googlegroups.com would be group-example@googlegroups.com. \\ - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
            },
            "entityId": {
              "type": "string",
              "description": "The ID for the entity, if any."
            },
            "selfLink": {
              "type": "string",
              "description": "The link to this access-control entry."
            },
            "projectTeam": {
              "type": "object",
              "properties": {
                "team": {
                  "type": "string",
                  "description": "The team."
                },
                "projectNumber": {
                  "type": "string",
                  "description": "The project number."
                }
              },
              "description": "The project team associated with the entity, if any."
            }
          },
          "description": "An access-control entry."
        }
      ]
  bucketAccessControls.insert:
    description: |-
      Creates a new ACL entry on the specified bucket.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/bucketAccessControls/insert
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "BucketAccessControl",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of the access-control entry."
            },
            "etag": {
              "type": "string",
              "description": "HTTP 1.1 Entity tag for the access-control entry."
            },
            "kind": {
              "type": "string",
              "default": "storage#bucketAccessControl",
              "description": "The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl."
            },
            "role": {
              "type": "string",
              "annotations": {
                "required": [
                  "storage.bucketAccessControls.insert"
                ]
              },
              "description": "The access permission for the entity."
            },
            "email": {
              "type": "string",
              "description": "The email address associated with the entity, if any."
            },
            "bucket": {
              "type": "string",
              "description": "The name of the bucket."
            },
            "domain": {
              "type": "string",
              "description": "The domain associated with the entity, if any."
            },
            "entity": {
              "type": "string",
              "annotations": {
                "required": [
                  "storage.bucketAccessControls.insert"
                ]
              },
              "description": "The entity holding the permission, in one of the following forms: \\ - user-userId \\ - user-email \\ - group-groupId \\ - group-email \\ - domain-domain \\ - project-team-projectId \\ - allUsers \\ - allAuthenticatedUsers Examples: \\ - The user liz@example.com would be user-liz@example.com. \\ - The group example@googlegroups.com would be group-example@googlegroups.com. \\ - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
            },
            "entityId": {
              "type": "string",
              "description": "The ID for the entity, if any."
            },
            "selfLink": {
              "type": "string",
              "description": "The link to this access-control entry."
            },
            "projectTeam": {
              "type": "object",
              "properties": {
                "team": {
                  "type": "string",
                  "description": "The team."
                },
                "projectNumber": {
                  "type": "string",
                  "description": "The project number."
                }
              },
              "description": "The project team associated with the entity, if any."
            }
          },
          "description": "An access-control entry."
        }
      ]
  bucketAccessControls.list:
    description: |-
      Retrieves ACL entries on the specified bucket.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/bucketAccessControls/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "BucketAccessControls",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "storage#bucketAccessControls",
              "description": "The kind of item this is. For lists of bucket access control entries, this is always storage#bucketAccessControls."
            },
            "items": {
              "type": "array",
              "items": {
                "id": "BucketAccessControl",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the access-control entry."
                  },
                  "etag": {
                    "type": "string",
                    "description": "HTTP 1.1 Entity tag for the access-control entry."
                  },
                  "kind": {
                    "type": "string",
                    "default": "storage#bucketAccessControl",
                    "description": "The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl."
                  },
                  "role": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.bucketAccessControls.insert"
                      ]
                    },
                    "description": "The access permission for the entity."
                  },
                  "email": {
                    "type": "string",
                    "description": "The email address associated with the entity, if any."
                  },
                  "bucket": {
                    "type": "string",
                    "description": "The name of the bucket."
                  },
                  "domain": {
                    "type": "string",
                    "description": "The domain associated with the entity, if any."
                  },
                  "entity": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.bucketAccessControls.insert"
                      ]
                    },
                    "description": "The entity holding the permission, in one of the following forms: \\ - user-userId \\ - user-email \\ - group-groupId \\ - group-email \\ - domain-domain \\ - project-team-projectId \\ - allUsers \\ - allAuthenticatedUsers Examples: \\ - The user liz@example.com would be user-liz@example.com. \\ - The group example@googlegroups.com would be group-example@googlegroups.com. \\ - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The ID for the entity, if any."
                  },
                  "selfLink": {
                    "type": "string",
                    "description": "The link to this access-control entry."
                  },
                  "projectTeam": {
                    "type": "object",
                    "properties": {
                      "team": {
                        "type": "string",
                        "description": "The team."
                      },
                      "projectNumber": {
                        "type": "string",
                        "description": "The project number."
                      }
                    },
                    "description": "The project team associated with the entity, if any."
                  }
                },
                "description": "An access-control entry."
              },
              "description": "The list of items."
            }
          },
          "description": "An access-control list."
        }
      ]
  bucketAccessControls.patch:
    description: |-
      Patches an ACL entry on the specified bucket.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/bucketAccessControls/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "BucketAccessControl",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of the access-control entry."
            },
            "etag": {
              "type": "string",
              "description": "HTTP 1.1 Entity tag for the access-control entry."
            },
            "kind": {
              "type": "string",
              "default": "storage#bucketAccessControl",
              "description": "The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl."
            },
            "role": {
              "type": "string",
              "annotations": {
                "required": [
                  "storage.bucketAccessControls.insert"
                ]
              },
              "description": "The access permission for the entity."
            },
            "email": {
              "type": "string",
              "description": "The email address associated with the entity, if any."
            },
            "bucket": {
              "type": "string",
              "description": "The name of the bucket."
            },
            "domain": {
              "type": "string",
              "description": "The domain associated with the entity, if any."
            },
            "entity": {
              "type": "string",
              "annotations": {
                "required": [
                  "storage.bucketAccessControls.insert"
                ]
              },
              "description": "The entity holding the permission, in one of the following forms: \\ - user-userId \\ - user-email \\ - group-groupId \\ - group-email \\ - domain-domain \\ - project-team-projectId \\ - allUsers \\ - allAuthenticatedUsers Examples: \\ - The user liz@example.com would be user-liz@example.com. \\ - The group example@googlegroups.com would be group-example@googlegroups.com. \\ - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
            },
            "entityId": {
              "type": "string",
              "description": "The ID for the entity, if any."
            },
            "selfLink": {
              "type": "string",
              "description": "The link to this access-control entry."
            },
            "projectTeam": {
              "type": "object",
              "properties": {
                "team": {
                  "type": "string",
                  "description": "The team."
                },
                "projectNumber": {
                  "type": "string",
                  "description": "The project number."
                }
              },
              "description": "The project team associated with the entity, if any."
            }
          },
          "description": "An access-control entry."
        }
      ]
  bucketAccessControls.update:
    description: |-
      Updates an ACL entry on the specified bucket.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/bucketAccessControls/update
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "BucketAccessControl",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of the access-control entry."
            },
            "etag": {
              "type": "string",
              "description": "HTTP 1.1 Entity tag for the access-control entry."
            },
            "kind": {
              "type": "string",
              "default": "storage#bucketAccessControl",
              "description": "The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl."
            },
            "role": {
              "type": "string",
              "annotations": {
                "required": [
                  "storage.bucketAccessControls.insert"
                ]
              },
              "description": "The access permission for the entity."
            },
            "email": {
              "type": "string",
              "description": "The email address associated with the entity, if any."
            },
            "bucket": {
              "type": "string",
              "description": "The name of the bucket."
            },
            "domain": {
              "type": "string",
              "description": "The domain associated with the entity, if any."
            },
            "entity": {
              "type": "string",
              "annotations": {
                "required": [
                  "storage.bucketAccessControls.insert"
                ]
              },
              "description": "The entity holding the permission, in one of the following forms: \\ - user-userId \\ - user-email \\ - group-groupId \\ - group-email \\ - domain-domain \\ - project-team-projectId \\ - allUsers \\ - allAuthenticatedUsers Examples: \\ - The user liz@example.com would be user-liz@example.com. \\ - The group example@googlegroups.com would be group-example@googlegroups.com. \\ - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
            },
            "entityId": {
              "type": "string",
              "description": "The ID for the entity, if any."
            },
            "selfLink": {
              "type": "string",
              "description": "The link to this access-control entry."
            },
            "projectTeam": {
              "type": "object",
              "properties": {
                "team": {
                  "type": "string",
                  "description": "The team."
                },
                "projectNumber": {
                  "type": "string",
                  "description": "The project number."
                }
              },
              "description": "The project team associated with the entity, if any."
            }
          },
          "description": "An access-control entry."
        }
      ]
  buckets.delete:
    description: |-
      Permanently deletes an empty bucket.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/buckets/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  buckets.get:
    description: |-
      Returns metadata for the specified bucket.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/buckets/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Bucket",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of the bucket. For buckets, the id and name properties are the same."
            },
            "acl": {
              "type": "array",
              "items": {
                "id": "BucketAccessControl",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the access-control entry."
                  },
                  "etag": {
                    "type": "string",
                    "description": "HTTP 1.1 Entity tag for the access-control entry."
                  },
                  "kind": {
                    "type": "string",
                    "default": "storage#bucketAccessControl",
                    "description": "The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl."
                  },
                  "role": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.bucketAccessControls.insert"
                      ]
                    },
                    "description": "The access permission for the entity."
                  },
                  "email": {
                    "type": "string",
                    "description": "The email address associated with the entity, if any."
                  },
                  "bucket": {
                    "type": "string",
                    "description": "The name of the bucket."
                  },
                  "domain": {
                    "type": "string",
                    "description": "The domain associated with the entity, if any."
                  },
                  "entity": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.bucketAccessControls.insert"
                      ]
                    },
                    "description": "The entity holding the permission, in one of the following forms: \\ - user-userId \\ - user-email \\ - group-groupId \\ - group-email \\ - domain-domain \\ - project-team-projectId \\ - allUsers \\ - allAuthenticatedUsers Examples: \\ - The user liz@example.com would be user-liz@example.com. \\ - The group example@googlegroups.com would be group-example@googlegroups.com. \\ - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The ID for the entity, if any."
                  },
                  "selfLink": {
                    "type": "string",
                    "description": "The link to this access-control entry."
                  },
                  "projectTeam": {
                    "type": "object",
                    "properties": {
                      "team": {
                        "type": "string",
                        "description": "The team."
                      },
                      "projectNumber": {
                        "type": "string",
                        "description": "The project number."
                      }
                    },
                    "description": "The project team associated with the entity, if any."
                  }
                },
                "description": "An access-control entry."
              },
              "annotations": {
                "required": [
                  "storage.buckets.update"
                ]
              },
              "description": "Access controls on the bucket."
            },
            "cors": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "method": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: \"*\" is permitted in the list of methods, and means \"any method\"."
                  },
                  "origin": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The list of Origins eligible to receive CORS response headers. Note: \"*\" is permitted in the list of origins, and means \"any Origin\"."
                  },
                  "maxAgeSeconds": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The value, in seconds, to return in the  Access-Control-Max-Age header used in preflight responses."
                  },
                  "responseHeader": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains."
                  }
                }
              },
              "description": "The bucket's Cross-Origin Resource Sharing (CORS) configuration."
            },
            "etag": {
              "type": "string",
              "description": "HTTP 1.1 Entity tag for the bucket."
            },
            "kind": {
              "type": "string",
              "default": "storage#bucket",
              "description": "The kind of item this is. For buckets, this is always storage#bucket."
            },
            "name": {
              "type": "string",
              "annotations": {
                "required": [
                  "storage.buckets.insert"
                ]
              },
              "description": "The name of the bucket."
            },
            "owner": {
              "type": "object",
              "properties": {
                "entity": {
                  "type": "string",
                  "description": "The entity, in the form project-owner-projectId."
                },
                "entityId": {
                  "type": "string",
                  "description": "The ID for the entity."
                }
              },
              "description": "The owner of the bucket. This is always the project team's owner group."
            },
            "labels": {
              "type": "object",
              "description": "User-provided labels, in key/value pairs.",
              "additionalProperties": {
                "type": "string",
                "description": "An individual label entry."
              }
            },
            "billing": {
              "type": "object",
              "properties": {
                "requesterPays": {
                  "type": "boolean",
                  "description": "When set to true, Requester Pays is enabled for this bucket."
                }
              },
              "description": "The bucket's billing configuration."
            },
            "logging": {
              "type": "object",
              "properties": {
                "logBucket": {
                  "type": "string",
                  "description": "The destination bucket where the current bucket's logs should be placed."
                },
                "logObjectPrefix": {
                  "type": "string",
                  "description": "A prefix for log object names."
                }
              },
              "description": "The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs."
            },
            "updated": {
              "type": "string",
              "format": "date-time",
              "description": "The modification time of the bucket in RFC 3339 format."
            },
            "website": {
              "type": "object",
              "properties": {
                "notFoundPage": {
                  "type": "string",
                  "description": "If the requested object path is missing, and any mainPageSuffix object is missing, if applicable, the service will return the named object from this bucket as the content for a 404 Not Found result."
                },
                "mainPageSuffix": {
                  "type": "string",
                  "description": "If the requested object path is missing, the service will ensure the path has a trailing '/', append this suffix, and attempt to retrieve the resulting object. This allows the creation of index.html objects to represent directory pages."
                }
              },
              "description": "The bucket's website configuration, controlling how the service behaves when accessing bucket contents as a web site. See the Static Website Examples for more information."
            },
            "location": {
              "type": "string",
              "description": "The location of the bucket. Object data for objects in the bucket resides in physical storage within this region. Defaults to US. See the developer's guide for the authoritative list."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this bucket."
            },
            "lifecycle": {
              "type": "object",
              "properties": {
                "rule": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "action": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Type of the action. Currently, only Delete and SetStorageClass are supported."
                          },
                          "storageClass": {
                            "type": "string",
                            "description": "Target storage class. Required iff the type of the action is SetStorageClass."
                          }
                        },
                        "description": "The action to take."
                      },
                      "condition": {
                        "type": "object",
                        "properties": {
                          "age": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Age of an object (in days). This condition is satisfied when an object reaches the specified age."
                          },
                          "isLive": {
                            "type": "boolean",
                            "description": "Relevant only for versioned objects. If the value is true, this condition matches live objects; if the value is false, it matches archived objects."
                          },
                          "createdBefore": {
                            "type": "string",
                            "format": "date",
                            "description": "A date in RFC 3339 format with only the date part (for instance, \"2013-01-15\"). This condition is satisfied when an object is created before midnight of the specified date in UTC."
                          },
                          "matchesPattern": {
                            "type": "string",
                            "description": "A regular expression that satisfies the RE2 syntax. This condition is satisfied when the name of the object matches the RE2 pattern. Note: This feature is currently in the \"Early Access\" launch stage and is only available to a whitelisted set of users; that means that this feature may be changed in backward-incompatible ways and that it is not guaranteed to be released."
                          },
                          "customTimeBefore": {
                            "type": "string",
                            "format": "date",
                            "description": "A date in RFC 3339 format with only the date part (for instance, \"2013-01-15\"). This condition is satisfied when the custom time on an object is before this date in UTC."
                          },
                          "numNewerVersions": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Relevant only for versioned objects. If the value is N, this condition is satisfied when there are at least N versions (including the live version) newer than this version of the object."
                          },
                          "daysSinceCustomTime": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Number of days elapsed since the user-specified timestamp set on an object. The condition is satisfied if the days elapsed is at least this number. If no custom timestamp is specified on an object, the condition does not apply."
                          },
                          "matchesStorageClass": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Objects having any of the storage classes specified by this condition will be matched. Values include MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE, STANDARD, and DURABLE_REDUCED_AVAILABILITY."
                          },
                          "noncurrentTimeBefore": {
                            "type": "string",
                            "format": "date",
                            "description": "A date in RFC 3339 format with only the date part (for instance, \"2013-01-15\"). This condition is satisfied when the noncurrent time on an object is before this date in UTC. This condition is relevant only for versioned objects."
                          },
                          "daysSinceNoncurrentTime": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Number of days elapsed since the noncurrent timestamp of an object. The condition is satisfied if the days elapsed is at least this number. This condition is relevant only for versioned objects. The value of the field must be a nonnegative integer. If it's zero, the object version will become eligible for Lifecycle action as soon as it becomes noncurrent."
                          }
                        },
                        "description": "The condition(s) under which the action will be taken."
                      }
                    }
                  },
                  "description": "A lifecycle management rule, which is made of an action to take and the condition(s) under which the action will be taken."
                }
              },
              "description": "The bucket's lifecycle configuration. See lifecycle management for more information."
            },
            "encryption": {
              "type": "object",
              "properties": {
                "defaultKmsKeyName": {
                  "type": "string",
                  "description": "A Cloud KMS key that will be used to encrypt objects inserted into this bucket, if no encryption method is specified."
                }
              },
              "description": "Encryption configuration for a bucket."
            },
            "versioning": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "While set to true, versioning is fully enabled for this bucket."
                }
              },
              "description": "The bucket's versioning configuration."
            },
            "timeCreated": {
              "type": "string",
              "format": "date-time",
              "description": "The creation time of the bucket in RFC 3339 format."
            },
            "locationType": {
              "type": "string",
              "description": "The type of the bucket location."
            },
            "satisfiesPZS": {
              "type": "boolean",
              "description": "Reserved for future use."
            },
            "storageClass": {
              "type": "string",
              "description": "The bucket's default storage class, used whenever no storageClass is specified for a newly-created object. This defines how objects in the bucket are stored and determines the SLA and the cost of storage. Values include MULTI_REGIONAL, REGIONAL, STANDARD, NEARLINE, COLDLINE, ARCHIVE, and DURABLE_REDUCED_AVAILABILITY. If this value is not specified when the bucket is created, it will default to STANDARD. For more information, see storage classes."
            },
            "zoneAffinity": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The zone or zones from which the bucket is intended to use zonal quota. Requests for data from outside the specified affinities are still allowed but won't be able to use zonal quota. The zone or zones need to be within the bucket location otherwise the requests will fail with a 400 Bad Request response."
            },
            "projectNumber": {
              "type": "string",
              "format": "uint64",
              "description": "The project number of the project the bucket belongs to."
            },
            "metageneration": {
              "type": "string",
              "format": "int64",
              "description": "The metadata generation of this bucket."
            },
            "retentionPolicy": {
              "type": "object",
              "properties": {
                "isLocked": {
                  "type": "boolean",
                  "description": "Once locked, an object retention policy cannot be modified."
                },
                "effectiveTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Server-determined value that indicates the time from which policy was enforced and effective. This value is in RFC 3339 format."
                },
                "retentionPeriod": {
                  "type": "string",
                  "format": "int64",
                  "description": "The duration in seconds that objects need to be retained. Retention duration must be greater than zero and less than 100 years. Note that enforcement of retention periods less than a day is not guaranteed. Such periods should only be used for testing purposes."
                }
              },
              "description": "The bucket's retention policy. The retention policy enforces a minimum retention time for all objects contained in the bucket, based on their creation time. Any attempt to overwrite or delete objects younger than the retention period will result in a PERMISSION_DENIED error. An unlocked retention policy can be modified or removed from the bucket via a storage.buckets.update operation. A locked retention policy cannot be removed or shortened in duration for the lifetime of the bucket. Attempting to remove or decrease period of a locked retention policy will result in a PERMISSION_DENIED error."
            },
            "defaultObjectAcl": {
              "type": "array",
              "items": {
                "id": "ObjectAccessControl",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the access-control entry."
                  },
                  "etag": {
                    "type": "string",
                    "description": "HTTP 1.1 Entity tag for the access-control entry."
                  },
                  "kind": {
                    "type": "string",
                    "default": "storage#objectAccessControl",
                    "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl."
                  },
                  "role": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.defaultObjectAccessControls.insert",
                        "storage.objectAccessControls.insert"
                      ]
                    },
                    "description": "The access permission for the entity."
                  },
                  "email": {
                    "type": "string",
                    "description": "The email address associated with the entity, if any."
                  },
                  "bucket": {
                    "type": "string",
                    "description": "The name of the bucket."
                  },
                  "domain": {
                    "type": "string",
                    "description": "The domain associated with the entity, if any."
                  },
                  "entity": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.defaultObjectAccessControls.insert",
                        "storage.objectAccessControls.insert"
                      ]
                    },
                    "description": "The entity holding the permission, in one of the following forms: \\ - user-userId \\ - user-email \\ - group-groupId \\ - group-email \\ - domain-domain \\ - project-team-projectId \\ - allUsers \\ - allAuthenticatedUsers Examples: \\ - The user liz@example.com would be user-liz@example.com. \\ - The group example@googlegroups.com would be group-example@googlegroups.com. \\ - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                  },
                  "object": {
                    "type": "string",
                    "description": "The name of the object, if applied to an object."
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The ID for the entity, if any."
                  },
                  "selfLink": {
                    "type": "string",
                    "description": "The link to this access-control entry."
                  },
                  "generation": {
                    "type": "string",
                    "format": "int64",
                    "description": "The content generation of the object, if applied to an object."
                  },
                  "projectTeam": {
                    "type": "object",
                    "properties": {
                      "team": {
                        "type": "string",
                        "description": "The team."
                      },
                      "projectNumber": {
                        "type": "string",
                        "description": "The project number."
                      }
                    },
                    "description": "The project team associated with the entity, if any."
                  }
                },
                "description": "An access-control entry."
              },
              "description": "Default access controls to apply to new objects when no ACL is provided."
            },
            "iamConfiguration": {
              "type": "object",
              "properties": {
                "bucketPolicyOnly": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "If set, access is controlled only by bucket-level or above IAM policies."
                    },
                    "lockedTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The deadline for changing iamConfiguration.bucketPolicyOnly.enabled from true to false in RFC 3339 format. iamConfiguration.bucketPolicyOnly.enabled may be changed from true to false until the locked time, after which the field is immutable."
                    }
                  },
                  "description": "The bucket's uniform bucket-level access configuration. The feature was formerly known as Bucket Policy Only. For backward compatibility, this field will be populated with identical information as the uniformBucketLevelAccess field. We recommend using the uniformBucketLevelAccess field to enable and disable the feature."
                },
                "publicAccessPrevention": {
                  "type": "string",
                  "description": "The bucket's Public Access Prevention configuration. Currently, 'unspecified' and 'enforced' are supported."
                },
                "uniformBucketLevelAccess": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "If set, access is controlled only by bucket-level or above IAM policies."
                    },
                    "lockedTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The deadline for changing iamConfiguration.uniformBucketLevelAccess.enabled from true to false in RFC 3339  format. iamConfiguration.uniformBucketLevelAccess.enabled may be changed from true to false until the locked time, after which the field is immutable."
                    }
                  },
                  "description": "The bucket's uniform bucket-level access configuration."
                }
              },
              "description": "The bucket's IAM configuration."
            },
            "defaultEventBasedHold": {
              "type": "boolean",
              "description": "The default value for event-based hold on newly created objects in this bucket. Event-based hold is a way to retain objects indefinitely until an event occurs, signified by the hold's release. After being released, such objects will be subject to bucket-level retention (if any). One sample use case of this flag is for banks to hold loan documents for at least 3 years after loan is paid in full. Here, bucket-level retention is 3 years and the event is loan being paid in full. In this example, these objects will be held intact for any number of years until the event has occurred (event-based hold on the object is released) and then 3 more years after that. That means retention duration of the objects begins from the moment event-based hold transitioned from true to false. Objects under event-based hold cannot be deleted, overwritten or archived until the hold is removed."
            }
          },
          "description": "A bucket."
        }
      ]
  buckets.getIamPolicy:
    description: |-
      Returns an IAM policy for the specified bucket.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/buckets/getIamPolicy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "HTTP 1.1  Entity tag for the policy."
            },
            "kind": {
              "type": "string",
              "default": "storage#policy",
              "description": "The kind of item this is. For policies, this is always storage#policy. This field is ignored on input."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "The IAM policy format version."
            },
            "bindings": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.buckets.setIamPolicy",
                        "storage.objects.setIamPolicy"
                      ]
                    },
                    "description": "The role to which members belong. Two types of roles are supported: new IAM roles, which grant permissions that do not map directly to those provided by ACLs, and legacy IAM roles, which do map directly to ACL permissions. All roles are of the format roles/storage.specificRole.\\ The new IAM roles are:  \\ - roles/storage.admin — Full control of Google Cloud Storage resources.  \\ - roles/storage.objectViewer — Read-Only access to Google Cloud Storage objects.  \\ - roles/storage.objectCreator — Access to create objects in Google Cloud Storage.  \\ - roles/storage.objectAdmin — Full control of Google Cloud Storage objects.   The legacy IAM roles are:  \\ - roles/storage.legacyObjectReader — Read-only access to objects without listing. Equivalent to an ACL entry on an object with the READER role.  \\ - roles/storage.legacyObjectOwner — Read/write access to existing objects without listing. Equivalent to an ACL entry on an object with the OWNER role.  \\ - roles/storage.legacyBucketReader — Read access to buckets with object listing. Equivalent to an ACL entry on a bucket with the READER role.  \\ - roles/storage.legacyBucketWriter — Read access to buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the WRITER role.  \\ - roles/storage.legacyBucketOwner — Read and write access to existing buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the OWNER role."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "annotations": {
                      "required": [
                        "storage.buckets.setIamPolicy",
                        "storage.objects.setIamPolicy"
                      ]
                    },
                    "description": "A collection of identifiers for members who may assume the provided role. Recognized identifiers are as follows:  \\ - allUsers — A special identifier that represents anyone on the internet; with or without a Google account.  \\ - allAuthenticatedUsers — A special identifier that represents anyone who is authenticated with a Google account or a service account.  \\ - user:emailid — An email address that represents a specific account. For example, user:alice@gmail.com or user:joe@example.com.  \\ - serviceAccount:emailid — An email address that represents a service account. For example,  serviceAccount:my-other-app@appspot.gserviceaccount.com .  \\ - group:emailid — An email address that represents a Google group. For example, group:admins@example.com.  \\ - domain:domain — A Google Apps domain name that represents all the users of that domain. For example, domain:google.com or domain:example.com.  \\ - projectOwner:projectid — Owners of the given project. For example, projectOwner:my-example-project  \\ - projectEditor:projectid — Editors of the given project. For example, projectEditor:my-example-project  \\ - projectViewer:projectid — Viewers of the given project. For example, projectViewer:my-example-project"
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "An optional title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "An optional string indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax. The application context of the containing message determines which well-known feature set of CEL is supported."
                      },
                      "description": {
                        "type": "string",
                        "description": "An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. NOTE: an unsatisfied condition will not allow user access via current binding. Different bindings, including their conditions, are examined independently."
                  }
                }
              },
              "annotations": {
                "required": [
                  "storage.buckets.setIamPolicy",
                  "storage.objects.setIamPolicy"
                ]
              },
              "description": "An association between a role, which comes with a set of permissions, and members who may assume that role."
            },
            "resourceId": {
              "type": "string",
              "description": "The ID of the resource to which this policy belongs. Will be of the form projects/_/buckets/bucket for buckets, and projects/_/buckets/bucket/objects/object for objects. A specific generation may be specified by appending #generationNumber to the end of the object name, e.g. projects/_/buckets/my-bucket/objects/data.txt#17. The current generation can be denoted with #0. This field is ignored on input."
            }
          },
          "description": "A bucket/object IAM policy."
        }
      ]
  buckets.insert:
    description: |-
      Creates a new bucket.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/buckets/insert
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Bucket",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of the bucket. For buckets, the id and name properties are the same."
            },
            "acl": {
              "type": "array",
              "items": {
                "id": "BucketAccessControl",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the access-control entry."
                  },
                  "etag": {
                    "type": "string",
                    "description": "HTTP 1.1 Entity tag for the access-control entry."
                  },
                  "kind": {
                    "type": "string",
                    "default": "storage#bucketAccessControl",
                    "description": "The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl."
                  },
                  "role": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.bucketAccessControls.insert"
                      ]
                    },
                    "description": "The access permission for the entity."
                  },
                  "email": {
                    "type": "string",
                    "description": "The email address associated with the entity, if any."
                  },
                  "bucket": {
                    "type": "string",
                    "description": "The name of the bucket."
                  },
                  "domain": {
                    "type": "string",
                    "description": "The domain associated with the entity, if any."
                  },
                  "entity": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.bucketAccessControls.insert"
                      ]
                    },
                    "description": "The entity holding the permission, in one of the following forms: \\ - user-userId \\ - user-email \\ - group-groupId \\ - group-email \\ - domain-domain \\ - project-team-projectId \\ - allUsers \\ - allAuthenticatedUsers Examples: \\ - The user liz@example.com would be user-liz@example.com. \\ - The group example@googlegroups.com would be group-example@googlegroups.com. \\ - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The ID for the entity, if any."
                  },
                  "selfLink": {
                    "type": "string",
                    "description": "The link to this access-control entry."
                  },
                  "projectTeam": {
                    "type": "object",
                    "properties": {
                      "team": {
                        "type": "string",
                        "description": "The team."
                      },
                      "projectNumber": {
                        "type": "string",
                        "description": "The project number."
                      }
                    },
                    "description": "The project team associated with the entity, if any."
                  }
                },
                "description": "An access-control entry."
              },
              "annotations": {
                "required": [
                  "storage.buckets.update"
                ]
              },
              "description": "Access controls on the bucket."
            },
            "cors": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "method": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: \"*\" is permitted in the list of methods, and means \"any method\"."
                  },
                  "origin": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The list of Origins eligible to receive CORS response headers. Note: \"*\" is permitted in the list of origins, and means \"any Origin\"."
                  },
                  "maxAgeSeconds": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The value, in seconds, to return in the  Access-Control-Max-Age header used in preflight responses."
                  },
                  "responseHeader": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains."
                  }
                }
              },
              "description": "The bucket's Cross-Origin Resource Sharing (CORS) configuration."
            },
            "etag": {
              "type": "string",
              "description": "HTTP 1.1 Entity tag for the bucket."
            },
            "kind": {
              "type": "string",
              "default": "storage#bucket",
              "description": "The kind of item this is. For buckets, this is always storage#bucket."
            },
            "name": {
              "type": "string",
              "annotations": {
                "required": [
                  "storage.buckets.insert"
                ]
              },
              "description": "The name of the bucket."
            },
            "owner": {
              "type": "object",
              "properties": {
                "entity": {
                  "type": "string",
                  "description": "The entity, in the form project-owner-projectId."
                },
                "entityId": {
                  "type": "string",
                  "description": "The ID for the entity."
                }
              },
              "description": "The owner of the bucket. This is always the project team's owner group."
            },
            "labels": {
              "type": "object",
              "description": "User-provided labels, in key/value pairs.",
              "additionalProperties": {
                "type": "string",
                "description": "An individual label entry."
              }
            },
            "billing": {
              "type": "object",
              "properties": {
                "requesterPays": {
                  "type": "boolean",
                  "description": "When set to true, Requester Pays is enabled for this bucket."
                }
              },
              "description": "The bucket's billing configuration."
            },
            "logging": {
              "type": "object",
              "properties": {
                "logBucket": {
                  "type": "string",
                  "description": "The destination bucket where the current bucket's logs should be placed."
                },
                "logObjectPrefix": {
                  "type": "string",
                  "description": "A prefix for log object names."
                }
              },
              "description": "The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs."
            },
            "updated": {
              "type": "string",
              "format": "date-time",
              "description": "The modification time of the bucket in RFC 3339 format."
            },
            "website": {
              "type": "object",
              "properties": {
                "notFoundPage": {
                  "type": "string",
                  "description": "If the requested object path is missing, and any mainPageSuffix object is missing, if applicable, the service will return the named object from this bucket as the content for a 404 Not Found result."
                },
                "mainPageSuffix": {
                  "type": "string",
                  "description": "If the requested object path is missing, the service will ensure the path has a trailing '/', append this suffix, and attempt to retrieve the resulting object. This allows the creation of index.html objects to represent directory pages."
                }
              },
              "description": "The bucket's website configuration, controlling how the service behaves when accessing bucket contents as a web site. See the Static Website Examples for more information."
            },
            "location": {
              "type": "string",
              "description": "The location of the bucket. Object data for objects in the bucket resides in physical storage within this region. Defaults to US. See the developer's guide for the authoritative list."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this bucket."
            },
            "lifecycle": {
              "type": "object",
              "properties": {
                "rule": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "action": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Type of the action. Currently, only Delete and SetStorageClass are supported."
                          },
                          "storageClass": {
                            "type": "string",
                            "description": "Target storage class. Required iff the type of the action is SetStorageClass."
                          }
                        },
                        "description": "The action to take."
                      },
                      "condition": {
                        "type": "object",
                        "properties": {
                          "age": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Age of an object (in days). This condition is satisfied when an object reaches the specified age."
                          },
                          "isLive": {
                            "type": "boolean",
                            "description": "Relevant only for versioned objects. If the value is true, this condition matches live objects; if the value is false, it matches archived objects."
                          },
                          "createdBefore": {
                            "type": "string",
                            "format": "date",
                            "description": "A date in RFC 3339 format with only the date part (for instance, \"2013-01-15\"). This condition is satisfied when an object is created before midnight of the specified date in UTC."
                          },
                          "matchesPattern": {
                            "type": "string",
                            "description": "A regular expression that satisfies the RE2 syntax. This condition is satisfied when the name of the object matches the RE2 pattern. Note: This feature is currently in the \"Early Access\" launch stage and is only available to a whitelisted set of users; that means that this feature may be changed in backward-incompatible ways and that it is not guaranteed to be released."
                          },
                          "customTimeBefore": {
                            "type": "string",
                            "format": "date",
                            "description": "A date in RFC 3339 format with only the date part (for instance, \"2013-01-15\"). This condition is satisfied when the custom time on an object is before this date in UTC."
                          },
                          "numNewerVersions": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Relevant only for versioned objects. If the value is N, this condition is satisfied when there are at least N versions (including the live version) newer than this version of the object."
                          },
                          "daysSinceCustomTime": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Number of days elapsed since the user-specified timestamp set on an object. The condition is satisfied if the days elapsed is at least this number. If no custom timestamp is specified on an object, the condition does not apply."
                          },
                          "matchesStorageClass": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Objects having any of the storage classes specified by this condition will be matched. Values include MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE, STANDARD, and DURABLE_REDUCED_AVAILABILITY."
                          },
                          "noncurrentTimeBefore": {
                            "type": "string",
                            "format": "date",
                            "description": "A date in RFC 3339 format with only the date part (for instance, \"2013-01-15\"). This condition is satisfied when the noncurrent time on an object is before this date in UTC. This condition is relevant only for versioned objects."
                          },
                          "daysSinceNoncurrentTime": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Number of days elapsed since the noncurrent timestamp of an object. The condition is satisfied if the days elapsed is at least this number. This condition is relevant only for versioned objects. The value of the field must be a nonnegative integer. If it's zero, the object version will become eligible for Lifecycle action as soon as it becomes noncurrent."
                          }
                        },
                        "description": "The condition(s) under which the action will be taken."
                      }
                    }
                  },
                  "description": "A lifecycle management rule, which is made of an action to take and the condition(s) under which the action will be taken."
                }
              },
              "description": "The bucket's lifecycle configuration. See lifecycle management for more information."
            },
            "encryption": {
              "type": "object",
              "properties": {
                "defaultKmsKeyName": {
                  "type": "string",
                  "description": "A Cloud KMS key that will be used to encrypt objects inserted into this bucket, if no encryption method is specified."
                }
              },
              "description": "Encryption configuration for a bucket."
            },
            "versioning": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "While set to true, versioning is fully enabled for this bucket."
                }
              },
              "description": "The bucket's versioning configuration."
            },
            "timeCreated": {
              "type": "string",
              "format": "date-time",
              "description": "The creation time of the bucket in RFC 3339 format."
            },
            "locationType": {
              "type": "string",
              "description": "The type of the bucket location."
            },
            "satisfiesPZS": {
              "type": "boolean",
              "description": "Reserved for future use."
            },
            "storageClass": {
              "type": "string",
              "description": "The bucket's default storage class, used whenever no storageClass is specified for a newly-created object. This defines how objects in the bucket are stored and determines the SLA and the cost of storage. Values include MULTI_REGIONAL, REGIONAL, STANDARD, NEARLINE, COLDLINE, ARCHIVE, and DURABLE_REDUCED_AVAILABILITY. If this value is not specified when the bucket is created, it will default to STANDARD. For more information, see storage classes."
            },
            "zoneAffinity": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The zone or zones from which the bucket is intended to use zonal quota. Requests for data from outside the specified affinities are still allowed but won't be able to use zonal quota. The zone or zones need to be within the bucket location otherwise the requests will fail with a 400 Bad Request response."
            },
            "projectNumber": {
              "type": "string",
              "format": "uint64",
              "description": "The project number of the project the bucket belongs to."
            },
            "metageneration": {
              "type": "string",
              "format": "int64",
              "description": "The metadata generation of this bucket."
            },
            "retentionPolicy": {
              "type": "object",
              "properties": {
                "isLocked": {
                  "type": "boolean",
                  "description": "Once locked, an object retention policy cannot be modified."
                },
                "effectiveTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Server-determined value that indicates the time from which policy was enforced and effective. This value is in RFC 3339 format."
                },
                "retentionPeriod": {
                  "type": "string",
                  "format": "int64",
                  "description": "The duration in seconds that objects need to be retained. Retention duration must be greater than zero and less than 100 years. Note that enforcement of retention periods less than a day is not guaranteed. Such periods should only be used for testing purposes."
                }
              },
              "description": "The bucket's retention policy. The retention policy enforces a minimum retention time for all objects contained in the bucket, based on their creation time. Any attempt to overwrite or delete objects younger than the retention period will result in a PERMISSION_DENIED error. An unlocked retention policy can be modified or removed from the bucket via a storage.buckets.update operation. A locked retention policy cannot be removed or shortened in duration for the lifetime of the bucket. Attempting to remove or decrease period of a locked retention policy will result in a PERMISSION_DENIED error."
            },
            "defaultObjectAcl": {
              "type": "array",
              "items": {
                "id": "ObjectAccessControl",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the access-control entry."
                  },
                  "etag": {
                    "type": "string",
                    "description": "HTTP 1.1 Entity tag for the access-control entry."
                  },
                  "kind": {
                    "type": "string",
                    "default": "storage#objectAccessControl",
                    "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl."
                  },
                  "role": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.defaultObjectAccessControls.insert",
                        "storage.objectAccessControls.insert"
                      ]
                    },
                    "description": "The access permission for the entity."
                  },
                  "email": {
                    "type": "string",
                    "description": "The email address associated with the entity, if any."
                  },
                  "bucket": {
                    "type": "string",
                    "description": "The name of the bucket."
                  },
                  "domain": {
                    "type": "string",
                    "description": "The domain associated with the entity, if any."
                  },
                  "entity": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.defaultObjectAccessControls.insert",
                        "storage.objectAccessControls.insert"
                      ]
                    },
                    "description": "The entity holding the permission, in one of the following forms: \\ - user-userId \\ - user-email \\ - group-groupId \\ - group-email \\ - domain-domain \\ - project-team-projectId \\ - allUsers \\ - allAuthenticatedUsers Examples: \\ - The user liz@example.com would be user-liz@example.com. \\ - The group example@googlegroups.com would be group-example@googlegroups.com. \\ - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                  },
                  "object": {
                    "type": "string",
                    "description": "The name of the object, if applied to an object."
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The ID for the entity, if any."
                  },
                  "selfLink": {
                    "type": "string",
                    "description": "The link to this access-control entry."
                  },
                  "generation": {
                    "type": "string",
                    "format": "int64",
                    "description": "The content generation of the object, if applied to an object."
                  },
                  "projectTeam": {
                    "type": "object",
                    "properties": {
                      "team": {
                        "type": "string",
                        "description": "The team."
                      },
                      "projectNumber": {
                        "type": "string",
                        "description": "The project number."
                      }
                    },
                    "description": "The project team associated with the entity, if any."
                  }
                },
                "description": "An access-control entry."
              },
              "description": "Default access controls to apply to new objects when no ACL is provided."
            },
            "iamConfiguration": {
              "type": "object",
              "properties": {
                "bucketPolicyOnly": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "If set, access is controlled only by bucket-level or above IAM policies."
                    },
                    "lockedTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The deadline for changing iamConfiguration.bucketPolicyOnly.enabled from true to false in RFC 3339 format. iamConfiguration.bucketPolicyOnly.enabled may be changed from true to false until the locked time, after which the field is immutable."
                    }
                  },
                  "description": "The bucket's uniform bucket-level access configuration. The feature was formerly known as Bucket Policy Only. For backward compatibility, this field will be populated with identical information as the uniformBucketLevelAccess field. We recommend using the uniformBucketLevelAccess field to enable and disable the feature."
                },
                "publicAccessPrevention": {
                  "type": "string",
                  "description": "The bucket's Public Access Prevention configuration. Currently, 'unspecified' and 'enforced' are supported."
                },
                "uniformBucketLevelAccess": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "If set, access is controlled only by bucket-level or above IAM policies."
                    },
                    "lockedTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The deadline for changing iamConfiguration.uniformBucketLevelAccess.enabled from true to false in RFC 3339  format. iamConfiguration.uniformBucketLevelAccess.enabled may be changed from true to false until the locked time, after which the field is immutable."
                    }
                  },
                  "description": "The bucket's uniform bucket-level access configuration."
                }
              },
              "description": "The bucket's IAM configuration."
            },
            "defaultEventBasedHold": {
              "type": "boolean",
              "description": "The default value for event-based hold on newly created objects in this bucket. Event-based hold is a way to retain objects indefinitely until an event occurs, signified by the hold's release. After being released, such objects will be subject to bucket-level retention (if any). One sample use case of this flag is for banks to hold loan documents for at least 3 years after loan is paid in full. Here, bucket-level retention is 3 years and the event is loan being paid in full. In this example, these objects will be held intact for any number of years until the event has occurred (event-based hold on the object is released) and then 3 more years after that. That means retention duration of the objects begins from the moment event-based hold transitioned from true to false. Objects under event-based hold cannot be deleted, overwritten or archived until the hold is removed."
            }
          },
          "description": "A bucket."
        }
      ]
  buckets.list:
    description: |-
      Retrieves a list of buckets for a given project.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/buckets/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Buckets",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "storage#buckets",
              "description": "The kind of item this is. For lists of buckets, this is always storage#buckets."
            },
            "items": {
              "type": "array",
              "items": {
                "id": "Bucket",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the bucket. For buckets, the id and name properties are the same."
                  },
                  "acl": {
                    "type": "array",
                    "items": {
                      "id": "BucketAccessControl",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of the access-control entry."
                        },
                        "etag": {
                          "type": "string",
                          "description": "HTTP 1.1 Entity tag for the access-control entry."
                        },
                        "kind": {
                          "type": "string",
                          "default": "storage#bucketAccessControl",
                          "description": "The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl."
                        },
                        "role": {
                          "type": "string",
                          "annotations": {
                            "required": [
                              "storage.bucketAccessControls.insert"
                            ]
                          },
                          "description": "The access permission for the entity."
                        },
                        "email": {
                          "type": "string",
                          "description": "The email address associated with the entity, if any."
                        },
                        "bucket": {
                          "type": "string",
                          "description": "The name of the bucket."
                        },
                        "domain": {
                          "type": "string",
                          "description": "The domain associated with the entity, if any."
                        },
                        "entity": {
                          "type": "string",
                          "annotations": {
                            "required": [
                              "storage.bucketAccessControls.insert"
                            ]
                          },
                          "description": "The entity holding the permission, in one of the following forms: \\ - user-userId \\ - user-email \\ - group-groupId \\ - group-email \\ - domain-domain \\ - project-team-projectId \\ - allUsers \\ - allAuthenticatedUsers Examples: \\ - The user liz@example.com would be user-liz@example.com. \\ - The group example@googlegroups.com would be group-example@googlegroups.com. \\ - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                        },
                        "entityId": {
                          "type": "string",
                          "description": "The ID for the entity, if any."
                        },
                        "selfLink": {
                          "type": "string",
                          "description": "The link to this access-control entry."
                        },
                        "projectTeam": {
                          "type": "object",
                          "properties": {
                            "team": {
                              "type": "string",
                              "description": "The team."
                            },
                            "projectNumber": {
                              "type": "string",
                              "description": "The project number."
                            }
                          },
                          "description": "The project team associated with the entity, if any."
                        }
                      },
                      "description": "An access-control entry."
                    },
                    "annotations": {
                      "required": [
                        "storage.buckets.update"
                      ]
                    },
                    "description": "Access controls on the bucket."
                  },
                  "cors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "method": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: \"*\" is permitted in the list of methods, and means \"any method\"."
                        },
                        "origin": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The list of Origins eligible to receive CORS response headers. Note: \"*\" is permitted in the list of origins, and means \"any Origin\"."
                        },
                        "maxAgeSeconds": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The value, in seconds, to return in the  Access-Control-Max-Age header used in preflight responses."
                        },
                        "responseHeader": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains."
                        }
                      }
                    },
                    "description": "The bucket's Cross-Origin Resource Sharing (CORS) configuration."
                  },
                  "etag": {
                    "type": "string",
                    "description": "HTTP 1.1 Entity tag for the bucket."
                  },
                  "kind": {
                    "type": "string",
                    "default": "storage#bucket",
                    "description": "The kind of item this is. For buckets, this is always storage#bucket."
                  },
                  "name": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.buckets.insert"
                      ]
                    },
                    "description": "The name of the bucket."
                  },
                  "owner": {
                    "type": "object",
                    "properties": {
                      "entity": {
                        "type": "string",
                        "description": "The entity, in the form project-owner-projectId."
                      },
                      "entityId": {
                        "type": "string",
                        "description": "The ID for the entity."
                      }
                    },
                    "description": "The owner of the bucket. This is always the project team's owner group."
                  },
                  "labels": {
                    "type": "object",
                    "description": "User-provided labels, in key/value pairs.",
                    "additionalProperties": {
                      "type": "string",
                      "description": "An individual label entry."
                    }
                  },
                  "billing": {
                    "type": "object",
                    "properties": {
                      "requesterPays": {
                        "type": "boolean",
                        "description": "When set to true, Requester Pays is enabled for this bucket."
                      }
                    },
                    "description": "The bucket's billing configuration."
                  },
                  "logging": {
                    "type": "object",
                    "properties": {
                      "logBucket": {
                        "type": "string",
                        "description": "The destination bucket where the current bucket's logs should be placed."
                      },
                      "logObjectPrefix": {
                        "type": "string",
                        "description": "A prefix for log object names."
                      }
                    },
                    "description": "The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs."
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The modification time of the bucket in RFC 3339 format."
                  },
                  "website": {
                    "type": "object",
                    "properties": {
                      "notFoundPage": {
                        "type": "string",
                        "description": "If the requested object path is missing, and any mainPageSuffix object is missing, if applicable, the service will return the named object from this bucket as the content for a 404 Not Found result."
                      },
                      "mainPageSuffix": {
                        "type": "string",
                        "description": "If the requested object path is missing, the service will ensure the path has a trailing '/', append this suffix, and attempt to retrieve the resulting object. This allows the creation of index.html objects to represent directory pages."
                      }
                    },
                    "description": "The bucket's website configuration, controlling how the service behaves when accessing bucket contents as a web site. See the Static Website Examples for more information."
                  },
                  "location": {
                    "type": "string",
                    "description": "The location of the bucket. Object data for objects in the bucket resides in physical storage within this region. Defaults to US. See the developer's guide for the authoritative list."
                  },
                  "selfLink": {
                    "type": "string",
                    "description": "The URI of this bucket."
                  },
                  "lifecycle": {
                    "type": "object",
                    "properties": {
                      "rule": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "action": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "Type of the action. Currently, only Delete and SetStorageClass are supported."
                                },
                                "storageClass": {
                                  "type": "string",
                                  "description": "Target storage class. Required iff the type of the action is SetStorageClass."
                                }
                              },
                              "description": "The action to take."
                            },
                            "condition": {
                              "type": "object",
                              "properties": {
                                "age": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Age of an object (in days). This condition is satisfied when an object reaches the specified age."
                                },
                                "isLive": {
                                  "type": "boolean",
                                  "description": "Relevant only for versioned objects. If the value is true, this condition matches live objects; if the value is false, it matches archived objects."
                                },
                                "createdBefore": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "A date in RFC 3339 format with only the date part (for instance, \"2013-01-15\"). This condition is satisfied when an object is created before midnight of the specified date in UTC."
                                },
                                "matchesPattern": {
                                  "type": "string",
                                  "description": "A regular expression that satisfies the RE2 syntax. This condition is satisfied when the name of the object matches the RE2 pattern. Note: This feature is currently in the \"Early Access\" launch stage and is only available to a whitelisted set of users; that means that this feature may be changed in backward-incompatible ways and that it is not guaranteed to be released."
                                },
                                "customTimeBefore": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "A date in RFC 3339 format with only the date part (for instance, \"2013-01-15\"). This condition is satisfied when the custom time on an object is before this date in UTC."
                                },
                                "numNewerVersions": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Relevant only for versioned objects. If the value is N, this condition is satisfied when there are at least N versions (including the live version) newer than this version of the object."
                                },
                                "daysSinceCustomTime": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Number of days elapsed since the user-specified timestamp set on an object. The condition is satisfied if the days elapsed is at least this number. If no custom timestamp is specified on an object, the condition does not apply."
                                },
                                "matchesStorageClass": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Objects having any of the storage classes specified by this condition will be matched. Values include MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE, STANDARD, and DURABLE_REDUCED_AVAILABILITY."
                                },
                                "noncurrentTimeBefore": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "A date in RFC 3339 format with only the date part (for instance, \"2013-01-15\"). This condition is satisfied when the noncurrent time on an object is before this date in UTC. This condition is relevant only for versioned objects."
                                },
                                "daysSinceNoncurrentTime": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Number of days elapsed since the noncurrent timestamp of an object. The condition is satisfied if the days elapsed is at least this number. This condition is relevant only for versioned objects. The value of the field must be a nonnegative integer. If it's zero, the object version will become eligible for Lifecycle action as soon as it becomes noncurrent."
                                }
                              },
                              "description": "The condition(s) under which the action will be taken."
                            }
                          }
                        },
                        "description": "A lifecycle management rule, which is made of an action to take and the condition(s) under which the action will be taken."
                      }
                    },
                    "description": "The bucket's lifecycle configuration. See lifecycle management for more information."
                  },
                  "encryption": {
                    "type": "object",
                    "properties": {
                      "defaultKmsKeyName": {
                        "type": "string",
                        "description": "A Cloud KMS key that will be used to encrypt objects inserted into this bucket, if no encryption method is specified."
                      }
                    },
                    "description": "Encryption configuration for a bucket."
                  },
                  "versioning": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "description": "While set to true, versioning is fully enabled for this bucket."
                      }
                    },
                    "description": "The bucket's versioning configuration."
                  },
                  "timeCreated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The creation time of the bucket in RFC 3339 format."
                  },
                  "locationType": {
                    "type": "string",
                    "description": "The type of the bucket location."
                  },
                  "satisfiesPZS": {
                    "type": "boolean",
                    "description": "Reserved for future use."
                  },
                  "storageClass": {
                    "type": "string",
                    "description": "The bucket's default storage class, used whenever no storageClass is specified for a newly-created object. This defines how objects in the bucket are stored and determines the SLA and the cost of storage. Values include MULTI_REGIONAL, REGIONAL, STANDARD, NEARLINE, COLDLINE, ARCHIVE, and DURABLE_REDUCED_AVAILABILITY. If this value is not specified when the bucket is created, it will default to STANDARD. For more information, see storage classes."
                  },
                  "zoneAffinity": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The zone or zones from which the bucket is intended to use zonal quota. Requests for data from outside the specified affinities are still allowed but won't be able to use zonal quota. The zone or zones need to be within the bucket location otherwise the requests will fail with a 400 Bad Request response."
                  },
                  "projectNumber": {
                    "type": "string",
                    "format": "uint64",
                    "description": "The project number of the project the bucket belongs to."
                  },
                  "metageneration": {
                    "type": "string",
                    "format": "int64",
                    "description": "The metadata generation of this bucket."
                  },
                  "retentionPolicy": {
                    "type": "object",
                    "properties": {
                      "isLocked": {
                        "type": "boolean",
                        "description": "Once locked, an object retention policy cannot be modified."
                      },
                      "effectiveTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Server-determined value that indicates the time from which policy was enforced and effective. This value is in RFC 3339 format."
                      },
                      "retentionPeriod": {
                        "type": "string",
                        "format": "int64",
                        "description": "The duration in seconds that objects need to be retained. Retention duration must be greater than zero and less than 100 years. Note that enforcement of retention periods less than a day is not guaranteed. Such periods should only be used for testing purposes."
                      }
                    },
                    "description": "The bucket's retention policy. The retention policy enforces a minimum retention time for all objects contained in the bucket, based on their creation time. Any attempt to overwrite or delete objects younger than the retention period will result in a PERMISSION_DENIED error. An unlocked retention policy can be modified or removed from the bucket via a storage.buckets.update operation. A locked retention policy cannot be removed or shortened in duration for the lifetime of the bucket. Attempting to remove or decrease period of a locked retention policy will result in a PERMISSION_DENIED error."
                  },
                  "defaultObjectAcl": {
                    "type": "array",
                    "items": {
                      "id": "ObjectAccessControl",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of the access-control entry."
                        },
                        "etag": {
                          "type": "string",
                          "description": "HTTP 1.1 Entity tag for the access-control entry."
                        },
                        "kind": {
                          "type": "string",
                          "default": "storage#objectAccessControl",
                          "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl."
                        },
                        "role": {
                          "type": "string",
                          "annotations": {
                            "required": [
                              "storage.defaultObjectAccessControls.insert",
                              "storage.objectAccessControls.insert"
                            ]
                          },
                          "description": "The access permission for the entity."
                        },
                        "email": {
                          "type": "string",
                          "description": "The email address associated with the entity, if any."
                        },
                        "bucket": {
                          "type": "string",
                          "description": "The name of the bucket."
                        },
                        "domain": {
                          "type": "string",
                          "description": "The domain associated with the entity, if any."
                        },
                        "entity": {
                          "type": "string",
                          "annotations": {
                            "required": [
                              "storage.defaultObjectAccessControls.insert",
                              "storage.objectAccessControls.insert"
                            ]
                          },
                          "description": "The entity holding the permission, in one of the following forms: \\ - user-userId \\ - user-email \\ - group-groupId \\ - group-email \\ - domain-domain \\ - project-team-projectId \\ - allUsers \\ - allAuthenticatedUsers Examples: \\ - The user liz@example.com would be user-liz@example.com. \\ - The group example@googlegroups.com would be group-example@googlegroups.com. \\ - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                        },
                        "object": {
                          "type": "string",
                          "description": "The name of the object, if applied to an object."
                        },
                        "entityId": {
                          "type": "string",
                          "description": "The ID for the entity, if any."
                        },
                        "selfLink": {
                          "type": "string",
                          "description": "The link to this access-control entry."
                        },
                        "generation": {
                          "type": "string",
                          "format": "int64",
                          "description": "The content generation of the object, if applied to an object."
                        },
                        "projectTeam": {
                          "type": "object",
                          "properties": {
                            "team": {
                              "type": "string",
                              "description": "The team."
                            },
                            "projectNumber": {
                              "type": "string",
                              "description": "The project number."
                            }
                          },
                          "description": "The project team associated with the entity, if any."
                        }
                      },
                      "description": "An access-control entry."
                    },
                    "description": "Default access controls to apply to new objects when no ACL is provided."
                  },
                  "iamConfiguration": {
                    "type": "object",
                    "properties": {
                      "bucketPolicyOnly": {
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "description": "If set, access is controlled only by bucket-level or above IAM policies."
                          },
                          "lockedTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The deadline for changing iamConfiguration.bucketPolicyOnly.enabled from true to false in RFC 3339 format. iamConfiguration.bucketPolicyOnly.enabled may be changed from true to false until the locked time, after which the field is immutable."
                          }
                        },
                        "description": "The bucket's uniform bucket-level access configuration. The feature was formerly known as Bucket Policy Only. For backward compatibility, this field will be populated with identical information as the uniformBucketLevelAccess field. We recommend using the uniformBucketLevelAccess field to enable and disable the feature."
                      },
                      "publicAccessPrevention": {
                        "type": "string",
                        "description": "The bucket's Public Access Prevention configuration. Currently, 'unspecified' and 'enforced' are supported."
                      },
                      "uniformBucketLevelAccess": {
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "description": "If set, access is controlled only by bucket-level or above IAM policies."
                          },
                          "lockedTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The deadline for changing iamConfiguration.uniformBucketLevelAccess.enabled from true to false in RFC 3339  format. iamConfiguration.uniformBucketLevelAccess.enabled may be changed from true to false until the locked time, after which the field is immutable."
                          }
                        },
                        "description": "The bucket's uniform bucket-level access configuration."
                      }
                    },
                    "description": "The bucket's IAM configuration."
                  },
                  "defaultEventBasedHold": {
                    "type": "boolean",
                    "description": "The default value for event-based hold on newly created objects in this bucket. Event-based hold is a way to retain objects indefinitely until an event occurs, signified by the hold's release. After being released, such objects will be subject to bucket-level retention (if any). One sample use case of this flag is for banks to hold loan documents for at least 3 years after loan is paid in full. Here, bucket-level retention is 3 years and the event is loan being paid in full. In this example, these objects will be held intact for any number of years until the event has occurred (event-based hold on the object is released) and then 3 more years after that. That means retention duration of the objects begins from the moment event-based hold transitioned from true to false. Objects under event-based hold cannot be deleted, overwritten or archived until the hold is removed."
                  }
                },
                "description": "A bucket."
              },
              "description": "The list of items."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results."
            }
          },
          "description": "A list of buckets."
        }
      ]
  buckets.listChannels:
    description: |-
      Retrieves a list of active Object Change Notification channels for a bucket, ordered in the list lexicographically by name.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/buckets/listChannels
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  buckets.lockRetentionPolicy:
    description: |-
      Locks retention policy on a bucket.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/buckets/lockRetentionPolicy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Bucket",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of the bucket. For buckets, the id and name properties are the same."
            },
            "acl": {
              "type": "array",
              "items": {
                "id": "BucketAccessControl",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the access-control entry."
                  },
                  "etag": {
                    "type": "string",
                    "description": "HTTP 1.1 Entity tag for the access-control entry."
                  },
                  "kind": {
                    "type": "string",
                    "default": "storage#bucketAccessControl",
                    "description": "The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl."
                  },
                  "role": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.bucketAccessControls.insert"
                      ]
                    },
                    "description": "The access permission for the entity."
                  },
                  "email": {
                    "type": "string",
                    "description": "The email address associated with the entity, if any."
                  },
                  "bucket": {
                    "type": "string",
                    "description": "The name of the bucket."
                  },
                  "domain": {
                    "type": "string",
                    "description": "The domain associated with the entity, if any."
                  },
                  "entity": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.bucketAccessControls.insert"
                      ]
                    },
                    "description": "The entity holding the permission, in one of the following forms: \\ - user-userId \\ - user-email \\ - group-groupId \\ - group-email \\ - domain-domain \\ - project-team-projectId \\ - allUsers \\ - allAuthenticatedUsers Examples: \\ - The user liz@example.com would be user-liz@example.com. \\ - The group example@googlegroups.com would be group-example@googlegroups.com. \\ - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The ID for the entity, if any."
                  },
                  "selfLink": {
                    "type": "string",
                    "description": "The link to this access-control entry."
                  },
                  "projectTeam": {
                    "type": "object",
                    "properties": {
                      "team": {
                        "type": "string",
                        "description": "The team."
                      },
                      "projectNumber": {
                        "type": "string",
                        "description": "The project number."
                      }
                    },
                    "description": "The project team associated with the entity, if any."
                  }
                },
                "description": "An access-control entry."
              },
              "annotations": {
                "required": [
                  "storage.buckets.update"
                ]
              },
              "description": "Access controls on the bucket."
            },
            "cors": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "method": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: \"*\" is permitted in the list of methods, and means \"any method\"."
                  },
                  "origin": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The list of Origins eligible to receive CORS response headers. Note: \"*\" is permitted in the list of origins, and means \"any Origin\"."
                  },
                  "maxAgeSeconds": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The value, in seconds, to return in the  Access-Control-Max-Age header used in preflight responses."
                  },
                  "responseHeader": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains."
                  }
                }
              },
              "description": "The bucket's Cross-Origin Resource Sharing (CORS) configuration."
            },
            "etag": {
              "type": "string",
              "description": "HTTP 1.1 Entity tag for the bucket."
            },
            "kind": {
              "type": "string",
              "default": "storage#bucket",
              "description": "The kind of item this is. For buckets, this is always storage#bucket."
            },
            "name": {
              "type": "string",
              "annotations": {
                "required": [
                  "storage.buckets.insert"
                ]
              },
              "description": "The name of the bucket."
            },
            "owner": {
              "type": "object",
              "properties": {
                "entity": {
                  "type": "string",
                  "description": "The entity, in the form project-owner-projectId."
                },
                "entityId": {
                  "type": "string",
                  "description": "The ID for the entity."
                }
              },
              "description": "The owner of the bucket. This is always the project team's owner group."
            },
            "labels": {
              "type": "object",
              "description": "User-provided labels, in key/value pairs.",
              "additionalProperties": {
                "type": "string",
                "description": "An individual label entry."
              }
            },
            "billing": {
              "type": "object",
              "properties": {
                "requesterPays": {
                  "type": "boolean",
                  "description": "When set to true, Requester Pays is enabled for this bucket."
                }
              },
              "description": "The bucket's billing configuration."
            },
            "logging": {
              "type": "object",
              "properties": {
                "logBucket": {
                  "type": "string",
                  "description": "The destination bucket where the current bucket's logs should be placed."
                },
                "logObjectPrefix": {
                  "type": "string",
                  "description": "A prefix for log object names."
                }
              },
              "description": "The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs."
            },
            "updated": {
              "type": "string",
              "format": "date-time",
              "description": "The modification time of the bucket in RFC 3339 format."
            },
            "website": {
              "type": "object",
              "properties": {
                "notFoundPage": {
                  "type": "string",
                  "description": "If the requested object path is missing, and any mainPageSuffix object is missing, if applicable, the service will return the named object from this bucket as the content for a 404 Not Found result."
                },
                "mainPageSuffix": {
                  "type": "string",
                  "description": "If the requested object path is missing, the service will ensure the path has a trailing '/', append this suffix, and attempt to retrieve the resulting object. This allows the creation of index.html objects to represent directory pages."
                }
              },
              "description": "The bucket's website configuration, controlling how the service behaves when accessing bucket contents as a web site. See the Static Website Examples for more information."
            },
            "location": {
              "type": "string",
              "description": "The location of the bucket. Object data for objects in the bucket resides in physical storage within this region. Defaults to US. See the developer's guide for the authoritative list."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this bucket."
            },
            "lifecycle": {
              "type": "object",
              "properties": {
                "rule": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "action": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Type of the action. Currently, only Delete and SetStorageClass are supported."
                          },
                          "storageClass": {
                            "type": "string",
                            "description": "Target storage class. Required iff the type of the action is SetStorageClass."
                          }
                        },
                        "description": "The action to take."
                      },
                      "condition": {
                        "type": "object",
                        "properties": {
                          "age": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Age of an object (in days). This condition is satisfied when an object reaches the specified age."
                          },
                          "isLive": {
                            "type": "boolean",
                            "description": "Relevant only for versioned objects. If the value is true, this condition matches live objects; if the value is false, it matches archived objects."
                          },
                          "createdBefore": {
                            "type": "string",
                            "format": "date",
                            "description": "A date in RFC 3339 format with only the date part (for instance, \"2013-01-15\"). This condition is satisfied when an object is created before midnight of the specified date in UTC."
                          },
                          "matchesPattern": {
                            "type": "string",
                            "description": "A regular expression that satisfies the RE2 syntax. This condition is satisfied when the name of the object matches the RE2 pattern. Note: This feature is currently in the \"Early Access\" launch stage and is only available to a whitelisted set of users; that means that this feature may be changed in backward-incompatible ways and that it is not guaranteed to be released."
                          },
                          "customTimeBefore": {
                            "type": "string",
                            "format": "date",
                            "description": "A date in RFC 3339 format with only the date part (for instance, \"2013-01-15\"). This condition is satisfied when the custom time on an object is before this date in UTC."
                          },
                          "numNewerVersions": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Relevant only for versioned objects. If the value is N, this condition is satisfied when there are at least N versions (including the live version) newer than this version of the object."
                          },
                          "daysSinceCustomTime": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Number of days elapsed since the user-specified timestamp set on an object. The condition is satisfied if the days elapsed is at least this number. If no custom timestamp is specified on an object, the condition does not apply."
                          },
                          "matchesStorageClass": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Objects having any of the storage classes specified by this condition will be matched. Values include MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE, STANDARD, and DURABLE_REDUCED_AVAILABILITY."
                          },
                          "noncurrentTimeBefore": {
                            "type": "string",
                            "format": "date",
                            "description": "A date in RFC 3339 format with only the date part (for instance, \"2013-01-15\"). This condition is satisfied when the noncurrent time on an object is before this date in UTC. This condition is relevant only for versioned objects."
                          },
                          "daysSinceNoncurrentTime": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Number of days elapsed since the noncurrent timestamp of an object. The condition is satisfied if the days elapsed is at least this number. This condition is relevant only for versioned objects. The value of the field must be a nonnegative integer. If it's zero, the object version will become eligible for Lifecycle action as soon as it becomes noncurrent."
                          }
                        },
                        "description": "The condition(s) under which the action will be taken."
                      }
                    }
                  },
                  "description": "A lifecycle management rule, which is made of an action to take and the condition(s) under which the action will be taken."
                }
              },
              "description": "The bucket's lifecycle configuration. See lifecycle management for more information."
            },
            "encryption": {
              "type": "object",
              "properties": {
                "defaultKmsKeyName": {
                  "type": "string",
                  "description": "A Cloud KMS key that will be used to encrypt objects inserted into this bucket, if no encryption method is specified."
                }
              },
              "description": "Encryption configuration for a bucket."
            },
            "versioning": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "While set to true, versioning is fully enabled for this bucket."
                }
              },
              "description": "The bucket's versioning configuration."
            },
            "timeCreated": {
              "type": "string",
              "format": "date-time",
              "description": "The creation time of the bucket in RFC 3339 format."
            },
            "locationType": {
              "type": "string",
              "description": "The type of the bucket location."
            },
            "satisfiesPZS": {
              "type": "boolean",
              "description": "Reserved for future use."
            },
            "storageClass": {
              "type": "string",
              "description": "The bucket's default storage class, used whenever no storageClass is specified for a newly-created object. This defines how objects in the bucket are stored and determines the SLA and the cost of storage. Values include MULTI_REGIONAL, REGIONAL, STANDARD, NEARLINE, COLDLINE, ARCHIVE, and DURABLE_REDUCED_AVAILABILITY. If this value is not specified when the bucket is created, it will default to STANDARD. For more information, see storage classes."
            },
            "zoneAffinity": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The zone or zones from which the bucket is intended to use zonal quota. Requests for data from outside the specified affinities are still allowed but won't be able to use zonal quota. The zone or zones need to be within the bucket location otherwise the requests will fail with a 400 Bad Request response."
            },
            "projectNumber": {
              "type": "string",
              "format": "uint64",
              "description": "The project number of the project the bucket belongs to."
            },
            "metageneration": {
              "type": "string",
              "format": "int64",
              "description": "The metadata generation of this bucket."
            },
            "retentionPolicy": {
              "type": "object",
              "properties": {
                "isLocked": {
                  "type": "boolean",
                  "description": "Once locked, an object retention policy cannot be modified."
                },
                "effectiveTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Server-determined value that indicates the time from which policy was enforced and effective. This value is in RFC 3339 format."
                },
                "retentionPeriod": {
                  "type": "string",
                  "format": "int64",
                  "description": "The duration in seconds that objects need to be retained. Retention duration must be greater than zero and less than 100 years. Note that enforcement of retention periods less than a day is not guaranteed. Such periods should only be used for testing purposes."
                }
              },
              "description": "The bucket's retention policy. The retention policy enforces a minimum retention time for all objects contained in the bucket, based on their creation time. Any attempt to overwrite or delete objects younger than the retention period will result in a PERMISSION_DENIED error. An unlocked retention policy can be modified or removed from the bucket via a storage.buckets.update operation. A locked retention policy cannot be removed or shortened in duration for the lifetime of the bucket. Attempting to remove or decrease period of a locked retention policy will result in a PERMISSION_DENIED error."
            },
            "defaultObjectAcl": {
              "type": "array",
              "items": {
                "id": "ObjectAccessControl",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the access-control entry."
                  },
                  "etag": {
                    "type": "string",
                    "description": "HTTP 1.1 Entity tag for the access-control entry."
                  },
                  "kind": {
                    "type": "string",
                    "default": "storage#objectAccessControl",
                    "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl."
                  },
                  "role": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.defaultObjectAccessControls.insert",
                        "storage.objectAccessControls.insert"
                      ]
                    },
                    "description": "The access permission for the entity."
                  },
                  "email": {
                    "type": "string",
                    "description": "The email address associated with the entity, if any."
                  },
                  "bucket": {
                    "type": "string",
                    "description": "The name of the bucket."
                  },
                  "domain": {
                    "type": "string",
                    "description": "The domain associated with the entity, if any."
                  },
                  "entity": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.defaultObjectAccessControls.insert",
                        "storage.objectAccessControls.insert"
                      ]
                    },
                    "description": "The entity holding the permission, in one of the following forms: \\ - user-userId \\ - user-email \\ - group-groupId \\ - group-email \\ - domain-domain \\ - project-team-projectId \\ - allUsers \\ - allAuthenticatedUsers Examples: \\ - The user liz@example.com would be user-liz@example.com. \\ - The group example@googlegroups.com would be group-example@googlegroups.com. \\ - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                  },
                  "object": {
                    "type": "string",
                    "description": "The name of the object, if applied to an object."
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The ID for the entity, if any."
                  },
                  "selfLink": {
                    "type": "string",
                    "description": "The link to this access-control entry."
                  },
                  "generation": {
                    "type": "string",
                    "format": "int64",
                    "description": "The content generation of the object, if applied to an object."
                  },
                  "projectTeam": {
                    "type": "object",
                    "properties": {
                      "team": {
                        "type": "string",
                        "description": "The team."
                      },
                      "projectNumber": {
                        "type": "string",
                        "description": "The project number."
                      }
                    },
                    "description": "The project team associated with the entity, if any."
                  }
                },
                "description": "An access-control entry."
              },
              "description": "Default access controls to apply to new objects when no ACL is provided."
            },
            "iamConfiguration": {
              "type": "object",
              "properties": {
                "bucketPolicyOnly": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "If set, access is controlled only by bucket-level or above IAM policies."
                    },
                    "lockedTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The deadline for changing iamConfiguration.bucketPolicyOnly.enabled from true to false in RFC 3339 format. iamConfiguration.bucketPolicyOnly.enabled may be changed from true to false until the locked time, after which the field is immutable."
                    }
                  },
                  "description": "The bucket's uniform bucket-level access configuration. The feature was formerly known as Bucket Policy Only. For backward compatibility, this field will be populated with identical information as the uniformBucketLevelAccess field. We recommend using the uniformBucketLevelAccess field to enable and disable the feature."
                },
                "publicAccessPrevention": {
                  "type": "string",
                  "description": "The bucket's Public Access Prevention configuration. Currently, 'unspecified' and 'enforced' are supported."
                },
                "uniformBucketLevelAccess": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "If set, access is controlled only by bucket-level or above IAM policies."
                    },
                    "lockedTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The deadline for changing iamConfiguration.uniformBucketLevelAccess.enabled from true to false in RFC 3339  format. iamConfiguration.uniformBucketLevelAccess.enabled may be changed from true to false until the locked time, after which the field is immutable."
                    }
                  },
                  "description": "The bucket's uniform bucket-level access configuration."
                }
              },
              "description": "The bucket's IAM configuration."
            },
            "defaultEventBasedHold": {
              "type": "boolean",
              "description": "The default value for event-based hold on newly created objects in this bucket. Event-based hold is a way to retain objects indefinitely until an event occurs, signified by the hold's release. After being released, such objects will be subject to bucket-level retention (if any). One sample use case of this flag is for banks to hold loan documents for at least 3 years after loan is paid in full. Here, bucket-level retention is 3 years and the event is loan being paid in full. In this example, these objects will be held intact for any number of years until the event has occurred (event-based hold on the object is released) and then 3 more years after that. That means retention duration of the objects begins from the moment event-based hold transitioned from true to false. Objects under event-based hold cannot be deleted, overwritten or archived until the hold is removed."
            }
          },
          "description": "A bucket."
        }
      ]
  buckets.patch:
    description: |-
      Patches a bucket. Changes to the bucket will be readable immediately after writing, but configuration changes may take time to propagate.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/buckets/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  buckets.setIamPolicy:
    description: |-
      Updates an IAM policy for the specified bucket.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/buckets/setIamPolicy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "HTTP 1.1  Entity tag for the policy."
            },
            "kind": {
              "type": "string",
              "default": "storage#policy",
              "description": "The kind of item this is. For policies, this is always storage#policy. This field is ignored on input."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "The IAM policy format version."
            },
            "bindings": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.buckets.setIamPolicy",
                        "storage.objects.setIamPolicy"
                      ]
                    },
                    "description": "The role to which members belong. Two types of roles are supported: new IAM roles, which grant permissions that do not map directly to those provided by ACLs, and legacy IAM roles, which do map directly to ACL permissions. All roles are of the format roles/storage.specificRole.\\ The new IAM roles are:  \\ - roles/storage.admin — Full control of Google Cloud Storage resources.  \\ - roles/storage.objectViewer — Read-Only access to Google Cloud Storage objects.  \\ - roles/storage.objectCreator — Access to create objects in Google Cloud Storage.  \\ - roles/storage.objectAdmin — Full control of Google Cloud Storage objects.   The legacy IAM roles are:  \\ - roles/storage.legacyObjectReader — Read-only access to objects without listing. Equivalent to an ACL entry on an object with the READER role.  \\ - roles/storage.legacyObjectOwner — Read/write access to existing objects without listing. Equivalent to an ACL entry on an object with the OWNER role.  \\ - roles/storage.legacyBucketReader — Read access to buckets with object listing. Equivalent to an ACL entry on a bucket with the READER role.  \\ - roles/storage.legacyBucketWriter — Read access to buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the WRITER role.  \\ - roles/storage.legacyBucketOwner — Read and write access to existing buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the OWNER role."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "annotations": {
                      "required": [
                        "storage.buckets.setIamPolicy",
                        "storage.objects.setIamPolicy"
                      ]
                    },
                    "description": "A collection of identifiers for members who may assume the provided role. Recognized identifiers are as follows:  \\ - allUsers — A special identifier that represents anyone on the internet; with or without a Google account.  \\ - allAuthenticatedUsers — A special identifier that represents anyone who is authenticated with a Google account or a service account.  \\ - user:emailid — An email address that represents a specific account. For example, user:alice@gmail.com or user:joe@example.com.  \\ - serviceAccount:emailid — An email address that represents a service account. For example,  serviceAccount:my-other-app@appspot.gserviceaccount.com .  \\ - group:emailid — An email address that represents a Google group. For example, group:admins@example.com.  \\ - domain:domain — A Google Apps domain name that represents all the users of that domain. For example, domain:google.com or domain:example.com.  \\ - projectOwner:projectid — Owners of the given project. For example, projectOwner:my-example-project  \\ - projectEditor:projectid — Editors of the given project. For example, projectEditor:my-example-project  \\ - projectViewer:projectid — Viewers of the given project. For example, projectViewer:my-example-project"
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "An optional title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "An optional string indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax. The application context of the containing message determines which well-known feature set of CEL is supported."
                      },
                      "description": {
                        "type": "string",
                        "description": "An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. NOTE: an unsatisfied condition will not allow user access via current binding. Different bindings, including their conditions, are examined independently."
                  }
                }
              },
              "annotations": {
                "required": [
                  "storage.buckets.setIamPolicy",
                  "storage.objects.setIamPolicy"
                ]
              },
              "description": "An association between a role, which comes with a set of permissions, and members who may assume that role."
            },
            "resourceId": {
              "type": "string",
              "description": "The ID of the resource to which this policy belongs. Will be of the form projects/_/buckets/bucket for buckets, and projects/_/buckets/bucket/objects/object for objects. A specific generation may be specified by appending #generationNumber to the end of the object name, e.g. projects/_/buckets/my-bucket/objects/data.txt#17. The current generation can be denoted with #0. This field is ignored on input."
            }
          },
          "description": "A bucket/object IAM policy."
        }
      ]
  buckets.testIamPermissions:
    description: |-
      Tests a set of permissions on the given bucket to see which, if any, are held by the caller.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/buckets/testIamPermissions
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "TestIamPermissionsResponse",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "storage#testIamPermissionsResponse",
              "description": "The kind of item this is."
            },
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The permissions held by the caller. Permissions are always of the format storage.resource.capability, where resource is one of buckets or objects. The supported permissions are as follows:  \\ - storage.buckets.delete — Delete bucket.  \\ - storage.buckets.get — Read bucket metadata.  \\ - storage.buckets.getIamPolicy — Read bucket IAM policy.  \\ - storage.buckets.create — Create bucket.  \\ - storage.buckets.list — List buckets.  \\ - storage.buckets.setIamPolicy — Update bucket IAM policy.  \\ - storage.buckets.update — Update bucket metadata.  \\ - storage.objects.delete — Delete object.  \\ - storage.objects.get — Read object data and metadata.  \\ - storage.objects.getIamPolicy — Read object IAM policy.  \\ - storage.objects.create — Create object.  \\ - storage.objects.list — List objects.  \\ - storage.objects.setIamPolicy — Update object IAM policy.  \\ - storage.objects.update — Update object metadata."
            }
          },
          "description": "A storage.(buckets|objects).testIamPermissions response."
        }
      ]
  buckets.update:
    description: |-
      Updates a bucket. Changes to the bucket will be readable immediately after writing, but configuration changes may take time to propagate.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/buckets/update
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Bucket",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of the bucket. For buckets, the id and name properties are the same."
            },
            "acl": {
              "type": "array",
              "items": {
                "id": "BucketAccessControl",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the access-control entry."
                  },
                  "etag": {
                    "type": "string",
                    "description": "HTTP 1.1 Entity tag for the access-control entry."
                  },
                  "kind": {
                    "type": "string",
                    "default": "storage#bucketAccessControl",
                    "description": "The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl."
                  },
                  "role": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.bucketAccessControls.insert"
                      ]
                    },
                    "description": "The access permission for the entity."
                  },
                  "email": {
                    "type": "string",
                    "description": "The email address associated with the entity, if any."
                  },
                  "bucket": {
                    "type": "string",
                    "description": "The name of the bucket."
                  },
                  "domain": {
                    "type": "string",
                    "description": "The domain associated with the entity, if any."
                  },
                  "entity": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.bucketAccessControls.insert"
                      ]
                    },
                    "description": "The entity holding the permission, in one of the following forms: \\ - user-userId \\ - user-email \\ - group-groupId \\ - group-email \\ - domain-domain \\ - project-team-projectId \\ - allUsers \\ - allAuthenticatedUsers Examples: \\ - The user liz@example.com would be user-liz@example.com. \\ - The group example@googlegroups.com would be group-example@googlegroups.com. \\ - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The ID for the entity, if any."
                  },
                  "selfLink": {
                    "type": "string",
                    "description": "The link to this access-control entry."
                  },
                  "projectTeam": {
                    "type": "object",
                    "properties": {
                      "team": {
                        "type": "string",
                        "description": "The team."
                      },
                      "projectNumber": {
                        "type": "string",
                        "description": "The project number."
                      }
                    },
                    "description": "The project team associated with the entity, if any."
                  }
                },
                "description": "An access-control entry."
              },
              "annotations": {
                "required": [
                  "storage.buckets.update"
                ]
              },
              "description": "Access controls on the bucket."
            },
            "cors": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "method": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: \"*\" is permitted in the list of methods, and means \"any method\"."
                  },
                  "origin": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The list of Origins eligible to receive CORS response headers. Note: \"*\" is permitted in the list of origins, and means \"any Origin\"."
                  },
                  "maxAgeSeconds": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The value, in seconds, to return in the  Access-Control-Max-Age header used in preflight responses."
                  },
                  "responseHeader": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains."
                  }
                }
              },
              "description": "The bucket's Cross-Origin Resource Sharing (CORS) configuration."
            },
            "etag": {
              "type": "string",
              "description": "HTTP 1.1 Entity tag for the bucket."
            },
            "kind": {
              "type": "string",
              "default": "storage#bucket",
              "description": "The kind of item this is. For buckets, this is always storage#bucket."
            },
            "name": {
              "type": "string",
              "annotations": {
                "required": [
                  "storage.buckets.insert"
                ]
              },
              "description": "The name of the bucket."
            },
            "owner": {
              "type": "object",
              "properties": {
                "entity": {
                  "type": "string",
                  "description": "The entity, in the form project-owner-projectId."
                },
                "entityId": {
                  "type": "string",
                  "description": "The ID for the entity."
                }
              },
              "description": "The owner of the bucket. This is always the project team's owner group."
            },
            "labels": {
              "type": "object",
              "description": "User-provided labels, in key/value pairs.",
              "additionalProperties": {
                "type": "string",
                "description": "An individual label entry."
              }
            },
            "billing": {
              "type": "object",
              "properties": {
                "requesterPays": {
                  "type": "boolean",
                  "description": "When set to true, Requester Pays is enabled for this bucket."
                }
              },
              "description": "The bucket's billing configuration."
            },
            "logging": {
              "type": "object",
              "properties": {
                "logBucket": {
                  "type": "string",
                  "description": "The destination bucket where the current bucket's logs should be placed."
                },
                "logObjectPrefix": {
                  "type": "string",
                  "description": "A prefix for log object names."
                }
              },
              "description": "The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs."
            },
            "updated": {
              "type": "string",
              "format": "date-time",
              "description": "The modification time of the bucket in RFC 3339 format."
            },
            "website": {
              "type": "object",
              "properties": {
                "notFoundPage": {
                  "type": "string",
                  "description": "If the requested object path is missing, and any mainPageSuffix object is missing, if applicable, the service will return the named object from this bucket as the content for a 404 Not Found result."
                },
                "mainPageSuffix": {
                  "type": "string",
                  "description": "If the requested object path is missing, the service will ensure the path has a trailing '/', append this suffix, and attempt to retrieve the resulting object. This allows the creation of index.html objects to represent directory pages."
                }
              },
              "description": "The bucket's website configuration, controlling how the service behaves when accessing bucket contents as a web site. See the Static Website Examples for more information."
            },
            "location": {
              "type": "string",
              "description": "The location of the bucket. Object data for objects in the bucket resides in physical storage within this region. Defaults to US. See the developer's guide for the authoritative list."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this bucket."
            },
            "lifecycle": {
              "type": "object",
              "properties": {
                "rule": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "action": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Type of the action. Currently, only Delete and SetStorageClass are supported."
                          },
                          "storageClass": {
                            "type": "string",
                            "description": "Target storage class. Required iff the type of the action is SetStorageClass."
                          }
                        },
                        "description": "The action to take."
                      },
                      "condition": {
                        "type": "object",
                        "properties": {
                          "age": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Age of an object (in days). This condition is satisfied when an object reaches the specified age."
                          },
                          "isLive": {
                            "type": "boolean",
                            "description": "Relevant only for versioned objects. If the value is true, this condition matches live objects; if the value is false, it matches archived objects."
                          },
                          "createdBefore": {
                            "type": "string",
                            "format": "date",
                            "description": "A date in RFC 3339 format with only the date part (for instance, \"2013-01-15\"). This condition is satisfied when an object is created before midnight of the specified date in UTC."
                          },
                          "matchesPattern": {
                            "type": "string",
                            "description": "A regular expression that satisfies the RE2 syntax. This condition is satisfied when the name of the object matches the RE2 pattern. Note: This feature is currently in the \"Early Access\" launch stage and is only available to a whitelisted set of users; that means that this feature may be changed in backward-incompatible ways and that it is not guaranteed to be released."
                          },
                          "customTimeBefore": {
                            "type": "string",
                            "format": "date",
                            "description": "A date in RFC 3339 format with only the date part (for instance, \"2013-01-15\"). This condition is satisfied when the custom time on an object is before this date in UTC."
                          },
                          "numNewerVersions": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Relevant only for versioned objects. If the value is N, this condition is satisfied when there are at least N versions (including the live version) newer than this version of the object."
                          },
                          "daysSinceCustomTime": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Number of days elapsed since the user-specified timestamp set on an object. The condition is satisfied if the days elapsed is at least this number. If no custom timestamp is specified on an object, the condition does not apply."
                          },
                          "matchesStorageClass": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Objects having any of the storage classes specified by this condition will be matched. Values include MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE, STANDARD, and DURABLE_REDUCED_AVAILABILITY."
                          },
                          "noncurrentTimeBefore": {
                            "type": "string",
                            "format": "date",
                            "description": "A date in RFC 3339 format with only the date part (for instance, \"2013-01-15\"). This condition is satisfied when the noncurrent time on an object is before this date in UTC. This condition is relevant only for versioned objects."
                          },
                          "daysSinceNoncurrentTime": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Number of days elapsed since the noncurrent timestamp of an object. The condition is satisfied if the days elapsed is at least this number. This condition is relevant only for versioned objects. The value of the field must be a nonnegative integer. If it's zero, the object version will become eligible for Lifecycle action as soon as it becomes noncurrent."
                          }
                        },
                        "description": "The condition(s) under which the action will be taken."
                      }
                    }
                  },
                  "description": "A lifecycle management rule, which is made of an action to take and the condition(s) under which the action will be taken."
                }
              },
              "description": "The bucket's lifecycle configuration. See lifecycle management for more information."
            },
            "encryption": {
              "type": "object",
              "properties": {
                "defaultKmsKeyName": {
                  "type": "string",
                  "description": "A Cloud KMS key that will be used to encrypt objects inserted into this bucket, if no encryption method is specified."
                }
              },
              "description": "Encryption configuration for a bucket."
            },
            "versioning": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "While set to true, versioning is fully enabled for this bucket."
                }
              },
              "description": "The bucket's versioning configuration."
            },
            "timeCreated": {
              "type": "string",
              "format": "date-time",
              "description": "The creation time of the bucket in RFC 3339 format."
            },
            "locationType": {
              "type": "string",
              "description": "The type of the bucket location."
            },
            "satisfiesPZS": {
              "type": "boolean",
              "description": "Reserved for future use."
            },
            "storageClass": {
              "type": "string",
              "description": "The bucket's default storage class, used whenever no storageClass is specified for a newly-created object. This defines how objects in the bucket are stored and determines the SLA and the cost of storage. Values include MULTI_REGIONAL, REGIONAL, STANDARD, NEARLINE, COLDLINE, ARCHIVE, and DURABLE_REDUCED_AVAILABILITY. If this value is not specified when the bucket is created, it will default to STANDARD. For more information, see storage classes."
            },
            "zoneAffinity": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The zone or zones from which the bucket is intended to use zonal quota. Requests for data from outside the specified affinities are still allowed but won't be able to use zonal quota. The zone or zones need to be within the bucket location otherwise the requests will fail with a 400 Bad Request response."
            },
            "projectNumber": {
              "type": "string",
              "format": "uint64",
              "description": "The project number of the project the bucket belongs to."
            },
            "metageneration": {
              "type": "string",
              "format": "int64",
              "description": "The metadata generation of this bucket."
            },
            "retentionPolicy": {
              "type": "object",
              "properties": {
                "isLocked": {
                  "type": "boolean",
                  "description": "Once locked, an object retention policy cannot be modified."
                },
                "effectiveTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Server-determined value that indicates the time from which policy was enforced and effective. This value is in RFC 3339 format."
                },
                "retentionPeriod": {
                  "type": "string",
                  "format": "int64",
                  "description": "The duration in seconds that objects need to be retained. Retention duration must be greater than zero and less than 100 years. Note that enforcement of retention periods less than a day is not guaranteed. Such periods should only be used for testing purposes."
                }
              },
              "description": "The bucket's retention policy. The retention policy enforces a minimum retention time for all objects contained in the bucket, based on their creation time. Any attempt to overwrite or delete objects younger than the retention period will result in a PERMISSION_DENIED error. An unlocked retention policy can be modified or removed from the bucket via a storage.buckets.update operation. A locked retention policy cannot be removed or shortened in duration for the lifetime of the bucket. Attempting to remove or decrease period of a locked retention policy will result in a PERMISSION_DENIED error."
            },
            "defaultObjectAcl": {
              "type": "array",
              "items": {
                "id": "ObjectAccessControl",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the access-control entry."
                  },
                  "etag": {
                    "type": "string",
                    "description": "HTTP 1.1 Entity tag for the access-control entry."
                  },
                  "kind": {
                    "type": "string",
                    "default": "storage#objectAccessControl",
                    "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl."
                  },
                  "role": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.defaultObjectAccessControls.insert",
                        "storage.objectAccessControls.insert"
                      ]
                    },
                    "description": "The access permission for the entity."
                  },
                  "email": {
                    "type": "string",
                    "description": "The email address associated with the entity, if any."
                  },
                  "bucket": {
                    "type": "string",
                    "description": "The name of the bucket."
                  },
                  "domain": {
                    "type": "string",
                    "description": "The domain associated with the entity, if any."
                  },
                  "entity": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.defaultObjectAccessControls.insert",
                        "storage.objectAccessControls.insert"
                      ]
                    },
                    "description": "The entity holding the permission, in one of the following forms: \\ - user-userId \\ - user-email \\ - group-groupId \\ - group-email \\ - domain-domain \\ - project-team-projectId \\ - allUsers \\ - allAuthenticatedUsers Examples: \\ - The user liz@example.com would be user-liz@example.com. \\ - The group example@googlegroups.com would be group-example@googlegroups.com. \\ - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                  },
                  "object": {
                    "type": "string",
                    "description": "The name of the object, if applied to an object."
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The ID for the entity, if any."
                  },
                  "selfLink": {
                    "type": "string",
                    "description": "The link to this access-control entry."
                  },
                  "generation": {
                    "type": "string",
                    "format": "int64",
                    "description": "The content generation of the object, if applied to an object."
                  },
                  "projectTeam": {
                    "type": "object",
                    "properties": {
                      "team": {
                        "type": "string",
                        "description": "The team."
                      },
                      "projectNumber": {
                        "type": "string",
                        "description": "The project number."
                      }
                    },
                    "description": "The project team associated with the entity, if any."
                  }
                },
                "description": "An access-control entry."
              },
              "description": "Default access controls to apply to new objects when no ACL is provided."
            },
            "iamConfiguration": {
              "type": "object",
              "properties": {
                "bucketPolicyOnly": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "If set, access is controlled only by bucket-level or above IAM policies."
                    },
                    "lockedTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The deadline for changing iamConfiguration.bucketPolicyOnly.enabled from true to false in RFC 3339 format. iamConfiguration.bucketPolicyOnly.enabled may be changed from true to false until the locked time, after which the field is immutable."
                    }
                  },
                  "description": "The bucket's uniform bucket-level access configuration. The feature was formerly known as Bucket Policy Only. For backward compatibility, this field will be populated with identical information as the uniformBucketLevelAccess field. We recommend using the uniformBucketLevelAccess field to enable and disable the feature."
                },
                "publicAccessPrevention": {
                  "type": "string",
                  "description": "The bucket's Public Access Prevention configuration. Currently, 'unspecified' and 'enforced' are supported."
                },
                "uniformBucketLevelAccess": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "If set, access is controlled only by bucket-level or above IAM policies."
                    },
                    "lockedTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The deadline for changing iamConfiguration.uniformBucketLevelAccess.enabled from true to false in RFC 3339  format. iamConfiguration.uniformBucketLevelAccess.enabled may be changed from true to false until the locked time, after which the field is immutable."
                    }
                  },
                  "description": "The bucket's uniform bucket-level access configuration."
                }
              },
              "description": "The bucket's IAM configuration."
            },
            "defaultEventBasedHold": {
              "type": "boolean",
              "description": "The default value for event-based hold on newly created objects in this bucket. Event-based hold is a way to retain objects indefinitely until an event occurs, signified by the hold's release. After being released, such objects will be subject to bucket-level retention (if any). One sample use case of this flag is for banks to hold loan documents for at least 3 years after loan is paid in full. Here, bucket-level retention is 3 years and the event is loan being paid in full. In this example, these objects will be held intact for any number of years until the event has occurred (event-based hold on the object is released) and then 3 more years after that. That means retention duration of the objects begins from the moment event-based hold transitioned from true to false. Objects under event-based hold cannot be deleted, overwritten or archived until the hold is removed."
            }
          },
          "description": "A bucket."
        }
      ]
  channels.stop:
    description: |-
      Stop watching resources through this channel
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/channels/stop
    example:
      inputs: [
        {
          "id": "Channel",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "A UUID or similar unique string that identifies this channel."
            },
            "kind": {
              "type": "string",
              "default": "api#channel",
              "description": "Identifies this as a notification channel used to watch for changes to a resource, which is \"api#channel\"."
            },
            "type": {
              "type": "string",
              "description": "The type of delivery mechanism used for this channel."
            },
            "token": {
              "type": "string",
              "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."
            },
            "params": {
              "type": "object",
              "description": "Additional parameters controlling delivery channel behavior. Optional.",
              "additionalProperties": {
                "type": "string",
                "description": "Declares a new parameter by name."
              }
            },
            "address": {
              "type": "string",
              "description": "The address where notifications are delivered for this channel."
            },
            "payload": {
              "type": "boolean",
              "description": "A Boolean value to indicate whether payload is wanted. Optional."
            },
            "expiration": {
              "type": "string",
              "format": "int64",
              "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional."
            },
            "resourceId": {
              "type": "string",
              "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."
            },
            "resourceUri": {
              "type": "string",
              "description": "A version-specific identifier for the watched resource."
            }
          },
          "description": "An notification channel used to watch for resource changes.",
          "parameterName": "resource"
        }
      ]
      outputs: [
        {}
      ]
  defaultObjectAccessControls.delete:
    description: |-
      Permanently deletes the default object ACL entry for the specified entity on the specified bucket.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/defaultObjectAccessControls/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  defaultObjectAccessControls.get:
    description: |-
      Returns the default object ACL entry for the specified entity on the specified bucket.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/defaultObjectAccessControls/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ObjectAccessControl",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of the access-control entry."
            },
            "etag": {
              "type": "string",
              "description": "HTTP 1.1 Entity tag for the access-control entry."
            },
            "kind": {
              "type": "string",
              "default": "storage#objectAccessControl",
              "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl."
            },
            "role": {
              "type": "string",
              "annotations": {
                "required": [
                  "storage.defaultObjectAccessControls.insert",
                  "storage.objectAccessControls.insert"
                ]
              },
              "description": "The access permission for the entity."
            },
            "email": {
              "type": "string",
              "description": "The email address associated with the entity, if any."
            },
            "bucket": {
              "type": "string",
              "description": "The name of the bucket."
            },
            "domain": {
              "type": "string",
              "description": "The domain associated with the entity, if any."
            },
            "entity": {
              "type": "string",
              "annotations": {
                "required": [
                  "storage.defaultObjectAccessControls.insert",
                  "storage.objectAccessControls.insert"
                ]
              },
              "description": "The entity holding the permission, in one of the following forms: \\ - user-userId \\ - user-email \\ - group-groupId \\ - group-email \\ - domain-domain \\ - project-team-projectId \\ - allUsers \\ - allAuthenticatedUsers Examples: \\ - The user liz@example.com would be user-liz@example.com. \\ - The group example@googlegroups.com would be group-example@googlegroups.com. \\ - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
            },
            "object": {
              "type": "string",
              "description": "The name of the object, if applied to an object."
            },
            "entityId": {
              "type": "string",
              "description": "The ID for the entity, if any."
            },
            "selfLink": {
              "type": "string",
              "description": "The link to this access-control entry."
            },
            "generation": {
              "type": "string",
              "format": "int64",
              "description": "The content generation of the object, if applied to an object."
            },
            "projectTeam": {
              "type": "object",
              "properties": {
                "team": {
                  "type": "string",
                  "description": "The team."
                },
                "projectNumber": {
                  "type": "string",
                  "description": "The project number."
                }
              },
              "description": "The project team associated with the entity, if any."
            }
          },
          "description": "An access-control entry."
        }
      ]
  defaultObjectAccessControls.insert:
    description: |-
      Creates a new default object ACL entry on the specified bucket.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/defaultObjectAccessControls/insert
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ObjectAccessControl",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of the access-control entry."
            },
            "etag": {
              "type": "string",
              "description": "HTTP 1.1 Entity tag for the access-control entry."
            },
            "kind": {
              "type": "string",
              "default": "storage#objectAccessControl",
              "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl."
            },
            "role": {
              "type": "string",
              "annotations": {
                "required": [
                  "storage.defaultObjectAccessControls.insert",
                  "storage.objectAccessControls.insert"
                ]
              },
              "description": "The access permission for the entity."
            },
            "email": {
              "type": "string",
              "description": "The email address associated with the entity, if any."
            },
            "bucket": {
              "type": "string",
              "description": "The name of the bucket."
            },
            "domain": {
              "type": "string",
              "description": "The domain associated with the entity, if any."
            },
            "entity": {
              "type": "string",
              "annotations": {
                "required": [
                  "storage.defaultObjectAccessControls.insert",
                  "storage.objectAccessControls.insert"
                ]
              },
              "description": "The entity holding the permission, in one of the following forms: \\ - user-userId \\ - user-email \\ - group-groupId \\ - group-email \\ - domain-domain \\ - project-team-projectId \\ - allUsers \\ - allAuthenticatedUsers Examples: \\ - The user liz@example.com would be user-liz@example.com. \\ - The group example@googlegroups.com would be group-example@googlegroups.com. \\ - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
            },
            "object": {
              "type": "string",
              "description": "The name of the object, if applied to an object."
            },
            "entityId": {
              "type": "string",
              "description": "The ID for the entity, if any."
            },
            "selfLink": {
              "type": "string",
              "description": "The link to this access-control entry."
            },
            "generation": {
              "type": "string",
              "format": "int64",
              "description": "The content generation of the object, if applied to an object."
            },
            "projectTeam": {
              "type": "object",
              "properties": {
                "team": {
                  "type": "string",
                  "description": "The team."
                },
                "projectNumber": {
                  "type": "string",
                  "description": "The project number."
                }
              },
              "description": "The project team associated with the entity, if any."
            }
          },
          "description": "An access-control entry."
        }
      ]
  defaultObjectAccessControls.list:
    description: |-
      Retrieves default object ACL entries on the specified bucket.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/defaultObjectAccessControls/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ObjectAccessControls",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "storage#objectAccessControls",
              "description": "The kind of item this is. For lists of object access control entries, this is always storage#objectAccessControls."
            },
            "items": {
              "type": "array",
              "items": {
                "id": "ObjectAccessControl",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the access-control entry."
                  },
                  "etag": {
                    "type": "string",
                    "description": "HTTP 1.1 Entity tag for the access-control entry."
                  },
                  "kind": {
                    "type": "string",
                    "default": "storage#objectAccessControl",
                    "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl."
                  },
                  "role": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.defaultObjectAccessControls.insert",
                        "storage.objectAccessControls.insert"
                      ]
                    },
                    "description": "The access permission for the entity."
                  },
                  "email": {
                    "type": "string",
                    "description": "The email address associated with the entity, if any."
                  },
                  "bucket": {
                    "type": "string",
                    "description": "The name of the bucket."
                  },
                  "domain": {
                    "type": "string",
                    "description": "The domain associated with the entity, if any."
                  },
                  "entity": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.defaultObjectAccessControls.insert",
                        "storage.objectAccessControls.insert"
                      ]
                    },
                    "description": "The entity holding the permission, in one of the following forms: \\ - user-userId \\ - user-email \\ - group-groupId \\ - group-email \\ - domain-domain \\ - project-team-projectId \\ - allUsers \\ - allAuthenticatedUsers Examples: \\ - The user liz@example.com would be user-liz@example.com. \\ - The group example@googlegroups.com would be group-example@googlegroups.com. \\ - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                  },
                  "object": {
                    "type": "string",
                    "description": "The name of the object, if applied to an object."
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The ID for the entity, if any."
                  },
                  "selfLink": {
                    "type": "string",
                    "description": "The link to this access-control entry."
                  },
                  "generation": {
                    "type": "string",
                    "format": "int64",
                    "description": "The content generation of the object, if applied to an object."
                  },
                  "projectTeam": {
                    "type": "object",
                    "properties": {
                      "team": {
                        "type": "string",
                        "description": "The team."
                      },
                      "projectNumber": {
                        "type": "string",
                        "description": "The project number."
                      }
                    },
                    "description": "The project team associated with the entity, if any."
                  }
                },
                "description": "An access-control entry."
              },
              "description": "The list of items."
            }
          },
          "description": "An access-control list."
        }
      ]
  defaultObjectAccessControls.patch:
    description: |-
      Patches a default object ACL entry on the specified bucket.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/defaultObjectAccessControls/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ObjectAccessControl",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of the access-control entry."
            },
            "etag": {
              "type": "string",
              "description": "HTTP 1.1 Entity tag for the access-control entry."
            },
            "kind": {
              "type": "string",
              "default": "storage#objectAccessControl",
              "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl."
            },
            "role": {
              "type": "string",
              "annotations": {
                "required": [
                  "storage.defaultObjectAccessControls.insert",
                  "storage.objectAccessControls.insert"
                ]
              },
              "description": "The access permission for the entity."
            },
            "email": {
              "type": "string",
              "description": "The email address associated with the entity, if any."
            },
            "bucket": {
              "type": "string",
              "description": "The name of the bucket."
            },
            "domain": {
              "type": "string",
              "description": "The domain associated with the entity, if any."
            },
            "entity": {
              "type": "string",
              "annotations": {
                "required": [
                  "storage.defaultObjectAccessControls.insert",
                  "storage.objectAccessControls.insert"
                ]
              },
              "description": "The entity holding the permission, in one of the following forms: \\ - user-userId \\ - user-email \\ - group-groupId \\ - group-email \\ - domain-domain \\ - project-team-projectId \\ - allUsers \\ - allAuthenticatedUsers Examples: \\ - The user liz@example.com would be user-liz@example.com. \\ - The group example@googlegroups.com would be group-example@googlegroups.com. \\ - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
            },
            "object": {
              "type": "string",
              "description": "The name of the object, if applied to an object."
            },
            "entityId": {
              "type": "string",
              "description": "The ID for the entity, if any."
            },
            "selfLink": {
              "type": "string",
              "description": "The link to this access-control entry."
            },
            "generation": {
              "type": "string",
              "format": "int64",
              "description": "The content generation of the object, if applied to an object."
            },
            "projectTeam": {
              "type": "object",
              "properties": {
                "team": {
                  "type": "string",
                  "description": "The team."
                },
                "projectNumber": {
                  "type": "string",
                  "description": "The project number."
                }
              },
              "description": "The project team associated with the entity, if any."
            }
          },
          "description": "An access-control entry."
        }
      ]
  defaultObjectAccessControls.update:
    description: |-
      Updates a default object ACL entry on the specified bucket.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/defaultObjectAccessControls/update
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ObjectAccessControl",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of the access-control entry."
            },
            "etag": {
              "type": "string",
              "description": "HTTP 1.1 Entity tag for the access-control entry."
            },
            "kind": {
              "type": "string",
              "default": "storage#objectAccessControl",
              "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl."
            },
            "role": {
              "type": "string",
              "annotations": {
                "required": [
                  "storage.defaultObjectAccessControls.insert",
                  "storage.objectAccessControls.insert"
                ]
              },
              "description": "The access permission for the entity."
            },
            "email": {
              "type": "string",
              "description": "The email address associated with the entity, if any."
            },
            "bucket": {
              "type": "string",
              "description": "The name of the bucket."
            },
            "domain": {
              "type": "string",
              "description": "The domain associated with the entity, if any."
            },
            "entity": {
              "type": "string",
              "annotations": {
                "required": [
                  "storage.defaultObjectAccessControls.insert",
                  "storage.objectAccessControls.insert"
                ]
              },
              "description": "The entity holding the permission, in one of the following forms: \\ - user-userId \\ - user-email \\ - group-groupId \\ - group-email \\ - domain-domain \\ - project-team-projectId \\ - allUsers \\ - allAuthenticatedUsers Examples: \\ - The user liz@example.com would be user-liz@example.com. \\ - The group example@googlegroups.com would be group-example@googlegroups.com. \\ - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
            },
            "object": {
              "type": "string",
              "description": "The name of the object, if applied to an object."
            },
            "entityId": {
              "type": "string",
              "description": "The ID for the entity, if any."
            },
            "selfLink": {
              "type": "string",
              "description": "The link to this access-control entry."
            },
            "generation": {
              "type": "string",
              "format": "int64",
              "description": "The content generation of the object, if applied to an object."
            },
            "projectTeam": {
              "type": "object",
              "properties": {
                "team": {
                  "type": "string",
                  "description": "The team."
                },
                "projectNumber": {
                  "type": "string",
                  "description": "The project number."
                }
              },
              "description": "The project team associated with the entity, if any."
            }
          },
          "description": "An access-control entry."
        }
      ]
  notifications.delete:
    description: |-
      Permanently deletes a notification subscription.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/notifications/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  notifications.get:
    description: |-
      View a notification configuration.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/notifications/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Notification",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of the notification."
            },
            "etag": {
              "type": "string",
              "description": "HTTP 1.1 Entity tag for this subscription notification."
            },
            "kind": {
              "type": "string",
              "default": "storage#notification",
              "description": "The kind of item this is. For notifications, this is always storage#notification."
            },
            "topic": {
              "type": "string",
              "annotations": {
                "required": [
                  "storage.notifications.insert"
                ]
              },
              "description": "The Cloud PubSub topic to which this subscription publishes. Formatted as: '//pubsub.googleapis.com/projects/{project-identifier}/topics/{my-topic}'"
            },
            "selfLink": {
              "type": "string",
              "description": "The canonical URL of this notification."
            },
            "event_types": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "If present, only send notifications about listed event types. If empty, sent notifications for all event types."
            },
            "payload_format": {
              "type": "string",
              "default": "JSON_API_V1",
              "annotations": {
                "required": [
                  "storage.notifications.insert"
                ]
              },
              "description": "The desired content of the Payload."
            },
            "custom_attributes": {
              "type": "object",
              "description": "An optional list of additional attributes to attach to each Cloud PubSub message published for this notification subscription.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "object_name_prefix": {
              "type": "string",
              "description": "If present, only apply this notification configuration to object names that begin with this prefix."
            }
          },
          "description": "A subscription to receive Google PubSub notifications."
        }
      ]
  notifications.insert:
    description: |-
      Creates a notification subscription for a given bucket.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/notifications/insert
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Notification",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of the notification."
            },
            "etag": {
              "type": "string",
              "description": "HTTP 1.1 Entity tag for this subscription notification."
            },
            "kind": {
              "type": "string",
              "default": "storage#notification",
              "description": "The kind of item this is. For notifications, this is always storage#notification."
            },
            "topic": {
              "type": "string",
              "annotations": {
                "required": [
                  "storage.notifications.insert"
                ]
              },
              "description": "The Cloud PubSub topic to which this subscription publishes. Formatted as: '//pubsub.googleapis.com/projects/{project-identifier}/topics/{my-topic}'"
            },
            "selfLink": {
              "type": "string",
              "description": "The canonical URL of this notification."
            },
            "event_types": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "If present, only send notifications about listed event types. If empty, sent notifications for all event types."
            },
            "payload_format": {
              "type": "string",
              "default": "JSON_API_V1",
              "annotations": {
                "required": [
                  "storage.notifications.insert"
                ]
              },
              "description": "The desired content of the Payload."
            },
            "custom_attributes": {
              "type": "object",
              "description": "An optional list of additional attributes to attach to each Cloud PubSub message published for this notification subscription.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "object_name_prefix": {
              "type": "string",
              "description": "If present, only apply this notification configuration to object names that begin with this prefix."
            }
          },
          "description": "A subscription to receive Google PubSub notifications."
        }
      ]
  notifications.list:
    description: |-
      Retrieves a list of notification subscriptions for a given bucket.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/notifications/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Notifications",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "storage#notifications",
              "description": "The kind of item this is. For lists of notifications, this is always storage#notifications."
            },
            "items": {
              "type": "array",
              "items": {
                "id": "Notification",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the notification."
                  },
                  "etag": {
                    "type": "string",
                    "description": "HTTP 1.1 Entity tag for this subscription notification."
                  },
                  "kind": {
                    "type": "string",
                    "default": "storage#notification",
                    "description": "The kind of item this is. For notifications, this is always storage#notification."
                  },
                  "topic": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.notifications.insert"
                      ]
                    },
                    "description": "The Cloud PubSub topic to which this subscription publishes. Formatted as: '//pubsub.googleapis.com/projects/{project-identifier}/topics/{my-topic}'"
                  },
                  "selfLink": {
                    "type": "string",
                    "description": "The canonical URL of this notification."
                  },
                  "event_types": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "If present, only send notifications about listed event types. If empty, sent notifications for all event types."
                  },
                  "payload_format": {
                    "type": "string",
                    "default": "JSON_API_V1",
                    "annotations": {
                      "required": [
                        "storage.notifications.insert"
                      ]
                    },
                    "description": "The desired content of the Payload."
                  },
                  "custom_attributes": {
                    "type": "object",
                    "description": "An optional list of additional attributes to attach to each Cloud PubSub message published for this notification subscription.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "object_name_prefix": {
                    "type": "string",
                    "description": "If present, only apply this notification configuration to object names that begin with this prefix."
                  }
                },
                "description": "A subscription to receive Google PubSub notifications."
              },
              "description": "The list of items."
            }
          },
          "description": "A list of notification subscriptions."
        }
      ]
  objectAccessControls.delete:
    description: |-
      Permanently deletes the ACL entry for the specified entity on the specified object.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  objectAccessControls.get:
    description: |-
      Returns the ACL entry for the specified entity on the specified object.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ObjectAccessControl",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of the access-control entry."
            },
            "etag": {
              "type": "string",
              "description": "HTTP 1.1 Entity tag for the access-control entry."
            },
            "kind": {
              "type": "string",
              "default": "storage#objectAccessControl",
              "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl."
            },
            "role": {
              "type": "string",
              "annotations": {
                "required": [
                  "storage.defaultObjectAccessControls.insert",
                  "storage.objectAccessControls.insert"
                ]
              },
              "description": "The access permission for the entity."
            },
            "email": {
              "type": "string",
              "description": "The email address associated with the entity, if any."
            },
            "bucket": {
              "type": "string",
              "description": "The name of the bucket."
            },
            "domain": {
              "type": "string",
              "description": "The domain associated with the entity, if any."
            },
            "entity": {
              "type": "string",
              "annotations": {
                "required": [
                  "storage.defaultObjectAccessControls.insert",
                  "storage.objectAccessControls.insert"
                ]
              },
              "description": "The entity holding the permission, in one of the following forms: \\ - user-userId \\ - user-email \\ - group-groupId \\ - group-email \\ - domain-domain \\ - project-team-projectId \\ - allUsers \\ - allAuthenticatedUsers Examples: \\ - The user liz@example.com would be user-liz@example.com. \\ - The group example@googlegroups.com would be group-example@googlegroups.com. \\ - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
            },
            "object": {
              "type": "string",
              "description": "The name of the object, if applied to an object."
            },
            "entityId": {
              "type": "string",
              "description": "The ID for the entity, if any."
            },
            "selfLink": {
              "type": "string",
              "description": "The link to this access-control entry."
            },
            "generation": {
              "type": "string",
              "format": "int64",
              "description": "The content generation of the object, if applied to an object."
            },
            "projectTeam": {
              "type": "object",
              "properties": {
                "team": {
                  "type": "string",
                  "description": "The team."
                },
                "projectNumber": {
                  "type": "string",
                  "description": "The project number."
                }
              },
              "description": "The project team associated with the entity, if any."
            }
          },
          "description": "An access-control entry."
        }
      ]
  objectAccessControls.insert:
    description: |-
      Creates a new ACL entry on the specified object.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls/insert
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ObjectAccessControl",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of the access-control entry."
            },
            "etag": {
              "type": "string",
              "description": "HTTP 1.1 Entity tag for the access-control entry."
            },
            "kind": {
              "type": "string",
              "default": "storage#objectAccessControl",
              "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl."
            },
            "role": {
              "type": "string",
              "annotations": {
                "required": [
                  "storage.defaultObjectAccessControls.insert",
                  "storage.objectAccessControls.insert"
                ]
              },
              "description": "The access permission for the entity."
            },
            "email": {
              "type": "string",
              "description": "The email address associated with the entity, if any."
            },
            "bucket": {
              "type": "string",
              "description": "The name of the bucket."
            },
            "domain": {
              "type": "string",
              "description": "The domain associated with the entity, if any."
            },
            "entity": {
              "type": "string",
              "annotations": {
                "required": [
                  "storage.defaultObjectAccessControls.insert",
                  "storage.objectAccessControls.insert"
                ]
              },
              "description": "The entity holding the permission, in one of the following forms: \\ - user-userId \\ - user-email \\ - group-groupId \\ - group-email \\ - domain-domain \\ - project-team-projectId \\ - allUsers \\ - allAuthenticatedUsers Examples: \\ - The user liz@example.com would be user-liz@example.com. \\ - The group example@googlegroups.com would be group-example@googlegroups.com. \\ - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
            },
            "object": {
              "type": "string",
              "description": "The name of the object, if applied to an object."
            },
            "entityId": {
              "type": "string",
              "description": "The ID for the entity, if any."
            },
            "selfLink": {
              "type": "string",
              "description": "The link to this access-control entry."
            },
            "generation": {
              "type": "string",
              "format": "int64",
              "description": "The content generation of the object, if applied to an object."
            },
            "projectTeam": {
              "type": "object",
              "properties": {
                "team": {
                  "type": "string",
                  "description": "The team."
                },
                "projectNumber": {
                  "type": "string",
                  "description": "The project number."
                }
              },
              "description": "The project team associated with the entity, if any."
            }
          },
          "description": "An access-control entry."
        }
      ]
  objectAccessControls.list:
    description: |-
      Retrieves ACL entries on the specified object.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ObjectAccessControls",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "storage#objectAccessControls",
              "description": "The kind of item this is. For lists of object access control entries, this is always storage#objectAccessControls."
            },
            "items": {
              "type": "array",
              "items": {
                "id": "ObjectAccessControl",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the access-control entry."
                  },
                  "etag": {
                    "type": "string",
                    "description": "HTTP 1.1 Entity tag for the access-control entry."
                  },
                  "kind": {
                    "type": "string",
                    "default": "storage#objectAccessControl",
                    "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl."
                  },
                  "role": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.defaultObjectAccessControls.insert",
                        "storage.objectAccessControls.insert"
                      ]
                    },
                    "description": "The access permission for the entity."
                  },
                  "email": {
                    "type": "string",
                    "description": "The email address associated with the entity, if any."
                  },
                  "bucket": {
                    "type": "string",
                    "description": "The name of the bucket."
                  },
                  "domain": {
                    "type": "string",
                    "description": "The domain associated with the entity, if any."
                  },
                  "entity": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.defaultObjectAccessControls.insert",
                        "storage.objectAccessControls.insert"
                      ]
                    },
                    "description": "The entity holding the permission, in one of the following forms: \\ - user-userId \\ - user-email \\ - group-groupId \\ - group-email \\ - domain-domain \\ - project-team-projectId \\ - allUsers \\ - allAuthenticatedUsers Examples: \\ - The user liz@example.com would be user-liz@example.com. \\ - The group example@googlegroups.com would be group-example@googlegroups.com. \\ - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                  },
                  "object": {
                    "type": "string",
                    "description": "The name of the object, if applied to an object."
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The ID for the entity, if any."
                  },
                  "selfLink": {
                    "type": "string",
                    "description": "The link to this access-control entry."
                  },
                  "generation": {
                    "type": "string",
                    "format": "int64",
                    "description": "The content generation of the object, if applied to an object."
                  },
                  "projectTeam": {
                    "type": "object",
                    "properties": {
                      "team": {
                        "type": "string",
                        "description": "The team."
                      },
                      "projectNumber": {
                        "type": "string",
                        "description": "The project number."
                      }
                    },
                    "description": "The project team associated with the entity, if any."
                  }
                },
                "description": "An access-control entry."
              },
              "description": "The list of items."
            }
          },
          "description": "An access-control list."
        }
      ]
  objectAccessControls.patch:
    description: |-
      Patches an ACL entry on the specified object.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ObjectAccessControl",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of the access-control entry."
            },
            "etag": {
              "type": "string",
              "description": "HTTP 1.1 Entity tag for the access-control entry."
            },
            "kind": {
              "type": "string",
              "default": "storage#objectAccessControl",
              "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl."
            },
            "role": {
              "type": "string",
              "annotations": {
                "required": [
                  "storage.defaultObjectAccessControls.insert",
                  "storage.objectAccessControls.insert"
                ]
              },
              "description": "The access permission for the entity."
            },
            "email": {
              "type": "string",
              "description": "The email address associated with the entity, if any."
            },
            "bucket": {
              "type": "string",
              "description": "The name of the bucket."
            },
            "domain": {
              "type": "string",
              "description": "The domain associated with the entity, if any."
            },
            "entity": {
              "type": "string",
              "annotations": {
                "required": [
                  "storage.defaultObjectAccessControls.insert",
                  "storage.objectAccessControls.insert"
                ]
              },
              "description": "The entity holding the permission, in one of the following forms: \\ - user-userId \\ - user-email \\ - group-groupId \\ - group-email \\ - domain-domain \\ - project-team-projectId \\ - allUsers \\ - allAuthenticatedUsers Examples: \\ - The user liz@example.com would be user-liz@example.com. \\ - The group example@googlegroups.com would be group-example@googlegroups.com. \\ - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
            },
            "object": {
              "type": "string",
              "description": "The name of the object, if applied to an object."
            },
            "entityId": {
              "type": "string",
              "description": "The ID for the entity, if any."
            },
            "selfLink": {
              "type": "string",
              "description": "The link to this access-control entry."
            },
            "generation": {
              "type": "string",
              "format": "int64",
              "description": "The content generation of the object, if applied to an object."
            },
            "projectTeam": {
              "type": "object",
              "properties": {
                "team": {
                  "type": "string",
                  "description": "The team."
                },
                "projectNumber": {
                  "type": "string",
                  "description": "The project number."
                }
              },
              "description": "The project team associated with the entity, if any."
            }
          },
          "description": "An access-control entry."
        }
      ]
  objectAccessControls.update:
    description: |-
      Updates an ACL entry on the specified object.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls/update
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ObjectAccessControl",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of the access-control entry."
            },
            "etag": {
              "type": "string",
              "description": "HTTP 1.1 Entity tag for the access-control entry."
            },
            "kind": {
              "type": "string",
              "default": "storage#objectAccessControl",
              "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl."
            },
            "role": {
              "type": "string",
              "annotations": {
                "required": [
                  "storage.defaultObjectAccessControls.insert",
                  "storage.objectAccessControls.insert"
                ]
              },
              "description": "The access permission for the entity."
            },
            "email": {
              "type": "string",
              "description": "The email address associated with the entity, if any."
            },
            "bucket": {
              "type": "string",
              "description": "The name of the bucket."
            },
            "domain": {
              "type": "string",
              "description": "The domain associated with the entity, if any."
            },
            "entity": {
              "type": "string",
              "annotations": {
                "required": [
                  "storage.defaultObjectAccessControls.insert",
                  "storage.objectAccessControls.insert"
                ]
              },
              "description": "The entity holding the permission, in one of the following forms: \\ - user-userId \\ - user-email \\ - group-groupId \\ - group-email \\ - domain-domain \\ - project-team-projectId \\ - allUsers \\ - allAuthenticatedUsers Examples: \\ - The user liz@example.com would be user-liz@example.com. \\ - The group example@googlegroups.com would be group-example@googlegroups.com. \\ - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
            },
            "object": {
              "type": "string",
              "description": "The name of the object, if applied to an object."
            },
            "entityId": {
              "type": "string",
              "description": "The ID for the entity, if any."
            },
            "selfLink": {
              "type": "string",
              "description": "The link to this access-control entry."
            },
            "generation": {
              "type": "string",
              "format": "int64",
              "description": "The content generation of the object, if applied to an object."
            },
            "projectTeam": {
              "type": "object",
              "properties": {
                "team": {
                  "type": "string",
                  "description": "The team."
                },
                "projectNumber": {
                  "type": "string",
                  "description": "The project number."
                }
              },
              "description": "The project team associated with the entity, if any."
            }
          },
          "description": "An access-control entry."
        }
      ]
  objects.compose:
    description: |-
      Concatenates a list of existing objects into a new object in the same bucket.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/objects/compose
    example:
      inputs: [
        {
          "id": "ComposeRequest",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "storage#composeRequest",
              "description": "The kind of item this is."
            },
            "destination": {
              "id": "Object",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID of the object, including the bucket name, object name, and generation number."
                },
                "acl": {
                  "type": "array",
                  "items": {
                    "id": "ObjectAccessControl",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the access-control entry."
                      },
                      "etag": {
                        "type": "string",
                        "description": "HTTP 1.1 Entity tag for the access-control entry."
                      },
                      "kind": {
                        "type": "string",
                        "default": "storage#objectAccessControl",
                        "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl."
                      },
                      "role": {
                        "type": "string",
                        "annotations": {
                          "required": [
                            "storage.defaultObjectAccessControls.insert",
                            "storage.objectAccessControls.insert"
                          ]
                        },
                        "description": "The access permission for the entity."
                      },
                      "email": {
                        "type": "string",
                        "description": "The email address associated with the entity, if any."
                      },
                      "bucket": {
                        "type": "string",
                        "description": "The name of the bucket."
                      },
                      "domain": {
                        "type": "string",
                        "description": "The domain associated with the entity, if any."
                      },
                      "entity": {
                        "type": "string",
                        "annotations": {
                          "required": [
                            "storage.defaultObjectAccessControls.insert",
                            "storage.objectAccessControls.insert"
                          ]
                        },
                        "description": "The entity holding the permission, in one of the following forms: \\ - user-userId \\ - user-email \\ - group-groupId \\ - group-email \\ - domain-domain \\ - project-team-projectId \\ - allUsers \\ - allAuthenticatedUsers Examples: \\ - The user liz@example.com would be user-liz@example.com. \\ - The group example@googlegroups.com would be group-example@googlegroups.com. \\ - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                      },
                      "object": {
                        "type": "string",
                        "description": "The name of the object, if applied to an object."
                      },
                      "entityId": {
                        "type": "string",
                        "description": "The ID for the entity, if any."
                      },
                      "selfLink": {
                        "type": "string",
                        "description": "The link to this access-control entry."
                      },
                      "generation": {
                        "type": "string",
                        "format": "int64",
                        "description": "The content generation of the object, if applied to an object."
                      },
                      "projectTeam": {
                        "type": "object",
                        "properties": {
                          "team": {
                            "type": "string",
                            "description": "The team."
                          },
                          "projectNumber": {
                            "type": "string",
                            "description": "The project number."
                          }
                        },
                        "description": "The project team associated with the entity, if any."
                      }
                    },
                    "description": "An access-control entry."
                  },
                  "annotations": {
                    "required": [
                      "storage.objects.update"
                    ]
                  },
                  "description": "Access controls on the object."
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP 1.1 Entity tag for the object."
                },
                "kind": {
                  "type": "string",
                  "default": "storage#object",
                  "description": "The kind of item this is. For objects, this is always storage#object."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the object. Required if not specified by URL parameter."
                },
                "size": {
                  "type": "string",
                  "format": "uint64",
                  "description": "Content-Length of the data in bytes."
                },
                "owner": {
                  "type": "object",
                  "properties": {
                    "entity": {
                      "type": "string",
                      "description": "The entity, in the form user-userId."
                    },
                    "entityId": {
                      "type": "string",
                      "description": "The ID for the entity."
                    }
                  },
                  "description": "The owner of the object. This will always be the uploader of the object."
                },
                "bucket": {
                  "type": "string",
                  "description": "The name of the bucket containing this object."
                },
                "crc32c": {
                  "type": "string",
                  "description": "CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64 in big-endian byte order. For more information about using the CRC32c checksum, see Hashes and ETags: Best Practices."
                },
                "md5Hash": {
                  "type": "string",
                  "description": "MD5 hash of the data; encoded using base64. For more information about using the MD5 hash, see Hashes and ETags: Best Practices."
                },
                "updated": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The modification time of the object metadata in RFC 3339 format."
                },
                "metadata": {
                  "type": "object",
                  "description": "User-provided metadata, in key/value pairs.",
                  "additionalProperties": {
                    "type": "string",
                    "description": "An individual metadata entry."
                  }
                },
                "selfLink": {
                  "type": "string",
                  "description": "The link to this object."
                },
                "mediaLink": {
                  "type": "string",
                  "description": "Media download link."
                },
                "customTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "A timestamp in RFC 3339 format specified by the user for an object."
                },
                "generation": {
                  "type": "string",
                  "format": "int64",
                  "description": "The content generation of this object. Used for object versioning."
                },
                "kmsKeyName": {
                  "type": "string",
                  "description": "Not currently supported. Specifying the parameter causes the request to fail with status code 400 - Bad Request."
                },
                "contentType": {
                  "type": "string",
                  "description": "Content-Type of the object data. If an object is stored without a Content-Type, it is served as application/octet-stream."
                },
                "timeCreated": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The creation time of the object in RFC 3339 format."
                },
                "timeDeleted": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted."
                },
                "cacheControl": {
                  "type": "string",
                  "description": "Cache-Control directive for the object data. If omitted, and the object is accessible to all anonymous users, the default will be public, max-age=3600."
                },
                "storageClass": {
                  "type": "string",
                  "description": "Storage class of the object."
                },
                "temporaryHold": {
                  "type": "boolean",
                  "description": "Whether an object is under temporary hold. While this flag is set to true, the object is protected against deletion and overwrites. A common use case of this flag is regulatory investigations where objects need to be retained while the investigation is ongoing. Note that unlike event-based hold, temporary hold does not impact retention expiration time of an object."
                },
                "componentCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of underlying components that make up this object. Components are accumulated by compose operations."
                },
                "eventBasedHold": {
                  "type": "boolean",
                  "description": "Whether an object is under event-based hold. Event-based hold is a way to retain objects until an event occurs, which is signified by the hold's release (i.e. this value is set to false). After being released (set to false), such objects will be subject to bucket-level retention (if any). One sample use case of this flag is for banks to hold loan documents for at least 3 years after loan is paid in full. Here, bucket-level retention is 3 years and the event is the loan being paid in full. In this example, these objects will be held intact for any number of years until the event has occurred (event-based hold on the object is released) and then 3 more years after that. That means retention duration of the objects begins from the moment event-based hold transitioned from true to false."
                },
                "metageneration": {
                  "type": "string",
                  "format": "int64",
                  "description": "The version of the metadata for this object at this generation. Used for preconditions and for detecting changes in metadata. A metageneration number is only meaningful in the context of a particular generation of a particular object."
                },
                "contentEncoding": {
                  "type": "string",
                  "description": "Content-Encoding of the object data."
                },
                "contentLanguage": {
                  "type": "string",
                  "description": "Content-Language of the object data."
                },
                "contentDisposition": {
                  "type": "string",
                  "description": "Content-Disposition of the object data."
                },
                "customerEncryption": {
                  "type": "object",
                  "properties": {
                    "keySha256": {
                      "type": "string",
                      "description": "SHA256 hash value of the encryption key."
                    },
                    "encryptionAlgorithm": {
                      "type": "string",
                      "description": "The encryption algorithm."
                    }
                  },
                  "description": "Metadata of customer-supplied encryption key, if the object is encrypted by such a key."
                },
                "retentionExpirationTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "A server-determined value that specifies the earliest time that the object's retention period expires. This value is in RFC 3339 format. Note 1: This field is not provided for objects with an active event-based hold, since retention expiration is unknown until the hold is removed. Note 2: This value can be provided even when temporary hold is set (so that the user can reason about policy without having to first unset the temporary hold)."
                },
                "timeStorageClassUpdated": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The time at which the object's storage class was last changed. When the object is initially created, it will be set to timeCreated."
                }
              },
              "description": "Properties of the resulting object."
            },
            "sourceObjects": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.objects.compose"
                      ]
                    },
                    "description": "The source object's name. All source objects must reside in the same bucket."
                  },
                  "generation": {
                    "type": "string",
                    "format": "int64",
                    "description": "The generation of this object to use as the source."
                  },
                  "objectPreconditions": {
                    "type": "object",
                    "properties": {
                      "ifGenerationMatch": {
                        "type": "string",
                        "format": "int64",
                        "description": "Only perform the composition if the generation of the source object that would be used matches this value. If this value and a generation are both specified, they must be the same value or the call will fail."
                      }
                    },
                    "description": "Conditions that must be met for this operation to execute."
                  }
                }
              },
              "annotations": {
                "required": [
                  "storage.objects.compose"
                ]
              },
              "description": "The list of source objects that will be concatenated into a single object."
            }
          },
          "description": "A Compose request."
        }
      ]
      outputs: [
        {
          "id": "Object",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of the object, including the bucket name, object name, and generation number."
            },
            "acl": {
              "type": "array",
              "items": {
                "id": "ObjectAccessControl",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the access-control entry."
                  },
                  "etag": {
                    "type": "string",
                    "description": "HTTP 1.1 Entity tag for the access-control entry."
                  },
                  "kind": {
                    "type": "string",
                    "default": "storage#objectAccessControl",
                    "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl."
                  },
                  "role": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.defaultObjectAccessControls.insert",
                        "storage.objectAccessControls.insert"
                      ]
                    },
                    "description": "The access permission for the entity."
                  },
                  "email": {
                    "type": "string",
                    "description": "The email address associated with the entity, if any."
                  },
                  "bucket": {
                    "type": "string",
                    "description": "The name of the bucket."
                  },
                  "domain": {
                    "type": "string",
                    "description": "The domain associated with the entity, if any."
                  },
                  "entity": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.defaultObjectAccessControls.insert",
                        "storage.objectAccessControls.insert"
                      ]
                    },
                    "description": "The entity holding the permission, in one of the following forms: \\ - user-userId \\ - user-email \\ - group-groupId \\ - group-email \\ - domain-domain \\ - project-team-projectId \\ - allUsers \\ - allAuthenticatedUsers Examples: \\ - The user liz@example.com would be user-liz@example.com. \\ - The group example@googlegroups.com would be group-example@googlegroups.com. \\ - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                  },
                  "object": {
                    "type": "string",
                    "description": "The name of the object, if applied to an object."
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The ID for the entity, if any."
                  },
                  "selfLink": {
                    "type": "string",
                    "description": "The link to this access-control entry."
                  },
                  "generation": {
                    "type": "string",
                    "format": "int64",
                    "description": "The content generation of the object, if applied to an object."
                  },
                  "projectTeam": {
                    "type": "object",
                    "properties": {
                      "team": {
                        "type": "string",
                        "description": "The team."
                      },
                      "projectNumber": {
                        "type": "string",
                        "description": "The project number."
                      }
                    },
                    "description": "The project team associated with the entity, if any."
                  }
                },
                "description": "An access-control entry."
              },
              "annotations": {
                "required": [
                  "storage.objects.update"
                ]
              },
              "description": "Access controls on the object."
            },
            "etag": {
              "type": "string",
              "description": "HTTP 1.1 Entity tag for the object."
            },
            "kind": {
              "type": "string",
              "default": "storage#object",
              "description": "The kind of item this is. For objects, this is always storage#object."
            },
            "name": {
              "type": "string",
              "description": "The name of the object. Required if not specified by URL parameter."
            },
            "size": {
              "type": "string",
              "format": "uint64",
              "description": "Content-Length of the data in bytes."
            },
            "owner": {
              "type": "object",
              "properties": {
                "entity": {
                  "type": "string",
                  "description": "The entity, in the form user-userId."
                },
                "entityId": {
                  "type": "string",
                  "description": "The ID for the entity."
                }
              },
              "description": "The owner of the object. This will always be the uploader of the object."
            },
            "bucket": {
              "type": "string",
              "description": "The name of the bucket containing this object."
            },
            "crc32c": {
              "type": "string",
              "description": "CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64 in big-endian byte order. For more information about using the CRC32c checksum, see Hashes and ETags: Best Practices."
            },
            "md5Hash": {
              "type": "string",
              "description": "MD5 hash of the data; encoded using base64. For more information about using the MD5 hash, see Hashes and ETags: Best Practices."
            },
            "updated": {
              "type": "string",
              "format": "date-time",
              "description": "The modification time of the object metadata in RFC 3339 format."
            },
            "metadata": {
              "type": "object",
              "description": "User-provided metadata, in key/value pairs.",
              "additionalProperties": {
                "type": "string",
                "description": "An individual metadata entry."
              }
            },
            "selfLink": {
              "type": "string",
              "description": "The link to this object."
            },
            "mediaLink": {
              "type": "string",
              "description": "Media download link."
            },
            "customTime": {
              "type": "string",
              "format": "date-time",
              "description": "A timestamp in RFC 3339 format specified by the user for an object."
            },
            "generation": {
              "type": "string",
              "format": "int64",
              "description": "The content generation of this object. Used for object versioning."
            },
            "kmsKeyName": {
              "type": "string",
              "description": "Not currently supported. Specifying the parameter causes the request to fail with status code 400 - Bad Request."
            },
            "contentType": {
              "type": "string",
              "description": "Content-Type of the object data. If an object is stored without a Content-Type, it is served as application/octet-stream."
            },
            "timeCreated": {
              "type": "string",
              "format": "date-time",
              "description": "The creation time of the object in RFC 3339 format."
            },
            "timeDeleted": {
              "type": "string",
              "format": "date-time",
              "description": "The deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted."
            },
            "cacheControl": {
              "type": "string",
              "description": "Cache-Control directive for the object data. If omitted, and the object is accessible to all anonymous users, the default will be public, max-age=3600."
            },
            "storageClass": {
              "type": "string",
              "description": "Storage class of the object."
            },
            "temporaryHold": {
              "type": "boolean",
              "description": "Whether an object is under temporary hold. While this flag is set to true, the object is protected against deletion and overwrites. A common use case of this flag is regulatory investigations where objects need to be retained while the investigation is ongoing. Note that unlike event-based hold, temporary hold does not impact retention expiration time of an object."
            },
            "componentCount": {
              "type": "integer",
              "format": "int32",
              "description": "Number of underlying components that make up this object. Components are accumulated by compose operations."
            },
            "eventBasedHold": {
              "type": "boolean",
              "description": "Whether an object is under event-based hold. Event-based hold is a way to retain objects until an event occurs, which is signified by the hold's release (i.e. this value is set to false). After being released (set to false), such objects will be subject to bucket-level retention (if any). One sample use case of this flag is for banks to hold loan documents for at least 3 years after loan is paid in full. Here, bucket-level retention is 3 years and the event is the loan being paid in full. In this example, these objects will be held intact for any number of years until the event has occurred (event-based hold on the object is released) and then 3 more years after that. That means retention duration of the objects begins from the moment event-based hold transitioned from true to false."
            },
            "metageneration": {
              "type": "string",
              "format": "int64",
              "description": "The version of the metadata for this object at this generation. Used for preconditions and for detecting changes in metadata. A metageneration number is only meaningful in the context of a particular generation of a particular object."
            },
            "contentEncoding": {
              "type": "string",
              "description": "Content-Encoding of the object data."
            },
            "contentLanguage": {
              "type": "string",
              "description": "Content-Language of the object data."
            },
            "contentDisposition": {
              "type": "string",
              "description": "Content-Disposition of the object data."
            },
            "customerEncryption": {
              "type": "object",
              "properties": {
                "keySha256": {
                  "type": "string",
                  "description": "SHA256 hash value of the encryption key."
                },
                "encryptionAlgorithm": {
                  "type": "string",
                  "description": "The encryption algorithm."
                }
              },
              "description": "Metadata of customer-supplied encryption key, if the object is encrypted by such a key."
            },
            "retentionExpirationTime": {
              "type": "string",
              "format": "date-time",
              "description": "A server-determined value that specifies the earliest time that the object's retention period expires. This value is in RFC 3339 format. Note 1: This field is not provided for objects with an active event-based hold, since retention expiration is unknown until the hold is removed. Note 2: This value can be provided even when temporary hold is set (so that the user can reason about policy without having to first unset the temporary hold)."
            },
            "timeStorageClassUpdated": {
              "type": "string",
              "format": "date-time",
              "description": "The time at which the object's storage class was last changed. When the object is initially created, it will be set to timeCreated."
            }
          },
          "description": "An object."
        }
      ]
  objects.copy:
    description: |-
      Copies a source object to a destination object. Optionally overrides metadata.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/objects/copy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Object",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of the object, including the bucket name, object name, and generation number."
            },
            "acl": {
              "type": "array",
              "items": {
                "id": "ObjectAccessControl",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the access-control entry."
                  },
                  "etag": {
                    "type": "string",
                    "description": "HTTP 1.1 Entity tag for the access-control entry."
                  },
                  "kind": {
                    "type": "string",
                    "default": "storage#objectAccessControl",
                    "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl."
                  },
                  "role": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.defaultObjectAccessControls.insert",
                        "storage.objectAccessControls.insert"
                      ]
                    },
                    "description": "The access permission for the entity."
                  },
                  "email": {
                    "type": "string",
                    "description": "The email address associated with the entity, if any."
                  },
                  "bucket": {
                    "type": "string",
                    "description": "The name of the bucket."
                  },
                  "domain": {
                    "type": "string",
                    "description": "The domain associated with the entity, if any."
                  },
                  "entity": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.defaultObjectAccessControls.insert",
                        "storage.objectAccessControls.insert"
                      ]
                    },
                    "description": "The entity holding the permission, in one of the following forms: \\ - user-userId \\ - user-email \\ - group-groupId \\ - group-email \\ - domain-domain \\ - project-team-projectId \\ - allUsers \\ - allAuthenticatedUsers Examples: \\ - The user liz@example.com would be user-liz@example.com. \\ - The group example@googlegroups.com would be group-example@googlegroups.com. \\ - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                  },
                  "object": {
                    "type": "string",
                    "description": "The name of the object, if applied to an object."
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The ID for the entity, if any."
                  },
                  "selfLink": {
                    "type": "string",
                    "description": "The link to this access-control entry."
                  },
                  "generation": {
                    "type": "string",
                    "format": "int64",
                    "description": "The content generation of the object, if applied to an object."
                  },
                  "projectTeam": {
                    "type": "object",
                    "properties": {
                      "team": {
                        "type": "string",
                        "description": "The team."
                      },
                      "projectNumber": {
                        "type": "string",
                        "description": "The project number."
                      }
                    },
                    "description": "The project team associated with the entity, if any."
                  }
                },
                "description": "An access-control entry."
              },
              "annotations": {
                "required": [
                  "storage.objects.update"
                ]
              },
              "description": "Access controls on the object."
            },
            "etag": {
              "type": "string",
              "description": "HTTP 1.1 Entity tag for the object."
            },
            "kind": {
              "type": "string",
              "default": "storage#object",
              "description": "The kind of item this is. For objects, this is always storage#object."
            },
            "name": {
              "type": "string",
              "description": "The name of the object. Required if not specified by URL parameter."
            },
            "size": {
              "type": "string",
              "format": "uint64",
              "description": "Content-Length of the data in bytes."
            },
            "owner": {
              "type": "object",
              "properties": {
                "entity": {
                  "type": "string",
                  "description": "The entity, in the form user-userId."
                },
                "entityId": {
                  "type": "string",
                  "description": "The ID for the entity."
                }
              },
              "description": "The owner of the object. This will always be the uploader of the object."
            },
            "bucket": {
              "type": "string",
              "description": "The name of the bucket containing this object."
            },
            "crc32c": {
              "type": "string",
              "description": "CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64 in big-endian byte order. For more information about using the CRC32c checksum, see Hashes and ETags: Best Practices."
            },
            "md5Hash": {
              "type": "string",
              "description": "MD5 hash of the data; encoded using base64. For more information about using the MD5 hash, see Hashes and ETags: Best Practices."
            },
            "updated": {
              "type": "string",
              "format": "date-time",
              "description": "The modification time of the object metadata in RFC 3339 format."
            },
            "metadata": {
              "type": "object",
              "description": "User-provided metadata, in key/value pairs.",
              "additionalProperties": {
                "type": "string",
                "description": "An individual metadata entry."
              }
            },
            "selfLink": {
              "type": "string",
              "description": "The link to this object."
            },
            "mediaLink": {
              "type": "string",
              "description": "Media download link."
            },
            "customTime": {
              "type": "string",
              "format": "date-time",
              "description": "A timestamp in RFC 3339 format specified by the user for an object."
            },
            "generation": {
              "type": "string",
              "format": "int64",
              "description": "The content generation of this object. Used for object versioning."
            },
            "kmsKeyName": {
              "type": "string",
              "description": "Not currently supported. Specifying the parameter causes the request to fail with status code 400 - Bad Request."
            },
            "contentType": {
              "type": "string",
              "description": "Content-Type of the object data. If an object is stored without a Content-Type, it is served as application/octet-stream."
            },
            "timeCreated": {
              "type": "string",
              "format": "date-time",
              "description": "The creation time of the object in RFC 3339 format."
            },
            "timeDeleted": {
              "type": "string",
              "format": "date-time",
              "description": "The deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted."
            },
            "cacheControl": {
              "type": "string",
              "description": "Cache-Control directive for the object data. If omitted, and the object is accessible to all anonymous users, the default will be public, max-age=3600."
            },
            "storageClass": {
              "type": "string",
              "description": "Storage class of the object."
            },
            "temporaryHold": {
              "type": "boolean",
              "description": "Whether an object is under temporary hold. While this flag is set to true, the object is protected against deletion and overwrites. A common use case of this flag is regulatory investigations where objects need to be retained while the investigation is ongoing. Note that unlike event-based hold, temporary hold does not impact retention expiration time of an object."
            },
            "componentCount": {
              "type": "integer",
              "format": "int32",
              "description": "Number of underlying components that make up this object. Components are accumulated by compose operations."
            },
            "eventBasedHold": {
              "type": "boolean",
              "description": "Whether an object is under event-based hold. Event-based hold is a way to retain objects until an event occurs, which is signified by the hold's release (i.e. this value is set to false). After being released (set to false), such objects will be subject to bucket-level retention (if any). One sample use case of this flag is for banks to hold loan documents for at least 3 years after loan is paid in full. Here, bucket-level retention is 3 years and the event is the loan being paid in full. In this example, these objects will be held intact for any number of years until the event has occurred (event-based hold on the object is released) and then 3 more years after that. That means retention duration of the objects begins from the moment event-based hold transitioned from true to false."
            },
            "metageneration": {
              "type": "string",
              "format": "int64",
              "description": "The version of the metadata for this object at this generation. Used for preconditions and for detecting changes in metadata. A metageneration number is only meaningful in the context of a particular generation of a particular object."
            },
            "contentEncoding": {
              "type": "string",
              "description": "Content-Encoding of the object data."
            },
            "contentLanguage": {
              "type": "string",
              "description": "Content-Language of the object data."
            },
            "contentDisposition": {
              "type": "string",
              "description": "Content-Disposition of the object data."
            },
            "customerEncryption": {
              "type": "object",
              "properties": {
                "keySha256": {
                  "type": "string",
                  "description": "SHA256 hash value of the encryption key."
                },
                "encryptionAlgorithm": {
                  "type": "string",
                  "description": "The encryption algorithm."
                }
              },
              "description": "Metadata of customer-supplied encryption key, if the object is encrypted by such a key."
            },
            "retentionExpirationTime": {
              "type": "string",
              "format": "date-time",
              "description": "A server-determined value that specifies the earliest time that the object's retention period expires. This value is in RFC 3339 format. Note 1: This field is not provided for objects with an active event-based hold, since retention expiration is unknown until the hold is removed. Note 2: This value can be provided even when temporary hold is set (so that the user can reason about policy without having to first unset the temporary hold)."
            },
            "timeStorageClassUpdated": {
              "type": "string",
              "format": "date-time",
              "description": "The time at which the object's storage class was last changed. When the object is initially created, it will be set to timeCreated."
            }
          },
          "description": "An object."
        }
      ]
  objects.delete:
    description: |-
      Deletes an object and its metadata. Deletions are permanent if versioning is not enabled for the bucket, or if the generation parameter is used.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/objects/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  objects.get:
    description: |-
      Retrieves an object or its metadata.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/objects/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Object",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of the object, including the bucket name, object name, and generation number."
            },
            "acl": {
              "type": "array",
              "items": {
                "id": "ObjectAccessControl",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the access-control entry."
                  },
                  "etag": {
                    "type": "string",
                    "description": "HTTP 1.1 Entity tag for the access-control entry."
                  },
                  "kind": {
                    "type": "string",
                    "default": "storage#objectAccessControl",
                    "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl."
                  },
                  "role": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.defaultObjectAccessControls.insert",
                        "storage.objectAccessControls.insert"
                      ]
                    },
                    "description": "The access permission for the entity."
                  },
                  "email": {
                    "type": "string",
                    "description": "The email address associated with the entity, if any."
                  },
                  "bucket": {
                    "type": "string",
                    "description": "The name of the bucket."
                  },
                  "domain": {
                    "type": "string",
                    "description": "The domain associated with the entity, if any."
                  },
                  "entity": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.defaultObjectAccessControls.insert",
                        "storage.objectAccessControls.insert"
                      ]
                    },
                    "description": "The entity holding the permission, in one of the following forms: \\ - user-userId \\ - user-email \\ - group-groupId \\ - group-email \\ - domain-domain \\ - project-team-projectId \\ - allUsers \\ - allAuthenticatedUsers Examples: \\ - The user liz@example.com would be user-liz@example.com. \\ - The group example@googlegroups.com would be group-example@googlegroups.com. \\ - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                  },
                  "object": {
                    "type": "string",
                    "description": "The name of the object, if applied to an object."
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The ID for the entity, if any."
                  },
                  "selfLink": {
                    "type": "string",
                    "description": "The link to this access-control entry."
                  },
                  "generation": {
                    "type": "string",
                    "format": "int64",
                    "description": "The content generation of the object, if applied to an object."
                  },
                  "projectTeam": {
                    "type": "object",
                    "properties": {
                      "team": {
                        "type": "string",
                        "description": "The team."
                      },
                      "projectNumber": {
                        "type": "string",
                        "description": "The project number."
                      }
                    },
                    "description": "The project team associated with the entity, if any."
                  }
                },
                "description": "An access-control entry."
              },
              "annotations": {
                "required": [
                  "storage.objects.update"
                ]
              },
              "description": "Access controls on the object."
            },
            "etag": {
              "type": "string",
              "description": "HTTP 1.1 Entity tag for the object."
            },
            "kind": {
              "type": "string",
              "default": "storage#object",
              "description": "The kind of item this is. For objects, this is always storage#object."
            },
            "name": {
              "type": "string",
              "description": "The name of the object. Required if not specified by URL parameter."
            },
            "size": {
              "type": "string",
              "format": "uint64",
              "description": "Content-Length of the data in bytes."
            },
            "owner": {
              "type": "object",
              "properties": {
                "entity": {
                  "type": "string",
                  "description": "The entity, in the form user-userId."
                },
                "entityId": {
                  "type": "string",
                  "description": "The ID for the entity."
                }
              },
              "description": "The owner of the object. This will always be the uploader of the object."
            },
            "bucket": {
              "type": "string",
              "description": "The name of the bucket containing this object."
            },
            "crc32c": {
              "type": "string",
              "description": "CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64 in big-endian byte order. For more information about using the CRC32c checksum, see Hashes and ETags: Best Practices."
            },
            "md5Hash": {
              "type": "string",
              "description": "MD5 hash of the data; encoded using base64. For more information about using the MD5 hash, see Hashes and ETags: Best Practices."
            },
            "updated": {
              "type": "string",
              "format": "date-time",
              "description": "The modification time of the object metadata in RFC 3339 format."
            },
            "metadata": {
              "type": "object",
              "description": "User-provided metadata, in key/value pairs.",
              "additionalProperties": {
                "type": "string",
                "description": "An individual metadata entry."
              }
            },
            "selfLink": {
              "type": "string",
              "description": "The link to this object."
            },
            "mediaLink": {
              "type": "string",
              "description": "Media download link."
            },
            "customTime": {
              "type": "string",
              "format": "date-time",
              "description": "A timestamp in RFC 3339 format specified by the user for an object."
            },
            "generation": {
              "type": "string",
              "format": "int64",
              "description": "The content generation of this object. Used for object versioning."
            },
            "kmsKeyName": {
              "type": "string",
              "description": "Not currently supported. Specifying the parameter causes the request to fail with status code 400 - Bad Request."
            },
            "contentType": {
              "type": "string",
              "description": "Content-Type of the object data. If an object is stored without a Content-Type, it is served as application/octet-stream."
            },
            "timeCreated": {
              "type": "string",
              "format": "date-time",
              "description": "The creation time of the object in RFC 3339 format."
            },
            "timeDeleted": {
              "type": "string",
              "format": "date-time",
              "description": "The deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted."
            },
            "cacheControl": {
              "type": "string",
              "description": "Cache-Control directive for the object data. If omitted, and the object is accessible to all anonymous users, the default will be public, max-age=3600."
            },
            "storageClass": {
              "type": "string",
              "description": "Storage class of the object."
            },
            "temporaryHold": {
              "type": "boolean",
              "description": "Whether an object is under temporary hold. While this flag is set to true, the object is protected against deletion and overwrites. A common use case of this flag is regulatory investigations where objects need to be retained while the investigation is ongoing. Note that unlike event-based hold, temporary hold does not impact retention expiration time of an object."
            },
            "componentCount": {
              "type": "integer",
              "format": "int32",
              "description": "Number of underlying components that make up this object. Components are accumulated by compose operations."
            },
            "eventBasedHold": {
              "type": "boolean",
              "description": "Whether an object is under event-based hold. Event-based hold is a way to retain objects until an event occurs, which is signified by the hold's release (i.e. this value is set to false). After being released (set to false), such objects will be subject to bucket-level retention (if any). One sample use case of this flag is for banks to hold loan documents for at least 3 years after loan is paid in full. Here, bucket-level retention is 3 years and the event is the loan being paid in full. In this example, these objects will be held intact for any number of years until the event has occurred (event-based hold on the object is released) and then 3 more years after that. That means retention duration of the objects begins from the moment event-based hold transitioned from true to false."
            },
            "metageneration": {
              "type": "string",
              "format": "int64",
              "description": "The version of the metadata for this object at this generation. Used for preconditions and for detecting changes in metadata. A metageneration number is only meaningful in the context of a particular generation of a particular object."
            },
            "contentEncoding": {
              "type": "string",
              "description": "Content-Encoding of the object data."
            },
            "contentLanguage": {
              "type": "string",
              "description": "Content-Language of the object data."
            },
            "contentDisposition": {
              "type": "string",
              "description": "Content-Disposition of the object data."
            },
            "customerEncryption": {
              "type": "object",
              "properties": {
                "keySha256": {
                  "type": "string",
                  "description": "SHA256 hash value of the encryption key."
                },
                "encryptionAlgorithm": {
                  "type": "string",
                  "description": "The encryption algorithm."
                }
              },
              "description": "Metadata of customer-supplied encryption key, if the object is encrypted by such a key."
            },
            "retentionExpirationTime": {
              "type": "string",
              "format": "date-time",
              "description": "A server-determined value that specifies the earliest time that the object's retention period expires. This value is in RFC 3339 format. Note 1: This field is not provided for objects with an active event-based hold, since retention expiration is unknown until the hold is removed. Note 2: This value can be provided even when temporary hold is set (so that the user can reason about policy without having to first unset the temporary hold)."
            },
            "timeStorageClassUpdated": {
              "type": "string",
              "format": "date-time",
              "description": "The time at which the object's storage class was last changed. When the object is initially created, it will be set to timeCreated."
            }
          },
          "description": "An object."
        }
      ]
  objects.getIamPolicy:
    description: |-
      Returns an IAM policy for the specified object.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/objects/getIamPolicy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "HTTP 1.1  Entity tag for the policy."
            },
            "kind": {
              "type": "string",
              "default": "storage#policy",
              "description": "The kind of item this is. For policies, this is always storage#policy. This field is ignored on input."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "The IAM policy format version."
            },
            "bindings": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.buckets.setIamPolicy",
                        "storage.objects.setIamPolicy"
                      ]
                    },
                    "description": "The role to which members belong. Two types of roles are supported: new IAM roles, which grant permissions that do not map directly to those provided by ACLs, and legacy IAM roles, which do map directly to ACL permissions. All roles are of the format roles/storage.specificRole.\\ The new IAM roles are:  \\ - roles/storage.admin — Full control of Google Cloud Storage resources.  \\ - roles/storage.objectViewer — Read-Only access to Google Cloud Storage objects.  \\ - roles/storage.objectCreator — Access to create objects in Google Cloud Storage.  \\ - roles/storage.objectAdmin — Full control of Google Cloud Storage objects.   The legacy IAM roles are:  \\ - roles/storage.legacyObjectReader — Read-only access to objects without listing. Equivalent to an ACL entry on an object with the READER role.  \\ - roles/storage.legacyObjectOwner — Read/write access to existing objects without listing. Equivalent to an ACL entry on an object with the OWNER role.  \\ - roles/storage.legacyBucketReader — Read access to buckets with object listing. Equivalent to an ACL entry on a bucket with the READER role.  \\ - roles/storage.legacyBucketWriter — Read access to buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the WRITER role.  \\ - roles/storage.legacyBucketOwner — Read and write access to existing buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the OWNER role."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "annotations": {
                      "required": [
                        "storage.buckets.setIamPolicy",
                        "storage.objects.setIamPolicy"
                      ]
                    },
                    "description": "A collection of identifiers for members who may assume the provided role. Recognized identifiers are as follows:  \\ - allUsers — A special identifier that represents anyone on the internet; with or without a Google account.  \\ - allAuthenticatedUsers — A special identifier that represents anyone who is authenticated with a Google account or a service account.  \\ - user:emailid — An email address that represents a specific account. For example, user:alice@gmail.com or user:joe@example.com.  \\ - serviceAccount:emailid — An email address that represents a service account. For example,  serviceAccount:my-other-app@appspot.gserviceaccount.com .  \\ - group:emailid — An email address that represents a Google group. For example, group:admins@example.com.  \\ - domain:domain — A Google Apps domain name that represents all the users of that domain. For example, domain:google.com or domain:example.com.  \\ - projectOwner:projectid — Owners of the given project. For example, projectOwner:my-example-project  \\ - projectEditor:projectid — Editors of the given project. For example, projectEditor:my-example-project  \\ - projectViewer:projectid — Viewers of the given project. For example, projectViewer:my-example-project"
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "An optional title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "An optional string indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax. The application context of the containing message determines which well-known feature set of CEL is supported."
                      },
                      "description": {
                        "type": "string",
                        "description": "An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. NOTE: an unsatisfied condition will not allow user access via current binding. Different bindings, including their conditions, are examined independently."
                  }
                }
              },
              "annotations": {
                "required": [
                  "storage.buckets.setIamPolicy",
                  "storage.objects.setIamPolicy"
                ]
              },
              "description": "An association between a role, which comes with a set of permissions, and members who may assume that role."
            },
            "resourceId": {
              "type": "string",
              "description": "The ID of the resource to which this policy belongs. Will be of the form projects/_/buckets/bucket for buckets, and projects/_/buckets/bucket/objects/object for objects. A specific generation may be specified by appending #generationNumber to the end of the object name, e.g. projects/_/buckets/my-bucket/objects/data.txt#17. The current generation can be denoted with #0. This field is ignored on input."
            }
          },
          "description": "A bucket/object IAM policy."
        }
      ]
  objects.insert:
    description: |-
      Stores a new object and metadata.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/objects/insert
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Object",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of the object, including the bucket name, object name, and generation number."
            },
            "acl": {
              "type": "array",
              "items": {
                "id": "ObjectAccessControl",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the access-control entry."
                  },
                  "etag": {
                    "type": "string",
                    "description": "HTTP 1.1 Entity tag for the access-control entry."
                  },
                  "kind": {
                    "type": "string",
                    "default": "storage#objectAccessControl",
                    "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl."
                  },
                  "role": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.defaultObjectAccessControls.insert",
                        "storage.objectAccessControls.insert"
                      ]
                    },
                    "description": "The access permission for the entity."
                  },
                  "email": {
                    "type": "string",
                    "description": "The email address associated with the entity, if any."
                  },
                  "bucket": {
                    "type": "string",
                    "description": "The name of the bucket."
                  },
                  "domain": {
                    "type": "string",
                    "description": "The domain associated with the entity, if any."
                  },
                  "entity": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.defaultObjectAccessControls.insert",
                        "storage.objectAccessControls.insert"
                      ]
                    },
                    "description": "The entity holding the permission, in one of the following forms: \\ - user-userId \\ - user-email \\ - group-groupId \\ - group-email \\ - domain-domain \\ - project-team-projectId \\ - allUsers \\ - allAuthenticatedUsers Examples: \\ - The user liz@example.com would be user-liz@example.com. \\ - The group example@googlegroups.com would be group-example@googlegroups.com. \\ - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                  },
                  "object": {
                    "type": "string",
                    "description": "The name of the object, if applied to an object."
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The ID for the entity, if any."
                  },
                  "selfLink": {
                    "type": "string",
                    "description": "The link to this access-control entry."
                  },
                  "generation": {
                    "type": "string",
                    "format": "int64",
                    "description": "The content generation of the object, if applied to an object."
                  },
                  "projectTeam": {
                    "type": "object",
                    "properties": {
                      "team": {
                        "type": "string",
                        "description": "The team."
                      },
                      "projectNumber": {
                        "type": "string",
                        "description": "The project number."
                      }
                    },
                    "description": "The project team associated with the entity, if any."
                  }
                },
                "description": "An access-control entry."
              },
              "annotations": {
                "required": [
                  "storage.objects.update"
                ]
              },
              "description": "Access controls on the object."
            },
            "etag": {
              "type": "string",
              "description": "HTTP 1.1 Entity tag for the object."
            },
            "kind": {
              "type": "string",
              "default": "storage#object",
              "description": "The kind of item this is. For objects, this is always storage#object."
            },
            "name": {
              "type": "string",
              "description": "The name of the object. Required if not specified by URL parameter."
            },
            "size": {
              "type": "string",
              "format": "uint64",
              "description": "Content-Length of the data in bytes."
            },
            "owner": {
              "type": "object",
              "properties": {
                "entity": {
                  "type": "string",
                  "description": "The entity, in the form user-userId."
                },
                "entityId": {
                  "type": "string",
                  "description": "The ID for the entity."
                }
              },
              "description": "The owner of the object. This will always be the uploader of the object."
            },
            "bucket": {
              "type": "string",
              "description": "The name of the bucket containing this object."
            },
            "crc32c": {
              "type": "string",
              "description": "CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64 in big-endian byte order. For more information about using the CRC32c checksum, see Hashes and ETags: Best Practices."
            },
            "md5Hash": {
              "type": "string",
              "description": "MD5 hash of the data; encoded using base64. For more information about using the MD5 hash, see Hashes and ETags: Best Practices."
            },
            "updated": {
              "type": "string",
              "format": "date-time",
              "description": "The modification time of the object metadata in RFC 3339 format."
            },
            "metadata": {
              "type": "object",
              "description": "User-provided metadata, in key/value pairs.",
              "additionalProperties": {
                "type": "string",
                "description": "An individual metadata entry."
              }
            },
            "selfLink": {
              "type": "string",
              "description": "The link to this object."
            },
            "mediaLink": {
              "type": "string",
              "description": "Media download link."
            },
            "customTime": {
              "type": "string",
              "format": "date-time",
              "description": "A timestamp in RFC 3339 format specified by the user for an object."
            },
            "generation": {
              "type": "string",
              "format": "int64",
              "description": "The content generation of this object. Used for object versioning."
            },
            "kmsKeyName": {
              "type": "string",
              "description": "Not currently supported. Specifying the parameter causes the request to fail with status code 400 - Bad Request."
            },
            "contentType": {
              "type": "string",
              "description": "Content-Type of the object data. If an object is stored without a Content-Type, it is served as application/octet-stream."
            },
            "timeCreated": {
              "type": "string",
              "format": "date-time",
              "description": "The creation time of the object in RFC 3339 format."
            },
            "timeDeleted": {
              "type": "string",
              "format": "date-time",
              "description": "The deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted."
            },
            "cacheControl": {
              "type": "string",
              "description": "Cache-Control directive for the object data. If omitted, and the object is accessible to all anonymous users, the default will be public, max-age=3600."
            },
            "storageClass": {
              "type": "string",
              "description": "Storage class of the object."
            },
            "temporaryHold": {
              "type": "boolean",
              "description": "Whether an object is under temporary hold. While this flag is set to true, the object is protected against deletion and overwrites. A common use case of this flag is regulatory investigations where objects need to be retained while the investigation is ongoing. Note that unlike event-based hold, temporary hold does not impact retention expiration time of an object."
            },
            "componentCount": {
              "type": "integer",
              "format": "int32",
              "description": "Number of underlying components that make up this object. Components are accumulated by compose operations."
            },
            "eventBasedHold": {
              "type": "boolean",
              "description": "Whether an object is under event-based hold. Event-based hold is a way to retain objects until an event occurs, which is signified by the hold's release (i.e. this value is set to false). After being released (set to false), such objects will be subject to bucket-level retention (if any). One sample use case of this flag is for banks to hold loan documents for at least 3 years after loan is paid in full. Here, bucket-level retention is 3 years and the event is the loan being paid in full. In this example, these objects will be held intact for any number of years until the event has occurred (event-based hold on the object is released) and then 3 more years after that. That means retention duration of the objects begins from the moment event-based hold transitioned from true to false."
            },
            "metageneration": {
              "type": "string",
              "format": "int64",
              "description": "The version of the metadata for this object at this generation. Used for preconditions and for detecting changes in metadata. A metageneration number is only meaningful in the context of a particular generation of a particular object."
            },
            "contentEncoding": {
              "type": "string",
              "description": "Content-Encoding of the object data."
            },
            "contentLanguage": {
              "type": "string",
              "description": "Content-Language of the object data."
            },
            "contentDisposition": {
              "type": "string",
              "description": "Content-Disposition of the object data."
            },
            "customerEncryption": {
              "type": "object",
              "properties": {
                "keySha256": {
                  "type": "string",
                  "description": "SHA256 hash value of the encryption key."
                },
                "encryptionAlgorithm": {
                  "type": "string",
                  "description": "The encryption algorithm."
                }
              },
              "description": "Metadata of customer-supplied encryption key, if the object is encrypted by such a key."
            },
            "retentionExpirationTime": {
              "type": "string",
              "format": "date-time",
              "description": "A server-determined value that specifies the earliest time that the object's retention period expires. This value is in RFC 3339 format. Note 1: This field is not provided for objects with an active event-based hold, since retention expiration is unknown until the hold is removed. Note 2: This value can be provided even when temporary hold is set (so that the user can reason about policy without having to first unset the temporary hold)."
            },
            "timeStorageClassUpdated": {
              "type": "string",
              "format": "date-time",
              "description": "The time at which the object's storage class was last changed. When the object is initially created, it will be set to timeCreated."
            }
          },
          "description": "An object."
        }
      ]
  objects.list:
    description: |-
      Retrieves a list of objects matching the criteria.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/objects/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Objects",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "storage#objects",
              "description": "The kind of item this is. For lists of objects, this is always storage#objects."
            },
            "items": {
              "type": "array",
              "items": {
                "id": "Object",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the object, including the bucket name, object name, and generation number."
                  },
                  "acl": {
                    "type": "array",
                    "items": {
                      "id": "ObjectAccessControl",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of the access-control entry."
                        },
                        "etag": {
                          "type": "string",
                          "description": "HTTP 1.1 Entity tag for the access-control entry."
                        },
                        "kind": {
                          "type": "string",
                          "default": "storage#objectAccessControl",
                          "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl."
                        },
                        "role": {
                          "type": "string",
                          "annotations": {
                            "required": [
                              "storage.defaultObjectAccessControls.insert",
                              "storage.objectAccessControls.insert"
                            ]
                          },
                          "description": "The access permission for the entity."
                        },
                        "email": {
                          "type": "string",
                          "description": "The email address associated with the entity, if any."
                        },
                        "bucket": {
                          "type": "string",
                          "description": "The name of the bucket."
                        },
                        "domain": {
                          "type": "string",
                          "description": "The domain associated with the entity, if any."
                        },
                        "entity": {
                          "type": "string",
                          "annotations": {
                            "required": [
                              "storage.defaultObjectAccessControls.insert",
                              "storage.objectAccessControls.insert"
                            ]
                          },
                          "description": "The entity holding the permission, in one of the following forms: \\ - user-userId \\ - user-email \\ - group-groupId \\ - group-email \\ - domain-domain \\ - project-team-projectId \\ - allUsers \\ - allAuthenticatedUsers Examples: \\ - The user liz@example.com would be user-liz@example.com. \\ - The group example@googlegroups.com would be group-example@googlegroups.com. \\ - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                        },
                        "object": {
                          "type": "string",
                          "description": "The name of the object, if applied to an object."
                        },
                        "entityId": {
                          "type": "string",
                          "description": "The ID for the entity, if any."
                        },
                        "selfLink": {
                          "type": "string",
                          "description": "The link to this access-control entry."
                        },
                        "generation": {
                          "type": "string",
                          "format": "int64",
                          "description": "The content generation of the object, if applied to an object."
                        },
                        "projectTeam": {
                          "type": "object",
                          "properties": {
                            "team": {
                              "type": "string",
                              "description": "The team."
                            },
                            "projectNumber": {
                              "type": "string",
                              "description": "The project number."
                            }
                          },
                          "description": "The project team associated with the entity, if any."
                        }
                      },
                      "description": "An access-control entry."
                    },
                    "annotations": {
                      "required": [
                        "storage.objects.update"
                      ]
                    },
                    "description": "Access controls on the object."
                  },
                  "etag": {
                    "type": "string",
                    "description": "HTTP 1.1 Entity tag for the object."
                  },
                  "kind": {
                    "type": "string",
                    "default": "storage#object",
                    "description": "The kind of item this is. For objects, this is always storage#object."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the object. Required if not specified by URL parameter."
                  },
                  "size": {
                    "type": "string",
                    "format": "uint64",
                    "description": "Content-Length of the data in bytes."
                  },
                  "owner": {
                    "type": "object",
                    "properties": {
                      "entity": {
                        "type": "string",
                        "description": "The entity, in the form user-userId."
                      },
                      "entityId": {
                        "type": "string",
                        "description": "The ID for the entity."
                      }
                    },
                    "description": "The owner of the object. This will always be the uploader of the object."
                  },
                  "bucket": {
                    "type": "string",
                    "description": "The name of the bucket containing this object."
                  },
                  "crc32c": {
                    "type": "string",
                    "description": "CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64 in big-endian byte order. For more information about using the CRC32c checksum, see Hashes and ETags: Best Practices."
                  },
                  "md5Hash": {
                    "type": "string",
                    "description": "MD5 hash of the data; encoded using base64. For more information about using the MD5 hash, see Hashes and ETags: Best Practices."
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The modification time of the object metadata in RFC 3339 format."
                  },
                  "metadata": {
                    "type": "object",
                    "description": "User-provided metadata, in key/value pairs.",
                    "additionalProperties": {
                      "type": "string",
                      "description": "An individual metadata entry."
                    }
                  },
                  "selfLink": {
                    "type": "string",
                    "description": "The link to this object."
                  },
                  "mediaLink": {
                    "type": "string",
                    "description": "Media download link."
                  },
                  "customTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "A timestamp in RFC 3339 format specified by the user for an object."
                  },
                  "generation": {
                    "type": "string",
                    "format": "int64",
                    "description": "The content generation of this object. Used for object versioning."
                  },
                  "kmsKeyName": {
                    "type": "string",
                    "description": "Not currently supported. Specifying the parameter causes the request to fail with status code 400 - Bad Request."
                  },
                  "contentType": {
                    "type": "string",
                    "description": "Content-Type of the object data. If an object is stored without a Content-Type, it is served as application/octet-stream."
                  },
                  "timeCreated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The creation time of the object in RFC 3339 format."
                  },
                  "timeDeleted": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted."
                  },
                  "cacheControl": {
                    "type": "string",
                    "description": "Cache-Control directive for the object data. If omitted, and the object is accessible to all anonymous users, the default will be public, max-age=3600."
                  },
                  "storageClass": {
                    "type": "string",
                    "description": "Storage class of the object."
                  },
                  "temporaryHold": {
                    "type": "boolean",
                    "description": "Whether an object is under temporary hold. While this flag is set to true, the object is protected against deletion and overwrites. A common use case of this flag is regulatory investigations where objects need to be retained while the investigation is ongoing. Note that unlike event-based hold, temporary hold does not impact retention expiration time of an object."
                  },
                  "componentCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of underlying components that make up this object. Components are accumulated by compose operations."
                  },
                  "eventBasedHold": {
                    "type": "boolean",
                    "description": "Whether an object is under event-based hold. Event-based hold is a way to retain objects until an event occurs, which is signified by the hold's release (i.e. this value is set to false). After being released (set to false), such objects will be subject to bucket-level retention (if any). One sample use case of this flag is for banks to hold loan documents for at least 3 years after loan is paid in full. Here, bucket-level retention is 3 years and the event is the loan being paid in full. In this example, these objects will be held intact for any number of years until the event has occurred (event-based hold on the object is released) and then 3 more years after that. That means retention duration of the objects begins from the moment event-based hold transitioned from true to false."
                  },
                  "metageneration": {
                    "type": "string",
                    "format": "int64",
                    "description": "The version of the metadata for this object at this generation. Used for preconditions and for detecting changes in metadata. A metageneration number is only meaningful in the context of a particular generation of a particular object."
                  },
                  "contentEncoding": {
                    "type": "string",
                    "description": "Content-Encoding of the object data."
                  },
                  "contentLanguage": {
                    "type": "string",
                    "description": "Content-Language of the object data."
                  },
                  "contentDisposition": {
                    "type": "string",
                    "description": "Content-Disposition of the object data."
                  },
                  "customerEncryption": {
                    "type": "object",
                    "properties": {
                      "keySha256": {
                        "type": "string",
                        "description": "SHA256 hash value of the encryption key."
                      },
                      "encryptionAlgorithm": {
                        "type": "string",
                        "description": "The encryption algorithm."
                      }
                    },
                    "description": "Metadata of customer-supplied encryption key, if the object is encrypted by such a key."
                  },
                  "retentionExpirationTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "A server-determined value that specifies the earliest time that the object's retention period expires. This value is in RFC 3339 format. Note 1: This field is not provided for objects with an active event-based hold, since retention expiration is unknown until the hold is removed. Note 2: This value can be provided even when temporary hold is set (so that the user can reason about policy without having to first unset the temporary hold)."
                  },
                  "timeStorageClassUpdated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time at which the object's storage class was last changed. When the object is initially created, it will be set to timeCreated."
                  }
                },
                "description": "An object."
              },
              "description": "The list of items."
            },
            "prefixes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The list of prefixes of objects matching-but-not-listed up to and including the requested delimiter."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results."
            }
          },
          "description": "A list of objects."
        }
      ]
  objects.patch:
    description: |-
      Patches an object's metadata.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/objects/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Object",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of the object, including the bucket name, object name, and generation number."
            },
            "acl": {
              "type": "array",
              "items": {
                "id": "ObjectAccessControl",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the access-control entry."
                  },
                  "etag": {
                    "type": "string",
                    "description": "HTTP 1.1 Entity tag for the access-control entry."
                  },
                  "kind": {
                    "type": "string",
                    "default": "storage#objectAccessControl",
                    "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl."
                  },
                  "role": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.defaultObjectAccessControls.insert",
                        "storage.objectAccessControls.insert"
                      ]
                    },
                    "description": "The access permission for the entity."
                  },
                  "email": {
                    "type": "string",
                    "description": "The email address associated with the entity, if any."
                  },
                  "bucket": {
                    "type": "string",
                    "description": "The name of the bucket."
                  },
                  "domain": {
                    "type": "string",
                    "description": "The domain associated with the entity, if any."
                  },
                  "entity": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.defaultObjectAccessControls.insert",
                        "storage.objectAccessControls.insert"
                      ]
                    },
                    "description": "The entity holding the permission, in one of the following forms: \\ - user-userId \\ - user-email \\ - group-groupId \\ - group-email \\ - domain-domain \\ - project-team-projectId \\ - allUsers \\ - allAuthenticatedUsers Examples: \\ - The user liz@example.com would be user-liz@example.com. \\ - The group example@googlegroups.com would be group-example@googlegroups.com. \\ - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                  },
                  "object": {
                    "type": "string",
                    "description": "The name of the object, if applied to an object."
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The ID for the entity, if any."
                  },
                  "selfLink": {
                    "type": "string",
                    "description": "The link to this access-control entry."
                  },
                  "generation": {
                    "type": "string",
                    "format": "int64",
                    "description": "The content generation of the object, if applied to an object."
                  },
                  "projectTeam": {
                    "type": "object",
                    "properties": {
                      "team": {
                        "type": "string",
                        "description": "The team."
                      },
                      "projectNumber": {
                        "type": "string",
                        "description": "The project number."
                      }
                    },
                    "description": "The project team associated with the entity, if any."
                  }
                },
                "description": "An access-control entry."
              },
              "annotations": {
                "required": [
                  "storage.objects.update"
                ]
              },
              "description": "Access controls on the object."
            },
            "etag": {
              "type": "string",
              "description": "HTTP 1.1 Entity tag for the object."
            },
            "kind": {
              "type": "string",
              "default": "storage#object",
              "description": "The kind of item this is. For objects, this is always storage#object."
            },
            "name": {
              "type": "string",
              "description": "The name of the object. Required if not specified by URL parameter."
            },
            "size": {
              "type": "string",
              "format": "uint64",
              "description": "Content-Length of the data in bytes."
            },
            "owner": {
              "type": "object",
              "properties": {
                "entity": {
                  "type": "string",
                  "description": "The entity, in the form user-userId."
                },
                "entityId": {
                  "type": "string",
                  "description": "The ID for the entity."
                }
              },
              "description": "The owner of the object. This will always be the uploader of the object."
            },
            "bucket": {
              "type": "string",
              "description": "The name of the bucket containing this object."
            },
            "crc32c": {
              "type": "string",
              "description": "CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64 in big-endian byte order. For more information about using the CRC32c checksum, see Hashes and ETags: Best Practices."
            },
            "md5Hash": {
              "type": "string",
              "description": "MD5 hash of the data; encoded using base64. For more information about using the MD5 hash, see Hashes and ETags: Best Practices."
            },
            "updated": {
              "type": "string",
              "format": "date-time",
              "description": "The modification time of the object metadata in RFC 3339 format."
            },
            "metadata": {
              "type": "object",
              "description": "User-provided metadata, in key/value pairs.",
              "additionalProperties": {
                "type": "string",
                "description": "An individual metadata entry."
              }
            },
            "selfLink": {
              "type": "string",
              "description": "The link to this object."
            },
            "mediaLink": {
              "type": "string",
              "description": "Media download link."
            },
            "customTime": {
              "type": "string",
              "format": "date-time",
              "description": "A timestamp in RFC 3339 format specified by the user for an object."
            },
            "generation": {
              "type": "string",
              "format": "int64",
              "description": "The content generation of this object. Used for object versioning."
            },
            "kmsKeyName": {
              "type": "string",
              "description": "Not currently supported. Specifying the parameter causes the request to fail with status code 400 - Bad Request."
            },
            "contentType": {
              "type": "string",
              "description": "Content-Type of the object data. If an object is stored without a Content-Type, it is served as application/octet-stream."
            },
            "timeCreated": {
              "type": "string",
              "format": "date-time",
              "description": "The creation time of the object in RFC 3339 format."
            },
            "timeDeleted": {
              "type": "string",
              "format": "date-time",
              "description": "The deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted."
            },
            "cacheControl": {
              "type": "string",
              "description": "Cache-Control directive for the object data. If omitted, and the object is accessible to all anonymous users, the default will be public, max-age=3600."
            },
            "storageClass": {
              "type": "string",
              "description": "Storage class of the object."
            },
            "temporaryHold": {
              "type": "boolean",
              "description": "Whether an object is under temporary hold. While this flag is set to true, the object is protected against deletion and overwrites. A common use case of this flag is regulatory investigations where objects need to be retained while the investigation is ongoing. Note that unlike event-based hold, temporary hold does not impact retention expiration time of an object."
            },
            "componentCount": {
              "type": "integer",
              "format": "int32",
              "description": "Number of underlying components that make up this object. Components are accumulated by compose operations."
            },
            "eventBasedHold": {
              "type": "boolean",
              "description": "Whether an object is under event-based hold. Event-based hold is a way to retain objects until an event occurs, which is signified by the hold's release (i.e. this value is set to false). After being released (set to false), such objects will be subject to bucket-level retention (if any). One sample use case of this flag is for banks to hold loan documents for at least 3 years after loan is paid in full. Here, bucket-level retention is 3 years and the event is the loan being paid in full. In this example, these objects will be held intact for any number of years until the event has occurred (event-based hold on the object is released) and then 3 more years after that. That means retention duration of the objects begins from the moment event-based hold transitioned from true to false."
            },
            "metageneration": {
              "type": "string",
              "format": "int64",
              "description": "The version of the metadata for this object at this generation. Used for preconditions and for detecting changes in metadata. A metageneration number is only meaningful in the context of a particular generation of a particular object."
            },
            "contentEncoding": {
              "type": "string",
              "description": "Content-Encoding of the object data."
            },
            "contentLanguage": {
              "type": "string",
              "description": "Content-Language of the object data."
            },
            "contentDisposition": {
              "type": "string",
              "description": "Content-Disposition of the object data."
            },
            "customerEncryption": {
              "type": "object",
              "properties": {
                "keySha256": {
                  "type": "string",
                  "description": "SHA256 hash value of the encryption key."
                },
                "encryptionAlgorithm": {
                  "type": "string",
                  "description": "The encryption algorithm."
                }
              },
              "description": "Metadata of customer-supplied encryption key, if the object is encrypted by such a key."
            },
            "retentionExpirationTime": {
              "type": "string",
              "format": "date-time",
              "description": "A server-determined value that specifies the earliest time that the object's retention period expires. This value is in RFC 3339 format. Note 1: This field is not provided for objects with an active event-based hold, since retention expiration is unknown until the hold is removed. Note 2: This value can be provided even when temporary hold is set (so that the user can reason about policy without having to first unset the temporary hold)."
            },
            "timeStorageClassUpdated": {
              "type": "string",
              "format": "date-time",
              "description": "The time at which the object's storage class was last changed. When the object is initially created, it will be set to timeCreated."
            }
          },
          "description": "An object."
        }
      ]
  objects.rewrite:
    description: |-
      Rewrites a source object to a destination object. Optionally overrides metadata.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/objects/rewrite
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "RewriteResponse",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "true if the copy is finished; otherwise, false if the copy is in progress. This property is always present in the response."
            },
            "kind": {
              "type": "string",
              "default": "storage#rewriteResponse",
              "description": "The kind of item this is."
            },
            "resource": {
              "id": "Object",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID of the object, including the bucket name, object name, and generation number."
                },
                "acl": {
                  "type": "array",
                  "items": {
                    "id": "ObjectAccessControl",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the access-control entry."
                      },
                      "etag": {
                        "type": "string",
                        "description": "HTTP 1.1 Entity tag for the access-control entry."
                      },
                      "kind": {
                        "type": "string",
                        "default": "storage#objectAccessControl",
                        "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl."
                      },
                      "role": {
                        "type": "string",
                        "annotations": {
                          "required": [
                            "storage.defaultObjectAccessControls.insert",
                            "storage.objectAccessControls.insert"
                          ]
                        },
                        "description": "The access permission for the entity."
                      },
                      "email": {
                        "type": "string",
                        "description": "The email address associated with the entity, if any."
                      },
                      "bucket": {
                        "type": "string",
                        "description": "The name of the bucket."
                      },
                      "domain": {
                        "type": "string",
                        "description": "The domain associated with the entity, if any."
                      },
                      "entity": {
                        "type": "string",
                        "annotations": {
                          "required": [
                            "storage.defaultObjectAccessControls.insert",
                            "storage.objectAccessControls.insert"
                          ]
                        },
                        "description": "The entity holding the permission, in one of the following forms: \\ - user-userId \\ - user-email \\ - group-groupId \\ - group-email \\ - domain-domain \\ - project-team-projectId \\ - allUsers \\ - allAuthenticatedUsers Examples: \\ - The user liz@example.com would be user-liz@example.com. \\ - The group example@googlegroups.com would be group-example@googlegroups.com. \\ - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                      },
                      "object": {
                        "type": "string",
                        "description": "The name of the object, if applied to an object."
                      },
                      "entityId": {
                        "type": "string",
                        "description": "The ID for the entity, if any."
                      },
                      "selfLink": {
                        "type": "string",
                        "description": "The link to this access-control entry."
                      },
                      "generation": {
                        "type": "string",
                        "format": "int64",
                        "description": "The content generation of the object, if applied to an object."
                      },
                      "projectTeam": {
                        "type": "object",
                        "properties": {
                          "team": {
                            "type": "string",
                            "description": "The team."
                          },
                          "projectNumber": {
                            "type": "string",
                            "description": "The project number."
                          }
                        },
                        "description": "The project team associated with the entity, if any."
                      }
                    },
                    "description": "An access-control entry."
                  },
                  "annotations": {
                    "required": [
                      "storage.objects.update"
                    ]
                  },
                  "description": "Access controls on the object."
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP 1.1 Entity tag for the object."
                },
                "kind": {
                  "type": "string",
                  "default": "storage#object",
                  "description": "The kind of item this is. For objects, this is always storage#object."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the object. Required if not specified by URL parameter."
                },
                "size": {
                  "type": "string",
                  "format": "uint64",
                  "description": "Content-Length of the data in bytes."
                },
                "owner": {
                  "type": "object",
                  "properties": {
                    "entity": {
                      "type": "string",
                      "description": "The entity, in the form user-userId."
                    },
                    "entityId": {
                      "type": "string",
                      "description": "The ID for the entity."
                    }
                  },
                  "description": "The owner of the object. This will always be the uploader of the object."
                },
                "bucket": {
                  "type": "string",
                  "description": "The name of the bucket containing this object."
                },
                "crc32c": {
                  "type": "string",
                  "description": "CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64 in big-endian byte order. For more information about using the CRC32c checksum, see Hashes and ETags: Best Practices."
                },
                "md5Hash": {
                  "type": "string",
                  "description": "MD5 hash of the data; encoded using base64. For more information about using the MD5 hash, see Hashes and ETags: Best Practices."
                },
                "updated": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The modification time of the object metadata in RFC 3339 format."
                },
                "metadata": {
                  "type": "object",
                  "description": "User-provided metadata, in key/value pairs.",
                  "additionalProperties": {
                    "type": "string",
                    "description": "An individual metadata entry."
                  }
                },
                "selfLink": {
                  "type": "string",
                  "description": "The link to this object."
                },
                "mediaLink": {
                  "type": "string",
                  "description": "Media download link."
                },
                "customTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "A timestamp in RFC 3339 format specified by the user for an object."
                },
                "generation": {
                  "type": "string",
                  "format": "int64",
                  "description": "The content generation of this object. Used for object versioning."
                },
                "kmsKeyName": {
                  "type": "string",
                  "description": "Not currently supported. Specifying the parameter causes the request to fail with status code 400 - Bad Request."
                },
                "contentType": {
                  "type": "string",
                  "description": "Content-Type of the object data. If an object is stored without a Content-Type, it is served as application/octet-stream."
                },
                "timeCreated": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The creation time of the object in RFC 3339 format."
                },
                "timeDeleted": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted."
                },
                "cacheControl": {
                  "type": "string",
                  "description": "Cache-Control directive for the object data. If omitted, and the object is accessible to all anonymous users, the default will be public, max-age=3600."
                },
                "storageClass": {
                  "type": "string",
                  "description": "Storage class of the object."
                },
                "temporaryHold": {
                  "type": "boolean",
                  "description": "Whether an object is under temporary hold. While this flag is set to true, the object is protected against deletion and overwrites. A common use case of this flag is regulatory investigations where objects need to be retained while the investigation is ongoing. Note that unlike event-based hold, temporary hold does not impact retention expiration time of an object."
                },
                "componentCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of underlying components that make up this object. Components are accumulated by compose operations."
                },
                "eventBasedHold": {
                  "type": "boolean",
                  "description": "Whether an object is under event-based hold. Event-based hold is a way to retain objects until an event occurs, which is signified by the hold's release (i.e. this value is set to false). After being released (set to false), such objects will be subject to bucket-level retention (if any). One sample use case of this flag is for banks to hold loan documents for at least 3 years after loan is paid in full. Here, bucket-level retention is 3 years and the event is the loan being paid in full. In this example, these objects will be held intact for any number of years until the event has occurred (event-based hold on the object is released) and then 3 more years after that. That means retention duration of the objects begins from the moment event-based hold transitioned from true to false."
                },
                "metageneration": {
                  "type": "string",
                  "format": "int64",
                  "description": "The version of the metadata for this object at this generation. Used for preconditions and for detecting changes in metadata. A metageneration number is only meaningful in the context of a particular generation of a particular object."
                },
                "contentEncoding": {
                  "type": "string",
                  "description": "Content-Encoding of the object data."
                },
                "contentLanguage": {
                  "type": "string",
                  "description": "Content-Language of the object data."
                },
                "contentDisposition": {
                  "type": "string",
                  "description": "Content-Disposition of the object data."
                },
                "customerEncryption": {
                  "type": "object",
                  "properties": {
                    "keySha256": {
                      "type": "string",
                      "description": "SHA256 hash value of the encryption key."
                    },
                    "encryptionAlgorithm": {
                      "type": "string",
                      "description": "The encryption algorithm."
                    }
                  },
                  "description": "Metadata of customer-supplied encryption key, if the object is encrypted by such a key."
                },
                "retentionExpirationTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "A server-determined value that specifies the earliest time that the object's retention period expires. This value is in RFC 3339 format. Note 1: This field is not provided for objects with an active event-based hold, since retention expiration is unknown until the hold is removed. Note 2: This value can be provided even when temporary hold is set (so that the user can reason about policy without having to first unset the temporary hold)."
                },
                "timeStorageClassUpdated": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The time at which the object's storage class was last changed. When the object is initially created, it will be set to timeCreated."
                }
              },
              "description": "An object."
            },
            "objectSize": {
              "type": "string",
              "format": "int64",
              "description": "The total size of the object being copied in bytes. This property is always present in the response."
            },
            "rewriteToken": {
              "type": "string",
              "description": "A token to use in subsequent requests to continue copying data. This token is present in the response only when there is more data to copy."
            },
            "totalBytesRewritten": {
              "type": "string",
              "format": "int64",
              "description": "The total bytes written so far, which can be used to provide a waiting user with a progress indicator. This property is always present in the response."
            }
          },
          "description": "A rewrite response."
        }
      ]
  objects.setIamPolicy:
    description: |-
      Updates an IAM policy for the specified object.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/objects/setIamPolicy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "HTTP 1.1  Entity tag for the policy."
            },
            "kind": {
              "type": "string",
              "default": "storage#policy",
              "description": "The kind of item this is. For policies, this is always storage#policy. This field is ignored on input."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "The IAM policy format version."
            },
            "bindings": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.buckets.setIamPolicy",
                        "storage.objects.setIamPolicy"
                      ]
                    },
                    "description": "The role to which members belong. Two types of roles are supported: new IAM roles, which grant permissions that do not map directly to those provided by ACLs, and legacy IAM roles, which do map directly to ACL permissions. All roles are of the format roles/storage.specificRole.\\ The new IAM roles are:  \\ - roles/storage.admin — Full control of Google Cloud Storage resources.  \\ - roles/storage.objectViewer — Read-Only access to Google Cloud Storage objects.  \\ - roles/storage.objectCreator — Access to create objects in Google Cloud Storage.  \\ - roles/storage.objectAdmin — Full control of Google Cloud Storage objects.   The legacy IAM roles are:  \\ - roles/storage.legacyObjectReader — Read-only access to objects without listing. Equivalent to an ACL entry on an object with the READER role.  \\ - roles/storage.legacyObjectOwner — Read/write access to existing objects without listing. Equivalent to an ACL entry on an object with the OWNER role.  \\ - roles/storage.legacyBucketReader — Read access to buckets with object listing. Equivalent to an ACL entry on a bucket with the READER role.  \\ - roles/storage.legacyBucketWriter — Read access to buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the WRITER role.  \\ - roles/storage.legacyBucketOwner — Read and write access to existing buckets with object listing/creation/deletion. Equivalent to an ACL entry on a bucket with the OWNER role."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "annotations": {
                      "required": [
                        "storage.buckets.setIamPolicy",
                        "storage.objects.setIamPolicy"
                      ]
                    },
                    "description": "A collection of identifiers for members who may assume the provided role. Recognized identifiers are as follows:  \\ - allUsers — A special identifier that represents anyone on the internet; with or without a Google account.  \\ - allAuthenticatedUsers — A special identifier that represents anyone who is authenticated with a Google account or a service account.  \\ - user:emailid — An email address that represents a specific account. For example, user:alice@gmail.com or user:joe@example.com.  \\ - serviceAccount:emailid — An email address that represents a service account. For example,  serviceAccount:my-other-app@appspot.gserviceaccount.com .  \\ - group:emailid — An email address that represents a Google group. For example, group:admins@example.com.  \\ - domain:domain — A Google Apps domain name that represents all the users of that domain. For example, domain:google.com or domain:example.com.  \\ - projectOwner:projectid — Owners of the given project. For example, projectOwner:my-example-project  \\ - projectEditor:projectid — Editors of the given project. For example, projectEditor:my-example-project  \\ - projectViewer:projectid — Viewers of the given project. For example, projectViewer:my-example-project"
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "An optional title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "An optional string indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax. The application context of the containing message determines which well-known feature set of CEL is supported."
                      },
                      "description": {
                        "type": "string",
                        "description": "An optional description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. NOTE: an unsatisfied condition will not allow user access via current binding. Different bindings, including their conditions, are examined independently."
                  }
                }
              },
              "annotations": {
                "required": [
                  "storage.buckets.setIamPolicy",
                  "storage.objects.setIamPolicy"
                ]
              },
              "description": "An association between a role, which comes with a set of permissions, and members who may assume that role."
            },
            "resourceId": {
              "type": "string",
              "description": "The ID of the resource to which this policy belongs. Will be of the form projects/_/buckets/bucket for buckets, and projects/_/buckets/bucket/objects/object for objects. A specific generation may be specified by appending #generationNumber to the end of the object name, e.g. projects/_/buckets/my-bucket/objects/data.txt#17. The current generation can be denoted with #0. This field is ignored on input."
            }
          },
          "description": "A bucket/object IAM policy."
        }
      ]
  objects.testIamPermissions:
    description: |-
      Tests a set of permissions on the given object to see which, if any, are held by the caller.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/objects/testIamPermissions
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "TestIamPermissionsResponse",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "storage#testIamPermissionsResponse",
              "description": "The kind of item this is."
            },
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The permissions held by the caller. Permissions are always of the format storage.resource.capability, where resource is one of buckets or objects. The supported permissions are as follows:  \\ - storage.buckets.delete — Delete bucket.  \\ - storage.buckets.get — Read bucket metadata.  \\ - storage.buckets.getIamPolicy — Read bucket IAM policy.  \\ - storage.buckets.create — Create bucket.  \\ - storage.buckets.list — List buckets.  \\ - storage.buckets.setIamPolicy — Update bucket IAM policy.  \\ - storage.buckets.update — Update bucket metadata.  \\ - storage.objects.delete — Delete object.  \\ - storage.objects.get — Read object data and metadata.  \\ - storage.objects.getIamPolicy — Read object IAM policy.  \\ - storage.objects.create — Create object.  \\ - storage.objects.list — List objects.  \\ - storage.objects.setIamPolicy — Update object IAM policy.  \\ - storage.objects.update — Update object metadata."
            }
          },
          "description": "A storage.(buckets|objects).testIamPermissions response."
        }
      ]
  objects.update:
    description: |-
      Updates an object's metadata.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/objects/update
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Object",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of the object, including the bucket name, object name, and generation number."
            },
            "acl": {
              "type": "array",
              "items": {
                "id": "ObjectAccessControl",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the access-control entry."
                  },
                  "etag": {
                    "type": "string",
                    "description": "HTTP 1.1 Entity tag for the access-control entry."
                  },
                  "kind": {
                    "type": "string",
                    "default": "storage#objectAccessControl",
                    "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl."
                  },
                  "role": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.defaultObjectAccessControls.insert",
                        "storage.objectAccessControls.insert"
                      ]
                    },
                    "description": "The access permission for the entity."
                  },
                  "email": {
                    "type": "string",
                    "description": "The email address associated with the entity, if any."
                  },
                  "bucket": {
                    "type": "string",
                    "description": "The name of the bucket."
                  },
                  "domain": {
                    "type": "string",
                    "description": "The domain associated with the entity, if any."
                  },
                  "entity": {
                    "type": "string",
                    "annotations": {
                      "required": [
                        "storage.defaultObjectAccessControls.insert",
                        "storage.objectAccessControls.insert"
                      ]
                    },
                    "description": "The entity holding the permission, in one of the following forms: \\ - user-userId \\ - user-email \\ - group-groupId \\ - group-email \\ - domain-domain \\ - project-team-projectId \\ - allUsers \\ - allAuthenticatedUsers Examples: \\ - The user liz@example.com would be user-liz@example.com. \\ - The group example@googlegroups.com would be group-example@googlegroups.com. \\ - To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
                  },
                  "object": {
                    "type": "string",
                    "description": "The name of the object, if applied to an object."
                  },
                  "entityId": {
                    "type": "string",
                    "description": "The ID for the entity, if any."
                  },
                  "selfLink": {
                    "type": "string",
                    "description": "The link to this access-control entry."
                  },
                  "generation": {
                    "type": "string",
                    "format": "int64",
                    "description": "The content generation of the object, if applied to an object."
                  },
                  "projectTeam": {
                    "type": "object",
                    "properties": {
                      "team": {
                        "type": "string",
                        "description": "The team."
                      },
                      "projectNumber": {
                        "type": "string",
                        "description": "The project number."
                      }
                    },
                    "description": "The project team associated with the entity, if any."
                  }
                },
                "description": "An access-control entry."
              },
              "annotations": {
                "required": [
                  "storage.objects.update"
                ]
              },
              "description": "Access controls on the object."
            },
            "etag": {
              "type": "string",
              "description": "HTTP 1.1 Entity tag for the object."
            },
            "kind": {
              "type": "string",
              "default": "storage#object",
              "description": "The kind of item this is. For objects, this is always storage#object."
            },
            "name": {
              "type": "string",
              "description": "The name of the object. Required if not specified by URL parameter."
            },
            "size": {
              "type": "string",
              "format": "uint64",
              "description": "Content-Length of the data in bytes."
            },
            "owner": {
              "type": "object",
              "properties": {
                "entity": {
                  "type": "string",
                  "description": "The entity, in the form user-userId."
                },
                "entityId": {
                  "type": "string",
                  "description": "The ID for the entity."
                }
              },
              "description": "The owner of the object. This will always be the uploader of the object."
            },
            "bucket": {
              "type": "string",
              "description": "The name of the bucket containing this object."
            },
            "crc32c": {
              "type": "string",
              "description": "CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64 in big-endian byte order. For more information about using the CRC32c checksum, see Hashes and ETags: Best Practices."
            },
            "md5Hash": {
              "type": "string",
              "description": "MD5 hash of the data; encoded using base64. For more information about using the MD5 hash, see Hashes and ETags: Best Practices."
            },
            "updated": {
              "type": "string",
              "format": "date-time",
              "description": "The modification time of the object metadata in RFC 3339 format."
            },
            "metadata": {
              "type": "object",
              "description": "User-provided metadata, in key/value pairs.",
              "additionalProperties": {
                "type": "string",
                "description": "An individual metadata entry."
              }
            },
            "selfLink": {
              "type": "string",
              "description": "The link to this object."
            },
            "mediaLink": {
              "type": "string",
              "description": "Media download link."
            },
            "customTime": {
              "type": "string",
              "format": "date-time",
              "description": "A timestamp in RFC 3339 format specified by the user for an object."
            },
            "generation": {
              "type": "string",
              "format": "int64",
              "description": "The content generation of this object. Used for object versioning."
            },
            "kmsKeyName": {
              "type": "string",
              "description": "Not currently supported. Specifying the parameter causes the request to fail with status code 400 - Bad Request."
            },
            "contentType": {
              "type": "string",
              "description": "Content-Type of the object data. If an object is stored without a Content-Type, it is served as application/octet-stream."
            },
            "timeCreated": {
              "type": "string",
              "format": "date-time",
              "description": "The creation time of the object in RFC 3339 format."
            },
            "timeDeleted": {
              "type": "string",
              "format": "date-time",
              "description": "The deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted."
            },
            "cacheControl": {
              "type": "string",
              "description": "Cache-Control directive for the object data. If omitted, and the object is accessible to all anonymous users, the default will be public, max-age=3600."
            },
            "storageClass": {
              "type": "string",
              "description": "Storage class of the object."
            },
            "temporaryHold": {
              "type": "boolean",
              "description": "Whether an object is under temporary hold. While this flag is set to true, the object is protected against deletion and overwrites. A common use case of this flag is regulatory investigations where objects need to be retained while the investigation is ongoing. Note that unlike event-based hold, temporary hold does not impact retention expiration time of an object."
            },
            "componentCount": {
              "type": "integer",
              "format": "int32",
              "description": "Number of underlying components that make up this object. Components are accumulated by compose operations."
            },
            "eventBasedHold": {
              "type": "boolean",
              "description": "Whether an object is under event-based hold. Event-based hold is a way to retain objects until an event occurs, which is signified by the hold's release (i.e. this value is set to false). After being released (set to false), such objects will be subject to bucket-level retention (if any). One sample use case of this flag is for banks to hold loan documents for at least 3 years after loan is paid in full. Here, bucket-level retention is 3 years and the event is the loan being paid in full. In this example, these objects will be held intact for any number of years until the event has occurred (event-based hold on the object is released) and then 3 more years after that. That means retention duration of the objects begins from the moment event-based hold transitioned from true to false."
            },
            "metageneration": {
              "type": "string",
              "format": "int64",
              "description": "The version of the metadata for this object at this generation. Used for preconditions and for detecting changes in metadata. A metageneration number is only meaningful in the context of a particular generation of a particular object."
            },
            "contentEncoding": {
              "type": "string",
              "description": "Content-Encoding of the object data."
            },
            "contentLanguage": {
              "type": "string",
              "description": "Content-Language of the object data."
            },
            "contentDisposition": {
              "type": "string",
              "description": "Content-Disposition of the object data."
            },
            "customerEncryption": {
              "type": "object",
              "properties": {
                "keySha256": {
                  "type": "string",
                  "description": "SHA256 hash value of the encryption key."
                },
                "encryptionAlgorithm": {
                  "type": "string",
                  "description": "The encryption algorithm."
                }
              },
              "description": "Metadata of customer-supplied encryption key, if the object is encrypted by such a key."
            },
            "retentionExpirationTime": {
              "type": "string",
              "format": "date-time",
              "description": "A server-determined value that specifies the earliest time that the object's retention period expires. This value is in RFC 3339 format. Note 1: This field is not provided for objects with an active event-based hold, since retention expiration is unknown until the hold is removed. Note 2: This value can be provided even when temporary hold is set (so that the user can reason about policy without having to first unset the temporary hold)."
            },
            "timeStorageClassUpdated": {
              "type": "string",
              "format": "date-time",
              "description": "The time at which the object's storage class was last changed. When the object is initially created, it will be set to timeCreated."
            }
          },
          "description": "An object."
        }
      ]
  objects.watchAll:
    description: |-
      Watch for changes on all objects in a bucket.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/objects/watchAll
    example:
      inputs: [
        {
          "id": "Channel",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "A UUID or similar unique string that identifies this channel."
            },
            "kind": {
              "type": "string",
              "default": "api#channel",
              "description": "Identifies this as a notification channel used to watch for changes to a resource, which is \"api#channel\"."
            },
            "type": {
              "type": "string",
              "description": "The type of delivery mechanism used for this channel."
            },
            "token": {
              "type": "string",
              "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."
            },
            "params": {
              "type": "object",
              "description": "Additional parameters controlling delivery channel behavior. Optional.",
              "additionalProperties": {
                "type": "string",
                "description": "Declares a new parameter by name."
              }
            },
            "address": {
              "type": "string",
              "description": "The address where notifications are delivered for this channel."
            },
            "payload": {
              "type": "boolean",
              "description": "A Boolean value to indicate whether payload is wanted. Optional."
            },
            "expiration": {
              "type": "string",
              "format": "int64",
              "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional."
            },
            "resourceId": {
              "type": "string",
              "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."
            },
            "resourceUri": {
              "type": "string",
              "description": "A version-specific identifier for the watched resource."
            }
          },
          "description": "An notification channel used to watch for resource changes.",
          "parameterName": "resource"
        }
      ]
      outputs: [
        {
          "id": "Channel",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "A UUID or similar unique string that identifies this channel."
            },
            "kind": {
              "type": "string",
              "default": "api#channel",
              "description": "Identifies this as a notification channel used to watch for changes to a resource, which is \"api#channel\"."
            },
            "type": {
              "type": "string",
              "description": "The type of delivery mechanism used for this channel."
            },
            "token": {
              "type": "string",
              "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."
            },
            "params": {
              "type": "object",
              "description": "Additional parameters controlling delivery channel behavior. Optional.",
              "additionalProperties": {
                "type": "string",
                "description": "Declares a new parameter by name."
              }
            },
            "address": {
              "type": "string",
              "description": "The address where notifications are delivered for this channel."
            },
            "payload": {
              "type": "boolean",
              "description": "A Boolean value to indicate whether payload is wanted. Optional."
            },
            "expiration": {
              "type": "string",
              "format": "int64",
              "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional."
            },
            "resourceId": {
              "type": "string",
              "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."
            },
            "resourceUri": {
              "type": "string",
              "description": "A version-specific identifier for the watched resource."
            }
          },
          "description": "An notification channel used to watch for resource changes."
        }
      ]
  projects.hmacKeys.create:
    description: |-
      Creates a new HMAC key for the specified service account.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/projects.hmacKeys/create
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "HmacKey",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "storage#hmacKey",
              "description": "The kind of item this is. For HMAC keys, this is always storage#hmacKey."
            },
            "secret": {
              "type": "string",
              "description": "HMAC secret key material."
            },
            "metadata": {
              "id": "HmacKeyMetadata",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID of the HMAC key, including the Project ID and the Access ID."
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP 1.1 Entity tag for the HMAC key."
                },
                "kind": {
                  "type": "string",
                  "default": "storage#hmacKeyMetadata",
                  "description": "The kind of item this is. For HMAC Key metadata, this is always storage#hmacKeyMetadata."
                },
                "state": {
                  "type": "string",
                  "description": "The state of the key. Can be one of ACTIVE, INACTIVE, or DELETED."
                },
                "updated": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The last modification time of the HMAC key metadata in RFC 3339 format."
                },
                "accessId": {
                  "type": "string",
                  "description": "The ID of the HMAC Key."
                },
                "selfLink": {
                  "type": "string",
                  "description": "The link to this resource."
                },
                "projectId": {
                  "type": "string",
                  "description": "Project ID owning the service account to which the key authenticates."
                },
                "timeCreated": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The creation time of the HMAC key in RFC 3339 format."
                },
                "serviceAccountEmail": {
                  "type": "string",
                  "description": "The email address of the key's associated service account."
                }
              },
              "description": "Key metadata."
            }
          },
          "description": "JSON template to produce a JSON-style HMAC Key resource for Create responses."
        }
      ]
  projects.hmacKeys.delete:
    description: |-
      Deletes an HMAC key.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/projects.hmacKeys/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.hmacKeys.get:
    description: |-
      Retrieves an HMAC key's metadata
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/projects.hmacKeys/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "HmacKeyMetadata",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of the HMAC key, including the Project ID and the Access ID."
            },
            "etag": {
              "type": "string",
              "description": "HTTP 1.1 Entity tag for the HMAC key."
            },
            "kind": {
              "type": "string",
              "default": "storage#hmacKeyMetadata",
              "description": "The kind of item this is. For HMAC Key metadata, this is always storage#hmacKeyMetadata."
            },
            "state": {
              "type": "string",
              "description": "The state of the key. Can be one of ACTIVE, INACTIVE, or DELETED."
            },
            "updated": {
              "type": "string",
              "format": "date-time",
              "description": "The last modification time of the HMAC key metadata in RFC 3339 format."
            },
            "accessId": {
              "type": "string",
              "description": "The ID of the HMAC Key."
            },
            "selfLink": {
              "type": "string",
              "description": "The link to this resource."
            },
            "projectId": {
              "type": "string",
              "description": "Project ID owning the service account to which the key authenticates."
            },
            "timeCreated": {
              "type": "string",
              "format": "date-time",
              "description": "The creation time of the HMAC key in RFC 3339 format."
            },
            "serviceAccountEmail": {
              "type": "string",
              "description": "The email address of the key's associated service account."
            }
          },
          "description": "JSON template to produce a JSON-style HMAC Key metadata resource."
        }
      ]
  projects.hmacKeys.list:
    description: |-
      Retrieves a list of HMAC keys matching the criteria.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/projects.hmacKeys/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "HmacKeysMetadata",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "storage#hmacKeysMetadata",
              "description": "The kind of item this is. For lists of hmacKeys, this is always storage#hmacKeysMetadata."
            },
            "items": {
              "type": "array",
              "items": {
                "id": "HmacKeyMetadata",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the HMAC key, including the Project ID and the Access ID."
                  },
                  "etag": {
                    "type": "string",
                    "description": "HTTP 1.1 Entity tag for the HMAC key."
                  },
                  "kind": {
                    "type": "string",
                    "default": "storage#hmacKeyMetadata",
                    "description": "The kind of item this is. For HMAC Key metadata, this is always storage#hmacKeyMetadata."
                  },
                  "state": {
                    "type": "string",
                    "description": "The state of the key. Can be one of ACTIVE, INACTIVE, or DELETED."
                  },
                  "updated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The last modification time of the HMAC key metadata in RFC 3339 format."
                  },
                  "accessId": {
                    "type": "string",
                    "description": "The ID of the HMAC Key."
                  },
                  "selfLink": {
                    "type": "string",
                    "description": "The link to this resource."
                  },
                  "projectId": {
                    "type": "string",
                    "description": "Project ID owning the service account to which the key authenticates."
                  },
                  "timeCreated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The creation time of the HMAC key in RFC 3339 format."
                  },
                  "serviceAccountEmail": {
                    "type": "string",
                    "description": "The email address of the key's associated service account."
                  }
                },
                "description": "JSON template to produce a JSON-style HMAC Key metadata resource."
              },
              "description": "The list of items."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results."
            }
          },
          "description": "A list of hmacKeys."
        }
      ]
  projects.hmacKeys.update:
    description: |-
      Updates the state of an HMAC key. See the HMAC Key resource descriptor for valid states.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/projects.hmacKeys/update
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "HmacKeyMetadata",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of the HMAC key, including the Project ID and the Access ID."
            },
            "etag": {
              "type": "string",
              "description": "HTTP 1.1 Entity tag for the HMAC key."
            },
            "kind": {
              "type": "string",
              "default": "storage#hmacKeyMetadata",
              "description": "The kind of item this is. For HMAC Key metadata, this is always storage#hmacKeyMetadata."
            },
            "state": {
              "type": "string",
              "description": "The state of the key. Can be one of ACTIVE, INACTIVE, or DELETED."
            },
            "updated": {
              "type": "string",
              "format": "date-time",
              "description": "The last modification time of the HMAC key metadata in RFC 3339 format."
            },
            "accessId": {
              "type": "string",
              "description": "The ID of the HMAC Key."
            },
            "selfLink": {
              "type": "string",
              "description": "The link to this resource."
            },
            "projectId": {
              "type": "string",
              "description": "Project ID owning the service account to which the key authenticates."
            },
            "timeCreated": {
              "type": "string",
              "format": "date-time",
              "description": "The creation time of the HMAC key in RFC 3339 format."
            },
            "serviceAccountEmail": {
              "type": "string",
              "description": "The email address of the key's associated service account."
            }
          },
          "description": "JSON template to produce a JSON-style HMAC Key metadata resource."
        }
      ]
  projects.serviceAccount.get:
    description: |-
      Get the email address of this project's Google Cloud Storage service account.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/storage/docs/json_api/v1/projects.serviceAccount/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ServiceAccount",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "default": "storage#serviceAccount",
              "description": "The kind of item this is. For notifications, this is always storage#notification."
            },
            "email_address": {
              "type": "string",
              "description": "The ID of the notification."
            }
          },
          "description": "A subscription to receive Google PubSub notifications."
        }
      ]