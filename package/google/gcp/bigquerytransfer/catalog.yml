Product:
  name: GCP BigQuery Data Transfer
  versions: [1.0.0]
  package: google.gcp.bigquerytransfer
  description: |-
    BigQuery Data Transfer
  link: https://cloud.google.com/bigquery-transfer
  contentType: json
Operations:
  projects.dataSources.checkValidCreds:
    description: |-
      Returns true if valid credentials exist for the given data source and requesting user. Some data sources doesn't support service account, so we need to talk to them on behalf of the end user. This API just checks whether we have OAuth token for the particular user, which is a pre-requisite before user can create a transfer config.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.dataSources/checkValidCreds
    example:
      inputs: [
        {
          "id": "CheckValidCredsRequest",
          "type": "object",
          "properties": {},
          "description": "A request to determine whether the user has valid credentials. This method is used to limit the number of OAuth popups in the user interface. The user id is inferred from the API call context. If the data source has the Google+ authorization type, this method returns false, as it cannot be determined whether the credentials are already valid merely based on the user id."
        }
      ]
      outputs: [
        {
          "id": "CheckValidCredsResponse",
          "type": "object",
          "properties": {
            "hasValidCreds": {
              "type": "boolean",
              "description": "If set to `true`, the credentials exist and are valid."
            }
          },
          "description": "A response indicating whether the credentials exist and are valid."
        }
      ]
  projects.dataSources.get:
    description: |-
      Retrieves a supported data source and returns its settings, which can be used for UI rendering.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.dataSources/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "DataSource",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Data source resource name."
            },
            "scopes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Api auth scopes for which refresh token needs to be obtained. These are scopes needed by a data source to prepare data and ingest them into BigQuery, e.g., https://www.googleapis.com/auth/bigquery"
            },
            "helpUrl": {
              "type": "string",
              "description": "Url for the help document for this data source."
            },
            "clientId": {
              "type": "string",
              "description": "Data source client id which should be used to receive refresh token."
            },
            "parameters": {
              "type": "array",
              "items": {
                "id": "DataSourceParameter",
                "type": "object",
                "properties": {
                  "type": {
                    "enum": [
                      "TYPE_UNSPECIFIED",
                      "STRING",
                      "INTEGER",
                      "DOUBLE",
                      "BOOLEAN",
                      "RECORD",
                      "PLUS_PAGE"
                    ],
                    "type": "string",
                    "description": "Parameter type.",
                    "enumDescriptions": [
                      "Type unspecified.",
                      "String parameter.",
                      "Integer parameter (64-bits). Will be serialized to json as string.",
                      "Double precision floating point parameter.",
                      "Boolean parameter.",
                      "Deprecated. This field has no effect.",
                      "Page ID for a Google+ Page."
                    ]
                  },
                  "fields": {
                    "type": "array",
                    "items": {},
                    "description": "Deprecated. This field has no effect."
                  },
                  "paramId": {
                    "type": "string",
                    "description": "Parameter identifier."
                  },
                  "recurse": {
                    "type": "boolean",
                    "description": "Deprecated. This field has no effect."
                  },
                  "maxValue": {
                    "type": "number",
                    "format": "double",
                    "description": "For integer and double values specifies maxminum allowed value."
                  },
                  "minValue": {
                    "type": "number",
                    "format": "double",
                    "description": "For integer and double values specifies minimum allowed value."
                  },
                  "repeated": {
                    "type": "boolean",
                    "description": "Deprecated. This field has no effect."
                  },
                  "required": {
                    "type": "boolean",
                    "description": "Is parameter required."
                  },
                  "immutable": {
                    "type": "boolean",
                    "description": "Cannot be changed after initial creation."
                  },
                  "deprecated": {
                    "type": "boolean",
                    "description": "If true, it should not be used in new transfers, and it should not be visible to users."
                  },
                  "description": {
                    "type": "string",
                    "description": "Parameter description."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Parameter display name in the user interface."
                  },
                  "allowedValues": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "All possible values for the parameter."
                  },
                  "validationRegex": {
                    "type": "string",
                    "description": "Regular expression which can be used for parameter validation."
                  },
                  "validationHelpUrl": {
                    "type": "string",
                    "description": "URL to a help document to further explain the naming requirements."
                  },
                  "validationDescription": {
                    "type": "string",
                    "description": "Description of the requirements for this field, in case the user input does not fulfill the regex pattern or min/max values."
                  }
                },
                "description": "Represents a data source parameter with validation rules, so that parameters can be rendered in the UI. These parameters are given to us by supported data sources, and include all needed information for rendering and validation. Thus, whoever uses this api can decide to generate either generic ui, or custom data source specific forms."
              },
              "description": "Data source parameters."
            },
            "description": {
              "type": "string",
              "description": "User friendly data source description string."
            },
            "displayName": {
              "type": "string",
              "description": "User friendly data source name."
            },
            "dataSourceId": {
              "type": "string",
              "description": "Data source id."
            },
            "transferType": {
              "enum": [
                "TRANSFER_TYPE_UNSPECIFIED",
                "BATCH",
                "STREAMING"
              ],
              "type": "string",
              "description": "Deprecated. This field has no effect.",
              "enumDescriptions": [
                "Invalid or Unknown transfer type placeholder.",
                "Batch data transfer.",
                "Streaming data transfer. Streaming data source currently doesn't support multiple transfer configs per project."
              ]
            },
            "dataRefreshType": {
              "enum": [
                "DATA_REFRESH_TYPE_UNSPECIFIED",
                "SLIDING_WINDOW",
                "CUSTOM_SLIDING_WINDOW"
              ],
              "type": "string",
              "description": "Specifies whether the data source supports automatic data refresh for the past few days, and how it's supported. For some data sources, data might not be complete until a few days later, so it's useful to refresh data automatically.",
              "enumDescriptions": [
                "The data source won't support data auto refresh, which is default value.",
                "The data source supports data auto refresh, and runs will be scheduled for the past few days. Does not allow custom values to be set for each transfer config.",
                "The data source supports data auto refresh, and runs will be scheduled for the past few days. Allows custom values to be set for each transfer config."
              ]
            },
            "defaultSchedule": {
              "type": "string",
              "description": "Default data transfer schedule. Examples of valid schedules include: `1st,3rd monday of month 15:30`, `every wed,fri of jan,jun 13:15`, and `first sunday of quarter 00:00`."
            },
            "authorizationType": {
              "enum": [
                "AUTHORIZATION_TYPE_UNSPECIFIED",
                "AUTHORIZATION_CODE",
                "GOOGLE_PLUS_AUTHORIZATION_CODE",
                "FIRST_PARTY_OAUTH"
              ],
              "type": "string",
              "description": "Indicates the type of authorization.",
              "enumDescriptions": [
                "Type unspecified.",
                "Use OAuth 2 authorization codes that can be exchanged for a refresh token on the backend.",
                "Return an authorization code for a given Google+ page that can then be exchanged for a refresh token on the backend.",
                "Use First Party OAuth based on Loas Owned Clients. First Party OAuth doesn't require a refresh token to get an offline access token. Instead, it uses a client-signed JWT assertion to retrieve an access token."
              ]
            },
            "manualRunsDisabled": {
              "type": "boolean",
              "description": "Disables backfilling and manual run scheduling for the data source."
            },
            "updateDeadlineSeconds": {
              "type": "integer",
              "format": "int32",
              "description": "The number of seconds to wait for an update from the data source before the Data Transfer Service marks the transfer as FAILED."
            },
            "supportsCustomSchedule": {
              "type": "boolean",
              "description": "Specifies whether the data source supports a user defined schedule, or operates on the default schedule. When set to `true`, user can override default schedule."
            },
            "minimumScheduleInterval": {
              "type": "string",
              "format": "google-duration",
              "description": "The minimum interval for scheduler to schedule runs."
            },
            "supportsMultipleTransfers": {
              "type": "boolean",
              "description": "Deprecated. This field has no effect."
            },
            "defaultDataRefreshWindowDays": {
              "type": "integer",
              "format": "int32",
              "description": "Default data refresh window on days. Only meaningful when `data_refresh_type` = `SLIDING_WINDOW`."
            }
          },
          "description": "Represents data source metadata. Metadata is sufficient to render UI and request proper OAuth tokens."
        }
      ]
  projects.dataSources.list:
    description: |-
      Lists supported data sources and returns their settings, which can be used for UI rendering.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.dataSources/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListDataSourcesResponse",
          "type": "object",
          "properties": {
            "dataSources": {
              "type": "array",
              "items": {
                "id": "DataSource",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Data source resource name."
                  },
                  "scopes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Api auth scopes for which refresh token needs to be obtained. These are scopes needed by a data source to prepare data and ingest them into BigQuery, e.g., https://www.googleapis.com/auth/bigquery"
                  },
                  "helpUrl": {
                    "type": "string",
                    "description": "Url for the help document for this data source."
                  },
                  "clientId": {
                    "type": "string",
                    "description": "Data source client id which should be used to receive refresh token."
                  },
                  "parameters": {
                    "type": "array",
                    "items": {
                      "id": "DataSourceParameter",
                      "type": "object",
                      "properties": {
                        "type": {
                          "enum": [
                            "TYPE_UNSPECIFIED",
                            "STRING",
                            "INTEGER",
                            "DOUBLE",
                            "BOOLEAN",
                            "RECORD",
                            "PLUS_PAGE"
                          ],
                          "type": "string",
                          "description": "Parameter type.",
                          "enumDescriptions": [
                            "Type unspecified.",
                            "String parameter.",
                            "Integer parameter (64-bits). Will be serialized to json as string.",
                            "Double precision floating point parameter.",
                            "Boolean parameter.",
                            "Deprecated. This field has no effect.",
                            "Page ID for a Google+ Page."
                          ]
                        },
                        "fields": {
                          "type": "array",
                          "items": {},
                          "description": "Deprecated. This field has no effect."
                        },
                        "paramId": {
                          "type": "string",
                          "description": "Parameter identifier."
                        },
                        "recurse": {
                          "type": "boolean",
                          "description": "Deprecated. This field has no effect."
                        },
                        "maxValue": {
                          "type": "number",
                          "format": "double",
                          "description": "For integer and double values specifies maxminum allowed value."
                        },
                        "minValue": {
                          "type": "number",
                          "format": "double",
                          "description": "For integer and double values specifies minimum allowed value."
                        },
                        "repeated": {
                          "type": "boolean",
                          "description": "Deprecated. This field has no effect."
                        },
                        "required": {
                          "type": "boolean",
                          "description": "Is parameter required."
                        },
                        "immutable": {
                          "type": "boolean",
                          "description": "Cannot be changed after initial creation."
                        },
                        "deprecated": {
                          "type": "boolean",
                          "description": "If true, it should not be used in new transfers, and it should not be visible to users."
                        },
                        "description": {
                          "type": "string",
                          "description": "Parameter description."
                        },
                        "displayName": {
                          "type": "string",
                          "description": "Parameter display name in the user interface."
                        },
                        "allowedValues": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "All possible values for the parameter."
                        },
                        "validationRegex": {
                          "type": "string",
                          "description": "Regular expression which can be used for parameter validation."
                        },
                        "validationHelpUrl": {
                          "type": "string",
                          "description": "URL to a help document to further explain the naming requirements."
                        },
                        "validationDescription": {
                          "type": "string",
                          "description": "Description of the requirements for this field, in case the user input does not fulfill the regex pattern or min/max values."
                        }
                      },
                      "description": "Represents a data source parameter with validation rules, so that parameters can be rendered in the UI. These parameters are given to us by supported data sources, and include all needed information for rendering and validation. Thus, whoever uses this api can decide to generate either generic ui, or custom data source specific forms."
                    },
                    "description": "Data source parameters."
                  },
                  "description": {
                    "type": "string",
                    "description": "User friendly data source description string."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "User friendly data source name."
                  },
                  "dataSourceId": {
                    "type": "string",
                    "description": "Data source id."
                  },
                  "transferType": {
                    "enum": [
                      "TRANSFER_TYPE_UNSPECIFIED",
                      "BATCH",
                      "STREAMING"
                    ],
                    "type": "string",
                    "description": "Deprecated. This field has no effect.",
                    "enumDescriptions": [
                      "Invalid or Unknown transfer type placeholder.",
                      "Batch data transfer.",
                      "Streaming data transfer. Streaming data source currently doesn't support multiple transfer configs per project."
                    ]
                  },
                  "dataRefreshType": {
                    "enum": [
                      "DATA_REFRESH_TYPE_UNSPECIFIED",
                      "SLIDING_WINDOW",
                      "CUSTOM_SLIDING_WINDOW"
                    ],
                    "type": "string",
                    "description": "Specifies whether the data source supports automatic data refresh for the past few days, and how it's supported. For some data sources, data might not be complete until a few days later, so it's useful to refresh data automatically.",
                    "enumDescriptions": [
                      "The data source won't support data auto refresh, which is default value.",
                      "The data source supports data auto refresh, and runs will be scheduled for the past few days. Does not allow custom values to be set for each transfer config.",
                      "The data source supports data auto refresh, and runs will be scheduled for the past few days. Allows custom values to be set for each transfer config."
                    ]
                  },
                  "defaultSchedule": {
                    "type": "string",
                    "description": "Default data transfer schedule. Examples of valid schedules include: `1st,3rd monday of month 15:30`, `every wed,fri of jan,jun 13:15`, and `first sunday of quarter 00:00`."
                  },
                  "authorizationType": {
                    "enum": [
                      "AUTHORIZATION_TYPE_UNSPECIFIED",
                      "AUTHORIZATION_CODE",
                      "GOOGLE_PLUS_AUTHORIZATION_CODE",
                      "FIRST_PARTY_OAUTH"
                    ],
                    "type": "string",
                    "description": "Indicates the type of authorization.",
                    "enumDescriptions": [
                      "Type unspecified.",
                      "Use OAuth 2 authorization codes that can be exchanged for a refresh token on the backend.",
                      "Return an authorization code for a given Google+ page that can then be exchanged for a refresh token on the backend.",
                      "Use First Party OAuth based on Loas Owned Clients. First Party OAuth doesn't require a refresh token to get an offline access token. Instead, it uses a client-signed JWT assertion to retrieve an access token."
                    ]
                  },
                  "manualRunsDisabled": {
                    "type": "boolean",
                    "description": "Disables backfilling and manual run scheduling for the data source."
                  },
                  "updateDeadlineSeconds": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of seconds to wait for an update from the data source before the Data Transfer Service marks the transfer as FAILED."
                  },
                  "supportsCustomSchedule": {
                    "type": "boolean",
                    "description": "Specifies whether the data source supports a user defined schedule, or operates on the default schedule. When set to `true`, user can override default schedule."
                  },
                  "minimumScheduleInterval": {
                    "type": "string",
                    "format": "google-duration",
                    "description": "The minimum interval for scheduler to schedule runs."
                  },
                  "supportsMultipleTransfers": {
                    "type": "boolean",
                    "description": "Deprecated. This field has no effect."
                  },
                  "defaultDataRefreshWindowDays": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Default data refresh window on days. Only meaningful when `data_refresh_type` = `SLIDING_WINDOW`."
                  }
                },
                "description": "Represents data source metadata. Metadata is sufficient to render UI and request proper OAuth tokens."
              },
              "description": "List of supported data sources and their transfer settings."
            },
            "nextPageToken": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The next-pagination token. For multiple-page list results, this token can be used as the `ListDataSourcesRequest.page_token` to request the next page of list results."
            }
          },
          "description": "Returns list of supported data sources and their metadata."
        }
      ]
  projects.locations.dataSources.checkValidCreds:
    description: |-
      Returns true if valid credentials exist for the given data source and requesting user. Some data sources doesn't support service account, so we need to talk to them on behalf of the end user. This API just checks whether we have OAuth token for the particular user, which is a pre-requisite before user can create a transfer config.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.locations.dataSources/checkValidCreds
    example:
      inputs: [
        {
          "id": "CheckValidCredsRequest",
          "type": "object",
          "properties": {},
          "description": "A request to determine whether the user has valid credentials. This method is used to limit the number of OAuth popups in the user interface. The user id is inferred from the API call context. If the data source has the Google+ authorization type, this method returns false, as it cannot be determined whether the credentials are already valid merely based on the user id."
        }
      ]
      outputs: [
        {
          "id": "CheckValidCredsResponse",
          "type": "object",
          "properties": {
            "hasValidCreds": {
              "type": "boolean",
              "description": "If set to `true`, the credentials exist and are valid."
            }
          },
          "description": "A response indicating whether the credentials exist and are valid."
        }
      ]
  projects.locations.dataSources.get:
    description: |-
      Retrieves a supported data source and returns its settings, which can be used for UI rendering.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.locations.dataSources/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "DataSource",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Data source resource name."
            },
            "scopes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Api auth scopes for which refresh token needs to be obtained. These are scopes needed by a data source to prepare data and ingest them into BigQuery, e.g., https://www.googleapis.com/auth/bigquery"
            },
            "helpUrl": {
              "type": "string",
              "description": "Url for the help document for this data source."
            },
            "clientId": {
              "type": "string",
              "description": "Data source client id which should be used to receive refresh token."
            },
            "parameters": {
              "type": "array",
              "items": {
                "id": "DataSourceParameter",
                "type": "object",
                "properties": {
                  "type": {
                    "enum": [
                      "TYPE_UNSPECIFIED",
                      "STRING",
                      "INTEGER",
                      "DOUBLE",
                      "BOOLEAN",
                      "RECORD",
                      "PLUS_PAGE"
                    ],
                    "type": "string",
                    "description": "Parameter type.",
                    "enumDescriptions": [
                      "Type unspecified.",
                      "String parameter.",
                      "Integer parameter (64-bits). Will be serialized to json as string.",
                      "Double precision floating point parameter.",
                      "Boolean parameter.",
                      "Deprecated. This field has no effect.",
                      "Page ID for a Google+ Page."
                    ]
                  },
                  "fields": {
                    "type": "array",
                    "items": {},
                    "description": "Deprecated. This field has no effect."
                  },
                  "paramId": {
                    "type": "string",
                    "description": "Parameter identifier."
                  },
                  "recurse": {
                    "type": "boolean",
                    "description": "Deprecated. This field has no effect."
                  },
                  "maxValue": {
                    "type": "number",
                    "format": "double",
                    "description": "For integer and double values specifies maxminum allowed value."
                  },
                  "minValue": {
                    "type": "number",
                    "format": "double",
                    "description": "For integer and double values specifies minimum allowed value."
                  },
                  "repeated": {
                    "type": "boolean",
                    "description": "Deprecated. This field has no effect."
                  },
                  "required": {
                    "type": "boolean",
                    "description": "Is parameter required."
                  },
                  "immutable": {
                    "type": "boolean",
                    "description": "Cannot be changed after initial creation."
                  },
                  "deprecated": {
                    "type": "boolean",
                    "description": "If true, it should not be used in new transfers, and it should not be visible to users."
                  },
                  "description": {
                    "type": "string",
                    "description": "Parameter description."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Parameter display name in the user interface."
                  },
                  "allowedValues": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "All possible values for the parameter."
                  },
                  "validationRegex": {
                    "type": "string",
                    "description": "Regular expression which can be used for parameter validation."
                  },
                  "validationHelpUrl": {
                    "type": "string",
                    "description": "URL to a help document to further explain the naming requirements."
                  },
                  "validationDescription": {
                    "type": "string",
                    "description": "Description of the requirements for this field, in case the user input does not fulfill the regex pattern or min/max values."
                  }
                },
                "description": "Represents a data source parameter with validation rules, so that parameters can be rendered in the UI. These parameters are given to us by supported data sources, and include all needed information for rendering and validation. Thus, whoever uses this api can decide to generate either generic ui, or custom data source specific forms."
              },
              "description": "Data source parameters."
            },
            "description": {
              "type": "string",
              "description": "User friendly data source description string."
            },
            "displayName": {
              "type": "string",
              "description": "User friendly data source name."
            },
            "dataSourceId": {
              "type": "string",
              "description": "Data source id."
            },
            "transferType": {
              "enum": [
                "TRANSFER_TYPE_UNSPECIFIED",
                "BATCH",
                "STREAMING"
              ],
              "type": "string",
              "description": "Deprecated. This field has no effect.",
              "enumDescriptions": [
                "Invalid or Unknown transfer type placeholder.",
                "Batch data transfer.",
                "Streaming data transfer. Streaming data source currently doesn't support multiple transfer configs per project."
              ]
            },
            "dataRefreshType": {
              "enum": [
                "DATA_REFRESH_TYPE_UNSPECIFIED",
                "SLIDING_WINDOW",
                "CUSTOM_SLIDING_WINDOW"
              ],
              "type": "string",
              "description": "Specifies whether the data source supports automatic data refresh for the past few days, and how it's supported. For some data sources, data might not be complete until a few days later, so it's useful to refresh data automatically.",
              "enumDescriptions": [
                "The data source won't support data auto refresh, which is default value.",
                "The data source supports data auto refresh, and runs will be scheduled for the past few days. Does not allow custom values to be set for each transfer config.",
                "The data source supports data auto refresh, and runs will be scheduled for the past few days. Allows custom values to be set for each transfer config."
              ]
            },
            "defaultSchedule": {
              "type": "string",
              "description": "Default data transfer schedule. Examples of valid schedules include: `1st,3rd monday of month 15:30`, `every wed,fri of jan,jun 13:15`, and `first sunday of quarter 00:00`."
            },
            "authorizationType": {
              "enum": [
                "AUTHORIZATION_TYPE_UNSPECIFIED",
                "AUTHORIZATION_CODE",
                "GOOGLE_PLUS_AUTHORIZATION_CODE",
                "FIRST_PARTY_OAUTH"
              ],
              "type": "string",
              "description": "Indicates the type of authorization.",
              "enumDescriptions": [
                "Type unspecified.",
                "Use OAuth 2 authorization codes that can be exchanged for a refresh token on the backend.",
                "Return an authorization code for a given Google+ page that can then be exchanged for a refresh token on the backend.",
                "Use First Party OAuth based on Loas Owned Clients. First Party OAuth doesn't require a refresh token to get an offline access token. Instead, it uses a client-signed JWT assertion to retrieve an access token."
              ]
            },
            "manualRunsDisabled": {
              "type": "boolean",
              "description": "Disables backfilling and manual run scheduling for the data source."
            },
            "updateDeadlineSeconds": {
              "type": "integer",
              "format": "int32",
              "description": "The number of seconds to wait for an update from the data source before the Data Transfer Service marks the transfer as FAILED."
            },
            "supportsCustomSchedule": {
              "type": "boolean",
              "description": "Specifies whether the data source supports a user defined schedule, or operates on the default schedule. When set to `true`, user can override default schedule."
            },
            "minimumScheduleInterval": {
              "type": "string",
              "format": "google-duration",
              "description": "The minimum interval for scheduler to schedule runs."
            },
            "supportsMultipleTransfers": {
              "type": "boolean",
              "description": "Deprecated. This field has no effect."
            },
            "defaultDataRefreshWindowDays": {
              "type": "integer",
              "format": "int32",
              "description": "Default data refresh window on days. Only meaningful when `data_refresh_type` = `SLIDING_WINDOW`."
            }
          },
          "description": "Represents data source metadata. Metadata is sufficient to render UI and request proper OAuth tokens."
        }
      ]
  projects.locations.dataSources.list:
    description: |-
      Lists supported data sources and returns their settings, which can be used for UI rendering.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.locations.dataSources/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListDataSourcesResponse",
          "type": "object",
          "properties": {
            "dataSources": {
              "type": "array",
              "items": {
                "id": "DataSource",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Data source resource name."
                  },
                  "scopes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Api auth scopes for which refresh token needs to be obtained. These are scopes needed by a data source to prepare data and ingest them into BigQuery, e.g., https://www.googleapis.com/auth/bigquery"
                  },
                  "helpUrl": {
                    "type": "string",
                    "description": "Url for the help document for this data source."
                  },
                  "clientId": {
                    "type": "string",
                    "description": "Data source client id which should be used to receive refresh token."
                  },
                  "parameters": {
                    "type": "array",
                    "items": {
                      "id": "DataSourceParameter",
                      "type": "object",
                      "properties": {
                        "type": {
                          "enum": [
                            "TYPE_UNSPECIFIED",
                            "STRING",
                            "INTEGER",
                            "DOUBLE",
                            "BOOLEAN",
                            "RECORD",
                            "PLUS_PAGE"
                          ],
                          "type": "string",
                          "description": "Parameter type.",
                          "enumDescriptions": [
                            "Type unspecified.",
                            "String parameter.",
                            "Integer parameter (64-bits). Will be serialized to json as string.",
                            "Double precision floating point parameter.",
                            "Boolean parameter.",
                            "Deprecated. This field has no effect.",
                            "Page ID for a Google+ Page."
                          ]
                        },
                        "fields": {
                          "type": "array",
                          "items": {},
                          "description": "Deprecated. This field has no effect."
                        },
                        "paramId": {
                          "type": "string",
                          "description": "Parameter identifier."
                        },
                        "recurse": {
                          "type": "boolean",
                          "description": "Deprecated. This field has no effect."
                        },
                        "maxValue": {
                          "type": "number",
                          "format": "double",
                          "description": "For integer and double values specifies maxminum allowed value."
                        },
                        "minValue": {
                          "type": "number",
                          "format": "double",
                          "description": "For integer and double values specifies minimum allowed value."
                        },
                        "repeated": {
                          "type": "boolean",
                          "description": "Deprecated. This field has no effect."
                        },
                        "required": {
                          "type": "boolean",
                          "description": "Is parameter required."
                        },
                        "immutable": {
                          "type": "boolean",
                          "description": "Cannot be changed after initial creation."
                        },
                        "deprecated": {
                          "type": "boolean",
                          "description": "If true, it should not be used in new transfers, and it should not be visible to users."
                        },
                        "description": {
                          "type": "string",
                          "description": "Parameter description."
                        },
                        "displayName": {
                          "type": "string",
                          "description": "Parameter display name in the user interface."
                        },
                        "allowedValues": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "All possible values for the parameter."
                        },
                        "validationRegex": {
                          "type": "string",
                          "description": "Regular expression which can be used for parameter validation."
                        },
                        "validationHelpUrl": {
                          "type": "string",
                          "description": "URL to a help document to further explain the naming requirements."
                        },
                        "validationDescription": {
                          "type": "string",
                          "description": "Description of the requirements for this field, in case the user input does not fulfill the regex pattern or min/max values."
                        }
                      },
                      "description": "Represents a data source parameter with validation rules, so that parameters can be rendered in the UI. These parameters are given to us by supported data sources, and include all needed information for rendering and validation. Thus, whoever uses this api can decide to generate either generic ui, or custom data source specific forms."
                    },
                    "description": "Data source parameters."
                  },
                  "description": {
                    "type": "string",
                    "description": "User friendly data source description string."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "User friendly data source name."
                  },
                  "dataSourceId": {
                    "type": "string",
                    "description": "Data source id."
                  },
                  "transferType": {
                    "enum": [
                      "TRANSFER_TYPE_UNSPECIFIED",
                      "BATCH",
                      "STREAMING"
                    ],
                    "type": "string",
                    "description": "Deprecated. This field has no effect.",
                    "enumDescriptions": [
                      "Invalid or Unknown transfer type placeholder.",
                      "Batch data transfer.",
                      "Streaming data transfer. Streaming data source currently doesn't support multiple transfer configs per project."
                    ]
                  },
                  "dataRefreshType": {
                    "enum": [
                      "DATA_REFRESH_TYPE_UNSPECIFIED",
                      "SLIDING_WINDOW",
                      "CUSTOM_SLIDING_WINDOW"
                    ],
                    "type": "string",
                    "description": "Specifies whether the data source supports automatic data refresh for the past few days, and how it's supported. For some data sources, data might not be complete until a few days later, so it's useful to refresh data automatically.",
                    "enumDescriptions": [
                      "The data source won't support data auto refresh, which is default value.",
                      "The data source supports data auto refresh, and runs will be scheduled for the past few days. Does not allow custom values to be set for each transfer config.",
                      "The data source supports data auto refresh, and runs will be scheduled for the past few days. Allows custom values to be set for each transfer config."
                    ]
                  },
                  "defaultSchedule": {
                    "type": "string",
                    "description": "Default data transfer schedule. Examples of valid schedules include: `1st,3rd monday of month 15:30`, `every wed,fri of jan,jun 13:15`, and `first sunday of quarter 00:00`."
                  },
                  "authorizationType": {
                    "enum": [
                      "AUTHORIZATION_TYPE_UNSPECIFIED",
                      "AUTHORIZATION_CODE",
                      "GOOGLE_PLUS_AUTHORIZATION_CODE",
                      "FIRST_PARTY_OAUTH"
                    ],
                    "type": "string",
                    "description": "Indicates the type of authorization.",
                    "enumDescriptions": [
                      "Type unspecified.",
                      "Use OAuth 2 authorization codes that can be exchanged for a refresh token on the backend.",
                      "Return an authorization code for a given Google+ page that can then be exchanged for a refresh token on the backend.",
                      "Use First Party OAuth based on Loas Owned Clients. First Party OAuth doesn't require a refresh token to get an offline access token. Instead, it uses a client-signed JWT assertion to retrieve an access token."
                    ]
                  },
                  "manualRunsDisabled": {
                    "type": "boolean",
                    "description": "Disables backfilling and manual run scheduling for the data source."
                  },
                  "updateDeadlineSeconds": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of seconds to wait for an update from the data source before the Data Transfer Service marks the transfer as FAILED."
                  },
                  "supportsCustomSchedule": {
                    "type": "boolean",
                    "description": "Specifies whether the data source supports a user defined schedule, or operates on the default schedule. When set to `true`, user can override default schedule."
                  },
                  "minimumScheduleInterval": {
                    "type": "string",
                    "format": "google-duration",
                    "description": "The minimum interval for scheduler to schedule runs."
                  },
                  "supportsMultipleTransfers": {
                    "type": "boolean",
                    "description": "Deprecated. This field has no effect."
                  },
                  "defaultDataRefreshWindowDays": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Default data refresh window on days. Only meaningful when `data_refresh_type` = `SLIDING_WINDOW`."
                  }
                },
                "description": "Represents data source metadata. Metadata is sufficient to render UI and request proper OAuth tokens."
              },
              "description": "List of supported data sources and their transfer settings."
            },
            "nextPageToken": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The next-pagination token. For multiple-page list results, this token can be used as the `ListDataSourcesRequest.page_token` to request the next page of list results."
            }
          },
          "description": "Returns list of supported data sources and their metadata."
        }
      ]
  projects.locations.get:
    description: |-
      Gets information about a location.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.locations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Location",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
            },
            "labels": {
              "type": "object",
              "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
              "additionalProperties": {
                "type": "string"
              }
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata. For example the available capacity at the given location.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "locationId": {
              "type": "string",
              "description": "The canonical id for this location. For example: `\"us-east1\"`."
            },
            "displayName": {
              "type": "string",
              "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
            }
          },
          "description": "A resource that represents Google Cloud Platform location."
        }
      ]
  projects.locations.list:
    description: |-
      Lists information about the supported locations for this service.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.locations/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListLocationsResponse",
          "type": "object",
          "properties": {
            "locations": {
              "type": "array",
              "items": {
                "id": "Location",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
                  },
                  "labels": {
                    "type": "object",
                    "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Service-specific metadata. For example the available capacity at the given location.",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "locationId": {
                    "type": "string",
                    "description": "The canonical id for this location. For example: `\"us-east1\"`."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
                  }
                },
                "description": "A resource that represents Google Cloud Platform location."
              },
              "description": "A list of locations that matches the specified filter in the request."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The standard List next-page token."
            }
          },
          "description": "The response message for Locations.ListLocations."
        }
      ]
  projects.locations.transferConfigs.create:
    description: |-
      Creates a new data transfer configuration.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.locations.transferConfigs/create
    example:
      inputs: [
        {
          "id": "TransferConfig",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The resource name of the transfer config. Transfer config names have the form `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`. Where `config_id` is usually a uuid, even though it is not guaranteed or required. The name is ignored when creating a transfer config."
            },
            "state": {
              "enum": [
                "TRANSFER_STATE_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "SUCCEEDED",
                "FAILED",
                "CANCELLED"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. State of the most recently updated transfer run.",
              "enumDescriptions": [
                "State placeholder (0).",
                "Data transfer is scheduled and is waiting to be picked up by data transfer backend (2).",
                "Data transfer is in progress (3).",
                "Data transfer completed successfully (4).",
                "Data transfer failed (5).",
                "Data transfer is cancelled (6)."
              ]
            },
            "params": {
              "type": "object",
              "description": "Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object."
              }
            },
            "userId": {
              "type": "string",
              "format": "int64",
              "description": "Deprecated. Unique ID of the user on whose behalf transfer is done."
            },
            "disabled": {
              "type": "boolean",
              "description": "Is this config disabled. When set to true, no runs are scheduled for a given transfer."
            },
            "schedule": {
              "type": "string",
              "description": "Data transfer schedule. If the data source does not support a custom schedule, this should be empty. If it is empty, the default value for the data source will be used. The specified times are in UTC. Examples of valid format: `1st,3rd monday of month 15:30`, `every wed,fri of jan,jun 13:15`, and `first sunday of quarter 00:00`. See more explanation about the format here: https://cloud.google.com/appengine/docs/flexible/python/scheduling-jobs-with-cron-yaml#the_schedule_format NOTE: the granularity should be at least 8 hours, or less frequent."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Data transfer modification time. Ignored by server on input."
            },
            "displayName": {
              "type": "string",
              "description": "User specified display name for the data transfer."
            },
            "nextRunTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Next time when data transfer will run."
            },
            "dataSourceId": {
              "type": "string",
              "description": "Data source id. Cannot be changed once data transfer is created."
            },
            "datasetRegion": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Region in which BigQuery dataset is located."
            },
            "scheduleOptions": {
              "id": "ScheduleOptions",
              "type": "object",
              "properties": {
                "endTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "Defines time to stop scheduling transfer runs. A transfer run cannot be scheduled at or after the end time. The end time can be changed at any moment. The time when a data transfer can be trigerred manually is not limited by this option."
                },
                "startTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "Specifies time to start scheduling transfer runs. The first run will be scheduled at or after the start time according to a recurrence pattern defined in the schedule string. The start time can be changed at any moment. The time when a data transfer can be trigerred manually is not limited by this option."
                },
                "disableAutoScheduling": {
                  "type": "boolean",
                  "description": "If true, automatic scheduling of data transfer runs for this configuration will be disabled. The runs can be started on ad-hoc basis using StartManualTransferRuns API. When automatic scheduling is disabled, the TransferConfig.schedule field will be ignored."
                }
              },
              "description": "Options customizing the data transfer schedule."
            },
            "emailPreferences": {
              "id": "EmailPreferences",
              "type": "object",
              "properties": {
                "enableFailureEmail": {
                  "type": "boolean",
                  "description": "If true, email notifications will be sent on transfer run failures."
                }
              },
              "description": "Email notifications will be sent according to these preferences to the email address of the user who owns this transfer config."
            },
            "destinationDatasetId": {
              "type": "string",
              "description": "The BigQuery target dataset id."
            },
            "dataRefreshWindowDays": {
              "type": "integer",
              "format": "int32",
              "description": "The number of days to look back to automatically refresh the data. For example, if `data_refresh_window_days = 10`, then every day BigQuery reingests data for [today-10, today-1], rather than ingesting data for just [today-1]. Only valid if the data source supports the feature. Set the value to 0 to use the default value."
            },
            "notificationPubsubTopic": {
              "type": "string",
              "description": "Pub/Sub topic where notifications will be sent after transfer runs associated with this transfer config finish."
            }
          },
          "description": "Represents a data transfer configuration. A transfer configuration contains all metadata needed to perform a data transfer. For example, `destination_dataset_id` specifies where data should be stored. When a new transfer configuration is created, the specified `destination_dataset_id` is created when needed and shared with the appropriate data source service account."
        }
      ]
      outputs: [
        {}
      ]
  projects.locations.transferConfigs.delete:
    description: |-
      Deletes a data transfer configuration, including any associated transfer runs and logs.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.locations.transferConfigs/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  projects.locations.transferConfigs.get:
    description: |-
      Returns information about a data transfer config.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.locations.transferConfigs/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.locations.transferConfigs.list:
    description: |-
      Returns information about all data transfers in the project.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.locations.transferConfigs/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListTransferConfigsResponse",
          "type": "object",
          "properties": {
            "nextPageToken": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The next-pagination token. For multiple-page list results, this token can be used as the `ListTransferConfigsRequest.page_token` to request the next page of list results."
            },
            "transferConfigs": {
              "type": "array",
              "items": {
                "id": "TransferConfig",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The resource name of the transfer config. Transfer config names have the form `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`. Where `config_id` is usually a uuid, even though it is not guaranteed or required. The name is ignored when creating a transfer config."
                  },
                  "state": {
                    "enum": [
                      "TRANSFER_STATE_UNSPECIFIED",
                      "PENDING",
                      "RUNNING",
                      "SUCCEEDED",
                      "FAILED",
                      "CANCELLED"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. State of the most recently updated transfer run.",
                    "enumDescriptions": [
                      "State placeholder (0).",
                      "Data transfer is scheduled and is waiting to be picked up by data transfer backend (2).",
                      "Data transfer is in progress (3).",
                      "Data transfer completed successfully (4).",
                      "Data transfer failed (5).",
                      "Data transfer is cancelled (6)."
                    ]
                  },
                  "params": {
                    "type": "object",
                    "description": "Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object."
                    }
                  },
                  "userId": {
                    "type": "string",
                    "format": "int64",
                    "description": "Deprecated. Unique ID of the user on whose behalf transfer is done."
                  },
                  "disabled": {
                    "type": "boolean",
                    "description": "Is this config disabled. When set to true, no runs are scheduled for a given transfer."
                  },
                  "schedule": {
                    "type": "string",
                    "description": "Data transfer schedule. If the data source does not support a custom schedule, this should be empty. If it is empty, the default value for the data source will be used. The specified times are in UTC. Examples of valid format: `1st,3rd monday of month 15:30`, `every wed,fri of jan,jun 13:15`, and `first sunday of quarter 00:00`. See more explanation about the format here: https://cloud.google.com/appengine/docs/flexible/python/scheduling-jobs-with-cron-yaml#the_schedule_format NOTE: the granularity should be at least 8 hours, or less frequent."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Data transfer modification time. Ignored by server on input."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "User specified display name for the data transfer."
                  },
                  "nextRunTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Next time when data transfer will run."
                  },
                  "dataSourceId": {
                    "type": "string",
                    "description": "Data source id. Cannot be changed once data transfer is created."
                  },
                  "datasetRegion": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Region in which BigQuery dataset is located."
                  },
                  "scheduleOptions": {
                    "id": "ScheduleOptions",
                    "type": "object",
                    "properties": {
                      "endTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "Defines time to stop scheduling transfer runs. A transfer run cannot be scheduled at or after the end time. The end time can be changed at any moment. The time when a data transfer can be trigerred manually is not limited by this option."
                      },
                      "startTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "Specifies time to start scheduling transfer runs. The first run will be scheduled at or after the start time according to a recurrence pattern defined in the schedule string. The start time can be changed at any moment. The time when a data transfer can be trigerred manually is not limited by this option."
                      },
                      "disableAutoScheduling": {
                        "type": "boolean",
                        "description": "If true, automatic scheduling of data transfer runs for this configuration will be disabled. The runs can be started on ad-hoc basis using StartManualTransferRuns API. When automatic scheduling is disabled, the TransferConfig.schedule field will be ignored."
                      }
                    },
                    "description": "Options customizing the data transfer schedule."
                  },
                  "emailPreferences": {
                    "id": "EmailPreferences",
                    "type": "object",
                    "properties": {
                      "enableFailureEmail": {
                        "type": "boolean",
                        "description": "If true, email notifications will be sent on transfer run failures."
                      }
                    },
                    "description": "Email notifications will be sent according to these preferences to the email address of the user who owns this transfer config."
                  },
                  "destinationDatasetId": {
                    "type": "string",
                    "description": "The BigQuery target dataset id."
                  },
                  "dataRefreshWindowDays": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of days to look back to automatically refresh the data. For example, if `data_refresh_window_days = 10`, then every day BigQuery reingests data for [today-10, today-1], rather than ingesting data for just [today-1]. Only valid if the data source supports the feature. Set the value to 0 to use the default value."
                  },
                  "notificationPubsubTopic": {
                    "type": "string",
                    "description": "Pub/Sub topic where notifications will be sent after transfer runs associated with this transfer config finish."
                  }
                },
                "description": "Represents a data transfer configuration. A transfer configuration contains all metadata needed to perform a data transfer. For example, `destination_dataset_id` specifies where data should be stored. When a new transfer configuration is created, the specified `destination_dataset_id` is created when needed and shared with the appropriate data source service account."
              },
              "readOnly": true,
              "description": "Output only. The stored pipeline transfer configurations."
            }
          },
          "description": "The returned list of pipelines in the project."
        }
      ]
  projects.locations.transferConfigs.patch:
    description: |-
      Updates a data transfer configuration. All fields must be set, even if they are not updated.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.locations.transferConfigs/patch
    example:
      inputs: [
        {
          "id": "TransferConfig",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The resource name of the transfer config. Transfer config names have the form `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`. Where `config_id` is usually a uuid, even though it is not guaranteed or required. The name is ignored when creating a transfer config."
            },
            "state": {
              "enum": [
                "TRANSFER_STATE_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "SUCCEEDED",
                "FAILED",
                "CANCELLED"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. State of the most recently updated transfer run.",
              "enumDescriptions": [
                "State placeholder (0).",
                "Data transfer is scheduled and is waiting to be picked up by data transfer backend (2).",
                "Data transfer is in progress (3).",
                "Data transfer completed successfully (4).",
                "Data transfer failed (5).",
                "Data transfer is cancelled (6)."
              ]
            },
            "params": {
              "type": "object",
              "description": "Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object."
              }
            },
            "userId": {
              "type": "string",
              "format": "int64",
              "description": "Deprecated. Unique ID of the user on whose behalf transfer is done."
            },
            "disabled": {
              "type": "boolean",
              "description": "Is this config disabled. When set to true, no runs are scheduled for a given transfer."
            },
            "schedule": {
              "type": "string",
              "description": "Data transfer schedule. If the data source does not support a custom schedule, this should be empty. If it is empty, the default value for the data source will be used. The specified times are in UTC. Examples of valid format: `1st,3rd monday of month 15:30`, `every wed,fri of jan,jun 13:15`, and `first sunday of quarter 00:00`. See more explanation about the format here: https://cloud.google.com/appengine/docs/flexible/python/scheduling-jobs-with-cron-yaml#the_schedule_format NOTE: the granularity should be at least 8 hours, or less frequent."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Data transfer modification time. Ignored by server on input."
            },
            "displayName": {
              "type": "string",
              "description": "User specified display name for the data transfer."
            },
            "nextRunTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Next time when data transfer will run."
            },
            "dataSourceId": {
              "type": "string",
              "description": "Data source id. Cannot be changed once data transfer is created."
            },
            "datasetRegion": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Region in which BigQuery dataset is located."
            },
            "scheduleOptions": {
              "id": "ScheduleOptions",
              "type": "object",
              "properties": {
                "endTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "Defines time to stop scheduling transfer runs. A transfer run cannot be scheduled at or after the end time. The end time can be changed at any moment. The time when a data transfer can be trigerred manually is not limited by this option."
                },
                "startTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "Specifies time to start scheduling transfer runs. The first run will be scheduled at or after the start time according to a recurrence pattern defined in the schedule string. The start time can be changed at any moment. The time when a data transfer can be trigerred manually is not limited by this option."
                },
                "disableAutoScheduling": {
                  "type": "boolean",
                  "description": "If true, automatic scheduling of data transfer runs for this configuration will be disabled. The runs can be started on ad-hoc basis using StartManualTransferRuns API. When automatic scheduling is disabled, the TransferConfig.schedule field will be ignored."
                }
              },
              "description": "Options customizing the data transfer schedule."
            },
            "emailPreferences": {
              "id": "EmailPreferences",
              "type": "object",
              "properties": {
                "enableFailureEmail": {
                  "type": "boolean",
                  "description": "If true, email notifications will be sent on transfer run failures."
                }
              },
              "description": "Email notifications will be sent according to these preferences to the email address of the user who owns this transfer config."
            },
            "destinationDatasetId": {
              "type": "string",
              "description": "The BigQuery target dataset id."
            },
            "dataRefreshWindowDays": {
              "type": "integer",
              "format": "int32",
              "description": "The number of days to look back to automatically refresh the data. For example, if `data_refresh_window_days = 10`, then every day BigQuery reingests data for [today-10, today-1], rather than ingesting data for just [today-1]. Only valid if the data source supports the feature. Set the value to 0 to use the default value."
            },
            "notificationPubsubTopic": {
              "type": "string",
              "description": "Pub/Sub topic where notifications will be sent after transfer runs associated with this transfer config finish."
            }
          },
          "description": "Represents a data transfer configuration. A transfer configuration contains all metadata needed to perform a data transfer. For example, `destination_dataset_id` specifies where data should be stored. When a new transfer configuration is created, the specified `destination_dataset_id` is created when needed and shared with the appropriate data source service account."
        }
      ]
      outputs: [
        {}
      ]
  projects.locations.transferConfigs.runs.delete:
    description: |-
      Deletes the specified transfer run.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.locations.transferConfigs.runs/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  projects.locations.transferConfigs.runs.get:
    description: |-
      Returns information about the particular transfer run.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.locations.transferConfigs.runs/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "TransferRun",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The resource name of the transfer run. Transfer run names have the form `projects/{project_id}/locations/{location}/transferConfigs/{config_id}/runs/{run_id}`. The name is ignored when creating a transfer run."
            },
            "state": {
              "enum": [
                "TRANSFER_STATE_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "SUCCEEDED",
                "FAILED",
                "CANCELLED"
              ],
              "type": "string",
              "description": "Data transfer run state. Ignored for input requests.",
              "enumDescriptions": [
                "State placeholder (0).",
                "Data transfer is scheduled and is waiting to be picked up by data transfer backend (2).",
                "Data transfer is in progress (3).",
                "Data transfer completed successfully (4).",
                "Data transfer failed (5).",
                "Data transfer is cancelled (6)."
              ]
            },
            "params": {
              "type": "object",
              "readOnly": true,
              "description": "Output only. Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object."
              }
            },
            "userId": {
              "type": "string",
              "format": "int64",
              "description": "Deprecated. Unique ID of the user on whose behalf transfer is done."
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Time when transfer run ended. Parameter ignored by server for input requests."
            },
            "runTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "For batch transfer runs, specifies the date and time of the data should be ingested."
            },
            "schedule": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Describes the schedule of this transfer run if it was created as part of a regular schedule. For batch transfer runs that are scheduled manually, this is empty. NOTE: the system might choose to delay the schedule depending on the current load, so `schedule_time` doesn't always match this."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Time when transfer run was started. Parameter ignored by server for input requests."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Last time the data transfer run state was updated."
            },
            "errorStatus": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "Status of the transfer run."
            },
            "dataSourceId": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Data source id."
            },
            "scheduleTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Minimum time after which a transfer run can be started."
            },
            "emailPreferences": {
              "id": "EmailPreferences",
              "type": "object",
              "readOnly": true,
              "properties": {
                "enableFailureEmail": {
                  "type": "boolean",
                  "description": "If true, email notifications will be sent on transfer run failures."
                }
              },
              "description": "Output only. Email notifications will be sent according to these preferences to the email address of the user who owns the transfer config this run was derived from."
            },
            "destinationDatasetId": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The BigQuery target dataset id."
            },
            "notificationPubsubTopic": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Pub/Sub topic where a notification will be sent after this transfer run finishes"
            }
          },
          "description": "Represents a data transfer run."
        }
      ]
  projects.locations.transferConfigs.runs.list:
    description: |-
      Returns information about running and completed jobs.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.locations.transferConfigs.runs/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListTransferRunsResponse",
          "type": "object",
          "properties": {
            "transferRuns": {
              "type": "array",
              "items": {
                "id": "TransferRun",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The resource name of the transfer run. Transfer run names have the form `projects/{project_id}/locations/{location}/transferConfigs/{config_id}/runs/{run_id}`. The name is ignored when creating a transfer run."
                  },
                  "state": {
                    "enum": [
                      "TRANSFER_STATE_UNSPECIFIED",
                      "PENDING",
                      "RUNNING",
                      "SUCCEEDED",
                      "FAILED",
                      "CANCELLED"
                    ],
                    "type": "string",
                    "description": "Data transfer run state. Ignored for input requests.",
                    "enumDescriptions": [
                      "State placeholder (0).",
                      "Data transfer is scheduled and is waiting to be picked up by data transfer backend (2).",
                      "Data transfer is in progress (3).",
                      "Data transfer completed successfully (4).",
                      "Data transfer failed (5).",
                      "Data transfer is cancelled (6)."
                    ]
                  },
                  "params": {
                    "type": "object",
                    "readOnly": true,
                    "description": "Output only. Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object."
                    }
                  },
                  "userId": {
                    "type": "string",
                    "format": "int64",
                    "description": "Deprecated. Unique ID of the user on whose behalf transfer is done."
                  },
                  "endTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Time when transfer run ended. Parameter ignored by server for input requests."
                  },
                  "runTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "For batch transfer runs, specifies the date and time of the data should be ingested."
                  },
                  "schedule": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Describes the schedule of this transfer run if it was created as part of a regular schedule. For batch transfer runs that are scheduled manually, this is empty. NOTE: the system might choose to delay the schedule depending on the current load, so `schedule_time` doesn't always match this."
                  },
                  "startTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Time when transfer run was started. Parameter ignored by server for input requests."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Last time the data transfer run state was updated."
                  },
                  "errorStatus": {
                    "id": "Status",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The status code, which should be an enum value of google.rpc.Code."
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object. Contains field @type with type URL."
                          }
                        },
                        "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                      },
                      "message": {
                        "type": "string",
                        "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                      }
                    },
                    "description": "Status of the transfer run."
                  },
                  "dataSourceId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Data source id."
                  },
                  "scheduleTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Minimum time after which a transfer run can be started."
                  },
                  "emailPreferences": {
                    "id": "EmailPreferences",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "enableFailureEmail": {
                        "type": "boolean",
                        "description": "If true, email notifications will be sent on transfer run failures."
                      }
                    },
                    "description": "Output only. Email notifications will be sent according to these preferences to the email address of the user who owns the transfer config this run was derived from."
                  },
                  "destinationDatasetId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The BigQuery target dataset id."
                  },
                  "notificationPubsubTopic": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Pub/Sub topic where a notification will be sent after this transfer run finishes"
                  }
                },
                "description": "Represents a data transfer run."
              },
              "readOnly": true,
              "description": "Output only. The stored pipeline transfer runs."
            },
            "nextPageToken": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The next-pagination token. For multiple-page list results, this token can be used as the `ListTransferRunsRequest.page_token` to request the next page of list results."
            }
          },
          "description": "The returned list of pipelines in the project."
        }
      ]
  projects.locations.transferConfigs.runs.transferLogs.list:
    description: |-
      Returns user facing log messages for the data transfer run.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.locations.transferConfigs.runs.transferLogs/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListTransferLogsResponse",
          "type": "object",
          "properties": {
            "nextPageToken": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The next-pagination token. For multiple-page list results, this token can be used as the `GetTransferRunLogRequest.page_token` to request the next page of list results."
            },
            "transferMessages": {
              "type": "array",
              "items": {
                "id": "TransferMessage",
                "type": "object",
                "properties": {
                  "severity": {
                    "enum": [
                      "MESSAGE_SEVERITY_UNSPECIFIED",
                      "INFO",
                      "WARNING",
                      "ERROR"
                    ],
                    "type": "string",
                    "description": "Message severity.",
                    "enumDescriptions": [
                      "No severity specified.",
                      "Informational message.",
                      "Warning message.",
                      "Error message."
                    ]
                  },
                  "messageText": {
                    "type": "string",
                    "description": "Message text."
                  },
                  "messageTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Time when message was logged."
                  }
                },
                "description": "Represents a user facing message for a particular data transfer run."
              },
              "readOnly": true,
              "description": "Output only. The stored pipeline transfer messages."
            }
          },
          "description": "The returned list transfer run messages."
        }
      ]
  projects.locations.transferConfigs.scheduleRuns:
    description: |-
      Creates transfer runs for a time range [start_time, end_time]. For each date - or whatever granularity the data source supports - in the range, one transfer run is created. Note that runs are created per UTC time in the time range. DEPRECATED: use StartManualTransferRuns instead.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.locations.transferConfigs/scheduleRuns
    example:
      inputs: [
        {
          "id": "ScheduleTransferRunsRequest",
          "type": "object",
          "properties": {
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Required. End time of the range of transfer runs. For example, `\"2017-05-30T00:00:00+00:00\"`."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Required. Start time of the range of transfer runs. For example, `\"2017-05-25T00:00:00+00:00\"`."
            }
          },
          "description": "A request to schedule transfer runs for a time range."
        }
      ]
      outputs: [
        {
          "id": "ScheduleTransferRunsResponse",
          "type": "object",
          "properties": {
            "runs": {
              "type": "array",
              "items": {
                "id": "TransferRun",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The resource name of the transfer run. Transfer run names have the form `projects/{project_id}/locations/{location}/transferConfigs/{config_id}/runs/{run_id}`. The name is ignored when creating a transfer run."
                  },
                  "state": {
                    "enum": [
                      "TRANSFER_STATE_UNSPECIFIED",
                      "PENDING",
                      "RUNNING",
                      "SUCCEEDED",
                      "FAILED",
                      "CANCELLED"
                    ],
                    "type": "string",
                    "description": "Data transfer run state. Ignored for input requests.",
                    "enumDescriptions": [
                      "State placeholder (0).",
                      "Data transfer is scheduled and is waiting to be picked up by data transfer backend (2).",
                      "Data transfer is in progress (3).",
                      "Data transfer completed successfully (4).",
                      "Data transfer failed (5).",
                      "Data transfer is cancelled (6)."
                    ]
                  },
                  "params": {
                    "type": "object",
                    "readOnly": true,
                    "description": "Output only. Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object."
                    }
                  },
                  "userId": {
                    "type": "string",
                    "format": "int64",
                    "description": "Deprecated. Unique ID of the user on whose behalf transfer is done."
                  },
                  "endTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Time when transfer run ended. Parameter ignored by server for input requests."
                  },
                  "runTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "For batch transfer runs, specifies the date and time of the data should be ingested."
                  },
                  "schedule": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Describes the schedule of this transfer run if it was created as part of a regular schedule. For batch transfer runs that are scheduled manually, this is empty. NOTE: the system might choose to delay the schedule depending on the current load, so `schedule_time` doesn't always match this."
                  },
                  "startTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Time when transfer run was started. Parameter ignored by server for input requests."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Last time the data transfer run state was updated."
                  },
                  "errorStatus": {
                    "id": "Status",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The status code, which should be an enum value of google.rpc.Code."
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object. Contains field @type with type URL."
                          }
                        },
                        "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                      },
                      "message": {
                        "type": "string",
                        "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                      }
                    },
                    "description": "Status of the transfer run."
                  },
                  "dataSourceId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Data source id."
                  },
                  "scheduleTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Minimum time after which a transfer run can be started."
                  },
                  "emailPreferences": {
                    "id": "EmailPreferences",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "enableFailureEmail": {
                        "type": "boolean",
                        "description": "If true, email notifications will be sent on transfer run failures."
                      }
                    },
                    "description": "Output only. Email notifications will be sent according to these preferences to the email address of the user who owns the transfer config this run was derived from."
                  },
                  "destinationDatasetId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The BigQuery target dataset id."
                  },
                  "notificationPubsubTopic": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Pub/Sub topic where a notification will be sent after this transfer run finishes"
                  }
                },
                "description": "Represents a data transfer run."
              },
              "description": "The transfer runs that were scheduled."
            }
          },
          "description": "A response to schedule transfer runs for a time range."
        }
      ]
  projects.locations.transferConfigs.startManualRuns:
    description: |-
      Start manual transfer runs to be executed now with schedule_time equal to current time. The transfer runs can be created for a time range where the run_time is between start_time (inclusive) and end_time (exclusive), or for a specific run_time.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.locations.transferConfigs/startManualRuns
    example:
      inputs: [
        {
          "id": "StartManualTransferRunsRequest",
          "type": "object",
          "properties": {
            "requestedRunTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Specific run_time for a transfer run to be started. The requested_run_time must not be in the future."
            },
            "requestedTimeRange": {
              "id": "TimeRange",
              "type": "object",
              "properties": {
                "endTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "End time of the range of transfer runs. For example, `\"2017-05-30T00:00:00+00:00\"`. The end_time must not be in the future. Creates transfer runs where run_time is in the range between start_time (inclusive) and end_time (exclusive)."
                },
                "startTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "Start time of the range of transfer runs. For example, `\"2017-05-25T00:00:00+00:00\"`. The start_time must be strictly less than the end_time. Creates transfer runs where run_time is in the range between start_time (inclusive) and end_time (exclusive)."
                }
              },
              "description": "Time range for the transfer runs that should be started."
            }
          },
          "description": "A request to start manual transfer runs."
        }
      ]
      outputs: [
        {
          "id": "StartManualTransferRunsResponse",
          "type": "object",
          "properties": {
            "runs": {
              "type": "array",
              "items": {
                "id": "TransferRun",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The resource name of the transfer run. Transfer run names have the form `projects/{project_id}/locations/{location}/transferConfigs/{config_id}/runs/{run_id}`. The name is ignored when creating a transfer run."
                  },
                  "state": {
                    "enum": [
                      "TRANSFER_STATE_UNSPECIFIED",
                      "PENDING",
                      "RUNNING",
                      "SUCCEEDED",
                      "FAILED",
                      "CANCELLED"
                    ],
                    "type": "string",
                    "description": "Data transfer run state. Ignored for input requests.",
                    "enumDescriptions": [
                      "State placeholder (0).",
                      "Data transfer is scheduled and is waiting to be picked up by data transfer backend (2).",
                      "Data transfer is in progress (3).",
                      "Data transfer completed successfully (4).",
                      "Data transfer failed (5).",
                      "Data transfer is cancelled (6)."
                    ]
                  },
                  "params": {
                    "type": "object",
                    "readOnly": true,
                    "description": "Output only. Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object."
                    }
                  },
                  "userId": {
                    "type": "string",
                    "format": "int64",
                    "description": "Deprecated. Unique ID of the user on whose behalf transfer is done."
                  },
                  "endTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Time when transfer run ended. Parameter ignored by server for input requests."
                  },
                  "runTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "For batch transfer runs, specifies the date and time of the data should be ingested."
                  },
                  "schedule": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Describes the schedule of this transfer run if it was created as part of a regular schedule. For batch transfer runs that are scheduled manually, this is empty. NOTE: the system might choose to delay the schedule depending on the current load, so `schedule_time` doesn't always match this."
                  },
                  "startTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Time when transfer run was started. Parameter ignored by server for input requests."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Last time the data transfer run state was updated."
                  },
                  "errorStatus": {
                    "id": "Status",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The status code, which should be an enum value of google.rpc.Code."
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object. Contains field @type with type URL."
                          }
                        },
                        "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                      },
                      "message": {
                        "type": "string",
                        "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                      }
                    },
                    "description": "Status of the transfer run."
                  },
                  "dataSourceId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Data source id."
                  },
                  "scheduleTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Minimum time after which a transfer run can be started."
                  },
                  "emailPreferences": {
                    "id": "EmailPreferences",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "enableFailureEmail": {
                        "type": "boolean",
                        "description": "If true, email notifications will be sent on transfer run failures."
                      }
                    },
                    "description": "Output only. Email notifications will be sent according to these preferences to the email address of the user who owns the transfer config this run was derived from."
                  },
                  "destinationDatasetId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The BigQuery target dataset id."
                  },
                  "notificationPubsubTopic": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Pub/Sub topic where a notification will be sent after this transfer run finishes"
                  }
                },
                "description": "Represents a data transfer run."
              },
              "description": "The transfer runs that were created."
            }
          },
          "description": "A response to start manual transfer runs."
        }
      ]
  projects.transferConfigs.create:
    description: |-
      Creates a new data transfer configuration.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.transferConfigs/create
    example:
      inputs: [
        {
          "id": "TransferConfig",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The resource name of the transfer config. Transfer config names have the form `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`. Where `config_id` is usually a uuid, even though it is not guaranteed or required. The name is ignored when creating a transfer config."
            },
            "state": {
              "enum": [
                "TRANSFER_STATE_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "SUCCEEDED",
                "FAILED",
                "CANCELLED"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. State of the most recently updated transfer run.",
              "enumDescriptions": [
                "State placeholder (0).",
                "Data transfer is scheduled and is waiting to be picked up by data transfer backend (2).",
                "Data transfer is in progress (3).",
                "Data transfer completed successfully (4).",
                "Data transfer failed (5).",
                "Data transfer is cancelled (6)."
              ]
            },
            "params": {
              "type": "object",
              "description": "Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object."
              }
            },
            "userId": {
              "type": "string",
              "format": "int64",
              "description": "Deprecated. Unique ID of the user on whose behalf transfer is done."
            },
            "disabled": {
              "type": "boolean",
              "description": "Is this config disabled. When set to true, no runs are scheduled for a given transfer."
            },
            "schedule": {
              "type": "string",
              "description": "Data transfer schedule. If the data source does not support a custom schedule, this should be empty. If it is empty, the default value for the data source will be used. The specified times are in UTC. Examples of valid format: `1st,3rd monday of month 15:30`, `every wed,fri of jan,jun 13:15`, and `first sunday of quarter 00:00`. See more explanation about the format here: https://cloud.google.com/appengine/docs/flexible/python/scheduling-jobs-with-cron-yaml#the_schedule_format NOTE: the granularity should be at least 8 hours, or less frequent."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Data transfer modification time. Ignored by server on input."
            },
            "displayName": {
              "type": "string",
              "description": "User specified display name for the data transfer."
            },
            "nextRunTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Next time when data transfer will run."
            },
            "dataSourceId": {
              "type": "string",
              "description": "Data source id. Cannot be changed once data transfer is created."
            },
            "datasetRegion": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Region in which BigQuery dataset is located."
            },
            "scheduleOptions": {
              "id": "ScheduleOptions",
              "type": "object",
              "properties": {
                "endTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "Defines time to stop scheduling transfer runs. A transfer run cannot be scheduled at or after the end time. The end time can be changed at any moment. The time when a data transfer can be trigerred manually is not limited by this option."
                },
                "startTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "Specifies time to start scheduling transfer runs. The first run will be scheduled at or after the start time according to a recurrence pattern defined in the schedule string. The start time can be changed at any moment. The time when a data transfer can be trigerred manually is not limited by this option."
                },
                "disableAutoScheduling": {
                  "type": "boolean",
                  "description": "If true, automatic scheduling of data transfer runs for this configuration will be disabled. The runs can be started on ad-hoc basis using StartManualTransferRuns API. When automatic scheduling is disabled, the TransferConfig.schedule field will be ignored."
                }
              },
              "description": "Options customizing the data transfer schedule."
            },
            "emailPreferences": {
              "id": "EmailPreferences",
              "type": "object",
              "properties": {
                "enableFailureEmail": {
                  "type": "boolean",
                  "description": "If true, email notifications will be sent on transfer run failures."
                }
              },
              "description": "Email notifications will be sent according to these preferences to the email address of the user who owns this transfer config."
            },
            "destinationDatasetId": {
              "type": "string",
              "description": "The BigQuery target dataset id."
            },
            "dataRefreshWindowDays": {
              "type": "integer",
              "format": "int32",
              "description": "The number of days to look back to automatically refresh the data. For example, if `data_refresh_window_days = 10`, then every day BigQuery reingests data for [today-10, today-1], rather than ingesting data for just [today-1]. Only valid if the data source supports the feature. Set the value to 0 to use the default value."
            },
            "notificationPubsubTopic": {
              "type": "string",
              "description": "Pub/Sub topic where notifications will be sent after transfer runs associated with this transfer config finish."
            }
          },
          "description": "Represents a data transfer configuration. A transfer configuration contains all metadata needed to perform a data transfer. For example, `destination_dataset_id` specifies where data should be stored. When a new transfer configuration is created, the specified `destination_dataset_id` is created when needed and shared with the appropriate data source service account."
        }
      ]
      outputs: [
        {}
      ]
  projects.transferConfigs.delete:
    description: |-
      Deletes a data transfer configuration, including any associated transfer runs and logs.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.transferConfigs/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  projects.transferConfigs.get:
    description: |-
      Returns information about a data transfer config.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.transferConfigs/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.transferConfigs.list:
    description: |-
      Returns information about all data transfers in the project.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.transferConfigs/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListTransferConfigsResponse",
          "type": "object",
          "properties": {
            "nextPageToken": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The next-pagination token. For multiple-page list results, this token can be used as the `ListTransferConfigsRequest.page_token` to request the next page of list results."
            },
            "transferConfigs": {
              "type": "array",
              "items": {
                "id": "TransferConfig",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The resource name of the transfer config. Transfer config names have the form `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`. Where `config_id` is usually a uuid, even though it is not guaranteed or required. The name is ignored when creating a transfer config."
                  },
                  "state": {
                    "enum": [
                      "TRANSFER_STATE_UNSPECIFIED",
                      "PENDING",
                      "RUNNING",
                      "SUCCEEDED",
                      "FAILED",
                      "CANCELLED"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. State of the most recently updated transfer run.",
                    "enumDescriptions": [
                      "State placeholder (0).",
                      "Data transfer is scheduled and is waiting to be picked up by data transfer backend (2).",
                      "Data transfer is in progress (3).",
                      "Data transfer completed successfully (4).",
                      "Data transfer failed (5).",
                      "Data transfer is cancelled (6)."
                    ]
                  },
                  "params": {
                    "type": "object",
                    "description": "Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object."
                    }
                  },
                  "userId": {
                    "type": "string",
                    "format": "int64",
                    "description": "Deprecated. Unique ID of the user on whose behalf transfer is done."
                  },
                  "disabled": {
                    "type": "boolean",
                    "description": "Is this config disabled. When set to true, no runs are scheduled for a given transfer."
                  },
                  "schedule": {
                    "type": "string",
                    "description": "Data transfer schedule. If the data source does not support a custom schedule, this should be empty. If it is empty, the default value for the data source will be used. The specified times are in UTC. Examples of valid format: `1st,3rd monday of month 15:30`, `every wed,fri of jan,jun 13:15`, and `first sunday of quarter 00:00`. See more explanation about the format here: https://cloud.google.com/appengine/docs/flexible/python/scheduling-jobs-with-cron-yaml#the_schedule_format NOTE: the granularity should be at least 8 hours, or less frequent."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Data transfer modification time. Ignored by server on input."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "User specified display name for the data transfer."
                  },
                  "nextRunTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Next time when data transfer will run."
                  },
                  "dataSourceId": {
                    "type": "string",
                    "description": "Data source id. Cannot be changed once data transfer is created."
                  },
                  "datasetRegion": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Region in which BigQuery dataset is located."
                  },
                  "scheduleOptions": {
                    "id": "ScheduleOptions",
                    "type": "object",
                    "properties": {
                      "endTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "Defines time to stop scheduling transfer runs. A transfer run cannot be scheduled at or after the end time. The end time can be changed at any moment. The time when a data transfer can be trigerred manually is not limited by this option."
                      },
                      "startTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "Specifies time to start scheduling transfer runs. The first run will be scheduled at or after the start time according to a recurrence pattern defined in the schedule string. The start time can be changed at any moment. The time when a data transfer can be trigerred manually is not limited by this option."
                      },
                      "disableAutoScheduling": {
                        "type": "boolean",
                        "description": "If true, automatic scheduling of data transfer runs for this configuration will be disabled. The runs can be started on ad-hoc basis using StartManualTransferRuns API. When automatic scheduling is disabled, the TransferConfig.schedule field will be ignored."
                      }
                    },
                    "description": "Options customizing the data transfer schedule."
                  },
                  "emailPreferences": {
                    "id": "EmailPreferences",
                    "type": "object",
                    "properties": {
                      "enableFailureEmail": {
                        "type": "boolean",
                        "description": "If true, email notifications will be sent on transfer run failures."
                      }
                    },
                    "description": "Email notifications will be sent according to these preferences to the email address of the user who owns this transfer config."
                  },
                  "destinationDatasetId": {
                    "type": "string",
                    "description": "The BigQuery target dataset id."
                  },
                  "dataRefreshWindowDays": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of days to look back to automatically refresh the data. For example, if `data_refresh_window_days = 10`, then every day BigQuery reingests data for [today-10, today-1], rather than ingesting data for just [today-1]. Only valid if the data source supports the feature. Set the value to 0 to use the default value."
                  },
                  "notificationPubsubTopic": {
                    "type": "string",
                    "description": "Pub/Sub topic where notifications will be sent after transfer runs associated with this transfer config finish."
                  }
                },
                "description": "Represents a data transfer configuration. A transfer configuration contains all metadata needed to perform a data transfer. For example, `destination_dataset_id` specifies where data should be stored. When a new transfer configuration is created, the specified `destination_dataset_id` is created when needed and shared with the appropriate data source service account."
              },
              "readOnly": true,
              "description": "Output only. The stored pipeline transfer configurations."
            }
          },
          "description": "The returned list of pipelines in the project."
        }
      ]
  projects.transferConfigs.patch:
    description: |-
      Updates a data transfer configuration. All fields must be set, even if they are not updated.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.transferConfigs/patch
    example:
      inputs: [
        {
          "id": "TransferConfig",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The resource name of the transfer config. Transfer config names have the form `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`. Where `config_id` is usually a uuid, even though it is not guaranteed or required. The name is ignored when creating a transfer config."
            },
            "state": {
              "enum": [
                "TRANSFER_STATE_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "SUCCEEDED",
                "FAILED",
                "CANCELLED"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. State of the most recently updated transfer run.",
              "enumDescriptions": [
                "State placeholder (0).",
                "Data transfer is scheduled and is waiting to be picked up by data transfer backend (2).",
                "Data transfer is in progress (3).",
                "Data transfer completed successfully (4).",
                "Data transfer failed (5).",
                "Data transfer is cancelled (6)."
              ]
            },
            "params": {
              "type": "object",
              "description": "Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object."
              }
            },
            "userId": {
              "type": "string",
              "format": "int64",
              "description": "Deprecated. Unique ID of the user on whose behalf transfer is done."
            },
            "disabled": {
              "type": "boolean",
              "description": "Is this config disabled. When set to true, no runs are scheduled for a given transfer."
            },
            "schedule": {
              "type": "string",
              "description": "Data transfer schedule. If the data source does not support a custom schedule, this should be empty. If it is empty, the default value for the data source will be used. The specified times are in UTC. Examples of valid format: `1st,3rd monday of month 15:30`, `every wed,fri of jan,jun 13:15`, and `first sunday of quarter 00:00`. See more explanation about the format here: https://cloud.google.com/appengine/docs/flexible/python/scheduling-jobs-with-cron-yaml#the_schedule_format NOTE: the granularity should be at least 8 hours, or less frequent."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Data transfer modification time. Ignored by server on input."
            },
            "displayName": {
              "type": "string",
              "description": "User specified display name for the data transfer."
            },
            "nextRunTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Next time when data transfer will run."
            },
            "dataSourceId": {
              "type": "string",
              "description": "Data source id. Cannot be changed once data transfer is created."
            },
            "datasetRegion": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Region in which BigQuery dataset is located."
            },
            "scheduleOptions": {
              "id": "ScheduleOptions",
              "type": "object",
              "properties": {
                "endTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "Defines time to stop scheduling transfer runs. A transfer run cannot be scheduled at or after the end time. The end time can be changed at any moment. The time when a data transfer can be trigerred manually is not limited by this option."
                },
                "startTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "Specifies time to start scheduling transfer runs. The first run will be scheduled at or after the start time according to a recurrence pattern defined in the schedule string. The start time can be changed at any moment. The time when a data transfer can be trigerred manually is not limited by this option."
                },
                "disableAutoScheduling": {
                  "type": "boolean",
                  "description": "If true, automatic scheduling of data transfer runs for this configuration will be disabled. The runs can be started on ad-hoc basis using StartManualTransferRuns API. When automatic scheduling is disabled, the TransferConfig.schedule field will be ignored."
                }
              },
              "description": "Options customizing the data transfer schedule."
            },
            "emailPreferences": {
              "id": "EmailPreferences",
              "type": "object",
              "properties": {
                "enableFailureEmail": {
                  "type": "boolean",
                  "description": "If true, email notifications will be sent on transfer run failures."
                }
              },
              "description": "Email notifications will be sent according to these preferences to the email address of the user who owns this transfer config."
            },
            "destinationDatasetId": {
              "type": "string",
              "description": "The BigQuery target dataset id."
            },
            "dataRefreshWindowDays": {
              "type": "integer",
              "format": "int32",
              "description": "The number of days to look back to automatically refresh the data. For example, if `data_refresh_window_days = 10`, then every day BigQuery reingests data for [today-10, today-1], rather than ingesting data for just [today-1]. Only valid if the data source supports the feature. Set the value to 0 to use the default value."
            },
            "notificationPubsubTopic": {
              "type": "string",
              "description": "Pub/Sub topic where notifications will be sent after transfer runs associated with this transfer config finish."
            }
          },
          "description": "Represents a data transfer configuration. A transfer configuration contains all metadata needed to perform a data transfer. For example, `destination_dataset_id` specifies where data should be stored. When a new transfer configuration is created, the specified `destination_dataset_id` is created when needed and shared with the appropriate data source service account."
        }
      ]
      outputs: [
        {}
      ]
  projects.transferConfigs.runs.delete:
    description: |-
      Deletes the specified transfer run.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.transferConfigs.runs/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  projects.transferConfigs.runs.get:
    description: |-
      Returns information about the particular transfer run.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.transferConfigs.runs/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "TransferRun",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The resource name of the transfer run. Transfer run names have the form `projects/{project_id}/locations/{location}/transferConfigs/{config_id}/runs/{run_id}`. The name is ignored when creating a transfer run."
            },
            "state": {
              "enum": [
                "TRANSFER_STATE_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "SUCCEEDED",
                "FAILED",
                "CANCELLED"
              ],
              "type": "string",
              "description": "Data transfer run state. Ignored for input requests.",
              "enumDescriptions": [
                "State placeholder (0).",
                "Data transfer is scheduled and is waiting to be picked up by data transfer backend (2).",
                "Data transfer is in progress (3).",
                "Data transfer completed successfully (4).",
                "Data transfer failed (5).",
                "Data transfer is cancelled (6)."
              ]
            },
            "params": {
              "type": "object",
              "readOnly": true,
              "description": "Output only. Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object."
              }
            },
            "userId": {
              "type": "string",
              "format": "int64",
              "description": "Deprecated. Unique ID of the user on whose behalf transfer is done."
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Time when transfer run ended. Parameter ignored by server for input requests."
            },
            "runTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "For batch transfer runs, specifies the date and time of the data should be ingested."
            },
            "schedule": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Describes the schedule of this transfer run if it was created as part of a regular schedule. For batch transfer runs that are scheduled manually, this is empty. NOTE: the system might choose to delay the schedule depending on the current load, so `schedule_time` doesn't always match this."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Time when transfer run was started. Parameter ignored by server for input requests."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "readOnly": true,
              "description": "Output only. Last time the data transfer run state was updated."
            },
            "errorStatus": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "Status of the transfer run."
            },
            "dataSourceId": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Data source id."
            },
            "scheduleTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Minimum time after which a transfer run can be started."
            },
            "emailPreferences": {
              "id": "EmailPreferences",
              "type": "object",
              "readOnly": true,
              "properties": {
                "enableFailureEmail": {
                  "type": "boolean",
                  "description": "If true, email notifications will be sent on transfer run failures."
                }
              },
              "description": "Output only. Email notifications will be sent according to these preferences to the email address of the user who owns the transfer config this run was derived from."
            },
            "destinationDatasetId": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The BigQuery target dataset id."
            },
            "notificationPubsubTopic": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. Pub/Sub topic where a notification will be sent after this transfer run finishes"
            }
          },
          "description": "Represents a data transfer run."
        }
      ]
  projects.transferConfigs.runs.list:
    description: |-
      Returns information about running and completed jobs.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.transferConfigs.runs/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListTransferRunsResponse",
          "type": "object",
          "properties": {
            "transferRuns": {
              "type": "array",
              "items": {
                "id": "TransferRun",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The resource name of the transfer run. Transfer run names have the form `projects/{project_id}/locations/{location}/transferConfigs/{config_id}/runs/{run_id}`. The name is ignored when creating a transfer run."
                  },
                  "state": {
                    "enum": [
                      "TRANSFER_STATE_UNSPECIFIED",
                      "PENDING",
                      "RUNNING",
                      "SUCCEEDED",
                      "FAILED",
                      "CANCELLED"
                    ],
                    "type": "string",
                    "description": "Data transfer run state. Ignored for input requests.",
                    "enumDescriptions": [
                      "State placeholder (0).",
                      "Data transfer is scheduled and is waiting to be picked up by data transfer backend (2).",
                      "Data transfer is in progress (3).",
                      "Data transfer completed successfully (4).",
                      "Data transfer failed (5).",
                      "Data transfer is cancelled (6)."
                    ]
                  },
                  "params": {
                    "type": "object",
                    "readOnly": true,
                    "description": "Output only. Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object."
                    }
                  },
                  "userId": {
                    "type": "string",
                    "format": "int64",
                    "description": "Deprecated. Unique ID of the user on whose behalf transfer is done."
                  },
                  "endTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Time when transfer run ended. Parameter ignored by server for input requests."
                  },
                  "runTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "For batch transfer runs, specifies the date and time of the data should be ingested."
                  },
                  "schedule": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Describes the schedule of this transfer run if it was created as part of a regular schedule. For batch transfer runs that are scheduled manually, this is empty. NOTE: the system might choose to delay the schedule depending on the current load, so `schedule_time` doesn't always match this."
                  },
                  "startTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Time when transfer run was started. Parameter ignored by server for input requests."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Last time the data transfer run state was updated."
                  },
                  "errorStatus": {
                    "id": "Status",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The status code, which should be an enum value of google.rpc.Code."
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object. Contains field @type with type URL."
                          }
                        },
                        "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                      },
                      "message": {
                        "type": "string",
                        "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                      }
                    },
                    "description": "Status of the transfer run."
                  },
                  "dataSourceId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Data source id."
                  },
                  "scheduleTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Minimum time after which a transfer run can be started."
                  },
                  "emailPreferences": {
                    "id": "EmailPreferences",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "enableFailureEmail": {
                        "type": "boolean",
                        "description": "If true, email notifications will be sent on transfer run failures."
                      }
                    },
                    "description": "Output only. Email notifications will be sent according to these preferences to the email address of the user who owns the transfer config this run was derived from."
                  },
                  "destinationDatasetId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The BigQuery target dataset id."
                  },
                  "notificationPubsubTopic": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Pub/Sub topic where a notification will be sent after this transfer run finishes"
                  }
                },
                "description": "Represents a data transfer run."
              },
              "readOnly": true,
              "description": "Output only. The stored pipeline transfer runs."
            },
            "nextPageToken": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The next-pagination token. For multiple-page list results, this token can be used as the `ListTransferRunsRequest.page_token` to request the next page of list results."
            }
          },
          "description": "The returned list of pipelines in the project."
        }
      ]
  projects.transferConfigs.runs.transferLogs.list:
    description: |-
      Returns user facing log messages for the data transfer run.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.transferConfigs.runs.transferLogs/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListTransferLogsResponse",
          "type": "object",
          "properties": {
            "nextPageToken": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The next-pagination token. For multiple-page list results, this token can be used as the `GetTransferRunLogRequest.page_token` to request the next page of list results."
            },
            "transferMessages": {
              "type": "array",
              "items": {
                "id": "TransferMessage",
                "type": "object",
                "properties": {
                  "severity": {
                    "enum": [
                      "MESSAGE_SEVERITY_UNSPECIFIED",
                      "INFO",
                      "WARNING",
                      "ERROR"
                    ],
                    "type": "string",
                    "description": "Message severity.",
                    "enumDescriptions": [
                      "No severity specified.",
                      "Informational message.",
                      "Warning message.",
                      "Error message."
                    ]
                  },
                  "messageText": {
                    "type": "string",
                    "description": "Message text."
                  },
                  "messageTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Time when message was logged."
                  }
                },
                "description": "Represents a user facing message for a particular data transfer run."
              },
              "readOnly": true,
              "description": "Output only. The stored pipeline transfer messages."
            }
          },
          "description": "The returned list transfer run messages."
        }
      ]
  projects.transferConfigs.scheduleRuns:
    description: |-
      Creates transfer runs for a time range [start_time, end_time]. For each date - or whatever granularity the data source supports - in the range, one transfer run is created. Note that runs are created per UTC time in the time range. DEPRECATED: use StartManualTransferRuns instead.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.transferConfigs/scheduleRuns
    example:
      inputs: [
        {
          "id": "ScheduleTransferRunsRequest",
          "type": "object",
          "properties": {
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Required. End time of the range of transfer runs. For example, `\"2017-05-30T00:00:00+00:00\"`."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Required. Start time of the range of transfer runs. For example, `\"2017-05-25T00:00:00+00:00\"`."
            }
          },
          "description": "A request to schedule transfer runs for a time range."
        }
      ]
      outputs: [
        {
          "id": "ScheduleTransferRunsResponse",
          "type": "object",
          "properties": {
            "runs": {
              "type": "array",
              "items": {
                "id": "TransferRun",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The resource name of the transfer run. Transfer run names have the form `projects/{project_id}/locations/{location}/transferConfigs/{config_id}/runs/{run_id}`. The name is ignored when creating a transfer run."
                  },
                  "state": {
                    "enum": [
                      "TRANSFER_STATE_UNSPECIFIED",
                      "PENDING",
                      "RUNNING",
                      "SUCCEEDED",
                      "FAILED",
                      "CANCELLED"
                    ],
                    "type": "string",
                    "description": "Data transfer run state. Ignored for input requests.",
                    "enumDescriptions": [
                      "State placeholder (0).",
                      "Data transfer is scheduled and is waiting to be picked up by data transfer backend (2).",
                      "Data transfer is in progress (3).",
                      "Data transfer completed successfully (4).",
                      "Data transfer failed (5).",
                      "Data transfer is cancelled (6)."
                    ]
                  },
                  "params": {
                    "type": "object",
                    "readOnly": true,
                    "description": "Output only. Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object."
                    }
                  },
                  "userId": {
                    "type": "string",
                    "format": "int64",
                    "description": "Deprecated. Unique ID of the user on whose behalf transfer is done."
                  },
                  "endTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Time when transfer run ended. Parameter ignored by server for input requests."
                  },
                  "runTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "For batch transfer runs, specifies the date and time of the data should be ingested."
                  },
                  "schedule": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Describes the schedule of this transfer run if it was created as part of a regular schedule. For batch transfer runs that are scheduled manually, this is empty. NOTE: the system might choose to delay the schedule depending on the current load, so `schedule_time` doesn't always match this."
                  },
                  "startTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Time when transfer run was started. Parameter ignored by server for input requests."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Last time the data transfer run state was updated."
                  },
                  "errorStatus": {
                    "id": "Status",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The status code, which should be an enum value of google.rpc.Code."
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object. Contains field @type with type URL."
                          }
                        },
                        "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                      },
                      "message": {
                        "type": "string",
                        "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                      }
                    },
                    "description": "Status of the transfer run."
                  },
                  "dataSourceId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Data source id."
                  },
                  "scheduleTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Minimum time after which a transfer run can be started."
                  },
                  "emailPreferences": {
                    "id": "EmailPreferences",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "enableFailureEmail": {
                        "type": "boolean",
                        "description": "If true, email notifications will be sent on transfer run failures."
                      }
                    },
                    "description": "Output only. Email notifications will be sent according to these preferences to the email address of the user who owns the transfer config this run was derived from."
                  },
                  "destinationDatasetId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The BigQuery target dataset id."
                  },
                  "notificationPubsubTopic": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Pub/Sub topic where a notification will be sent after this transfer run finishes"
                  }
                },
                "description": "Represents a data transfer run."
              },
              "description": "The transfer runs that were scheduled."
            }
          },
          "description": "A response to schedule transfer runs for a time range."
        }
      ]
  projects.transferConfigs.startManualRuns:
    description: |-
      Start manual transfer runs to be executed now with schedule_time equal to current time. The transfer runs can be created for a time range where the run_time is between start_time (inclusive) and end_time (exclusive), or for a specific run_time.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.transferConfigs/startManualRuns
    example:
      inputs: [
        {
          "id": "StartManualTransferRunsRequest",
          "type": "object",
          "properties": {
            "requestedRunTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Specific run_time for a transfer run to be started. The requested_run_time must not be in the future."
            },
            "requestedTimeRange": {
              "id": "TimeRange",
              "type": "object",
              "properties": {
                "endTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "End time of the range of transfer runs. For example, `\"2017-05-30T00:00:00+00:00\"`. The end_time must not be in the future. Creates transfer runs where run_time is in the range between start_time (inclusive) and end_time (exclusive)."
                },
                "startTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "Start time of the range of transfer runs. For example, `\"2017-05-25T00:00:00+00:00\"`. The start_time must be strictly less than the end_time. Creates transfer runs where run_time is in the range between start_time (inclusive) and end_time (exclusive)."
                }
              },
              "description": "Time range for the transfer runs that should be started."
            }
          },
          "description": "A request to start manual transfer runs."
        }
      ]
      outputs: [
        {
          "id": "StartManualTransferRunsResponse",
          "type": "object",
          "properties": {
            "runs": {
              "type": "array",
              "items": {
                "id": "TransferRun",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The resource name of the transfer run. Transfer run names have the form `projects/{project_id}/locations/{location}/transferConfigs/{config_id}/runs/{run_id}`. The name is ignored when creating a transfer run."
                  },
                  "state": {
                    "enum": [
                      "TRANSFER_STATE_UNSPECIFIED",
                      "PENDING",
                      "RUNNING",
                      "SUCCEEDED",
                      "FAILED",
                      "CANCELLED"
                    ],
                    "type": "string",
                    "description": "Data transfer run state. Ignored for input requests.",
                    "enumDescriptions": [
                      "State placeholder (0).",
                      "Data transfer is scheduled and is waiting to be picked up by data transfer backend (2).",
                      "Data transfer is in progress (3).",
                      "Data transfer completed successfully (4).",
                      "Data transfer failed (5).",
                      "Data transfer is cancelled (6)."
                    ]
                  },
                  "params": {
                    "type": "object",
                    "readOnly": true,
                    "description": "Output only. Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object."
                    }
                  },
                  "userId": {
                    "type": "string",
                    "format": "int64",
                    "description": "Deprecated. Unique ID of the user on whose behalf transfer is done."
                  },
                  "endTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Time when transfer run ended. Parameter ignored by server for input requests."
                  },
                  "runTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "For batch transfer runs, specifies the date and time of the data should be ingested."
                  },
                  "schedule": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Describes the schedule of this transfer run if it was created as part of a regular schedule. For batch transfer runs that are scheduled manually, this is empty. NOTE: the system might choose to delay the schedule depending on the current load, so `schedule_time` doesn't always match this."
                  },
                  "startTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Time when transfer run was started. Parameter ignored by server for input requests."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "readOnly": true,
                    "description": "Output only. Last time the data transfer run state was updated."
                  },
                  "errorStatus": {
                    "id": "Status",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The status code, which should be an enum value of google.rpc.Code."
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object. Contains field @type with type URL."
                          }
                        },
                        "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                      },
                      "message": {
                        "type": "string",
                        "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                      }
                    },
                    "description": "Status of the transfer run."
                  },
                  "dataSourceId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Data source id."
                  },
                  "scheduleTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Minimum time after which a transfer run can be started."
                  },
                  "emailPreferences": {
                    "id": "EmailPreferences",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "enableFailureEmail": {
                        "type": "boolean",
                        "description": "If true, email notifications will be sent on transfer run failures."
                      }
                    },
                    "description": "Output only. Email notifications will be sent according to these preferences to the email address of the user who owns the transfer config this run was derived from."
                  },
                  "destinationDatasetId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The BigQuery target dataset id."
                  },
                  "notificationPubsubTopic": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. Pub/Sub topic where a notification will be sent after this transfer run finishes"
                  }
                },
                "description": "Represents a data transfer run."
              },
              "description": "The transfer runs that were created."
            }
          },
          "description": "A response to start manual transfer runs."
        }
      ]