Product:
  name: GCP SQL
  versions: [1.0.0]
  package: google.gcp.sql
  description: |-
    Cloud SQL Admin
  link: https://cloud.google.com/sql
  contentType: json
Operations:
  backupRuns.delete:
    description: |-
      Deletes the backup taken by a backup run.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/backupRuns/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#operation*."
            },
            "name": {
              "type": "string",
              "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
            },
            "user": {
              "type": "string",
              "description": "The email address of the user who initiated this operation."
            },
            "error": {
              "id": "OperationErrors",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#operationErrors*."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "OperationError",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Identifies the specific error that occurred."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#operationError*."
                      },
                      "message": {
                        "type": "string",
                        "description": "Additional information about the error encountered."
                      }
                    },
                    "description": "Database instance operation error."
                  },
                  "description": "The list of errors encountered while processing this operation."
                }
              },
              "description": "If errors occurred during processing of this operation, this field will be populated."
            },
            "status": {
              "enum": [
                "SQL_OPERATION_STATUS_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
              "enumDescriptions": [
                "The state of the operation is unknown.",
                "The operation has been queued, but has not started yet.",
                "The operation is running.",
                "The operation completed."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "targetId": {
              "type": "string",
              "description": "Name of the database instance related to this operation."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "insertTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "targetLink": {
              "type": "string"
            },
            "exportContext": {
              "id": "ExportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs: //bucketName/fileName*. If the file already exists, the requests // succeeds, but the operation fails. If *fileType* is // *SQL* and the filename ends with .gz, the contents are // compressed."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#exportContext*."
                },
                "offload": {
                  "type": "boolean",
                  "description": "Option for export offload."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "databases": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
                },
                "csvExportOptions": {
                  "type": "object",
                  "properties": {
                    "selectQuery": {
                      "type": "string",
                      "description": "The select query used to extract the data."
                    }
                  },
                  "description": "Options for exporting data as CSV."
                },
                "sqlExportOptions": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
                    },
                    "schemaOnly": {
                      "type": "boolean",
                      "description": "Export only schemas."
                    },
                    "mysqlExportOptions": {
                      "type": "object",
                      "properties": {
                        "masterData": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored."
                        }
                      },
                      "description": "Options for exporting from MySQL."
                    }
                  },
                  "description": "Options for exporting data as SQL statements."
                }
              },
              "description": "The context for export operation, if applicable."
            },
            "importContext": {
              "id": "ImportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "Path to the import file in Cloud Storage, in the form *gs: //bucketName/fileName*. Compressed gzip files (.gz) are supported // when *fileType* is *SQL*. The instance must have // write permissions to the bucket and read access to the file."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#importContext*."
                },
                "database": {
                  "type": "string",
                  "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "importUser": {
                  "type": "string",
                  "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
                },
                "bakImportOptions": {
                  "type": "object",
                  "properties": {
                    "encryptionOptions": {
                      "type": "object",
                      "properties": {
                        "pvkPath": {
                          "type": "string",
                          "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "certPath": {
                          "type": "string",
                          "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "pvkPassword": {
                          "type": "string",
                          "description": "Password that encrypts the private key"
                        }
                      }
                    }
                  },
                  "description": "Import parameters specific to SQL Server .BAK files"
                },
                "csvImportOptions": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "description": "The table to which CSV data is imported."
                    },
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
                    }
                  },
                  "description": "Options for importing data as CSV."
                }
              },
              "description": "The context for import operation, if applicable."
            },
            "operationType": {
              "enum": [
                "SQL_OPERATION_TYPE_UNSPECIFIED",
                "IMPORT",
                "EXPORT",
                "CREATE",
                "UPDATE",
                "DELETE",
                "RESTART",
                "BACKUP",
                "SNAPSHOT",
                "BACKUP_VOLUME",
                "DELETE_VOLUME",
                "RESTORE_VOLUME",
                "INJECT_USER",
                "CLONE",
                "STOP_REPLICA",
                "START_REPLICA",
                "PROMOTE_REPLICA",
                "CREATE_REPLICA",
                "CREATE_USER",
                "DELETE_USER",
                "UPDATE_USER",
                "CREATE_DATABASE",
                "DELETE_DATABASE",
                "UPDATE_DATABASE",
                "FAILOVER",
                "DELETE_BACKUP",
                "RECREATE_REPLICA",
                "TRUNCATE_LOG",
                "DEMOTE_MASTER",
                "MAINTENANCE",
                "ENABLE_PRIVATE_IP",
                "DEFER_MAINTENANCE",
                "CREATE_CLONE",
                "RESCHEDULE_MAINTENANCE",
                "START_EXTERNAL_SYNC"
              ],
              "type": "string",
              "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*",
              "enumDescriptions": [
                "Unknown operation type.",
                "Imports data into a Cloud SQL instance.",
                "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
                "Creates a new Cloud SQL instance.",
                "Updates the settings of a Cloud SQL instance.",
                "Deletes a Cloud SQL instance.",
                "Restarts the Cloud SQL instance.",
                "",
                "",
                "Performs instance backup.",
                "Deletes an instance backup.",
                "Restores an instance backup.",
                "Injects a privileged user in mysql for MOB instances.",
                "Clones a Cloud SQL instance.",
                "Stops replication on a Cloud SQL read replica instance.",
                "Starts replication on a Cloud SQL read replica instance.",
                "Promotes a Cloud SQL replica instance.",
                "Creates a Cloud SQL replica instance.",
                "Creates a new user in a Cloud SQL instance.",
                "Deletes a user from a Cloud SQL instance.",
                "Updates an existing user in a Cloud SQL instance.",
                "Creates a database in the Cloud SQL instance.",
                "Deletes a database in the Cloud SQL instance.",
                "Updates a database in the Cloud SQL instance.",
                "Performs failover of an HA-enabled Cloud SQL failover replica.",
                "Deletes the backup taken by a backup run.",
                "",
                "Truncates a general or slow log table in MySQL.",
                "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
                "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
                "This field is deprecated, and will be removed in future version of API.",
                "",
                "Creates clone instance.",
                "Reschedule maintenance to another time.",
                "Starts external sync of a Cloud SQL EM replica to an external master."
              ]
            },
            "targetProject": {
              "type": "string",
              "description": "The project ID of the target instance related to this operation."
            }
          },
          "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource."
        }
      ]
  backupRuns.get:
    description: |-
      Retrieves a resource containing information about a backup run.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/backupRuns/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "BackupRun",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "int64",
              "description": "The identifier for this backup run. Unique only for a specific Cloud SQL instance."
            },
            "kind": {
              "type": "string",
              "description": "This is always *sql#backupRun*."
            },
            "type": {
              "enum": [
                "SQL_BACKUP_RUN_TYPE_UNSPECIFIED",
                "AUTOMATED",
                "ON_DEMAND"
              ],
              "type": "string",
              "description": "The type of this run; can be either \"AUTOMATED\" or \"ON_DEMAND\".",
              "enumDescriptions": [
                "This is an unknown BackupRun type.",
                "The backup schedule automatically triggers a backup.",
                "The user manually triggers a backup."
              ]
            },
            "error": {
              "id": "OperationError",
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Identifies the specific error that occurred."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#operationError*."
                },
                "message": {
                  "type": "string",
                  "description": "Additional information about the error encountered."
                }
              },
              "description": "Database instance operation error."
            },
            "status": {
              "enum": [
                "SQL_BACKUP_RUN_STATUS_UNSPECIFIED",
                "ENQUEUED",
                "OVERDUE",
                "RUNNING",
                "FAILED",
                "SUCCESSFUL",
                "SKIPPED",
                "DELETION_PENDING",
                "DELETION_FAILED",
                "DELETED"
              ],
              "type": "string",
              "description": "The status of this run.",
              "enumDescriptions": [
                "The status of the run is unknown.",
                "The backup operation was enqueued.",
                "The backup is overdue across a given backup window. Indicates a problem. Example: Long-running operation in progress during the whole window.",
                "The backup is in progress.",
                "The backup failed.",
                "The backup was successful.",
                "The backup was skipped (without problems) for a given backup window. Example: Instance was idle.",
                "The backup is about to be deleted.",
                "The backup deletion failed.",
                "The backup has been deleted."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time the backup operation completed in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "instance": {
              "type": "string",
              "description": "Name of the database instance."
            },
            "location": {
              "type": "string",
              "description": "Location of the backups."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time the backup operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "backupKind": {
              "enum": [
                "SQL_BACKUP_KIND_UNSPECIFIED",
                "SNAPSHOT",
                "PHYSICAL"
              ],
              "type": "string",
              "description": "Specifies the kind of backup, PHYSICAL or DEFAULT_SNAPSHOT.",
              "enumDescriptions": [
                "This is an unknown BackupKind.",
                "The snapshot based backups",
                "Physical backups"
              ]
            },
            "description": {
              "type": "string",
              "description": "The description of this run, only applicable to on-demand backups."
            },
            "enqueuedTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time the run was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "windowStartTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The start time of the backup window during which this the backup was attempted in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "diskEncryptionStatus": {
              "id": "DiskEncryptionStatus",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#diskEncryptionStatus*."
                },
                "kmsKeyVersionName": {
                  "type": "string",
                  "description": "KMS key version used to encrypt the Cloud SQL instance resource"
                }
              },
              "description": "Encryption status specific to a backup. Applies only to Second Generation instances."
            },
            "diskEncryptionConfiguration": {
              "id": "DiskEncryptionConfiguration",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#diskEncryptionConfiguration*."
                },
                "kmsKeyName": {
                  "type": "string",
                  "description": "Resource name of KMS key for disk encryption"
                }
              },
              "description": "Encryption configuration specific to a backup. Applies only to Second Generation instances."
            }
          },
          "description": "A BackupRun resource."
        }
      ]
  backupRuns.insert:
    description: |-
      Creates a new backup run on demand. This method is applicable only to Second Generation instances.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/backupRuns/insert
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#operation*."
            },
            "name": {
              "type": "string",
              "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
            },
            "user": {
              "type": "string",
              "description": "The email address of the user who initiated this operation."
            },
            "error": {
              "id": "OperationErrors",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#operationErrors*."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "OperationError",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Identifies the specific error that occurred."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#operationError*."
                      },
                      "message": {
                        "type": "string",
                        "description": "Additional information about the error encountered."
                      }
                    },
                    "description": "Database instance operation error."
                  },
                  "description": "The list of errors encountered while processing this operation."
                }
              },
              "description": "If errors occurred during processing of this operation, this field will be populated."
            },
            "status": {
              "enum": [
                "SQL_OPERATION_STATUS_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
              "enumDescriptions": [
                "The state of the operation is unknown.",
                "The operation has been queued, but has not started yet.",
                "The operation is running.",
                "The operation completed."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "targetId": {
              "type": "string",
              "description": "Name of the database instance related to this operation."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "insertTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "targetLink": {
              "type": "string"
            },
            "exportContext": {
              "id": "ExportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs: //bucketName/fileName*. If the file already exists, the requests // succeeds, but the operation fails. If *fileType* is // *SQL* and the filename ends with .gz, the contents are // compressed."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#exportContext*."
                },
                "offload": {
                  "type": "boolean",
                  "description": "Option for export offload."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "databases": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
                },
                "csvExportOptions": {
                  "type": "object",
                  "properties": {
                    "selectQuery": {
                      "type": "string",
                      "description": "The select query used to extract the data."
                    }
                  },
                  "description": "Options for exporting data as CSV."
                },
                "sqlExportOptions": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
                    },
                    "schemaOnly": {
                      "type": "boolean",
                      "description": "Export only schemas."
                    },
                    "mysqlExportOptions": {
                      "type": "object",
                      "properties": {
                        "masterData": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored."
                        }
                      },
                      "description": "Options for exporting from MySQL."
                    }
                  },
                  "description": "Options for exporting data as SQL statements."
                }
              },
              "description": "The context for export operation, if applicable."
            },
            "importContext": {
              "id": "ImportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "Path to the import file in Cloud Storage, in the form *gs: //bucketName/fileName*. Compressed gzip files (.gz) are supported // when *fileType* is *SQL*. The instance must have // write permissions to the bucket and read access to the file."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#importContext*."
                },
                "database": {
                  "type": "string",
                  "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "importUser": {
                  "type": "string",
                  "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
                },
                "bakImportOptions": {
                  "type": "object",
                  "properties": {
                    "encryptionOptions": {
                      "type": "object",
                      "properties": {
                        "pvkPath": {
                          "type": "string",
                          "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "certPath": {
                          "type": "string",
                          "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "pvkPassword": {
                          "type": "string",
                          "description": "Password that encrypts the private key"
                        }
                      }
                    }
                  },
                  "description": "Import parameters specific to SQL Server .BAK files"
                },
                "csvImportOptions": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "description": "The table to which CSV data is imported."
                    },
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
                    }
                  },
                  "description": "Options for importing data as CSV."
                }
              },
              "description": "The context for import operation, if applicable."
            },
            "operationType": {
              "enum": [
                "SQL_OPERATION_TYPE_UNSPECIFIED",
                "IMPORT",
                "EXPORT",
                "CREATE",
                "UPDATE",
                "DELETE",
                "RESTART",
                "BACKUP",
                "SNAPSHOT",
                "BACKUP_VOLUME",
                "DELETE_VOLUME",
                "RESTORE_VOLUME",
                "INJECT_USER",
                "CLONE",
                "STOP_REPLICA",
                "START_REPLICA",
                "PROMOTE_REPLICA",
                "CREATE_REPLICA",
                "CREATE_USER",
                "DELETE_USER",
                "UPDATE_USER",
                "CREATE_DATABASE",
                "DELETE_DATABASE",
                "UPDATE_DATABASE",
                "FAILOVER",
                "DELETE_BACKUP",
                "RECREATE_REPLICA",
                "TRUNCATE_LOG",
                "DEMOTE_MASTER",
                "MAINTENANCE",
                "ENABLE_PRIVATE_IP",
                "DEFER_MAINTENANCE",
                "CREATE_CLONE",
                "RESCHEDULE_MAINTENANCE",
                "START_EXTERNAL_SYNC"
              ],
              "type": "string",
              "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*",
              "enumDescriptions": [
                "Unknown operation type.",
                "Imports data into a Cloud SQL instance.",
                "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
                "Creates a new Cloud SQL instance.",
                "Updates the settings of a Cloud SQL instance.",
                "Deletes a Cloud SQL instance.",
                "Restarts the Cloud SQL instance.",
                "",
                "",
                "Performs instance backup.",
                "Deletes an instance backup.",
                "Restores an instance backup.",
                "Injects a privileged user in mysql for MOB instances.",
                "Clones a Cloud SQL instance.",
                "Stops replication on a Cloud SQL read replica instance.",
                "Starts replication on a Cloud SQL read replica instance.",
                "Promotes a Cloud SQL replica instance.",
                "Creates a Cloud SQL replica instance.",
                "Creates a new user in a Cloud SQL instance.",
                "Deletes a user from a Cloud SQL instance.",
                "Updates an existing user in a Cloud SQL instance.",
                "Creates a database in the Cloud SQL instance.",
                "Deletes a database in the Cloud SQL instance.",
                "Updates a database in the Cloud SQL instance.",
                "Performs failover of an HA-enabled Cloud SQL failover replica.",
                "Deletes the backup taken by a backup run.",
                "",
                "Truncates a general or slow log table in MySQL.",
                "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
                "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
                "This field is deprecated, and will be removed in future version of API.",
                "",
                "Creates clone instance.",
                "Reschedule maintenance to another time.",
                "Starts external sync of a Cloud SQL EM replica to an external master."
              ]
            },
            "targetProject": {
              "type": "string",
              "description": "The project ID of the target instance related to this operation."
            }
          },
          "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource."
        }
      ]
  backupRuns.list:
    description: |-
      Lists all backup runs associated with a given instance and configuration in the reverse chronological order of the backup initiation time.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/backupRuns/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "BackupRunsListResponse",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#backupRunsList*."
            },
            "items": {
              "type": "array",
              "items": {
                "id": "BackupRun",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "int64",
                    "description": "The identifier for this backup run. Unique only for a specific Cloud SQL instance."
                  },
                  "kind": {
                    "type": "string",
                    "description": "This is always *sql#backupRun*."
                  },
                  "type": {
                    "enum": [
                      "SQL_BACKUP_RUN_TYPE_UNSPECIFIED",
                      "AUTOMATED",
                      "ON_DEMAND"
                    ],
                    "type": "string",
                    "description": "The type of this run; can be either \"AUTOMATED\" or \"ON_DEMAND\".",
                    "enumDescriptions": [
                      "This is an unknown BackupRun type.",
                      "The backup schedule automatically triggers a backup.",
                      "The user manually triggers a backup."
                    ]
                  },
                  "error": {
                    "id": "OperationError",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Identifies the specific error that occurred."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#operationError*."
                      },
                      "message": {
                        "type": "string",
                        "description": "Additional information about the error encountered."
                      }
                    },
                    "description": "Database instance operation error."
                  },
                  "status": {
                    "enum": [
                      "SQL_BACKUP_RUN_STATUS_UNSPECIFIED",
                      "ENQUEUED",
                      "OVERDUE",
                      "RUNNING",
                      "FAILED",
                      "SUCCESSFUL",
                      "SKIPPED",
                      "DELETION_PENDING",
                      "DELETION_FAILED",
                      "DELETED"
                    ],
                    "type": "string",
                    "description": "The status of this run.",
                    "enumDescriptions": [
                      "The status of the run is unknown.",
                      "The backup operation was enqueued.",
                      "The backup is overdue across a given backup window. Indicates a problem. Example: Long-running operation in progress during the whole window.",
                      "The backup is in progress.",
                      "The backup failed.",
                      "The backup was successful.",
                      "The backup was skipped (without problems) for a given backup window. Example: Instance was idle.",
                      "The backup is about to be deleted.",
                      "The backup deletion failed.",
                      "The backup has been deleted."
                    ]
                  },
                  "endTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The time the backup operation completed in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
                  },
                  "instance": {
                    "type": "string",
                    "description": "Name of the database instance."
                  },
                  "location": {
                    "type": "string",
                    "description": "Location of the backups."
                  },
                  "selfLink": {
                    "type": "string",
                    "description": "The URI of this resource."
                  },
                  "startTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The time the backup operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
                  },
                  "backupKind": {
                    "enum": [
                      "SQL_BACKUP_KIND_UNSPECIFIED",
                      "SNAPSHOT",
                      "PHYSICAL"
                    ],
                    "type": "string",
                    "description": "Specifies the kind of backup, PHYSICAL or DEFAULT_SNAPSHOT.",
                    "enumDescriptions": [
                      "This is an unknown BackupKind.",
                      "The snapshot based backups",
                      "Physical backups"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of this run, only applicable to on-demand backups."
                  },
                  "enqueuedTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The time the run was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
                  },
                  "windowStartTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The start time of the backup window during which this the backup was attempted in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
                  },
                  "diskEncryptionStatus": {
                    "id": "DiskEncryptionStatus",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#diskEncryptionStatus*."
                      },
                      "kmsKeyVersionName": {
                        "type": "string",
                        "description": "KMS key version used to encrypt the Cloud SQL instance resource"
                      }
                    },
                    "description": "Encryption status specific to a backup. Applies only to Second Generation instances."
                  },
                  "diskEncryptionConfiguration": {
                    "id": "DiskEncryptionConfiguration",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#diskEncryptionConfiguration*."
                      },
                      "kmsKeyName": {
                        "type": "string",
                        "description": "Resource name of KMS key for disk encryption"
                      }
                    },
                    "description": "Encryption configuration specific to a backup. Applies only to Second Generation instances."
                  }
                },
                "description": "A BackupRun resource."
              },
              "description": "A list of backup runs in reverse chronological order of the enqueued time."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results."
            }
          },
          "description": "Backup run list results."
        }
      ]
  databases.delete:
    description: |-
      Deletes a database from a Cloud SQL instance.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/databases/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#operation*."
            },
            "name": {
              "type": "string",
              "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
            },
            "user": {
              "type": "string",
              "description": "The email address of the user who initiated this operation."
            },
            "error": {
              "id": "OperationErrors",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#operationErrors*."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "OperationError",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Identifies the specific error that occurred."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#operationError*."
                      },
                      "message": {
                        "type": "string",
                        "description": "Additional information about the error encountered."
                      }
                    },
                    "description": "Database instance operation error."
                  },
                  "description": "The list of errors encountered while processing this operation."
                }
              },
              "description": "If errors occurred during processing of this operation, this field will be populated."
            },
            "status": {
              "enum": [
                "SQL_OPERATION_STATUS_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
              "enumDescriptions": [
                "The state of the operation is unknown.",
                "The operation has been queued, but has not started yet.",
                "The operation is running.",
                "The operation completed."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "targetId": {
              "type": "string",
              "description": "Name of the database instance related to this operation."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "insertTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "targetLink": {
              "type": "string"
            },
            "exportContext": {
              "id": "ExportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs: //bucketName/fileName*. If the file already exists, the requests // succeeds, but the operation fails. If *fileType* is // *SQL* and the filename ends with .gz, the contents are // compressed."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#exportContext*."
                },
                "offload": {
                  "type": "boolean",
                  "description": "Option for export offload."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "databases": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
                },
                "csvExportOptions": {
                  "type": "object",
                  "properties": {
                    "selectQuery": {
                      "type": "string",
                      "description": "The select query used to extract the data."
                    }
                  },
                  "description": "Options for exporting data as CSV."
                },
                "sqlExportOptions": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
                    },
                    "schemaOnly": {
                      "type": "boolean",
                      "description": "Export only schemas."
                    },
                    "mysqlExportOptions": {
                      "type": "object",
                      "properties": {
                        "masterData": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored."
                        }
                      },
                      "description": "Options for exporting from MySQL."
                    }
                  },
                  "description": "Options for exporting data as SQL statements."
                }
              },
              "description": "The context for export operation, if applicable."
            },
            "importContext": {
              "id": "ImportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "Path to the import file in Cloud Storage, in the form *gs: //bucketName/fileName*. Compressed gzip files (.gz) are supported // when *fileType* is *SQL*. The instance must have // write permissions to the bucket and read access to the file."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#importContext*."
                },
                "database": {
                  "type": "string",
                  "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "importUser": {
                  "type": "string",
                  "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
                },
                "bakImportOptions": {
                  "type": "object",
                  "properties": {
                    "encryptionOptions": {
                      "type": "object",
                      "properties": {
                        "pvkPath": {
                          "type": "string",
                          "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "certPath": {
                          "type": "string",
                          "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "pvkPassword": {
                          "type": "string",
                          "description": "Password that encrypts the private key"
                        }
                      }
                    }
                  },
                  "description": "Import parameters specific to SQL Server .BAK files"
                },
                "csvImportOptions": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "description": "The table to which CSV data is imported."
                    },
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
                    }
                  },
                  "description": "Options for importing data as CSV."
                }
              },
              "description": "The context for import operation, if applicable."
            },
            "operationType": {
              "enum": [
                "SQL_OPERATION_TYPE_UNSPECIFIED",
                "IMPORT",
                "EXPORT",
                "CREATE",
                "UPDATE",
                "DELETE",
                "RESTART",
                "BACKUP",
                "SNAPSHOT",
                "BACKUP_VOLUME",
                "DELETE_VOLUME",
                "RESTORE_VOLUME",
                "INJECT_USER",
                "CLONE",
                "STOP_REPLICA",
                "START_REPLICA",
                "PROMOTE_REPLICA",
                "CREATE_REPLICA",
                "CREATE_USER",
                "DELETE_USER",
                "UPDATE_USER",
                "CREATE_DATABASE",
                "DELETE_DATABASE",
                "UPDATE_DATABASE",
                "FAILOVER",
                "DELETE_BACKUP",
                "RECREATE_REPLICA",
                "TRUNCATE_LOG",
                "DEMOTE_MASTER",
                "MAINTENANCE",
                "ENABLE_PRIVATE_IP",
                "DEFER_MAINTENANCE",
                "CREATE_CLONE",
                "RESCHEDULE_MAINTENANCE",
                "START_EXTERNAL_SYNC"
              ],
              "type": "string",
              "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*",
              "enumDescriptions": [
                "Unknown operation type.",
                "Imports data into a Cloud SQL instance.",
                "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
                "Creates a new Cloud SQL instance.",
                "Updates the settings of a Cloud SQL instance.",
                "Deletes a Cloud SQL instance.",
                "Restarts the Cloud SQL instance.",
                "",
                "",
                "Performs instance backup.",
                "Deletes an instance backup.",
                "Restores an instance backup.",
                "Injects a privileged user in mysql for MOB instances.",
                "Clones a Cloud SQL instance.",
                "Stops replication on a Cloud SQL read replica instance.",
                "Starts replication on a Cloud SQL read replica instance.",
                "Promotes a Cloud SQL replica instance.",
                "Creates a Cloud SQL replica instance.",
                "Creates a new user in a Cloud SQL instance.",
                "Deletes a user from a Cloud SQL instance.",
                "Updates an existing user in a Cloud SQL instance.",
                "Creates a database in the Cloud SQL instance.",
                "Deletes a database in the Cloud SQL instance.",
                "Updates a database in the Cloud SQL instance.",
                "Performs failover of an HA-enabled Cloud SQL failover replica.",
                "Deletes the backup taken by a backup run.",
                "",
                "Truncates a general or slow log table in MySQL.",
                "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
                "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
                "This field is deprecated, and will be removed in future version of API.",
                "",
                "Creates clone instance.",
                "Reschedule maintenance to another time.",
                "Starts external sync of a Cloud SQL EM replica to an external master."
              ]
            },
            "targetProject": {
              "type": "string",
              "description": "The project ID of the target instance related to this operation."
            }
          },
          "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource."
        }
      ]
  databases.get:
    description: |-
      Retrieves a resource containing information about a database inside a Cloud SQL instance.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/databases/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Database",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "This field is deprecated and will be removed from a future version of the API."
            },
            "kind": {
              "type": "string",
              "description": "This is always *sql#database*."
            },
            "name": {
              "type": "string",
              "description": "The name of the database in the Cloud SQL instance. This does not include the project ID or instance name."
            },
            "charset": {
              "type": "string",
              "description": "The Cloud SQL charset value."
            },
            "project": {
              "type": "string",
              "description": "The project ID of the project containing the Cloud SQL database. The Google apps domain is prefixed if applicable."
            },
            "instance": {
              "type": "string",
              "description": "The name of the Cloud SQL instance. This does not include the project ID."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "collation": {
              "type": "string",
              "description": "The Cloud SQL collation value."
            },
            "sqlserverDatabaseDetails": {
              "id": "SqlServerDatabaseDetails",
              "type": "object",
              "properties": {
                "recoveryModel": {
                  "type": "string",
                  "description": "The recovery model of a SQL Server database"
                },
                "compatibilityLevel": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The version of SQL Server with which the database is to be made compatible"
                }
              },
              "description": "Represents a Sql Server database on the Cloud SQL instance."
            }
          },
          "description": "Represents a SQL database on the Cloud SQL instance."
        }
      ]
  databases.insert:
    description: |-
      Inserts a resource containing information about a database inside a Cloud SQL instance.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/databases/insert
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#operation*."
            },
            "name": {
              "type": "string",
              "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
            },
            "user": {
              "type": "string",
              "description": "The email address of the user who initiated this operation."
            },
            "error": {
              "id": "OperationErrors",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#operationErrors*."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "OperationError",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Identifies the specific error that occurred."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#operationError*."
                      },
                      "message": {
                        "type": "string",
                        "description": "Additional information about the error encountered."
                      }
                    },
                    "description": "Database instance operation error."
                  },
                  "description": "The list of errors encountered while processing this operation."
                }
              },
              "description": "If errors occurred during processing of this operation, this field will be populated."
            },
            "status": {
              "enum": [
                "SQL_OPERATION_STATUS_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
              "enumDescriptions": [
                "The state of the operation is unknown.",
                "The operation has been queued, but has not started yet.",
                "The operation is running.",
                "The operation completed."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "targetId": {
              "type": "string",
              "description": "Name of the database instance related to this operation."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "insertTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "targetLink": {
              "type": "string"
            },
            "exportContext": {
              "id": "ExportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs: //bucketName/fileName*. If the file already exists, the requests // succeeds, but the operation fails. If *fileType* is // *SQL* and the filename ends with .gz, the contents are // compressed."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#exportContext*."
                },
                "offload": {
                  "type": "boolean",
                  "description": "Option for export offload."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "databases": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
                },
                "csvExportOptions": {
                  "type": "object",
                  "properties": {
                    "selectQuery": {
                      "type": "string",
                      "description": "The select query used to extract the data."
                    }
                  },
                  "description": "Options for exporting data as CSV."
                },
                "sqlExportOptions": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
                    },
                    "schemaOnly": {
                      "type": "boolean",
                      "description": "Export only schemas."
                    },
                    "mysqlExportOptions": {
                      "type": "object",
                      "properties": {
                        "masterData": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored."
                        }
                      },
                      "description": "Options for exporting from MySQL."
                    }
                  },
                  "description": "Options for exporting data as SQL statements."
                }
              },
              "description": "The context for export operation, if applicable."
            },
            "importContext": {
              "id": "ImportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "Path to the import file in Cloud Storage, in the form *gs: //bucketName/fileName*. Compressed gzip files (.gz) are supported // when *fileType* is *SQL*. The instance must have // write permissions to the bucket and read access to the file."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#importContext*."
                },
                "database": {
                  "type": "string",
                  "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "importUser": {
                  "type": "string",
                  "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
                },
                "bakImportOptions": {
                  "type": "object",
                  "properties": {
                    "encryptionOptions": {
                      "type": "object",
                      "properties": {
                        "pvkPath": {
                          "type": "string",
                          "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "certPath": {
                          "type": "string",
                          "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "pvkPassword": {
                          "type": "string",
                          "description": "Password that encrypts the private key"
                        }
                      }
                    }
                  },
                  "description": "Import parameters specific to SQL Server .BAK files"
                },
                "csvImportOptions": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "description": "The table to which CSV data is imported."
                    },
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
                    }
                  },
                  "description": "Options for importing data as CSV."
                }
              },
              "description": "The context for import operation, if applicable."
            },
            "operationType": {
              "enum": [
                "SQL_OPERATION_TYPE_UNSPECIFIED",
                "IMPORT",
                "EXPORT",
                "CREATE",
                "UPDATE",
                "DELETE",
                "RESTART",
                "BACKUP",
                "SNAPSHOT",
                "BACKUP_VOLUME",
                "DELETE_VOLUME",
                "RESTORE_VOLUME",
                "INJECT_USER",
                "CLONE",
                "STOP_REPLICA",
                "START_REPLICA",
                "PROMOTE_REPLICA",
                "CREATE_REPLICA",
                "CREATE_USER",
                "DELETE_USER",
                "UPDATE_USER",
                "CREATE_DATABASE",
                "DELETE_DATABASE",
                "UPDATE_DATABASE",
                "FAILOVER",
                "DELETE_BACKUP",
                "RECREATE_REPLICA",
                "TRUNCATE_LOG",
                "DEMOTE_MASTER",
                "MAINTENANCE",
                "ENABLE_PRIVATE_IP",
                "DEFER_MAINTENANCE",
                "CREATE_CLONE",
                "RESCHEDULE_MAINTENANCE",
                "START_EXTERNAL_SYNC"
              ],
              "type": "string",
              "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*",
              "enumDescriptions": [
                "Unknown operation type.",
                "Imports data into a Cloud SQL instance.",
                "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
                "Creates a new Cloud SQL instance.",
                "Updates the settings of a Cloud SQL instance.",
                "Deletes a Cloud SQL instance.",
                "Restarts the Cloud SQL instance.",
                "",
                "",
                "Performs instance backup.",
                "Deletes an instance backup.",
                "Restores an instance backup.",
                "Injects a privileged user in mysql for MOB instances.",
                "Clones a Cloud SQL instance.",
                "Stops replication on a Cloud SQL read replica instance.",
                "Starts replication on a Cloud SQL read replica instance.",
                "Promotes a Cloud SQL replica instance.",
                "Creates a Cloud SQL replica instance.",
                "Creates a new user in a Cloud SQL instance.",
                "Deletes a user from a Cloud SQL instance.",
                "Updates an existing user in a Cloud SQL instance.",
                "Creates a database in the Cloud SQL instance.",
                "Deletes a database in the Cloud SQL instance.",
                "Updates a database in the Cloud SQL instance.",
                "Performs failover of an HA-enabled Cloud SQL failover replica.",
                "Deletes the backup taken by a backup run.",
                "",
                "Truncates a general or slow log table in MySQL.",
                "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
                "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
                "This field is deprecated, and will be removed in future version of API.",
                "",
                "Creates clone instance.",
                "Reschedule maintenance to another time.",
                "Starts external sync of a Cloud SQL EM replica to an external master."
              ]
            },
            "targetProject": {
              "type": "string",
              "description": "The project ID of the target instance related to this operation."
            }
          },
          "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource."
        }
      ]
  databases.list:
    description: |-
      Lists databases in the specified Cloud SQL instance.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/databases/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "DatabasesListResponse",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#databasesList*."
            },
            "items": {
              "type": "array",
              "items": {
                "id": "Database",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "description": "This field is deprecated and will be removed from a future version of the API."
                  },
                  "kind": {
                    "type": "string",
                    "description": "This is always *sql#database*."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the database in the Cloud SQL instance. This does not include the project ID or instance name."
                  },
                  "charset": {
                    "type": "string",
                    "description": "The Cloud SQL charset value."
                  },
                  "project": {
                    "type": "string",
                    "description": "The project ID of the project containing the Cloud SQL database. The Google apps domain is prefixed if applicable."
                  },
                  "instance": {
                    "type": "string",
                    "description": "The name of the Cloud SQL instance. This does not include the project ID."
                  },
                  "selfLink": {
                    "type": "string",
                    "description": "The URI of this resource."
                  },
                  "collation": {
                    "type": "string",
                    "description": "The Cloud SQL collation value."
                  },
                  "sqlserverDatabaseDetails": {
                    "id": "SqlServerDatabaseDetails",
                    "type": "object",
                    "properties": {
                      "recoveryModel": {
                        "type": "string",
                        "description": "The recovery model of a SQL Server database"
                      },
                      "compatibilityLevel": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The version of SQL Server with which the database is to be made compatible"
                      }
                    },
                    "description": "Represents a Sql Server database on the Cloud SQL instance."
                  }
                },
                "description": "Represents a SQL database on the Cloud SQL instance."
              },
              "description": "List of database resources in the instance."
            }
          },
          "description": "Database list response."
        }
      ]
  databases.patch:
    description: |-
      Partially updates a resource containing information about a database inside a Cloud SQL instance. This method supports patch semantics.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/databases/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#operation*."
            },
            "name": {
              "type": "string",
              "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
            },
            "user": {
              "type": "string",
              "description": "The email address of the user who initiated this operation."
            },
            "error": {
              "id": "OperationErrors",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#operationErrors*."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "OperationError",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Identifies the specific error that occurred."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#operationError*."
                      },
                      "message": {
                        "type": "string",
                        "description": "Additional information about the error encountered."
                      }
                    },
                    "description": "Database instance operation error."
                  },
                  "description": "The list of errors encountered while processing this operation."
                }
              },
              "description": "If errors occurred during processing of this operation, this field will be populated."
            },
            "status": {
              "enum": [
                "SQL_OPERATION_STATUS_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
              "enumDescriptions": [
                "The state of the operation is unknown.",
                "The operation has been queued, but has not started yet.",
                "The operation is running.",
                "The operation completed."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "targetId": {
              "type": "string",
              "description": "Name of the database instance related to this operation."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "insertTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "targetLink": {
              "type": "string"
            },
            "exportContext": {
              "id": "ExportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs: //bucketName/fileName*. If the file already exists, the requests // succeeds, but the operation fails. If *fileType* is // *SQL* and the filename ends with .gz, the contents are // compressed."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#exportContext*."
                },
                "offload": {
                  "type": "boolean",
                  "description": "Option for export offload."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "databases": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
                },
                "csvExportOptions": {
                  "type": "object",
                  "properties": {
                    "selectQuery": {
                      "type": "string",
                      "description": "The select query used to extract the data."
                    }
                  },
                  "description": "Options for exporting data as CSV."
                },
                "sqlExportOptions": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
                    },
                    "schemaOnly": {
                      "type": "boolean",
                      "description": "Export only schemas."
                    },
                    "mysqlExportOptions": {
                      "type": "object",
                      "properties": {
                        "masterData": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored."
                        }
                      },
                      "description": "Options for exporting from MySQL."
                    }
                  },
                  "description": "Options for exporting data as SQL statements."
                }
              },
              "description": "The context for export operation, if applicable."
            },
            "importContext": {
              "id": "ImportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "Path to the import file in Cloud Storage, in the form *gs: //bucketName/fileName*. Compressed gzip files (.gz) are supported // when *fileType* is *SQL*. The instance must have // write permissions to the bucket and read access to the file."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#importContext*."
                },
                "database": {
                  "type": "string",
                  "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "importUser": {
                  "type": "string",
                  "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
                },
                "bakImportOptions": {
                  "type": "object",
                  "properties": {
                    "encryptionOptions": {
                      "type": "object",
                      "properties": {
                        "pvkPath": {
                          "type": "string",
                          "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "certPath": {
                          "type": "string",
                          "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "pvkPassword": {
                          "type": "string",
                          "description": "Password that encrypts the private key"
                        }
                      }
                    }
                  },
                  "description": "Import parameters specific to SQL Server .BAK files"
                },
                "csvImportOptions": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "description": "The table to which CSV data is imported."
                    },
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
                    }
                  },
                  "description": "Options for importing data as CSV."
                }
              },
              "description": "The context for import operation, if applicable."
            },
            "operationType": {
              "enum": [
                "SQL_OPERATION_TYPE_UNSPECIFIED",
                "IMPORT",
                "EXPORT",
                "CREATE",
                "UPDATE",
                "DELETE",
                "RESTART",
                "BACKUP",
                "SNAPSHOT",
                "BACKUP_VOLUME",
                "DELETE_VOLUME",
                "RESTORE_VOLUME",
                "INJECT_USER",
                "CLONE",
                "STOP_REPLICA",
                "START_REPLICA",
                "PROMOTE_REPLICA",
                "CREATE_REPLICA",
                "CREATE_USER",
                "DELETE_USER",
                "UPDATE_USER",
                "CREATE_DATABASE",
                "DELETE_DATABASE",
                "UPDATE_DATABASE",
                "FAILOVER",
                "DELETE_BACKUP",
                "RECREATE_REPLICA",
                "TRUNCATE_LOG",
                "DEMOTE_MASTER",
                "MAINTENANCE",
                "ENABLE_PRIVATE_IP",
                "DEFER_MAINTENANCE",
                "CREATE_CLONE",
                "RESCHEDULE_MAINTENANCE",
                "START_EXTERNAL_SYNC"
              ],
              "type": "string",
              "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*",
              "enumDescriptions": [
                "Unknown operation type.",
                "Imports data into a Cloud SQL instance.",
                "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
                "Creates a new Cloud SQL instance.",
                "Updates the settings of a Cloud SQL instance.",
                "Deletes a Cloud SQL instance.",
                "Restarts the Cloud SQL instance.",
                "",
                "",
                "Performs instance backup.",
                "Deletes an instance backup.",
                "Restores an instance backup.",
                "Injects a privileged user in mysql for MOB instances.",
                "Clones a Cloud SQL instance.",
                "Stops replication on a Cloud SQL read replica instance.",
                "Starts replication on a Cloud SQL read replica instance.",
                "Promotes a Cloud SQL replica instance.",
                "Creates a Cloud SQL replica instance.",
                "Creates a new user in a Cloud SQL instance.",
                "Deletes a user from a Cloud SQL instance.",
                "Updates an existing user in a Cloud SQL instance.",
                "Creates a database in the Cloud SQL instance.",
                "Deletes a database in the Cloud SQL instance.",
                "Updates a database in the Cloud SQL instance.",
                "Performs failover of an HA-enabled Cloud SQL failover replica.",
                "Deletes the backup taken by a backup run.",
                "",
                "Truncates a general or slow log table in MySQL.",
                "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
                "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
                "This field is deprecated, and will be removed in future version of API.",
                "",
                "Creates clone instance.",
                "Reschedule maintenance to another time.",
                "Starts external sync of a Cloud SQL EM replica to an external master."
              ]
            },
            "targetProject": {
              "type": "string",
              "description": "The project ID of the target instance related to this operation."
            }
          },
          "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource."
        }
      ]
  databases.update:
    description: |-
      Updates a resource containing information about a database inside a Cloud SQL instance.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/databases/update
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#operation*."
            },
            "name": {
              "type": "string",
              "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
            },
            "user": {
              "type": "string",
              "description": "The email address of the user who initiated this operation."
            },
            "error": {
              "id": "OperationErrors",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#operationErrors*."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "OperationError",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Identifies the specific error that occurred."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#operationError*."
                      },
                      "message": {
                        "type": "string",
                        "description": "Additional information about the error encountered."
                      }
                    },
                    "description": "Database instance operation error."
                  },
                  "description": "The list of errors encountered while processing this operation."
                }
              },
              "description": "If errors occurred during processing of this operation, this field will be populated."
            },
            "status": {
              "enum": [
                "SQL_OPERATION_STATUS_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
              "enumDescriptions": [
                "The state of the operation is unknown.",
                "The operation has been queued, but has not started yet.",
                "The operation is running.",
                "The operation completed."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "targetId": {
              "type": "string",
              "description": "Name of the database instance related to this operation."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "insertTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "targetLink": {
              "type": "string"
            },
            "exportContext": {
              "id": "ExportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs: //bucketName/fileName*. If the file already exists, the requests // succeeds, but the operation fails. If *fileType* is // *SQL* and the filename ends with .gz, the contents are // compressed."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#exportContext*."
                },
                "offload": {
                  "type": "boolean",
                  "description": "Option for export offload."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "databases": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
                },
                "csvExportOptions": {
                  "type": "object",
                  "properties": {
                    "selectQuery": {
                      "type": "string",
                      "description": "The select query used to extract the data."
                    }
                  },
                  "description": "Options for exporting data as CSV."
                },
                "sqlExportOptions": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
                    },
                    "schemaOnly": {
                      "type": "boolean",
                      "description": "Export only schemas."
                    },
                    "mysqlExportOptions": {
                      "type": "object",
                      "properties": {
                        "masterData": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored."
                        }
                      },
                      "description": "Options for exporting from MySQL."
                    }
                  },
                  "description": "Options for exporting data as SQL statements."
                }
              },
              "description": "The context for export operation, if applicable."
            },
            "importContext": {
              "id": "ImportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "Path to the import file in Cloud Storage, in the form *gs: //bucketName/fileName*. Compressed gzip files (.gz) are supported // when *fileType* is *SQL*. The instance must have // write permissions to the bucket and read access to the file."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#importContext*."
                },
                "database": {
                  "type": "string",
                  "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "importUser": {
                  "type": "string",
                  "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
                },
                "bakImportOptions": {
                  "type": "object",
                  "properties": {
                    "encryptionOptions": {
                      "type": "object",
                      "properties": {
                        "pvkPath": {
                          "type": "string",
                          "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "certPath": {
                          "type": "string",
                          "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "pvkPassword": {
                          "type": "string",
                          "description": "Password that encrypts the private key"
                        }
                      }
                    }
                  },
                  "description": "Import parameters specific to SQL Server .BAK files"
                },
                "csvImportOptions": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "description": "The table to which CSV data is imported."
                    },
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
                    }
                  },
                  "description": "Options for importing data as CSV."
                }
              },
              "description": "The context for import operation, if applicable."
            },
            "operationType": {
              "enum": [
                "SQL_OPERATION_TYPE_UNSPECIFIED",
                "IMPORT",
                "EXPORT",
                "CREATE",
                "UPDATE",
                "DELETE",
                "RESTART",
                "BACKUP",
                "SNAPSHOT",
                "BACKUP_VOLUME",
                "DELETE_VOLUME",
                "RESTORE_VOLUME",
                "INJECT_USER",
                "CLONE",
                "STOP_REPLICA",
                "START_REPLICA",
                "PROMOTE_REPLICA",
                "CREATE_REPLICA",
                "CREATE_USER",
                "DELETE_USER",
                "UPDATE_USER",
                "CREATE_DATABASE",
                "DELETE_DATABASE",
                "UPDATE_DATABASE",
                "FAILOVER",
                "DELETE_BACKUP",
                "RECREATE_REPLICA",
                "TRUNCATE_LOG",
                "DEMOTE_MASTER",
                "MAINTENANCE",
                "ENABLE_PRIVATE_IP",
                "DEFER_MAINTENANCE",
                "CREATE_CLONE",
                "RESCHEDULE_MAINTENANCE",
                "START_EXTERNAL_SYNC"
              ],
              "type": "string",
              "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*",
              "enumDescriptions": [
                "Unknown operation type.",
                "Imports data into a Cloud SQL instance.",
                "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
                "Creates a new Cloud SQL instance.",
                "Updates the settings of a Cloud SQL instance.",
                "Deletes a Cloud SQL instance.",
                "Restarts the Cloud SQL instance.",
                "",
                "",
                "Performs instance backup.",
                "Deletes an instance backup.",
                "Restores an instance backup.",
                "Injects a privileged user in mysql for MOB instances.",
                "Clones a Cloud SQL instance.",
                "Stops replication on a Cloud SQL read replica instance.",
                "Starts replication on a Cloud SQL read replica instance.",
                "Promotes a Cloud SQL replica instance.",
                "Creates a Cloud SQL replica instance.",
                "Creates a new user in a Cloud SQL instance.",
                "Deletes a user from a Cloud SQL instance.",
                "Updates an existing user in a Cloud SQL instance.",
                "Creates a database in the Cloud SQL instance.",
                "Deletes a database in the Cloud SQL instance.",
                "Updates a database in the Cloud SQL instance.",
                "Performs failover of an HA-enabled Cloud SQL failover replica.",
                "Deletes the backup taken by a backup run.",
                "",
                "Truncates a general or slow log table in MySQL.",
                "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
                "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
                "This field is deprecated, and will be removed in future version of API.",
                "",
                "Creates clone instance.",
                "Reschedule maintenance to another time.",
                "Starts external sync of a Cloud SQL EM replica to an external master."
              ]
            },
            "targetProject": {
              "type": "string",
              "description": "The project ID of the target instance related to this operation."
            }
          },
          "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource."
        }
      ]
  flags.list:
    description: |-
      List all available database flags for Cloud SQL instances.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/flags/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "FlagsListResponse",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#flagsList*."
            },
            "items": {
              "type": "array",
              "items": {
                "id": "Flag",
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "description": "This is always *sql#flag*."
                  },
                  "name": {
                    "type": "string",
                    "description": "This is the name of the flag. Flag names always use underscores, not hyphens, for example: *max_allowed_packet*"
                  },
                  "type": {
                    "enum": [
                      "SQL_FLAG_TYPE_UNSPECIFIED",
                      "BOOLEAN",
                      "STRING",
                      "INTEGER",
                      "NONE",
                      "MYSQL_TIMEZONE_OFFSET",
                      "FLOAT",
                      "REPEATED_STRING"
                    ],
                    "type": "string",
                    "description": "The type of the flag. Flags are typed to being *BOOLEAN*, *STRING*, *INTEGER* or *NONE*. *NONE* is used for flags which do not take a value, such as *skip_grant_tables*.",
                    "enumDescriptions": [
                      "This is an unknown flag type.",
                      "Boolean type flag.",
                      "String type flag.",
                      "Integer type flag.",
                      "Flag type used for a server startup option.",
                      "Type introduced specically for MySQL TimeZone offset. Accept a string value with the format [-12:59, 13:00].",
                      "Float type flag.",
                      "Comma-separated list of the strings in a SqlFlagType enum."
                    ]
                  },
                  "inBeta": {
                    "type": "boolean",
                    "description": "Whether or not the flag is considered in beta."
                  },
                  "maxValue": {
                    "type": "string",
                    "format": "int64",
                    "description": "For *INTEGER* flags, the maximum allowed value."
                  },
                  "minValue": {
                    "type": "string",
                    "format": "int64",
                    "description": "For *INTEGER* flags, the minimum allowed value."
                  },
                  "appliesTo": {
                    "type": "array",
                    "items": {
                      "enum": [
                        "SQL_DATABASE_VERSION_UNSPECIFIED",
                        "MYSQL_5_1",
                        "MYSQL_5_5",
                        "MYSQL_5_6",
                        "MYSQL_5_7",
                        "POSTGRES_9_6",
                        "POSTGRES_11",
                        "SQLSERVER_2017_STANDARD",
                        "SQLSERVER_2017_ENTERPRISE",
                        "SQLSERVER_2017_EXPRESS",
                        "SQLSERVER_2017_WEB",
                        "POSTGRES_10",
                        "POSTGRES_12",
                        "MYSQL_8_0"
                      ],
                      "type": "string",
                      "enumDescriptions": [
                        "This is an unknown database version.",
                        "The database version is MySQL 5.1.",
                        "The database version is MySQL 5.5.",
                        "The database version is MySQL 5.6.",
                        "The database version is MySQL 5.7.",
                        "The database version is PostgreSQL 9.6.",
                        "The database version is PostgreSQL 11.",
                        "The database version is SQL Server 2017 Standard.",
                        "The database version is SQL Server 2017 Enterprise.",
                        "The database version is SQL Server 2017 Express.",
                        "The database version is SQL Server 2017 Web.",
                        "The database version is PostgreSQL 10.",
                        "The database version is PostgreSQL 12.",
                        "The database version is MySQL 8."
                      ]
                    },
                    "description": "The database version this flag applies to. Can be *MYSQL_5_5*, *MYSQL_5_6*, or *MYSQL_5_7*. *MYSQL_5_7* is applicable only to Second Generation instances.",
                    "enumDescriptions": [
                      "This is an unknown database version.",
                      "The database version is MySQL 5.1.",
                      "The database version is MySQL 5.5.",
                      "The database version is MySQL 5.6.",
                      "The database version is MySQL 5.7.",
                      "The database version is PostgreSQL 9.6.",
                      "The database version is PostgreSQL 11.",
                      "The database version is SQL Server 2017 Standard.",
                      "The database version is SQL Server 2017 Enterprise.",
                      "The database version is SQL Server 2017 Express.",
                      "The database version is SQL Server 2017 Web.",
                      "The database version is PostgreSQL 10.",
                      "The database version is PostgreSQL 12.",
                      "The database version is MySQL 8."
                    ]
                  },
                  "requiresRestart": {
                    "type": "boolean",
                    "description": "Indicates whether changing this flag will trigger a database restart. Only applicable to Second Generation instances."
                  },
                  "allowedIntValues": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "int64"
                    },
                    "description": "Use this field if only certain integers are accepted. Can be combined with min_value and max_value to add additional values."
                  },
                  "allowedStringValues": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "For *STRING* flags, a list of strings that the value can be set to."
                  }
                },
                "description": "A flag resource."
              },
              "description": "List of flags."
            }
          },
          "description": "Flags list response."
        }
      ]
  instances.addServerCa:
    description: |-
      Add a new trusted Certificate Authority (CA) version for the specified instance. Required to prepare for a certificate rotation. If a CA version was previously added but never used in a certificate rotation, this operation replaces that version. There cannot be more than one CA version waiting to be rotated in.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/instances/addServerCa
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#operation*."
            },
            "name": {
              "type": "string",
              "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
            },
            "user": {
              "type": "string",
              "description": "The email address of the user who initiated this operation."
            },
            "error": {
              "id": "OperationErrors",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#operationErrors*."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "OperationError",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Identifies the specific error that occurred."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#operationError*."
                      },
                      "message": {
                        "type": "string",
                        "description": "Additional information about the error encountered."
                      }
                    },
                    "description": "Database instance operation error."
                  },
                  "description": "The list of errors encountered while processing this operation."
                }
              },
              "description": "If errors occurred during processing of this operation, this field will be populated."
            },
            "status": {
              "enum": [
                "SQL_OPERATION_STATUS_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
              "enumDescriptions": [
                "The state of the operation is unknown.",
                "The operation has been queued, but has not started yet.",
                "The operation is running.",
                "The operation completed."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "targetId": {
              "type": "string",
              "description": "Name of the database instance related to this operation."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "insertTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "targetLink": {
              "type": "string"
            },
            "exportContext": {
              "id": "ExportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs: //bucketName/fileName*. If the file already exists, the requests // succeeds, but the operation fails. If *fileType* is // *SQL* and the filename ends with .gz, the contents are // compressed."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#exportContext*."
                },
                "offload": {
                  "type": "boolean",
                  "description": "Option for export offload."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "databases": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
                },
                "csvExportOptions": {
                  "type": "object",
                  "properties": {
                    "selectQuery": {
                      "type": "string",
                      "description": "The select query used to extract the data."
                    }
                  },
                  "description": "Options for exporting data as CSV."
                },
                "sqlExportOptions": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
                    },
                    "schemaOnly": {
                      "type": "boolean",
                      "description": "Export only schemas."
                    },
                    "mysqlExportOptions": {
                      "type": "object",
                      "properties": {
                        "masterData": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored."
                        }
                      },
                      "description": "Options for exporting from MySQL."
                    }
                  },
                  "description": "Options for exporting data as SQL statements."
                }
              },
              "description": "The context for export operation, if applicable."
            },
            "importContext": {
              "id": "ImportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "Path to the import file in Cloud Storage, in the form *gs: //bucketName/fileName*. Compressed gzip files (.gz) are supported // when *fileType* is *SQL*. The instance must have // write permissions to the bucket and read access to the file."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#importContext*."
                },
                "database": {
                  "type": "string",
                  "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "importUser": {
                  "type": "string",
                  "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
                },
                "bakImportOptions": {
                  "type": "object",
                  "properties": {
                    "encryptionOptions": {
                      "type": "object",
                      "properties": {
                        "pvkPath": {
                          "type": "string",
                          "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "certPath": {
                          "type": "string",
                          "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "pvkPassword": {
                          "type": "string",
                          "description": "Password that encrypts the private key"
                        }
                      }
                    }
                  },
                  "description": "Import parameters specific to SQL Server .BAK files"
                },
                "csvImportOptions": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "description": "The table to which CSV data is imported."
                    },
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
                    }
                  },
                  "description": "Options for importing data as CSV."
                }
              },
              "description": "The context for import operation, if applicable."
            },
            "operationType": {
              "enum": [
                "SQL_OPERATION_TYPE_UNSPECIFIED",
                "IMPORT",
                "EXPORT",
                "CREATE",
                "UPDATE",
                "DELETE",
                "RESTART",
                "BACKUP",
                "SNAPSHOT",
                "BACKUP_VOLUME",
                "DELETE_VOLUME",
                "RESTORE_VOLUME",
                "INJECT_USER",
                "CLONE",
                "STOP_REPLICA",
                "START_REPLICA",
                "PROMOTE_REPLICA",
                "CREATE_REPLICA",
                "CREATE_USER",
                "DELETE_USER",
                "UPDATE_USER",
                "CREATE_DATABASE",
                "DELETE_DATABASE",
                "UPDATE_DATABASE",
                "FAILOVER",
                "DELETE_BACKUP",
                "RECREATE_REPLICA",
                "TRUNCATE_LOG",
                "DEMOTE_MASTER",
                "MAINTENANCE",
                "ENABLE_PRIVATE_IP",
                "DEFER_MAINTENANCE",
                "CREATE_CLONE",
                "RESCHEDULE_MAINTENANCE",
                "START_EXTERNAL_SYNC"
              ],
              "type": "string",
              "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*",
              "enumDescriptions": [
                "Unknown operation type.",
                "Imports data into a Cloud SQL instance.",
                "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
                "Creates a new Cloud SQL instance.",
                "Updates the settings of a Cloud SQL instance.",
                "Deletes a Cloud SQL instance.",
                "Restarts the Cloud SQL instance.",
                "",
                "",
                "Performs instance backup.",
                "Deletes an instance backup.",
                "Restores an instance backup.",
                "Injects a privileged user in mysql for MOB instances.",
                "Clones a Cloud SQL instance.",
                "Stops replication on a Cloud SQL read replica instance.",
                "Starts replication on a Cloud SQL read replica instance.",
                "Promotes a Cloud SQL replica instance.",
                "Creates a Cloud SQL replica instance.",
                "Creates a new user in a Cloud SQL instance.",
                "Deletes a user from a Cloud SQL instance.",
                "Updates an existing user in a Cloud SQL instance.",
                "Creates a database in the Cloud SQL instance.",
                "Deletes a database in the Cloud SQL instance.",
                "Updates a database in the Cloud SQL instance.",
                "Performs failover of an HA-enabled Cloud SQL failover replica.",
                "Deletes the backup taken by a backup run.",
                "",
                "Truncates a general or slow log table in MySQL.",
                "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
                "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
                "This field is deprecated, and will be removed in future version of API.",
                "",
                "Creates clone instance.",
                "Reschedule maintenance to another time.",
                "Starts external sync of a Cloud SQL EM replica to an external master."
              ]
            },
            "targetProject": {
              "type": "string",
              "description": "The project ID of the target instance related to this operation."
            }
          },
          "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource."
        }
      ]
  instances.clone:
    description: |-
      Creates a Cloud SQL instance as a clone of the source instance. Using this operation might cause your instance to restart.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/instances/clone
    example:
      inputs: [
        {
          "id": "InstancesCloneRequest",
          "type": "object",
          "properties": {
            "cloneContext": {
              "id": "CloneContext",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#cloneContext*."
                },
                "pointInTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "Reserved for future use."
                },
                "pitrTimestampMs": {
                  "type": "string",
                  "format": "int64",
                  "description": "Reserved for future use."
                },
                "binLogCoordinates": {
                  "id": "BinLogCoordinates",
                  "type": "object",
                  "properties": {
                    "kind": {
                      "type": "string",
                      "description": "This is always *sql#binLogCoordinates*."
                    },
                    "binLogFileName": {
                      "type": "string",
                      "description": "Name of the binary log file for a Cloud SQL instance."
                    },
                    "binLogPosition": {
                      "type": "string",
                      "format": "int64",
                      "description": "Position (offset) within the binary log file."
                    }
                  },
                  "description": "Binary log coordinates, if specified, identify the position up to which the source instance is cloned. If not specified, the source instance is cloned up to the most recent binary log coordinates."
                },
                "destinationInstanceName": {
                  "type": "string",
                  "description": "Name of the Cloud SQL instance to be created as a clone."
                }
              },
              "description": "Contains details about the clone operation."
            }
          },
          "description": "Database instance clone request."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#operation*."
            },
            "name": {
              "type": "string",
              "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
            },
            "user": {
              "type": "string",
              "description": "The email address of the user who initiated this operation."
            },
            "error": {
              "id": "OperationErrors",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#operationErrors*."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "OperationError",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Identifies the specific error that occurred."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#operationError*."
                      },
                      "message": {
                        "type": "string",
                        "description": "Additional information about the error encountered."
                      }
                    },
                    "description": "Database instance operation error."
                  },
                  "description": "The list of errors encountered while processing this operation."
                }
              },
              "description": "If errors occurred during processing of this operation, this field will be populated."
            },
            "status": {
              "enum": [
                "SQL_OPERATION_STATUS_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
              "enumDescriptions": [
                "The state of the operation is unknown.",
                "The operation has been queued, but has not started yet.",
                "The operation is running.",
                "The operation completed."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "targetId": {
              "type": "string",
              "description": "Name of the database instance related to this operation."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "insertTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "targetLink": {
              "type": "string"
            },
            "exportContext": {
              "id": "ExportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs: //bucketName/fileName*. If the file already exists, the requests // succeeds, but the operation fails. If *fileType* is // *SQL* and the filename ends with .gz, the contents are // compressed."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#exportContext*."
                },
                "offload": {
                  "type": "boolean",
                  "description": "Option for export offload."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "databases": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
                },
                "csvExportOptions": {
                  "type": "object",
                  "properties": {
                    "selectQuery": {
                      "type": "string",
                      "description": "The select query used to extract the data."
                    }
                  },
                  "description": "Options for exporting data as CSV."
                },
                "sqlExportOptions": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
                    },
                    "schemaOnly": {
                      "type": "boolean",
                      "description": "Export only schemas."
                    },
                    "mysqlExportOptions": {
                      "type": "object",
                      "properties": {
                        "masterData": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored."
                        }
                      },
                      "description": "Options for exporting from MySQL."
                    }
                  },
                  "description": "Options for exporting data as SQL statements."
                }
              },
              "description": "The context for export operation, if applicable."
            },
            "importContext": {
              "id": "ImportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "Path to the import file in Cloud Storage, in the form *gs: //bucketName/fileName*. Compressed gzip files (.gz) are supported // when *fileType* is *SQL*. The instance must have // write permissions to the bucket and read access to the file."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#importContext*."
                },
                "database": {
                  "type": "string",
                  "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "importUser": {
                  "type": "string",
                  "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
                },
                "bakImportOptions": {
                  "type": "object",
                  "properties": {
                    "encryptionOptions": {
                      "type": "object",
                      "properties": {
                        "pvkPath": {
                          "type": "string",
                          "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "certPath": {
                          "type": "string",
                          "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "pvkPassword": {
                          "type": "string",
                          "description": "Password that encrypts the private key"
                        }
                      }
                    }
                  },
                  "description": "Import parameters specific to SQL Server .BAK files"
                },
                "csvImportOptions": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "description": "The table to which CSV data is imported."
                    },
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
                    }
                  },
                  "description": "Options for importing data as CSV."
                }
              },
              "description": "The context for import operation, if applicable."
            },
            "operationType": {
              "enum": [
                "SQL_OPERATION_TYPE_UNSPECIFIED",
                "IMPORT",
                "EXPORT",
                "CREATE",
                "UPDATE",
                "DELETE",
                "RESTART",
                "BACKUP",
                "SNAPSHOT",
                "BACKUP_VOLUME",
                "DELETE_VOLUME",
                "RESTORE_VOLUME",
                "INJECT_USER",
                "CLONE",
                "STOP_REPLICA",
                "START_REPLICA",
                "PROMOTE_REPLICA",
                "CREATE_REPLICA",
                "CREATE_USER",
                "DELETE_USER",
                "UPDATE_USER",
                "CREATE_DATABASE",
                "DELETE_DATABASE",
                "UPDATE_DATABASE",
                "FAILOVER",
                "DELETE_BACKUP",
                "RECREATE_REPLICA",
                "TRUNCATE_LOG",
                "DEMOTE_MASTER",
                "MAINTENANCE",
                "ENABLE_PRIVATE_IP",
                "DEFER_MAINTENANCE",
                "CREATE_CLONE",
                "RESCHEDULE_MAINTENANCE",
                "START_EXTERNAL_SYNC"
              ],
              "type": "string",
              "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*",
              "enumDescriptions": [
                "Unknown operation type.",
                "Imports data into a Cloud SQL instance.",
                "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
                "Creates a new Cloud SQL instance.",
                "Updates the settings of a Cloud SQL instance.",
                "Deletes a Cloud SQL instance.",
                "Restarts the Cloud SQL instance.",
                "",
                "",
                "Performs instance backup.",
                "Deletes an instance backup.",
                "Restores an instance backup.",
                "Injects a privileged user in mysql for MOB instances.",
                "Clones a Cloud SQL instance.",
                "Stops replication on a Cloud SQL read replica instance.",
                "Starts replication on a Cloud SQL read replica instance.",
                "Promotes a Cloud SQL replica instance.",
                "Creates a Cloud SQL replica instance.",
                "Creates a new user in a Cloud SQL instance.",
                "Deletes a user from a Cloud SQL instance.",
                "Updates an existing user in a Cloud SQL instance.",
                "Creates a database in the Cloud SQL instance.",
                "Deletes a database in the Cloud SQL instance.",
                "Updates a database in the Cloud SQL instance.",
                "Performs failover of an HA-enabled Cloud SQL failover replica.",
                "Deletes the backup taken by a backup run.",
                "",
                "Truncates a general or slow log table in MySQL.",
                "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
                "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
                "This field is deprecated, and will be removed in future version of API.",
                "",
                "Creates clone instance.",
                "Reschedule maintenance to another time.",
                "Starts external sync of a Cloud SQL EM replica to an external master."
              ]
            },
            "targetProject": {
              "type": "string",
              "description": "The project ID of the target instance related to this operation."
            }
          },
          "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource."
        }
      ]
  instances.delete:
    description: |-
      Deletes a Cloud SQL instance.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/instances/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#operation*."
            },
            "name": {
              "type": "string",
              "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
            },
            "user": {
              "type": "string",
              "description": "The email address of the user who initiated this operation."
            },
            "error": {
              "id": "OperationErrors",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#operationErrors*."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "OperationError",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Identifies the specific error that occurred."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#operationError*."
                      },
                      "message": {
                        "type": "string",
                        "description": "Additional information about the error encountered."
                      }
                    },
                    "description": "Database instance operation error."
                  },
                  "description": "The list of errors encountered while processing this operation."
                }
              },
              "description": "If errors occurred during processing of this operation, this field will be populated."
            },
            "status": {
              "enum": [
                "SQL_OPERATION_STATUS_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
              "enumDescriptions": [
                "The state of the operation is unknown.",
                "The operation has been queued, but has not started yet.",
                "The operation is running.",
                "The operation completed."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "targetId": {
              "type": "string",
              "description": "Name of the database instance related to this operation."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "insertTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "targetLink": {
              "type": "string"
            },
            "exportContext": {
              "id": "ExportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs: //bucketName/fileName*. If the file already exists, the requests // succeeds, but the operation fails. If *fileType* is // *SQL* and the filename ends with .gz, the contents are // compressed."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#exportContext*."
                },
                "offload": {
                  "type": "boolean",
                  "description": "Option for export offload."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "databases": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
                },
                "csvExportOptions": {
                  "type": "object",
                  "properties": {
                    "selectQuery": {
                      "type": "string",
                      "description": "The select query used to extract the data."
                    }
                  },
                  "description": "Options for exporting data as CSV."
                },
                "sqlExportOptions": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
                    },
                    "schemaOnly": {
                      "type": "boolean",
                      "description": "Export only schemas."
                    },
                    "mysqlExportOptions": {
                      "type": "object",
                      "properties": {
                        "masterData": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored."
                        }
                      },
                      "description": "Options for exporting from MySQL."
                    }
                  },
                  "description": "Options for exporting data as SQL statements."
                }
              },
              "description": "The context for export operation, if applicable."
            },
            "importContext": {
              "id": "ImportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "Path to the import file in Cloud Storage, in the form *gs: //bucketName/fileName*. Compressed gzip files (.gz) are supported // when *fileType* is *SQL*. The instance must have // write permissions to the bucket and read access to the file."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#importContext*."
                },
                "database": {
                  "type": "string",
                  "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "importUser": {
                  "type": "string",
                  "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
                },
                "bakImportOptions": {
                  "type": "object",
                  "properties": {
                    "encryptionOptions": {
                      "type": "object",
                      "properties": {
                        "pvkPath": {
                          "type": "string",
                          "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "certPath": {
                          "type": "string",
                          "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "pvkPassword": {
                          "type": "string",
                          "description": "Password that encrypts the private key"
                        }
                      }
                    }
                  },
                  "description": "Import parameters specific to SQL Server .BAK files"
                },
                "csvImportOptions": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "description": "The table to which CSV data is imported."
                    },
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
                    }
                  },
                  "description": "Options for importing data as CSV."
                }
              },
              "description": "The context for import operation, if applicable."
            },
            "operationType": {
              "enum": [
                "SQL_OPERATION_TYPE_UNSPECIFIED",
                "IMPORT",
                "EXPORT",
                "CREATE",
                "UPDATE",
                "DELETE",
                "RESTART",
                "BACKUP",
                "SNAPSHOT",
                "BACKUP_VOLUME",
                "DELETE_VOLUME",
                "RESTORE_VOLUME",
                "INJECT_USER",
                "CLONE",
                "STOP_REPLICA",
                "START_REPLICA",
                "PROMOTE_REPLICA",
                "CREATE_REPLICA",
                "CREATE_USER",
                "DELETE_USER",
                "UPDATE_USER",
                "CREATE_DATABASE",
                "DELETE_DATABASE",
                "UPDATE_DATABASE",
                "FAILOVER",
                "DELETE_BACKUP",
                "RECREATE_REPLICA",
                "TRUNCATE_LOG",
                "DEMOTE_MASTER",
                "MAINTENANCE",
                "ENABLE_PRIVATE_IP",
                "DEFER_MAINTENANCE",
                "CREATE_CLONE",
                "RESCHEDULE_MAINTENANCE",
                "START_EXTERNAL_SYNC"
              ],
              "type": "string",
              "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*",
              "enumDescriptions": [
                "Unknown operation type.",
                "Imports data into a Cloud SQL instance.",
                "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
                "Creates a new Cloud SQL instance.",
                "Updates the settings of a Cloud SQL instance.",
                "Deletes a Cloud SQL instance.",
                "Restarts the Cloud SQL instance.",
                "",
                "",
                "Performs instance backup.",
                "Deletes an instance backup.",
                "Restores an instance backup.",
                "Injects a privileged user in mysql for MOB instances.",
                "Clones a Cloud SQL instance.",
                "Stops replication on a Cloud SQL read replica instance.",
                "Starts replication on a Cloud SQL read replica instance.",
                "Promotes a Cloud SQL replica instance.",
                "Creates a Cloud SQL replica instance.",
                "Creates a new user in a Cloud SQL instance.",
                "Deletes a user from a Cloud SQL instance.",
                "Updates an existing user in a Cloud SQL instance.",
                "Creates a database in the Cloud SQL instance.",
                "Deletes a database in the Cloud SQL instance.",
                "Updates a database in the Cloud SQL instance.",
                "Performs failover of an HA-enabled Cloud SQL failover replica.",
                "Deletes the backup taken by a backup run.",
                "",
                "Truncates a general or slow log table in MySQL.",
                "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
                "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
                "This field is deprecated, and will be removed in future version of API.",
                "",
                "Creates clone instance.",
                "Reschedule maintenance to another time.",
                "Starts external sync of a Cloud SQL EM replica to an external master."
              ]
            },
            "targetProject": {
              "type": "string",
              "description": "The project ID of the target instance related to this operation."
            }
          },
          "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource."
        }
      ]
  instances.demoteMaster:
    description: |-
      Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/instances/demoteMaster
    example:
      inputs: [
        {
          "id": "InstancesDemoteMasterRequest",
          "type": "object",
          "properties": {
            "demoteMasterContext": {
              "id": "DemoteMasterContext",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#demoteMasterContext*."
                },
                "masterInstanceName": {
                  "type": "string",
                  "description": "The name of the instance which will act as on-premises master in the replication setup."
                },
                "replicaConfiguration": {
                  "id": "DemoteMasterConfiguration",
                  "type": "object",
                  "properties": {
                    "kind": {
                      "type": "string",
                      "description": "This is always *sql#demoteMasterConfiguration*."
                    },
                    "mysqlReplicaConfiguration": {
                      "id": "DemoteMasterMySqlReplicaConfiguration",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "type": "string",
                          "description": "This is always *sql#demoteMasterMysqlReplicaConfiguration*."
                        },
                        "password": {
                          "type": "string",
                          "description": "The password for the replication connection."
                        },
                        "username": {
                          "type": "string",
                          "description": "The username for the replication connection."
                        },
                        "clientKey": {
                          "type": "string",
                          "description": "PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate. The format of the replica's private key can be either PKCS #1 or PKCS #8."
                        },
                        "caCertificate": {
                          "type": "string",
                          "description": "PEM representation of the trusted CA's x509 certificate."
                        },
                        "clientCertificate": {
                          "type": "string",
                          "description": "PEM representation of the replica's x509 certificate."
                        }
                      },
                      "description": "MySQL specific configuration when replicating from a MySQL on-premises master. Replication configuration information such as the username, password, certificates, and keys are not stored in the instance metadata. The configuration information is used only to set up the replication connection and is stored by MySQL in a file named *master.info* in the data directory."
                    }
                  },
                  "description": "Configuration specific to read-replicas replicating from the on-premises master."
                },
                "verifyGtidConsistency": {
                  "type": "boolean",
                  "description": "Verify GTID consistency for demote operation. Default value: *True*. Second Generation instances only. Setting this flag to false enables you to bypass GTID consistency check between on-premises master and Cloud SQL instance during the demotion operation but also exposes you to the risk of future replication failures. Change the value only if you know the reason for the GTID divergence and are confident that doing so will not cause any replication issues."
                }
              },
              "description": "Contains details about the demoteMaster operation."
            }
          },
          "description": "Database demote master request."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#operation*."
            },
            "name": {
              "type": "string",
              "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
            },
            "user": {
              "type": "string",
              "description": "The email address of the user who initiated this operation."
            },
            "error": {
              "id": "OperationErrors",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#operationErrors*."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "OperationError",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Identifies the specific error that occurred."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#operationError*."
                      },
                      "message": {
                        "type": "string",
                        "description": "Additional information about the error encountered."
                      }
                    },
                    "description": "Database instance operation error."
                  },
                  "description": "The list of errors encountered while processing this operation."
                }
              },
              "description": "If errors occurred during processing of this operation, this field will be populated."
            },
            "status": {
              "enum": [
                "SQL_OPERATION_STATUS_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
              "enumDescriptions": [
                "The state of the operation is unknown.",
                "The operation has been queued, but has not started yet.",
                "The operation is running.",
                "The operation completed."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "targetId": {
              "type": "string",
              "description": "Name of the database instance related to this operation."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "insertTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "targetLink": {
              "type": "string"
            },
            "exportContext": {
              "id": "ExportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs: //bucketName/fileName*. If the file already exists, the requests // succeeds, but the operation fails. If *fileType* is // *SQL* and the filename ends with .gz, the contents are // compressed."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#exportContext*."
                },
                "offload": {
                  "type": "boolean",
                  "description": "Option for export offload."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "databases": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
                },
                "csvExportOptions": {
                  "type": "object",
                  "properties": {
                    "selectQuery": {
                      "type": "string",
                      "description": "The select query used to extract the data."
                    }
                  },
                  "description": "Options for exporting data as CSV."
                },
                "sqlExportOptions": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
                    },
                    "schemaOnly": {
                      "type": "boolean",
                      "description": "Export only schemas."
                    },
                    "mysqlExportOptions": {
                      "type": "object",
                      "properties": {
                        "masterData": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored."
                        }
                      },
                      "description": "Options for exporting from MySQL."
                    }
                  },
                  "description": "Options for exporting data as SQL statements."
                }
              },
              "description": "The context for export operation, if applicable."
            },
            "importContext": {
              "id": "ImportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "Path to the import file in Cloud Storage, in the form *gs: //bucketName/fileName*. Compressed gzip files (.gz) are supported // when *fileType* is *SQL*. The instance must have // write permissions to the bucket and read access to the file."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#importContext*."
                },
                "database": {
                  "type": "string",
                  "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "importUser": {
                  "type": "string",
                  "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
                },
                "bakImportOptions": {
                  "type": "object",
                  "properties": {
                    "encryptionOptions": {
                      "type": "object",
                      "properties": {
                        "pvkPath": {
                          "type": "string",
                          "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "certPath": {
                          "type": "string",
                          "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "pvkPassword": {
                          "type": "string",
                          "description": "Password that encrypts the private key"
                        }
                      }
                    }
                  },
                  "description": "Import parameters specific to SQL Server .BAK files"
                },
                "csvImportOptions": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "description": "The table to which CSV data is imported."
                    },
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
                    }
                  },
                  "description": "Options for importing data as CSV."
                }
              },
              "description": "The context for import operation, if applicable."
            },
            "operationType": {
              "enum": [
                "SQL_OPERATION_TYPE_UNSPECIFIED",
                "IMPORT",
                "EXPORT",
                "CREATE",
                "UPDATE",
                "DELETE",
                "RESTART",
                "BACKUP",
                "SNAPSHOT",
                "BACKUP_VOLUME",
                "DELETE_VOLUME",
                "RESTORE_VOLUME",
                "INJECT_USER",
                "CLONE",
                "STOP_REPLICA",
                "START_REPLICA",
                "PROMOTE_REPLICA",
                "CREATE_REPLICA",
                "CREATE_USER",
                "DELETE_USER",
                "UPDATE_USER",
                "CREATE_DATABASE",
                "DELETE_DATABASE",
                "UPDATE_DATABASE",
                "FAILOVER",
                "DELETE_BACKUP",
                "RECREATE_REPLICA",
                "TRUNCATE_LOG",
                "DEMOTE_MASTER",
                "MAINTENANCE",
                "ENABLE_PRIVATE_IP",
                "DEFER_MAINTENANCE",
                "CREATE_CLONE",
                "RESCHEDULE_MAINTENANCE",
                "START_EXTERNAL_SYNC"
              ],
              "type": "string",
              "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*",
              "enumDescriptions": [
                "Unknown operation type.",
                "Imports data into a Cloud SQL instance.",
                "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
                "Creates a new Cloud SQL instance.",
                "Updates the settings of a Cloud SQL instance.",
                "Deletes a Cloud SQL instance.",
                "Restarts the Cloud SQL instance.",
                "",
                "",
                "Performs instance backup.",
                "Deletes an instance backup.",
                "Restores an instance backup.",
                "Injects a privileged user in mysql for MOB instances.",
                "Clones a Cloud SQL instance.",
                "Stops replication on a Cloud SQL read replica instance.",
                "Starts replication on a Cloud SQL read replica instance.",
                "Promotes a Cloud SQL replica instance.",
                "Creates a Cloud SQL replica instance.",
                "Creates a new user in a Cloud SQL instance.",
                "Deletes a user from a Cloud SQL instance.",
                "Updates an existing user in a Cloud SQL instance.",
                "Creates a database in the Cloud SQL instance.",
                "Deletes a database in the Cloud SQL instance.",
                "Updates a database in the Cloud SQL instance.",
                "Performs failover of an HA-enabled Cloud SQL failover replica.",
                "Deletes the backup taken by a backup run.",
                "",
                "Truncates a general or slow log table in MySQL.",
                "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
                "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
                "This field is deprecated, and will be removed in future version of API.",
                "",
                "Creates clone instance.",
                "Reschedule maintenance to another time.",
                "Starts external sync of a Cloud SQL EM replica to an external master."
              ]
            },
            "targetProject": {
              "type": "string",
              "description": "The project ID of the target instance related to this operation."
            }
          },
          "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource."
        }
      ]
  instances.export:
    description: |-
      Exports data from a Cloud SQL instance to a Cloud Storage bucket as a SQL dump or CSV file.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/instances/export
    example:
      inputs: [
        {
          "id": "InstancesExportRequest",
          "type": "object",
          "properties": {
            "exportContext": {
              "id": "ExportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs: //bucketName/fileName*. If the file already exists, the requests // succeeds, but the operation fails. If *fileType* is // *SQL* and the filename ends with .gz, the contents are // compressed."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#exportContext*."
                },
                "offload": {
                  "type": "boolean",
                  "description": "Option for export offload."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "databases": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
                },
                "csvExportOptions": {
                  "type": "object",
                  "properties": {
                    "selectQuery": {
                      "type": "string",
                      "description": "The select query used to extract the data."
                    }
                  },
                  "description": "Options for exporting data as CSV."
                },
                "sqlExportOptions": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
                    },
                    "schemaOnly": {
                      "type": "boolean",
                      "description": "Export only schemas."
                    },
                    "mysqlExportOptions": {
                      "type": "object",
                      "properties": {
                        "masterData": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored."
                        }
                      },
                      "description": "Options for exporting from MySQL."
                    }
                  },
                  "description": "Options for exporting data as SQL statements."
                }
              },
              "description": "Contains details about the export operation."
            }
          },
          "description": "Database instance export request."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#operation*."
            },
            "name": {
              "type": "string",
              "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
            },
            "user": {
              "type": "string",
              "description": "The email address of the user who initiated this operation."
            },
            "error": {
              "id": "OperationErrors",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#operationErrors*."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "OperationError",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Identifies the specific error that occurred."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#operationError*."
                      },
                      "message": {
                        "type": "string",
                        "description": "Additional information about the error encountered."
                      }
                    },
                    "description": "Database instance operation error."
                  },
                  "description": "The list of errors encountered while processing this operation."
                }
              },
              "description": "If errors occurred during processing of this operation, this field will be populated."
            },
            "status": {
              "enum": [
                "SQL_OPERATION_STATUS_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
              "enumDescriptions": [
                "The state of the operation is unknown.",
                "The operation has been queued, but has not started yet.",
                "The operation is running.",
                "The operation completed."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "targetId": {
              "type": "string",
              "description": "Name of the database instance related to this operation."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "insertTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "targetLink": {
              "type": "string"
            },
            "exportContext": {
              "id": "ExportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs: //bucketName/fileName*. If the file already exists, the requests // succeeds, but the operation fails. If *fileType* is // *SQL* and the filename ends with .gz, the contents are // compressed."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#exportContext*."
                },
                "offload": {
                  "type": "boolean",
                  "description": "Option for export offload."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "databases": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
                },
                "csvExportOptions": {
                  "type": "object",
                  "properties": {
                    "selectQuery": {
                      "type": "string",
                      "description": "The select query used to extract the data."
                    }
                  },
                  "description": "Options for exporting data as CSV."
                },
                "sqlExportOptions": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
                    },
                    "schemaOnly": {
                      "type": "boolean",
                      "description": "Export only schemas."
                    },
                    "mysqlExportOptions": {
                      "type": "object",
                      "properties": {
                        "masterData": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored."
                        }
                      },
                      "description": "Options for exporting from MySQL."
                    }
                  },
                  "description": "Options for exporting data as SQL statements."
                }
              },
              "description": "The context for export operation, if applicable."
            },
            "importContext": {
              "id": "ImportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "Path to the import file in Cloud Storage, in the form *gs: //bucketName/fileName*. Compressed gzip files (.gz) are supported // when *fileType* is *SQL*. The instance must have // write permissions to the bucket and read access to the file."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#importContext*."
                },
                "database": {
                  "type": "string",
                  "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "importUser": {
                  "type": "string",
                  "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
                },
                "bakImportOptions": {
                  "type": "object",
                  "properties": {
                    "encryptionOptions": {
                      "type": "object",
                      "properties": {
                        "pvkPath": {
                          "type": "string",
                          "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "certPath": {
                          "type": "string",
                          "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "pvkPassword": {
                          "type": "string",
                          "description": "Password that encrypts the private key"
                        }
                      }
                    }
                  },
                  "description": "Import parameters specific to SQL Server .BAK files"
                },
                "csvImportOptions": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "description": "The table to which CSV data is imported."
                    },
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
                    }
                  },
                  "description": "Options for importing data as CSV."
                }
              },
              "description": "The context for import operation, if applicable."
            },
            "operationType": {
              "enum": [
                "SQL_OPERATION_TYPE_UNSPECIFIED",
                "IMPORT",
                "EXPORT",
                "CREATE",
                "UPDATE",
                "DELETE",
                "RESTART",
                "BACKUP",
                "SNAPSHOT",
                "BACKUP_VOLUME",
                "DELETE_VOLUME",
                "RESTORE_VOLUME",
                "INJECT_USER",
                "CLONE",
                "STOP_REPLICA",
                "START_REPLICA",
                "PROMOTE_REPLICA",
                "CREATE_REPLICA",
                "CREATE_USER",
                "DELETE_USER",
                "UPDATE_USER",
                "CREATE_DATABASE",
                "DELETE_DATABASE",
                "UPDATE_DATABASE",
                "FAILOVER",
                "DELETE_BACKUP",
                "RECREATE_REPLICA",
                "TRUNCATE_LOG",
                "DEMOTE_MASTER",
                "MAINTENANCE",
                "ENABLE_PRIVATE_IP",
                "DEFER_MAINTENANCE",
                "CREATE_CLONE",
                "RESCHEDULE_MAINTENANCE",
                "START_EXTERNAL_SYNC"
              ],
              "type": "string",
              "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*",
              "enumDescriptions": [
                "Unknown operation type.",
                "Imports data into a Cloud SQL instance.",
                "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
                "Creates a new Cloud SQL instance.",
                "Updates the settings of a Cloud SQL instance.",
                "Deletes a Cloud SQL instance.",
                "Restarts the Cloud SQL instance.",
                "",
                "",
                "Performs instance backup.",
                "Deletes an instance backup.",
                "Restores an instance backup.",
                "Injects a privileged user in mysql for MOB instances.",
                "Clones a Cloud SQL instance.",
                "Stops replication on a Cloud SQL read replica instance.",
                "Starts replication on a Cloud SQL read replica instance.",
                "Promotes a Cloud SQL replica instance.",
                "Creates a Cloud SQL replica instance.",
                "Creates a new user in a Cloud SQL instance.",
                "Deletes a user from a Cloud SQL instance.",
                "Updates an existing user in a Cloud SQL instance.",
                "Creates a database in the Cloud SQL instance.",
                "Deletes a database in the Cloud SQL instance.",
                "Updates a database in the Cloud SQL instance.",
                "Performs failover of an HA-enabled Cloud SQL failover replica.",
                "Deletes the backup taken by a backup run.",
                "",
                "Truncates a general or slow log table in MySQL.",
                "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
                "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
                "This field is deprecated, and will be removed in future version of API.",
                "",
                "Creates clone instance.",
                "Reschedule maintenance to another time.",
                "Starts external sync of a Cloud SQL EM replica to an external master."
              ]
            },
            "targetProject": {
              "type": "string",
              "description": "The project ID of the target instance related to this operation."
            }
          },
          "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource."
        }
      ]
  instances.failover:
    description: |-
      Failover the instance to its failover replica instance. Using this operation might cause your instance to restart.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/instances/failover
    example:
      inputs: [
        {
          "id": "InstancesFailoverRequest",
          "type": "object",
          "properties": {
            "failoverContext": {
              "id": "FailoverContext",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#failoverContext*."
                },
                "settingsVersion": {
                  "type": "string",
                  "format": "int64",
                  "description": "The current settings version of this instance. Request will be rejected if this version doesn't match the current settings version."
                }
              },
              "description": "Failover Context."
            }
          },
          "description": "Instance failover request."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#operation*."
            },
            "name": {
              "type": "string",
              "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
            },
            "user": {
              "type": "string",
              "description": "The email address of the user who initiated this operation."
            },
            "error": {
              "id": "OperationErrors",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#operationErrors*."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "OperationError",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Identifies the specific error that occurred."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#operationError*."
                      },
                      "message": {
                        "type": "string",
                        "description": "Additional information about the error encountered."
                      }
                    },
                    "description": "Database instance operation error."
                  },
                  "description": "The list of errors encountered while processing this operation."
                }
              },
              "description": "If errors occurred during processing of this operation, this field will be populated."
            },
            "status": {
              "enum": [
                "SQL_OPERATION_STATUS_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
              "enumDescriptions": [
                "The state of the operation is unknown.",
                "The operation has been queued, but has not started yet.",
                "The operation is running.",
                "The operation completed."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "targetId": {
              "type": "string",
              "description": "Name of the database instance related to this operation."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "insertTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "targetLink": {
              "type": "string"
            },
            "exportContext": {
              "id": "ExportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs: //bucketName/fileName*. If the file already exists, the requests // succeeds, but the operation fails. If *fileType* is // *SQL* and the filename ends with .gz, the contents are // compressed."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#exportContext*."
                },
                "offload": {
                  "type": "boolean",
                  "description": "Option for export offload."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "databases": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
                },
                "csvExportOptions": {
                  "type": "object",
                  "properties": {
                    "selectQuery": {
                      "type": "string",
                      "description": "The select query used to extract the data."
                    }
                  },
                  "description": "Options for exporting data as CSV."
                },
                "sqlExportOptions": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
                    },
                    "schemaOnly": {
                      "type": "boolean",
                      "description": "Export only schemas."
                    },
                    "mysqlExportOptions": {
                      "type": "object",
                      "properties": {
                        "masterData": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored."
                        }
                      },
                      "description": "Options for exporting from MySQL."
                    }
                  },
                  "description": "Options for exporting data as SQL statements."
                }
              },
              "description": "The context for export operation, if applicable."
            },
            "importContext": {
              "id": "ImportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "Path to the import file in Cloud Storage, in the form *gs: //bucketName/fileName*. Compressed gzip files (.gz) are supported // when *fileType* is *SQL*. The instance must have // write permissions to the bucket and read access to the file."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#importContext*."
                },
                "database": {
                  "type": "string",
                  "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "importUser": {
                  "type": "string",
                  "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
                },
                "bakImportOptions": {
                  "type": "object",
                  "properties": {
                    "encryptionOptions": {
                      "type": "object",
                      "properties": {
                        "pvkPath": {
                          "type": "string",
                          "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "certPath": {
                          "type": "string",
                          "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "pvkPassword": {
                          "type": "string",
                          "description": "Password that encrypts the private key"
                        }
                      }
                    }
                  },
                  "description": "Import parameters specific to SQL Server .BAK files"
                },
                "csvImportOptions": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "description": "The table to which CSV data is imported."
                    },
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
                    }
                  },
                  "description": "Options for importing data as CSV."
                }
              },
              "description": "The context for import operation, if applicable."
            },
            "operationType": {
              "enum": [
                "SQL_OPERATION_TYPE_UNSPECIFIED",
                "IMPORT",
                "EXPORT",
                "CREATE",
                "UPDATE",
                "DELETE",
                "RESTART",
                "BACKUP",
                "SNAPSHOT",
                "BACKUP_VOLUME",
                "DELETE_VOLUME",
                "RESTORE_VOLUME",
                "INJECT_USER",
                "CLONE",
                "STOP_REPLICA",
                "START_REPLICA",
                "PROMOTE_REPLICA",
                "CREATE_REPLICA",
                "CREATE_USER",
                "DELETE_USER",
                "UPDATE_USER",
                "CREATE_DATABASE",
                "DELETE_DATABASE",
                "UPDATE_DATABASE",
                "FAILOVER",
                "DELETE_BACKUP",
                "RECREATE_REPLICA",
                "TRUNCATE_LOG",
                "DEMOTE_MASTER",
                "MAINTENANCE",
                "ENABLE_PRIVATE_IP",
                "DEFER_MAINTENANCE",
                "CREATE_CLONE",
                "RESCHEDULE_MAINTENANCE",
                "START_EXTERNAL_SYNC"
              ],
              "type": "string",
              "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*",
              "enumDescriptions": [
                "Unknown operation type.",
                "Imports data into a Cloud SQL instance.",
                "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
                "Creates a new Cloud SQL instance.",
                "Updates the settings of a Cloud SQL instance.",
                "Deletes a Cloud SQL instance.",
                "Restarts the Cloud SQL instance.",
                "",
                "",
                "Performs instance backup.",
                "Deletes an instance backup.",
                "Restores an instance backup.",
                "Injects a privileged user in mysql for MOB instances.",
                "Clones a Cloud SQL instance.",
                "Stops replication on a Cloud SQL read replica instance.",
                "Starts replication on a Cloud SQL read replica instance.",
                "Promotes a Cloud SQL replica instance.",
                "Creates a Cloud SQL replica instance.",
                "Creates a new user in a Cloud SQL instance.",
                "Deletes a user from a Cloud SQL instance.",
                "Updates an existing user in a Cloud SQL instance.",
                "Creates a database in the Cloud SQL instance.",
                "Deletes a database in the Cloud SQL instance.",
                "Updates a database in the Cloud SQL instance.",
                "Performs failover of an HA-enabled Cloud SQL failover replica.",
                "Deletes the backup taken by a backup run.",
                "",
                "Truncates a general or slow log table in MySQL.",
                "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
                "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
                "This field is deprecated, and will be removed in future version of API.",
                "",
                "Creates clone instance.",
                "Reschedule maintenance to another time.",
                "Starts external sync of a Cloud SQL EM replica to an external master."
              ]
            },
            "targetProject": {
              "type": "string",
              "description": "The project ID of the target instance related to this operation."
            }
          },
          "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource."
        }
      ]
  instances.get:
    description: |-
      Retrieves a resource containing information about a Cloud SQL instance.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/instances/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "DatabaseInstance",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "This field is deprecated and will be removed from a future version of the API. Use the *settings.settingsVersion* field instead."
            },
            "kind": {
              "type": "string",
              "description": "This is always *sql#instance*."
            },
            "name": {
              "type": "string",
              "description": "Name of the Cloud SQL instance. This does not include the project ID."
            },
            "state": {
              "enum": [
                "SQL_INSTANCE_STATE_UNSPECIFIED",
                "RUNNABLE",
                "SUSPENDED",
                "PENDING_DELETE",
                "PENDING_CREATE",
                "MAINTENANCE",
                "FAILED"
              ],
              "type": "string",
              "description": "The current serving state of the Cloud SQL instance. This can be one of the following. *RUNNABLE*: The instance is running, or is ready to run when accessed. *SUSPENDED*: The instance is not available, for example due to problems with billing. *PENDING_CREATE*: The instance is being created. *MAINTENANCE*: The instance is down for maintenance. *FAILED*: The instance creation failed. *UNKNOWN_STATE*: The state of the instance is unknown.",
              "enumDescriptions": [
                "The state of the instance is unknown.",
                "The instance is running.",
                "The instance is currently offline, but it may run again in the future.",
                "The instance is being deleted.",
                "The instance is being created.",
                "The instance is down for maintenance.",
                "The instance failed to be created."
              ]
            },
            "region": {
              "type": "string",
              "description": "The geographical region. Can be *us-central* (*FIRST_GEN* instances only) *us-central1* (*SECOND_GEN* instances only) *asia-east1* or *europe-west1*. Defaults to *us-central* or *us-central1* depending on the instance type. The region cannot be changed after instance creation."
            },
            "gceZone": {
              "type": "string",
              "description": "The Compute Engine zone that the instance is currently serving from. This value could be different from the zone that was specified when the instance was created if the instance has failed over to its secondary zone."
            },
            "project": {
              "type": "string",
              "description": "The project ID of the project containing the Cloud SQL instance. The Google apps domain is prefixed if applicable."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "settings": {
              "id": "Settings",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#settings*."
                },
                "tier": {
                  "type": "string",
                  "description": "The tier (or machine type) for this instance, for example *db-n1-standard-1* (MySQL instances) or *db-custom-1-3840* (PostgreSQL instances)."
                },
                "collation": {
                  "type": "string",
                  "description": "The name of server Instance collation."
                },
                "userLabels": {
                  "type": "object",
                  "description": "User-provided labels, represented as a dictionary where each label is a single key value pair.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "pricingPlan": {
                  "enum": [
                    "SQL_PRICING_PLAN_UNSPECIFIED",
                    "PACKAGE",
                    "PER_USE"
                  ],
                  "type": "string",
                  "description": "The pricing plan for this instance. This can be either *PER_USE* or *PACKAGE*. Only *PER_USE* is supported for Second Generation instances.",
                  "enumDescriptions": [
                    "This is an unknown pricing plan for this instance.",
                    "The instance is billed at a monthly flat rate.",
                    "The instance is billed per usage."
                  ]
                },
                "dataDiskType": {
                  "enum": [
                    "SQL_DATA_DISK_TYPE_UNSPECIFIED",
                    "PD_SSD",
                    "PD_HDD",
                    "OBSOLETE_LOCAL_SSD"
                  ],
                  "type": "string",
                  "description": "The type of data disk: PD_SSD (default) or PD_HDD. Not used for First Generation instances.",
                  "enumDescriptions": [
                    "This is an unknown data disk type.",
                    "An SSD data disk.",
                    "An HDD data disk.",
                    "This field is deprecated and will be removed from a future version of the API."
                  ]
                },
                "databaseFlags": {
                  "type": "array",
                  "items": {
                    "id": "DatabaseFlags",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the flag. These flags are passed at instance startup, so include both server options and system variables for MySQL. Flags are specified with underscores, not hyphens. For more information, see Configuring Database Flags in the Cloud SQL documentation."
                      },
                      "value": {
                        "type": "string",
                        "description": "The value of the flag. Booleans are set to *on* for true and *off* for false. This field must be omitted if the flag doesn't take a value."
                      }
                    },
                    "description": "Database flags for Cloud SQL instances."
                  },
                  "description": "The database flags passed to the instance at startup."
                },
                "dataDiskSizeGb": {
                  "type": "string",
                  "format": "int64",
                  "description": "The size of data disk, in GB. The data disk size minimum is 10GB."
                },
                "ipConfiguration": {
                  "id": "IpConfiguration",
                  "type": "object",
                  "properties": {
                    "requireSsl": {
                      "type": "boolean",
                      "description": "Whether SSL connections over IP are enforced or not."
                    },
                    "ipv4Enabled": {
                      "type": "boolean",
                      "description": "Whether the instance is assigned a public IP address or not."
                    },
                    "privateNetwork": {
                      "type": "string",
                      "description": "The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, */projects/myProject/global/networks/default*. This setting can be updated, but it cannot be removed after it is set."
                    },
                    "authorizedNetworks": {
                      "type": "array",
                      "items": {
                        "id": "AclEntry",
                        "type": "object",
                        "properties": {
                          "kind": {
                            "type": "string",
                            "description": "This is always *sql#aclEntry*."
                          },
                          "name": {
                            "type": "string",
                            "description": "Optional. A label to identify this entry."
                          },
                          "value": {
                            "type": "string",
                            "description": "The allowlisted value for the access control list."
                          },
                          "expirationTime": {
                            "type": "string",
                            "format": "google-datetime",
                            "description": "The time when this access control entry expires in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
                          }
                        },
                        "description": "An entry for an Access Control list."
                      },
                      "description": "The list of external networks that are allowed to connect to the instance using the IP. In 'CIDR' notation, also known as 'slash' notation (for example: *192.168.100.0/24*)."
                    }
                  },
                  "description": "The settings for IP Management. This allows to enable or disable the instance IP and manage which external networks can connect to the instance. The IPv4 address cannot be disabled for Second Generation instances."
                },
                "replicationType": {
                  "enum": [
                    "SQL_REPLICATION_TYPE_UNSPECIFIED",
                    "SYNCHRONOUS",
                    "ASYNCHRONOUS"
                  ],
                  "type": "string",
                  "description": "The type of replication this instance uses. This can be either *ASYNCHRONOUS* or *SYNCHRONOUS*. (Deprecated_ This property was only applicable to First Generation instances.",
                  "enumDescriptions": [
                    "This is an unknown replication type for a Cloud SQL instance.",
                    "The synchronous replication mode for First Generation instances. It is the default value.",
                    "The asynchronous replication mode for First Generation instances. It provides a slight performance gain, but if an outage occurs while this option is set to asynchronous, you can lose up to a few seconds of updates to your data."
                  ]
                },
                "settingsVersion": {
                  "type": "string",
                  "format": "int64",
                  "description": "The version of instance settings. This is a required field for update method to make sure concurrent updates are handled properly. During update, use the most recent settingsVersion value for this instance and do not try to update this value."
                },
                "activationPolicy": {
                  "enum": [
                    "SQL_ACTIVATION_POLICY_UNSPECIFIED",
                    "ALWAYS",
                    "NEVER",
                    "ON_DEMAND"
                  ],
                  "type": "string",
                  "description": "The activation policy specifies when the instance is activated; it is applicable only when the instance state is RUNNABLE. Valid values: *ALWAYS*: The instance is on, and remains so even in the absence of connection requests. *NEVER*: The instance is off; it is not activated, even if a connection request arrives.",
                  "enumDescriptions": [
                    "Unknown activation plan.",
                    "The instance is always up and running.",
                    "The instance never starts.",
                    "The instance starts upon receiving requests."
                  ]
                },
                "availabilityType": {
                  "enum": [
                    "SQL_AVAILABILITY_TYPE_UNSPECIFIED",
                    "ZONAL",
                    "REGIONAL"
                  ],
                  "type": "string",
                  "description": "Availability type. Potential values: *ZONAL*: The instance serves data from only one zone. Outages in that zone affect data accessibility. *REGIONAL*: The instance can serve data from more than one zone in a region (it is highly available). For more information, see Overview of the High Availability Configuration.",
                  "enumDescriptions": [
                    "This is an unknown Availability type.",
                    "Zonal available instance.",
                    "Regional available instance."
                  ]
                },
                "maintenanceWindow": {
                  "id": "MaintenanceWindow",
                  "type": "object",
                  "properties": {
                    "day": {
                      "type": "integer",
                      "format": "int32",
                      "description": "day of week (1-7), starting on Monday."
                    },
                    "hour": {
                      "type": "integer",
                      "format": "int32",
                      "description": "hour of day - 0 to 23."
                    },
                    "kind": {
                      "type": "string",
                      "description": "This is always *sql#maintenanceWindow*."
                    },
                    "updateTrack": {
                      "enum": [
                        "SQL_UPDATE_TRACK_UNSPECIFIED",
                        "canary",
                        "stable"
                      ],
                      "type": "string",
                      "description": "Maintenance timing setting: *canary* (Earlier) or *stable* (Later). Learn more.",
                      "enumDescriptions": [
                        "This is an unknown maintenance timing preference.",
                        "For instance update that requires a restart, this update track indicates your instance prefer to restart for new version early in maintenance window.",
                        "For instance update that requires a restart, this update track indicates your instance prefer to let Cloud SQL choose the timing of restart (within its Maintenance window, if applicable)."
                      ]
                    }
                  },
                  "description": "The maintenance window for this instance. This specifies when the instance can be restarted for maintenance purposes."
                },
                "storageAutoResize": {
                  "type": "boolean",
                  "description": "Configuration to increase storage size automatically. The default value is true."
                },
                "locationPreference": {
                  "id": "LocationPreference",
                  "type": "object",
                  "properties": {
                    "kind": {
                      "type": "string",
                      "description": "This is always *sql#locationPreference*."
                    },
                    "zone": {
                      "type": "string",
                      "description": "The preferred Compute Engine zone (for example: us-central1-a, us-central1-b, etc.)."
                    },
                    "followGaeApplication": {
                      "type": "string",
                      "description": "The App Engine application to follow, it must be in the same region as the Cloud SQL instance."
                    }
                  },
                  "description": "The location preference settings. This allows the instance to be located as near as possible to either an App Engine app or Compute Engine zone for better performance. App Engine co-location was only applicable to First Generation instances."
                },
                "backupConfiguration": {
                  "id": "BackupConfiguration",
                  "type": "object",
                  "properties": {
                    "kind": {
                      "type": "string",
                      "description": "This is always *sql#backupConfiguration*."
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "Whether this configuration is enabled."
                    },
                    "location": {
                      "type": "string",
                      "description": "Location of the backup"
                    },
                    "startTime": {
                      "type": "string",
                      "description": "Start time for the daily backup configuration in UTC timezone in the 24 hour format - *HH:MM*."
                    },
                    "binaryLogEnabled": {
                      "type": "boolean",
                      "description": "(MySQL only) Whether binary log is enabled. If backup configuration is disabled, binarylog must be disabled as well."
                    },
                    "pointInTimeRecoveryEnabled": {
                      "type": "boolean",
                      "description": "Reserved for future use."
                    },
                    "replicationLogArchivingEnabled": {
                      "type": "boolean",
                      "description": "Reserved for future use."
                    }
                  },
                  "description": "The daily backup configuration for the instance."
                },
                "storageAutoResizeLimit": {
                  "type": "string",
                  "format": "int64",
                  "description": "The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit."
                },
                "authorizedGaeApplications": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The App Engine app IDs that can access this instance. (Deprecated) Applied to First Generation instances only."
                },
                "databaseReplicationEnabled": {
                  "type": "boolean",
                  "description": "Configuration specific to read replica instances. Indicates whether replication is enabled or not."
                },
                "crashSafeReplicationEnabled": {
                  "type": "boolean",
                  "description": "Configuration specific to read replica instances. Indicates whether database flags for crash-safe replication are enabled. This property was only applicable to First Generation instances."
                }
              },
              "description": "The user settings."
            },
            "backendType": {
              "enum": [
                "SQL_BACKEND_TYPE_UNSPECIFIED",
                "FIRST_GEN",
                "SECOND_GEN",
                "EXTERNAL"
              ],
              "type": "string",
              "description": " *SECOND_GEN*: Cloud SQL database instance. *EXTERNAL*: A database server that is not managed by Google. This property is read-only; use the *tier* property in the *settings* object to determine the database type.",
              "enumDescriptions": [
                "This is an unknown backend type for instance.",
                "V1 speckle instance.",
                "V2 speckle instance.",
                "On premises instance."
              ]
            },
            "ipAddresses": {
              "type": "array",
              "items": {
                "id": "IpMapping",
                "type": "object",
                "properties": {
                  "type": {
                    "enum": [
                      "SQL_IP_ADDRESS_TYPE_UNSPECIFIED",
                      "PRIMARY",
                      "OUTGOING",
                      "PRIVATE",
                      "MIGRATED_1ST_GEN"
                    ],
                    "type": "string",
                    "description": "The type of this IP address. A *PRIMARY* address is a public address that can accept incoming connections. A *PRIVATE* address is a private address that can accept incoming connections. An *OUTGOING* address is the source address of connections originating from the instance, if supported.",
                    "enumDescriptions": [
                      "This is an unknown IP address type.",
                      "IP address the customer is supposed to connect to. Usually this is the load balancer's IP address",
                      "Source IP address of the connection a read replica establishes to its external master. This IP address can be allowlisted by the customer in case it has a firewall that filters incoming connection to its on premises master.",
                      "Private IP used when using private IPs and network peering.",
                      "V1 IP of a migrated instance. We want the user to decommission this IP as soon as the migration is complete. Note: V1 instances with V1 ip addresses will be counted as PRIMARY."
                    ]
                  },
                  "ipAddress": {
                    "type": "string",
                    "description": "The IP address assigned."
                  },
                  "timeToRetire": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The due time for this IP to be retired in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*. This field is only available when the IP is scheduled to be retired."
                  }
                },
                "description": "Database instance IP Mapping."
              },
              "description": "The assigned IP addresses for the instance."
            },
            "ipv6Address": {
              "type": "string",
              "description": "The IPv6 address assigned to the instance. (Deprecated) This property was applicable only to First Generation instances."
            },
            "maxDiskSize": {
              "type": "string",
              "format": "int64",
              "description": "The maximum disk size of the instance in bytes."
            },
            "instanceType": {
              "enum": [
                "SQL_INSTANCE_TYPE_UNSPECIFIED",
                "CLOUD_SQL_INSTANCE",
                "ON_PREMISES_INSTANCE",
                "READ_REPLICA_INSTANCE"
              ],
              "type": "string",
              "description": "The instance type. This can be one of the following. *CLOUD_SQL_INSTANCE*: A Cloud SQL instance that is not replicating from a master. *ON_PREMISES_INSTANCE*: An instance running on the customer's premises. *READ_REPLICA_INSTANCE*: A Cloud SQL instance configured as a read-replica.",
              "enumDescriptions": [
                "This is an unknown Cloud SQL instance type.",
                "A regular Cloud SQL instance.",
                "An instance running on the customer's premises that is not managed by Cloud SQL.",
                "A Cloud SQL instance acting as a read-replica."
              ]
            },
            "replicaNames": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The replicas of the instance."
            },
            "rootPassword": {
              "type": "string",
              "description": "Initial root password. Use only on creation."
            },
            "serverCaCert": {
              "id": "SslCert",
              "type": "object",
              "properties": {
                "cert": {
                  "type": "string",
                  "description": "PEM representation."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#sslCert*."
                },
                "instance": {
                  "type": "string",
                  "description": "Name of the database instance."
                },
                "selfLink": {
                  "type": "string",
                  "description": "The URI of this resource."
                },
                "commonName": {
                  "type": "string",
                  "description": "User supplied name. Constrained to [a-zA-Z.-_ ]+."
                },
                "createTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "The time when the certificate was created in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*"
                },
                "expirationTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "The time when the certificate expires in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
                },
                "sha1Fingerprint": {
                  "type": "string",
                  "description": "Sha1 Fingerprint."
                },
                "certSerialNumber": {
                  "type": "string",
                  "description": "Serial number, as extracted from the certificate."
                }
              },
              "description": "SSL configuration."
            },
            "connectionName": {
              "type": "string",
              "description": "Connection name of the Cloud SQL instance used in connection strings."
            },
            "currentDiskSize": {
              "type": "string",
              "format": "int64",
              "description": "The current disk usage of the instance in bytes. This property has been deprecated. Use the \"cloudsql.googleapis.com/database/disk/bytes_used\" metric in Cloud Monitoring API instead. Please see this announcement for details."
            },
            "databaseVersion": {
              "enum": [
                "SQL_DATABASE_VERSION_UNSPECIFIED",
                "MYSQL_5_1",
                "MYSQL_5_5",
                "MYSQL_5_6",
                "MYSQL_5_7",
                "POSTGRES_9_6",
                "POSTGRES_11",
                "SQLSERVER_2017_STANDARD",
                "SQLSERVER_2017_ENTERPRISE",
                "SQLSERVER_2017_EXPRESS",
                "SQLSERVER_2017_WEB",
                "POSTGRES_10",
                "POSTGRES_12",
                "MYSQL_8_0"
              ],
              "type": "string",
              "description": "The database engine type and version. The *databaseVersion* field cannot be changed after instance creation. MySQL instances: *MYSQL_5_7* (default), or *MYSQL_5_6*. PostgreSQL instances: *POSTGRES_9_6*, *POSTGRES_10*, *POSTGRES_11* or *POSTGRES_12* (default). SQL Server instances: *SQLSERVER_2017_STANDARD* (default), *SQLSERVER_2017_ENTERPRISE*, *SQLSERVER_2017_EXPRESS*, or *SQLSERVER_2017_WEB*.",
              "enumDescriptions": [
                "This is an unknown database version.",
                "The database version is MySQL 5.1.",
                "The database version is MySQL 5.5.",
                "The database version is MySQL 5.6.",
                "The database version is MySQL 5.7.",
                "The database version is PostgreSQL 9.6.",
                "The database version is PostgreSQL 11.",
                "The database version is SQL Server 2017 Standard.",
                "The database version is SQL Server 2017 Enterprise.",
                "The database version is SQL Server 2017 Express.",
                "The database version is SQL Server 2017 Web.",
                "The database version is PostgreSQL 10.",
                "The database version is PostgreSQL 12.",
                "The database version is MySQL 8."
              ]
            },
            "failoverReplica": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the failover replica. If specified at instance creation, a failover replica is created for the instance. The name doesn't include the project ID. This property is applicable only to Second Generation instances."
                },
                "available": {
                  "type": "boolean",
                  "description": "The availability status of the failover replica. A false status indicates that the failover replica is out of sync. The master can only failover to the failover replica when the status is true."
                }
              },
              "description": "The name and status of the failover replica. This property is applicable only to Second Generation instances."
            },
            "suspensionReason": {
              "type": "array",
              "items": {
                "enum": [
                  "SQL_SUSPENSION_REASON_UNSPECIFIED",
                  "BILLING_ISSUE",
                  "LEGAL_ISSUE",
                  "OPERATIONAL_ISSUE",
                  "KMS_KEY_ISSUE"
                ],
                "type": "string",
                "enumDescriptions": [
                  "This is an unknown suspension reason.",
                  "The instance is suspended due to billing issues (for example:, GCP account issue)",
                  "The instance is suspended due to illegal content (for example:, child pornography, copyrighted material, etc.).",
                  "The instance is causing operational issues (for example:, causing the database to crash).",
                  "The KMS key used by the instance is either revoked or denied access to"
                ]
              },
              "description": "If the instance state is SUSPENDED, the reason for the suspension.",
              "enumDescriptions": [
                "This is an unknown suspension reason.",
                "The instance is suspended due to billing issues (for example:, GCP account issue)",
                "The instance is suspended due to illegal content (for example:, child pornography, copyrighted material, etc.).",
                "The instance is causing operational issues (for example:, causing the database to crash).",
                "The KMS key used by the instance is either revoked or denied access to"
              ]
            },
            "masterInstanceName": {
              "type": "string",
              "description": "The name of the instance which will act as master in the replication setup."
            },
            "diskEncryptionStatus": {
              "id": "DiskEncryptionStatus",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#diskEncryptionStatus*."
                },
                "kmsKeyVersionName": {
                  "type": "string",
                  "description": "KMS key version used to encrypt the Cloud SQL instance resource"
                }
              },
              "description": "Disk encryption status specific to an instance. Applies only to Second Generation instances."
            },
            "replicaConfiguration": {
              "id": "ReplicaConfiguration",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#replicaConfiguration*."
                },
                "failoverTarget": {
                  "type": "boolean",
                  "description": "Specifies if the replica is the failover target. If the field is set to *true* the replica will be designated as a failover replica. In case the master instance fails, the replica instance will be promoted as the new master instance. Only one replica can be specified as failover target, and the replica has to be in different zone with the master instance."
                },
                "mysqlReplicaConfiguration": {
                  "id": "MySqlReplicaConfiguration",
                  "type": "object",
                  "properties": {
                    "kind": {
                      "type": "string",
                      "description": "This is always *sql#mysqlReplicaConfiguration*."
                    },
                    "password": {
                      "type": "string",
                      "description": "The password for the replication connection."
                    },
                    "username": {
                      "type": "string",
                      "description": "The username for the replication connection."
                    },
                    "clientKey": {
                      "type": "string",
                      "description": "PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate."
                    },
                    "sslCipher": {
                      "type": "string",
                      "description": "A list of permissible ciphers to use for SSL encryption."
                    },
                    "dumpFilePath": {
                      "type": "string",
                      "description": "Path to a SQL dump file in Google Cloud Storage from which the replica instance is to be created. The URI is in the form gs://bucketName/fileName. Compressed gzip files (.gz) are also supported. Dumps have the binlog co-ordinates from which replication begins. This can be accomplished by setting --master-data to 1 when using mysqldump."
                    },
                    "caCertificate": {
                      "type": "string",
                      "description": "PEM representation of the trusted CA's x509 certificate."
                    },
                    "clientCertificate": {
                      "type": "string",
                      "description": "PEM representation of the replica's x509 certificate."
                    },
                    "connectRetryInterval": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Seconds to wait between connect retries. MySQL's default is 60 seconds."
                    },
                    "masterHeartbeatPeriod": {
                      "type": "string",
                      "format": "int64",
                      "description": "Interval in milliseconds between replication heartbeats."
                    },
                    "verifyServerCertificate": {
                      "type": "boolean",
                      "description": "Whether or not to check the master's Common Name value in the certificate that it sends during the SSL handshake."
                    }
                  },
                  "description": "MySQL specific configuration when replicating from a MySQL on-premises master. Replication configuration information such as the username, password, certificates, and keys are not stored in the instance metadata. The configuration information is used only to set up the replication connection and is stored by MySQL in a file named *master.info* in the data directory."
                }
              },
              "description": "Configuration specific to failover replicas and read replicas."
            },
            "scheduledMaintenance": {
              "id": "SqlScheduledMaintenance",
              "type": "object",
              "properties": {
                "canDefer": {
                  "type": "boolean"
                },
                "startTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "The start time of any upcoming scheduled maintenance for this instance."
                },
                "canReschedule": {
                  "type": "boolean",
                  "description": "If the scheduled maintenance can be rescheduled."
                }
              },
              "description": "The start time of any upcoming scheduled maintenance for this instance."
            },
            "onPremisesConfiguration": {
              "id": "OnPremisesConfiguration",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#onPremisesConfiguration*."
                },
                "hostPort": {
                  "type": "string",
                  "description": "The host and port of the on-premises instance in host:port format"
                },
                "password": {
                  "type": "string",
                  "description": "The password for connecting to on-premises instance."
                },
                "username": {
                  "type": "string",
                  "description": "The username for connecting to on-premises instance."
                },
                "clientKey": {
                  "type": "string",
                  "description": "PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate."
                },
                "dumpFilePath": {
                  "type": "string",
                  "description": "The dump file to create the Cloud SQL replica."
                },
                "caCertificate": {
                  "type": "string",
                  "description": "PEM representation of the trusted CA's x509 certificate."
                },
                "clientCertificate": {
                  "type": "string",
                  "description": "PEM representation of the replica's x509 certificate."
                }
              },
              "description": "Configuration specific to on-premises instances."
            },
            "serviceAccountEmailAddress": {
              "type": "string",
              "description": "The service account email address assigned to the instance. This property is applicable only to Second Generation instances."
            },
            "diskEncryptionConfiguration": {
              "id": "DiskEncryptionConfiguration",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#diskEncryptionConfiguration*."
                },
                "kmsKeyName": {
                  "type": "string",
                  "description": "Resource name of KMS key for disk encryption"
                }
              },
              "description": "Disk encryption configuration specific to an instance. Applies only to Second Generation instances."
            }
          },
          "description": "A Cloud SQL instance resource. Next field: 34"
        }
      ]
  instances.import:
    description: |-
      Imports data into a Cloud SQL instance from a SQL dump or CSV file in Cloud Storage.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/instances/import
    example:
      inputs: [
        {
          "id": "InstancesImportRequest",
          "type": "object",
          "properties": {
            "importContext": {
              "id": "ImportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "Path to the import file in Cloud Storage, in the form *gs: //bucketName/fileName*. Compressed gzip files (.gz) are supported // when *fileType* is *SQL*. The instance must have // write permissions to the bucket and read access to the file."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#importContext*."
                },
                "database": {
                  "type": "string",
                  "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "importUser": {
                  "type": "string",
                  "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
                },
                "bakImportOptions": {
                  "type": "object",
                  "properties": {
                    "encryptionOptions": {
                      "type": "object",
                      "properties": {
                        "pvkPath": {
                          "type": "string",
                          "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "certPath": {
                          "type": "string",
                          "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "pvkPassword": {
                          "type": "string",
                          "description": "Password that encrypts the private key"
                        }
                      }
                    }
                  },
                  "description": "Import parameters specific to SQL Server .BAK files"
                },
                "csvImportOptions": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "description": "The table to which CSV data is imported."
                    },
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
                    }
                  },
                  "description": "Options for importing data as CSV."
                }
              },
              "description": "Contains details about the import operation."
            }
          },
          "description": "Database instance import request."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#operation*."
            },
            "name": {
              "type": "string",
              "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
            },
            "user": {
              "type": "string",
              "description": "The email address of the user who initiated this operation."
            },
            "error": {
              "id": "OperationErrors",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#operationErrors*."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "OperationError",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Identifies the specific error that occurred."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#operationError*."
                      },
                      "message": {
                        "type": "string",
                        "description": "Additional information about the error encountered."
                      }
                    },
                    "description": "Database instance operation error."
                  },
                  "description": "The list of errors encountered while processing this operation."
                }
              },
              "description": "If errors occurred during processing of this operation, this field will be populated."
            },
            "status": {
              "enum": [
                "SQL_OPERATION_STATUS_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
              "enumDescriptions": [
                "The state of the operation is unknown.",
                "The operation has been queued, but has not started yet.",
                "The operation is running.",
                "The operation completed."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "targetId": {
              "type": "string",
              "description": "Name of the database instance related to this operation."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "insertTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "targetLink": {
              "type": "string"
            },
            "exportContext": {
              "id": "ExportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs: //bucketName/fileName*. If the file already exists, the requests // succeeds, but the operation fails. If *fileType* is // *SQL* and the filename ends with .gz, the contents are // compressed."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#exportContext*."
                },
                "offload": {
                  "type": "boolean",
                  "description": "Option for export offload."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "databases": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
                },
                "csvExportOptions": {
                  "type": "object",
                  "properties": {
                    "selectQuery": {
                      "type": "string",
                      "description": "The select query used to extract the data."
                    }
                  },
                  "description": "Options for exporting data as CSV."
                },
                "sqlExportOptions": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
                    },
                    "schemaOnly": {
                      "type": "boolean",
                      "description": "Export only schemas."
                    },
                    "mysqlExportOptions": {
                      "type": "object",
                      "properties": {
                        "masterData": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored."
                        }
                      },
                      "description": "Options for exporting from MySQL."
                    }
                  },
                  "description": "Options for exporting data as SQL statements."
                }
              },
              "description": "The context for export operation, if applicable."
            },
            "importContext": {
              "id": "ImportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "Path to the import file in Cloud Storage, in the form *gs: //bucketName/fileName*. Compressed gzip files (.gz) are supported // when *fileType* is *SQL*. The instance must have // write permissions to the bucket and read access to the file."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#importContext*."
                },
                "database": {
                  "type": "string",
                  "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "importUser": {
                  "type": "string",
                  "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
                },
                "bakImportOptions": {
                  "type": "object",
                  "properties": {
                    "encryptionOptions": {
                      "type": "object",
                      "properties": {
                        "pvkPath": {
                          "type": "string",
                          "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "certPath": {
                          "type": "string",
                          "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "pvkPassword": {
                          "type": "string",
                          "description": "Password that encrypts the private key"
                        }
                      }
                    }
                  },
                  "description": "Import parameters specific to SQL Server .BAK files"
                },
                "csvImportOptions": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "description": "The table to which CSV data is imported."
                    },
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
                    }
                  },
                  "description": "Options for importing data as CSV."
                }
              },
              "description": "The context for import operation, if applicable."
            },
            "operationType": {
              "enum": [
                "SQL_OPERATION_TYPE_UNSPECIFIED",
                "IMPORT",
                "EXPORT",
                "CREATE",
                "UPDATE",
                "DELETE",
                "RESTART",
                "BACKUP",
                "SNAPSHOT",
                "BACKUP_VOLUME",
                "DELETE_VOLUME",
                "RESTORE_VOLUME",
                "INJECT_USER",
                "CLONE",
                "STOP_REPLICA",
                "START_REPLICA",
                "PROMOTE_REPLICA",
                "CREATE_REPLICA",
                "CREATE_USER",
                "DELETE_USER",
                "UPDATE_USER",
                "CREATE_DATABASE",
                "DELETE_DATABASE",
                "UPDATE_DATABASE",
                "FAILOVER",
                "DELETE_BACKUP",
                "RECREATE_REPLICA",
                "TRUNCATE_LOG",
                "DEMOTE_MASTER",
                "MAINTENANCE",
                "ENABLE_PRIVATE_IP",
                "DEFER_MAINTENANCE",
                "CREATE_CLONE",
                "RESCHEDULE_MAINTENANCE",
                "START_EXTERNAL_SYNC"
              ],
              "type": "string",
              "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*",
              "enumDescriptions": [
                "Unknown operation type.",
                "Imports data into a Cloud SQL instance.",
                "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
                "Creates a new Cloud SQL instance.",
                "Updates the settings of a Cloud SQL instance.",
                "Deletes a Cloud SQL instance.",
                "Restarts the Cloud SQL instance.",
                "",
                "",
                "Performs instance backup.",
                "Deletes an instance backup.",
                "Restores an instance backup.",
                "Injects a privileged user in mysql for MOB instances.",
                "Clones a Cloud SQL instance.",
                "Stops replication on a Cloud SQL read replica instance.",
                "Starts replication on a Cloud SQL read replica instance.",
                "Promotes a Cloud SQL replica instance.",
                "Creates a Cloud SQL replica instance.",
                "Creates a new user in a Cloud SQL instance.",
                "Deletes a user from a Cloud SQL instance.",
                "Updates an existing user in a Cloud SQL instance.",
                "Creates a database in the Cloud SQL instance.",
                "Deletes a database in the Cloud SQL instance.",
                "Updates a database in the Cloud SQL instance.",
                "Performs failover of an HA-enabled Cloud SQL failover replica.",
                "Deletes the backup taken by a backup run.",
                "",
                "Truncates a general or slow log table in MySQL.",
                "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
                "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
                "This field is deprecated, and will be removed in future version of API.",
                "",
                "Creates clone instance.",
                "Reschedule maintenance to another time.",
                "Starts external sync of a Cloud SQL EM replica to an external master."
              ]
            },
            "targetProject": {
              "type": "string",
              "description": "The project ID of the target instance related to this operation."
            }
          },
          "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource."
        }
      ]
  instances.insert:
    description: |-
      Creates a new Cloud SQL instance.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/instances/insert
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  instances.list:
    description: |-
      Lists instances under a given project.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/instances/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "InstancesListResponse",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#instancesList*."
            },
            "items": {
              "type": "array",
              "items": {
                "id": "DatabaseInstance",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "description": "This field is deprecated and will be removed from a future version of the API. Use the *settings.settingsVersion* field instead."
                  },
                  "kind": {
                    "type": "string",
                    "description": "This is always *sql#instance*."
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the Cloud SQL instance. This does not include the project ID."
                  },
                  "state": {
                    "enum": [
                      "SQL_INSTANCE_STATE_UNSPECIFIED",
                      "RUNNABLE",
                      "SUSPENDED",
                      "PENDING_DELETE",
                      "PENDING_CREATE",
                      "MAINTENANCE",
                      "FAILED"
                    ],
                    "type": "string",
                    "description": "The current serving state of the Cloud SQL instance. This can be one of the following. *RUNNABLE*: The instance is running, or is ready to run when accessed. *SUSPENDED*: The instance is not available, for example due to problems with billing. *PENDING_CREATE*: The instance is being created. *MAINTENANCE*: The instance is down for maintenance. *FAILED*: The instance creation failed. *UNKNOWN_STATE*: The state of the instance is unknown.",
                    "enumDescriptions": [
                      "The state of the instance is unknown.",
                      "The instance is running.",
                      "The instance is currently offline, but it may run again in the future.",
                      "The instance is being deleted.",
                      "The instance is being created.",
                      "The instance is down for maintenance.",
                      "The instance failed to be created."
                    ]
                  },
                  "region": {
                    "type": "string",
                    "description": "The geographical region. Can be *us-central* (*FIRST_GEN* instances only) *us-central1* (*SECOND_GEN* instances only) *asia-east1* or *europe-west1*. Defaults to *us-central* or *us-central1* depending on the instance type. The region cannot be changed after instance creation."
                  },
                  "gceZone": {
                    "type": "string",
                    "description": "The Compute Engine zone that the instance is currently serving from. This value could be different from the zone that was specified when the instance was created if the instance has failed over to its secondary zone."
                  },
                  "project": {
                    "type": "string",
                    "description": "The project ID of the project containing the Cloud SQL instance. The Google apps domain is prefixed if applicable."
                  },
                  "selfLink": {
                    "type": "string",
                    "description": "The URI of this resource."
                  },
                  "settings": {
                    "id": "Settings",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#settings*."
                      },
                      "tier": {
                        "type": "string",
                        "description": "The tier (or machine type) for this instance, for example *db-n1-standard-1* (MySQL instances) or *db-custom-1-3840* (PostgreSQL instances)."
                      },
                      "collation": {
                        "type": "string",
                        "description": "The name of server Instance collation."
                      },
                      "userLabels": {
                        "type": "object",
                        "description": "User-provided labels, represented as a dictionary where each label is a single key value pair.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "pricingPlan": {
                        "enum": [
                          "SQL_PRICING_PLAN_UNSPECIFIED",
                          "PACKAGE",
                          "PER_USE"
                        ],
                        "type": "string",
                        "description": "The pricing plan for this instance. This can be either *PER_USE* or *PACKAGE*. Only *PER_USE* is supported for Second Generation instances.",
                        "enumDescriptions": [
                          "This is an unknown pricing plan for this instance.",
                          "The instance is billed at a monthly flat rate.",
                          "The instance is billed per usage."
                        ]
                      },
                      "dataDiskType": {
                        "enum": [
                          "SQL_DATA_DISK_TYPE_UNSPECIFIED",
                          "PD_SSD",
                          "PD_HDD",
                          "OBSOLETE_LOCAL_SSD"
                        ],
                        "type": "string",
                        "description": "The type of data disk: PD_SSD (default) or PD_HDD. Not used for First Generation instances.",
                        "enumDescriptions": [
                          "This is an unknown data disk type.",
                          "An SSD data disk.",
                          "An HDD data disk.",
                          "This field is deprecated and will be removed from a future version of the API."
                        ]
                      },
                      "databaseFlags": {
                        "type": "array",
                        "items": {
                          "id": "DatabaseFlags",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the flag. These flags are passed at instance startup, so include both server options and system variables for MySQL. Flags are specified with underscores, not hyphens. For more information, see Configuring Database Flags in the Cloud SQL documentation."
                            },
                            "value": {
                              "type": "string",
                              "description": "The value of the flag. Booleans are set to *on* for true and *off* for false. This field must be omitted if the flag doesn't take a value."
                            }
                          },
                          "description": "Database flags for Cloud SQL instances."
                        },
                        "description": "The database flags passed to the instance at startup."
                      },
                      "dataDiskSizeGb": {
                        "type": "string",
                        "format": "int64",
                        "description": "The size of data disk, in GB. The data disk size minimum is 10GB."
                      },
                      "ipConfiguration": {
                        "id": "IpConfiguration",
                        "type": "object",
                        "properties": {
                          "requireSsl": {
                            "type": "boolean",
                            "description": "Whether SSL connections over IP are enforced or not."
                          },
                          "ipv4Enabled": {
                            "type": "boolean",
                            "description": "Whether the instance is assigned a public IP address or not."
                          },
                          "privateNetwork": {
                            "type": "string",
                            "description": "The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, */projects/myProject/global/networks/default*. This setting can be updated, but it cannot be removed after it is set."
                          },
                          "authorizedNetworks": {
                            "type": "array",
                            "items": {
                              "id": "AclEntry",
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "description": "This is always *sql#aclEntry*."
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Optional. A label to identify this entry."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The allowlisted value for the access control list."
                                },
                                "expirationTime": {
                                  "type": "string",
                                  "format": "google-datetime",
                                  "description": "The time when this access control entry expires in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
                                }
                              },
                              "description": "An entry for an Access Control list."
                            },
                            "description": "The list of external networks that are allowed to connect to the instance using the IP. In 'CIDR' notation, also known as 'slash' notation (for example: *192.168.100.0/24*)."
                          }
                        },
                        "description": "The settings for IP Management. This allows to enable or disable the instance IP and manage which external networks can connect to the instance. The IPv4 address cannot be disabled for Second Generation instances."
                      },
                      "replicationType": {
                        "enum": [
                          "SQL_REPLICATION_TYPE_UNSPECIFIED",
                          "SYNCHRONOUS",
                          "ASYNCHRONOUS"
                        ],
                        "type": "string",
                        "description": "The type of replication this instance uses. This can be either *ASYNCHRONOUS* or *SYNCHRONOUS*. (Deprecated_ This property was only applicable to First Generation instances.",
                        "enumDescriptions": [
                          "This is an unknown replication type for a Cloud SQL instance.",
                          "The synchronous replication mode for First Generation instances. It is the default value.",
                          "The asynchronous replication mode for First Generation instances. It provides a slight performance gain, but if an outage occurs while this option is set to asynchronous, you can lose up to a few seconds of updates to your data."
                        ]
                      },
                      "settingsVersion": {
                        "type": "string",
                        "format": "int64",
                        "description": "The version of instance settings. This is a required field for update method to make sure concurrent updates are handled properly. During update, use the most recent settingsVersion value for this instance and do not try to update this value."
                      },
                      "activationPolicy": {
                        "enum": [
                          "SQL_ACTIVATION_POLICY_UNSPECIFIED",
                          "ALWAYS",
                          "NEVER",
                          "ON_DEMAND"
                        ],
                        "type": "string",
                        "description": "The activation policy specifies when the instance is activated; it is applicable only when the instance state is RUNNABLE. Valid values: *ALWAYS*: The instance is on, and remains so even in the absence of connection requests. *NEVER*: The instance is off; it is not activated, even if a connection request arrives.",
                        "enumDescriptions": [
                          "Unknown activation plan.",
                          "The instance is always up and running.",
                          "The instance never starts.",
                          "The instance starts upon receiving requests."
                        ]
                      },
                      "availabilityType": {
                        "enum": [
                          "SQL_AVAILABILITY_TYPE_UNSPECIFIED",
                          "ZONAL",
                          "REGIONAL"
                        ],
                        "type": "string",
                        "description": "Availability type. Potential values: *ZONAL*: The instance serves data from only one zone. Outages in that zone affect data accessibility. *REGIONAL*: The instance can serve data from more than one zone in a region (it is highly available). For more information, see Overview of the High Availability Configuration.",
                        "enumDescriptions": [
                          "This is an unknown Availability type.",
                          "Zonal available instance.",
                          "Regional available instance."
                        ]
                      },
                      "maintenanceWindow": {
                        "id": "MaintenanceWindow",
                        "type": "object",
                        "properties": {
                          "day": {
                            "type": "integer",
                            "format": "int32",
                            "description": "day of week (1-7), starting on Monday."
                          },
                          "hour": {
                            "type": "integer",
                            "format": "int32",
                            "description": "hour of day - 0 to 23."
                          },
                          "kind": {
                            "type": "string",
                            "description": "This is always *sql#maintenanceWindow*."
                          },
                          "updateTrack": {
                            "enum": [
                              "SQL_UPDATE_TRACK_UNSPECIFIED",
                              "canary",
                              "stable"
                            ],
                            "type": "string",
                            "description": "Maintenance timing setting: *canary* (Earlier) or *stable* (Later). Learn more.",
                            "enumDescriptions": [
                              "This is an unknown maintenance timing preference.",
                              "For instance update that requires a restart, this update track indicates your instance prefer to restart for new version early in maintenance window.",
                              "For instance update that requires a restart, this update track indicates your instance prefer to let Cloud SQL choose the timing of restart (within its Maintenance window, if applicable)."
                            ]
                          }
                        },
                        "description": "The maintenance window for this instance. This specifies when the instance can be restarted for maintenance purposes."
                      },
                      "storageAutoResize": {
                        "type": "boolean",
                        "description": "Configuration to increase storage size automatically. The default value is true."
                      },
                      "locationPreference": {
                        "id": "LocationPreference",
                        "type": "object",
                        "properties": {
                          "kind": {
                            "type": "string",
                            "description": "This is always *sql#locationPreference*."
                          },
                          "zone": {
                            "type": "string",
                            "description": "The preferred Compute Engine zone (for example: us-central1-a, us-central1-b, etc.)."
                          },
                          "followGaeApplication": {
                            "type": "string",
                            "description": "The App Engine application to follow, it must be in the same region as the Cloud SQL instance."
                          }
                        },
                        "description": "The location preference settings. This allows the instance to be located as near as possible to either an App Engine app or Compute Engine zone for better performance. App Engine co-location was only applicable to First Generation instances."
                      },
                      "backupConfiguration": {
                        "id": "BackupConfiguration",
                        "type": "object",
                        "properties": {
                          "kind": {
                            "type": "string",
                            "description": "This is always *sql#backupConfiguration*."
                          },
                          "enabled": {
                            "type": "boolean",
                            "description": "Whether this configuration is enabled."
                          },
                          "location": {
                            "type": "string",
                            "description": "Location of the backup"
                          },
                          "startTime": {
                            "type": "string",
                            "description": "Start time for the daily backup configuration in UTC timezone in the 24 hour format - *HH:MM*."
                          },
                          "binaryLogEnabled": {
                            "type": "boolean",
                            "description": "(MySQL only) Whether binary log is enabled. If backup configuration is disabled, binarylog must be disabled as well."
                          },
                          "pointInTimeRecoveryEnabled": {
                            "type": "boolean",
                            "description": "Reserved for future use."
                          },
                          "replicationLogArchivingEnabled": {
                            "type": "boolean",
                            "description": "Reserved for future use."
                          }
                        },
                        "description": "The daily backup configuration for the instance."
                      },
                      "storageAutoResizeLimit": {
                        "type": "string",
                        "format": "int64",
                        "description": "The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit."
                      },
                      "authorizedGaeApplications": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The App Engine app IDs that can access this instance. (Deprecated) Applied to First Generation instances only."
                      },
                      "databaseReplicationEnabled": {
                        "type": "boolean",
                        "description": "Configuration specific to read replica instances. Indicates whether replication is enabled or not."
                      },
                      "crashSafeReplicationEnabled": {
                        "type": "boolean",
                        "description": "Configuration specific to read replica instances. Indicates whether database flags for crash-safe replication are enabled. This property was only applicable to First Generation instances."
                      }
                    },
                    "description": "The user settings."
                  },
                  "backendType": {
                    "enum": [
                      "SQL_BACKEND_TYPE_UNSPECIFIED",
                      "FIRST_GEN",
                      "SECOND_GEN",
                      "EXTERNAL"
                    ],
                    "type": "string",
                    "description": " *SECOND_GEN*: Cloud SQL database instance. *EXTERNAL*: A database server that is not managed by Google. This property is read-only; use the *tier* property in the *settings* object to determine the database type.",
                    "enumDescriptions": [
                      "This is an unknown backend type for instance.",
                      "V1 speckle instance.",
                      "V2 speckle instance.",
                      "On premises instance."
                    ]
                  },
                  "ipAddresses": {
                    "type": "array",
                    "items": {
                      "id": "IpMapping",
                      "type": "object",
                      "properties": {
                        "type": {
                          "enum": [
                            "SQL_IP_ADDRESS_TYPE_UNSPECIFIED",
                            "PRIMARY",
                            "OUTGOING",
                            "PRIVATE",
                            "MIGRATED_1ST_GEN"
                          ],
                          "type": "string",
                          "description": "The type of this IP address. A *PRIMARY* address is a public address that can accept incoming connections. A *PRIVATE* address is a private address that can accept incoming connections. An *OUTGOING* address is the source address of connections originating from the instance, if supported.",
                          "enumDescriptions": [
                            "This is an unknown IP address type.",
                            "IP address the customer is supposed to connect to. Usually this is the load balancer's IP address",
                            "Source IP address of the connection a read replica establishes to its external master. This IP address can be allowlisted by the customer in case it has a firewall that filters incoming connection to its on premises master.",
                            "Private IP used when using private IPs and network peering.",
                            "V1 IP of a migrated instance. We want the user to decommission this IP as soon as the migration is complete. Note: V1 instances with V1 ip addresses will be counted as PRIMARY."
                          ]
                        },
                        "ipAddress": {
                          "type": "string",
                          "description": "The IP address assigned."
                        },
                        "timeToRetire": {
                          "type": "string",
                          "format": "google-datetime",
                          "description": "The due time for this IP to be retired in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*. This field is only available when the IP is scheduled to be retired."
                        }
                      },
                      "description": "Database instance IP Mapping."
                    },
                    "description": "The assigned IP addresses for the instance."
                  },
                  "ipv6Address": {
                    "type": "string",
                    "description": "The IPv6 address assigned to the instance. (Deprecated) This property was applicable only to First Generation instances."
                  },
                  "maxDiskSize": {
                    "type": "string",
                    "format": "int64",
                    "description": "The maximum disk size of the instance in bytes."
                  },
                  "instanceType": {
                    "enum": [
                      "SQL_INSTANCE_TYPE_UNSPECIFIED",
                      "CLOUD_SQL_INSTANCE",
                      "ON_PREMISES_INSTANCE",
                      "READ_REPLICA_INSTANCE"
                    ],
                    "type": "string",
                    "description": "The instance type. This can be one of the following. *CLOUD_SQL_INSTANCE*: A Cloud SQL instance that is not replicating from a master. *ON_PREMISES_INSTANCE*: An instance running on the customer's premises. *READ_REPLICA_INSTANCE*: A Cloud SQL instance configured as a read-replica.",
                    "enumDescriptions": [
                      "This is an unknown Cloud SQL instance type.",
                      "A regular Cloud SQL instance.",
                      "An instance running on the customer's premises that is not managed by Cloud SQL.",
                      "A Cloud SQL instance acting as a read-replica."
                    ]
                  },
                  "replicaNames": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The replicas of the instance."
                  },
                  "rootPassword": {
                    "type": "string",
                    "description": "Initial root password. Use only on creation."
                  },
                  "serverCaCert": {
                    "id": "SslCert",
                    "type": "object",
                    "properties": {
                      "cert": {
                        "type": "string",
                        "description": "PEM representation."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#sslCert*."
                      },
                      "instance": {
                        "type": "string",
                        "description": "Name of the database instance."
                      },
                      "selfLink": {
                        "type": "string",
                        "description": "The URI of this resource."
                      },
                      "commonName": {
                        "type": "string",
                        "description": "User supplied name. Constrained to [a-zA-Z.-_ ]+."
                      },
                      "createTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "The time when the certificate was created in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*"
                      },
                      "expirationTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "The time when the certificate expires in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
                      },
                      "sha1Fingerprint": {
                        "type": "string",
                        "description": "Sha1 Fingerprint."
                      },
                      "certSerialNumber": {
                        "type": "string",
                        "description": "Serial number, as extracted from the certificate."
                      }
                    },
                    "description": "SSL configuration."
                  },
                  "connectionName": {
                    "type": "string",
                    "description": "Connection name of the Cloud SQL instance used in connection strings."
                  },
                  "currentDiskSize": {
                    "type": "string",
                    "format": "int64",
                    "description": "The current disk usage of the instance in bytes. This property has been deprecated. Use the \"cloudsql.googleapis.com/database/disk/bytes_used\" metric in Cloud Monitoring API instead. Please see this announcement for details."
                  },
                  "databaseVersion": {
                    "enum": [
                      "SQL_DATABASE_VERSION_UNSPECIFIED",
                      "MYSQL_5_1",
                      "MYSQL_5_5",
                      "MYSQL_5_6",
                      "MYSQL_5_7",
                      "POSTGRES_9_6",
                      "POSTGRES_11",
                      "SQLSERVER_2017_STANDARD",
                      "SQLSERVER_2017_ENTERPRISE",
                      "SQLSERVER_2017_EXPRESS",
                      "SQLSERVER_2017_WEB",
                      "POSTGRES_10",
                      "POSTGRES_12",
                      "MYSQL_8_0"
                    ],
                    "type": "string",
                    "description": "The database engine type and version. The *databaseVersion* field cannot be changed after instance creation. MySQL instances: *MYSQL_5_7* (default), or *MYSQL_5_6*. PostgreSQL instances: *POSTGRES_9_6*, *POSTGRES_10*, *POSTGRES_11* or *POSTGRES_12* (default). SQL Server instances: *SQLSERVER_2017_STANDARD* (default), *SQLSERVER_2017_ENTERPRISE*, *SQLSERVER_2017_EXPRESS*, or *SQLSERVER_2017_WEB*.",
                    "enumDescriptions": [
                      "This is an unknown database version.",
                      "The database version is MySQL 5.1.",
                      "The database version is MySQL 5.5.",
                      "The database version is MySQL 5.6.",
                      "The database version is MySQL 5.7.",
                      "The database version is PostgreSQL 9.6.",
                      "The database version is PostgreSQL 11.",
                      "The database version is SQL Server 2017 Standard.",
                      "The database version is SQL Server 2017 Enterprise.",
                      "The database version is SQL Server 2017 Express.",
                      "The database version is SQL Server 2017 Web.",
                      "The database version is PostgreSQL 10.",
                      "The database version is PostgreSQL 12.",
                      "The database version is MySQL 8."
                    ]
                  },
                  "failoverReplica": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the failover replica. If specified at instance creation, a failover replica is created for the instance. The name doesn't include the project ID. This property is applicable only to Second Generation instances."
                      },
                      "available": {
                        "type": "boolean",
                        "description": "The availability status of the failover replica. A false status indicates that the failover replica is out of sync. The master can only failover to the failover replica when the status is true."
                      }
                    },
                    "description": "The name and status of the failover replica. This property is applicable only to Second Generation instances."
                  },
                  "suspensionReason": {
                    "type": "array",
                    "items": {
                      "enum": [
                        "SQL_SUSPENSION_REASON_UNSPECIFIED",
                        "BILLING_ISSUE",
                        "LEGAL_ISSUE",
                        "OPERATIONAL_ISSUE",
                        "KMS_KEY_ISSUE"
                      ],
                      "type": "string",
                      "enumDescriptions": [
                        "This is an unknown suspension reason.",
                        "The instance is suspended due to billing issues (for example:, GCP account issue)",
                        "The instance is suspended due to illegal content (for example:, child pornography, copyrighted material, etc.).",
                        "The instance is causing operational issues (for example:, causing the database to crash).",
                        "The KMS key used by the instance is either revoked or denied access to"
                      ]
                    },
                    "description": "If the instance state is SUSPENDED, the reason for the suspension.",
                    "enumDescriptions": [
                      "This is an unknown suspension reason.",
                      "The instance is suspended due to billing issues (for example:, GCP account issue)",
                      "The instance is suspended due to illegal content (for example:, child pornography, copyrighted material, etc.).",
                      "The instance is causing operational issues (for example:, causing the database to crash).",
                      "The KMS key used by the instance is either revoked or denied access to"
                    ]
                  },
                  "masterInstanceName": {
                    "type": "string",
                    "description": "The name of the instance which will act as master in the replication setup."
                  },
                  "diskEncryptionStatus": {
                    "id": "DiskEncryptionStatus",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#diskEncryptionStatus*."
                      },
                      "kmsKeyVersionName": {
                        "type": "string",
                        "description": "KMS key version used to encrypt the Cloud SQL instance resource"
                      }
                    },
                    "description": "Disk encryption status specific to an instance. Applies only to Second Generation instances."
                  },
                  "replicaConfiguration": {
                    "id": "ReplicaConfiguration",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#replicaConfiguration*."
                      },
                      "failoverTarget": {
                        "type": "boolean",
                        "description": "Specifies if the replica is the failover target. If the field is set to *true* the replica will be designated as a failover replica. In case the master instance fails, the replica instance will be promoted as the new master instance. Only one replica can be specified as failover target, and the replica has to be in different zone with the master instance."
                      },
                      "mysqlReplicaConfiguration": {
                        "id": "MySqlReplicaConfiguration",
                        "type": "object",
                        "properties": {
                          "kind": {
                            "type": "string",
                            "description": "This is always *sql#mysqlReplicaConfiguration*."
                          },
                          "password": {
                            "type": "string",
                            "description": "The password for the replication connection."
                          },
                          "username": {
                            "type": "string",
                            "description": "The username for the replication connection."
                          },
                          "clientKey": {
                            "type": "string",
                            "description": "PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate."
                          },
                          "sslCipher": {
                            "type": "string",
                            "description": "A list of permissible ciphers to use for SSL encryption."
                          },
                          "dumpFilePath": {
                            "type": "string",
                            "description": "Path to a SQL dump file in Google Cloud Storage from which the replica instance is to be created. The URI is in the form gs://bucketName/fileName. Compressed gzip files (.gz) are also supported. Dumps have the binlog co-ordinates from which replication begins. This can be accomplished by setting --master-data to 1 when using mysqldump."
                          },
                          "caCertificate": {
                            "type": "string",
                            "description": "PEM representation of the trusted CA's x509 certificate."
                          },
                          "clientCertificate": {
                            "type": "string",
                            "description": "PEM representation of the replica's x509 certificate."
                          },
                          "connectRetryInterval": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Seconds to wait between connect retries. MySQL's default is 60 seconds."
                          },
                          "masterHeartbeatPeriod": {
                            "type": "string",
                            "format": "int64",
                            "description": "Interval in milliseconds between replication heartbeats."
                          },
                          "verifyServerCertificate": {
                            "type": "boolean",
                            "description": "Whether or not to check the master's Common Name value in the certificate that it sends during the SSL handshake."
                          }
                        },
                        "description": "MySQL specific configuration when replicating from a MySQL on-premises master. Replication configuration information such as the username, password, certificates, and keys are not stored in the instance metadata. The configuration information is used only to set up the replication connection and is stored by MySQL in a file named *master.info* in the data directory."
                      }
                    },
                    "description": "Configuration specific to failover replicas and read replicas."
                  },
                  "scheduledMaintenance": {
                    "id": "SqlScheduledMaintenance",
                    "type": "object",
                    "properties": {
                      "canDefer": {
                        "type": "boolean"
                      },
                      "startTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "The start time of any upcoming scheduled maintenance for this instance."
                      },
                      "canReschedule": {
                        "type": "boolean",
                        "description": "If the scheduled maintenance can be rescheduled."
                      }
                    },
                    "description": "The start time of any upcoming scheduled maintenance for this instance."
                  },
                  "onPremisesConfiguration": {
                    "id": "OnPremisesConfiguration",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#onPremisesConfiguration*."
                      },
                      "hostPort": {
                        "type": "string",
                        "description": "The host and port of the on-premises instance in host:port format"
                      },
                      "password": {
                        "type": "string",
                        "description": "The password for connecting to on-premises instance."
                      },
                      "username": {
                        "type": "string",
                        "description": "The username for connecting to on-premises instance."
                      },
                      "clientKey": {
                        "type": "string",
                        "description": "PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate."
                      },
                      "dumpFilePath": {
                        "type": "string",
                        "description": "The dump file to create the Cloud SQL replica."
                      },
                      "caCertificate": {
                        "type": "string",
                        "description": "PEM representation of the trusted CA's x509 certificate."
                      },
                      "clientCertificate": {
                        "type": "string",
                        "description": "PEM representation of the replica's x509 certificate."
                      }
                    },
                    "description": "Configuration specific to on-premises instances."
                  },
                  "serviceAccountEmailAddress": {
                    "type": "string",
                    "description": "The service account email address assigned to the instance. This property is applicable only to Second Generation instances."
                  },
                  "diskEncryptionConfiguration": {
                    "id": "DiskEncryptionConfiguration",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#diskEncryptionConfiguration*."
                      },
                      "kmsKeyName": {
                        "type": "string",
                        "description": "Resource name of KMS key for disk encryption"
                      }
                    },
                    "description": "Disk encryption configuration specific to an instance. Applies only to Second Generation instances."
                  }
                },
                "description": "A Cloud SQL instance resource. Next field: 34"
              },
              "description": "List of database instance resources."
            },
            "warnings": {
              "type": "array",
              "items": {
                "id": "ApiWarning",
                "type": "object",
                "properties": {
                  "code": {
                    "enum": [
                      "SQL_API_WARNING_CODE_UNSPECIFIED",
                      "REGION_UNREACHABLE"
                    ],
                    "type": "string",
                    "description": "Code to uniquely identify the warning type.",
                    "enumDescriptions": [
                      "An unknown or unset warning type from Cloud SQL API.",
                      "Warning when one or more regions are not reachable. The returned result set may be incomplete."
                    ]
                  },
                  "message": {
                    "type": "string",
                    "description": "The warning message."
                  }
                },
                "description": "An Admin API warning message."
              },
              "description": "List of warnings that occurred while handling the request."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results."
            }
          },
          "description": "Database instances list response."
        }
      ]
  instances.listServerCas:
    description: |-
      Lists all of the trusted Certificate Authorities (CAs) for the specified instance. There can be up to three CAs listed: the CA that was used to sign the certificate that is currently in use, a CA that has been added but not yet used to sign a certificate, and a CA used to sign a certificate that has previously rotated out.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/instances/listServerCas
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "InstancesListServerCasResponse",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#instancesListServerCas*."
            },
            "certs": {
              "type": "array",
              "items": {
                "id": "SslCert",
                "type": "object",
                "properties": {
                  "cert": {
                    "type": "string",
                    "description": "PEM representation."
                  },
                  "kind": {
                    "type": "string",
                    "description": "This is always *sql#sslCert*."
                  },
                  "instance": {
                    "type": "string",
                    "description": "Name of the database instance."
                  },
                  "selfLink": {
                    "type": "string",
                    "description": "The URI of this resource."
                  },
                  "commonName": {
                    "type": "string",
                    "description": "User supplied name. Constrained to [a-zA-Z.-_ ]+."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The time when the certificate was created in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*"
                  },
                  "expirationTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The time when the certificate expires in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
                  },
                  "sha1Fingerprint": {
                    "type": "string",
                    "description": "Sha1 Fingerprint."
                  },
                  "certSerialNumber": {
                    "type": "string",
                    "description": "Serial number, as extracted from the certificate."
                  }
                },
                "description": "SslCerts Resource"
              },
              "description": "List of server CA certificates for the instance."
            },
            "activeVersion": {
              "type": "string"
            }
          },
          "description": "Instances ListServerCas response."
        }
      ]
  instances.patch:
    description: |-
      Updates settings of a Cloud SQL instance. This method supports patch semantics.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/instances/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#operation*."
            },
            "name": {
              "type": "string",
              "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
            },
            "user": {
              "type": "string",
              "description": "The email address of the user who initiated this operation."
            },
            "error": {
              "id": "OperationErrors",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#operationErrors*."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "OperationError",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Identifies the specific error that occurred."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#operationError*."
                      },
                      "message": {
                        "type": "string",
                        "description": "Additional information about the error encountered."
                      }
                    },
                    "description": "Database instance operation error."
                  },
                  "description": "The list of errors encountered while processing this operation."
                }
              },
              "description": "If errors occurred during processing of this operation, this field will be populated."
            },
            "status": {
              "enum": [
                "SQL_OPERATION_STATUS_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
              "enumDescriptions": [
                "The state of the operation is unknown.",
                "The operation has been queued, but has not started yet.",
                "The operation is running.",
                "The operation completed."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "targetId": {
              "type": "string",
              "description": "Name of the database instance related to this operation."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "insertTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "targetLink": {
              "type": "string"
            },
            "exportContext": {
              "id": "ExportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs: //bucketName/fileName*. If the file already exists, the requests // succeeds, but the operation fails. If *fileType* is // *SQL* and the filename ends with .gz, the contents are // compressed."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#exportContext*."
                },
                "offload": {
                  "type": "boolean",
                  "description": "Option for export offload."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "databases": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
                },
                "csvExportOptions": {
                  "type": "object",
                  "properties": {
                    "selectQuery": {
                      "type": "string",
                      "description": "The select query used to extract the data."
                    }
                  },
                  "description": "Options for exporting data as CSV."
                },
                "sqlExportOptions": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
                    },
                    "schemaOnly": {
                      "type": "boolean",
                      "description": "Export only schemas."
                    },
                    "mysqlExportOptions": {
                      "type": "object",
                      "properties": {
                        "masterData": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored."
                        }
                      },
                      "description": "Options for exporting from MySQL."
                    }
                  },
                  "description": "Options for exporting data as SQL statements."
                }
              },
              "description": "The context for export operation, if applicable."
            },
            "importContext": {
              "id": "ImportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "Path to the import file in Cloud Storage, in the form *gs: //bucketName/fileName*. Compressed gzip files (.gz) are supported // when *fileType* is *SQL*. The instance must have // write permissions to the bucket and read access to the file."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#importContext*."
                },
                "database": {
                  "type": "string",
                  "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "importUser": {
                  "type": "string",
                  "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
                },
                "bakImportOptions": {
                  "type": "object",
                  "properties": {
                    "encryptionOptions": {
                      "type": "object",
                      "properties": {
                        "pvkPath": {
                          "type": "string",
                          "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "certPath": {
                          "type": "string",
                          "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "pvkPassword": {
                          "type": "string",
                          "description": "Password that encrypts the private key"
                        }
                      }
                    }
                  },
                  "description": "Import parameters specific to SQL Server .BAK files"
                },
                "csvImportOptions": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "description": "The table to which CSV data is imported."
                    },
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
                    }
                  },
                  "description": "Options for importing data as CSV."
                }
              },
              "description": "The context for import operation, if applicable."
            },
            "operationType": {
              "enum": [
                "SQL_OPERATION_TYPE_UNSPECIFIED",
                "IMPORT",
                "EXPORT",
                "CREATE",
                "UPDATE",
                "DELETE",
                "RESTART",
                "BACKUP",
                "SNAPSHOT",
                "BACKUP_VOLUME",
                "DELETE_VOLUME",
                "RESTORE_VOLUME",
                "INJECT_USER",
                "CLONE",
                "STOP_REPLICA",
                "START_REPLICA",
                "PROMOTE_REPLICA",
                "CREATE_REPLICA",
                "CREATE_USER",
                "DELETE_USER",
                "UPDATE_USER",
                "CREATE_DATABASE",
                "DELETE_DATABASE",
                "UPDATE_DATABASE",
                "FAILOVER",
                "DELETE_BACKUP",
                "RECREATE_REPLICA",
                "TRUNCATE_LOG",
                "DEMOTE_MASTER",
                "MAINTENANCE",
                "ENABLE_PRIVATE_IP",
                "DEFER_MAINTENANCE",
                "CREATE_CLONE",
                "RESCHEDULE_MAINTENANCE",
                "START_EXTERNAL_SYNC"
              ],
              "type": "string",
              "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*",
              "enumDescriptions": [
                "Unknown operation type.",
                "Imports data into a Cloud SQL instance.",
                "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
                "Creates a new Cloud SQL instance.",
                "Updates the settings of a Cloud SQL instance.",
                "Deletes a Cloud SQL instance.",
                "Restarts the Cloud SQL instance.",
                "",
                "",
                "Performs instance backup.",
                "Deletes an instance backup.",
                "Restores an instance backup.",
                "Injects a privileged user in mysql for MOB instances.",
                "Clones a Cloud SQL instance.",
                "Stops replication on a Cloud SQL read replica instance.",
                "Starts replication on a Cloud SQL read replica instance.",
                "Promotes a Cloud SQL replica instance.",
                "Creates a Cloud SQL replica instance.",
                "Creates a new user in a Cloud SQL instance.",
                "Deletes a user from a Cloud SQL instance.",
                "Updates an existing user in a Cloud SQL instance.",
                "Creates a database in the Cloud SQL instance.",
                "Deletes a database in the Cloud SQL instance.",
                "Updates a database in the Cloud SQL instance.",
                "Performs failover of an HA-enabled Cloud SQL failover replica.",
                "Deletes the backup taken by a backup run.",
                "",
                "Truncates a general or slow log table in MySQL.",
                "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
                "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
                "This field is deprecated, and will be removed in future version of API.",
                "",
                "Creates clone instance.",
                "Reschedule maintenance to another time.",
                "Starts external sync of a Cloud SQL EM replica to an external master."
              ]
            },
            "targetProject": {
              "type": "string",
              "description": "The project ID of the target instance related to this operation."
            }
          },
          "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource."
        }
      ]
  instances.promoteReplica:
    description: |-
      Promotes the read replica instance to be a stand-alone Cloud SQL instance. Using this operation might cause your instance to restart.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/instances/promoteReplica
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#operation*."
            },
            "name": {
              "type": "string",
              "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
            },
            "user": {
              "type": "string",
              "description": "The email address of the user who initiated this operation."
            },
            "error": {
              "id": "OperationErrors",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#operationErrors*."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "OperationError",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Identifies the specific error that occurred."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#operationError*."
                      },
                      "message": {
                        "type": "string",
                        "description": "Additional information about the error encountered."
                      }
                    },
                    "description": "Database instance operation error."
                  },
                  "description": "The list of errors encountered while processing this operation."
                }
              },
              "description": "If errors occurred during processing of this operation, this field will be populated."
            },
            "status": {
              "enum": [
                "SQL_OPERATION_STATUS_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
              "enumDescriptions": [
                "The state of the operation is unknown.",
                "The operation has been queued, but has not started yet.",
                "The operation is running.",
                "The operation completed."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "targetId": {
              "type": "string",
              "description": "Name of the database instance related to this operation."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "insertTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "targetLink": {
              "type": "string"
            },
            "exportContext": {
              "id": "ExportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs: //bucketName/fileName*. If the file already exists, the requests // succeeds, but the operation fails. If *fileType* is // *SQL* and the filename ends with .gz, the contents are // compressed."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#exportContext*."
                },
                "offload": {
                  "type": "boolean",
                  "description": "Option for export offload."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "databases": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
                },
                "csvExportOptions": {
                  "type": "object",
                  "properties": {
                    "selectQuery": {
                      "type": "string",
                      "description": "The select query used to extract the data."
                    }
                  },
                  "description": "Options for exporting data as CSV."
                },
                "sqlExportOptions": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
                    },
                    "schemaOnly": {
                      "type": "boolean",
                      "description": "Export only schemas."
                    },
                    "mysqlExportOptions": {
                      "type": "object",
                      "properties": {
                        "masterData": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored."
                        }
                      },
                      "description": "Options for exporting from MySQL."
                    }
                  },
                  "description": "Options for exporting data as SQL statements."
                }
              },
              "description": "The context for export operation, if applicable."
            },
            "importContext": {
              "id": "ImportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "Path to the import file in Cloud Storage, in the form *gs: //bucketName/fileName*. Compressed gzip files (.gz) are supported // when *fileType* is *SQL*. The instance must have // write permissions to the bucket and read access to the file."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#importContext*."
                },
                "database": {
                  "type": "string",
                  "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "importUser": {
                  "type": "string",
                  "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
                },
                "bakImportOptions": {
                  "type": "object",
                  "properties": {
                    "encryptionOptions": {
                      "type": "object",
                      "properties": {
                        "pvkPath": {
                          "type": "string",
                          "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "certPath": {
                          "type": "string",
                          "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "pvkPassword": {
                          "type": "string",
                          "description": "Password that encrypts the private key"
                        }
                      }
                    }
                  },
                  "description": "Import parameters specific to SQL Server .BAK files"
                },
                "csvImportOptions": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "description": "The table to which CSV data is imported."
                    },
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
                    }
                  },
                  "description": "Options for importing data as CSV."
                }
              },
              "description": "The context for import operation, if applicable."
            },
            "operationType": {
              "enum": [
                "SQL_OPERATION_TYPE_UNSPECIFIED",
                "IMPORT",
                "EXPORT",
                "CREATE",
                "UPDATE",
                "DELETE",
                "RESTART",
                "BACKUP",
                "SNAPSHOT",
                "BACKUP_VOLUME",
                "DELETE_VOLUME",
                "RESTORE_VOLUME",
                "INJECT_USER",
                "CLONE",
                "STOP_REPLICA",
                "START_REPLICA",
                "PROMOTE_REPLICA",
                "CREATE_REPLICA",
                "CREATE_USER",
                "DELETE_USER",
                "UPDATE_USER",
                "CREATE_DATABASE",
                "DELETE_DATABASE",
                "UPDATE_DATABASE",
                "FAILOVER",
                "DELETE_BACKUP",
                "RECREATE_REPLICA",
                "TRUNCATE_LOG",
                "DEMOTE_MASTER",
                "MAINTENANCE",
                "ENABLE_PRIVATE_IP",
                "DEFER_MAINTENANCE",
                "CREATE_CLONE",
                "RESCHEDULE_MAINTENANCE",
                "START_EXTERNAL_SYNC"
              ],
              "type": "string",
              "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*",
              "enumDescriptions": [
                "Unknown operation type.",
                "Imports data into a Cloud SQL instance.",
                "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
                "Creates a new Cloud SQL instance.",
                "Updates the settings of a Cloud SQL instance.",
                "Deletes a Cloud SQL instance.",
                "Restarts the Cloud SQL instance.",
                "",
                "",
                "Performs instance backup.",
                "Deletes an instance backup.",
                "Restores an instance backup.",
                "Injects a privileged user in mysql for MOB instances.",
                "Clones a Cloud SQL instance.",
                "Stops replication on a Cloud SQL read replica instance.",
                "Starts replication on a Cloud SQL read replica instance.",
                "Promotes a Cloud SQL replica instance.",
                "Creates a Cloud SQL replica instance.",
                "Creates a new user in a Cloud SQL instance.",
                "Deletes a user from a Cloud SQL instance.",
                "Updates an existing user in a Cloud SQL instance.",
                "Creates a database in the Cloud SQL instance.",
                "Deletes a database in the Cloud SQL instance.",
                "Updates a database in the Cloud SQL instance.",
                "Performs failover of an HA-enabled Cloud SQL failover replica.",
                "Deletes the backup taken by a backup run.",
                "",
                "Truncates a general or slow log table in MySQL.",
                "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
                "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
                "This field is deprecated, and will be removed in future version of API.",
                "",
                "Creates clone instance.",
                "Reschedule maintenance to another time.",
                "Starts external sync of a Cloud SQL EM replica to an external master."
              ]
            },
            "targetProject": {
              "type": "string",
              "description": "The project ID of the target instance related to this operation."
            }
          },
          "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource."
        }
      ]
  instances.resetSslConfig:
    description: |-
      Deletes all client certificates and generates a new server SSL certificate for the instance.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/instances/resetSslConfig
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#operation*."
            },
            "name": {
              "type": "string",
              "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
            },
            "user": {
              "type": "string",
              "description": "The email address of the user who initiated this operation."
            },
            "error": {
              "id": "OperationErrors",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#operationErrors*."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "OperationError",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Identifies the specific error that occurred."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#operationError*."
                      },
                      "message": {
                        "type": "string",
                        "description": "Additional information about the error encountered."
                      }
                    },
                    "description": "Database instance operation error."
                  },
                  "description": "The list of errors encountered while processing this operation."
                }
              },
              "description": "If errors occurred during processing of this operation, this field will be populated."
            },
            "status": {
              "enum": [
                "SQL_OPERATION_STATUS_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
              "enumDescriptions": [
                "The state of the operation is unknown.",
                "The operation has been queued, but has not started yet.",
                "The operation is running.",
                "The operation completed."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "targetId": {
              "type": "string",
              "description": "Name of the database instance related to this operation."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "insertTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "targetLink": {
              "type": "string"
            },
            "exportContext": {
              "id": "ExportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs: //bucketName/fileName*. If the file already exists, the requests // succeeds, but the operation fails. If *fileType* is // *SQL* and the filename ends with .gz, the contents are // compressed."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#exportContext*."
                },
                "offload": {
                  "type": "boolean",
                  "description": "Option for export offload."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "databases": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
                },
                "csvExportOptions": {
                  "type": "object",
                  "properties": {
                    "selectQuery": {
                      "type": "string",
                      "description": "The select query used to extract the data."
                    }
                  },
                  "description": "Options for exporting data as CSV."
                },
                "sqlExportOptions": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
                    },
                    "schemaOnly": {
                      "type": "boolean",
                      "description": "Export only schemas."
                    },
                    "mysqlExportOptions": {
                      "type": "object",
                      "properties": {
                        "masterData": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored."
                        }
                      },
                      "description": "Options for exporting from MySQL."
                    }
                  },
                  "description": "Options for exporting data as SQL statements."
                }
              },
              "description": "The context for export operation, if applicable."
            },
            "importContext": {
              "id": "ImportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "Path to the import file in Cloud Storage, in the form *gs: //bucketName/fileName*. Compressed gzip files (.gz) are supported // when *fileType* is *SQL*. The instance must have // write permissions to the bucket and read access to the file."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#importContext*."
                },
                "database": {
                  "type": "string",
                  "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "importUser": {
                  "type": "string",
                  "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
                },
                "bakImportOptions": {
                  "type": "object",
                  "properties": {
                    "encryptionOptions": {
                      "type": "object",
                      "properties": {
                        "pvkPath": {
                          "type": "string",
                          "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "certPath": {
                          "type": "string",
                          "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "pvkPassword": {
                          "type": "string",
                          "description": "Password that encrypts the private key"
                        }
                      }
                    }
                  },
                  "description": "Import parameters specific to SQL Server .BAK files"
                },
                "csvImportOptions": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "description": "The table to which CSV data is imported."
                    },
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
                    }
                  },
                  "description": "Options for importing data as CSV."
                }
              },
              "description": "The context for import operation, if applicable."
            },
            "operationType": {
              "enum": [
                "SQL_OPERATION_TYPE_UNSPECIFIED",
                "IMPORT",
                "EXPORT",
                "CREATE",
                "UPDATE",
                "DELETE",
                "RESTART",
                "BACKUP",
                "SNAPSHOT",
                "BACKUP_VOLUME",
                "DELETE_VOLUME",
                "RESTORE_VOLUME",
                "INJECT_USER",
                "CLONE",
                "STOP_REPLICA",
                "START_REPLICA",
                "PROMOTE_REPLICA",
                "CREATE_REPLICA",
                "CREATE_USER",
                "DELETE_USER",
                "UPDATE_USER",
                "CREATE_DATABASE",
                "DELETE_DATABASE",
                "UPDATE_DATABASE",
                "FAILOVER",
                "DELETE_BACKUP",
                "RECREATE_REPLICA",
                "TRUNCATE_LOG",
                "DEMOTE_MASTER",
                "MAINTENANCE",
                "ENABLE_PRIVATE_IP",
                "DEFER_MAINTENANCE",
                "CREATE_CLONE",
                "RESCHEDULE_MAINTENANCE",
                "START_EXTERNAL_SYNC"
              ],
              "type": "string",
              "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*",
              "enumDescriptions": [
                "Unknown operation type.",
                "Imports data into a Cloud SQL instance.",
                "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
                "Creates a new Cloud SQL instance.",
                "Updates the settings of a Cloud SQL instance.",
                "Deletes a Cloud SQL instance.",
                "Restarts the Cloud SQL instance.",
                "",
                "",
                "Performs instance backup.",
                "Deletes an instance backup.",
                "Restores an instance backup.",
                "Injects a privileged user in mysql for MOB instances.",
                "Clones a Cloud SQL instance.",
                "Stops replication on a Cloud SQL read replica instance.",
                "Starts replication on a Cloud SQL read replica instance.",
                "Promotes a Cloud SQL replica instance.",
                "Creates a Cloud SQL replica instance.",
                "Creates a new user in a Cloud SQL instance.",
                "Deletes a user from a Cloud SQL instance.",
                "Updates an existing user in a Cloud SQL instance.",
                "Creates a database in the Cloud SQL instance.",
                "Deletes a database in the Cloud SQL instance.",
                "Updates a database in the Cloud SQL instance.",
                "Performs failover of an HA-enabled Cloud SQL failover replica.",
                "Deletes the backup taken by a backup run.",
                "",
                "Truncates a general or slow log table in MySQL.",
                "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
                "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
                "This field is deprecated, and will be removed in future version of API.",
                "",
                "Creates clone instance.",
                "Reschedule maintenance to another time.",
                "Starts external sync of a Cloud SQL EM replica to an external master."
              ]
            },
            "targetProject": {
              "type": "string",
              "description": "The project ID of the target instance related to this operation."
            }
          },
          "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource."
        }
      ]
  instances.restart:
    description: |-
      Restarts a Cloud SQL instance.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/instances/restart
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#operation*."
            },
            "name": {
              "type": "string",
              "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
            },
            "user": {
              "type": "string",
              "description": "The email address of the user who initiated this operation."
            },
            "error": {
              "id": "OperationErrors",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#operationErrors*."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "OperationError",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Identifies the specific error that occurred."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#operationError*."
                      },
                      "message": {
                        "type": "string",
                        "description": "Additional information about the error encountered."
                      }
                    },
                    "description": "Database instance operation error."
                  },
                  "description": "The list of errors encountered while processing this operation."
                }
              },
              "description": "If errors occurred during processing of this operation, this field will be populated."
            },
            "status": {
              "enum": [
                "SQL_OPERATION_STATUS_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
              "enumDescriptions": [
                "The state of the operation is unknown.",
                "The operation has been queued, but has not started yet.",
                "The operation is running.",
                "The operation completed."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "targetId": {
              "type": "string",
              "description": "Name of the database instance related to this operation."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "insertTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "targetLink": {
              "type": "string"
            },
            "exportContext": {
              "id": "ExportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs: //bucketName/fileName*. If the file already exists, the requests // succeeds, but the operation fails. If *fileType* is // *SQL* and the filename ends with .gz, the contents are // compressed."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#exportContext*."
                },
                "offload": {
                  "type": "boolean",
                  "description": "Option for export offload."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "databases": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
                },
                "csvExportOptions": {
                  "type": "object",
                  "properties": {
                    "selectQuery": {
                      "type": "string",
                      "description": "The select query used to extract the data."
                    }
                  },
                  "description": "Options for exporting data as CSV."
                },
                "sqlExportOptions": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
                    },
                    "schemaOnly": {
                      "type": "boolean",
                      "description": "Export only schemas."
                    },
                    "mysqlExportOptions": {
                      "type": "object",
                      "properties": {
                        "masterData": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored."
                        }
                      },
                      "description": "Options for exporting from MySQL."
                    }
                  },
                  "description": "Options for exporting data as SQL statements."
                }
              },
              "description": "The context for export operation, if applicable."
            },
            "importContext": {
              "id": "ImportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "Path to the import file in Cloud Storage, in the form *gs: //bucketName/fileName*. Compressed gzip files (.gz) are supported // when *fileType* is *SQL*. The instance must have // write permissions to the bucket and read access to the file."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#importContext*."
                },
                "database": {
                  "type": "string",
                  "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "importUser": {
                  "type": "string",
                  "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
                },
                "bakImportOptions": {
                  "type": "object",
                  "properties": {
                    "encryptionOptions": {
                      "type": "object",
                      "properties": {
                        "pvkPath": {
                          "type": "string",
                          "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "certPath": {
                          "type": "string",
                          "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "pvkPassword": {
                          "type": "string",
                          "description": "Password that encrypts the private key"
                        }
                      }
                    }
                  },
                  "description": "Import parameters specific to SQL Server .BAK files"
                },
                "csvImportOptions": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "description": "The table to which CSV data is imported."
                    },
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
                    }
                  },
                  "description": "Options for importing data as CSV."
                }
              },
              "description": "The context for import operation, if applicable."
            },
            "operationType": {
              "enum": [
                "SQL_OPERATION_TYPE_UNSPECIFIED",
                "IMPORT",
                "EXPORT",
                "CREATE",
                "UPDATE",
                "DELETE",
                "RESTART",
                "BACKUP",
                "SNAPSHOT",
                "BACKUP_VOLUME",
                "DELETE_VOLUME",
                "RESTORE_VOLUME",
                "INJECT_USER",
                "CLONE",
                "STOP_REPLICA",
                "START_REPLICA",
                "PROMOTE_REPLICA",
                "CREATE_REPLICA",
                "CREATE_USER",
                "DELETE_USER",
                "UPDATE_USER",
                "CREATE_DATABASE",
                "DELETE_DATABASE",
                "UPDATE_DATABASE",
                "FAILOVER",
                "DELETE_BACKUP",
                "RECREATE_REPLICA",
                "TRUNCATE_LOG",
                "DEMOTE_MASTER",
                "MAINTENANCE",
                "ENABLE_PRIVATE_IP",
                "DEFER_MAINTENANCE",
                "CREATE_CLONE",
                "RESCHEDULE_MAINTENANCE",
                "START_EXTERNAL_SYNC"
              ],
              "type": "string",
              "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*",
              "enumDescriptions": [
                "Unknown operation type.",
                "Imports data into a Cloud SQL instance.",
                "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
                "Creates a new Cloud SQL instance.",
                "Updates the settings of a Cloud SQL instance.",
                "Deletes a Cloud SQL instance.",
                "Restarts the Cloud SQL instance.",
                "",
                "",
                "Performs instance backup.",
                "Deletes an instance backup.",
                "Restores an instance backup.",
                "Injects a privileged user in mysql for MOB instances.",
                "Clones a Cloud SQL instance.",
                "Stops replication on a Cloud SQL read replica instance.",
                "Starts replication on a Cloud SQL read replica instance.",
                "Promotes a Cloud SQL replica instance.",
                "Creates a Cloud SQL replica instance.",
                "Creates a new user in a Cloud SQL instance.",
                "Deletes a user from a Cloud SQL instance.",
                "Updates an existing user in a Cloud SQL instance.",
                "Creates a database in the Cloud SQL instance.",
                "Deletes a database in the Cloud SQL instance.",
                "Updates a database in the Cloud SQL instance.",
                "Performs failover of an HA-enabled Cloud SQL failover replica.",
                "Deletes the backup taken by a backup run.",
                "",
                "Truncates a general or slow log table in MySQL.",
                "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
                "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
                "This field is deprecated, and will be removed in future version of API.",
                "",
                "Creates clone instance.",
                "Reschedule maintenance to another time.",
                "Starts external sync of a Cloud SQL EM replica to an external master."
              ]
            },
            "targetProject": {
              "type": "string",
              "description": "The project ID of the target instance related to this operation."
            }
          },
          "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource."
        }
      ]
  instances.restoreBackup:
    description: |-
      Restores a backup of a Cloud SQL instance. Using this operation might cause your instance to restart.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/instances/restoreBackup
    example:
      inputs: [
        {
          "id": "InstancesRestoreBackupRequest",
          "type": "object",
          "properties": {
            "restoreBackupContext": {
              "id": "RestoreBackupContext",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#restoreBackupContext*."
                },
                "project": {
                  "type": "string",
                  "description": "The full project ID of the source instance."
                },
                "instanceId": {
                  "type": "string",
                  "description": "The ID of the instance that the backup was taken from."
                },
                "backupRunId": {
                  "type": "string",
                  "format": "int64",
                  "description": "The ID of the backup run to restore from."
                }
              },
              "description": "Parameters required to perform the restore backup operation."
            }
          },
          "description": "Database instance restore backup request."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#operation*."
            },
            "name": {
              "type": "string",
              "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
            },
            "user": {
              "type": "string",
              "description": "The email address of the user who initiated this operation."
            },
            "error": {
              "id": "OperationErrors",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#operationErrors*."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "OperationError",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Identifies the specific error that occurred."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#operationError*."
                      },
                      "message": {
                        "type": "string",
                        "description": "Additional information about the error encountered."
                      }
                    },
                    "description": "Database instance operation error."
                  },
                  "description": "The list of errors encountered while processing this operation."
                }
              },
              "description": "If errors occurred during processing of this operation, this field will be populated."
            },
            "status": {
              "enum": [
                "SQL_OPERATION_STATUS_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
              "enumDescriptions": [
                "The state of the operation is unknown.",
                "The operation has been queued, but has not started yet.",
                "The operation is running.",
                "The operation completed."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "targetId": {
              "type": "string",
              "description": "Name of the database instance related to this operation."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "insertTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "targetLink": {
              "type": "string"
            },
            "exportContext": {
              "id": "ExportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs: //bucketName/fileName*. If the file already exists, the requests // succeeds, but the operation fails. If *fileType* is // *SQL* and the filename ends with .gz, the contents are // compressed."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#exportContext*."
                },
                "offload": {
                  "type": "boolean",
                  "description": "Option for export offload."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "databases": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
                },
                "csvExportOptions": {
                  "type": "object",
                  "properties": {
                    "selectQuery": {
                      "type": "string",
                      "description": "The select query used to extract the data."
                    }
                  },
                  "description": "Options for exporting data as CSV."
                },
                "sqlExportOptions": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
                    },
                    "schemaOnly": {
                      "type": "boolean",
                      "description": "Export only schemas."
                    },
                    "mysqlExportOptions": {
                      "type": "object",
                      "properties": {
                        "masterData": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored."
                        }
                      },
                      "description": "Options for exporting from MySQL."
                    }
                  },
                  "description": "Options for exporting data as SQL statements."
                }
              },
              "description": "The context for export operation, if applicable."
            },
            "importContext": {
              "id": "ImportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "Path to the import file in Cloud Storage, in the form *gs: //bucketName/fileName*. Compressed gzip files (.gz) are supported // when *fileType* is *SQL*. The instance must have // write permissions to the bucket and read access to the file."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#importContext*."
                },
                "database": {
                  "type": "string",
                  "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "importUser": {
                  "type": "string",
                  "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
                },
                "bakImportOptions": {
                  "type": "object",
                  "properties": {
                    "encryptionOptions": {
                      "type": "object",
                      "properties": {
                        "pvkPath": {
                          "type": "string",
                          "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "certPath": {
                          "type": "string",
                          "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "pvkPassword": {
                          "type": "string",
                          "description": "Password that encrypts the private key"
                        }
                      }
                    }
                  },
                  "description": "Import parameters specific to SQL Server .BAK files"
                },
                "csvImportOptions": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "description": "The table to which CSV data is imported."
                    },
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
                    }
                  },
                  "description": "Options for importing data as CSV."
                }
              },
              "description": "The context for import operation, if applicable."
            },
            "operationType": {
              "enum": [
                "SQL_OPERATION_TYPE_UNSPECIFIED",
                "IMPORT",
                "EXPORT",
                "CREATE",
                "UPDATE",
                "DELETE",
                "RESTART",
                "BACKUP",
                "SNAPSHOT",
                "BACKUP_VOLUME",
                "DELETE_VOLUME",
                "RESTORE_VOLUME",
                "INJECT_USER",
                "CLONE",
                "STOP_REPLICA",
                "START_REPLICA",
                "PROMOTE_REPLICA",
                "CREATE_REPLICA",
                "CREATE_USER",
                "DELETE_USER",
                "UPDATE_USER",
                "CREATE_DATABASE",
                "DELETE_DATABASE",
                "UPDATE_DATABASE",
                "FAILOVER",
                "DELETE_BACKUP",
                "RECREATE_REPLICA",
                "TRUNCATE_LOG",
                "DEMOTE_MASTER",
                "MAINTENANCE",
                "ENABLE_PRIVATE_IP",
                "DEFER_MAINTENANCE",
                "CREATE_CLONE",
                "RESCHEDULE_MAINTENANCE",
                "START_EXTERNAL_SYNC"
              ],
              "type": "string",
              "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*",
              "enumDescriptions": [
                "Unknown operation type.",
                "Imports data into a Cloud SQL instance.",
                "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
                "Creates a new Cloud SQL instance.",
                "Updates the settings of a Cloud SQL instance.",
                "Deletes a Cloud SQL instance.",
                "Restarts the Cloud SQL instance.",
                "",
                "",
                "Performs instance backup.",
                "Deletes an instance backup.",
                "Restores an instance backup.",
                "Injects a privileged user in mysql for MOB instances.",
                "Clones a Cloud SQL instance.",
                "Stops replication on a Cloud SQL read replica instance.",
                "Starts replication on a Cloud SQL read replica instance.",
                "Promotes a Cloud SQL replica instance.",
                "Creates a Cloud SQL replica instance.",
                "Creates a new user in a Cloud SQL instance.",
                "Deletes a user from a Cloud SQL instance.",
                "Updates an existing user in a Cloud SQL instance.",
                "Creates a database in the Cloud SQL instance.",
                "Deletes a database in the Cloud SQL instance.",
                "Updates a database in the Cloud SQL instance.",
                "Performs failover of an HA-enabled Cloud SQL failover replica.",
                "Deletes the backup taken by a backup run.",
                "",
                "Truncates a general or slow log table in MySQL.",
                "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
                "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
                "This field is deprecated, and will be removed in future version of API.",
                "",
                "Creates clone instance.",
                "Reschedule maintenance to another time.",
                "Starts external sync of a Cloud SQL EM replica to an external master."
              ]
            },
            "targetProject": {
              "type": "string",
              "description": "The project ID of the target instance related to this operation."
            }
          },
          "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource."
        }
      ]
  instances.rotateServerCa:
    description: |-
      Rotates the server certificate to one signed by the Certificate Authority (CA) version previously added with the addServerCA method.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/instances/rotateServerCa
    example:
      inputs: [
        {
          "id": "InstancesRotateServerCaRequest",
          "type": "object",
          "properties": {
            "rotateServerCaContext": {
              "id": "RotateServerCaContext",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#rotateServerCaContext*."
                },
                "nextVersion": {
                  "type": "string",
                  "description": "The fingerprint of the next version to be rotated to. If left unspecified, will be rotated to the most recently added server CA version."
                }
              },
              "description": "Contains details about the rotate server CA operation."
            }
          },
          "description": "Rotate Server CA request."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#operation*."
            },
            "name": {
              "type": "string",
              "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
            },
            "user": {
              "type": "string",
              "description": "The email address of the user who initiated this operation."
            },
            "error": {
              "id": "OperationErrors",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#operationErrors*."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "OperationError",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Identifies the specific error that occurred."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#operationError*."
                      },
                      "message": {
                        "type": "string",
                        "description": "Additional information about the error encountered."
                      }
                    },
                    "description": "Database instance operation error."
                  },
                  "description": "The list of errors encountered while processing this operation."
                }
              },
              "description": "If errors occurred during processing of this operation, this field will be populated."
            },
            "status": {
              "enum": [
                "SQL_OPERATION_STATUS_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
              "enumDescriptions": [
                "The state of the operation is unknown.",
                "The operation has been queued, but has not started yet.",
                "The operation is running.",
                "The operation completed."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "targetId": {
              "type": "string",
              "description": "Name of the database instance related to this operation."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "insertTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "targetLink": {
              "type": "string"
            },
            "exportContext": {
              "id": "ExportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs: //bucketName/fileName*. If the file already exists, the requests // succeeds, but the operation fails. If *fileType* is // *SQL* and the filename ends with .gz, the contents are // compressed."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#exportContext*."
                },
                "offload": {
                  "type": "boolean",
                  "description": "Option for export offload."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "databases": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
                },
                "csvExportOptions": {
                  "type": "object",
                  "properties": {
                    "selectQuery": {
                      "type": "string",
                      "description": "The select query used to extract the data."
                    }
                  },
                  "description": "Options for exporting data as CSV."
                },
                "sqlExportOptions": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
                    },
                    "schemaOnly": {
                      "type": "boolean",
                      "description": "Export only schemas."
                    },
                    "mysqlExportOptions": {
                      "type": "object",
                      "properties": {
                        "masterData": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored."
                        }
                      },
                      "description": "Options for exporting from MySQL."
                    }
                  },
                  "description": "Options for exporting data as SQL statements."
                }
              },
              "description": "The context for export operation, if applicable."
            },
            "importContext": {
              "id": "ImportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "Path to the import file in Cloud Storage, in the form *gs: //bucketName/fileName*. Compressed gzip files (.gz) are supported // when *fileType* is *SQL*. The instance must have // write permissions to the bucket and read access to the file."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#importContext*."
                },
                "database": {
                  "type": "string",
                  "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "importUser": {
                  "type": "string",
                  "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
                },
                "bakImportOptions": {
                  "type": "object",
                  "properties": {
                    "encryptionOptions": {
                      "type": "object",
                      "properties": {
                        "pvkPath": {
                          "type": "string",
                          "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "certPath": {
                          "type": "string",
                          "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "pvkPassword": {
                          "type": "string",
                          "description": "Password that encrypts the private key"
                        }
                      }
                    }
                  },
                  "description": "Import parameters specific to SQL Server .BAK files"
                },
                "csvImportOptions": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "description": "The table to which CSV data is imported."
                    },
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
                    }
                  },
                  "description": "Options for importing data as CSV."
                }
              },
              "description": "The context for import operation, if applicable."
            },
            "operationType": {
              "enum": [
                "SQL_OPERATION_TYPE_UNSPECIFIED",
                "IMPORT",
                "EXPORT",
                "CREATE",
                "UPDATE",
                "DELETE",
                "RESTART",
                "BACKUP",
                "SNAPSHOT",
                "BACKUP_VOLUME",
                "DELETE_VOLUME",
                "RESTORE_VOLUME",
                "INJECT_USER",
                "CLONE",
                "STOP_REPLICA",
                "START_REPLICA",
                "PROMOTE_REPLICA",
                "CREATE_REPLICA",
                "CREATE_USER",
                "DELETE_USER",
                "UPDATE_USER",
                "CREATE_DATABASE",
                "DELETE_DATABASE",
                "UPDATE_DATABASE",
                "FAILOVER",
                "DELETE_BACKUP",
                "RECREATE_REPLICA",
                "TRUNCATE_LOG",
                "DEMOTE_MASTER",
                "MAINTENANCE",
                "ENABLE_PRIVATE_IP",
                "DEFER_MAINTENANCE",
                "CREATE_CLONE",
                "RESCHEDULE_MAINTENANCE",
                "START_EXTERNAL_SYNC"
              ],
              "type": "string",
              "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*",
              "enumDescriptions": [
                "Unknown operation type.",
                "Imports data into a Cloud SQL instance.",
                "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
                "Creates a new Cloud SQL instance.",
                "Updates the settings of a Cloud SQL instance.",
                "Deletes a Cloud SQL instance.",
                "Restarts the Cloud SQL instance.",
                "",
                "",
                "Performs instance backup.",
                "Deletes an instance backup.",
                "Restores an instance backup.",
                "Injects a privileged user in mysql for MOB instances.",
                "Clones a Cloud SQL instance.",
                "Stops replication on a Cloud SQL read replica instance.",
                "Starts replication on a Cloud SQL read replica instance.",
                "Promotes a Cloud SQL replica instance.",
                "Creates a Cloud SQL replica instance.",
                "Creates a new user in a Cloud SQL instance.",
                "Deletes a user from a Cloud SQL instance.",
                "Updates an existing user in a Cloud SQL instance.",
                "Creates a database in the Cloud SQL instance.",
                "Deletes a database in the Cloud SQL instance.",
                "Updates a database in the Cloud SQL instance.",
                "Performs failover of an HA-enabled Cloud SQL failover replica.",
                "Deletes the backup taken by a backup run.",
                "",
                "Truncates a general or slow log table in MySQL.",
                "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
                "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
                "This field is deprecated, and will be removed in future version of API.",
                "",
                "Creates clone instance.",
                "Reschedule maintenance to another time.",
                "Starts external sync of a Cloud SQL EM replica to an external master."
              ]
            },
            "targetProject": {
              "type": "string",
              "description": "The project ID of the target instance related to this operation."
            }
          },
          "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource."
        }
      ]
  instances.startReplica:
    description: |-
      Starts the replication in the read replica instance.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/instances/startReplica
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#operation*."
            },
            "name": {
              "type": "string",
              "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
            },
            "user": {
              "type": "string",
              "description": "The email address of the user who initiated this operation."
            },
            "error": {
              "id": "OperationErrors",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#operationErrors*."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "OperationError",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Identifies the specific error that occurred."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#operationError*."
                      },
                      "message": {
                        "type": "string",
                        "description": "Additional information about the error encountered."
                      }
                    },
                    "description": "Database instance operation error."
                  },
                  "description": "The list of errors encountered while processing this operation."
                }
              },
              "description": "If errors occurred during processing of this operation, this field will be populated."
            },
            "status": {
              "enum": [
                "SQL_OPERATION_STATUS_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
              "enumDescriptions": [
                "The state of the operation is unknown.",
                "The operation has been queued, but has not started yet.",
                "The operation is running.",
                "The operation completed."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "targetId": {
              "type": "string",
              "description": "Name of the database instance related to this operation."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "insertTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "targetLink": {
              "type": "string"
            },
            "exportContext": {
              "id": "ExportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs: //bucketName/fileName*. If the file already exists, the requests // succeeds, but the operation fails. If *fileType* is // *SQL* and the filename ends with .gz, the contents are // compressed."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#exportContext*."
                },
                "offload": {
                  "type": "boolean",
                  "description": "Option for export offload."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "databases": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
                },
                "csvExportOptions": {
                  "type": "object",
                  "properties": {
                    "selectQuery": {
                      "type": "string",
                      "description": "The select query used to extract the data."
                    }
                  },
                  "description": "Options for exporting data as CSV."
                },
                "sqlExportOptions": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
                    },
                    "schemaOnly": {
                      "type": "boolean",
                      "description": "Export only schemas."
                    },
                    "mysqlExportOptions": {
                      "type": "object",
                      "properties": {
                        "masterData": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored."
                        }
                      },
                      "description": "Options for exporting from MySQL."
                    }
                  },
                  "description": "Options for exporting data as SQL statements."
                }
              },
              "description": "The context for export operation, if applicable."
            },
            "importContext": {
              "id": "ImportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "Path to the import file in Cloud Storage, in the form *gs: //bucketName/fileName*. Compressed gzip files (.gz) are supported // when *fileType* is *SQL*. The instance must have // write permissions to the bucket and read access to the file."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#importContext*."
                },
                "database": {
                  "type": "string",
                  "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "importUser": {
                  "type": "string",
                  "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
                },
                "bakImportOptions": {
                  "type": "object",
                  "properties": {
                    "encryptionOptions": {
                      "type": "object",
                      "properties": {
                        "pvkPath": {
                          "type": "string",
                          "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "certPath": {
                          "type": "string",
                          "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "pvkPassword": {
                          "type": "string",
                          "description": "Password that encrypts the private key"
                        }
                      }
                    }
                  },
                  "description": "Import parameters specific to SQL Server .BAK files"
                },
                "csvImportOptions": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "description": "The table to which CSV data is imported."
                    },
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
                    }
                  },
                  "description": "Options for importing data as CSV."
                }
              },
              "description": "The context for import operation, if applicable."
            },
            "operationType": {
              "enum": [
                "SQL_OPERATION_TYPE_UNSPECIFIED",
                "IMPORT",
                "EXPORT",
                "CREATE",
                "UPDATE",
                "DELETE",
                "RESTART",
                "BACKUP",
                "SNAPSHOT",
                "BACKUP_VOLUME",
                "DELETE_VOLUME",
                "RESTORE_VOLUME",
                "INJECT_USER",
                "CLONE",
                "STOP_REPLICA",
                "START_REPLICA",
                "PROMOTE_REPLICA",
                "CREATE_REPLICA",
                "CREATE_USER",
                "DELETE_USER",
                "UPDATE_USER",
                "CREATE_DATABASE",
                "DELETE_DATABASE",
                "UPDATE_DATABASE",
                "FAILOVER",
                "DELETE_BACKUP",
                "RECREATE_REPLICA",
                "TRUNCATE_LOG",
                "DEMOTE_MASTER",
                "MAINTENANCE",
                "ENABLE_PRIVATE_IP",
                "DEFER_MAINTENANCE",
                "CREATE_CLONE",
                "RESCHEDULE_MAINTENANCE",
                "START_EXTERNAL_SYNC"
              ],
              "type": "string",
              "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*",
              "enumDescriptions": [
                "Unknown operation type.",
                "Imports data into a Cloud SQL instance.",
                "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
                "Creates a new Cloud SQL instance.",
                "Updates the settings of a Cloud SQL instance.",
                "Deletes a Cloud SQL instance.",
                "Restarts the Cloud SQL instance.",
                "",
                "",
                "Performs instance backup.",
                "Deletes an instance backup.",
                "Restores an instance backup.",
                "Injects a privileged user in mysql for MOB instances.",
                "Clones a Cloud SQL instance.",
                "Stops replication on a Cloud SQL read replica instance.",
                "Starts replication on a Cloud SQL read replica instance.",
                "Promotes a Cloud SQL replica instance.",
                "Creates a Cloud SQL replica instance.",
                "Creates a new user in a Cloud SQL instance.",
                "Deletes a user from a Cloud SQL instance.",
                "Updates an existing user in a Cloud SQL instance.",
                "Creates a database in the Cloud SQL instance.",
                "Deletes a database in the Cloud SQL instance.",
                "Updates a database in the Cloud SQL instance.",
                "Performs failover of an HA-enabled Cloud SQL failover replica.",
                "Deletes the backup taken by a backup run.",
                "",
                "Truncates a general or slow log table in MySQL.",
                "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
                "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
                "This field is deprecated, and will be removed in future version of API.",
                "",
                "Creates clone instance.",
                "Reschedule maintenance to another time.",
                "Starts external sync of a Cloud SQL EM replica to an external master."
              ]
            },
            "targetProject": {
              "type": "string",
              "description": "The project ID of the target instance related to this operation."
            }
          },
          "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource."
        }
      ]
  instances.stopReplica:
    description: |-
      Stops the replication in the read replica instance.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/instances/stopReplica
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#operation*."
            },
            "name": {
              "type": "string",
              "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
            },
            "user": {
              "type": "string",
              "description": "The email address of the user who initiated this operation."
            },
            "error": {
              "id": "OperationErrors",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#operationErrors*."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "OperationError",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Identifies the specific error that occurred."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#operationError*."
                      },
                      "message": {
                        "type": "string",
                        "description": "Additional information about the error encountered."
                      }
                    },
                    "description": "Database instance operation error."
                  },
                  "description": "The list of errors encountered while processing this operation."
                }
              },
              "description": "If errors occurred during processing of this operation, this field will be populated."
            },
            "status": {
              "enum": [
                "SQL_OPERATION_STATUS_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
              "enumDescriptions": [
                "The state of the operation is unknown.",
                "The operation has been queued, but has not started yet.",
                "The operation is running.",
                "The operation completed."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "targetId": {
              "type": "string",
              "description": "Name of the database instance related to this operation."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "insertTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "targetLink": {
              "type": "string"
            },
            "exportContext": {
              "id": "ExportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs: //bucketName/fileName*. If the file already exists, the requests // succeeds, but the operation fails. If *fileType* is // *SQL* and the filename ends with .gz, the contents are // compressed."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#exportContext*."
                },
                "offload": {
                  "type": "boolean",
                  "description": "Option for export offload."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "databases": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
                },
                "csvExportOptions": {
                  "type": "object",
                  "properties": {
                    "selectQuery": {
                      "type": "string",
                      "description": "The select query used to extract the data."
                    }
                  },
                  "description": "Options for exporting data as CSV."
                },
                "sqlExportOptions": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
                    },
                    "schemaOnly": {
                      "type": "boolean",
                      "description": "Export only schemas."
                    },
                    "mysqlExportOptions": {
                      "type": "object",
                      "properties": {
                        "masterData": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored."
                        }
                      },
                      "description": "Options for exporting from MySQL."
                    }
                  },
                  "description": "Options for exporting data as SQL statements."
                }
              },
              "description": "The context for export operation, if applicable."
            },
            "importContext": {
              "id": "ImportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "Path to the import file in Cloud Storage, in the form *gs: //bucketName/fileName*. Compressed gzip files (.gz) are supported // when *fileType* is *SQL*. The instance must have // write permissions to the bucket and read access to the file."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#importContext*."
                },
                "database": {
                  "type": "string",
                  "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "importUser": {
                  "type": "string",
                  "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
                },
                "bakImportOptions": {
                  "type": "object",
                  "properties": {
                    "encryptionOptions": {
                      "type": "object",
                      "properties": {
                        "pvkPath": {
                          "type": "string",
                          "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "certPath": {
                          "type": "string",
                          "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "pvkPassword": {
                          "type": "string",
                          "description": "Password that encrypts the private key"
                        }
                      }
                    }
                  },
                  "description": "Import parameters specific to SQL Server .BAK files"
                },
                "csvImportOptions": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "description": "The table to which CSV data is imported."
                    },
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
                    }
                  },
                  "description": "Options for importing data as CSV."
                }
              },
              "description": "The context for import operation, if applicable."
            },
            "operationType": {
              "enum": [
                "SQL_OPERATION_TYPE_UNSPECIFIED",
                "IMPORT",
                "EXPORT",
                "CREATE",
                "UPDATE",
                "DELETE",
                "RESTART",
                "BACKUP",
                "SNAPSHOT",
                "BACKUP_VOLUME",
                "DELETE_VOLUME",
                "RESTORE_VOLUME",
                "INJECT_USER",
                "CLONE",
                "STOP_REPLICA",
                "START_REPLICA",
                "PROMOTE_REPLICA",
                "CREATE_REPLICA",
                "CREATE_USER",
                "DELETE_USER",
                "UPDATE_USER",
                "CREATE_DATABASE",
                "DELETE_DATABASE",
                "UPDATE_DATABASE",
                "FAILOVER",
                "DELETE_BACKUP",
                "RECREATE_REPLICA",
                "TRUNCATE_LOG",
                "DEMOTE_MASTER",
                "MAINTENANCE",
                "ENABLE_PRIVATE_IP",
                "DEFER_MAINTENANCE",
                "CREATE_CLONE",
                "RESCHEDULE_MAINTENANCE",
                "START_EXTERNAL_SYNC"
              ],
              "type": "string",
              "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*",
              "enumDescriptions": [
                "Unknown operation type.",
                "Imports data into a Cloud SQL instance.",
                "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
                "Creates a new Cloud SQL instance.",
                "Updates the settings of a Cloud SQL instance.",
                "Deletes a Cloud SQL instance.",
                "Restarts the Cloud SQL instance.",
                "",
                "",
                "Performs instance backup.",
                "Deletes an instance backup.",
                "Restores an instance backup.",
                "Injects a privileged user in mysql for MOB instances.",
                "Clones a Cloud SQL instance.",
                "Stops replication on a Cloud SQL read replica instance.",
                "Starts replication on a Cloud SQL read replica instance.",
                "Promotes a Cloud SQL replica instance.",
                "Creates a Cloud SQL replica instance.",
                "Creates a new user in a Cloud SQL instance.",
                "Deletes a user from a Cloud SQL instance.",
                "Updates an existing user in a Cloud SQL instance.",
                "Creates a database in the Cloud SQL instance.",
                "Deletes a database in the Cloud SQL instance.",
                "Updates a database in the Cloud SQL instance.",
                "Performs failover of an HA-enabled Cloud SQL failover replica.",
                "Deletes the backup taken by a backup run.",
                "",
                "Truncates a general or slow log table in MySQL.",
                "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
                "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
                "This field is deprecated, and will be removed in future version of API.",
                "",
                "Creates clone instance.",
                "Reschedule maintenance to another time.",
                "Starts external sync of a Cloud SQL EM replica to an external master."
              ]
            },
            "targetProject": {
              "type": "string",
              "description": "The project ID of the target instance related to this operation."
            }
          },
          "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource."
        }
      ]
  instances.truncateLog:
    description: |-
      Truncate MySQL general and slow query log tables
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/instances/truncateLog
    example:
      inputs: [
        {
          "id": "InstancesTruncateLogRequest",
          "type": "object",
          "properties": {
            "truncateLogContext": {
              "id": "TruncateLogContext",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#truncateLogContext*."
                },
                "logType": {
                  "type": "string",
                  "description": "The type of log to truncate. Valid values are *MYSQL_GENERAL_TABLE* and *MYSQL_SLOW_TABLE*."
                }
              },
              "description": "Contains details about the truncate log operation."
            }
          },
          "description": "Instance truncate log request."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#operation*."
            },
            "name": {
              "type": "string",
              "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
            },
            "user": {
              "type": "string",
              "description": "The email address of the user who initiated this operation."
            },
            "error": {
              "id": "OperationErrors",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#operationErrors*."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "OperationError",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Identifies the specific error that occurred."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#operationError*."
                      },
                      "message": {
                        "type": "string",
                        "description": "Additional information about the error encountered."
                      }
                    },
                    "description": "Database instance operation error."
                  },
                  "description": "The list of errors encountered while processing this operation."
                }
              },
              "description": "If errors occurred during processing of this operation, this field will be populated."
            },
            "status": {
              "enum": [
                "SQL_OPERATION_STATUS_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
              "enumDescriptions": [
                "The state of the operation is unknown.",
                "The operation has been queued, but has not started yet.",
                "The operation is running.",
                "The operation completed."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "targetId": {
              "type": "string",
              "description": "Name of the database instance related to this operation."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "insertTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "targetLink": {
              "type": "string"
            },
            "exportContext": {
              "id": "ExportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs: //bucketName/fileName*. If the file already exists, the requests // succeeds, but the operation fails. If *fileType* is // *SQL* and the filename ends with .gz, the contents are // compressed."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#exportContext*."
                },
                "offload": {
                  "type": "boolean",
                  "description": "Option for export offload."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "databases": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
                },
                "csvExportOptions": {
                  "type": "object",
                  "properties": {
                    "selectQuery": {
                      "type": "string",
                      "description": "The select query used to extract the data."
                    }
                  },
                  "description": "Options for exporting data as CSV."
                },
                "sqlExportOptions": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
                    },
                    "schemaOnly": {
                      "type": "boolean",
                      "description": "Export only schemas."
                    },
                    "mysqlExportOptions": {
                      "type": "object",
                      "properties": {
                        "masterData": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored."
                        }
                      },
                      "description": "Options for exporting from MySQL."
                    }
                  },
                  "description": "Options for exporting data as SQL statements."
                }
              },
              "description": "The context for export operation, if applicable."
            },
            "importContext": {
              "id": "ImportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "Path to the import file in Cloud Storage, in the form *gs: //bucketName/fileName*. Compressed gzip files (.gz) are supported // when *fileType* is *SQL*. The instance must have // write permissions to the bucket and read access to the file."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#importContext*."
                },
                "database": {
                  "type": "string",
                  "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "importUser": {
                  "type": "string",
                  "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
                },
                "bakImportOptions": {
                  "type": "object",
                  "properties": {
                    "encryptionOptions": {
                      "type": "object",
                      "properties": {
                        "pvkPath": {
                          "type": "string",
                          "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "certPath": {
                          "type": "string",
                          "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "pvkPassword": {
                          "type": "string",
                          "description": "Password that encrypts the private key"
                        }
                      }
                    }
                  },
                  "description": "Import parameters specific to SQL Server .BAK files"
                },
                "csvImportOptions": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "description": "The table to which CSV data is imported."
                    },
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
                    }
                  },
                  "description": "Options for importing data as CSV."
                }
              },
              "description": "The context for import operation, if applicable."
            },
            "operationType": {
              "enum": [
                "SQL_OPERATION_TYPE_UNSPECIFIED",
                "IMPORT",
                "EXPORT",
                "CREATE",
                "UPDATE",
                "DELETE",
                "RESTART",
                "BACKUP",
                "SNAPSHOT",
                "BACKUP_VOLUME",
                "DELETE_VOLUME",
                "RESTORE_VOLUME",
                "INJECT_USER",
                "CLONE",
                "STOP_REPLICA",
                "START_REPLICA",
                "PROMOTE_REPLICA",
                "CREATE_REPLICA",
                "CREATE_USER",
                "DELETE_USER",
                "UPDATE_USER",
                "CREATE_DATABASE",
                "DELETE_DATABASE",
                "UPDATE_DATABASE",
                "FAILOVER",
                "DELETE_BACKUP",
                "RECREATE_REPLICA",
                "TRUNCATE_LOG",
                "DEMOTE_MASTER",
                "MAINTENANCE",
                "ENABLE_PRIVATE_IP",
                "DEFER_MAINTENANCE",
                "CREATE_CLONE",
                "RESCHEDULE_MAINTENANCE",
                "START_EXTERNAL_SYNC"
              ],
              "type": "string",
              "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*",
              "enumDescriptions": [
                "Unknown operation type.",
                "Imports data into a Cloud SQL instance.",
                "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
                "Creates a new Cloud SQL instance.",
                "Updates the settings of a Cloud SQL instance.",
                "Deletes a Cloud SQL instance.",
                "Restarts the Cloud SQL instance.",
                "",
                "",
                "Performs instance backup.",
                "Deletes an instance backup.",
                "Restores an instance backup.",
                "Injects a privileged user in mysql for MOB instances.",
                "Clones a Cloud SQL instance.",
                "Stops replication on a Cloud SQL read replica instance.",
                "Starts replication on a Cloud SQL read replica instance.",
                "Promotes a Cloud SQL replica instance.",
                "Creates a Cloud SQL replica instance.",
                "Creates a new user in a Cloud SQL instance.",
                "Deletes a user from a Cloud SQL instance.",
                "Updates an existing user in a Cloud SQL instance.",
                "Creates a database in the Cloud SQL instance.",
                "Deletes a database in the Cloud SQL instance.",
                "Updates a database in the Cloud SQL instance.",
                "Performs failover of an HA-enabled Cloud SQL failover replica.",
                "Deletes the backup taken by a backup run.",
                "",
                "Truncates a general or slow log table in MySQL.",
                "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
                "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
                "This field is deprecated, and will be removed in future version of API.",
                "",
                "Creates clone instance.",
                "Reschedule maintenance to another time.",
                "Starts external sync of a Cloud SQL EM replica to an external master."
              ]
            },
            "targetProject": {
              "type": "string",
              "description": "The project ID of the target instance related to this operation."
            }
          },
          "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource."
        }
      ]
  instances.update:
    description: |-
      Updates settings of a Cloud SQL instance. Using this operation might cause your instance to restart.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/instances/update
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#operation*."
            },
            "name": {
              "type": "string",
              "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
            },
            "user": {
              "type": "string",
              "description": "The email address of the user who initiated this operation."
            },
            "error": {
              "id": "OperationErrors",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#operationErrors*."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "OperationError",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Identifies the specific error that occurred."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#operationError*."
                      },
                      "message": {
                        "type": "string",
                        "description": "Additional information about the error encountered."
                      }
                    },
                    "description": "Database instance operation error."
                  },
                  "description": "The list of errors encountered while processing this operation."
                }
              },
              "description": "If errors occurred during processing of this operation, this field will be populated."
            },
            "status": {
              "enum": [
                "SQL_OPERATION_STATUS_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
              "enumDescriptions": [
                "The state of the operation is unknown.",
                "The operation has been queued, but has not started yet.",
                "The operation is running.",
                "The operation completed."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "targetId": {
              "type": "string",
              "description": "Name of the database instance related to this operation."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "insertTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "targetLink": {
              "type": "string"
            },
            "exportContext": {
              "id": "ExportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs: //bucketName/fileName*. If the file already exists, the requests // succeeds, but the operation fails. If *fileType* is // *SQL* and the filename ends with .gz, the contents are // compressed."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#exportContext*."
                },
                "offload": {
                  "type": "boolean",
                  "description": "Option for export offload."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "databases": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
                },
                "csvExportOptions": {
                  "type": "object",
                  "properties": {
                    "selectQuery": {
                      "type": "string",
                      "description": "The select query used to extract the data."
                    }
                  },
                  "description": "Options for exporting data as CSV."
                },
                "sqlExportOptions": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
                    },
                    "schemaOnly": {
                      "type": "boolean",
                      "description": "Export only schemas."
                    },
                    "mysqlExportOptions": {
                      "type": "object",
                      "properties": {
                        "masterData": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored."
                        }
                      },
                      "description": "Options for exporting from MySQL."
                    }
                  },
                  "description": "Options for exporting data as SQL statements."
                }
              },
              "description": "The context for export operation, if applicable."
            },
            "importContext": {
              "id": "ImportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "Path to the import file in Cloud Storage, in the form *gs: //bucketName/fileName*. Compressed gzip files (.gz) are supported // when *fileType* is *SQL*. The instance must have // write permissions to the bucket and read access to the file."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#importContext*."
                },
                "database": {
                  "type": "string",
                  "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "importUser": {
                  "type": "string",
                  "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
                },
                "bakImportOptions": {
                  "type": "object",
                  "properties": {
                    "encryptionOptions": {
                      "type": "object",
                      "properties": {
                        "pvkPath": {
                          "type": "string",
                          "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "certPath": {
                          "type": "string",
                          "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "pvkPassword": {
                          "type": "string",
                          "description": "Password that encrypts the private key"
                        }
                      }
                    }
                  },
                  "description": "Import parameters specific to SQL Server .BAK files"
                },
                "csvImportOptions": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "description": "The table to which CSV data is imported."
                    },
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
                    }
                  },
                  "description": "Options for importing data as CSV."
                }
              },
              "description": "The context for import operation, if applicable."
            },
            "operationType": {
              "enum": [
                "SQL_OPERATION_TYPE_UNSPECIFIED",
                "IMPORT",
                "EXPORT",
                "CREATE",
                "UPDATE",
                "DELETE",
                "RESTART",
                "BACKUP",
                "SNAPSHOT",
                "BACKUP_VOLUME",
                "DELETE_VOLUME",
                "RESTORE_VOLUME",
                "INJECT_USER",
                "CLONE",
                "STOP_REPLICA",
                "START_REPLICA",
                "PROMOTE_REPLICA",
                "CREATE_REPLICA",
                "CREATE_USER",
                "DELETE_USER",
                "UPDATE_USER",
                "CREATE_DATABASE",
                "DELETE_DATABASE",
                "UPDATE_DATABASE",
                "FAILOVER",
                "DELETE_BACKUP",
                "RECREATE_REPLICA",
                "TRUNCATE_LOG",
                "DEMOTE_MASTER",
                "MAINTENANCE",
                "ENABLE_PRIVATE_IP",
                "DEFER_MAINTENANCE",
                "CREATE_CLONE",
                "RESCHEDULE_MAINTENANCE",
                "START_EXTERNAL_SYNC"
              ],
              "type": "string",
              "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*",
              "enumDescriptions": [
                "Unknown operation type.",
                "Imports data into a Cloud SQL instance.",
                "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
                "Creates a new Cloud SQL instance.",
                "Updates the settings of a Cloud SQL instance.",
                "Deletes a Cloud SQL instance.",
                "Restarts the Cloud SQL instance.",
                "",
                "",
                "Performs instance backup.",
                "Deletes an instance backup.",
                "Restores an instance backup.",
                "Injects a privileged user in mysql for MOB instances.",
                "Clones a Cloud SQL instance.",
                "Stops replication on a Cloud SQL read replica instance.",
                "Starts replication on a Cloud SQL read replica instance.",
                "Promotes a Cloud SQL replica instance.",
                "Creates a Cloud SQL replica instance.",
                "Creates a new user in a Cloud SQL instance.",
                "Deletes a user from a Cloud SQL instance.",
                "Updates an existing user in a Cloud SQL instance.",
                "Creates a database in the Cloud SQL instance.",
                "Deletes a database in the Cloud SQL instance.",
                "Updates a database in the Cloud SQL instance.",
                "Performs failover of an HA-enabled Cloud SQL failover replica.",
                "Deletes the backup taken by a backup run.",
                "",
                "Truncates a general or slow log table in MySQL.",
                "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
                "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
                "This field is deprecated, and will be removed in future version of API.",
                "",
                "Creates clone instance.",
                "Reschedule maintenance to another time.",
                "Starts external sync of a Cloud SQL EM replica to an external master."
              ]
            },
            "targetProject": {
              "type": "string",
              "description": "The project ID of the target instance related to this operation."
            }
          },
          "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource."
        }
      ]
  operations.get:
    description: |-
      Retrieves an instance operation that has been performed on an instance.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/operations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#operation*."
            },
            "name": {
              "type": "string",
              "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
            },
            "user": {
              "type": "string",
              "description": "The email address of the user who initiated this operation."
            },
            "error": {
              "id": "OperationErrors",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#operationErrors*."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "OperationError",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Identifies the specific error that occurred."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#operationError*."
                      },
                      "message": {
                        "type": "string",
                        "description": "Additional information about the error encountered."
                      }
                    },
                    "description": "Database instance operation error."
                  },
                  "description": "The list of errors encountered while processing this operation."
                }
              },
              "description": "If errors occurred during processing of this operation, this field will be populated."
            },
            "status": {
              "enum": [
                "SQL_OPERATION_STATUS_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
              "enumDescriptions": [
                "The state of the operation is unknown.",
                "The operation has been queued, but has not started yet.",
                "The operation is running.",
                "The operation completed."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "targetId": {
              "type": "string",
              "description": "Name of the database instance related to this operation."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "insertTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "targetLink": {
              "type": "string"
            },
            "exportContext": {
              "id": "ExportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs: //bucketName/fileName*. If the file already exists, the requests // succeeds, but the operation fails. If *fileType* is // *SQL* and the filename ends with .gz, the contents are // compressed."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#exportContext*."
                },
                "offload": {
                  "type": "boolean",
                  "description": "Option for export offload."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "databases": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
                },
                "csvExportOptions": {
                  "type": "object",
                  "properties": {
                    "selectQuery": {
                      "type": "string",
                      "description": "The select query used to extract the data."
                    }
                  },
                  "description": "Options for exporting data as CSV."
                },
                "sqlExportOptions": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
                    },
                    "schemaOnly": {
                      "type": "boolean",
                      "description": "Export only schemas."
                    },
                    "mysqlExportOptions": {
                      "type": "object",
                      "properties": {
                        "masterData": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored."
                        }
                      },
                      "description": "Options for exporting from MySQL."
                    }
                  },
                  "description": "Options for exporting data as SQL statements."
                }
              },
              "description": "The context for export operation, if applicable."
            },
            "importContext": {
              "id": "ImportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "Path to the import file in Cloud Storage, in the form *gs: //bucketName/fileName*. Compressed gzip files (.gz) are supported // when *fileType* is *SQL*. The instance must have // write permissions to the bucket and read access to the file."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#importContext*."
                },
                "database": {
                  "type": "string",
                  "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "importUser": {
                  "type": "string",
                  "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
                },
                "bakImportOptions": {
                  "type": "object",
                  "properties": {
                    "encryptionOptions": {
                      "type": "object",
                      "properties": {
                        "pvkPath": {
                          "type": "string",
                          "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "certPath": {
                          "type": "string",
                          "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "pvkPassword": {
                          "type": "string",
                          "description": "Password that encrypts the private key"
                        }
                      }
                    }
                  },
                  "description": "Import parameters specific to SQL Server .BAK files"
                },
                "csvImportOptions": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "description": "The table to which CSV data is imported."
                    },
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
                    }
                  },
                  "description": "Options for importing data as CSV."
                }
              },
              "description": "The context for import operation, if applicable."
            },
            "operationType": {
              "enum": [
                "SQL_OPERATION_TYPE_UNSPECIFIED",
                "IMPORT",
                "EXPORT",
                "CREATE",
                "UPDATE",
                "DELETE",
                "RESTART",
                "BACKUP",
                "SNAPSHOT",
                "BACKUP_VOLUME",
                "DELETE_VOLUME",
                "RESTORE_VOLUME",
                "INJECT_USER",
                "CLONE",
                "STOP_REPLICA",
                "START_REPLICA",
                "PROMOTE_REPLICA",
                "CREATE_REPLICA",
                "CREATE_USER",
                "DELETE_USER",
                "UPDATE_USER",
                "CREATE_DATABASE",
                "DELETE_DATABASE",
                "UPDATE_DATABASE",
                "FAILOVER",
                "DELETE_BACKUP",
                "RECREATE_REPLICA",
                "TRUNCATE_LOG",
                "DEMOTE_MASTER",
                "MAINTENANCE",
                "ENABLE_PRIVATE_IP",
                "DEFER_MAINTENANCE",
                "CREATE_CLONE",
                "RESCHEDULE_MAINTENANCE",
                "START_EXTERNAL_SYNC"
              ],
              "type": "string",
              "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*",
              "enumDescriptions": [
                "Unknown operation type.",
                "Imports data into a Cloud SQL instance.",
                "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
                "Creates a new Cloud SQL instance.",
                "Updates the settings of a Cloud SQL instance.",
                "Deletes a Cloud SQL instance.",
                "Restarts the Cloud SQL instance.",
                "",
                "",
                "Performs instance backup.",
                "Deletes an instance backup.",
                "Restores an instance backup.",
                "Injects a privileged user in mysql for MOB instances.",
                "Clones a Cloud SQL instance.",
                "Stops replication on a Cloud SQL read replica instance.",
                "Starts replication on a Cloud SQL read replica instance.",
                "Promotes a Cloud SQL replica instance.",
                "Creates a Cloud SQL replica instance.",
                "Creates a new user in a Cloud SQL instance.",
                "Deletes a user from a Cloud SQL instance.",
                "Updates an existing user in a Cloud SQL instance.",
                "Creates a database in the Cloud SQL instance.",
                "Deletes a database in the Cloud SQL instance.",
                "Updates a database in the Cloud SQL instance.",
                "Performs failover of an HA-enabled Cloud SQL failover replica.",
                "Deletes the backup taken by a backup run.",
                "",
                "Truncates a general or slow log table in MySQL.",
                "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
                "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
                "This field is deprecated, and will be removed in future version of API.",
                "",
                "Creates clone instance.",
                "Reschedule maintenance to another time.",
                "Starts external sync of a Cloud SQL EM replica to an external master."
              ]
            },
            "targetProject": {
              "type": "string",
              "description": "The project ID of the target instance related to this operation."
            }
          },
          "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource."
        }
      ]
  operations.list:
    description: |-
      Lists all instance operations that have been performed on the given Cloud SQL instance in the reverse chronological order of the start time.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/operations/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "OperationsListResponse",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#operationsList*."
            },
            "items": {
              "type": "array",
              "items": {
                "id": "Operation",
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "description": "This is always *sql#operation*."
                  },
                  "name": {
                    "type": "string",
                    "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
                  },
                  "user": {
                    "type": "string",
                    "description": "The email address of the user who initiated this operation."
                  },
                  "error": {
                    "id": "OperationErrors",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#operationErrors*."
                      },
                      "errors": {
                        "type": "array",
                        "items": {
                          "id": "OperationError",
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "Identifies the specific error that occurred."
                            },
                            "kind": {
                              "type": "string",
                              "description": "This is always *sql#operationError*."
                            },
                            "message": {
                              "type": "string",
                              "description": "Additional information about the error encountered."
                            }
                          },
                          "description": "Database instance operation error."
                        },
                        "description": "The list of errors encountered while processing this operation."
                      }
                    },
                    "description": "If errors occurred during processing of this operation, this field will be populated."
                  },
                  "status": {
                    "enum": [
                      "SQL_OPERATION_STATUS_UNSPECIFIED",
                      "PENDING",
                      "RUNNING",
                      "DONE"
                    ],
                    "type": "string",
                    "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
                    "enumDescriptions": [
                      "The state of the operation is unknown.",
                      "The operation has been queued, but has not started yet.",
                      "The operation is running.",
                      "The operation completed."
                    ]
                  },
                  "endTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
                  },
                  "selfLink": {
                    "type": "string",
                    "description": "The URI of this resource."
                  },
                  "targetId": {
                    "type": "string",
                    "description": "Name of the database instance related to this operation."
                  },
                  "startTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
                  },
                  "insertTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
                  },
                  "targetLink": {
                    "type": "string"
                  },
                  "exportContext": {
                    "id": "ExportContext",
                    "type": "object",
                    "properties": {
                      "uri": {
                        "type": "string",
                        "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs: //bucketName/fileName*. If the file already exists, the requests // succeeds, but the operation fails. If *fileType* is // *SQL* and the filename ends with .gz, the contents are // compressed."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#exportContext*."
                      },
                      "offload": {
                        "type": "boolean",
                        "description": "Option for export offload."
                      },
                      "fileType": {
                        "enum": [
                          "SQL_FILE_TYPE_UNSPECIFIED",
                          "SQL",
                          "CSV",
                          "BAK"
                        ],
                        "type": "string",
                        "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                        "enumDescriptions": [
                          "Unknown file type.",
                          "File containing SQL statements.",
                          "File in CSV format.",
                          ""
                        ]
                      },
                      "databases": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
                      },
                      "csvExportOptions": {
                        "type": "object",
                        "properties": {
                          "selectQuery": {
                            "type": "string",
                            "description": "The select query used to extract the data."
                          }
                        },
                        "description": "Options for exporting data as CSV."
                      },
                      "sqlExportOptions": {
                        "type": "object",
                        "properties": {
                          "tables": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
                          },
                          "schemaOnly": {
                            "type": "boolean",
                            "description": "Export only schemas."
                          },
                          "mysqlExportOptions": {
                            "type": "object",
                            "properties": {
                              "masterData": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored."
                              }
                            },
                            "description": "Options for exporting from MySQL."
                          }
                        },
                        "description": "Options for exporting data as SQL statements."
                      }
                    },
                    "description": "The context for export operation, if applicable."
                  },
                  "importContext": {
                    "id": "ImportContext",
                    "type": "object",
                    "properties": {
                      "uri": {
                        "type": "string",
                        "description": "Path to the import file in Cloud Storage, in the form *gs: //bucketName/fileName*. Compressed gzip files (.gz) are supported // when *fileType* is *SQL*. The instance must have // write permissions to the bucket and read access to the file."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#importContext*."
                      },
                      "database": {
                        "type": "string",
                        "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
                      },
                      "fileType": {
                        "enum": [
                          "SQL_FILE_TYPE_UNSPECIFIED",
                          "SQL",
                          "CSV",
                          "BAK"
                        ],
                        "type": "string",
                        "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                        "enumDescriptions": [
                          "Unknown file type.",
                          "File containing SQL statements.",
                          "File in CSV format.",
                          ""
                        ]
                      },
                      "importUser": {
                        "type": "string",
                        "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
                      },
                      "bakImportOptions": {
                        "type": "object",
                        "properties": {
                          "encryptionOptions": {
                            "type": "object",
                            "properties": {
                              "pvkPath": {
                                "type": "string",
                                "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                              },
                              "certPath": {
                                "type": "string",
                                "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                              },
                              "pvkPassword": {
                                "type": "string",
                                "description": "Password that encrypts the private key"
                              }
                            }
                          }
                        },
                        "description": "Import parameters specific to SQL Server .BAK files"
                      },
                      "csvImportOptions": {
                        "type": "object",
                        "properties": {
                          "table": {
                            "type": "string",
                            "description": "The table to which CSV data is imported."
                          },
                          "columns": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
                          }
                        },
                        "description": "Options for importing data as CSV."
                      }
                    },
                    "description": "The context for import operation, if applicable."
                  },
                  "operationType": {
                    "enum": [
                      "SQL_OPERATION_TYPE_UNSPECIFIED",
                      "IMPORT",
                      "EXPORT",
                      "CREATE",
                      "UPDATE",
                      "DELETE",
                      "RESTART",
                      "BACKUP",
                      "SNAPSHOT",
                      "BACKUP_VOLUME",
                      "DELETE_VOLUME",
                      "RESTORE_VOLUME",
                      "INJECT_USER",
                      "CLONE",
                      "STOP_REPLICA",
                      "START_REPLICA",
                      "PROMOTE_REPLICA",
                      "CREATE_REPLICA",
                      "CREATE_USER",
                      "DELETE_USER",
                      "UPDATE_USER",
                      "CREATE_DATABASE",
                      "DELETE_DATABASE",
                      "UPDATE_DATABASE",
                      "FAILOVER",
                      "DELETE_BACKUP",
                      "RECREATE_REPLICA",
                      "TRUNCATE_LOG",
                      "DEMOTE_MASTER",
                      "MAINTENANCE",
                      "ENABLE_PRIVATE_IP",
                      "DEFER_MAINTENANCE",
                      "CREATE_CLONE",
                      "RESCHEDULE_MAINTENANCE",
                      "START_EXTERNAL_SYNC"
                    ],
                    "type": "string",
                    "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*",
                    "enumDescriptions": [
                      "Unknown operation type.",
                      "Imports data into a Cloud SQL instance.",
                      "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
                      "Creates a new Cloud SQL instance.",
                      "Updates the settings of a Cloud SQL instance.",
                      "Deletes a Cloud SQL instance.",
                      "Restarts the Cloud SQL instance.",
                      "",
                      "",
                      "Performs instance backup.",
                      "Deletes an instance backup.",
                      "Restores an instance backup.",
                      "Injects a privileged user in mysql for MOB instances.",
                      "Clones a Cloud SQL instance.",
                      "Stops replication on a Cloud SQL read replica instance.",
                      "Starts replication on a Cloud SQL read replica instance.",
                      "Promotes a Cloud SQL replica instance.",
                      "Creates a Cloud SQL replica instance.",
                      "Creates a new user in a Cloud SQL instance.",
                      "Deletes a user from a Cloud SQL instance.",
                      "Updates an existing user in a Cloud SQL instance.",
                      "Creates a database in the Cloud SQL instance.",
                      "Deletes a database in the Cloud SQL instance.",
                      "Updates a database in the Cloud SQL instance.",
                      "Performs failover of an HA-enabled Cloud SQL failover replica.",
                      "Deletes the backup taken by a backup run.",
                      "",
                      "Truncates a general or slow log table in MySQL.",
                      "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
                      "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
                      "This field is deprecated, and will be removed in future version of API.",
                      "",
                      "Creates clone instance.",
                      "Reschedule maintenance to another time.",
                      "Starts external sync of a Cloud SQL EM replica to an external master."
                    ]
                  },
                  "targetProject": {
                    "type": "string",
                    "description": "The project ID of the target instance related to this operation."
                  }
                },
                "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource."
              },
              "description": "List of operation resources."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results."
            }
          },
          "description": "Database instance list operations response."
        }
      ]
  projects.instances.rescheduleMaintenance:
    description: |-
      Reschedules the maintenance on the given instance.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/projects.instances/rescheduleMaintenance
    example:
      inputs: [
        {
          "id": "SqlInstancesRescheduleMaintenanceRequestBody",
          "type": "object",
          "properties": {
            "reschedule": {
              "id": "Reschedule",
              "type": "object",
              "properties": {
                "scheduleTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "Optional. Timestamp when the maintenance shall be rescheduled to if reschedule_type=SPECIFIC_TIME, in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
                },
                "rescheduleType": {
                  "enum": [
                    "RESCHEDULE_TYPE_UNSPECIFIED",
                    "IMMEDIATE",
                    "NEXT_AVAILABLE_WINDOW",
                    "SPECIFIC_TIME"
                  ],
                  "type": "string",
                  "description": "Required. The type of the reschedule.",
                  "enumDescriptions": [
                    "",
                    "If the user wants to schedule the maintenance to happen now.",
                    "If the user wants to use the existing maintenance policy to find the next available window.",
                    "If the user wants to reschedule the maintenance to a specific time."
                  ]
                }
              },
              "description": "Required. The type of the reschedule the user wants."
            }
          },
          "description": "Reschedule options for maintenance windows."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#operation*."
            },
            "name": {
              "type": "string",
              "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
            },
            "user": {
              "type": "string",
              "description": "The email address of the user who initiated this operation."
            },
            "error": {
              "id": "OperationErrors",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#operationErrors*."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "OperationError",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Identifies the specific error that occurred."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#operationError*."
                      },
                      "message": {
                        "type": "string",
                        "description": "Additional information about the error encountered."
                      }
                    },
                    "description": "Database instance operation error."
                  },
                  "description": "The list of errors encountered while processing this operation."
                }
              },
              "description": "If errors occurred during processing of this operation, this field will be populated."
            },
            "status": {
              "enum": [
                "SQL_OPERATION_STATUS_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
              "enumDescriptions": [
                "The state of the operation is unknown.",
                "The operation has been queued, but has not started yet.",
                "The operation is running.",
                "The operation completed."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "targetId": {
              "type": "string",
              "description": "Name of the database instance related to this operation."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "insertTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "targetLink": {
              "type": "string"
            },
            "exportContext": {
              "id": "ExportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs: //bucketName/fileName*. If the file already exists, the requests // succeeds, but the operation fails. If *fileType* is // *SQL* and the filename ends with .gz, the contents are // compressed."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#exportContext*."
                },
                "offload": {
                  "type": "boolean",
                  "description": "Option for export offload."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "databases": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
                },
                "csvExportOptions": {
                  "type": "object",
                  "properties": {
                    "selectQuery": {
                      "type": "string",
                      "description": "The select query used to extract the data."
                    }
                  },
                  "description": "Options for exporting data as CSV."
                },
                "sqlExportOptions": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
                    },
                    "schemaOnly": {
                      "type": "boolean",
                      "description": "Export only schemas."
                    },
                    "mysqlExportOptions": {
                      "type": "object",
                      "properties": {
                        "masterData": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored."
                        }
                      },
                      "description": "Options for exporting from MySQL."
                    }
                  },
                  "description": "Options for exporting data as SQL statements."
                }
              },
              "description": "The context for export operation, if applicable."
            },
            "importContext": {
              "id": "ImportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "Path to the import file in Cloud Storage, in the form *gs: //bucketName/fileName*. Compressed gzip files (.gz) are supported // when *fileType* is *SQL*. The instance must have // write permissions to the bucket and read access to the file."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#importContext*."
                },
                "database": {
                  "type": "string",
                  "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "importUser": {
                  "type": "string",
                  "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
                },
                "bakImportOptions": {
                  "type": "object",
                  "properties": {
                    "encryptionOptions": {
                      "type": "object",
                      "properties": {
                        "pvkPath": {
                          "type": "string",
                          "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "certPath": {
                          "type": "string",
                          "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "pvkPassword": {
                          "type": "string",
                          "description": "Password that encrypts the private key"
                        }
                      }
                    }
                  },
                  "description": "Import parameters specific to SQL Server .BAK files"
                },
                "csvImportOptions": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "description": "The table to which CSV data is imported."
                    },
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
                    }
                  },
                  "description": "Options for importing data as CSV."
                }
              },
              "description": "The context for import operation, if applicable."
            },
            "operationType": {
              "enum": [
                "SQL_OPERATION_TYPE_UNSPECIFIED",
                "IMPORT",
                "EXPORT",
                "CREATE",
                "UPDATE",
                "DELETE",
                "RESTART",
                "BACKUP",
                "SNAPSHOT",
                "BACKUP_VOLUME",
                "DELETE_VOLUME",
                "RESTORE_VOLUME",
                "INJECT_USER",
                "CLONE",
                "STOP_REPLICA",
                "START_REPLICA",
                "PROMOTE_REPLICA",
                "CREATE_REPLICA",
                "CREATE_USER",
                "DELETE_USER",
                "UPDATE_USER",
                "CREATE_DATABASE",
                "DELETE_DATABASE",
                "UPDATE_DATABASE",
                "FAILOVER",
                "DELETE_BACKUP",
                "RECREATE_REPLICA",
                "TRUNCATE_LOG",
                "DEMOTE_MASTER",
                "MAINTENANCE",
                "ENABLE_PRIVATE_IP",
                "DEFER_MAINTENANCE",
                "CREATE_CLONE",
                "RESCHEDULE_MAINTENANCE",
                "START_EXTERNAL_SYNC"
              ],
              "type": "string",
              "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*",
              "enumDescriptions": [
                "Unknown operation type.",
                "Imports data into a Cloud SQL instance.",
                "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
                "Creates a new Cloud SQL instance.",
                "Updates the settings of a Cloud SQL instance.",
                "Deletes a Cloud SQL instance.",
                "Restarts the Cloud SQL instance.",
                "",
                "",
                "Performs instance backup.",
                "Deletes an instance backup.",
                "Restores an instance backup.",
                "Injects a privileged user in mysql for MOB instances.",
                "Clones a Cloud SQL instance.",
                "Stops replication on a Cloud SQL read replica instance.",
                "Starts replication on a Cloud SQL read replica instance.",
                "Promotes a Cloud SQL replica instance.",
                "Creates a Cloud SQL replica instance.",
                "Creates a new user in a Cloud SQL instance.",
                "Deletes a user from a Cloud SQL instance.",
                "Updates an existing user in a Cloud SQL instance.",
                "Creates a database in the Cloud SQL instance.",
                "Deletes a database in the Cloud SQL instance.",
                "Updates a database in the Cloud SQL instance.",
                "Performs failover of an HA-enabled Cloud SQL failover replica.",
                "Deletes the backup taken by a backup run.",
                "",
                "Truncates a general or slow log table in MySQL.",
                "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
                "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
                "This field is deprecated, and will be removed in future version of API.",
                "",
                "Creates clone instance.",
                "Reschedule maintenance to another time.",
                "Starts external sync of a Cloud SQL EM replica to an external master."
              ]
            },
            "targetProject": {
              "type": "string",
              "description": "The project ID of the target instance related to this operation."
            }
          },
          "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource."
        }
      ]
  projects.instances.startExternalSync:
    description: |-
      Start External master migration.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/projects.instances/startExternalSync
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#operation*."
            },
            "name": {
              "type": "string",
              "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
            },
            "user": {
              "type": "string",
              "description": "The email address of the user who initiated this operation."
            },
            "error": {
              "id": "OperationErrors",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#operationErrors*."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "OperationError",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Identifies the specific error that occurred."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#operationError*."
                      },
                      "message": {
                        "type": "string",
                        "description": "Additional information about the error encountered."
                      }
                    },
                    "description": "Database instance operation error."
                  },
                  "description": "The list of errors encountered while processing this operation."
                }
              },
              "description": "If errors occurred during processing of this operation, this field will be populated."
            },
            "status": {
              "enum": [
                "SQL_OPERATION_STATUS_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
              "enumDescriptions": [
                "The state of the operation is unknown.",
                "The operation has been queued, but has not started yet.",
                "The operation is running.",
                "The operation completed."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "targetId": {
              "type": "string",
              "description": "Name of the database instance related to this operation."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "insertTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "targetLink": {
              "type": "string"
            },
            "exportContext": {
              "id": "ExportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs: //bucketName/fileName*. If the file already exists, the requests // succeeds, but the operation fails. If *fileType* is // *SQL* and the filename ends with .gz, the contents are // compressed."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#exportContext*."
                },
                "offload": {
                  "type": "boolean",
                  "description": "Option for export offload."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "databases": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
                },
                "csvExportOptions": {
                  "type": "object",
                  "properties": {
                    "selectQuery": {
                      "type": "string",
                      "description": "The select query used to extract the data."
                    }
                  },
                  "description": "Options for exporting data as CSV."
                },
                "sqlExportOptions": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
                    },
                    "schemaOnly": {
                      "type": "boolean",
                      "description": "Export only schemas."
                    },
                    "mysqlExportOptions": {
                      "type": "object",
                      "properties": {
                        "masterData": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored."
                        }
                      },
                      "description": "Options for exporting from MySQL."
                    }
                  },
                  "description": "Options for exporting data as SQL statements."
                }
              },
              "description": "The context for export operation, if applicable."
            },
            "importContext": {
              "id": "ImportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "Path to the import file in Cloud Storage, in the form *gs: //bucketName/fileName*. Compressed gzip files (.gz) are supported // when *fileType* is *SQL*. The instance must have // write permissions to the bucket and read access to the file."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#importContext*."
                },
                "database": {
                  "type": "string",
                  "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "importUser": {
                  "type": "string",
                  "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
                },
                "bakImportOptions": {
                  "type": "object",
                  "properties": {
                    "encryptionOptions": {
                      "type": "object",
                      "properties": {
                        "pvkPath": {
                          "type": "string",
                          "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "certPath": {
                          "type": "string",
                          "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "pvkPassword": {
                          "type": "string",
                          "description": "Password that encrypts the private key"
                        }
                      }
                    }
                  },
                  "description": "Import parameters specific to SQL Server .BAK files"
                },
                "csvImportOptions": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "description": "The table to which CSV data is imported."
                    },
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
                    }
                  },
                  "description": "Options for importing data as CSV."
                }
              },
              "description": "The context for import operation, if applicable."
            },
            "operationType": {
              "enum": [
                "SQL_OPERATION_TYPE_UNSPECIFIED",
                "IMPORT",
                "EXPORT",
                "CREATE",
                "UPDATE",
                "DELETE",
                "RESTART",
                "BACKUP",
                "SNAPSHOT",
                "BACKUP_VOLUME",
                "DELETE_VOLUME",
                "RESTORE_VOLUME",
                "INJECT_USER",
                "CLONE",
                "STOP_REPLICA",
                "START_REPLICA",
                "PROMOTE_REPLICA",
                "CREATE_REPLICA",
                "CREATE_USER",
                "DELETE_USER",
                "UPDATE_USER",
                "CREATE_DATABASE",
                "DELETE_DATABASE",
                "UPDATE_DATABASE",
                "FAILOVER",
                "DELETE_BACKUP",
                "RECREATE_REPLICA",
                "TRUNCATE_LOG",
                "DEMOTE_MASTER",
                "MAINTENANCE",
                "ENABLE_PRIVATE_IP",
                "DEFER_MAINTENANCE",
                "CREATE_CLONE",
                "RESCHEDULE_MAINTENANCE",
                "START_EXTERNAL_SYNC"
              ],
              "type": "string",
              "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*",
              "enumDescriptions": [
                "Unknown operation type.",
                "Imports data into a Cloud SQL instance.",
                "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
                "Creates a new Cloud SQL instance.",
                "Updates the settings of a Cloud SQL instance.",
                "Deletes a Cloud SQL instance.",
                "Restarts the Cloud SQL instance.",
                "",
                "",
                "Performs instance backup.",
                "Deletes an instance backup.",
                "Restores an instance backup.",
                "Injects a privileged user in mysql for MOB instances.",
                "Clones a Cloud SQL instance.",
                "Stops replication on a Cloud SQL read replica instance.",
                "Starts replication on a Cloud SQL read replica instance.",
                "Promotes a Cloud SQL replica instance.",
                "Creates a Cloud SQL replica instance.",
                "Creates a new user in a Cloud SQL instance.",
                "Deletes a user from a Cloud SQL instance.",
                "Updates an existing user in a Cloud SQL instance.",
                "Creates a database in the Cloud SQL instance.",
                "Deletes a database in the Cloud SQL instance.",
                "Updates a database in the Cloud SQL instance.",
                "Performs failover of an HA-enabled Cloud SQL failover replica.",
                "Deletes the backup taken by a backup run.",
                "",
                "Truncates a general or slow log table in MySQL.",
                "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
                "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
                "This field is deprecated, and will be removed in future version of API.",
                "",
                "Creates clone instance.",
                "Reschedule maintenance to another time.",
                "Starts external sync of a Cloud SQL EM replica to an external master."
              ]
            },
            "targetProject": {
              "type": "string",
              "description": "The project ID of the target instance related to this operation."
            }
          },
          "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource."
        }
      ]
  projects.instances.verifyExternalSyncSettings:
    description: |-
      Verify External master external sync settings.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/projects.instances/verifyExternalSyncSettings
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "SqlInstancesVerifyExternalSyncSettingsResponse",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#migrationSettingErrorList*."
            },
            "errors": {
              "type": "array",
              "items": {
                "id": "SqlExternalSyncSettingError",
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "description": "This is always *sql#migrationSettingError*."
                  },
                  "type": {
                    "enum": [
                      "SQL_EXTERNAL_SYNC_SETTING_ERROR_TYPE_UNSPECIFIED",
                      "CONNECTION_FAILURE",
                      "BINLOG_NOT_ENABLED",
                      "INCOMPATIBLE_DATABASE_VERSION",
                      "REPLICA_ALREADY_SETUP",
                      "INSUFFICIENT_PRIVILEGE",
                      "UNSUPPORTED_MIGRATION_TYPE",
                      "NO_PGLOGICAL_INSTALLED",
                      "PGLOGICAL_NODE_ALREADY_EXISTS",
                      "INVALID_WAL_LEVEL",
                      "INVALID_SHARED_PRELOAD_LIBRARY",
                      "INSUFFICIENT_MAX_REPLICATION_SLOTS",
                      "INSUFFICIENT_MAX_WAL_SENDERS",
                      "INSUFFICIENT_MAX_WORKER_PROCESSES",
                      "UNSUPPORTED_EXTENSIONS",
                      "INVALID_RDS_LOGICAL_REPLICATION",
                      "INVALID_LOGGING_SETUP",
                      "INVALID_DB_PARAM",
                      "UNSUPPORTED_GTID_MODE"
                    ],
                    "type": "string",
                    "description": "Identifies the specific error that occurred.",
                    "enumDescriptions": [
                      "",
                      "",
                      "",
                      "",
                      "",
                      "",
                      "Unsupported migration type.",
                      "No pglogical extension installed on databases, applicable for postgres.",
                      "pglogical node already exists on databases, applicable for postgres.",
                      "The value of parameter wal_level is not set to logical.",
                      "The value of parameter shared_preload_libraries does not include pglogical.",
                      "The value of parameter max_replication_slots is not sufficient.",
                      "The value of parameter max_wal_senders is not sufficient.",
                      "The value of parameter max_worker_processes is not sufficient.",
                      "Extensions installed are either not supported or having unsupported versions",
                      "The value of parameter rds.logical_replication is not set to 1.",
                      "The master logging setup doesn't allow EM sync.",
                      "The master database parameter setup doesn't allow EM sync.",
                      "The gtid_mode is not supported, applicable for MySQL."
                    ]
                  },
                  "detail": {
                    "type": "string",
                    "description": "Additional information about the error encountered."
                  }
                },
                "description": "External master migration setting error."
              },
              "description": "List of migration violations."
            }
          },
          "description": "Instance verify external sync settings response."
        }
      ]
  sslCerts.createEphemeral:
    description: |-
      Generates a short-lived X509 certificate containing the provided public key and signed by a private key specific to the target instance. Users may use the certificate to authenticate as themselves when connecting to the database.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/sslCerts/createEphemeral
    example:
      inputs: [
        {
          "id": "SslCertsCreateEphemeralRequest",
          "type": "object",
          "properties": {
            "public_key": {
              "type": "string",
              "description": "PEM encoded public key to include in the signed certificate."
            }
          },
          "description": "SslCerts create ephemeral certificate request."
        }
      ]
      outputs: [
        {
          "id": "SslCert",
          "type": "object",
          "properties": {
            "cert": {
              "type": "string",
              "description": "PEM representation."
            },
            "kind": {
              "type": "string",
              "description": "This is always *sql#sslCert*."
            },
            "instance": {
              "type": "string",
              "description": "Name of the database instance."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "commonName": {
              "type": "string",
              "description": "User supplied name. Constrained to [a-zA-Z.-_ ]+."
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time when the certificate was created in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*"
            },
            "expirationTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time when the certificate expires in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "sha1Fingerprint": {
              "type": "string",
              "description": "Sha1 Fingerprint."
            },
            "certSerialNumber": {
              "type": "string",
              "description": "Serial number, as extracted from the certificate."
            }
          },
          "description": "SslCerts Resource"
        }
      ]
  sslCerts.delete:
    description: |-
      Deletes the SSL certificate. For First Generation instances, the certificate remains valid until the instance is restarted.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/sslCerts/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#operation*."
            },
            "name": {
              "type": "string",
              "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
            },
            "user": {
              "type": "string",
              "description": "The email address of the user who initiated this operation."
            },
            "error": {
              "id": "OperationErrors",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#operationErrors*."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "OperationError",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Identifies the specific error that occurred."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#operationError*."
                      },
                      "message": {
                        "type": "string",
                        "description": "Additional information about the error encountered."
                      }
                    },
                    "description": "Database instance operation error."
                  },
                  "description": "The list of errors encountered while processing this operation."
                }
              },
              "description": "If errors occurred during processing of this operation, this field will be populated."
            },
            "status": {
              "enum": [
                "SQL_OPERATION_STATUS_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
              "enumDescriptions": [
                "The state of the operation is unknown.",
                "The operation has been queued, but has not started yet.",
                "The operation is running.",
                "The operation completed."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "targetId": {
              "type": "string",
              "description": "Name of the database instance related to this operation."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "insertTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "targetLink": {
              "type": "string"
            },
            "exportContext": {
              "id": "ExportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs: //bucketName/fileName*. If the file already exists, the requests // succeeds, but the operation fails. If *fileType* is // *SQL* and the filename ends with .gz, the contents are // compressed."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#exportContext*."
                },
                "offload": {
                  "type": "boolean",
                  "description": "Option for export offload."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "databases": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
                },
                "csvExportOptions": {
                  "type": "object",
                  "properties": {
                    "selectQuery": {
                      "type": "string",
                      "description": "The select query used to extract the data."
                    }
                  },
                  "description": "Options for exporting data as CSV."
                },
                "sqlExportOptions": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
                    },
                    "schemaOnly": {
                      "type": "boolean",
                      "description": "Export only schemas."
                    },
                    "mysqlExportOptions": {
                      "type": "object",
                      "properties": {
                        "masterData": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored."
                        }
                      },
                      "description": "Options for exporting from MySQL."
                    }
                  },
                  "description": "Options for exporting data as SQL statements."
                }
              },
              "description": "The context for export operation, if applicable."
            },
            "importContext": {
              "id": "ImportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "Path to the import file in Cloud Storage, in the form *gs: //bucketName/fileName*. Compressed gzip files (.gz) are supported // when *fileType* is *SQL*. The instance must have // write permissions to the bucket and read access to the file."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#importContext*."
                },
                "database": {
                  "type": "string",
                  "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "importUser": {
                  "type": "string",
                  "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
                },
                "bakImportOptions": {
                  "type": "object",
                  "properties": {
                    "encryptionOptions": {
                      "type": "object",
                      "properties": {
                        "pvkPath": {
                          "type": "string",
                          "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "certPath": {
                          "type": "string",
                          "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "pvkPassword": {
                          "type": "string",
                          "description": "Password that encrypts the private key"
                        }
                      }
                    }
                  },
                  "description": "Import parameters specific to SQL Server .BAK files"
                },
                "csvImportOptions": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "description": "The table to which CSV data is imported."
                    },
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
                    }
                  },
                  "description": "Options for importing data as CSV."
                }
              },
              "description": "The context for import operation, if applicable."
            },
            "operationType": {
              "enum": [
                "SQL_OPERATION_TYPE_UNSPECIFIED",
                "IMPORT",
                "EXPORT",
                "CREATE",
                "UPDATE",
                "DELETE",
                "RESTART",
                "BACKUP",
                "SNAPSHOT",
                "BACKUP_VOLUME",
                "DELETE_VOLUME",
                "RESTORE_VOLUME",
                "INJECT_USER",
                "CLONE",
                "STOP_REPLICA",
                "START_REPLICA",
                "PROMOTE_REPLICA",
                "CREATE_REPLICA",
                "CREATE_USER",
                "DELETE_USER",
                "UPDATE_USER",
                "CREATE_DATABASE",
                "DELETE_DATABASE",
                "UPDATE_DATABASE",
                "FAILOVER",
                "DELETE_BACKUP",
                "RECREATE_REPLICA",
                "TRUNCATE_LOG",
                "DEMOTE_MASTER",
                "MAINTENANCE",
                "ENABLE_PRIVATE_IP",
                "DEFER_MAINTENANCE",
                "CREATE_CLONE",
                "RESCHEDULE_MAINTENANCE",
                "START_EXTERNAL_SYNC"
              ],
              "type": "string",
              "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*",
              "enumDescriptions": [
                "Unknown operation type.",
                "Imports data into a Cloud SQL instance.",
                "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
                "Creates a new Cloud SQL instance.",
                "Updates the settings of a Cloud SQL instance.",
                "Deletes a Cloud SQL instance.",
                "Restarts the Cloud SQL instance.",
                "",
                "",
                "Performs instance backup.",
                "Deletes an instance backup.",
                "Restores an instance backup.",
                "Injects a privileged user in mysql for MOB instances.",
                "Clones a Cloud SQL instance.",
                "Stops replication on a Cloud SQL read replica instance.",
                "Starts replication on a Cloud SQL read replica instance.",
                "Promotes a Cloud SQL replica instance.",
                "Creates a Cloud SQL replica instance.",
                "Creates a new user in a Cloud SQL instance.",
                "Deletes a user from a Cloud SQL instance.",
                "Updates an existing user in a Cloud SQL instance.",
                "Creates a database in the Cloud SQL instance.",
                "Deletes a database in the Cloud SQL instance.",
                "Updates a database in the Cloud SQL instance.",
                "Performs failover of an HA-enabled Cloud SQL failover replica.",
                "Deletes the backup taken by a backup run.",
                "",
                "Truncates a general or slow log table in MySQL.",
                "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
                "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
                "This field is deprecated, and will be removed in future version of API.",
                "",
                "Creates clone instance.",
                "Reschedule maintenance to another time.",
                "Starts external sync of a Cloud SQL EM replica to an external master."
              ]
            },
            "targetProject": {
              "type": "string",
              "description": "The project ID of the target instance related to this operation."
            }
          },
          "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource."
        }
      ]
  sslCerts.get:
    description: |-
      Retrieves a particular SSL certificate. Does not include the private key (required for usage). The private key must be saved from the response to initial creation.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/sslCerts/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "SslCert",
          "type": "object",
          "properties": {
            "cert": {
              "type": "string",
              "description": "PEM representation."
            },
            "kind": {
              "type": "string",
              "description": "This is always *sql#sslCert*."
            },
            "instance": {
              "type": "string",
              "description": "Name of the database instance."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "commonName": {
              "type": "string",
              "description": "User supplied name. Constrained to [a-zA-Z.-_ ]+."
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time when the certificate was created in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*"
            },
            "expirationTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time when the certificate expires in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "sha1Fingerprint": {
              "type": "string",
              "description": "Sha1 Fingerprint."
            },
            "certSerialNumber": {
              "type": "string",
              "description": "Serial number, as extracted from the certificate."
            }
          },
          "description": "SslCerts Resource"
        }
      ]
  sslCerts.insert:
    description: |-
      Creates an SSL certificate and returns it along with the private key and server certificate authority. The new certificate will not be usable until the instance is restarted.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/sslCerts/insert
    example:
      inputs: [
        {
          "id": "SslCertsInsertRequest",
          "type": "object",
          "properties": {
            "commonName": {
              "type": "string",
              "description": "User supplied name. Must be a distinct name from the other certificates for this instance."
            }
          },
          "description": "SslCerts insert request."
        }
      ]
      outputs: [
        {
          "id": "SslCertsInsertResponse",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#sslCertsInsert*."
            },
            "operation": {
              "id": "Operation",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#operation*."
                },
                "name": {
                  "type": "string",
                  "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
                },
                "user": {
                  "type": "string",
                  "description": "The email address of the user who initiated this operation."
                },
                "error": {
                  "id": "OperationErrors",
                  "type": "object",
                  "properties": {
                    "kind": {
                      "type": "string",
                      "description": "This is always *sql#operationErrors*."
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "id": "OperationError",
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Identifies the specific error that occurred."
                          },
                          "kind": {
                            "type": "string",
                            "description": "This is always *sql#operationError*."
                          },
                          "message": {
                            "type": "string",
                            "description": "Additional information about the error encountered."
                          }
                        },
                        "description": "Database instance operation error."
                      },
                      "description": "The list of errors encountered while processing this operation."
                    }
                  },
                  "description": "If errors occurred during processing of this operation, this field will be populated."
                },
                "status": {
                  "enum": [
                    "SQL_OPERATION_STATUS_UNSPECIFIED",
                    "PENDING",
                    "RUNNING",
                    "DONE"
                  ],
                  "type": "string",
                  "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
                  "enumDescriptions": [
                    "The state of the operation is unknown.",
                    "The operation has been queued, but has not started yet.",
                    "The operation is running.",
                    "The operation completed."
                  ]
                },
                "endTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
                },
                "selfLink": {
                  "type": "string",
                  "description": "The URI of this resource."
                },
                "targetId": {
                  "type": "string",
                  "description": "Name of the database instance related to this operation."
                },
                "startTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
                },
                "insertTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
                },
                "targetLink": {
                  "type": "string"
                },
                "exportContext": {
                  "id": "ExportContext",
                  "type": "object",
                  "properties": {
                    "uri": {
                      "type": "string",
                      "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs: //bucketName/fileName*. If the file already exists, the requests // succeeds, but the operation fails. If *fileType* is // *SQL* and the filename ends with .gz, the contents are // compressed."
                    },
                    "kind": {
                      "type": "string",
                      "description": "This is always *sql#exportContext*."
                    },
                    "offload": {
                      "type": "boolean",
                      "description": "Option for export offload."
                    },
                    "fileType": {
                      "enum": [
                        "SQL_FILE_TYPE_UNSPECIFIED",
                        "SQL",
                        "CSV",
                        "BAK"
                      ],
                      "type": "string",
                      "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                      "enumDescriptions": [
                        "Unknown file type.",
                        "File containing SQL statements.",
                        "File in CSV format.",
                        ""
                      ]
                    },
                    "databases": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
                    },
                    "csvExportOptions": {
                      "type": "object",
                      "properties": {
                        "selectQuery": {
                          "type": "string",
                          "description": "The select query used to extract the data."
                        }
                      },
                      "description": "Options for exporting data as CSV."
                    },
                    "sqlExportOptions": {
                      "type": "object",
                      "properties": {
                        "tables": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
                        },
                        "schemaOnly": {
                          "type": "boolean",
                          "description": "Export only schemas."
                        },
                        "mysqlExportOptions": {
                          "type": "object",
                          "properties": {
                            "masterData": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored."
                            }
                          },
                          "description": "Options for exporting from MySQL."
                        }
                      },
                      "description": "Options for exporting data as SQL statements."
                    }
                  },
                  "description": "The context for export operation, if applicable."
                },
                "importContext": {
                  "id": "ImportContext",
                  "type": "object",
                  "properties": {
                    "uri": {
                      "type": "string",
                      "description": "Path to the import file in Cloud Storage, in the form *gs: //bucketName/fileName*. Compressed gzip files (.gz) are supported // when *fileType* is *SQL*. The instance must have // write permissions to the bucket and read access to the file."
                    },
                    "kind": {
                      "type": "string",
                      "description": "This is always *sql#importContext*."
                    },
                    "database": {
                      "type": "string",
                      "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
                    },
                    "fileType": {
                      "enum": [
                        "SQL_FILE_TYPE_UNSPECIFIED",
                        "SQL",
                        "CSV",
                        "BAK"
                      ],
                      "type": "string",
                      "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                      "enumDescriptions": [
                        "Unknown file type.",
                        "File containing SQL statements.",
                        "File in CSV format.",
                        ""
                      ]
                    },
                    "importUser": {
                      "type": "string",
                      "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
                    },
                    "bakImportOptions": {
                      "type": "object",
                      "properties": {
                        "encryptionOptions": {
                          "type": "object",
                          "properties": {
                            "pvkPath": {
                              "type": "string",
                              "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                            },
                            "certPath": {
                              "type": "string",
                              "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                            },
                            "pvkPassword": {
                              "type": "string",
                              "description": "Password that encrypts the private key"
                            }
                          }
                        }
                      },
                      "description": "Import parameters specific to SQL Server .BAK files"
                    },
                    "csvImportOptions": {
                      "type": "object",
                      "properties": {
                        "table": {
                          "type": "string",
                          "description": "The table to which CSV data is imported."
                        },
                        "columns": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
                        }
                      },
                      "description": "Options for importing data as CSV."
                    }
                  },
                  "description": "The context for import operation, if applicable."
                },
                "operationType": {
                  "enum": [
                    "SQL_OPERATION_TYPE_UNSPECIFIED",
                    "IMPORT",
                    "EXPORT",
                    "CREATE",
                    "UPDATE",
                    "DELETE",
                    "RESTART",
                    "BACKUP",
                    "SNAPSHOT",
                    "BACKUP_VOLUME",
                    "DELETE_VOLUME",
                    "RESTORE_VOLUME",
                    "INJECT_USER",
                    "CLONE",
                    "STOP_REPLICA",
                    "START_REPLICA",
                    "PROMOTE_REPLICA",
                    "CREATE_REPLICA",
                    "CREATE_USER",
                    "DELETE_USER",
                    "UPDATE_USER",
                    "CREATE_DATABASE",
                    "DELETE_DATABASE",
                    "UPDATE_DATABASE",
                    "FAILOVER",
                    "DELETE_BACKUP",
                    "RECREATE_REPLICA",
                    "TRUNCATE_LOG",
                    "DEMOTE_MASTER",
                    "MAINTENANCE",
                    "ENABLE_PRIVATE_IP",
                    "DEFER_MAINTENANCE",
                    "CREATE_CLONE",
                    "RESCHEDULE_MAINTENANCE",
                    "START_EXTERNAL_SYNC"
                  ],
                  "type": "string",
                  "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*",
                  "enumDescriptions": [
                    "Unknown operation type.",
                    "Imports data into a Cloud SQL instance.",
                    "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
                    "Creates a new Cloud SQL instance.",
                    "Updates the settings of a Cloud SQL instance.",
                    "Deletes a Cloud SQL instance.",
                    "Restarts the Cloud SQL instance.",
                    "",
                    "",
                    "Performs instance backup.",
                    "Deletes an instance backup.",
                    "Restores an instance backup.",
                    "Injects a privileged user in mysql for MOB instances.",
                    "Clones a Cloud SQL instance.",
                    "Stops replication on a Cloud SQL read replica instance.",
                    "Starts replication on a Cloud SQL read replica instance.",
                    "Promotes a Cloud SQL replica instance.",
                    "Creates a Cloud SQL replica instance.",
                    "Creates a new user in a Cloud SQL instance.",
                    "Deletes a user from a Cloud SQL instance.",
                    "Updates an existing user in a Cloud SQL instance.",
                    "Creates a database in the Cloud SQL instance.",
                    "Deletes a database in the Cloud SQL instance.",
                    "Updates a database in the Cloud SQL instance.",
                    "Performs failover of an HA-enabled Cloud SQL failover replica.",
                    "Deletes the backup taken by a backup run.",
                    "",
                    "Truncates a general or slow log table in MySQL.",
                    "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
                    "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
                    "This field is deprecated, and will be removed in future version of API.",
                    "",
                    "Creates clone instance.",
                    "Reschedule maintenance to another time.",
                    "Starts external sync of a Cloud SQL EM replica to an external master."
                  ]
                },
                "targetProject": {
                  "type": "string",
                  "description": "The project ID of the target instance related to this operation."
                }
              },
              "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource."
            },
            "clientCert": {
              "id": "SslCertDetail",
              "type": "object",
              "properties": {
                "certInfo": {
                  "id": "SslCert",
                  "type": "object",
                  "properties": {
                    "cert": {
                      "type": "string",
                      "description": "PEM representation."
                    },
                    "kind": {
                      "type": "string",
                      "description": "This is always *sql#sslCert*."
                    },
                    "instance": {
                      "type": "string",
                      "description": "Name of the database instance."
                    },
                    "selfLink": {
                      "type": "string",
                      "description": "The URI of this resource."
                    },
                    "commonName": {
                      "type": "string",
                      "description": "User supplied name. Constrained to [a-zA-Z.-_ ]+."
                    },
                    "createTime": {
                      "type": "string",
                      "format": "google-datetime",
                      "description": "The time when the certificate was created in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*"
                    },
                    "expirationTime": {
                      "type": "string",
                      "format": "google-datetime",
                      "description": "The time when the certificate expires in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
                    },
                    "sha1Fingerprint": {
                      "type": "string",
                      "description": "Sha1 Fingerprint."
                    },
                    "certSerialNumber": {
                      "type": "string",
                      "description": "Serial number, as extracted from the certificate."
                    }
                  },
                  "description": "SslCerts Resource"
                },
                "certPrivateKey": {
                  "type": "string",
                  "description": "The private key for the client cert, in pem format. Keep private in order to protect your security."
                }
              },
              "description": "The new client certificate and private key."
            },
            "serverCaCert": {
              "id": "SslCert",
              "type": "object",
              "properties": {
                "cert": {
                  "type": "string",
                  "description": "PEM representation."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#sslCert*."
                },
                "instance": {
                  "type": "string",
                  "description": "Name of the database instance."
                },
                "selfLink": {
                  "type": "string",
                  "description": "The URI of this resource."
                },
                "commonName": {
                  "type": "string",
                  "description": "User supplied name. Constrained to [a-zA-Z.-_ ]+."
                },
                "createTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "The time when the certificate was created in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*"
                },
                "expirationTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "The time when the certificate expires in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
                },
                "sha1Fingerprint": {
                  "type": "string",
                  "description": "Sha1 Fingerprint."
                },
                "certSerialNumber": {
                  "type": "string",
                  "description": "Serial number, as extracted from the certificate."
                }
              },
              "description": "SslCerts Resource"
            }
          },
          "description": "SslCert insert response."
        }
      ]
  sslCerts.list:
    description: |-
      Lists all of the current SSL certificates for the instance.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/sslCerts/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "SslCertsListResponse",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#sslCertsList*."
            },
            "items": {
              "type": "array",
              "items": {
                "id": "SslCert",
                "type": "object",
                "properties": {
                  "cert": {
                    "type": "string",
                    "description": "PEM representation."
                  },
                  "kind": {
                    "type": "string",
                    "description": "This is always *sql#sslCert*."
                  },
                  "instance": {
                    "type": "string",
                    "description": "Name of the database instance."
                  },
                  "selfLink": {
                    "type": "string",
                    "description": "The URI of this resource."
                  },
                  "commonName": {
                    "type": "string",
                    "description": "User supplied name. Constrained to [a-zA-Z.-_ ]+."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The time when the certificate was created in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*"
                  },
                  "expirationTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The time when the certificate expires in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
                  },
                  "sha1Fingerprint": {
                    "type": "string",
                    "description": "Sha1 Fingerprint."
                  },
                  "certSerialNumber": {
                    "type": "string",
                    "description": "Serial number, as extracted from the certificate."
                  }
                },
                "description": "SslCerts Resource"
              },
              "description": "List of client certificates for the instance."
            }
          },
          "description": "SslCerts list response."
        }
      ]
  tiers.list:
    description: |-
      Lists all available machine types (tiers) for Cloud SQL, for example, db-n1-standard-1. For related information, see Pricing.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/tiers/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "TiersListResponse",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#tiersList*."
            },
            "items": {
              "type": "array",
              "items": {
                "id": "Tier",
                "type": "object",
                "properties": {
                  "RAM": {
                    "type": "string",
                    "format": "int64",
                    "description": "The maximum RAM usage of this tier in bytes."
                  },
                  "kind": {
                    "type": "string",
                    "description": "This is always *sql#tier*."
                  },
                  "tier": {
                    "type": "string",
                    "description": "An identifier for the machine type, for example, db-n1-standard-1. For related information, see Pricing."
                  },
                  "region": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The applicable regions for this tier."
                  },
                  "DiskQuota": {
                    "type": "string",
                    "format": "int64",
                    "description": "The maximum disk size of this tier in bytes."
                  }
                },
                "description": "A Google Cloud SQL service tier resource."
              },
              "description": "List of tiers."
            }
          },
          "description": "Tiers list response."
        }
      ]
  users.delete:
    description: |-
      Deletes a user from a Cloud SQL instance.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/users/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#operation*."
            },
            "name": {
              "type": "string",
              "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
            },
            "user": {
              "type": "string",
              "description": "The email address of the user who initiated this operation."
            },
            "error": {
              "id": "OperationErrors",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#operationErrors*."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "OperationError",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Identifies the specific error that occurred."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#operationError*."
                      },
                      "message": {
                        "type": "string",
                        "description": "Additional information about the error encountered."
                      }
                    },
                    "description": "Database instance operation error."
                  },
                  "description": "The list of errors encountered while processing this operation."
                }
              },
              "description": "If errors occurred during processing of this operation, this field will be populated."
            },
            "status": {
              "enum": [
                "SQL_OPERATION_STATUS_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
              "enumDescriptions": [
                "The state of the operation is unknown.",
                "The operation has been queued, but has not started yet.",
                "The operation is running.",
                "The operation completed."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "targetId": {
              "type": "string",
              "description": "Name of the database instance related to this operation."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "insertTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "targetLink": {
              "type": "string"
            },
            "exportContext": {
              "id": "ExportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs: //bucketName/fileName*. If the file already exists, the requests // succeeds, but the operation fails. If *fileType* is // *SQL* and the filename ends with .gz, the contents are // compressed."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#exportContext*."
                },
                "offload": {
                  "type": "boolean",
                  "description": "Option for export offload."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "databases": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
                },
                "csvExportOptions": {
                  "type": "object",
                  "properties": {
                    "selectQuery": {
                      "type": "string",
                      "description": "The select query used to extract the data."
                    }
                  },
                  "description": "Options for exporting data as CSV."
                },
                "sqlExportOptions": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
                    },
                    "schemaOnly": {
                      "type": "boolean",
                      "description": "Export only schemas."
                    },
                    "mysqlExportOptions": {
                      "type": "object",
                      "properties": {
                        "masterData": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored."
                        }
                      },
                      "description": "Options for exporting from MySQL."
                    }
                  },
                  "description": "Options for exporting data as SQL statements."
                }
              },
              "description": "The context for export operation, if applicable."
            },
            "importContext": {
              "id": "ImportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "Path to the import file in Cloud Storage, in the form *gs: //bucketName/fileName*. Compressed gzip files (.gz) are supported // when *fileType* is *SQL*. The instance must have // write permissions to the bucket and read access to the file."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#importContext*."
                },
                "database": {
                  "type": "string",
                  "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "importUser": {
                  "type": "string",
                  "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
                },
                "bakImportOptions": {
                  "type": "object",
                  "properties": {
                    "encryptionOptions": {
                      "type": "object",
                      "properties": {
                        "pvkPath": {
                          "type": "string",
                          "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "certPath": {
                          "type": "string",
                          "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "pvkPassword": {
                          "type": "string",
                          "description": "Password that encrypts the private key"
                        }
                      }
                    }
                  },
                  "description": "Import parameters specific to SQL Server .BAK files"
                },
                "csvImportOptions": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "description": "The table to which CSV data is imported."
                    },
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
                    }
                  },
                  "description": "Options for importing data as CSV."
                }
              },
              "description": "The context for import operation, if applicable."
            },
            "operationType": {
              "enum": [
                "SQL_OPERATION_TYPE_UNSPECIFIED",
                "IMPORT",
                "EXPORT",
                "CREATE",
                "UPDATE",
                "DELETE",
                "RESTART",
                "BACKUP",
                "SNAPSHOT",
                "BACKUP_VOLUME",
                "DELETE_VOLUME",
                "RESTORE_VOLUME",
                "INJECT_USER",
                "CLONE",
                "STOP_REPLICA",
                "START_REPLICA",
                "PROMOTE_REPLICA",
                "CREATE_REPLICA",
                "CREATE_USER",
                "DELETE_USER",
                "UPDATE_USER",
                "CREATE_DATABASE",
                "DELETE_DATABASE",
                "UPDATE_DATABASE",
                "FAILOVER",
                "DELETE_BACKUP",
                "RECREATE_REPLICA",
                "TRUNCATE_LOG",
                "DEMOTE_MASTER",
                "MAINTENANCE",
                "ENABLE_PRIVATE_IP",
                "DEFER_MAINTENANCE",
                "CREATE_CLONE",
                "RESCHEDULE_MAINTENANCE",
                "START_EXTERNAL_SYNC"
              ],
              "type": "string",
              "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*",
              "enumDescriptions": [
                "Unknown operation type.",
                "Imports data into a Cloud SQL instance.",
                "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
                "Creates a new Cloud SQL instance.",
                "Updates the settings of a Cloud SQL instance.",
                "Deletes a Cloud SQL instance.",
                "Restarts the Cloud SQL instance.",
                "",
                "",
                "Performs instance backup.",
                "Deletes an instance backup.",
                "Restores an instance backup.",
                "Injects a privileged user in mysql for MOB instances.",
                "Clones a Cloud SQL instance.",
                "Stops replication on a Cloud SQL read replica instance.",
                "Starts replication on a Cloud SQL read replica instance.",
                "Promotes a Cloud SQL replica instance.",
                "Creates a Cloud SQL replica instance.",
                "Creates a new user in a Cloud SQL instance.",
                "Deletes a user from a Cloud SQL instance.",
                "Updates an existing user in a Cloud SQL instance.",
                "Creates a database in the Cloud SQL instance.",
                "Deletes a database in the Cloud SQL instance.",
                "Updates a database in the Cloud SQL instance.",
                "Performs failover of an HA-enabled Cloud SQL failover replica.",
                "Deletes the backup taken by a backup run.",
                "",
                "Truncates a general or slow log table in MySQL.",
                "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
                "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
                "This field is deprecated, and will be removed in future version of API.",
                "",
                "Creates clone instance.",
                "Reschedule maintenance to another time.",
                "Starts external sync of a Cloud SQL EM replica to an external master."
              ]
            },
            "targetProject": {
              "type": "string",
              "description": "The project ID of the target instance related to this operation."
            }
          },
          "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource."
        }
      ]
  users.insert:
    description: |-
      Creates a new user in a Cloud SQL instance.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/users/insert
    example:
      inputs: [
        {
          "id": "User",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "This field is deprecated and will be removed from a future version of the API."
            },
            "host": {
              "type": "string",
              "description": "The host name from which the user can connect. For *insert* operations, host defaults to an empty string. For *update* operations, host is specified as part of the request URL. The host name cannot be updated after insertion."
            },
            "kind": {
              "type": "string",
              "description": "This is always *sql#user*."
            },
            "name": {
              "type": "string",
              "description": "The name of the user in the Cloud SQL instance. Can be omitted for *update* since it is already specified in the URL."
            },
            "type": {
              "enum": [
                "BUILT_IN",
                "CLOUD_IAM_USER",
                "CLOUD_IAM_SERVICE_ACCOUNT"
              ],
              "type": "string",
              "description": "The user type. It determines the method to authenticate the user during login. The default is the database's built-in user type.",
              "enumDescriptions": [
                "The database's built-in user type.",
                "Cloud IAM user.",
                "Cloud IAM service account."
              ]
            },
            "project": {
              "type": "string",
              "description": "The project ID of the project containing the Cloud SQL database. The Google apps domain is prefixed if applicable. Can be omitted for *update* since it is already specified on the URL."
            },
            "instance": {
              "type": "string",
              "description": "The name of the Cloud SQL instance. This does not include the project ID. Can be omitted for *update* since it is already specified on the URL."
            },
            "password": {
              "type": "string",
              "description": "The password for the user."
            },
            "sqlserverUserDetails": {
              "id": "SqlServerUserDetails",
              "type": "object",
              "properties": {
                "disabled": {
                  "type": "boolean",
                  "description": "If the user has been disabled"
                },
                "serverRoles": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The server roles for this user"
                }
              },
              "description": "Represents a Sql Server user on the Cloud SQL instance."
            }
          },
          "description": "A Cloud SQL user resource."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#operation*."
            },
            "name": {
              "type": "string",
              "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
            },
            "user": {
              "type": "string",
              "description": "The email address of the user who initiated this operation."
            },
            "error": {
              "id": "OperationErrors",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#operationErrors*."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "OperationError",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Identifies the specific error that occurred."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#operationError*."
                      },
                      "message": {
                        "type": "string",
                        "description": "Additional information about the error encountered."
                      }
                    },
                    "description": "Database instance operation error."
                  },
                  "description": "The list of errors encountered while processing this operation."
                }
              },
              "description": "If errors occurred during processing of this operation, this field will be populated."
            },
            "status": {
              "enum": [
                "SQL_OPERATION_STATUS_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
              "enumDescriptions": [
                "The state of the operation is unknown.",
                "The operation has been queued, but has not started yet.",
                "The operation is running.",
                "The operation completed."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "targetId": {
              "type": "string",
              "description": "Name of the database instance related to this operation."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "insertTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "targetLink": {
              "type": "string"
            },
            "exportContext": {
              "id": "ExportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs: //bucketName/fileName*. If the file already exists, the requests // succeeds, but the operation fails. If *fileType* is // *SQL* and the filename ends with .gz, the contents are // compressed."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#exportContext*."
                },
                "offload": {
                  "type": "boolean",
                  "description": "Option for export offload."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "databases": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
                },
                "csvExportOptions": {
                  "type": "object",
                  "properties": {
                    "selectQuery": {
                      "type": "string",
                      "description": "The select query used to extract the data."
                    }
                  },
                  "description": "Options for exporting data as CSV."
                },
                "sqlExportOptions": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
                    },
                    "schemaOnly": {
                      "type": "boolean",
                      "description": "Export only schemas."
                    },
                    "mysqlExportOptions": {
                      "type": "object",
                      "properties": {
                        "masterData": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored."
                        }
                      },
                      "description": "Options for exporting from MySQL."
                    }
                  },
                  "description": "Options for exporting data as SQL statements."
                }
              },
              "description": "The context for export operation, if applicable."
            },
            "importContext": {
              "id": "ImportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "Path to the import file in Cloud Storage, in the form *gs: //bucketName/fileName*. Compressed gzip files (.gz) are supported // when *fileType* is *SQL*. The instance must have // write permissions to the bucket and read access to the file."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#importContext*."
                },
                "database": {
                  "type": "string",
                  "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "importUser": {
                  "type": "string",
                  "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
                },
                "bakImportOptions": {
                  "type": "object",
                  "properties": {
                    "encryptionOptions": {
                      "type": "object",
                      "properties": {
                        "pvkPath": {
                          "type": "string",
                          "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "certPath": {
                          "type": "string",
                          "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "pvkPassword": {
                          "type": "string",
                          "description": "Password that encrypts the private key"
                        }
                      }
                    }
                  },
                  "description": "Import parameters specific to SQL Server .BAK files"
                },
                "csvImportOptions": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "description": "The table to which CSV data is imported."
                    },
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
                    }
                  },
                  "description": "Options for importing data as CSV."
                }
              },
              "description": "The context for import operation, if applicable."
            },
            "operationType": {
              "enum": [
                "SQL_OPERATION_TYPE_UNSPECIFIED",
                "IMPORT",
                "EXPORT",
                "CREATE",
                "UPDATE",
                "DELETE",
                "RESTART",
                "BACKUP",
                "SNAPSHOT",
                "BACKUP_VOLUME",
                "DELETE_VOLUME",
                "RESTORE_VOLUME",
                "INJECT_USER",
                "CLONE",
                "STOP_REPLICA",
                "START_REPLICA",
                "PROMOTE_REPLICA",
                "CREATE_REPLICA",
                "CREATE_USER",
                "DELETE_USER",
                "UPDATE_USER",
                "CREATE_DATABASE",
                "DELETE_DATABASE",
                "UPDATE_DATABASE",
                "FAILOVER",
                "DELETE_BACKUP",
                "RECREATE_REPLICA",
                "TRUNCATE_LOG",
                "DEMOTE_MASTER",
                "MAINTENANCE",
                "ENABLE_PRIVATE_IP",
                "DEFER_MAINTENANCE",
                "CREATE_CLONE",
                "RESCHEDULE_MAINTENANCE",
                "START_EXTERNAL_SYNC"
              ],
              "type": "string",
              "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*",
              "enumDescriptions": [
                "Unknown operation type.",
                "Imports data into a Cloud SQL instance.",
                "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
                "Creates a new Cloud SQL instance.",
                "Updates the settings of a Cloud SQL instance.",
                "Deletes a Cloud SQL instance.",
                "Restarts the Cloud SQL instance.",
                "",
                "",
                "Performs instance backup.",
                "Deletes an instance backup.",
                "Restores an instance backup.",
                "Injects a privileged user in mysql for MOB instances.",
                "Clones a Cloud SQL instance.",
                "Stops replication on a Cloud SQL read replica instance.",
                "Starts replication on a Cloud SQL read replica instance.",
                "Promotes a Cloud SQL replica instance.",
                "Creates a Cloud SQL replica instance.",
                "Creates a new user in a Cloud SQL instance.",
                "Deletes a user from a Cloud SQL instance.",
                "Updates an existing user in a Cloud SQL instance.",
                "Creates a database in the Cloud SQL instance.",
                "Deletes a database in the Cloud SQL instance.",
                "Updates a database in the Cloud SQL instance.",
                "Performs failover of an HA-enabled Cloud SQL failover replica.",
                "Deletes the backup taken by a backup run.",
                "",
                "Truncates a general or slow log table in MySQL.",
                "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
                "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
                "This field is deprecated, and will be removed in future version of API.",
                "",
                "Creates clone instance.",
                "Reschedule maintenance to another time.",
                "Starts external sync of a Cloud SQL EM replica to an external master."
              ]
            },
            "targetProject": {
              "type": "string",
              "description": "The project ID of the target instance related to this operation."
            }
          },
          "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource."
        }
      ]
  users.list:
    description: |-
      Lists users in the specified Cloud SQL instance.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/users/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "UsersListResponse",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#usersList*."
            },
            "items": {
              "type": "array",
              "items": {
                "id": "User",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "description": "This field is deprecated and will be removed from a future version of the API."
                  },
                  "host": {
                    "type": "string",
                    "description": "The host name from which the user can connect. For *insert* operations, host defaults to an empty string. For *update* operations, host is specified as part of the request URL. The host name cannot be updated after insertion."
                  },
                  "kind": {
                    "type": "string",
                    "description": "This is always *sql#user*."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the user in the Cloud SQL instance. Can be omitted for *update* since it is already specified in the URL."
                  },
                  "type": {
                    "enum": [
                      "BUILT_IN",
                      "CLOUD_IAM_USER",
                      "CLOUD_IAM_SERVICE_ACCOUNT"
                    ],
                    "type": "string",
                    "description": "The user type. It determines the method to authenticate the user during login. The default is the database's built-in user type.",
                    "enumDescriptions": [
                      "The database's built-in user type.",
                      "Cloud IAM user.",
                      "Cloud IAM service account."
                    ]
                  },
                  "project": {
                    "type": "string",
                    "description": "The project ID of the project containing the Cloud SQL database. The Google apps domain is prefixed if applicable. Can be omitted for *update* since it is already specified on the URL."
                  },
                  "instance": {
                    "type": "string",
                    "description": "The name of the Cloud SQL instance. This does not include the project ID. Can be omitted for *update* since it is already specified on the URL."
                  },
                  "password": {
                    "type": "string",
                    "description": "The password for the user."
                  },
                  "sqlserverUserDetails": {
                    "id": "SqlServerUserDetails",
                    "type": "object",
                    "properties": {
                      "disabled": {
                        "type": "boolean",
                        "description": "If the user has been disabled"
                      },
                      "serverRoles": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The server roles for this user"
                      }
                    },
                    "description": "Represents a Sql Server user on the Cloud SQL instance."
                  }
                },
                "description": "A Cloud SQL user resource."
              },
              "description": "List of user resources in the instance."
            },
            "nextPageToken": {
              "type": "string",
              "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
            }
          },
          "description": "User list response."
        }
      ]
  users.update:
    description: |-
      Updates an existing user in a Cloud SQL instance.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/sql/docs/sqlserver/admin-api/rest/v1beta4/users/update
    example:
      inputs: [
        {
          "id": "User",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "description": "This field is deprecated and will be removed from a future version of the API."
            },
            "host": {
              "type": "string",
              "description": "The host name from which the user can connect. For *insert* operations, host defaults to an empty string. For *update* operations, host is specified as part of the request URL. The host name cannot be updated after insertion."
            },
            "kind": {
              "type": "string",
              "description": "This is always *sql#user*."
            },
            "name": {
              "type": "string",
              "description": "The name of the user in the Cloud SQL instance. Can be omitted for *update* since it is already specified in the URL."
            },
            "type": {
              "enum": [
                "BUILT_IN",
                "CLOUD_IAM_USER",
                "CLOUD_IAM_SERVICE_ACCOUNT"
              ],
              "type": "string",
              "description": "The user type. It determines the method to authenticate the user during login. The default is the database's built-in user type.",
              "enumDescriptions": [
                "The database's built-in user type.",
                "Cloud IAM user.",
                "Cloud IAM service account."
              ]
            },
            "project": {
              "type": "string",
              "description": "The project ID of the project containing the Cloud SQL database. The Google apps domain is prefixed if applicable. Can be omitted for *update* since it is already specified on the URL."
            },
            "instance": {
              "type": "string",
              "description": "The name of the Cloud SQL instance. This does not include the project ID. Can be omitted for *update* since it is already specified on the URL."
            },
            "password": {
              "type": "string",
              "description": "The password for the user."
            },
            "sqlserverUserDetails": {
              "id": "SqlServerUserDetails",
              "type": "object",
              "properties": {
                "disabled": {
                  "type": "boolean",
                  "description": "If the user has been disabled"
                },
                "serverRoles": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The server roles for this user"
                }
              },
              "description": "Represents a Sql Server user on the Cloud SQL instance."
            }
          },
          "description": "A Cloud SQL user resource."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "This is always *sql#operation*."
            },
            "name": {
              "type": "string",
              "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
            },
            "user": {
              "type": "string",
              "description": "The email address of the user who initiated this operation."
            },
            "error": {
              "id": "OperationErrors",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#operationErrors*."
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "id": "OperationError",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Identifies the specific error that occurred."
                      },
                      "kind": {
                        "type": "string",
                        "description": "This is always *sql#operationError*."
                      },
                      "message": {
                        "type": "string",
                        "description": "Additional information about the error encountered."
                      }
                    },
                    "description": "Database instance operation error."
                  },
                  "description": "The list of errors encountered while processing this operation."
                }
              },
              "description": "If errors occurred during processing of this operation, this field will be populated."
            },
            "status": {
              "enum": [
                "SQL_OPERATION_STATUS_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "DONE"
              ],
              "type": "string",
              "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
              "enumDescriptions": [
                "The state of the operation is unknown.",
                "The operation has been queued, but has not started yet.",
                "The operation is running.",
                "The operation completed."
              ]
            },
            "endTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "selfLink": {
              "type": "string",
              "description": "The URI of this resource."
            },
            "targetId": {
              "type": "string",
              "description": "Name of the database instance related to this operation."
            },
            "startTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "insertTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
            },
            "targetLink": {
              "type": "string"
            },
            "exportContext": {
              "id": "ExportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs: //bucketName/fileName*. If the file already exists, the requests // succeeds, but the operation fails. If *fileType* is // *SQL* and the filename ends with .gz, the contents are // compressed."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#exportContext*."
                },
                "offload": {
                  "type": "boolean",
                  "description": "Option for export offload."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "databases": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
                },
                "csvExportOptions": {
                  "type": "object",
                  "properties": {
                    "selectQuery": {
                      "type": "string",
                      "description": "The select query used to extract the data."
                    }
                  },
                  "description": "Options for exporting data as CSV."
                },
                "sqlExportOptions": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table."
                    },
                    "schemaOnly": {
                      "type": "boolean",
                      "description": "Export only schemas."
                    },
                    "mysqlExportOptions": {
                      "type": "object",
                      "properties": {
                        "masterData": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored."
                        }
                      },
                      "description": "Options for exporting from MySQL."
                    }
                  },
                  "description": "Options for exporting data as SQL statements."
                }
              },
              "description": "The context for export operation, if applicable."
            },
            "importContext": {
              "id": "ImportContext",
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "Path to the import file in Cloud Storage, in the form *gs: //bucketName/fileName*. Compressed gzip files (.gz) are supported // when *fileType* is *SQL*. The instance must have // write permissions to the bucket and read access to the file."
                },
                "kind": {
                  "type": "string",
                  "description": "This is always *sql#importContext*."
                },
                "database": {
                  "type": "string",
                  "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
                },
                "fileType": {
                  "enum": [
                    "SQL_FILE_TYPE_UNSPECIFIED",
                    "SQL",
                    "CSV",
                    "BAK"
                  ],
                  "type": "string",
                  "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
                  "enumDescriptions": [
                    "Unknown file type.",
                    "File containing SQL statements.",
                    "File in CSV format.",
                    ""
                  ]
                },
                "importUser": {
                  "type": "string",
                  "description": "The PostgreSQL user for this import operation. PostgreSQL instances only."
                },
                "bakImportOptions": {
                  "type": "object",
                  "properties": {
                    "encryptionOptions": {
                      "type": "object",
                      "properties": {
                        "pvkPath": {
                          "type": "string",
                          "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "certPath": {
                          "type": "string",
                          "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                        },
                        "pvkPassword": {
                          "type": "string",
                          "description": "Password that encrypts the private key"
                        }
                      }
                    }
                  },
                  "description": "Import parameters specific to SQL Server .BAK files"
                },
                "csvImportOptions": {
                  "type": "object",
                  "properties": {
                    "table": {
                      "type": "string",
                      "description": "The table to which CSV data is imported."
                    },
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
                    }
                  },
                  "description": "Options for importing data as CSV."
                }
              },
              "description": "The context for import operation, if applicable."
            },
            "operationType": {
              "enum": [
                "SQL_OPERATION_TYPE_UNSPECIFIED",
                "IMPORT",
                "EXPORT",
                "CREATE",
                "UPDATE",
                "DELETE",
                "RESTART",
                "BACKUP",
                "SNAPSHOT",
                "BACKUP_VOLUME",
                "DELETE_VOLUME",
                "RESTORE_VOLUME",
                "INJECT_USER",
                "CLONE",
                "STOP_REPLICA",
                "START_REPLICA",
                "PROMOTE_REPLICA",
                "CREATE_REPLICA",
                "CREATE_USER",
                "DELETE_USER",
                "UPDATE_USER",
                "CREATE_DATABASE",
                "DELETE_DATABASE",
                "UPDATE_DATABASE",
                "FAILOVER",
                "DELETE_BACKUP",
                "RECREATE_REPLICA",
                "TRUNCATE_LOG",
                "DEMOTE_MASTER",
                "MAINTENANCE",
                "ENABLE_PRIVATE_IP",
                "DEFER_MAINTENANCE",
                "CREATE_CLONE",
                "RESCHEDULE_MAINTENANCE",
                "START_EXTERNAL_SYNC"
              ],
              "type": "string",
              "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*",
              "enumDescriptions": [
                "Unknown operation type.",
                "Imports data into a Cloud SQL instance.",
                "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
                "Creates a new Cloud SQL instance.",
                "Updates the settings of a Cloud SQL instance.",
                "Deletes a Cloud SQL instance.",
                "Restarts the Cloud SQL instance.",
                "",
                "",
                "Performs instance backup.",
                "Deletes an instance backup.",
                "Restores an instance backup.",
                "Injects a privileged user in mysql for MOB instances.",
                "Clones a Cloud SQL instance.",
                "Stops replication on a Cloud SQL read replica instance.",
                "Starts replication on a Cloud SQL read replica instance.",
                "Promotes a Cloud SQL replica instance.",
                "Creates a Cloud SQL replica instance.",
                "Creates a new user in a Cloud SQL instance.",
                "Deletes a user from a Cloud SQL instance.",
                "Updates an existing user in a Cloud SQL instance.",
                "Creates a database in the Cloud SQL instance.",
                "Deletes a database in the Cloud SQL instance.",
                "Updates a database in the Cloud SQL instance.",
                "Performs failover of an HA-enabled Cloud SQL failover replica.",
                "Deletes the backup taken by a backup run.",
                "",
                "Truncates a general or slow log table in MySQL.",
                "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
                "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
                "This field is deprecated, and will be removed in future version of API.",
                "",
                "Creates clone instance.",
                "Reschedule maintenance to another time.",
                "Starts external sync of a Cloud SQL EM replica to an external master."
              ]
            },
            "targetProject": {
              "type": "string",
              "description": "The project ID of the target instance related to this operation."
            }
          },
          "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource."
        }
      ]