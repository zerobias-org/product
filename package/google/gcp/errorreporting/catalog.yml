Product:
  name: GCP Error Reporting
  versions: [1.0.0]
  package: google.gcp.errorreporting
  description: |-
    Cloud Error Reporting
  link: https://cloud.google.com/error-reporting
  contentType: json
Operations:
  projects.deleteEvents:
    description: |-
      Deletes all error events of a given project.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/error-reporting/reference/rest/v1beta1/projects/deleteEvents
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "DeleteEventsResponse",
          "type": "object",
          "properties": {},
          "description": "Response message for deleting error events."
        }
      ]
  projects.events.list:
    description: |-
      Lists the specified events.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/error-reporting/reference/rest/v1beta1/projects.events/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListEventsResponse",
          "type": "object",
          "properties": {
            "errorEvents": {
              "type": "array",
              "items": {
                "id": "ErrorEvent",
                "type": "object",
                "properties": {
                  "context": {
                    "id": "ErrorContext",
                    "type": "object",
                    "properties": {
                      "user": {
                        "type": "string",
                        "description": "The user who caused or was affected by the crash. This can be a user ID, an email address, or an arbitrary token that uniquely identifies the user. When sending an error report, leave this field empty if the user was not logged in. In this case the Error Reporting system will use other data, such as remote IP address, to distinguish affected users. See `affected_users_count` in `ErrorGroupStats`."
                      },
                      "httpRequest": {
                        "id": "HttpRequestContext",
                        "type": "object",
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "The URL of the request."
                          },
                          "method": {
                            "type": "string",
                            "description": "The type of HTTP request, such as `GET`, `POST`, etc."
                          },
                          "referrer": {
                            "type": "string",
                            "description": "The referrer information that is provided with the request."
                          },
                          "remoteIp": {
                            "type": "string",
                            "description": "The IP address from which the request originated. This can be IPv4, IPv6, or a token which is derived from the IP address, depending on the data that has been provided in the error report."
                          },
                          "userAgent": {
                            "type": "string",
                            "description": "The user agent information that is provided with the request."
                          },
                          "responseStatusCode": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The HTTP response status code for the request."
                          }
                        },
                        "description": "The HTTP request which was processed when the error was triggered."
                      },
                      "reportLocation": {
                        "id": "SourceLocation",
                        "type": "object",
                        "properties": {
                          "filePath": {
                            "type": "string",
                            "description": "The source code filename, which can include a truncated relative path, or a full path from a production machine."
                          },
                          "lineNumber": {
                            "type": "integer",
                            "format": "int32",
                            "description": "1-based. 0 indicates that the line number is unknown."
                          },
                          "functionName": {
                            "type": "string",
                            "description": "Human-readable name of a function or method. The value can include optional context like the class or package name. For example, `my.package.MyClass.method` in case of Java."
                          }
                        },
                        "description": "The location in the source code where the decision was made to report the error, usually the place where it was logged. For a logged exception this would be the source line where the exception is logged, usually close to the place where it was caught."
                      },
                      "sourceReferences": {
                        "type": "array",
                        "items": {
                          "id": "SourceReference",
                          "type": "object",
                          "properties": {
                            "repository": {
                              "type": "string",
                              "description": "Optional. A URI string identifying the repository. Example: \"https://github.com/GoogleCloudPlatform/kubernetes.git\""
                            },
                            "revisionId": {
                              "type": "string",
                              "description": "The canonical and persistent identifier of the deployed revision. Example (git): \"0035781c50ec7aa23385dc841529ce8a4b70db1b\""
                            }
                          },
                          "description": "A reference to a particular snapshot of the source tree used to build and deploy an application."
                        },
                        "description": "Source code that was used to build the executable which has caused the given error message."
                      }
                    },
                    "description": "Data about the context in which the error occurred."
                  },
                  "message": {
                    "type": "string",
                    "description": "The stack trace that was reported or logged by the service."
                  },
                  "eventTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Time when the event occurred as provided in the error report. If the report did not contain a timestamp, the time the error was received by the Error Reporting system is used."
                  },
                  "serviceContext": {
                    "id": "ServiceContext",
                    "type": "object",
                    "properties": {
                      "service": {
                        "type": "string",
                        "description": "An identifier of the service, such as the name of the executable, job, or Google App Engine service name. This field is expected to have a low number of values that are relatively stable over time, as opposed to `version`, which can be changed whenever new code is deployed. Contains the service name for error reports extracted from Google App Engine logs or `default` if the App Engine default service is used."
                      },
                      "version": {
                        "type": "string",
                        "description": "Represents the source code version that the developer provided, which could represent a version label or a Git SHA-1 hash, for example. For App Engine standard environment, the version is set to the version of the app."
                      },
                      "resourceType": {
                        "type": "string",
                        "description": "Type of the MonitoredResource. List of possible values: https://cloud.google.com/monitoring/api/resources Value is set automatically for incoming errors and must not be set when reporting errors."
                      }
                    },
                    "description": "The `ServiceContext` for which this error was reported."
                  }
                },
                "description": "An error event which is returned by the Error Reporting system."
              },
              "description": "The error events which match the given request."
            },
            "nextPageToken": {
              "type": "string",
              "description": "If non-empty, more results are available. Pass this token, along with the same query parameters as the first request, to view the next page of results."
            },
            "timeRangeBegin": {
              "type": "string",
              "format": "google-datetime",
              "description": "The timestamp specifies the start time to which the request was restricted."
            }
          },
          "description": "Contains a set of requested error events."
        }
      ]
  projects.events.report:
    description: |-
      Report an individual error event and record the event to a log. This endpoint accepts **either** an OAuth token, **or** an [API key](https://support.google.com/cloud/answer/6158862) for authentication. To use an API key, append it to the URL as the value of a `key` parameter. For example: `POST https://clouderrorreporting.googleapis.com/v1beta1/{projectName}/events:report?key=123ABC456` **Note:** [Error Reporting](/error-reporting) is a global service built on Cloud Logging and doesn't analyze logs stored in regional log buckets or logs routed to other Google Cloud projects. For more information, see [Using Error Reporting with regionalized logs](/error-reporting/docs/regionalization).
    versions:
      from: 1.0.0
    link: https://cloud.google.com/error-reporting/reference/rest/v1beta1/projects.events/report
    example:
      inputs: [
        {
          "id": "ReportedErrorEvent",
          "type": "object",
          "properties": {
            "context": {
              "id": "ErrorContext",
              "type": "object",
              "properties": {
                "user": {
                  "type": "string",
                  "description": "The user who caused or was affected by the crash. This can be a user ID, an email address, or an arbitrary token that uniquely identifies the user. When sending an error report, leave this field empty if the user was not logged in. In this case the Error Reporting system will use other data, such as remote IP address, to distinguish affected users. See `affected_users_count` in `ErrorGroupStats`."
                },
                "httpRequest": {
                  "id": "HttpRequestContext",
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "The URL of the request."
                    },
                    "method": {
                      "type": "string",
                      "description": "The type of HTTP request, such as `GET`, `POST`, etc."
                    },
                    "referrer": {
                      "type": "string",
                      "description": "The referrer information that is provided with the request."
                    },
                    "remoteIp": {
                      "type": "string",
                      "description": "The IP address from which the request originated. This can be IPv4, IPv6, or a token which is derived from the IP address, depending on the data that has been provided in the error report."
                    },
                    "userAgent": {
                      "type": "string",
                      "description": "The user agent information that is provided with the request."
                    },
                    "responseStatusCode": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The HTTP response status code for the request."
                    }
                  },
                  "description": "The HTTP request which was processed when the error was triggered."
                },
                "reportLocation": {
                  "id": "SourceLocation",
                  "type": "object",
                  "properties": {
                    "filePath": {
                      "type": "string",
                      "description": "The source code filename, which can include a truncated relative path, or a full path from a production machine."
                    },
                    "lineNumber": {
                      "type": "integer",
                      "format": "int32",
                      "description": "1-based. 0 indicates that the line number is unknown."
                    },
                    "functionName": {
                      "type": "string",
                      "description": "Human-readable name of a function or method. The value can include optional context like the class or package name. For example, `my.package.MyClass.method` in case of Java."
                    }
                  },
                  "description": "The location in the source code where the decision was made to report the error, usually the place where it was logged. For a logged exception this would be the source line where the exception is logged, usually close to the place where it was caught."
                },
                "sourceReferences": {
                  "type": "array",
                  "items": {
                    "id": "SourceReference",
                    "type": "object",
                    "properties": {
                      "repository": {
                        "type": "string",
                        "description": "Optional. A URI string identifying the repository. Example: \"https://github.com/GoogleCloudPlatform/kubernetes.git\""
                      },
                      "revisionId": {
                        "type": "string",
                        "description": "The canonical and persistent identifier of the deployed revision. Example (git): \"0035781c50ec7aa23385dc841529ce8a4b70db1b\""
                      }
                    },
                    "description": "A reference to a particular snapshot of the source tree used to build and deploy an application."
                  },
                  "description": "Source code that was used to build the executable which has caused the given error message."
                }
              },
              "description": "Optional. A description of the context in which the error occurred."
            },
            "message": {
              "type": "string",
              "description": "Required. The error message. If no `context.reportLocation` is provided, the message must contain a header (typically consisting of the exception type name and an error message) and an exception stack trace in one of the supported programming languages and formats. Supported languages are Java, Python, JavaScript, Ruby, C#, PHP, and Go. Supported stack trace formats are: * **Java**: Must be the return value of [`Throwable.printStackTrace()`](https://docs.oracle.com/javase/7/docs/api/java/lang/Throwable.html#printStackTrace%28%29). * **Python**: Must be the return value of [`traceback.format_exc()`](https://docs.python.org/2/library/traceback.html#traceback.format_exc). * **JavaScript**: Must be the value of [`error.stack`](https://github.com/v8/v8/wiki/Stack-Trace-API) as returned by V8. * **Ruby**: Must contain frames returned by [`Exception.backtrace`](https://ruby-doc.org/core-2.2.0/Exception.html#method-i-backtrace). * **C#**: Must be the return value of [`Exception.ToString()`](https://msdn.microsoft.com/en-us/library/system.exception.tostring.aspx). * **PHP**: Must start with `PHP (Notice|Parse error|Fatal error|Warning)` and contain the result of [`(string)$exception`](http://php.net/manual/en/exception.tostring.php). * **Go**: Must be the return value of [`runtime.Stack()`](https://golang.org/pkg/runtime/debug/#Stack)."
            },
            "eventTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Optional. Time when the event occurred. If not provided, the time when the event was received by the Error Reporting system will be used."
            },
            "serviceContext": {
              "id": "ServiceContext",
              "type": "object",
              "properties": {
                "service": {
                  "type": "string",
                  "description": "An identifier of the service, such as the name of the executable, job, or Google App Engine service name. This field is expected to have a low number of values that are relatively stable over time, as opposed to `version`, which can be changed whenever new code is deployed. Contains the service name for error reports extracted from Google App Engine logs or `default` if the App Engine default service is used."
                },
                "version": {
                  "type": "string",
                  "description": "Represents the source code version that the developer provided, which could represent a version label or a Git SHA-1 hash, for example. For App Engine standard environment, the version is set to the version of the app."
                },
                "resourceType": {
                  "type": "string",
                  "description": "Type of the MonitoredResource. List of possible values: https://cloud.google.com/monitoring/api/resources Value is set automatically for incoming errors and must not be set when reporting errors."
                }
              },
              "description": "Required. The service context in which this error has occurred."
            }
          },
          "description": "An error event which is reported to the Error Reporting system."
        }
      ]
      outputs: [
        {
          "id": "ReportErrorEventResponse",
          "type": "object",
          "properties": {},
          "description": "Response for reporting an individual error event. Data may be added to this message in the future."
        }
      ]
  projects.groups.get:
    description: |-
      Get the specified group.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/error-reporting/reference/rest/v1beta1/projects.groups/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ErrorGroup",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The group resource name. Example: projects/my-project-123/groups/CNSgkpnppqKCUw"
            },
            "groupId": {
              "type": "string",
              "description": "Group IDs are unique for a given project. If the same kind of error occurs in different service contexts, it will receive the same group ID."
            },
            "trackingIssues": {
              "type": "array",
              "items": {
                "id": "TrackingIssue",
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "A URL pointing to a related entry in an issue tracking system. Example: `https://github.com/user/project/issues/4`"
                  }
                },
                "description": "Information related to tracking the progress on resolving the error."
              },
              "description": "Associated tracking issues."
            },
            "resolutionStatus": {
              "enum": [
                "RESOLUTION_STATUS_UNSPECIFIED",
                "OPEN",
                "ACKNOWLEDGED",
                "RESOLVED",
                "MUTED"
              ],
              "type": "string",
              "description": "Error group's resolution status. An unspecified resolution status will be interpreted as OPEN",
              "enumDescriptions": [
                "Status is unknown. When left unspecified in requests, it is treated like OPEN.",
                "The error group is not being addressed. This is the default for new groups. It is also used for errors re-occurring after marked RESOLVED.",
                "Error Group manually acknowledged, it can have an issue link attached.",
                "Error Group manually resolved, more events for this group are not expected to occur.",
                "The error group is muted and excluded by default on group stats requests."
              ]
            }
          },
          "description": "Description of a group of similar error events."
        }
      ]
  projects.groupStats.list:
    description: |-
      Lists the specified groups.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/error-reporting/reference/rest/v1beta1/projects.groupStats/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListGroupStatsResponse",
          "type": "object",
          "properties": {
            "nextPageToken": {
              "type": "string",
              "description": "If non-empty, more results are available. Pass this token, along with the same query parameters as the first request, to view the next page of results."
            },
            "timeRangeBegin": {
              "type": "string",
              "format": "google-datetime",
              "description": "The timestamp specifies the start time to which the request was restricted. The start time is set based on the requested time range. It may be adjusted to a later time if a project has exceeded the storage quota and older data has been deleted."
            },
            "errorGroupStats": {
              "type": "array",
              "items": {
                "id": "ErrorGroupStats",
                "type": "object",
                "properties": {
                  "count": {
                    "type": "string",
                    "format": "int64",
                    "description": "Approximate total number of events in the given group that match the filter criteria."
                  },
                  "group": {
                    "id": "ErrorGroup",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The group resource name. Example: projects/my-project-123/groups/CNSgkpnppqKCUw"
                      },
                      "groupId": {
                        "type": "string",
                        "description": "Group IDs are unique for a given project. If the same kind of error occurs in different service contexts, it will receive the same group ID."
                      },
                      "trackingIssues": {
                        "type": "array",
                        "items": {
                          "id": "TrackingIssue",
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "description": "A URL pointing to a related entry in an issue tracking system. Example: `https://github.com/user/project/issues/4`"
                            }
                          },
                          "description": "Information related to tracking the progress on resolving the error."
                        },
                        "description": "Associated tracking issues."
                      },
                      "resolutionStatus": {
                        "enum": [
                          "RESOLUTION_STATUS_UNSPECIFIED",
                          "OPEN",
                          "ACKNOWLEDGED",
                          "RESOLVED",
                          "MUTED"
                        ],
                        "type": "string",
                        "description": "Error group's resolution status. An unspecified resolution status will be interpreted as OPEN",
                        "enumDescriptions": [
                          "Status is unknown. When left unspecified in requests, it is treated like OPEN.",
                          "The error group is not being addressed. This is the default for new groups. It is also used for errors re-occurring after marked RESOLVED.",
                          "Error Group manually acknowledged, it can have an issue link attached.",
                          "Error Group manually resolved, more events for this group are not expected to occur.",
                          "The error group is muted and excluded by default on group stats requests."
                        ]
                      }
                    },
                    "description": "Group data that is independent of the filter criteria."
                  },
                  "timedCounts": {
                    "type": "array",
                    "items": {
                      "id": "TimedCount",
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "string",
                          "format": "int64",
                          "description": "Approximate number of occurrences in the given time period."
                        },
                        "endTime": {
                          "type": "string",
                          "format": "google-datetime",
                          "description": "End of the time period to which `count` refers (excluded)."
                        },
                        "startTime": {
                          "type": "string",
                          "format": "google-datetime",
                          "description": "Start of the time period to which `count` refers (included)."
                        }
                      },
                      "description": "The number of errors in a given time period. All numbers are approximate since the error events are sampled before counting them."
                    },
                    "description": "Approximate number of occurrences over time. Timed counts returned by ListGroups are guaranteed to be: - Inside the requested time interval - Non-overlapping, and - Ordered by ascending time."
                  },
                  "lastSeenTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Approximate last occurrence that was ever seen for this group and which matches the given filter criteria, ignoring the time_range that was specified in the request."
                  },
                  "firstSeenTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Approximate first occurrence that was ever seen for this group and which matches the given filter criteria, ignoring the time_range that was specified in the request."
                  },
                  "representative": {
                    "id": "ErrorEvent",
                    "type": "object",
                    "properties": {
                      "context": {
                        "id": "ErrorContext",
                        "type": "object",
                        "properties": {
                          "user": {
                            "type": "string",
                            "description": "The user who caused or was affected by the crash. This can be a user ID, an email address, or an arbitrary token that uniquely identifies the user. When sending an error report, leave this field empty if the user was not logged in. In this case the Error Reporting system will use other data, such as remote IP address, to distinguish affected users. See `affected_users_count` in `ErrorGroupStats`."
                          },
                          "httpRequest": {
                            "id": "HttpRequestContext",
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string",
                                "description": "The URL of the request."
                              },
                              "method": {
                                "type": "string",
                                "description": "The type of HTTP request, such as `GET`, `POST`, etc."
                              },
                              "referrer": {
                                "type": "string",
                                "description": "The referrer information that is provided with the request."
                              },
                              "remoteIp": {
                                "type": "string",
                                "description": "The IP address from which the request originated. This can be IPv4, IPv6, or a token which is derived from the IP address, depending on the data that has been provided in the error report."
                              },
                              "userAgent": {
                                "type": "string",
                                "description": "The user agent information that is provided with the request."
                              },
                              "responseStatusCode": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The HTTP response status code for the request."
                              }
                            },
                            "description": "The HTTP request which was processed when the error was triggered."
                          },
                          "reportLocation": {
                            "id": "SourceLocation",
                            "type": "object",
                            "properties": {
                              "filePath": {
                                "type": "string",
                                "description": "The source code filename, which can include a truncated relative path, or a full path from a production machine."
                              },
                              "lineNumber": {
                                "type": "integer",
                                "format": "int32",
                                "description": "1-based. 0 indicates that the line number is unknown."
                              },
                              "functionName": {
                                "type": "string",
                                "description": "Human-readable name of a function or method. The value can include optional context like the class or package name. For example, `my.package.MyClass.method` in case of Java."
                              }
                            },
                            "description": "The location in the source code where the decision was made to report the error, usually the place where it was logged. For a logged exception this would be the source line where the exception is logged, usually close to the place where it was caught."
                          },
                          "sourceReferences": {
                            "type": "array",
                            "items": {
                              "id": "SourceReference",
                              "type": "object",
                              "properties": {
                                "repository": {
                                  "type": "string",
                                  "description": "Optional. A URI string identifying the repository. Example: \"https://github.com/GoogleCloudPlatform/kubernetes.git\""
                                },
                                "revisionId": {
                                  "type": "string",
                                  "description": "The canonical and persistent identifier of the deployed revision. Example (git): \"0035781c50ec7aa23385dc841529ce8a4b70db1b\""
                                }
                              },
                              "description": "A reference to a particular snapshot of the source tree used to build and deploy an application."
                            },
                            "description": "Source code that was used to build the executable which has caused the given error message."
                          }
                        },
                        "description": "Data about the context in which the error occurred."
                      },
                      "message": {
                        "type": "string",
                        "description": "The stack trace that was reported or logged by the service."
                      },
                      "eventTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "Time when the event occurred as provided in the error report. If the report did not contain a timestamp, the time the error was received by the Error Reporting system is used."
                      },
                      "serviceContext": {
                        "id": "ServiceContext",
                        "type": "object",
                        "properties": {
                          "service": {
                            "type": "string",
                            "description": "An identifier of the service, such as the name of the executable, job, or Google App Engine service name. This field is expected to have a low number of values that are relatively stable over time, as opposed to `version`, which can be changed whenever new code is deployed. Contains the service name for error reports extracted from Google App Engine logs or `default` if the App Engine default service is used."
                          },
                          "version": {
                            "type": "string",
                            "description": "Represents the source code version that the developer provided, which could represent a version label or a Git SHA-1 hash, for example. For App Engine standard environment, the version is set to the version of the app."
                          },
                          "resourceType": {
                            "type": "string",
                            "description": "Type of the MonitoredResource. List of possible values: https://cloud.google.com/monitoring/api/resources Value is set automatically for incoming errors and must not be set when reporting errors."
                          }
                        },
                        "description": "The `ServiceContext` for which this error was reported."
                      }
                    },
                    "description": "An error event which is returned by the Error Reporting system."
                  },
                  "affectedServices": {
                    "type": "array",
                    "items": {
                      "id": "ServiceContext",
                      "type": "object",
                      "properties": {
                        "service": {
                          "type": "string",
                          "description": "An identifier of the service, such as the name of the executable, job, or Google App Engine service name. This field is expected to have a low number of values that are relatively stable over time, as opposed to `version`, which can be changed whenever new code is deployed. Contains the service name for error reports extracted from Google App Engine logs or `default` if the App Engine default service is used."
                        },
                        "version": {
                          "type": "string",
                          "description": "Represents the source code version that the developer provided, which could represent a version label or a Git SHA-1 hash, for example. For App Engine standard environment, the version is set to the version of the app."
                        },
                        "resourceType": {
                          "type": "string",
                          "description": "Type of the MonitoredResource. List of possible values: https://cloud.google.com/monitoring/api/resources Value is set automatically for incoming errors and must not be set when reporting errors."
                        }
                      },
                      "description": "Describes a running service that sends errors. Its version changes over time and multiple versions can run in parallel."
                    },
                    "description": "Service contexts with a non-zero error count for the given filter criteria. This list can be truncated if multiple services are affected. Refer to `num_affected_services` for the total count."
                  },
                  "affectedUsersCount": {
                    "type": "string",
                    "format": "int64",
                    "description": "Approximate number of affected users in the given group that match the filter criteria. Users are distinguished by data in the `ErrorContext` of the individual error events, such as their login name or their remote IP address in case of HTTP requests. The number of affected users can be zero even if the number of errors is non-zero if no data was provided from which the affected user could be deduced. Users are counted based on data in the request context that was provided in the error report. If more users are implicitly affected, such as due to a crash of the whole service, this is not reflected here."
                  },
                  "numAffectedServices": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The total number of services with a non-zero error count for the given filter criteria."
                  }
                },
                "description": "Data extracted for a specific group based on certain filter criteria, such as a given time period and/or service filter."
              },
              "description": "The error group stats which match the given request."
            }
          },
          "description": "Contains a set of requested error group stats."
        }
      ]
  projects.groups.update:
    description: |-
      Replace the data for the specified group. Fails if the group does not exist.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/error-reporting/reference/rest/v1beta1/projects.groups/update
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ErrorGroup",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The group resource name. Example: projects/my-project-123/groups/CNSgkpnppqKCUw"
            },
            "groupId": {
              "type": "string",
              "description": "Group IDs are unique for a given project. If the same kind of error occurs in different service contexts, it will receive the same group ID."
            },
            "trackingIssues": {
              "type": "array",
              "items": {
                "id": "TrackingIssue",
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "A URL pointing to a related entry in an issue tracking system. Example: `https://github.com/user/project/issues/4`"
                  }
                },
                "description": "Information related to tracking the progress on resolving the error."
              },
              "description": "Associated tracking issues."
            },
            "resolutionStatus": {
              "enum": [
                "RESOLUTION_STATUS_UNSPECIFIED",
                "OPEN",
                "ACKNOWLEDGED",
                "RESOLVED",
                "MUTED"
              ],
              "type": "string",
              "description": "Error group's resolution status. An unspecified resolution status will be interpreted as OPEN",
              "enumDescriptions": [
                "Status is unknown. When left unspecified in requests, it is treated like OPEN.",
                "The error group is not being addressed. This is the default for new groups. It is also used for errors re-occurring after marked RESOLVED.",
                "Error Group manually acknowledged, it can have an issue link attached.",
                "Error Group manually resolved, more events for this group are not expected to occur.",
                "The error group is muted and excluded by default on group stats requests."
              ]
            }
          },
          "description": "Description of a group of similar error events."
        }
      ]