Product:
  name: GCP Identity and Access Management
  versions: [1.0.0]
  package: google.gcp.iam
  description: |-
    Identity and Access Management
  link: https://cloud.google.com/iam
  contentType: json
Operations:
  iamcredentials.projects.serviceAccounts.generateAccessToken:
    description: |-
      Generates an OAuth 2.0 access token for a service account.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/credentials/rest/v1/projects.serviceAccounts/generateAccessToken
    example:
      inputs: [
        {
          "id": "GenerateAccessTokenRequest",
          "type": "object",
          "properties": {
            "scope": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Required. Code to identify the scopes to be included in the OAuth 2.0 access token. See https://developers.google.com/identity/protocols/googlescopes for more information. At least one value required."
            },
            "lifetime": {
              "type": "string",
              "format": "google-duration",
              "description": "The desired lifetime duration of the access token in seconds. By default, the maximum allowed value is 1 hour. To set a lifetime of up to 12 hours, you can add the service account as an allowed value in an Organization Policy that enforces the `constraints/iam.allowServiceAccountCredentialLifetimeExtension` constraint. See detailed instructions at https://cloud.google.com/iam/help/credentials/lifetime If a value is not specified, the token's lifetime will be set to a default value of 1 hour."
            },
            "delegates": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The sequence of service accounts in a delegation chain. Each service account must be granted the `roles/iam.serviceAccountTokenCreator` role on its next service account in the chain. The last service account in the chain must be granted the `roles/iam.serviceAccountTokenCreator` role on the service account that is specified in the `name` field of the request. The delegates must have the following format: `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard character is required; replacing it with a project ID is invalid."
            }
          }
        }
      ]
      outputs: [
        {
          "id": "GenerateAccessTokenResponse",
          "type": "object",
          "properties": {
            "expireTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Token expiration time. The expiration time is always set."
            },
            "accessToken": {
              "type": "string",
              "description": "The OAuth 2.0 access token."
            }
          }
        }
      ]
  iamcredentials.projects.serviceAccounts.generateIdToken:
    description: |-
      Generates an OpenID Connect ID token for a service account.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/credentials/rest/v1/projects.serviceAccounts/generateIdToken
    example:
      inputs: [
        {
          "id": "GenerateIdTokenRequest",
          "type": "object",
          "properties": {
            "audience": {
              "type": "string",
              "description": "Required. The audience for the token, such as the API or account that this token grants access to."
            },
            "delegates": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The sequence of service accounts in a delegation chain. Each service account must be granted the `roles/iam.serviceAccountTokenCreator` role on its next service account in the chain. The last service account in the chain must be granted the `roles/iam.serviceAccountTokenCreator` role on the service account that is specified in the `name` field of the request. The delegates must have the following format: `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard character is required; replacing it with a project ID is invalid."
            },
            "includeEmail": {
              "type": "boolean",
              "description": "Include the service account email in the token. If set to `true`, the token will contain `email` and `email_verified` claims."
            }
          }
        }
      ]
      outputs: [
        {
          "id": "GenerateIdTokenResponse",
          "type": "object",
          "properties": {
            "token": {
              "type": "string",
              "description": "The OpenId Connect ID token."
            }
          }
        }
      ]
  iamcredentials.projects.serviceAccounts.signBlob:
    description: |-
      Signs a blob using a service account's system-managed private key.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/credentials/rest/v1/projects.serviceAccounts/signBlob
    example:
      inputs: [
        {
          "id": "SignBlobRequest",
          "type": "object",
          "properties": {
            "payload": {
              "type": "string",
              "format": "byte",
              "description": "Required. The bytes to sign."
            },
            "delegates": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The sequence of service accounts in a delegation chain. Each service account must be granted the `roles/iam.serviceAccountTokenCreator` role on its next service account in the chain. The last service account in the chain must be granted the `roles/iam.serviceAccountTokenCreator` role on the service account that is specified in the `name` field of the request. The delegates must have the following format: `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard character is required; replacing it with a project ID is invalid."
            }
          }
        }
      ]
      outputs: [
        {
          "id": "SignBlobResponse",
          "type": "object",
          "properties": {
            "keyId": {
              "type": "string",
              "description": "The ID of the key used to sign the blob. The key used for signing will remain valid for at least 12 hours after the blob is signed. To verify the signature, you can retrieve the public key in several formats from the following endpoints: - RSA public key wrapped in an X.509 v3 certificate: `https://www.googleapis.com/service_accounts/v1/metadata/x509/{ACCOUNT_EMAIL}` - Raw key in JSON format: `https://www.googleapis.com/service_accounts/v1/metadata/raw/{ACCOUNT_EMAIL}` - JSON Web Key (JWK): `https://www.googleapis.com/service_accounts/v1/metadata/jwk/{ACCOUNT_EMAIL}`"
            },
            "signedBlob": {
              "type": "string",
              "format": "byte",
              "description": "The signature for the blob. Does not include the original blob. After the key pair referenced by the `key_id` response field expires, Google no longer exposes the public key that can be used to verify the blob. As a result, the receiver can no longer verify the signature."
            }
          }
        }
      ]
  iamcredentials.projects.serviceAccounts.signJwt:
    description: |-
      Signs a JWT using a service account's system-managed private key.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/credentials/rest/v1/projects.serviceAccounts/signJwt
    example:
      inputs: [
        {
          "id": "SignJwtRequest",
          "type": "object",
          "properties": {
            "payload": {
              "type": "string",
              "description": "Required. The JWT payload to sign. Must be a serialized JSON object that contains a JWT Claims Set. For example: `{\"sub\": \"user@example.com\", \"iat\": 313435}` If the JWT Claims Set contains an expiration time (`exp`) claim, it must be an integer timestamp that is not in the past and no more than 12 hours in the future."
            },
            "delegates": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The sequence of service accounts in a delegation chain. Each service account must be granted the `roles/iam.serviceAccountTokenCreator` role on its next service account in the chain. The last service account in the chain must be granted the `roles/iam.serviceAccountTokenCreator` role on the service account that is specified in the `name` field of the request. The delegates must have the following format: `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard character is required; replacing it with a project ID is invalid."
            }
          }
        }
      ]
      outputs: [
        {
          "id": "SignJwtResponse",
          "type": "object",
          "properties": {
            "keyId": {
              "type": "string",
              "description": "The ID of the key used to sign the JWT. The key used for signing will remain valid for at least 12 hours after the JWT is signed. To verify the signature, you can retrieve the public key in several formats from the following endpoints: - RSA public key wrapped in an X.509 v3 certificate: `https://www.googleapis.com/service_accounts/v1/metadata/x509/{ACCOUNT_EMAIL}` - Raw key in JSON format: `https://www.googleapis.com/service_accounts/v1/metadata/raw/{ACCOUNT_EMAIL}` - JSON Web Key (JWK): `https://www.googleapis.com/service_accounts/v1/metadata/jwk/{ACCOUNT_EMAIL}`"
            },
            "signedJwt": {
              "type": "string",
              "description": "The signed JWT. Contains the automatically generated header; the client-supplied payload; and the signature, which is generated using the key referenced by the `kid` field in the header. After the key pair referenced by the `key_id` response field expires, Google no longer exposes the public key that can be used to verify the JWT. As a result, the receiver can no longer verify the signature."
            }
          }
        }
      ]
  policysimulator.folders.locations.replays.create:
    description: |-
      Creates and starts a Replay using the given ReplayConfig.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/policysimulator/rest/v1/folders.locations.replays/create
    example:
      inputs: [
        {
          "id": "GoogleCloudPolicysimulatorV1Replay",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The resource name of the `Replay`, which has the following format: `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}`, where `{resource-id}` is the ID of the project, folder, or organization that owns the Replay. Example: `projects/my-example-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36`"
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "SUCCEEDED",
                "FAILED"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. The current state of the `Replay`.",
              "enumDescriptions": [
                "The state is unspecified.",
                "The `Replay` has not started yet.",
                "The `Replay` is currently running.",
                "The `Replay` has successfully completed.",
                "The `Replay` has finished with an error."
              ]
            },
            "config": {
              "id": "GoogleCloudPolicysimulatorV1ReplayConfig",
              "type": "object",
              "properties": {
                "logSource": {
                  "enum": [
                    "LOG_SOURCE_UNSPECIFIED",
                    "RECENT_ACCESSES"
                  ],
                  "type": "string",
                  "description": "The logs to use as input for the Replay.",
                  "enumDescriptions": [
                    "An unspecified log source. If the log source is unspecified, the Replay defaults to using `RECENT_ACCESSES`.",
                    "All access logs from the last 90 days. These logs may not include logs from the most recent 7 days."
                  ]
                },
                "policyOverlay": {
                  "type": "object",
                  "description": "A mapping of the resources that you want to simulate policies for and the policies that you want to simulate. Keys are the full resource names for the resources. For example, `//cloudresourcemanager.googleapis.com/projects/my-project`. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names. Values are Policy objects representing the policies that you want to simulate. Replays automatically take into account any IAM policies inherited through the resource hierarchy, and any policies set on descendant resources. You do not need to include these policies in the policy overlay.",
                  "additionalProperties": {
                    "id": "GoogleIamV1Policy",
                    "type": "object",
                    "properties": {
                      "etag": {
                        "type": "string",
                        "format": "byte",
                        "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
                      },
                      "version": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                      },
                      "bindings": {
                        "type": "array",
                        "items": {
                          "id": "GoogleIamV1Binding",
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                            },
                            "members": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                            },
                            "condition": {
                              "id": "GoogleTypeExpr",
                              "type": "object",
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                                },
                                "location": {
                                  "type": "string",
                                  "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                                },
                                "expression": {
                                  "type": "string",
                                  "description": "Textual representation of an expression in Common Expression Language syntax."
                                },
                                "description": {
                                  "type": "string",
                                  "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                                }
                              },
                              "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                            }
                          },
                          "description": "Associates `members` with a `role`."
                        },
                        "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
                      },
                      "auditConfigs": {
                        "type": "array",
                        "items": {
                          "id": "GoogleIamV1AuditConfig",
                          "type": "object",
                          "properties": {
                            "service": {
                              "type": "string",
                              "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                            },
                            "auditLogConfigs": {
                              "type": "array",
                              "items": {
                                "id": "GoogleIamV1AuditLogConfig",
                                "type": "object",
                                "properties": {
                                  "logType": {
                                    "enum": [
                                      "LOG_TYPE_UNSPECIFIED",
                                      "ADMIN_READ",
                                      "DATA_WRITE",
                                      "DATA_READ"
                                    ],
                                    "type": "string",
                                    "description": "The log type that this config enables.",
                                    "enumDescriptions": [
                                      "Default case. Should never be this.",
                                      "Admin reads. Example: CloudIAM getIamPolicy",
                                      "Data writes. Example: CloudSQL Users create",
                                      "Data reads. Example: CloudSQL Users list"
                                    ]
                                  },
                                  "exemptedMembers": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                                  }
                                },
                                "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                              },
                              "description": "The configuration for logging of each type of permission."
                            }
                          },
                          "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
                        },
                        "description": "Specifies cloud audit logging configuration for this policy."
                      }
                    },
                    "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
                  }
                }
              },
              "description": "Required. The configuration used for the `Replay`."
            },
            "resultsSummary": {
              "id": "GoogleCloudPolicysimulatorV1ReplayResultsSummary",
              "type": "object",
              "readOnly": true,
              "properties": {
                "logCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The total number of log entries replayed."
                },
                "errorCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of log entries that could not be replayed."
                },
                "newestDate": {
                  "id": "GoogleTypeDate",
                  "type": "object",
                  "properties": {
                    "day": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
                    },
                    "year": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
                    },
                    "month": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
                    }
                  },
                  "description": "The date of the newest log entry replayed."
                },
                "oldestDate": {
                  "id": "GoogleTypeDate",
                  "type": "object",
                  "properties": {
                    "day": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
                    },
                    "year": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
                    },
                    "month": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
                    }
                  },
                  "description": "The date of the oldest log entry replayed."
                },
                "unchangedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of replayed log entries with no difference between baseline and simulated policies."
                },
                "differenceCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of replayed log entries with a difference between baseline and simulated policies."
                }
              },
              "description": "Output only. Summary statistics about the replayed log entries."
            }
          },
          "description": "A resource describing a `Replay`, or simulation."
        }
      ]
      outputs: [
        {
          "id": "GoogleLongrunningOperation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "GoogleRpcStatus",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  policysimulator.folders.locations.replays.get:
    description: |-
      Gets the specified Replay. Each `Replay` is available for at least 7 days.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/policysimulator/rest/v1/folders.locations.replays/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  policysimulator.folders.locations.replays.results.list:
    description: |-
      Lists the results of running a Replay.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/policysimulator/rest/v1/folders.locations.replays.results/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudPolicysimulatorV1ListReplayResultsResponse",
          "type": "object",
          "properties": {
            "nextPageToken": {
              "type": "string",
              "description": "A token that you can use to retrieve the next page of ReplayResult objects. If this field is omitted, there are no subsequent pages."
            },
            "replayResults": {
              "type": "array",
              "items": {
                "id": "GoogleCloudPolicysimulatorV1ReplayResult",
                "type": "object",
                "properties": {
                  "diff": {
                    "id": "GoogleCloudPolicysimulatorV1ReplayDiff",
                    "type": "object",
                    "properties": {
                      "accessDiff": {
                        "id": "GoogleCloudPolicysimulatorV1AccessStateDiff",
                        "type": "object",
                        "properties": {
                          "baseline": {
                            "id": "GoogleCloudPolicysimulatorV1ExplainedAccess",
                            "type": "object",
                            "properties": {
                              "errors": {
                                "type": "array",
                                "items": {
                                  "id": "GoogleRpcStatus",
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The status code, which should be an enum value of google.rpc.Code."
                                    },
                                    "details": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "any",
                                          "description": "Properties of the object. Contains field @type with type URL."
                                        }
                                      },
                                      "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                                    },
                                    "message": {
                                      "type": "string",
                                      "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                                    }
                                  },
                                  "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
                                },
                                "description": "If the AccessState is `UNKNOWN`, this field contains a list of errors explaining why the result is `UNKNOWN`. If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is omitted."
                              },
                              "policies": {
                                "type": "array",
                                "items": {
                                  "id": "GoogleCloudPolicysimulatorV1ExplainedPolicy",
                                  "type": "object",
                                  "properties": {
                                    "access": {
                                      "enum": [
                                        "ACCESS_STATE_UNSPECIFIED",
                                        "GRANTED",
                                        "NOT_GRANTED",
                                        "UNKNOWN_CONDITIONAL",
                                        "UNKNOWN_INFO_DENIED"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether _this policy_ provides the specified permission to the specified member for the specified resource. This field does _not_ indicate whether the member actually has the permission for the resource. There might be another policy that overrides this policy. To determine whether the member actually has the permission, use the `access` field in the TroubleshootIamPolicyResponse.",
                                      "enumDescriptions": [
                                        "The access state is not specified.",
                                        "The member has the permission.",
                                        "The member does not have the permission.",
                                        "The member has the permission only if a condition expression evaluates to `true`.",
                                        "The user who created the Replay does not have access to all of the policies that Policy Simulator needs to evaluate."
                                      ]
                                    },
                                    "policy": {
                                      "id": "GoogleIamV1Policy",
                                      "type": "object",
                                      "properties": {
                                        "etag": {
                                          "type": "string",
                                          "format": "byte",
                                          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
                                        },
                                        "version": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                                        },
                                        "bindings": {
                                          "type": "array",
                                          "items": {
                                            "id": "GoogleIamV1Binding",
                                            "type": "object",
                                            "properties": {
                                              "role": {
                                                "type": "string",
                                                "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                                              },
                                              "members": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                                              },
                                              "condition": {
                                                "id": "GoogleTypeExpr",
                                                "type": "object",
                                                "properties": {
                                                  "title": {
                                                    "type": "string",
                                                    "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                                                  },
                                                  "location": {
                                                    "type": "string",
                                                    "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                                                  },
                                                  "expression": {
                                                    "type": "string",
                                                    "description": "Textual representation of an expression in Common Expression Language syntax."
                                                  },
                                                  "description": {
                                                    "type": "string",
                                                    "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                                                  }
                                                },
                                                "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                                              }
                                            },
                                            "description": "Associates `members` with a `role`."
                                          },
                                          "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
                                        },
                                        "auditConfigs": {
                                          "type": "array",
                                          "items": {
                                            "id": "GoogleIamV1AuditConfig",
                                            "type": "object",
                                            "properties": {
                                              "service": {
                                                "type": "string",
                                                "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                                              },
                                              "auditLogConfigs": {
                                                "type": "array",
                                                "items": {
                                                  "id": "GoogleIamV1AuditLogConfig",
                                                  "type": "object",
                                                  "properties": {
                                                    "logType": {
                                                      "enum": [
                                                        "LOG_TYPE_UNSPECIFIED",
                                                        "ADMIN_READ",
                                                        "DATA_WRITE",
                                                        "DATA_READ"
                                                      ],
                                                      "type": "string",
                                                      "description": "The log type that this config enables.",
                                                      "enumDescriptions": [
                                                        "Default case. Should never be this.",
                                                        "Admin reads. Example: CloudIAM getIamPolicy",
                                                        "Data writes. Example: CloudSQL Users create",
                                                        "Data reads. Example: CloudSQL Users list"
                                                      ]
                                                    },
                                                    "exemptedMembers": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                                                    }
                                                  },
                                                  "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                                                },
                                                "description": "The configuration for logging of each type of permission."
                                              }
                                            },
                                            "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
                                          },
                                          "description": "Specifies cloud audit logging configuration for this policy."
                                        }
                                      },
                                      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
                                    },
                                    "relevance": {
                                      "enum": [
                                        "HEURISTIC_RELEVANCE_UNSPECIFIED",
                                        "NORMAL",
                                        "HIGH"
                                      ],
                                      "type": "string",
                                      "description": "The relevance of this policy to the overall determination in the TroubleshootIamPolicyResponse. If the user who created the Replay does not have access to the policy, this field is omitted.",
                                      "enumDescriptions": [
                                        "Reserved for future use.",
                                        "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
                                        "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
                                      ]
                                    },
                                    "fullResourceName": {
                                      "type": "string",
                                      "description": "The full resource name that identifies the resource. For example, `//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance`. If the user who created the Replay does not have access to the policy, this field is omitted. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names."
                                    },
                                    "bindingExplanations": {
                                      "type": "array",
                                      "items": {
                                        "id": "GoogleCloudPolicysimulatorV1BindingExplanation",
                                        "type": "object",
                                        "properties": {
                                          "role": {
                                            "type": "string",
                                            "description": "The role that this binding grants. For example, `roles/compute.serviceAgent`. For a complete list of predefined IAM roles, as well as the permissions in each role, see https://cloud.google.com/iam/help/roles/reference."
                                          },
                                          "access": {
                                            "enum": [
                                              "ACCESS_STATE_UNSPECIFIED",
                                              "GRANTED",
                                              "NOT_GRANTED",
                                              "UNKNOWN_CONDITIONAL",
                                              "UNKNOWN_INFO_DENIED"
                                            ],
                                            "type": "string",
                                            "description": "Required. Indicates whether _this binding_ provides the specified permission to the specified member for the specified resource. This field does _not_ indicate whether the member actually has the permission for the resource. There might be another binding that overrides this binding. To determine whether the member actually has the permission, use the `access` field in the TroubleshootIamPolicyResponse.",
                                            "enumDescriptions": [
                                              "The access state is not specified.",
                                              "The member has the permission.",
                                              "The member does not have the permission.",
                                              "The member has the permission only if a condition expression evaluates to `true`.",
                                              "The user who created the Replay does not have access to all of the policies that Policy Simulator needs to evaluate."
                                            ]
                                          },
                                          "condition": {
                                            "id": "GoogleTypeExpr",
                                            "type": "object",
                                            "properties": {
                                              "title": {
                                                "type": "string",
                                                "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                                              },
                                              "location": {
                                                "type": "string",
                                                "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                                              },
                                              "expression": {
                                                "type": "string",
                                                "description": "Textual representation of an expression in Common Expression Language syntax."
                                              },
                                              "description": {
                                                "type": "string",
                                                "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                                              }
                                            },
                                            "description": "A condition expression that prevents this binding from granting access unless the expression evaluates to `true`. To learn about IAM Conditions, see https://cloud.google.com/iam/docs/conditions-overview."
                                          },
                                          "relevance": {
                                            "enum": [
                                              "HEURISTIC_RELEVANCE_UNSPECIFIED",
                                              "NORMAL",
                                              "HIGH"
                                            ],
                                            "type": "string",
                                            "description": "The relevance of this binding to the overall determination for the entire policy.",
                                            "enumDescriptions": [
                                              "Reserved for future use.",
                                              "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
                                              "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
                                            ]
                                          },
                                          "memberships": {
                                            "type": "object",
                                            "description": "Indicates whether each member in the binding includes the member specified in the request, either directly or indirectly. Each key identifies a member in the binding, and each value indicates whether the member in the binding includes the member in the request. For example, suppose that a binding includes the following members: * `user:alice@example.com` * `group:product-eng@example.com` The member in the replayed access tuple is `user:bob@example.com`. This user is a member of the group `group:product-eng@example.com`. For the first member in the binding, the key is `user:alice@example.com`, and the `membership` field in the value is set to `MEMBERSHIP_NOT_INCLUDED`. For the second member in the binding, the key is `group:product-eng@example.com`, and the `membership` field in the value is set to `MEMBERSHIP_INCLUDED`.",
                                            "additionalProperties": {
                                              "id": "GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership",
                                              "type": "object",
                                              "properties": {
                                                "relevance": {
                                                  "enum": [
                                                    "HEURISTIC_RELEVANCE_UNSPECIFIED",
                                                    "NORMAL",
                                                    "HIGH"
                                                  ],
                                                  "type": "string",
                                                  "description": "The relevance of the member's status to the overall determination for the binding.",
                                                  "enumDescriptions": [
                                                    "Reserved for future use.",
                                                    "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
                                                    "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
                                                  ]
                                                },
                                                "membership": {
                                                  "enum": [
                                                    "MEMBERSHIP_UNSPECIFIED",
                                                    "MEMBERSHIP_INCLUDED",
                                                    "MEMBERSHIP_NOT_INCLUDED",
                                                    "MEMBERSHIP_UNKNOWN_INFO_DENIED",
                                                    "MEMBERSHIP_UNKNOWN_UNSUPPORTED"
                                                  ],
                                                  "type": "string",
                                                  "description": "Indicates whether the binding includes the member.",
                                                  "enumDescriptions": [
                                                    "The membership is not specified.",
                                                    "The binding includes the member. The member can be included directly or indirectly. For example: * A member is included directly if that member is listed in the binding. * A member is included indirectly if that member is in a Google group or Google Workspace domain that is listed in the binding.",
                                                    "The binding does not include the member.",
                                                    "The user who created the Replay is not allowed to access the binding.",
                                                    "The member is an unsupported type. Only Google Accounts and service accounts are supported."
                                                  ]
                                                }
                                              },
                                              "description": "Details about whether the binding includes the member."
                                            }
                                          },
                                          "rolePermission": {
                                            "enum": [
                                              "ROLE_PERMISSION_UNSPECIFIED",
                                              "ROLE_PERMISSION_INCLUDED",
                                              "ROLE_PERMISSION_NOT_INCLUDED",
                                              "ROLE_PERMISSION_UNKNOWN_INFO_DENIED"
                                            ],
                                            "type": "string",
                                            "description": "Indicates whether the role granted by this binding contains the specified permission.",
                                            "enumDescriptions": [
                                              "The inclusion of the permission is not specified.",
                                              "The permission is included in the role.",
                                              "The permission is not included in the role.",
                                              "The user who created the Replay is not allowed to access the binding."
                                            ]
                                          },
                                          "rolePermissionRelevance": {
                                            "enum": [
                                              "HEURISTIC_RELEVANCE_UNSPECIFIED",
                                              "NORMAL",
                                              "HIGH"
                                            ],
                                            "type": "string",
                                            "description": "The relevance of the permission's existence, or nonexistence, in the role to the overall determination for the entire policy.",
                                            "enumDescriptions": [
                                              "Reserved for future use.",
                                              "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
                                              "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
                                            ]
                                          }
                                        },
                                        "description": "Details about how a binding in a policy affects a member's ability to use a permission."
                                      },
                                      "description": "Details about how each binding in the policy affects the member's ability, or inability, to use the permission for the resource. If the user who created the Replay does not have access to the policy, this field is omitted."
                                    }
                                  },
                                  "description": "Details about how a specific IAM Policy contributed to the access check."
                                },
                                "description": "If the AccessState is `UNKNOWN`, this field contains the policies that led to that result. If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is omitted."
                              },
                              "accessState": {
                                "enum": [
                                  "ACCESS_STATE_UNSPECIFIED",
                                  "GRANTED",
                                  "NOT_GRANTED",
                                  "UNKNOWN_CONDITIONAL",
                                  "UNKNOWN_INFO_DENIED"
                                ],
                                "type": "string",
                                "description": "Whether the member in the access tuple has permission to access the resource in the access tuple under the given policies.",
                                "enumDescriptions": [
                                  "The access state is not specified.",
                                  "The member has the permission.",
                                  "The member does not have the permission.",
                                  "The member has the permission only if a condition expression evaluates to `true`.",
                                  "The user who created the Replay does not have access to all of the policies that Policy Simulator needs to evaluate."
                                ]
                              }
                            },
                            "description": "The results of evaluating the access tuple under the current (baseline) policies. If the AccessState couldn't be fully evaluated, this field explains why."
                          },
                          "simulated": {
                            "id": "GoogleCloudPolicysimulatorV1ExplainedAccess",
                            "type": "object",
                            "properties": {
                              "errors": {
                                "type": "array",
                                "items": {
                                  "id": "GoogleRpcStatus",
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The status code, which should be an enum value of google.rpc.Code."
                                    },
                                    "details": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "any",
                                          "description": "Properties of the object. Contains field @type with type URL."
                                        }
                                      },
                                      "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                                    },
                                    "message": {
                                      "type": "string",
                                      "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                                    }
                                  },
                                  "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
                                },
                                "description": "If the AccessState is `UNKNOWN`, this field contains a list of errors explaining why the result is `UNKNOWN`. If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is omitted."
                              },
                              "policies": {
                                "type": "array",
                                "items": {
                                  "id": "GoogleCloudPolicysimulatorV1ExplainedPolicy",
                                  "type": "object",
                                  "properties": {
                                    "access": {
                                      "enum": [
                                        "ACCESS_STATE_UNSPECIFIED",
                                        "GRANTED",
                                        "NOT_GRANTED",
                                        "UNKNOWN_CONDITIONAL",
                                        "UNKNOWN_INFO_DENIED"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether _this policy_ provides the specified permission to the specified member for the specified resource. This field does _not_ indicate whether the member actually has the permission for the resource. There might be another policy that overrides this policy. To determine whether the member actually has the permission, use the `access` field in the TroubleshootIamPolicyResponse.",
                                      "enumDescriptions": [
                                        "The access state is not specified.",
                                        "The member has the permission.",
                                        "The member does not have the permission.",
                                        "The member has the permission only if a condition expression evaluates to `true`.",
                                        "The user who created the Replay does not have access to all of the policies that Policy Simulator needs to evaluate."
                                      ]
                                    },
                                    "policy": {
                                      "id": "GoogleIamV1Policy",
                                      "type": "object",
                                      "properties": {
                                        "etag": {
                                          "type": "string",
                                          "format": "byte",
                                          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
                                        },
                                        "version": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                                        },
                                        "bindings": {
                                          "type": "array",
                                          "items": {
                                            "id": "GoogleIamV1Binding",
                                            "type": "object",
                                            "properties": {
                                              "role": {
                                                "type": "string",
                                                "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                                              },
                                              "members": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                                              },
                                              "condition": {
                                                "id": "GoogleTypeExpr",
                                                "type": "object",
                                                "properties": {
                                                  "title": {
                                                    "type": "string",
                                                    "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                                                  },
                                                  "location": {
                                                    "type": "string",
                                                    "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                                                  },
                                                  "expression": {
                                                    "type": "string",
                                                    "description": "Textual representation of an expression in Common Expression Language syntax."
                                                  },
                                                  "description": {
                                                    "type": "string",
                                                    "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                                                  }
                                                },
                                                "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                                              }
                                            },
                                            "description": "Associates `members` with a `role`."
                                          },
                                          "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
                                        },
                                        "auditConfigs": {
                                          "type": "array",
                                          "items": {
                                            "id": "GoogleIamV1AuditConfig",
                                            "type": "object",
                                            "properties": {
                                              "service": {
                                                "type": "string",
                                                "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                                              },
                                              "auditLogConfigs": {
                                                "type": "array",
                                                "items": {
                                                  "id": "GoogleIamV1AuditLogConfig",
                                                  "type": "object",
                                                  "properties": {
                                                    "logType": {
                                                      "enum": [
                                                        "LOG_TYPE_UNSPECIFIED",
                                                        "ADMIN_READ",
                                                        "DATA_WRITE",
                                                        "DATA_READ"
                                                      ],
                                                      "type": "string",
                                                      "description": "The log type that this config enables.",
                                                      "enumDescriptions": [
                                                        "Default case. Should never be this.",
                                                        "Admin reads. Example: CloudIAM getIamPolicy",
                                                        "Data writes. Example: CloudSQL Users create",
                                                        "Data reads. Example: CloudSQL Users list"
                                                      ]
                                                    },
                                                    "exemptedMembers": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                                                    }
                                                  },
                                                  "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                                                },
                                                "description": "The configuration for logging of each type of permission."
                                              }
                                            },
                                            "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
                                          },
                                          "description": "Specifies cloud audit logging configuration for this policy."
                                        }
                                      },
                                      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
                                    },
                                    "relevance": {
                                      "enum": [
                                        "HEURISTIC_RELEVANCE_UNSPECIFIED",
                                        "NORMAL",
                                        "HIGH"
                                      ],
                                      "type": "string",
                                      "description": "The relevance of this policy to the overall determination in the TroubleshootIamPolicyResponse. If the user who created the Replay does not have access to the policy, this field is omitted.",
                                      "enumDescriptions": [
                                        "Reserved for future use.",
                                        "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
                                        "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
                                      ]
                                    },
                                    "fullResourceName": {
                                      "type": "string",
                                      "description": "The full resource name that identifies the resource. For example, `//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance`. If the user who created the Replay does not have access to the policy, this field is omitted. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names."
                                    },
                                    "bindingExplanations": {
                                      "type": "array",
                                      "items": {
                                        "id": "GoogleCloudPolicysimulatorV1BindingExplanation",
                                        "type": "object",
                                        "properties": {
                                          "role": {
                                            "type": "string",
                                            "description": "The role that this binding grants. For example, `roles/compute.serviceAgent`. For a complete list of predefined IAM roles, as well as the permissions in each role, see https://cloud.google.com/iam/help/roles/reference."
                                          },
                                          "access": {
                                            "enum": [
                                              "ACCESS_STATE_UNSPECIFIED",
                                              "GRANTED",
                                              "NOT_GRANTED",
                                              "UNKNOWN_CONDITIONAL",
                                              "UNKNOWN_INFO_DENIED"
                                            ],
                                            "type": "string",
                                            "description": "Required. Indicates whether _this binding_ provides the specified permission to the specified member for the specified resource. This field does _not_ indicate whether the member actually has the permission for the resource. There might be another binding that overrides this binding. To determine whether the member actually has the permission, use the `access` field in the TroubleshootIamPolicyResponse.",
                                            "enumDescriptions": [
                                              "The access state is not specified.",
                                              "The member has the permission.",
                                              "The member does not have the permission.",
                                              "The member has the permission only if a condition expression evaluates to `true`.",
                                              "The user who created the Replay does not have access to all of the policies that Policy Simulator needs to evaluate."
                                            ]
                                          },
                                          "condition": {
                                            "id": "GoogleTypeExpr",
                                            "type": "object",
                                            "properties": {
                                              "title": {
                                                "type": "string",
                                                "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                                              },
                                              "location": {
                                                "type": "string",
                                                "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                                              },
                                              "expression": {
                                                "type": "string",
                                                "description": "Textual representation of an expression in Common Expression Language syntax."
                                              },
                                              "description": {
                                                "type": "string",
                                                "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                                              }
                                            },
                                            "description": "A condition expression that prevents this binding from granting access unless the expression evaluates to `true`. To learn about IAM Conditions, see https://cloud.google.com/iam/docs/conditions-overview."
                                          },
                                          "relevance": {
                                            "enum": [
                                              "HEURISTIC_RELEVANCE_UNSPECIFIED",
                                              "NORMAL",
                                              "HIGH"
                                            ],
                                            "type": "string",
                                            "description": "The relevance of this binding to the overall determination for the entire policy.",
                                            "enumDescriptions": [
                                              "Reserved for future use.",
                                              "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
                                              "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
                                            ]
                                          },
                                          "memberships": {
                                            "type": "object",
                                            "description": "Indicates whether each member in the binding includes the member specified in the request, either directly or indirectly. Each key identifies a member in the binding, and each value indicates whether the member in the binding includes the member in the request. For example, suppose that a binding includes the following members: * `user:alice@example.com` * `group:product-eng@example.com` The member in the replayed access tuple is `user:bob@example.com`. This user is a member of the group `group:product-eng@example.com`. For the first member in the binding, the key is `user:alice@example.com`, and the `membership` field in the value is set to `MEMBERSHIP_NOT_INCLUDED`. For the second member in the binding, the key is `group:product-eng@example.com`, and the `membership` field in the value is set to `MEMBERSHIP_INCLUDED`.",
                                            "additionalProperties": {
                                              "id": "GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership",
                                              "type": "object",
                                              "properties": {
                                                "relevance": {
                                                  "enum": [
                                                    "HEURISTIC_RELEVANCE_UNSPECIFIED",
                                                    "NORMAL",
                                                    "HIGH"
                                                  ],
                                                  "type": "string",
                                                  "description": "The relevance of the member's status to the overall determination for the binding.",
                                                  "enumDescriptions": [
                                                    "Reserved for future use.",
                                                    "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
                                                    "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
                                                  ]
                                                },
                                                "membership": {
                                                  "enum": [
                                                    "MEMBERSHIP_UNSPECIFIED",
                                                    "MEMBERSHIP_INCLUDED",
                                                    "MEMBERSHIP_NOT_INCLUDED",
                                                    "MEMBERSHIP_UNKNOWN_INFO_DENIED",
                                                    "MEMBERSHIP_UNKNOWN_UNSUPPORTED"
                                                  ],
                                                  "type": "string",
                                                  "description": "Indicates whether the binding includes the member.",
                                                  "enumDescriptions": [
                                                    "The membership is not specified.",
                                                    "The binding includes the member. The member can be included directly or indirectly. For example: * A member is included directly if that member is listed in the binding. * A member is included indirectly if that member is in a Google group or Google Workspace domain that is listed in the binding.",
                                                    "The binding does not include the member.",
                                                    "The user who created the Replay is not allowed to access the binding.",
                                                    "The member is an unsupported type. Only Google Accounts and service accounts are supported."
                                                  ]
                                                }
                                              },
                                              "description": "Details about whether the binding includes the member."
                                            }
                                          },
                                          "rolePermission": {
                                            "enum": [
                                              "ROLE_PERMISSION_UNSPECIFIED",
                                              "ROLE_PERMISSION_INCLUDED",
                                              "ROLE_PERMISSION_NOT_INCLUDED",
                                              "ROLE_PERMISSION_UNKNOWN_INFO_DENIED"
                                            ],
                                            "type": "string",
                                            "description": "Indicates whether the role granted by this binding contains the specified permission.",
                                            "enumDescriptions": [
                                              "The inclusion of the permission is not specified.",
                                              "The permission is included in the role.",
                                              "The permission is not included in the role.",
                                              "The user who created the Replay is not allowed to access the binding."
                                            ]
                                          },
                                          "rolePermissionRelevance": {
                                            "enum": [
                                              "HEURISTIC_RELEVANCE_UNSPECIFIED",
                                              "NORMAL",
                                              "HIGH"
                                            ],
                                            "type": "string",
                                            "description": "The relevance of the permission's existence, or nonexistence, in the role to the overall determination for the entire policy.",
                                            "enumDescriptions": [
                                              "Reserved for future use.",
                                              "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
                                              "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
                                            ]
                                          }
                                        },
                                        "description": "Details about how a binding in a policy affects a member's ability to use a permission."
                                      },
                                      "description": "Details about how each binding in the policy affects the member's ability, or inability, to use the permission for the resource. If the user who created the Replay does not have access to the policy, this field is omitted."
                                    }
                                  },
                                  "description": "Details about how a specific IAM Policy contributed to the access check."
                                },
                                "description": "If the AccessState is `UNKNOWN`, this field contains the policies that led to that result. If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is omitted."
                              },
                              "accessState": {
                                "enum": [
                                  "ACCESS_STATE_UNSPECIFIED",
                                  "GRANTED",
                                  "NOT_GRANTED",
                                  "UNKNOWN_CONDITIONAL",
                                  "UNKNOWN_INFO_DENIED"
                                ],
                                "type": "string",
                                "description": "Whether the member in the access tuple has permission to access the resource in the access tuple under the given policies.",
                                "enumDescriptions": [
                                  "The access state is not specified.",
                                  "The member has the permission.",
                                  "The member does not have the permission.",
                                  "The member has the permission only if a condition expression evaluates to `true`.",
                                  "The user who created the Replay does not have access to all of the policies that Policy Simulator needs to evaluate."
                                ]
                              }
                            },
                            "description": "The results of evaluating the access tuple under the proposed (simulated) policies. If the AccessState couldn't be fully evaluated, this field explains why."
                          },
                          "accessChange": {
                            "enum": [
                              "ACCESS_CHANGE_TYPE_UNSPECIFIED",
                              "NO_CHANGE",
                              "UNKNOWN_CHANGE",
                              "ACCESS_REVOKED",
                              "ACCESS_GAINED",
                              "ACCESS_MAYBE_REVOKED",
                              "ACCESS_MAYBE_GAINED"
                            ],
                            "type": "string",
                            "description": "How the member's access, specified in the AccessState field, changed between the current (baseline) policies and proposed (simulated) policies.",
                            "enumDescriptions": [
                              "The access change is unspecified.",
                              "The member's access did not change. This includes the case where both baseline and simulated are UNKNOWN, but the unknown information is equivalent.",
                              "The member's access under both the current policies and the proposed policies is `UNKNOWN`, but the unknown information differs between them.",
                              "The member had access under the current policies (`GRANTED`), but will no longer have access after the proposed changes (`NOT_GRANTED`).",
                              "The member did not have access under the current policies (`NOT_GRANTED`), but will have access after the proposed changes (`GRANTED`).",
                              "This result can occur for the following reasons: * The member had access under the current policies (`GRANTED`), but their access after the proposed changes is `UNKNOWN`. * The member's access under the current policies is `UNKNOWN`, but they will not have access after the proposed changes (`NOT_GRANTED`).",
                              "This result can occur for the following reasons: * The member did not have access under the current policies (`NOT_GRANTED`), but their access after the proposed changes is `UNKNOWN`. * The member's access under the current policies is `UNKNOWN`, but they will have access after the proposed changes (`GRANTED`)."
                            ]
                          }
                        },
                        "description": "A summary and comparison of the member's access under the current (baseline) policies and the proposed (simulated) policies for a single access tuple. The evaluation of the member's access is reported in the AccessState field."
                      }
                    },
                    "description": "The difference between the member's access under the current (baseline) policies and the member's access under the proposed (simulated) policies. This field is only included for access tuples that were successfully replayed and had different results under the current policies and the proposed policies."
                  },
                  "name": {
                    "type": "string",
                    "description": "The resource name of the `ReplayResult`, in the following format: `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}/results/{replay-result-id}`, where `{resource-id}` is the ID of the project, folder, or organization that owns the Replay. Example: `projects/my-example-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36/results/1234`"
                  },
                  "error": {
                    "id": "GoogleRpcStatus",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The status code, which should be an enum value of google.rpc.Code."
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object. Contains field @type with type URL."
                          }
                        },
                        "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                      },
                      "message": {
                        "type": "string",
                        "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                      }
                    },
                    "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
                  },
                  "parent": {
                    "type": "string",
                    "description": "The Replay that the access tuple was included in."
                  },
                  "accessTuple": {
                    "id": "GoogleCloudPolicysimulatorV1AccessTuple",
                    "type": "object",
                    "properties": {
                      "principal": {
                        "type": "string",
                        "description": "Required. The member, or principal, whose access you want to check, in the form of the email address that represents that member. For example, `alice@example.com` or `my-service-account@my-project.iam.gserviceaccount.com`. The member must be a Google Account or a service account. Other types of members are not supported."
                      },
                      "permission": {
                        "type": "string",
                        "description": "Required. The IAM permission to check for the specified member and resource. For a complete list of IAM permissions, see https://cloud.google.com/iam/help/permissions/reference. For a complete list of predefined IAM roles and the permissions in each role, see https://cloud.google.com/iam/help/roles/reference."
                      },
                      "fullResourceName": {
                        "type": "string",
                        "description": "Required. The full resource name that identifies the resource. For example, `//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance`. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names."
                      }
                    },
                    "description": "The access tuple that was replayed. This field includes information about the member, resource, and permission that were involved in the access attempt."
                  },
                  "lastSeenDate": {
                    "id": "GoogleTypeDate",
                    "type": "object",
                    "properties": {
                      "day": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
                      },
                      "year": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
                      },
                      "month": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
                      }
                    },
                    "description": "The latest date this access tuple was seen in the logs."
                  }
                },
                "description": "The result of replaying a single access tuple against a simulated state."
              },
              "description": "The results of running a Replay."
            }
          },
          "description": "Response message for Simulator.ListReplayResults."
        }
      ]
  policysimulator.operations.get:
    description: |-
      Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/policysimulator/rest/v1/operations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleLongrunningOperation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "GoogleRpcStatus",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  policysimulator.operations.list:
    description: |-
      Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/policysimulator/rest/v1/operations/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleLongrunningListOperationsResponse",
          "type": "object",
          "properties": {
            "operations": {
              "type": "array",
              "items": {
                "id": "GoogleLongrunningOperation",
                "type": "object",
                "properties": {
                  "done": {
                    "type": "boolean",
                    "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
                  },
                  "name": {
                    "type": "string",
                    "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
                  },
                  "error": {
                    "id": "GoogleRpcStatus",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The status code, which should be an enum value of google.rpc.Code."
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object. Contains field @type with type URL."
                          }
                        },
                        "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                      },
                      "message": {
                        "type": "string",
                        "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                      }
                    },
                    "description": "The error result of the operation in case of failure or cancellation."
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "response": {
                    "type": "object",
                    "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  }
                },
                "description": "This resource represents a long-running operation that is the result of a network API call."
              },
              "description": "A list of operations that matches the specified filter in the request."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The standard List next-page token."
            }
          },
          "description": "The response message for Operations.ListOperations."
        }
      ]
  policysimulator.organizations.locations.replays.create:
    description: |-
      Creates and starts a Replay using the given ReplayConfig.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/policysimulator/rest/v1/organizations.locations.replays/create
    example:
      inputs: [
        {
          "id": "GoogleCloudPolicysimulatorV1Replay",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The resource name of the `Replay`, which has the following format: `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}`, where `{resource-id}` is the ID of the project, folder, or organization that owns the Replay. Example: `projects/my-example-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36`"
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "SUCCEEDED",
                "FAILED"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. The current state of the `Replay`.",
              "enumDescriptions": [
                "The state is unspecified.",
                "The `Replay` has not started yet.",
                "The `Replay` is currently running.",
                "The `Replay` has successfully completed.",
                "The `Replay` has finished with an error."
              ]
            },
            "config": {
              "id": "GoogleCloudPolicysimulatorV1ReplayConfig",
              "type": "object",
              "properties": {
                "logSource": {
                  "enum": [
                    "LOG_SOURCE_UNSPECIFIED",
                    "RECENT_ACCESSES"
                  ],
                  "type": "string",
                  "description": "The logs to use as input for the Replay.",
                  "enumDescriptions": [
                    "An unspecified log source. If the log source is unspecified, the Replay defaults to using `RECENT_ACCESSES`.",
                    "All access logs from the last 90 days. These logs may not include logs from the most recent 7 days."
                  ]
                },
                "policyOverlay": {
                  "type": "object",
                  "description": "A mapping of the resources that you want to simulate policies for and the policies that you want to simulate. Keys are the full resource names for the resources. For example, `//cloudresourcemanager.googleapis.com/projects/my-project`. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names. Values are Policy objects representing the policies that you want to simulate. Replays automatically take into account any IAM policies inherited through the resource hierarchy, and any policies set on descendant resources. You do not need to include these policies in the policy overlay.",
                  "additionalProperties": {
                    "id": "GoogleIamV1Policy",
                    "type": "object",
                    "properties": {
                      "etag": {
                        "type": "string",
                        "format": "byte",
                        "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
                      },
                      "version": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                      },
                      "bindings": {
                        "type": "array",
                        "items": {
                          "id": "GoogleIamV1Binding",
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                            },
                            "members": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                            },
                            "condition": {
                              "id": "GoogleTypeExpr",
                              "type": "object",
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                                },
                                "location": {
                                  "type": "string",
                                  "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                                },
                                "expression": {
                                  "type": "string",
                                  "description": "Textual representation of an expression in Common Expression Language syntax."
                                },
                                "description": {
                                  "type": "string",
                                  "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                                }
                              },
                              "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                            }
                          },
                          "description": "Associates `members` with a `role`."
                        },
                        "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
                      },
                      "auditConfigs": {
                        "type": "array",
                        "items": {
                          "id": "GoogleIamV1AuditConfig",
                          "type": "object",
                          "properties": {
                            "service": {
                              "type": "string",
                              "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                            },
                            "auditLogConfigs": {
                              "type": "array",
                              "items": {
                                "id": "GoogleIamV1AuditLogConfig",
                                "type": "object",
                                "properties": {
                                  "logType": {
                                    "enum": [
                                      "LOG_TYPE_UNSPECIFIED",
                                      "ADMIN_READ",
                                      "DATA_WRITE",
                                      "DATA_READ"
                                    ],
                                    "type": "string",
                                    "description": "The log type that this config enables.",
                                    "enumDescriptions": [
                                      "Default case. Should never be this.",
                                      "Admin reads. Example: CloudIAM getIamPolicy",
                                      "Data writes. Example: CloudSQL Users create",
                                      "Data reads. Example: CloudSQL Users list"
                                    ]
                                  },
                                  "exemptedMembers": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                                  }
                                },
                                "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                              },
                              "description": "The configuration for logging of each type of permission."
                            }
                          },
                          "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
                        },
                        "description": "Specifies cloud audit logging configuration for this policy."
                      }
                    },
                    "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
                  }
                }
              },
              "description": "Required. The configuration used for the `Replay`."
            },
            "resultsSummary": {
              "id": "GoogleCloudPolicysimulatorV1ReplayResultsSummary",
              "type": "object",
              "readOnly": true,
              "properties": {
                "logCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The total number of log entries replayed."
                },
                "errorCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of log entries that could not be replayed."
                },
                "newestDate": {
                  "id": "GoogleTypeDate",
                  "type": "object",
                  "properties": {
                    "day": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
                    },
                    "year": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
                    },
                    "month": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
                    }
                  },
                  "description": "The date of the newest log entry replayed."
                },
                "oldestDate": {
                  "id": "GoogleTypeDate",
                  "type": "object",
                  "properties": {
                    "day": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
                    },
                    "year": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
                    },
                    "month": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
                    }
                  },
                  "description": "The date of the oldest log entry replayed."
                },
                "unchangedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of replayed log entries with no difference between baseline and simulated policies."
                },
                "differenceCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of replayed log entries with a difference between baseline and simulated policies."
                }
              },
              "description": "Output only. Summary statistics about the replayed log entries."
            }
          },
          "description": "A resource describing a `Replay`, or simulation."
        }
      ]
      outputs: [
        {
          "id": "GoogleLongrunningOperation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "GoogleRpcStatus",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  policysimulator.organizations.locations.replays.get:
    description: |-
      Gets the specified Replay. Each `Replay` is available for at least 7 days.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/policysimulator/rest/v1/organizations.locations.replays/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  policysimulator.organizations.locations.replays.results.list:
    description: |-
      Lists the results of running a Replay.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/policysimulator/rest/v1/organizations.locations.replays.results/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudPolicysimulatorV1ListReplayResultsResponse",
          "type": "object",
          "properties": {
            "nextPageToken": {
              "type": "string",
              "description": "A token that you can use to retrieve the next page of ReplayResult objects. If this field is omitted, there are no subsequent pages."
            },
            "replayResults": {
              "type": "array",
              "items": {
                "id": "GoogleCloudPolicysimulatorV1ReplayResult",
                "type": "object",
                "properties": {
                  "diff": {
                    "id": "GoogleCloudPolicysimulatorV1ReplayDiff",
                    "type": "object",
                    "properties": {
                      "accessDiff": {
                        "id": "GoogleCloudPolicysimulatorV1AccessStateDiff",
                        "type": "object",
                        "properties": {
                          "baseline": {
                            "id": "GoogleCloudPolicysimulatorV1ExplainedAccess",
                            "type": "object",
                            "properties": {
                              "errors": {
                                "type": "array",
                                "items": {
                                  "id": "GoogleRpcStatus",
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The status code, which should be an enum value of google.rpc.Code."
                                    },
                                    "details": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "any",
                                          "description": "Properties of the object. Contains field @type with type URL."
                                        }
                                      },
                                      "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                                    },
                                    "message": {
                                      "type": "string",
                                      "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                                    }
                                  },
                                  "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
                                },
                                "description": "If the AccessState is `UNKNOWN`, this field contains a list of errors explaining why the result is `UNKNOWN`. If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is omitted."
                              },
                              "policies": {
                                "type": "array",
                                "items": {
                                  "id": "GoogleCloudPolicysimulatorV1ExplainedPolicy",
                                  "type": "object",
                                  "properties": {
                                    "access": {
                                      "enum": [
                                        "ACCESS_STATE_UNSPECIFIED",
                                        "GRANTED",
                                        "NOT_GRANTED",
                                        "UNKNOWN_CONDITIONAL",
                                        "UNKNOWN_INFO_DENIED"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether _this policy_ provides the specified permission to the specified member for the specified resource. This field does _not_ indicate whether the member actually has the permission for the resource. There might be another policy that overrides this policy. To determine whether the member actually has the permission, use the `access` field in the TroubleshootIamPolicyResponse.",
                                      "enumDescriptions": [
                                        "The access state is not specified.",
                                        "The member has the permission.",
                                        "The member does not have the permission.",
                                        "The member has the permission only if a condition expression evaluates to `true`.",
                                        "The user who created the Replay does not have access to all of the policies that Policy Simulator needs to evaluate."
                                      ]
                                    },
                                    "policy": {
                                      "id": "GoogleIamV1Policy",
                                      "type": "object",
                                      "properties": {
                                        "etag": {
                                          "type": "string",
                                          "format": "byte",
                                          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
                                        },
                                        "version": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                                        },
                                        "bindings": {
                                          "type": "array",
                                          "items": {
                                            "id": "GoogleIamV1Binding",
                                            "type": "object",
                                            "properties": {
                                              "role": {
                                                "type": "string",
                                                "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                                              },
                                              "members": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                                              },
                                              "condition": {
                                                "id": "GoogleTypeExpr",
                                                "type": "object",
                                                "properties": {
                                                  "title": {
                                                    "type": "string",
                                                    "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                                                  },
                                                  "location": {
                                                    "type": "string",
                                                    "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                                                  },
                                                  "expression": {
                                                    "type": "string",
                                                    "description": "Textual representation of an expression in Common Expression Language syntax."
                                                  },
                                                  "description": {
                                                    "type": "string",
                                                    "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                                                  }
                                                },
                                                "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                                              }
                                            },
                                            "description": "Associates `members` with a `role`."
                                          },
                                          "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
                                        },
                                        "auditConfigs": {
                                          "type": "array",
                                          "items": {
                                            "id": "GoogleIamV1AuditConfig",
                                            "type": "object",
                                            "properties": {
                                              "service": {
                                                "type": "string",
                                                "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                                              },
                                              "auditLogConfigs": {
                                                "type": "array",
                                                "items": {
                                                  "id": "GoogleIamV1AuditLogConfig",
                                                  "type": "object",
                                                  "properties": {
                                                    "logType": {
                                                      "enum": [
                                                        "LOG_TYPE_UNSPECIFIED",
                                                        "ADMIN_READ",
                                                        "DATA_WRITE",
                                                        "DATA_READ"
                                                      ],
                                                      "type": "string",
                                                      "description": "The log type that this config enables.",
                                                      "enumDescriptions": [
                                                        "Default case. Should never be this.",
                                                        "Admin reads. Example: CloudIAM getIamPolicy",
                                                        "Data writes. Example: CloudSQL Users create",
                                                        "Data reads. Example: CloudSQL Users list"
                                                      ]
                                                    },
                                                    "exemptedMembers": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                                                    }
                                                  },
                                                  "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                                                },
                                                "description": "The configuration for logging of each type of permission."
                                              }
                                            },
                                            "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
                                          },
                                          "description": "Specifies cloud audit logging configuration for this policy."
                                        }
                                      },
                                      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
                                    },
                                    "relevance": {
                                      "enum": [
                                        "HEURISTIC_RELEVANCE_UNSPECIFIED",
                                        "NORMAL",
                                        "HIGH"
                                      ],
                                      "type": "string",
                                      "description": "The relevance of this policy to the overall determination in the TroubleshootIamPolicyResponse. If the user who created the Replay does not have access to the policy, this field is omitted.",
                                      "enumDescriptions": [
                                        "Reserved for future use.",
                                        "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
                                        "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
                                      ]
                                    },
                                    "fullResourceName": {
                                      "type": "string",
                                      "description": "The full resource name that identifies the resource. For example, `//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance`. If the user who created the Replay does not have access to the policy, this field is omitted. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names."
                                    },
                                    "bindingExplanations": {
                                      "type": "array",
                                      "items": {
                                        "id": "GoogleCloudPolicysimulatorV1BindingExplanation",
                                        "type": "object",
                                        "properties": {
                                          "role": {
                                            "type": "string",
                                            "description": "The role that this binding grants. For example, `roles/compute.serviceAgent`. For a complete list of predefined IAM roles, as well as the permissions in each role, see https://cloud.google.com/iam/help/roles/reference."
                                          },
                                          "access": {
                                            "enum": [
                                              "ACCESS_STATE_UNSPECIFIED",
                                              "GRANTED",
                                              "NOT_GRANTED",
                                              "UNKNOWN_CONDITIONAL",
                                              "UNKNOWN_INFO_DENIED"
                                            ],
                                            "type": "string",
                                            "description": "Required. Indicates whether _this binding_ provides the specified permission to the specified member for the specified resource. This field does _not_ indicate whether the member actually has the permission for the resource. There might be another binding that overrides this binding. To determine whether the member actually has the permission, use the `access` field in the TroubleshootIamPolicyResponse.",
                                            "enumDescriptions": [
                                              "The access state is not specified.",
                                              "The member has the permission.",
                                              "The member does not have the permission.",
                                              "The member has the permission only if a condition expression evaluates to `true`.",
                                              "The user who created the Replay does not have access to all of the policies that Policy Simulator needs to evaluate."
                                            ]
                                          },
                                          "condition": {
                                            "id": "GoogleTypeExpr",
                                            "type": "object",
                                            "properties": {
                                              "title": {
                                                "type": "string",
                                                "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                                              },
                                              "location": {
                                                "type": "string",
                                                "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                                              },
                                              "expression": {
                                                "type": "string",
                                                "description": "Textual representation of an expression in Common Expression Language syntax."
                                              },
                                              "description": {
                                                "type": "string",
                                                "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                                              }
                                            },
                                            "description": "A condition expression that prevents this binding from granting access unless the expression evaluates to `true`. To learn about IAM Conditions, see https://cloud.google.com/iam/docs/conditions-overview."
                                          },
                                          "relevance": {
                                            "enum": [
                                              "HEURISTIC_RELEVANCE_UNSPECIFIED",
                                              "NORMAL",
                                              "HIGH"
                                            ],
                                            "type": "string",
                                            "description": "The relevance of this binding to the overall determination for the entire policy.",
                                            "enumDescriptions": [
                                              "Reserved for future use.",
                                              "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
                                              "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
                                            ]
                                          },
                                          "memberships": {
                                            "type": "object",
                                            "description": "Indicates whether each member in the binding includes the member specified in the request, either directly or indirectly. Each key identifies a member in the binding, and each value indicates whether the member in the binding includes the member in the request. For example, suppose that a binding includes the following members: * `user:alice@example.com` * `group:product-eng@example.com` The member in the replayed access tuple is `user:bob@example.com`. This user is a member of the group `group:product-eng@example.com`. For the first member in the binding, the key is `user:alice@example.com`, and the `membership` field in the value is set to `MEMBERSHIP_NOT_INCLUDED`. For the second member in the binding, the key is `group:product-eng@example.com`, and the `membership` field in the value is set to `MEMBERSHIP_INCLUDED`.",
                                            "additionalProperties": {
                                              "id": "GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership",
                                              "type": "object",
                                              "properties": {
                                                "relevance": {
                                                  "enum": [
                                                    "HEURISTIC_RELEVANCE_UNSPECIFIED",
                                                    "NORMAL",
                                                    "HIGH"
                                                  ],
                                                  "type": "string",
                                                  "description": "The relevance of the member's status to the overall determination for the binding.",
                                                  "enumDescriptions": [
                                                    "Reserved for future use.",
                                                    "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
                                                    "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
                                                  ]
                                                },
                                                "membership": {
                                                  "enum": [
                                                    "MEMBERSHIP_UNSPECIFIED",
                                                    "MEMBERSHIP_INCLUDED",
                                                    "MEMBERSHIP_NOT_INCLUDED",
                                                    "MEMBERSHIP_UNKNOWN_INFO_DENIED",
                                                    "MEMBERSHIP_UNKNOWN_UNSUPPORTED"
                                                  ],
                                                  "type": "string",
                                                  "description": "Indicates whether the binding includes the member.",
                                                  "enumDescriptions": [
                                                    "The membership is not specified.",
                                                    "The binding includes the member. The member can be included directly or indirectly. For example: * A member is included directly if that member is listed in the binding. * A member is included indirectly if that member is in a Google group or Google Workspace domain that is listed in the binding.",
                                                    "The binding does not include the member.",
                                                    "The user who created the Replay is not allowed to access the binding.",
                                                    "The member is an unsupported type. Only Google Accounts and service accounts are supported."
                                                  ]
                                                }
                                              },
                                              "description": "Details about whether the binding includes the member."
                                            }
                                          },
                                          "rolePermission": {
                                            "enum": [
                                              "ROLE_PERMISSION_UNSPECIFIED",
                                              "ROLE_PERMISSION_INCLUDED",
                                              "ROLE_PERMISSION_NOT_INCLUDED",
                                              "ROLE_PERMISSION_UNKNOWN_INFO_DENIED"
                                            ],
                                            "type": "string",
                                            "description": "Indicates whether the role granted by this binding contains the specified permission.",
                                            "enumDescriptions": [
                                              "The inclusion of the permission is not specified.",
                                              "The permission is included in the role.",
                                              "The permission is not included in the role.",
                                              "The user who created the Replay is not allowed to access the binding."
                                            ]
                                          },
                                          "rolePermissionRelevance": {
                                            "enum": [
                                              "HEURISTIC_RELEVANCE_UNSPECIFIED",
                                              "NORMAL",
                                              "HIGH"
                                            ],
                                            "type": "string",
                                            "description": "The relevance of the permission's existence, or nonexistence, in the role to the overall determination for the entire policy.",
                                            "enumDescriptions": [
                                              "Reserved for future use.",
                                              "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
                                              "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
                                            ]
                                          }
                                        },
                                        "description": "Details about how a binding in a policy affects a member's ability to use a permission."
                                      },
                                      "description": "Details about how each binding in the policy affects the member's ability, or inability, to use the permission for the resource. If the user who created the Replay does not have access to the policy, this field is omitted."
                                    }
                                  },
                                  "description": "Details about how a specific IAM Policy contributed to the access check."
                                },
                                "description": "If the AccessState is `UNKNOWN`, this field contains the policies that led to that result. If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is omitted."
                              },
                              "accessState": {
                                "enum": [
                                  "ACCESS_STATE_UNSPECIFIED",
                                  "GRANTED",
                                  "NOT_GRANTED",
                                  "UNKNOWN_CONDITIONAL",
                                  "UNKNOWN_INFO_DENIED"
                                ],
                                "type": "string",
                                "description": "Whether the member in the access tuple has permission to access the resource in the access tuple under the given policies.",
                                "enumDescriptions": [
                                  "The access state is not specified.",
                                  "The member has the permission.",
                                  "The member does not have the permission.",
                                  "The member has the permission only if a condition expression evaluates to `true`.",
                                  "The user who created the Replay does not have access to all of the policies that Policy Simulator needs to evaluate."
                                ]
                              }
                            },
                            "description": "The results of evaluating the access tuple under the current (baseline) policies. If the AccessState couldn't be fully evaluated, this field explains why."
                          },
                          "simulated": {
                            "id": "GoogleCloudPolicysimulatorV1ExplainedAccess",
                            "type": "object",
                            "properties": {
                              "errors": {
                                "type": "array",
                                "items": {
                                  "id": "GoogleRpcStatus",
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The status code, which should be an enum value of google.rpc.Code."
                                    },
                                    "details": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "any",
                                          "description": "Properties of the object. Contains field @type with type URL."
                                        }
                                      },
                                      "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                                    },
                                    "message": {
                                      "type": "string",
                                      "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                                    }
                                  },
                                  "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
                                },
                                "description": "If the AccessState is `UNKNOWN`, this field contains a list of errors explaining why the result is `UNKNOWN`. If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is omitted."
                              },
                              "policies": {
                                "type": "array",
                                "items": {
                                  "id": "GoogleCloudPolicysimulatorV1ExplainedPolicy",
                                  "type": "object",
                                  "properties": {
                                    "access": {
                                      "enum": [
                                        "ACCESS_STATE_UNSPECIFIED",
                                        "GRANTED",
                                        "NOT_GRANTED",
                                        "UNKNOWN_CONDITIONAL",
                                        "UNKNOWN_INFO_DENIED"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether _this policy_ provides the specified permission to the specified member for the specified resource. This field does _not_ indicate whether the member actually has the permission for the resource. There might be another policy that overrides this policy. To determine whether the member actually has the permission, use the `access` field in the TroubleshootIamPolicyResponse.",
                                      "enumDescriptions": [
                                        "The access state is not specified.",
                                        "The member has the permission.",
                                        "The member does not have the permission.",
                                        "The member has the permission only if a condition expression evaluates to `true`.",
                                        "The user who created the Replay does not have access to all of the policies that Policy Simulator needs to evaluate."
                                      ]
                                    },
                                    "policy": {
                                      "id": "GoogleIamV1Policy",
                                      "type": "object",
                                      "properties": {
                                        "etag": {
                                          "type": "string",
                                          "format": "byte",
                                          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
                                        },
                                        "version": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                                        },
                                        "bindings": {
                                          "type": "array",
                                          "items": {
                                            "id": "GoogleIamV1Binding",
                                            "type": "object",
                                            "properties": {
                                              "role": {
                                                "type": "string",
                                                "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                                              },
                                              "members": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                                              },
                                              "condition": {
                                                "id": "GoogleTypeExpr",
                                                "type": "object",
                                                "properties": {
                                                  "title": {
                                                    "type": "string",
                                                    "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                                                  },
                                                  "location": {
                                                    "type": "string",
                                                    "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                                                  },
                                                  "expression": {
                                                    "type": "string",
                                                    "description": "Textual representation of an expression in Common Expression Language syntax."
                                                  },
                                                  "description": {
                                                    "type": "string",
                                                    "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                                                  }
                                                },
                                                "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                                              }
                                            },
                                            "description": "Associates `members` with a `role`."
                                          },
                                          "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
                                        },
                                        "auditConfigs": {
                                          "type": "array",
                                          "items": {
                                            "id": "GoogleIamV1AuditConfig",
                                            "type": "object",
                                            "properties": {
                                              "service": {
                                                "type": "string",
                                                "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                                              },
                                              "auditLogConfigs": {
                                                "type": "array",
                                                "items": {
                                                  "id": "GoogleIamV1AuditLogConfig",
                                                  "type": "object",
                                                  "properties": {
                                                    "logType": {
                                                      "enum": [
                                                        "LOG_TYPE_UNSPECIFIED",
                                                        "ADMIN_READ",
                                                        "DATA_WRITE",
                                                        "DATA_READ"
                                                      ],
                                                      "type": "string",
                                                      "description": "The log type that this config enables.",
                                                      "enumDescriptions": [
                                                        "Default case. Should never be this.",
                                                        "Admin reads. Example: CloudIAM getIamPolicy",
                                                        "Data writes. Example: CloudSQL Users create",
                                                        "Data reads. Example: CloudSQL Users list"
                                                      ]
                                                    },
                                                    "exemptedMembers": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                                                    }
                                                  },
                                                  "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                                                },
                                                "description": "The configuration for logging of each type of permission."
                                              }
                                            },
                                            "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
                                          },
                                          "description": "Specifies cloud audit logging configuration for this policy."
                                        }
                                      },
                                      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
                                    },
                                    "relevance": {
                                      "enum": [
                                        "HEURISTIC_RELEVANCE_UNSPECIFIED",
                                        "NORMAL",
                                        "HIGH"
                                      ],
                                      "type": "string",
                                      "description": "The relevance of this policy to the overall determination in the TroubleshootIamPolicyResponse. If the user who created the Replay does not have access to the policy, this field is omitted.",
                                      "enumDescriptions": [
                                        "Reserved for future use.",
                                        "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
                                        "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
                                      ]
                                    },
                                    "fullResourceName": {
                                      "type": "string",
                                      "description": "The full resource name that identifies the resource. For example, `//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance`. If the user who created the Replay does not have access to the policy, this field is omitted. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names."
                                    },
                                    "bindingExplanations": {
                                      "type": "array",
                                      "items": {
                                        "id": "GoogleCloudPolicysimulatorV1BindingExplanation",
                                        "type": "object",
                                        "properties": {
                                          "role": {
                                            "type": "string",
                                            "description": "The role that this binding grants. For example, `roles/compute.serviceAgent`. For a complete list of predefined IAM roles, as well as the permissions in each role, see https://cloud.google.com/iam/help/roles/reference."
                                          },
                                          "access": {
                                            "enum": [
                                              "ACCESS_STATE_UNSPECIFIED",
                                              "GRANTED",
                                              "NOT_GRANTED",
                                              "UNKNOWN_CONDITIONAL",
                                              "UNKNOWN_INFO_DENIED"
                                            ],
                                            "type": "string",
                                            "description": "Required. Indicates whether _this binding_ provides the specified permission to the specified member for the specified resource. This field does _not_ indicate whether the member actually has the permission for the resource. There might be another binding that overrides this binding. To determine whether the member actually has the permission, use the `access` field in the TroubleshootIamPolicyResponse.",
                                            "enumDescriptions": [
                                              "The access state is not specified.",
                                              "The member has the permission.",
                                              "The member does not have the permission.",
                                              "The member has the permission only if a condition expression evaluates to `true`.",
                                              "The user who created the Replay does not have access to all of the policies that Policy Simulator needs to evaluate."
                                            ]
                                          },
                                          "condition": {
                                            "id": "GoogleTypeExpr",
                                            "type": "object",
                                            "properties": {
                                              "title": {
                                                "type": "string",
                                                "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                                              },
                                              "location": {
                                                "type": "string",
                                                "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                                              },
                                              "expression": {
                                                "type": "string",
                                                "description": "Textual representation of an expression in Common Expression Language syntax."
                                              },
                                              "description": {
                                                "type": "string",
                                                "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                                              }
                                            },
                                            "description": "A condition expression that prevents this binding from granting access unless the expression evaluates to `true`. To learn about IAM Conditions, see https://cloud.google.com/iam/docs/conditions-overview."
                                          },
                                          "relevance": {
                                            "enum": [
                                              "HEURISTIC_RELEVANCE_UNSPECIFIED",
                                              "NORMAL",
                                              "HIGH"
                                            ],
                                            "type": "string",
                                            "description": "The relevance of this binding to the overall determination for the entire policy.",
                                            "enumDescriptions": [
                                              "Reserved for future use.",
                                              "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
                                              "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
                                            ]
                                          },
                                          "memberships": {
                                            "type": "object",
                                            "description": "Indicates whether each member in the binding includes the member specified in the request, either directly or indirectly. Each key identifies a member in the binding, and each value indicates whether the member in the binding includes the member in the request. For example, suppose that a binding includes the following members: * `user:alice@example.com` * `group:product-eng@example.com` The member in the replayed access tuple is `user:bob@example.com`. This user is a member of the group `group:product-eng@example.com`. For the first member in the binding, the key is `user:alice@example.com`, and the `membership` field in the value is set to `MEMBERSHIP_NOT_INCLUDED`. For the second member in the binding, the key is `group:product-eng@example.com`, and the `membership` field in the value is set to `MEMBERSHIP_INCLUDED`.",
                                            "additionalProperties": {
                                              "id": "GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership",
                                              "type": "object",
                                              "properties": {
                                                "relevance": {
                                                  "enum": [
                                                    "HEURISTIC_RELEVANCE_UNSPECIFIED",
                                                    "NORMAL",
                                                    "HIGH"
                                                  ],
                                                  "type": "string",
                                                  "description": "The relevance of the member's status to the overall determination for the binding.",
                                                  "enumDescriptions": [
                                                    "Reserved for future use.",
                                                    "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
                                                    "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
                                                  ]
                                                },
                                                "membership": {
                                                  "enum": [
                                                    "MEMBERSHIP_UNSPECIFIED",
                                                    "MEMBERSHIP_INCLUDED",
                                                    "MEMBERSHIP_NOT_INCLUDED",
                                                    "MEMBERSHIP_UNKNOWN_INFO_DENIED",
                                                    "MEMBERSHIP_UNKNOWN_UNSUPPORTED"
                                                  ],
                                                  "type": "string",
                                                  "description": "Indicates whether the binding includes the member.",
                                                  "enumDescriptions": [
                                                    "The membership is not specified.",
                                                    "The binding includes the member. The member can be included directly or indirectly. For example: * A member is included directly if that member is listed in the binding. * A member is included indirectly if that member is in a Google group or Google Workspace domain that is listed in the binding.",
                                                    "The binding does not include the member.",
                                                    "The user who created the Replay is not allowed to access the binding.",
                                                    "The member is an unsupported type. Only Google Accounts and service accounts are supported."
                                                  ]
                                                }
                                              },
                                              "description": "Details about whether the binding includes the member."
                                            }
                                          },
                                          "rolePermission": {
                                            "enum": [
                                              "ROLE_PERMISSION_UNSPECIFIED",
                                              "ROLE_PERMISSION_INCLUDED",
                                              "ROLE_PERMISSION_NOT_INCLUDED",
                                              "ROLE_PERMISSION_UNKNOWN_INFO_DENIED"
                                            ],
                                            "type": "string",
                                            "description": "Indicates whether the role granted by this binding contains the specified permission.",
                                            "enumDescriptions": [
                                              "The inclusion of the permission is not specified.",
                                              "The permission is included in the role.",
                                              "The permission is not included in the role.",
                                              "The user who created the Replay is not allowed to access the binding."
                                            ]
                                          },
                                          "rolePermissionRelevance": {
                                            "enum": [
                                              "HEURISTIC_RELEVANCE_UNSPECIFIED",
                                              "NORMAL",
                                              "HIGH"
                                            ],
                                            "type": "string",
                                            "description": "The relevance of the permission's existence, or nonexistence, in the role to the overall determination for the entire policy.",
                                            "enumDescriptions": [
                                              "Reserved for future use.",
                                              "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
                                              "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
                                            ]
                                          }
                                        },
                                        "description": "Details about how a binding in a policy affects a member's ability to use a permission."
                                      },
                                      "description": "Details about how each binding in the policy affects the member's ability, or inability, to use the permission for the resource. If the user who created the Replay does not have access to the policy, this field is omitted."
                                    }
                                  },
                                  "description": "Details about how a specific IAM Policy contributed to the access check."
                                },
                                "description": "If the AccessState is `UNKNOWN`, this field contains the policies that led to that result. If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is omitted."
                              },
                              "accessState": {
                                "enum": [
                                  "ACCESS_STATE_UNSPECIFIED",
                                  "GRANTED",
                                  "NOT_GRANTED",
                                  "UNKNOWN_CONDITIONAL",
                                  "UNKNOWN_INFO_DENIED"
                                ],
                                "type": "string",
                                "description": "Whether the member in the access tuple has permission to access the resource in the access tuple under the given policies.",
                                "enumDescriptions": [
                                  "The access state is not specified.",
                                  "The member has the permission.",
                                  "The member does not have the permission.",
                                  "The member has the permission only if a condition expression evaluates to `true`.",
                                  "The user who created the Replay does not have access to all of the policies that Policy Simulator needs to evaluate."
                                ]
                              }
                            },
                            "description": "The results of evaluating the access tuple under the proposed (simulated) policies. If the AccessState couldn't be fully evaluated, this field explains why."
                          },
                          "accessChange": {
                            "enum": [
                              "ACCESS_CHANGE_TYPE_UNSPECIFIED",
                              "NO_CHANGE",
                              "UNKNOWN_CHANGE",
                              "ACCESS_REVOKED",
                              "ACCESS_GAINED",
                              "ACCESS_MAYBE_REVOKED",
                              "ACCESS_MAYBE_GAINED"
                            ],
                            "type": "string",
                            "description": "How the member's access, specified in the AccessState field, changed between the current (baseline) policies and proposed (simulated) policies.",
                            "enumDescriptions": [
                              "The access change is unspecified.",
                              "The member's access did not change. This includes the case where both baseline and simulated are UNKNOWN, but the unknown information is equivalent.",
                              "The member's access under both the current policies and the proposed policies is `UNKNOWN`, but the unknown information differs between them.",
                              "The member had access under the current policies (`GRANTED`), but will no longer have access after the proposed changes (`NOT_GRANTED`).",
                              "The member did not have access under the current policies (`NOT_GRANTED`), but will have access after the proposed changes (`GRANTED`).",
                              "This result can occur for the following reasons: * The member had access under the current policies (`GRANTED`), but their access after the proposed changes is `UNKNOWN`. * The member's access under the current policies is `UNKNOWN`, but they will not have access after the proposed changes (`NOT_GRANTED`).",
                              "This result can occur for the following reasons: * The member did not have access under the current policies (`NOT_GRANTED`), but their access after the proposed changes is `UNKNOWN`. * The member's access under the current policies is `UNKNOWN`, but they will have access after the proposed changes (`GRANTED`)."
                            ]
                          }
                        },
                        "description": "A summary and comparison of the member's access under the current (baseline) policies and the proposed (simulated) policies for a single access tuple. The evaluation of the member's access is reported in the AccessState field."
                      }
                    },
                    "description": "The difference between the member's access under the current (baseline) policies and the member's access under the proposed (simulated) policies. This field is only included for access tuples that were successfully replayed and had different results under the current policies and the proposed policies."
                  },
                  "name": {
                    "type": "string",
                    "description": "The resource name of the `ReplayResult`, in the following format: `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}/results/{replay-result-id}`, where `{resource-id}` is the ID of the project, folder, or organization that owns the Replay. Example: `projects/my-example-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36/results/1234`"
                  },
                  "error": {
                    "id": "GoogleRpcStatus",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The status code, which should be an enum value of google.rpc.Code."
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object. Contains field @type with type URL."
                          }
                        },
                        "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                      },
                      "message": {
                        "type": "string",
                        "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                      }
                    },
                    "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
                  },
                  "parent": {
                    "type": "string",
                    "description": "The Replay that the access tuple was included in."
                  },
                  "accessTuple": {
                    "id": "GoogleCloudPolicysimulatorV1AccessTuple",
                    "type": "object",
                    "properties": {
                      "principal": {
                        "type": "string",
                        "description": "Required. The member, or principal, whose access you want to check, in the form of the email address that represents that member. For example, `alice@example.com` or `my-service-account@my-project.iam.gserviceaccount.com`. The member must be a Google Account or a service account. Other types of members are not supported."
                      },
                      "permission": {
                        "type": "string",
                        "description": "Required. The IAM permission to check for the specified member and resource. For a complete list of IAM permissions, see https://cloud.google.com/iam/help/permissions/reference. For a complete list of predefined IAM roles and the permissions in each role, see https://cloud.google.com/iam/help/roles/reference."
                      },
                      "fullResourceName": {
                        "type": "string",
                        "description": "Required. The full resource name that identifies the resource. For example, `//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance`. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names."
                      }
                    },
                    "description": "The access tuple that was replayed. This field includes information about the member, resource, and permission that were involved in the access attempt."
                  },
                  "lastSeenDate": {
                    "id": "GoogleTypeDate",
                    "type": "object",
                    "properties": {
                      "day": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
                      },
                      "year": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
                      },
                      "month": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
                      }
                    },
                    "description": "The latest date this access tuple was seen in the logs."
                  }
                },
                "description": "The result of replaying a single access tuple against a simulated state."
              },
              "description": "The results of running a Replay."
            }
          },
          "description": "Response message for Simulator.ListReplayResults."
        }
      ]
  policysimulator.projects.locations.replays.create:
    description: |-
      Creates and starts a Replay using the given ReplayConfig.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/policysimulator/rest/v1/projects.locations.replays/create
    example:
      inputs: [
        {
          "id": "GoogleCloudPolicysimulatorV1Replay",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The resource name of the `Replay`, which has the following format: `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}`, where `{resource-id}` is the ID of the project, folder, or organization that owns the Replay. Example: `projects/my-example-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36`"
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "PENDING",
                "RUNNING",
                "SUCCEEDED",
                "FAILED"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. The current state of the `Replay`.",
              "enumDescriptions": [
                "The state is unspecified.",
                "The `Replay` has not started yet.",
                "The `Replay` is currently running.",
                "The `Replay` has successfully completed.",
                "The `Replay` has finished with an error."
              ]
            },
            "config": {
              "id": "GoogleCloudPolicysimulatorV1ReplayConfig",
              "type": "object",
              "properties": {
                "logSource": {
                  "enum": [
                    "LOG_SOURCE_UNSPECIFIED",
                    "RECENT_ACCESSES"
                  ],
                  "type": "string",
                  "description": "The logs to use as input for the Replay.",
                  "enumDescriptions": [
                    "An unspecified log source. If the log source is unspecified, the Replay defaults to using `RECENT_ACCESSES`.",
                    "All access logs from the last 90 days. These logs may not include logs from the most recent 7 days."
                  ]
                },
                "policyOverlay": {
                  "type": "object",
                  "description": "A mapping of the resources that you want to simulate policies for and the policies that you want to simulate. Keys are the full resource names for the resources. For example, `//cloudresourcemanager.googleapis.com/projects/my-project`. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names. Values are Policy objects representing the policies that you want to simulate. Replays automatically take into account any IAM policies inherited through the resource hierarchy, and any policies set on descendant resources. You do not need to include these policies in the policy overlay.",
                  "additionalProperties": {
                    "id": "GoogleIamV1Policy",
                    "type": "object",
                    "properties": {
                      "etag": {
                        "type": "string",
                        "format": "byte",
                        "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
                      },
                      "version": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                      },
                      "bindings": {
                        "type": "array",
                        "items": {
                          "id": "GoogleIamV1Binding",
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                            },
                            "members": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                            },
                            "condition": {
                              "id": "GoogleTypeExpr",
                              "type": "object",
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                                },
                                "location": {
                                  "type": "string",
                                  "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                                },
                                "expression": {
                                  "type": "string",
                                  "description": "Textual representation of an expression in Common Expression Language syntax."
                                },
                                "description": {
                                  "type": "string",
                                  "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                                }
                              },
                              "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                            }
                          },
                          "description": "Associates `members` with a `role`."
                        },
                        "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
                      },
                      "auditConfigs": {
                        "type": "array",
                        "items": {
                          "id": "GoogleIamV1AuditConfig",
                          "type": "object",
                          "properties": {
                            "service": {
                              "type": "string",
                              "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                            },
                            "auditLogConfigs": {
                              "type": "array",
                              "items": {
                                "id": "GoogleIamV1AuditLogConfig",
                                "type": "object",
                                "properties": {
                                  "logType": {
                                    "enum": [
                                      "LOG_TYPE_UNSPECIFIED",
                                      "ADMIN_READ",
                                      "DATA_WRITE",
                                      "DATA_READ"
                                    ],
                                    "type": "string",
                                    "description": "The log type that this config enables.",
                                    "enumDescriptions": [
                                      "Default case. Should never be this.",
                                      "Admin reads. Example: CloudIAM getIamPolicy",
                                      "Data writes. Example: CloudSQL Users create",
                                      "Data reads. Example: CloudSQL Users list"
                                    ]
                                  },
                                  "exemptedMembers": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                                  }
                                },
                                "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                              },
                              "description": "The configuration for logging of each type of permission."
                            }
                          },
                          "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
                        },
                        "description": "Specifies cloud audit logging configuration for this policy."
                      }
                    },
                    "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
                  }
                }
              },
              "description": "Required. The configuration used for the `Replay`."
            },
            "resultsSummary": {
              "id": "GoogleCloudPolicysimulatorV1ReplayResultsSummary",
              "type": "object",
              "readOnly": true,
              "properties": {
                "logCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The total number of log entries replayed."
                },
                "errorCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of log entries that could not be replayed."
                },
                "newestDate": {
                  "id": "GoogleTypeDate",
                  "type": "object",
                  "properties": {
                    "day": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
                    },
                    "year": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
                    },
                    "month": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
                    }
                  },
                  "description": "The date of the newest log entry replayed."
                },
                "oldestDate": {
                  "id": "GoogleTypeDate",
                  "type": "object",
                  "properties": {
                    "day": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
                    },
                    "year": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
                    },
                    "month": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
                    }
                  },
                  "description": "The date of the oldest log entry replayed."
                },
                "unchangedCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of replayed log entries with no difference between baseline and simulated policies."
                },
                "differenceCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of replayed log entries with a difference between baseline and simulated policies."
                }
              },
              "description": "Output only. Summary statistics about the replayed log entries."
            }
          },
          "description": "A resource describing a `Replay`, or simulation."
        }
      ]
      outputs: [
        {
          "id": "GoogleLongrunningOperation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "GoogleRpcStatus",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  policysimulator.projects.locations.replays.get:
    description: |-
      Gets the specified Replay. Each `Replay` is available for at least 7 days.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/policysimulator/rest/v1/projects.locations.replays/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  policysimulator.projects.locations.replays.results.list:
    description: |-
      Lists the results of running a Replay.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/policysimulator/rest/v1/projects.locations.replays.results/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "GoogleCloudPolicysimulatorV1ListReplayResultsResponse",
          "type": "object",
          "properties": {
            "nextPageToken": {
              "type": "string",
              "description": "A token that you can use to retrieve the next page of ReplayResult objects. If this field is omitted, there are no subsequent pages."
            },
            "replayResults": {
              "type": "array",
              "items": {
                "id": "GoogleCloudPolicysimulatorV1ReplayResult",
                "type": "object",
                "properties": {
                  "diff": {
                    "id": "GoogleCloudPolicysimulatorV1ReplayDiff",
                    "type": "object",
                    "properties": {
                      "accessDiff": {
                        "id": "GoogleCloudPolicysimulatorV1AccessStateDiff",
                        "type": "object",
                        "properties": {
                          "baseline": {
                            "id": "GoogleCloudPolicysimulatorV1ExplainedAccess",
                            "type": "object",
                            "properties": {
                              "errors": {
                                "type": "array",
                                "items": {
                                  "id": "GoogleRpcStatus",
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The status code, which should be an enum value of google.rpc.Code."
                                    },
                                    "details": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "any",
                                          "description": "Properties of the object. Contains field @type with type URL."
                                        }
                                      },
                                      "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                                    },
                                    "message": {
                                      "type": "string",
                                      "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                                    }
                                  },
                                  "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
                                },
                                "description": "If the AccessState is `UNKNOWN`, this field contains a list of errors explaining why the result is `UNKNOWN`. If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is omitted."
                              },
                              "policies": {
                                "type": "array",
                                "items": {
                                  "id": "GoogleCloudPolicysimulatorV1ExplainedPolicy",
                                  "type": "object",
                                  "properties": {
                                    "access": {
                                      "enum": [
                                        "ACCESS_STATE_UNSPECIFIED",
                                        "GRANTED",
                                        "NOT_GRANTED",
                                        "UNKNOWN_CONDITIONAL",
                                        "UNKNOWN_INFO_DENIED"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether _this policy_ provides the specified permission to the specified member for the specified resource. This field does _not_ indicate whether the member actually has the permission for the resource. There might be another policy that overrides this policy. To determine whether the member actually has the permission, use the `access` field in the TroubleshootIamPolicyResponse.",
                                      "enumDescriptions": [
                                        "The access state is not specified.",
                                        "The member has the permission.",
                                        "The member does not have the permission.",
                                        "The member has the permission only if a condition expression evaluates to `true`.",
                                        "The user who created the Replay does not have access to all of the policies that Policy Simulator needs to evaluate."
                                      ]
                                    },
                                    "policy": {
                                      "id": "GoogleIamV1Policy",
                                      "type": "object",
                                      "properties": {
                                        "etag": {
                                          "type": "string",
                                          "format": "byte",
                                          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
                                        },
                                        "version": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                                        },
                                        "bindings": {
                                          "type": "array",
                                          "items": {
                                            "id": "GoogleIamV1Binding",
                                            "type": "object",
                                            "properties": {
                                              "role": {
                                                "type": "string",
                                                "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                                              },
                                              "members": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                                              },
                                              "condition": {
                                                "id": "GoogleTypeExpr",
                                                "type": "object",
                                                "properties": {
                                                  "title": {
                                                    "type": "string",
                                                    "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                                                  },
                                                  "location": {
                                                    "type": "string",
                                                    "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                                                  },
                                                  "expression": {
                                                    "type": "string",
                                                    "description": "Textual representation of an expression in Common Expression Language syntax."
                                                  },
                                                  "description": {
                                                    "type": "string",
                                                    "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                                                  }
                                                },
                                                "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                                              }
                                            },
                                            "description": "Associates `members` with a `role`."
                                          },
                                          "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
                                        },
                                        "auditConfigs": {
                                          "type": "array",
                                          "items": {
                                            "id": "GoogleIamV1AuditConfig",
                                            "type": "object",
                                            "properties": {
                                              "service": {
                                                "type": "string",
                                                "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                                              },
                                              "auditLogConfigs": {
                                                "type": "array",
                                                "items": {
                                                  "id": "GoogleIamV1AuditLogConfig",
                                                  "type": "object",
                                                  "properties": {
                                                    "logType": {
                                                      "enum": [
                                                        "LOG_TYPE_UNSPECIFIED",
                                                        "ADMIN_READ",
                                                        "DATA_WRITE",
                                                        "DATA_READ"
                                                      ],
                                                      "type": "string",
                                                      "description": "The log type that this config enables.",
                                                      "enumDescriptions": [
                                                        "Default case. Should never be this.",
                                                        "Admin reads. Example: CloudIAM getIamPolicy",
                                                        "Data writes. Example: CloudSQL Users create",
                                                        "Data reads. Example: CloudSQL Users list"
                                                      ]
                                                    },
                                                    "exemptedMembers": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                                                    }
                                                  },
                                                  "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                                                },
                                                "description": "The configuration for logging of each type of permission."
                                              }
                                            },
                                            "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
                                          },
                                          "description": "Specifies cloud audit logging configuration for this policy."
                                        }
                                      },
                                      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
                                    },
                                    "relevance": {
                                      "enum": [
                                        "HEURISTIC_RELEVANCE_UNSPECIFIED",
                                        "NORMAL",
                                        "HIGH"
                                      ],
                                      "type": "string",
                                      "description": "The relevance of this policy to the overall determination in the TroubleshootIamPolicyResponse. If the user who created the Replay does not have access to the policy, this field is omitted.",
                                      "enumDescriptions": [
                                        "Reserved for future use.",
                                        "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
                                        "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
                                      ]
                                    },
                                    "fullResourceName": {
                                      "type": "string",
                                      "description": "The full resource name that identifies the resource. For example, `//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance`. If the user who created the Replay does not have access to the policy, this field is omitted. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names."
                                    },
                                    "bindingExplanations": {
                                      "type": "array",
                                      "items": {
                                        "id": "GoogleCloudPolicysimulatorV1BindingExplanation",
                                        "type": "object",
                                        "properties": {
                                          "role": {
                                            "type": "string",
                                            "description": "The role that this binding grants. For example, `roles/compute.serviceAgent`. For a complete list of predefined IAM roles, as well as the permissions in each role, see https://cloud.google.com/iam/help/roles/reference."
                                          },
                                          "access": {
                                            "enum": [
                                              "ACCESS_STATE_UNSPECIFIED",
                                              "GRANTED",
                                              "NOT_GRANTED",
                                              "UNKNOWN_CONDITIONAL",
                                              "UNKNOWN_INFO_DENIED"
                                            ],
                                            "type": "string",
                                            "description": "Required. Indicates whether _this binding_ provides the specified permission to the specified member for the specified resource. This field does _not_ indicate whether the member actually has the permission for the resource. There might be another binding that overrides this binding. To determine whether the member actually has the permission, use the `access` field in the TroubleshootIamPolicyResponse.",
                                            "enumDescriptions": [
                                              "The access state is not specified.",
                                              "The member has the permission.",
                                              "The member does not have the permission.",
                                              "The member has the permission only if a condition expression evaluates to `true`.",
                                              "The user who created the Replay does not have access to all of the policies that Policy Simulator needs to evaluate."
                                            ]
                                          },
                                          "condition": {
                                            "id": "GoogleTypeExpr",
                                            "type": "object",
                                            "properties": {
                                              "title": {
                                                "type": "string",
                                                "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                                              },
                                              "location": {
                                                "type": "string",
                                                "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                                              },
                                              "expression": {
                                                "type": "string",
                                                "description": "Textual representation of an expression in Common Expression Language syntax."
                                              },
                                              "description": {
                                                "type": "string",
                                                "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                                              }
                                            },
                                            "description": "A condition expression that prevents this binding from granting access unless the expression evaluates to `true`. To learn about IAM Conditions, see https://cloud.google.com/iam/docs/conditions-overview."
                                          },
                                          "relevance": {
                                            "enum": [
                                              "HEURISTIC_RELEVANCE_UNSPECIFIED",
                                              "NORMAL",
                                              "HIGH"
                                            ],
                                            "type": "string",
                                            "description": "The relevance of this binding to the overall determination for the entire policy.",
                                            "enumDescriptions": [
                                              "Reserved for future use.",
                                              "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
                                              "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
                                            ]
                                          },
                                          "memberships": {
                                            "type": "object",
                                            "description": "Indicates whether each member in the binding includes the member specified in the request, either directly or indirectly. Each key identifies a member in the binding, and each value indicates whether the member in the binding includes the member in the request. For example, suppose that a binding includes the following members: * `user:alice@example.com` * `group:product-eng@example.com` The member in the replayed access tuple is `user:bob@example.com`. This user is a member of the group `group:product-eng@example.com`. For the first member in the binding, the key is `user:alice@example.com`, and the `membership` field in the value is set to `MEMBERSHIP_NOT_INCLUDED`. For the second member in the binding, the key is `group:product-eng@example.com`, and the `membership` field in the value is set to `MEMBERSHIP_INCLUDED`.",
                                            "additionalProperties": {
                                              "id": "GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership",
                                              "type": "object",
                                              "properties": {
                                                "relevance": {
                                                  "enum": [
                                                    "HEURISTIC_RELEVANCE_UNSPECIFIED",
                                                    "NORMAL",
                                                    "HIGH"
                                                  ],
                                                  "type": "string",
                                                  "description": "The relevance of the member's status to the overall determination for the binding.",
                                                  "enumDescriptions": [
                                                    "Reserved for future use.",
                                                    "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
                                                    "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
                                                  ]
                                                },
                                                "membership": {
                                                  "enum": [
                                                    "MEMBERSHIP_UNSPECIFIED",
                                                    "MEMBERSHIP_INCLUDED",
                                                    "MEMBERSHIP_NOT_INCLUDED",
                                                    "MEMBERSHIP_UNKNOWN_INFO_DENIED",
                                                    "MEMBERSHIP_UNKNOWN_UNSUPPORTED"
                                                  ],
                                                  "type": "string",
                                                  "description": "Indicates whether the binding includes the member.",
                                                  "enumDescriptions": [
                                                    "The membership is not specified.",
                                                    "The binding includes the member. The member can be included directly or indirectly. For example: * A member is included directly if that member is listed in the binding. * A member is included indirectly if that member is in a Google group or Google Workspace domain that is listed in the binding.",
                                                    "The binding does not include the member.",
                                                    "The user who created the Replay is not allowed to access the binding.",
                                                    "The member is an unsupported type. Only Google Accounts and service accounts are supported."
                                                  ]
                                                }
                                              },
                                              "description": "Details about whether the binding includes the member."
                                            }
                                          },
                                          "rolePermission": {
                                            "enum": [
                                              "ROLE_PERMISSION_UNSPECIFIED",
                                              "ROLE_PERMISSION_INCLUDED",
                                              "ROLE_PERMISSION_NOT_INCLUDED",
                                              "ROLE_PERMISSION_UNKNOWN_INFO_DENIED"
                                            ],
                                            "type": "string",
                                            "description": "Indicates whether the role granted by this binding contains the specified permission.",
                                            "enumDescriptions": [
                                              "The inclusion of the permission is not specified.",
                                              "The permission is included in the role.",
                                              "The permission is not included in the role.",
                                              "The user who created the Replay is not allowed to access the binding."
                                            ]
                                          },
                                          "rolePermissionRelevance": {
                                            "enum": [
                                              "HEURISTIC_RELEVANCE_UNSPECIFIED",
                                              "NORMAL",
                                              "HIGH"
                                            ],
                                            "type": "string",
                                            "description": "The relevance of the permission's existence, or nonexistence, in the role to the overall determination for the entire policy.",
                                            "enumDescriptions": [
                                              "Reserved for future use.",
                                              "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
                                              "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
                                            ]
                                          }
                                        },
                                        "description": "Details about how a binding in a policy affects a member's ability to use a permission."
                                      },
                                      "description": "Details about how each binding in the policy affects the member's ability, or inability, to use the permission for the resource. If the user who created the Replay does not have access to the policy, this field is omitted."
                                    }
                                  },
                                  "description": "Details about how a specific IAM Policy contributed to the access check."
                                },
                                "description": "If the AccessState is `UNKNOWN`, this field contains the policies that led to that result. If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is omitted."
                              },
                              "accessState": {
                                "enum": [
                                  "ACCESS_STATE_UNSPECIFIED",
                                  "GRANTED",
                                  "NOT_GRANTED",
                                  "UNKNOWN_CONDITIONAL",
                                  "UNKNOWN_INFO_DENIED"
                                ],
                                "type": "string",
                                "description": "Whether the member in the access tuple has permission to access the resource in the access tuple under the given policies.",
                                "enumDescriptions": [
                                  "The access state is not specified.",
                                  "The member has the permission.",
                                  "The member does not have the permission.",
                                  "The member has the permission only if a condition expression evaluates to `true`.",
                                  "The user who created the Replay does not have access to all of the policies that Policy Simulator needs to evaluate."
                                ]
                              }
                            },
                            "description": "The results of evaluating the access tuple under the current (baseline) policies. If the AccessState couldn't be fully evaluated, this field explains why."
                          },
                          "simulated": {
                            "id": "GoogleCloudPolicysimulatorV1ExplainedAccess",
                            "type": "object",
                            "properties": {
                              "errors": {
                                "type": "array",
                                "items": {
                                  "id": "GoogleRpcStatus",
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The status code, which should be an enum value of google.rpc.Code."
                                    },
                                    "details": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "any",
                                          "description": "Properties of the object. Contains field @type with type URL."
                                        }
                                      },
                                      "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                                    },
                                    "message": {
                                      "type": "string",
                                      "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                                    }
                                  },
                                  "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
                                },
                                "description": "If the AccessState is `UNKNOWN`, this field contains a list of errors explaining why the result is `UNKNOWN`. If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is omitted."
                              },
                              "policies": {
                                "type": "array",
                                "items": {
                                  "id": "GoogleCloudPolicysimulatorV1ExplainedPolicy",
                                  "type": "object",
                                  "properties": {
                                    "access": {
                                      "enum": [
                                        "ACCESS_STATE_UNSPECIFIED",
                                        "GRANTED",
                                        "NOT_GRANTED",
                                        "UNKNOWN_CONDITIONAL",
                                        "UNKNOWN_INFO_DENIED"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether _this policy_ provides the specified permission to the specified member for the specified resource. This field does _not_ indicate whether the member actually has the permission for the resource. There might be another policy that overrides this policy. To determine whether the member actually has the permission, use the `access` field in the TroubleshootIamPolicyResponse.",
                                      "enumDescriptions": [
                                        "The access state is not specified.",
                                        "The member has the permission.",
                                        "The member does not have the permission.",
                                        "The member has the permission only if a condition expression evaluates to `true`.",
                                        "The user who created the Replay does not have access to all of the policies that Policy Simulator needs to evaluate."
                                      ]
                                    },
                                    "policy": {
                                      "id": "GoogleIamV1Policy",
                                      "type": "object",
                                      "properties": {
                                        "etag": {
                                          "type": "string",
                                          "format": "byte",
                                          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
                                        },
                                        "version": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                                        },
                                        "bindings": {
                                          "type": "array",
                                          "items": {
                                            "id": "GoogleIamV1Binding",
                                            "type": "object",
                                            "properties": {
                                              "role": {
                                                "type": "string",
                                                "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                                              },
                                              "members": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                                              },
                                              "condition": {
                                                "id": "GoogleTypeExpr",
                                                "type": "object",
                                                "properties": {
                                                  "title": {
                                                    "type": "string",
                                                    "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                                                  },
                                                  "location": {
                                                    "type": "string",
                                                    "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                                                  },
                                                  "expression": {
                                                    "type": "string",
                                                    "description": "Textual representation of an expression in Common Expression Language syntax."
                                                  },
                                                  "description": {
                                                    "type": "string",
                                                    "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                                                  }
                                                },
                                                "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                                              }
                                            },
                                            "description": "Associates `members` with a `role`."
                                          },
                                          "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
                                        },
                                        "auditConfigs": {
                                          "type": "array",
                                          "items": {
                                            "id": "GoogleIamV1AuditConfig",
                                            "type": "object",
                                            "properties": {
                                              "service": {
                                                "type": "string",
                                                "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                                              },
                                              "auditLogConfigs": {
                                                "type": "array",
                                                "items": {
                                                  "id": "GoogleIamV1AuditLogConfig",
                                                  "type": "object",
                                                  "properties": {
                                                    "logType": {
                                                      "enum": [
                                                        "LOG_TYPE_UNSPECIFIED",
                                                        "ADMIN_READ",
                                                        "DATA_WRITE",
                                                        "DATA_READ"
                                                      ],
                                                      "type": "string",
                                                      "description": "The log type that this config enables.",
                                                      "enumDescriptions": [
                                                        "Default case. Should never be this.",
                                                        "Admin reads. Example: CloudIAM getIamPolicy",
                                                        "Data writes. Example: CloudSQL Users create",
                                                        "Data reads. Example: CloudSQL Users list"
                                                      ]
                                                    },
                                                    "exemptedMembers": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                                                    }
                                                  },
                                                  "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                                                },
                                                "description": "The configuration for logging of each type of permission."
                                              }
                                            },
                                            "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
                                          },
                                          "description": "Specifies cloud audit logging configuration for this policy."
                                        }
                                      },
                                      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
                                    },
                                    "relevance": {
                                      "enum": [
                                        "HEURISTIC_RELEVANCE_UNSPECIFIED",
                                        "NORMAL",
                                        "HIGH"
                                      ],
                                      "type": "string",
                                      "description": "The relevance of this policy to the overall determination in the TroubleshootIamPolicyResponse. If the user who created the Replay does not have access to the policy, this field is omitted.",
                                      "enumDescriptions": [
                                        "Reserved for future use.",
                                        "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
                                        "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
                                      ]
                                    },
                                    "fullResourceName": {
                                      "type": "string",
                                      "description": "The full resource name that identifies the resource. For example, `//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance`. If the user who created the Replay does not have access to the policy, this field is omitted. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names."
                                    },
                                    "bindingExplanations": {
                                      "type": "array",
                                      "items": {
                                        "id": "GoogleCloudPolicysimulatorV1BindingExplanation",
                                        "type": "object",
                                        "properties": {
                                          "role": {
                                            "type": "string",
                                            "description": "The role that this binding grants. For example, `roles/compute.serviceAgent`. For a complete list of predefined IAM roles, as well as the permissions in each role, see https://cloud.google.com/iam/help/roles/reference."
                                          },
                                          "access": {
                                            "enum": [
                                              "ACCESS_STATE_UNSPECIFIED",
                                              "GRANTED",
                                              "NOT_GRANTED",
                                              "UNKNOWN_CONDITIONAL",
                                              "UNKNOWN_INFO_DENIED"
                                            ],
                                            "type": "string",
                                            "description": "Required. Indicates whether _this binding_ provides the specified permission to the specified member for the specified resource. This field does _not_ indicate whether the member actually has the permission for the resource. There might be another binding that overrides this binding. To determine whether the member actually has the permission, use the `access` field in the TroubleshootIamPolicyResponse.",
                                            "enumDescriptions": [
                                              "The access state is not specified.",
                                              "The member has the permission.",
                                              "The member does not have the permission.",
                                              "The member has the permission only if a condition expression evaluates to `true`.",
                                              "The user who created the Replay does not have access to all of the policies that Policy Simulator needs to evaluate."
                                            ]
                                          },
                                          "condition": {
                                            "id": "GoogleTypeExpr",
                                            "type": "object",
                                            "properties": {
                                              "title": {
                                                "type": "string",
                                                "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                                              },
                                              "location": {
                                                "type": "string",
                                                "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                                              },
                                              "expression": {
                                                "type": "string",
                                                "description": "Textual representation of an expression in Common Expression Language syntax."
                                              },
                                              "description": {
                                                "type": "string",
                                                "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                                              }
                                            },
                                            "description": "A condition expression that prevents this binding from granting access unless the expression evaluates to `true`. To learn about IAM Conditions, see https://cloud.google.com/iam/docs/conditions-overview."
                                          },
                                          "relevance": {
                                            "enum": [
                                              "HEURISTIC_RELEVANCE_UNSPECIFIED",
                                              "NORMAL",
                                              "HIGH"
                                            ],
                                            "type": "string",
                                            "description": "The relevance of this binding to the overall determination for the entire policy.",
                                            "enumDescriptions": [
                                              "Reserved for future use.",
                                              "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
                                              "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
                                            ]
                                          },
                                          "memberships": {
                                            "type": "object",
                                            "description": "Indicates whether each member in the binding includes the member specified in the request, either directly or indirectly. Each key identifies a member in the binding, and each value indicates whether the member in the binding includes the member in the request. For example, suppose that a binding includes the following members: * `user:alice@example.com` * `group:product-eng@example.com` The member in the replayed access tuple is `user:bob@example.com`. This user is a member of the group `group:product-eng@example.com`. For the first member in the binding, the key is `user:alice@example.com`, and the `membership` field in the value is set to `MEMBERSHIP_NOT_INCLUDED`. For the second member in the binding, the key is `group:product-eng@example.com`, and the `membership` field in the value is set to `MEMBERSHIP_INCLUDED`.",
                                            "additionalProperties": {
                                              "id": "GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership",
                                              "type": "object",
                                              "properties": {
                                                "relevance": {
                                                  "enum": [
                                                    "HEURISTIC_RELEVANCE_UNSPECIFIED",
                                                    "NORMAL",
                                                    "HIGH"
                                                  ],
                                                  "type": "string",
                                                  "description": "The relevance of the member's status to the overall determination for the binding.",
                                                  "enumDescriptions": [
                                                    "Reserved for future use.",
                                                    "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
                                                    "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
                                                  ]
                                                },
                                                "membership": {
                                                  "enum": [
                                                    "MEMBERSHIP_UNSPECIFIED",
                                                    "MEMBERSHIP_INCLUDED",
                                                    "MEMBERSHIP_NOT_INCLUDED",
                                                    "MEMBERSHIP_UNKNOWN_INFO_DENIED",
                                                    "MEMBERSHIP_UNKNOWN_UNSUPPORTED"
                                                  ],
                                                  "type": "string",
                                                  "description": "Indicates whether the binding includes the member.",
                                                  "enumDescriptions": [
                                                    "The membership is not specified.",
                                                    "The binding includes the member. The member can be included directly or indirectly. For example: * A member is included directly if that member is listed in the binding. * A member is included indirectly if that member is in a Google group or Google Workspace domain that is listed in the binding.",
                                                    "The binding does not include the member.",
                                                    "The user who created the Replay is not allowed to access the binding.",
                                                    "The member is an unsupported type. Only Google Accounts and service accounts are supported."
                                                  ]
                                                }
                                              },
                                              "description": "Details about whether the binding includes the member."
                                            }
                                          },
                                          "rolePermission": {
                                            "enum": [
                                              "ROLE_PERMISSION_UNSPECIFIED",
                                              "ROLE_PERMISSION_INCLUDED",
                                              "ROLE_PERMISSION_NOT_INCLUDED",
                                              "ROLE_PERMISSION_UNKNOWN_INFO_DENIED"
                                            ],
                                            "type": "string",
                                            "description": "Indicates whether the role granted by this binding contains the specified permission.",
                                            "enumDescriptions": [
                                              "The inclusion of the permission is not specified.",
                                              "The permission is included in the role.",
                                              "The permission is not included in the role.",
                                              "The user who created the Replay is not allowed to access the binding."
                                            ]
                                          },
                                          "rolePermissionRelevance": {
                                            "enum": [
                                              "HEURISTIC_RELEVANCE_UNSPECIFIED",
                                              "NORMAL",
                                              "HIGH"
                                            ],
                                            "type": "string",
                                            "description": "The relevance of the permission's existence, or nonexistence, in the role to the overall determination for the entire policy.",
                                            "enumDescriptions": [
                                              "Reserved for future use.",
                                              "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
                                              "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
                                            ]
                                          }
                                        },
                                        "description": "Details about how a binding in a policy affects a member's ability to use a permission."
                                      },
                                      "description": "Details about how each binding in the policy affects the member's ability, or inability, to use the permission for the resource. If the user who created the Replay does not have access to the policy, this field is omitted."
                                    }
                                  },
                                  "description": "Details about how a specific IAM Policy contributed to the access check."
                                },
                                "description": "If the AccessState is `UNKNOWN`, this field contains the policies that led to that result. If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is omitted."
                              },
                              "accessState": {
                                "enum": [
                                  "ACCESS_STATE_UNSPECIFIED",
                                  "GRANTED",
                                  "NOT_GRANTED",
                                  "UNKNOWN_CONDITIONAL",
                                  "UNKNOWN_INFO_DENIED"
                                ],
                                "type": "string",
                                "description": "Whether the member in the access tuple has permission to access the resource in the access tuple under the given policies.",
                                "enumDescriptions": [
                                  "The access state is not specified.",
                                  "The member has the permission.",
                                  "The member does not have the permission.",
                                  "The member has the permission only if a condition expression evaluates to `true`.",
                                  "The user who created the Replay does not have access to all of the policies that Policy Simulator needs to evaluate."
                                ]
                              }
                            },
                            "description": "The results of evaluating the access tuple under the proposed (simulated) policies. If the AccessState couldn't be fully evaluated, this field explains why."
                          },
                          "accessChange": {
                            "enum": [
                              "ACCESS_CHANGE_TYPE_UNSPECIFIED",
                              "NO_CHANGE",
                              "UNKNOWN_CHANGE",
                              "ACCESS_REVOKED",
                              "ACCESS_GAINED",
                              "ACCESS_MAYBE_REVOKED",
                              "ACCESS_MAYBE_GAINED"
                            ],
                            "type": "string",
                            "description": "How the member's access, specified in the AccessState field, changed between the current (baseline) policies and proposed (simulated) policies.",
                            "enumDescriptions": [
                              "The access change is unspecified.",
                              "The member's access did not change. This includes the case where both baseline and simulated are UNKNOWN, but the unknown information is equivalent.",
                              "The member's access under both the current policies and the proposed policies is `UNKNOWN`, but the unknown information differs between them.",
                              "The member had access under the current policies (`GRANTED`), but will no longer have access after the proposed changes (`NOT_GRANTED`).",
                              "The member did not have access under the current policies (`NOT_GRANTED`), but will have access after the proposed changes (`GRANTED`).",
                              "This result can occur for the following reasons: * The member had access under the current policies (`GRANTED`), but their access after the proposed changes is `UNKNOWN`. * The member's access under the current policies is `UNKNOWN`, but they will not have access after the proposed changes (`NOT_GRANTED`).",
                              "This result can occur for the following reasons: * The member did not have access under the current policies (`NOT_GRANTED`), but their access after the proposed changes is `UNKNOWN`. * The member's access under the current policies is `UNKNOWN`, but they will have access after the proposed changes (`GRANTED`)."
                            ]
                          }
                        },
                        "description": "A summary and comparison of the member's access under the current (baseline) policies and the proposed (simulated) policies for a single access tuple. The evaluation of the member's access is reported in the AccessState field."
                      }
                    },
                    "description": "The difference between the member's access under the current (baseline) policies and the member's access under the proposed (simulated) policies. This field is only included for access tuples that were successfully replayed and had different results under the current policies and the proposed policies."
                  },
                  "name": {
                    "type": "string",
                    "description": "The resource name of the `ReplayResult`, in the following format: `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}/results/{replay-result-id}`, where `{resource-id}` is the ID of the project, folder, or organization that owns the Replay. Example: `projects/my-example-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36/results/1234`"
                  },
                  "error": {
                    "id": "GoogleRpcStatus",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The status code, which should be an enum value of google.rpc.Code."
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "any",
                            "description": "Properties of the object. Contains field @type with type URL."
                          }
                        },
                        "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                      },
                      "message": {
                        "type": "string",
                        "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                      }
                    },
                    "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
                  },
                  "parent": {
                    "type": "string",
                    "description": "The Replay that the access tuple was included in."
                  },
                  "accessTuple": {
                    "id": "GoogleCloudPolicysimulatorV1AccessTuple",
                    "type": "object",
                    "properties": {
                      "principal": {
                        "type": "string",
                        "description": "Required. The member, or principal, whose access you want to check, in the form of the email address that represents that member. For example, `alice@example.com` or `my-service-account@my-project.iam.gserviceaccount.com`. The member must be a Google Account or a service account. Other types of members are not supported."
                      },
                      "permission": {
                        "type": "string",
                        "description": "Required. The IAM permission to check for the specified member and resource. For a complete list of IAM permissions, see https://cloud.google.com/iam/help/permissions/reference. For a complete list of predefined IAM roles and the permissions in each role, see https://cloud.google.com/iam/help/roles/reference."
                      },
                      "fullResourceName": {
                        "type": "string",
                        "description": "Required. The full resource name that identifies the resource. For example, `//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance`. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names."
                      }
                    },
                    "description": "The access tuple that was replayed. This field includes information about the member, resource, and permission that were involved in the access attempt."
                  },
                  "lastSeenDate": {
                    "id": "GoogleTypeDate",
                    "type": "object",
                    "properties": {
                      "day": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
                      },
                      "year": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
                      },
                      "month": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
                      }
                    },
                    "description": "The latest date this access tuple was seen in the logs."
                  }
                },
                "description": "The result of replaying a single access tuple against a simulated state."
              },
              "description": "The results of running a Replay."
            }
          },
          "description": "Response message for Simulator.ListReplayResults."
        }
      ]
  policytroubleshooter.iam.troubleshoot:
    description: |-
      Checks whether a member has a specific permission for a specific resource, and explains why the member does or does not have that permission.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/policytroubleshooter/rest/v1/iam/troubleshoot
    example:
      inputs: [
        {
          "id": "GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyRequest",
          "type": "object",
          "properties": {
            "accessTuple": {
              "id": "GoogleCloudPolicytroubleshooterV1AccessTuple",
              "type": "object",
              "properties": {
                "principal": {
                  "type": "string",
                  "description": "Required. The member, or principal, whose access you want to check, in the form of the email address that represents that member. For example, `alice@example.com` or `my-service-account@my-project.iam.gserviceaccount.com`. The member must be a Google Account or a service account. Other types of members are not supported."
                },
                "permission": {
                  "type": "string",
                  "description": "Required. The IAM permission to check for the specified member and resource. For a complete list of IAM permissions, see https://cloud.google.com/iam/help/permissions/reference. For a complete list of predefined IAM roles and the permissions in each role, see https://cloud.google.com/iam/help/roles/reference."
                },
                "fullResourceName": {
                  "type": "string",
                  "description": "Required. The full resource name that identifies the resource. For example, `//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance`. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names."
                }
              },
              "description": "The information to use for checking whether a member has a permission for a resource."
            }
          },
          "description": "Request for TroubleshootIamPolicy."
        }
      ]
      outputs: [
        {
          "id": "GoogleCloudPolicytroubleshooterV1TroubleshootIamPolicyResponse",
          "type": "object",
          "properties": {
            "access": {
              "enum": [
                "ACCESS_STATE_UNSPECIFIED",
                "GRANTED",
                "NOT_GRANTED",
                "UNKNOWN_CONDITIONAL",
                "UNKNOWN_INFO_DENIED"
              ],
              "type": "string",
              "description": "Indicates whether the member has the specified permission for the specified resource, based on evaluating all of the applicable IAM policies.",
              "enumDescriptions": [
                "Reserved for future use.",
                "The member has the permission.",
                "The member does not have the permission.",
                "The member has the permission only if a condition expression evaluates to `true`.",
                "The sender of the request does not have access to all of the policies that Policy Troubleshooter needs to evaluate."
              ]
            },
            "explainedPolicies": {
              "type": "array",
              "items": {
                "id": "GoogleCloudPolicytroubleshooterV1ExplainedPolicy",
                "type": "object",
                "properties": {
                  "access": {
                    "enum": [
                      "ACCESS_STATE_UNSPECIFIED",
                      "GRANTED",
                      "NOT_GRANTED",
                      "UNKNOWN_CONDITIONAL",
                      "UNKNOWN_INFO_DENIED"
                    ],
                    "type": "string",
                    "description": "Indicates whether _this policy_ provides the specified permission to the specified member for the specified resource. This field does _not_ indicate whether the member actually has the permission for the resource. There might be another policy that overrides this policy. To determine whether the member actually has the permission, use the `access` field in the TroubleshootIamPolicyResponse.",
                    "enumDescriptions": [
                      "Reserved for future use.",
                      "The member has the permission.",
                      "The member does not have the permission.",
                      "The member has the permission only if a condition expression evaluates to `true`.",
                      "The sender of the request does not have access to all of the policies that Policy Troubleshooter needs to evaluate."
                    ]
                  },
                  "policy": {
                    "id": "GoogleIamV1Policy",
                    "type": "object",
                    "properties": {
                      "etag": {
                        "type": "string",
                        "format": "byte",
                        "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
                      },
                      "version": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                      },
                      "bindings": {
                        "type": "array",
                        "items": {
                          "id": "GoogleIamV1Binding",
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                            },
                            "members": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                            },
                            "condition": {
                              "id": "GoogleTypeExpr",
                              "type": "object",
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                                },
                                "location": {
                                  "type": "string",
                                  "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                                },
                                "expression": {
                                  "type": "string",
                                  "description": "Textual representation of an expression in Common Expression Language syntax."
                                },
                                "description": {
                                  "type": "string",
                                  "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                                }
                              },
                              "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                            }
                          },
                          "description": "Associates `members` with a `role`."
                        },
                        "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
                      },
                      "auditConfigs": {
                        "type": "array",
                        "items": {
                          "id": "GoogleIamV1AuditConfig",
                          "type": "object",
                          "properties": {
                            "service": {
                              "type": "string",
                              "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                            },
                            "auditLogConfigs": {
                              "type": "array",
                              "items": {
                                "id": "GoogleIamV1AuditLogConfig",
                                "type": "object",
                                "properties": {
                                  "logType": {
                                    "enum": [
                                      "LOG_TYPE_UNSPECIFIED",
                                      "ADMIN_READ",
                                      "DATA_WRITE",
                                      "DATA_READ"
                                    ],
                                    "type": "string",
                                    "description": "The log type that this config enables.",
                                    "enumDescriptions": [
                                      "Default case. Should never be this.",
                                      "Admin reads. Example: CloudIAM getIamPolicy",
                                      "Data writes. Example: CloudSQL Users create",
                                      "Data reads. Example: CloudSQL Users list"
                                    ]
                                  },
                                  "exemptedMembers": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                                  }
                                },
                                "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                              },
                              "description": "The configuration for logging of each type of permission."
                            }
                          },
                          "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
                        },
                        "description": "Specifies cloud audit logging configuration for this policy."
                      }
                    },
                    "description": "The IAM policy attached to the resource. If the sender of the request does not have access to the policy, this field is empty."
                  },
                  "relevance": {
                    "enum": [
                      "HEURISTIC_RELEVANCE_UNSPECIFIED",
                      "NORMAL",
                      "HIGH"
                    ],
                    "type": "string",
                    "description": "The relevance of this policy to the overall determination in the TroubleshootIamPolicyResponse. If the sender of the request does not have access to the policy, this field is omitted.",
                    "enumDescriptions": [
                      "Reserved for future use.",
                      "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
                      "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
                    ]
                  },
                  "fullResourceName": {
                    "type": "string",
                    "description": "The full resource name that identifies the resource. For example, `//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance`. If the sender of the request does not have access to the policy, this field is omitted. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names."
                  },
                  "bindingExplanations": {
                    "type": "array",
                    "items": {
                      "id": "GoogleCloudPolicytroubleshooterV1BindingExplanation",
                      "type": "object",
                      "properties": {
                        "role": {
                          "type": "string",
                          "description": "The role that this binding grants. For example, `roles/compute.serviceAgent`. For a complete list of predefined IAM roles, as well as the permissions in each role, see https://cloud.google.com/iam/help/roles/reference."
                        },
                        "access": {
                          "enum": [
                            "ACCESS_STATE_UNSPECIFIED",
                            "GRANTED",
                            "NOT_GRANTED",
                            "UNKNOWN_CONDITIONAL",
                            "UNKNOWN_INFO_DENIED"
                          ],
                          "type": "string",
                          "description": "Required. Indicates whether _this binding_ provides the specified permission to the specified member for the specified resource. This field does _not_ indicate whether the member actually has the permission for the resource. There might be another binding that overrides this binding. To determine whether the member actually has the permission, use the `access` field in the TroubleshootIamPolicyResponse.",
                          "enumDescriptions": [
                            "Reserved for future use.",
                            "The member has the permission.",
                            "The member does not have the permission.",
                            "The member has the permission only if a condition expression evaluates to `true`.",
                            "The sender of the request does not have access to all of the policies that Policy Troubleshooter needs to evaluate."
                          ]
                        },
                        "condition": {
                          "id": "GoogleTypeExpr",
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string",
                              "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                            },
                            "location": {
                              "type": "string",
                              "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                            },
                            "expression": {
                              "type": "string",
                              "description": "Textual representation of an expression in Common Expression Language syntax."
                            },
                            "description": {
                              "type": "string",
                              "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                            }
                          },
                          "description": "A condition expression that prevents access unless the expression evaluates to `true`. To learn about IAM Conditions, see http://cloud.google.com/iam/help/conditions/overview."
                        },
                        "relevance": {
                          "enum": [
                            "HEURISTIC_RELEVANCE_UNSPECIFIED",
                            "NORMAL",
                            "HIGH"
                          ],
                          "type": "string",
                          "description": "The relevance of this binding to the overall determination for the entire policy.",
                          "enumDescriptions": [
                            "Reserved for future use.",
                            "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
                            "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
                          ]
                        },
                        "memberships": {
                          "type": "object",
                          "description": "Indicates whether each member in the binding includes the member specified in the request, either directly or indirectly. Each key identifies a member in the binding, and each value indicates whether the member in the binding includes the member in the request. For example, suppose that a binding includes the following members: * `user:alice@example.com` * `group:product-eng@example.com` You want to troubleshoot access for `user:bob@example.com`. This user is a member of the group `group:product-eng@example.com`. For the first member in the binding, the key is `user:alice@example.com`, and the `membership` field in the value is set to `MEMBERSHIP_NOT_INCLUDED`. For the second member in the binding, the key is `group:product-eng@example.com`, and the `membership` field in the value is set to `MEMBERSHIP_INCLUDED`.",
                          "additionalProperties": {
                            "id": "GoogleCloudPolicytroubleshooterV1BindingExplanationAnnotatedMembership",
                            "type": "object",
                            "properties": {
                              "relevance": {
                                "enum": [
                                  "HEURISTIC_RELEVANCE_UNSPECIFIED",
                                  "NORMAL",
                                  "HIGH"
                                ],
                                "type": "string",
                                "description": "The relevance of the member's status to the overall determination for the binding.",
                                "enumDescriptions": [
                                  "Reserved for future use.",
                                  "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
                                  "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
                                ]
                              },
                              "membership": {
                                "enum": [
                                  "MEMBERSHIP_UNSPECIFIED",
                                  "MEMBERSHIP_INCLUDED",
                                  "MEMBERSHIP_NOT_INCLUDED",
                                  "MEMBERSHIP_UNKNOWN_INFO_DENIED",
                                  "MEMBERSHIP_UNKNOWN_UNSUPPORTED"
                                ],
                                "type": "string",
                                "description": "Indicates whether the binding includes the member.",
                                "enumDescriptions": [
                                  "Reserved for future use.",
                                  "The binding includes the member. The member can be included directly or indirectly. For example: * A member is included directly if that member is listed in the binding. * A member is included indirectly if that member is in a Google group or G Suite domain that is listed in the binding.",
                                  "The binding does not include the member.",
                                  "The sender of the request is not allowed to access the binding.",
                                  "The member is an unsupported type. Only Google Accounts and service accounts are supported."
                                ]
                              }
                            },
                            "description": "Details about whether the binding includes the member."
                          }
                        },
                        "rolePermission": {
                          "enum": [
                            "ROLE_PERMISSION_UNSPECIFIED",
                            "ROLE_PERMISSION_INCLUDED",
                            "ROLE_PERMISSION_NOT_INCLUDED",
                            "ROLE_PERMISSION_UNKNOWN_INFO_DENIED"
                          ],
                          "type": "string",
                          "description": "Indicates whether the role granted by this binding contains the specified permission.",
                          "enumDescriptions": [
                            "Reserved for future use.",
                            "The permission is included in the role.",
                            "The permission is not included in the role.",
                            "The sender of the request is not allowed to access the binding."
                          ]
                        },
                        "rolePermissionRelevance": {
                          "enum": [
                            "HEURISTIC_RELEVANCE_UNSPECIFIED",
                            "NORMAL",
                            "HIGH"
                          ],
                          "type": "string",
                          "description": "The relevance of the permission's existence, or nonexistence, in the role to the overall determination for the entire policy.",
                          "enumDescriptions": [
                            "Reserved for future use.",
                            "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
                            "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
                          ]
                        }
                      },
                      "description": "Details about how a binding in a policy affects a member's ability to use a permission."
                    },
                    "description": "Details about how each binding in the policy affects the member's ability, or inability, to use the permission for the resource. If the sender of the request does not have access to the policy, this field is omitted."
                  }
                },
                "description": "Details about how a specific IAM Policy contributed to the access check."
              },
              "description": "List of IAM policies that were evaluated to check the member's permissions, with annotations to indicate how each policy contributed to the final result. The list of policies can include the policy for the resource itself. It can also include policies that are inherited from higher levels of the resource hierarchy, including the organization, the folder, and the project. To learn more about the resource hierarchy, see https://cloud.google.com/iam/help/resource-hierarchy."
            }
          },
          "description": "Response for TroubleshootIamPolicy."
        }
      ]
  iam.iamPolicies.lintPolicy:
    description: |-
      Lints, or validates, an IAM policy. Currently checks the google.iam.v1.Binding.condition field, which contains a condition expression for a role binding. Successful calls to this method always return an HTTP `200 OK` status code, even if the linter detects an issue in the IAM policy.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/iamPolicies/lintPolicy
    example:
      inputs: [
        {
          "id": "LintPolicyRequest",
          "type": "object",
          "properties": {
            "condition": {
              "id": "Expr",
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                },
                "location": {
                  "type": "string",
                  "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                },
                "expression": {
                  "type": "string",
                  "description": "Textual representation of an expression in Common Expression Language syntax."
                },
                "description": {
                  "type": "string",
                  "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                }
              },
              "description": "google.iam.v1.Binding.condition object to be linted."
            },
            "fullResourceName": {
              "type": "string",
              "description": "The full resource name of the policy this lint request is about. The name follows the Google Cloud Platform (GCP) resource format. For example, a GCP project with ID `my-project` will be named `//cloudresourcemanager.googleapis.com/projects/my-project`. The resource name is not used to read the policy instance from the Cloud IAM database. The candidate policy for lint has to be provided in the same request object."
            }
          },
          "description": "The request to lint a Cloud IAM policy object."
        }
      ]
      outputs: [
        {
          "id": "LintPolicyResponse",
          "type": "object",
          "properties": {
            "lintResults": {
              "type": "array",
              "items": {
                "id": "LintResult",
                "type": "object",
                "properties": {
                  "level": {
                    "enum": [
                      "LEVEL_UNSPECIFIED",
                      "CONDITION"
                    ],
                    "type": "string",
                    "description": "The validation unit level.",
                    "enumDescriptions": [
                      "Level is unspecified.",
                      "A validation unit which operates on an individual condition within a binding."
                    ]
                  },
                  "severity": {
                    "enum": [
                      "SEVERITY_UNSPECIFIED",
                      "ERROR",
                      "WARNING",
                      "NOTICE",
                      "INFO",
                      "DEPRECATED"
                    ],
                    "type": "string",
                    "description": "The validation unit severity.",
                    "enumDescriptions": [
                      "Severity is unspecified.",
                      "A validation unit returns an error only for critical issues. If an attempt is made to set the problematic policy without rectifying the critical issue, it causes the `setPolicy` operation to fail.",
                      "Any issue which is severe enough but does not cause an error. For example, suspicious constructs in the input object will not necessarily fail `setPolicy`, but there is a high likelihood that they won't behave as expected during policy evaluation in `checkPolicy`. This includes the following common scenarios: - Unsatisfiable condition: Expired timestamp in date/time condition. - Ineffective condition: Condition on a pair which is granted unconditionally in another binding of the same policy.",
                      "Reserved for the issues that are not severe as `ERROR`/`WARNING`, but need special handling. For instance, messages about skipped validation units are issued as `NOTICE`.",
                      "Any informative statement which is not severe enough to raise `ERROR`/`WARNING`/`NOTICE`, like auto-correction recommendations on the input content. Note that current version of the linter does not utilize `INFO`.",
                      "Deprecated severity level."
                    ]
                  },
                  "fieldName": {
                    "type": "string",
                    "description": "The name of the field for which this lint result is about. For nested messages `field_name` consists of names of the embedded fields separated by period character. The top-level qualifier is the input object to lint in the request. For example, the `field_name` value `condition.expression` identifies a lint result for the `expression` field of the provided condition."
                  },
                  "debugMessage": {
                    "type": "string",
                    "description": "Human readable debug message associated with the issue."
                  },
                  "locationOffset": {
                    "type": "integer",
                    "format": "int32",
                    "description": "0-based character position of problematic construct within the object identified by `field_name`. Currently, this is populated only for condition expression."
                  },
                  "validationUnitName": {
                    "type": "string",
                    "description": "The validation unit name, for instance \"lintValidationUnits/ConditionComplexityCheck\"."
                  }
                },
                "description": "Structured response of a single validation unit."
              },
              "description": "List of lint results sorted by `severity` in descending order."
            }
          },
          "description": "The response of a lint operation. An empty response indicates the operation was able to fully execute and no lint issue was found."
        }
      ]
  iam.iamPolicies.queryAuditableServices:
    description: |-
      Returns a list of services that allow you to opt into audit logs that are not generated by default. To learn more about audit logs, see the [Logging documentation](https://cloud.google.com/logging/docs/audit).
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/iamPolicies/queryAuditableServices
    example:
      inputs: [
        {
          "id": "QueryAuditableServicesRequest",
          "type": "object",
          "properties": {
            "fullResourceName": {
              "type": "string",
              "description": "Required. The full resource name to query from the list of auditable services. The name follows the Google Cloud Platform resource format. For example, a Cloud Platform project with id `my-project` will be named `//cloudresourcemanager.googleapis.com/projects/my-project`."
            }
          },
          "description": "A request to get the list of auditable services for a resource."
        }
      ]
      outputs: [
        {
          "id": "QueryAuditableServicesResponse",
          "type": "object",
          "properties": {
            "services": {
              "type": "array",
              "items": {
                "id": "AuditableService",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Public name of the service. For example, the service name for Cloud IAM is 'iam.googleapis.com'."
                  }
                },
                "description": "Contains information about an auditable service."
              },
              "description": "The auditable services for a resource."
            }
          },
          "description": "A response containing a list of auditable services for a resource."
        }
      ]
  iam.organizations.roles.create:
    description: |-
      Creates a new custom Role.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles/create
    example:
      inputs: [
        {
          "id": "CreateRoleRequest",
          "type": "object",
          "properties": {
            "role": {
              "id": "Role",
              "type": "object",
              "properties": {
                "etag": {
                  "type": "string",
                  "format": "byte",
                  "description": "Used to perform a consistent read-modify-write."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the role. When Role is used in CreateRole, the role name must not be set. When Role is used in output and other input such as UpdateRole, the role name is the complete path, e.g., roles/logging.viewer for predefined roles and organizations/{ORGANIZATION_ID}/roles/logging.viewer for custom roles."
                },
                "stage": {
                  "enum": [
                    "ALPHA",
                    "BETA",
                    "GA",
                    "DEPRECATED",
                    "DISABLED",
                    "EAP"
                  ],
                  "type": "string",
                  "description": "The current launch stage of the role. If the `ALPHA` launch stage has been selected for a role, the `stage` field will not be included in the returned definition for the role.",
                  "enumDescriptions": [
                    "The user has indicated this role is currently in an Alpha phase. If this launch stage is selected, the `stage` field will not be included when requesting the definition for a given role.",
                    "The user has indicated this role is currently in a Beta phase.",
                    "The user has indicated this role is generally available.",
                    "The user has indicated this role is being deprecated.",
                    "This role is disabled and will not contribute permissions to any members it is granted to in policies.",
                    "The user has indicated this role is currently in an EAP phase."
                  ]
                },
                "title": {
                  "type": "string",
                  "description": "Optional. A human-readable title for the role. Typically this is limited to 100 UTF-8 bytes."
                },
                "deleted": {
                  "type": "boolean",
                  "description": "The current deleted state of the role. This field is read only. It will be ignored in calls to CreateRole and UpdateRole."
                },
                "description": {
                  "type": "string",
                  "description": "Optional. A human-readable description for the role."
                },
                "includedPermissions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The names of the permissions this role grants when bound in an IAM policy."
                }
              },
              "description": "The Role resource to create."
            },
            "roleId": {
              "type": "string",
              "description": "The role ID to use for this role. A role ID may contain alphanumeric characters, underscores (`_`), and periods (`.`). It must contain a minimum of 3 characters and a maximum of 64 characters."
            }
          },
          "description": "The request to create a new role."
        }
      ]
      outputs: [
        {
          "id": "Role",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "Used to perform a consistent read-modify-write."
            },
            "name": {
              "type": "string",
              "description": "The name of the role. When Role is used in CreateRole, the role name must not be set. When Role is used in output and other input such as UpdateRole, the role name is the complete path, e.g., roles/logging.viewer for predefined roles and organizations/{ORGANIZATION_ID}/roles/logging.viewer for custom roles."
            },
            "stage": {
              "enum": [
                "ALPHA",
                "BETA",
                "GA",
                "DEPRECATED",
                "DISABLED",
                "EAP"
              ],
              "type": "string",
              "description": "The current launch stage of the role. If the `ALPHA` launch stage has been selected for a role, the `stage` field will not be included in the returned definition for the role.",
              "enumDescriptions": [
                "The user has indicated this role is currently in an Alpha phase. If this launch stage is selected, the `stage` field will not be included when requesting the definition for a given role.",
                "The user has indicated this role is currently in a Beta phase.",
                "The user has indicated this role is generally available.",
                "The user has indicated this role is being deprecated.",
                "This role is disabled and will not contribute permissions to any members it is granted to in policies.",
                "The user has indicated this role is currently in an EAP phase."
              ]
            },
            "title": {
              "type": "string",
              "description": "Optional. A human-readable title for the role. Typically this is limited to 100 UTF-8 bytes."
            },
            "deleted": {
              "type": "boolean",
              "description": "The current deleted state of the role. This field is read only. It will be ignored in calls to CreateRole and UpdateRole."
            },
            "description": {
              "type": "string",
              "description": "Optional. A human-readable description for the role."
            },
            "includedPermissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The names of the permissions this role grants when bound in an IAM policy."
            }
          },
          "description": "A role in the Identity and Access Management API."
        }
      ]
  iam.organizations.roles.delete:
    description: |-
      Deletes a custom Role. When you delete a custom role, the following changes occur immediately: * You cannot bind a member to the custom role in an IAM Policy. * Existing bindings to the custom role are not changed, but they have no effect. * By default, the response from ListRoles does not include the custom role. You have 7 days to undelete the custom role. After 7 days, the following changes occur: * The custom role is permanently deleted and cannot be recovered. * If an IAM policy contains a binding to the custom role, the binding is permanently removed.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Role",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "Used to perform a consistent read-modify-write."
            },
            "name": {
              "type": "string",
              "description": "The name of the role. When Role is used in CreateRole, the role name must not be set. When Role is used in output and other input such as UpdateRole, the role name is the complete path, e.g., roles/logging.viewer for predefined roles and organizations/{ORGANIZATION_ID}/roles/logging.viewer for custom roles."
            },
            "stage": {
              "enum": [
                "ALPHA",
                "BETA",
                "GA",
                "DEPRECATED",
                "DISABLED",
                "EAP"
              ],
              "type": "string",
              "description": "The current launch stage of the role. If the `ALPHA` launch stage has been selected for a role, the `stage` field will not be included in the returned definition for the role.",
              "enumDescriptions": [
                "The user has indicated this role is currently in an Alpha phase. If this launch stage is selected, the `stage` field will not be included when requesting the definition for a given role.",
                "The user has indicated this role is currently in a Beta phase.",
                "The user has indicated this role is generally available.",
                "The user has indicated this role is being deprecated.",
                "This role is disabled and will not contribute permissions to any members it is granted to in policies.",
                "The user has indicated this role is currently in an EAP phase."
              ]
            },
            "title": {
              "type": "string",
              "description": "Optional. A human-readable title for the role. Typically this is limited to 100 UTF-8 bytes."
            },
            "deleted": {
              "type": "boolean",
              "description": "The current deleted state of the role. This field is read only. It will be ignored in calls to CreateRole and UpdateRole."
            },
            "description": {
              "type": "string",
              "description": "Optional. A human-readable description for the role."
            },
            "includedPermissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The names of the permissions this role grants when bound in an IAM policy."
            }
          },
          "description": "A role in the Identity and Access Management API."
        }
      ]
  iam.organizations.roles.get:
    description: |-
      Gets the definition of a Role.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Role",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "Used to perform a consistent read-modify-write."
            },
            "name": {
              "type": "string",
              "description": "The name of the role. When Role is used in CreateRole, the role name must not be set. When Role is used in output and other input such as UpdateRole, the role name is the complete path, e.g., roles/logging.viewer for predefined roles and organizations/{ORGANIZATION_ID}/roles/logging.viewer for custom roles."
            },
            "stage": {
              "enum": [
                "ALPHA",
                "BETA",
                "GA",
                "DEPRECATED",
                "DISABLED",
                "EAP"
              ],
              "type": "string",
              "description": "The current launch stage of the role. If the `ALPHA` launch stage has been selected for a role, the `stage` field will not be included in the returned definition for the role.",
              "enumDescriptions": [
                "The user has indicated this role is currently in an Alpha phase. If this launch stage is selected, the `stage` field will not be included when requesting the definition for a given role.",
                "The user has indicated this role is currently in a Beta phase.",
                "The user has indicated this role is generally available.",
                "The user has indicated this role is being deprecated.",
                "This role is disabled and will not contribute permissions to any members it is granted to in policies.",
                "The user has indicated this role is currently in an EAP phase."
              ]
            },
            "title": {
              "type": "string",
              "description": "Optional. A human-readable title for the role. Typically this is limited to 100 UTF-8 bytes."
            },
            "deleted": {
              "type": "boolean",
              "description": "The current deleted state of the role. This field is read only. It will be ignored in calls to CreateRole and UpdateRole."
            },
            "description": {
              "type": "string",
              "description": "Optional. A human-readable description for the role."
            },
            "includedPermissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The names of the permissions this role grants when bound in an IAM policy."
            }
          },
          "description": "A role in the Identity and Access Management API."
        }
      ]
  iam.organizations.roles.list:
    description: |-
      Lists every predefined Role that IAM supports, or every custom role that is defined for an organization or project.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListRolesResponse",
          "type": "object",
          "properties": {
            "roles": {
              "type": "array",
              "items": {
                "id": "Role",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "format": "byte",
                    "description": "Used to perform a consistent read-modify-write."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the role. When Role is used in CreateRole, the role name must not be set. When Role is used in output and other input such as UpdateRole, the role name is the complete path, e.g., roles/logging.viewer for predefined roles and organizations/{ORGANIZATION_ID}/roles/logging.viewer for custom roles."
                  },
                  "stage": {
                    "enum": [
                      "ALPHA",
                      "BETA",
                      "GA",
                      "DEPRECATED",
                      "DISABLED",
                      "EAP"
                    ],
                    "type": "string",
                    "description": "The current launch stage of the role. If the `ALPHA` launch stage has been selected for a role, the `stage` field will not be included in the returned definition for the role.",
                    "enumDescriptions": [
                      "The user has indicated this role is currently in an Alpha phase. If this launch stage is selected, the `stage` field will not be included when requesting the definition for a given role.",
                      "The user has indicated this role is currently in a Beta phase.",
                      "The user has indicated this role is generally available.",
                      "The user has indicated this role is being deprecated.",
                      "This role is disabled and will not contribute permissions to any members it is granted to in policies.",
                      "The user has indicated this role is currently in an EAP phase."
                    ]
                  },
                  "title": {
                    "type": "string",
                    "description": "Optional. A human-readable title for the role. Typically this is limited to 100 UTF-8 bytes."
                  },
                  "deleted": {
                    "type": "boolean",
                    "description": "The current deleted state of the role. This field is read only. It will be ignored in calls to CreateRole and UpdateRole."
                  },
                  "description": {
                    "type": "string",
                    "description": "Optional. A human-readable description for the role."
                  },
                  "includedPermissions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The names of the permissions this role grants when bound in an IAM policy."
                  }
                },
                "description": "A role in the Identity and Access Management API."
              },
              "description": "The Roles defined on this resource."
            },
            "nextPageToken": {
              "type": "string",
              "description": "To retrieve the next page of results, set `ListRolesRequest.page_token` to this value."
            }
          },
          "description": "The response containing the roles defined under a resource."
        }
      ]
  iam.organizations.roles.patch:
    description: |-
      Updates the definition of a custom Role.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Role",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "Used to perform a consistent read-modify-write."
            },
            "name": {
              "type": "string",
              "description": "The name of the role. When Role is used in CreateRole, the role name must not be set. When Role is used in output and other input such as UpdateRole, the role name is the complete path, e.g., roles/logging.viewer for predefined roles and organizations/{ORGANIZATION_ID}/roles/logging.viewer for custom roles."
            },
            "stage": {
              "enum": [
                "ALPHA",
                "BETA",
                "GA",
                "DEPRECATED",
                "DISABLED",
                "EAP"
              ],
              "type": "string",
              "description": "The current launch stage of the role. If the `ALPHA` launch stage has been selected for a role, the `stage` field will not be included in the returned definition for the role.",
              "enumDescriptions": [
                "The user has indicated this role is currently in an Alpha phase. If this launch stage is selected, the `stage` field will not be included when requesting the definition for a given role.",
                "The user has indicated this role is currently in a Beta phase.",
                "The user has indicated this role is generally available.",
                "The user has indicated this role is being deprecated.",
                "This role is disabled and will not contribute permissions to any members it is granted to in policies.",
                "The user has indicated this role is currently in an EAP phase."
              ]
            },
            "title": {
              "type": "string",
              "description": "Optional. A human-readable title for the role. Typically this is limited to 100 UTF-8 bytes."
            },
            "deleted": {
              "type": "boolean",
              "description": "The current deleted state of the role. This field is read only. It will be ignored in calls to CreateRole and UpdateRole."
            },
            "description": {
              "type": "string",
              "description": "Optional. A human-readable description for the role."
            },
            "includedPermissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The names of the permissions this role grants when bound in an IAM policy."
            }
          },
          "description": "A role in the Identity and Access Management API."
        }
      ]
  iam.organizations.roles.undelete:
    description: |-
      Undeletes a custom Role.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles/undelete
    example:
      inputs: [
        {
          "id": "UndeleteRoleRequest",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "Used to perform a consistent read-modify-write."
            }
          },
          "description": "The request to undelete an existing role."
        }
      ]
      outputs: [
        {
          "id": "Role",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "Used to perform a consistent read-modify-write."
            },
            "name": {
              "type": "string",
              "description": "The name of the role. When Role is used in CreateRole, the role name must not be set. When Role is used in output and other input such as UpdateRole, the role name is the complete path, e.g., roles/logging.viewer for predefined roles and organizations/{ORGANIZATION_ID}/roles/logging.viewer for custom roles."
            },
            "stage": {
              "enum": [
                "ALPHA",
                "BETA",
                "GA",
                "DEPRECATED",
                "DISABLED",
                "EAP"
              ],
              "type": "string",
              "description": "The current launch stage of the role. If the `ALPHA` launch stage has been selected for a role, the `stage` field will not be included in the returned definition for the role.",
              "enumDescriptions": [
                "The user has indicated this role is currently in an Alpha phase. If this launch stage is selected, the `stage` field will not be included when requesting the definition for a given role.",
                "The user has indicated this role is currently in a Beta phase.",
                "The user has indicated this role is generally available.",
                "The user has indicated this role is being deprecated.",
                "This role is disabled and will not contribute permissions to any members it is granted to in policies.",
                "The user has indicated this role is currently in an EAP phase."
              ]
            },
            "title": {
              "type": "string",
              "description": "Optional. A human-readable title for the role. Typically this is limited to 100 UTF-8 bytes."
            },
            "deleted": {
              "type": "boolean",
              "description": "The current deleted state of the role. This field is read only. It will be ignored in calls to CreateRole and UpdateRole."
            },
            "description": {
              "type": "string",
              "description": "Optional. A human-readable description for the role."
            },
            "includedPermissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The names of the permissions this role grants when bound in an IAM policy."
            }
          },
          "description": "A role in the Identity and Access Management API."
        }
      ]
  iam.permissions.queryTestablePermissions:
    description: |-
      Lists every permission that you can test on a resource. A permission is testable if you can check whether a member has that permission on the resource.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/permissions/queryTestablePermissions
    example:
      inputs: [
        {
          "id": "QueryTestablePermissionsRequest",
          "type": "object",
          "properties": {
            "pageSize": {
              "type": "integer",
              "format": "int32",
              "description": "Optional limit on the number of permissions to include in the response. The default is 100, and the maximum is 1,000."
            },
            "pageToken": {
              "type": "string",
              "description": "Optional pagination token returned in an earlier QueryTestablePermissionsRequest."
            },
            "fullResourceName": {
              "type": "string",
              "description": "Required. The full resource name to query from the list of testable permissions. The name follows the Google Cloud Platform resource format. For example, a Cloud Platform project with id `my-project` will be named `//cloudresourcemanager.googleapis.com/projects/my-project`."
            }
          },
          "description": "A request to get permissions which can be tested on a resource."
        }
      ]
      outputs: [
        {
          "id": "QueryTestablePermissionsResponse",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "id": "Permission",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of this Permission."
                  },
                  "stage": {
                    "enum": [
                      "ALPHA",
                      "BETA",
                      "GA",
                      "DEPRECATED"
                    ],
                    "type": "string",
                    "description": "The current launch stage of the permission.",
                    "enumDescriptions": [
                      "The permission is currently in an alpha phase.",
                      "The permission is currently in a beta phase.",
                      "The permission is generally available.",
                      "The permission is being deprecated."
                    ]
                  },
                  "title": {
                    "type": "string",
                    "description": "The title of this Permission."
                  },
                  "apiDisabled": {
                    "type": "boolean",
                    "description": "The service API associated with the permission is not enabled."
                  },
                  "description": {
                    "type": "string",
                    "description": "A brief description of what this Permission is used for. This permission can ONLY be used in predefined roles."
                  },
                  "primaryPermission": {
                    "type": "string",
                    "description": "The preferred name for this permission. If present, then this permission is an alias of, and equivalent to, the listed primary_permission."
                  },
                  "onlyInPredefinedRoles": {
                    "type": "boolean"
                  },
                  "customRolesSupportLevel": {
                    "enum": [
                      "SUPPORTED",
                      "TESTING",
                      "NOT_SUPPORTED"
                    ],
                    "type": "string",
                    "description": "The current custom role support level.",
                    "enumDescriptions": [
                      "Default state. Permission is fully supported for custom role use.",
                      "Permission is being tested to check custom role compatibility.",
                      "Permission is not supported for custom role use."
                    ]
                  }
                },
                "description": "A permission which can be included by a role."
              },
              "description": "The Permissions testable on the requested resource."
            },
            "nextPageToken": {
              "type": "string",
              "description": "To retrieve the next page of results, set `QueryTestableRolesRequest.page_token` to this value."
            }
          },
          "description": "The response containing permissions which can be tested on a resource."
        }
      ]
  iam.projects.locations.workloadIdentityPools.create:
    description: |-
      Creates a new WorkloadIdentityPool. You cannot reuse the name of a deleted pool until 30 days after deletion.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.locations.workloadIdentityPools/create
    example:
      inputs: [
        {
          "id": "WorkloadIdentityPool",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The resource name of the pool."
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "ACTIVE",
                "DELETED"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. The state of the pool.",
              "enumDescriptions": [
                "State unspecified.",
                "The pool is active, and may be used in Google Cloud policies.",
                "The pool is soft-deleted. Soft-deleted pools are permanently deleted after approximately 30 days. You can restore a soft-deleted pool using UndeleteWorkloadIdentityPool. You cannot reuse the ID of a soft-deleted pool until it is permanently deleted. While a pool is deleted, you cannot use it to exchange tokens, or use existing tokens to access resources. If the pool is undeleted, existing tokens grant access again."
              ]
            },
            "disabled": {
              "type": "boolean",
              "description": "Whether the pool is disabled. You cannot use a disabled pool to exchange tokens, or use existing tokens to access resources. If the pool is re-enabled, existing tokens grant access again."
            },
            "description": {
              "type": "string",
              "description": "A description of the pool. Cannot exceed 256 characters."
            },
            "displayName": {
              "type": "string",
              "description": "A display name for the pool. Cannot exceed 32 characters."
            }
          },
          "description": "Represents a collection of external workload identities. You can define IAM policies to grant these identities access to Google Cloud resources."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  iam.projects.locations.workloadIdentityPools.delete:
    description: |-
      Deletes a WorkloadIdentityPool. You cannot use a deleted pool to exchange external credentials for Google Cloud credentials. However, deletion does not revoke credentials that have already been issued. Credentials issued for a deleted pool do not grant access to resources. If the pool is undeleted, and the credentials are not expired, they grant access again. You can undelete a pool for 30 days. After 30 days, deletion is permanent. You cannot update deleted pools. However, you can view and list them.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.locations.workloadIdentityPools/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  iam.projects.locations.workloadIdentityPools.get:
    description: |-
      Gets an individual WorkloadIdentityPool.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.locations.workloadIdentityPools/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  iam.projects.locations.workloadIdentityPools.list:
    description: |-
      Lists all non-deleted WorkloadIdentityPools in a project. If `show_deleted` is set to `true`, then deleted pools are also listed.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.locations.workloadIdentityPools/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListWorkloadIdentityPoolsResponse",
          "type": "object",
          "properties": {
            "nextPageToken": {
              "type": "string",
              "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
            },
            "workloadIdentityPools": {
              "type": "array",
              "items": {
                "id": "WorkloadIdentityPool",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The resource name of the pool."
                  },
                  "state": {
                    "enum": [
                      "STATE_UNSPECIFIED",
                      "ACTIVE",
                      "DELETED"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The state of the pool.",
                    "enumDescriptions": [
                      "State unspecified.",
                      "The pool is active, and may be used in Google Cloud policies.",
                      "The pool is soft-deleted. Soft-deleted pools are permanently deleted after approximately 30 days. You can restore a soft-deleted pool using UndeleteWorkloadIdentityPool. You cannot reuse the ID of a soft-deleted pool until it is permanently deleted. While a pool is deleted, you cannot use it to exchange tokens, or use existing tokens to access resources. If the pool is undeleted, existing tokens grant access again."
                    ]
                  },
                  "disabled": {
                    "type": "boolean",
                    "description": "Whether the pool is disabled. You cannot use a disabled pool to exchange tokens, or use existing tokens to access resources. If the pool is re-enabled, existing tokens grant access again."
                  },
                  "description": {
                    "type": "string",
                    "description": "A description of the pool. Cannot exceed 256 characters."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "A display name for the pool. Cannot exceed 32 characters."
                  }
                },
                "description": "Represents a collection of external workload identities. You can define IAM policies to grant these identities access to Google Cloud resources."
              },
              "description": "A list of pools."
            }
          },
          "description": "Response message for ListWorkloadIdentityPools."
        }
      ]
  iam.projects.locations.workloadIdentityPools.operations.get:
    description: |-
      Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.locations.workloadIdentityPools.operations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  iam.projects.locations.workloadIdentityPools.patch:
    description: |-
      Updates an existing WorkloadIdentityPool.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.locations.workloadIdentityPools/patch
    example:
      inputs: [
        {
          "id": "WorkloadIdentityPool",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The resource name of the pool."
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "ACTIVE",
                "DELETED"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. The state of the pool.",
              "enumDescriptions": [
                "State unspecified.",
                "The pool is active, and may be used in Google Cloud policies.",
                "The pool is soft-deleted. Soft-deleted pools are permanently deleted after approximately 30 days. You can restore a soft-deleted pool using UndeleteWorkloadIdentityPool. You cannot reuse the ID of a soft-deleted pool until it is permanently deleted. While a pool is deleted, you cannot use it to exchange tokens, or use existing tokens to access resources. If the pool is undeleted, existing tokens grant access again."
              ]
            },
            "disabled": {
              "type": "boolean",
              "description": "Whether the pool is disabled. You cannot use a disabled pool to exchange tokens, or use existing tokens to access resources. If the pool is re-enabled, existing tokens grant access again."
            },
            "description": {
              "type": "string",
              "description": "A description of the pool. Cannot exceed 256 characters."
            },
            "displayName": {
              "type": "string",
              "description": "A display name for the pool. Cannot exceed 32 characters."
            }
          },
          "description": "Represents a collection of external workload identities. You can define IAM policies to grant these identities access to Google Cloud resources."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  iam.projects.locations.workloadIdentityPools.providers.create:
    description: |-
      Creates a new WorkloadIdentityPoolProvider in a WorkloadIdentityPool. You cannot reuse the name of a deleted provider until 30 days after deletion.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.locations.workloadIdentityPools.providers/create
    example:
      inputs: [
        {
          "id": "WorkloadIdentityPoolProvider",
          "type": "object",
          "properties": {
            "aws": {
              "id": "Aws",
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string",
                  "description": "Required. The AWS account ID."
                }
              },
              "description": "An Amazon Web Services identity provider."
            },
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The resource name of the provider."
            },
            "oidc": {
              "id": "Oidc",
              "type": "object",
              "properties": {
                "issuerUri": {
                  "type": "string",
                  "description": "Required. The OIDC issuer URL. Must be an HTTPS endpoint."
                },
                "allowedAudiences": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Acceptable values for the `aud` field (audience) in the OIDC token. Token exchange requests are rejected if the token audience does not match one of the configured values. Each audience may be at most 256 characters. A maximum of 10 audiences may be configured. If this list is empty, the OIDC token audience must be equal to the full canonical resource name of the WorkloadIdentityPoolProvider, with or without the HTTPS prefix. For example: ``` //iam.googleapis.com/projects//locations//workloadIdentityPools//providers/ https://iam.googleapis.com/projects//locations//workloadIdentityPools//providers/ ```"
                }
              },
              "description": "An OpenId Connect 1.0 identity provider."
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "ACTIVE",
                "DELETED"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. The state of the provider.",
              "enumDescriptions": [
                "State unspecified.",
                "The provider is active, and may be used to validate authentication credentials.",
                "The provider is soft-deleted. Soft-deleted providers are permanently deleted after approximately 30 days. You can restore a soft-deleted provider using UndeleteWorkloadIdentityPoolProvider. You cannot reuse the ID of a soft-deleted provider until it is permanently deleted."
              ]
            },
            "disabled": {
              "type": "boolean",
              "description": "Whether the provider is disabled. You cannot use a disabled provider to exchange tokens. However, existing tokens still grant access."
            },
            "description": {
              "type": "string",
              "description": "A description for the provider. Cannot exceed 256 characters."
            },
            "displayName": {
              "type": "string",
              "description": "A display name for the provider. Cannot exceed 32 characters."
            },
            "attributeMapping": {
              "type": "object",
              "description": "Maps attributes from authentication credentials issued by an external identity provider to Google Cloud attributes, such as `subject` and `segment`. Each key must be a string specifying the Google Cloud IAM attribute to map to. The following keys are supported: * `google.subject`: The principal IAM is authenticating. You can reference this value in IAM bindings. This is also the subject that appears in Cloud Logging logs. Cannot exceed 127 characters. * `google.groups`: Groups the external identity belongs to. You can grant groups access to resources using an IAM `principalSet` binding; access applies to all members of the group. You can also provide custom attributes by specifying `attribute.{custom_attribute}`, where `{custom_attribute}` is the name of the custom attribute to be mapped. You can define a maximum of 50 custom attributes. The maximum length of a mapped attribute key is 100 characters, and the key may only contain the characters [a-z0-9_]. You can reference these attributes in IAM policies to define fine-grained access for a workload to Google Cloud resources. For example: * `google.subject`: `principal://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/subject/{value}` * `google.groups`: `principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/group/{value}` * `attribute.{custom_attribute}`: `principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/attribute.{custom_attribute}/{value}` Each value must be a [Common Expression Language] (https://opensource.google/projects/cel) function that maps an identity provider credential to the normalized attribute specified by the corresponding map key. You can use the `assertion` keyword in the expression to access a JSON representation of the authentication credential issued by the provider. The maximum length of an attribute mapping expression is 2048 characters. When evaluated, the total size of all mapped attributes must not exceed 8KB. For AWS providers, if no attribute mapping is defined, the following default mapping applies: ``` { \"google.subject\":\"assertion.arn\", \"attribute.aws_role\": \"assertion.arn.contains('assumed-role')\" \" ? assertion.arn.extract('{account_arn}assumed-role/')\" \" + 'assumed-role/'\" \" + assertion.arn.extract('assumed-role/{role_name}/')\" \" : assertion.arn\", } ``` If any custom attribute mappings are defined, they must include a mapping to the `google.subject` attribute. For OIDC providers, you must supply a custom mapping, which must include the `google.subject` attribute. For example, the following maps the `sub` claim of the incoming credential to the `subject` attribute on a Google token: ``` {\"google.subject\": \"assertion.sub\"} ```",
              "additionalProperties": {
                "type": "string"
              }
            },
            "attributeCondition": {
              "type": "string",
              "description": "[A Common Expression Language](https://opensource.google/projects/cel) expression, in plain text, to restrict what otherwise valid authentication credentials issued by the provider should not be accepted. The expression must output a boolean representing whether to allow the federation. The following keywords may be referenced in the expressions: * `assertion`: JSON representing the authentication credential issued by the provider. * `google`: The Google attributes mapped from the assertion in the `attribute_mappings`. * `attribute`: The custom attributes mapped from the assertion in the `attribute_mappings`. The maximum length of the attribute condition expression is 4096 characters. If unspecified, all valid authentication credential are accepted. The following example shows how to only allow credentials with a mapped `google.groups` value of `admins`: ``` \"'admins' in google.groups\" ```"
            }
          },
          "description": "A configuration for an external identity provider."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  iam.projects.locations.workloadIdentityPools.providers.delete:
    description: |-
      Deletes a WorkloadIdentityPoolProvider. Deleting a provider does not revoke credentials that have already been issued; they continue to grant access. You can undelete a provider for 30 days. After 30 days, deletion is permanent. You cannot update deleted providers. However, you can view and list them.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.locations.workloadIdentityPools.providers/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  iam.projects.locations.workloadIdentityPools.providers.get:
    description: |-
      Gets an individual WorkloadIdentityPoolProvider.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.locations.workloadIdentityPools.providers/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  iam.projects.locations.workloadIdentityPools.providers.list:
    description: |-
      Lists all non-deleted WorkloadIdentityPoolProviders in a WorkloadIdentityPool. If `show_deleted` is set to `true`, then deleted providers are also listed.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.locations.workloadIdentityPools.providers/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListWorkloadIdentityPoolProvidersResponse",
          "type": "object",
          "properties": {
            "nextPageToken": {
              "type": "string",
              "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
            },
            "workloadIdentityPoolProviders": {
              "type": "array",
              "items": {
                "id": "WorkloadIdentityPoolProvider",
                "type": "object",
                "properties": {
                  "aws": {
                    "id": "Aws",
                    "type": "object",
                    "properties": {
                      "accountId": {
                        "type": "string",
                        "description": "Required. The AWS account ID."
                      }
                    },
                    "description": "An Amazon Web Services identity provider."
                  },
                  "name": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The resource name of the provider."
                  },
                  "oidc": {
                    "id": "Oidc",
                    "type": "object",
                    "properties": {
                      "issuerUri": {
                        "type": "string",
                        "description": "Required. The OIDC issuer URL. Must be an HTTPS endpoint."
                      },
                      "allowedAudiences": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Acceptable values for the `aud` field (audience) in the OIDC token. Token exchange requests are rejected if the token audience does not match one of the configured values. Each audience may be at most 256 characters. A maximum of 10 audiences may be configured. If this list is empty, the OIDC token audience must be equal to the full canonical resource name of the WorkloadIdentityPoolProvider, with or without the HTTPS prefix. For example: ``` //iam.googleapis.com/projects//locations//workloadIdentityPools//providers/ https://iam.googleapis.com/projects//locations//workloadIdentityPools//providers/ ```"
                      }
                    },
                    "description": "An OpenId Connect 1.0 identity provider."
                  },
                  "state": {
                    "enum": [
                      "STATE_UNSPECIFIED",
                      "ACTIVE",
                      "DELETED"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The state of the provider.",
                    "enumDescriptions": [
                      "State unspecified.",
                      "The provider is active, and may be used to validate authentication credentials.",
                      "The provider is soft-deleted. Soft-deleted providers are permanently deleted after approximately 30 days. You can restore a soft-deleted provider using UndeleteWorkloadIdentityPoolProvider. You cannot reuse the ID of a soft-deleted provider until it is permanently deleted."
                    ]
                  },
                  "disabled": {
                    "type": "boolean",
                    "description": "Whether the provider is disabled. You cannot use a disabled provider to exchange tokens. However, existing tokens still grant access."
                  },
                  "description": {
                    "type": "string",
                    "description": "A description for the provider. Cannot exceed 256 characters."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "A display name for the provider. Cannot exceed 32 characters."
                  },
                  "attributeMapping": {
                    "type": "object",
                    "description": "Maps attributes from authentication credentials issued by an external identity provider to Google Cloud attributes, such as `subject` and `segment`. Each key must be a string specifying the Google Cloud IAM attribute to map to. The following keys are supported: * `google.subject`: The principal IAM is authenticating. You can reference this value in IAM bindings. This is also the subject that appears in Cloud Logging logs. Cannot exceed 127 characters. * `google.groups`: Groups the external identity belongs to. You can grant groups access to resources using an IAM `principalSet` binding; access applies to all members of the group. You can also provide custom attributes by specifying `attribute.{custom_attribute}`, where `{custom_attribute}` is the name of the custom attribute to be mapped. You can define a maximum of 50 custom attributes. The maximum length of a mapped attribute key is 100 characters, and the key may only contain the characters [a-z0-9_]. You can reference these attributes in IAM policies to define fine-grained access for a workload to Google Cloud resources. For example: * `google.subject`: `principal://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/subject/{value}` * `google.groups`: `principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/group/{value}` * `attribute.{custom_attribute}`: `principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/attribute.{custom_attribute}/{value}` Each value must be a [Common Expression Language] (https://opensource.google/projects/cel) function that maps an identity provider credential to the normalized attribute specified by the corresponding map key. You can use the `assertion` keyword in the expression to access a JSON representation of the authentication credential issued by the provider. The maximum length of an attribute mapping expression is 2048 characters. When evaluated, the total size of all mapped attributes must not exceed 8KB. For AWS providers, if no attribute mapping is defined, the following default mapping applies: ``` { \"google.subject\":\"assertion.arn\", \"attribute.aws_role\": \"assertion.arn.contains('assumed-role')\" \" ? assertion.arn.extract('{account_arn}assumed-role/')\" \" + 'assumed-role/'\" \" + assertion.arn.extract('assumed-role/{role_name}/')\" \" : assertion.arn\", } ``` If any custom attribute mappings are defined, they must include a mapping to the `google.subject` attribute. For OIDC providers, you must supply a custom mapping, which must include the `google.subject` attribute. For example, the following maps the `sub` claim of the incoming credential to the `subject` attribute on a Google token: ``` {\"google.subject\": \"assertion.sub\"} ```",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "attributeCondition": {
                    "type": "string",
                    "description": "[A Common Expression Language](https://opensource.google/projects/cel) expression, in plain text, to restrict what otherwise valid authentication credentials issued by the provider should not be accepted. The expression must output a boolean representing whether to allow the federation. The following keywords may be referenced in the expressions: * `assertion`: JSON representing the authentication credential issued by the provider. * `google`: The Google attributes mapped from the assertion in the `attribute_mappings`. * `attribute`: The custom attributes mapped from the assertion in the `attribute_mappings`. The maximum length of the attribute condition expression is 4096 characters. If unspecified, all valid authentication credential are accepted. The following example shows how to only allow credentials with a mapped `google.groups` value of `admins`: ``` \"'admins' in google.groups\" ```"
                  }
                },
                "description": "A configuration for an external identity provider."
              },
              "description": "A list of providers."
            }
          },
          "description": "Response message for ListWorkloadIdentityPoolProviders."
        }
      ]
  iam.projects.locations.workloadIdentityPools.providers.operations.get:
    description: |-
      Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.locations.workloadIdentityPools.providers.operations/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  iam.projects.locations.workloadIdentityPools.providers.patch:
    description: |-
      Updates an existing WorkloadIdentityPoolProvider.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.locations.workloadIdentityPools.providers/patch
    example:
      inputs: [
        {
          "id": "WorkloadIdentityPoolProvider",
          "type": "object",
          "properties": {
            "aws": {
              "id": "Aws",
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string",
                  "description": "Required. The AWS account ID."
                }
              },
              "description": "An Amazon Web Services identity provider."
            },
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The resource name of the provider."
            },
            "oidc": {
              "id": "Oidc",
              "type": "object",
              "properties": {
                "issuerUri": {
                  "type": "string",
                  "description": "Required. The OIDC issuer URL. Must be an HTTPS endpoint."
                },
                "allowedAudiences": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Acceptable values for the `aud` field (audience) in the OIDC token. Token exchange requests are rejected if the token audience does not match one of the configured values. Each audience may be at most 256 characters. A maximum of 10 audiences may be configured. If this list is empty, the OIDC token audience must be equal to the full canonical resource name of the WorkloadIdentityPoolProvider, with or without the HTTPS prefix. For example: ``` //iam.googleapis.com/projects//locations//workloadIdentityPools//providers/ https://iam.googleapis.com/projects//locations//workloadIdentityPools//providers/ ```"
                }
              },
              "description": "An OpenId Connect 1.0 identity provider."
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "ACTIVE",
                "DELETED"
              ],
              "type": "string",
              "readOnly": true,
              "description": "Output only. The state of the provider.",
              "enumDescriptions": [
                "State unspecified.",
                "The provider is active, and may be used to validate authentication credentials.",
                "The provider is soft-deleted. Soft-deleted providers are permanently deleted after approximately 30 days. You can restore a soft-deleted provider using UndeleteWorkloadIdentityPoolProvider. You cannot reuse the ID of a soft-deleted provider until it is permanently deleted."
              ]
            },
            "disabled": {
              "type": "boolean",
              "description": "Whether the provider is disabled. You cannot use a disabled provider to exchange tokens. However, existing tokens still grant access."
            },
            "description": {
              "type": "string",
              "description": "A description for the provider. Cannot exceed 256 characters."
            },
            "displayName": {
              "type": "string",
              "description": "A display name for the provider. Cannot exceed 32 characters."
            },
            "attributeMapping": {
              "type": "object",
              "description": "Maps attributes from authentication credentials issued by an external identity provider to Google Cloud attributes, such as `subject` and `segment`. Each key must be a string specifying the Google Cloud IAM attribute to map to. The following keys are supported: * `google.subject`: The principal IAM is authenticating. You can reference this value in IAM bindings. This is also the subject that appears in Cloud Logging logs. Cannot exceed 127 characters. * `google.groups`: Groups the external identity belongs to. You can grant groups access to resources using an IAM `principalSet` binding; access applies to all members of the group. You can also provide custom attributes by specifying `attribute.{custom_attribute}`, where `{custom_attribute}` is the name of the custom attribute to be mapped. You can define a maximum of 50 custom attributes. The maximum length of a mapped attribute key is 100 characters, and the key may only contain the characters [a-z0-9_]. You can reference these attributes in IAM policies to define fine-grained access for a workload to Google Cloud resources. For example: * `google.subject`: `principal://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/subject/{value}` * `google.groups`: `principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/group/{value}` * `attribute.{custom_attribute}`: `principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/attribute.{custom_attribute}/{value}` Each value must be a [Common Expression Language] (https://opensource.google/projects/cel) function that maps an identity provider credential to the normalized attribute specified by the corresponding map key. You can use the `assertion` keyword in the expression to access a JSON representation of the authentication credential issued by the provider. The maximum length of an attribute mapping expression is 2048 characters. When evaluated, the total size of all mapped attributes must not exceed 8KB. For AWS providers, if no attribute mapping is defined, the following default mapping applies: ``` { \"google.subject\":\"assertion.arn\", \"attribute.aws_role\": \"assertion.arn.contains('assumed-role')\" \" ? assertion.arn.extract('{account_arn}assumed-role/')\" \" + 'assumed-role/'\" \" + assertion.arn.extract('assumed-role/{role_name}/')\" \" : assertion.arn\", } ``` If any custom attribute mappings are defined, they must include a mapping to the `google.subject` attribute. For OIDC providers, you must supply a custom mapping, which must include the `google.subject` attribute. For example, the following maps the `sub` claim of the incoming credential to the `subject` attribute on a Google token: ``` {\"google.subject\": \"assertion.sub\"} ```",
              "additionalProperties": {
                "type": "string"
              }
            },
            "attributeCondition": {
              "type": "string",
              "description": "[A Common Expression Language](https://opensource.google/projects/cel) expression, in plain text, to restrict what otherwise valid authentication credentials issued by the provider should not be accepted. The expression must output a boolean representing whether to allow the federation. The following keywords may be referenced in the expressions: * `assertion`: JSON representing the authentication credential issued by the provider. * `google`: The Google attributes mapped from the assertion in the `attribute_mappings`. * `attribute`: The custom attributes mapped from the assertion in the `attribute_mappings`. The maximum length of the attribute condition expression is 4096 characters. If unspecified, all valid authentication credential are accepted. The following example shows how to only allow credentials with a mapped `google.groups` value of `admins`: ``` \"'admins' in google.groups\" ```"
            }
          },
          "description": "A configuration for an external identity provider."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  iam.projects.locations.workloadIdentityPools.providers.undelete:
    description: |-
      Undeletes a WorkloadIdentityPoolProvider, as long as it was deleted fewer than 30 days ago.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.locations.workloadIdentityPools.providers/undelete
    example:
      inputs: [
        {
          "id": "UndeleteWorkloadIdentityPoolProviderRequest",
          "type": "object",
          "properties": {},
          "description": "Request message for UndeleteWorkloadIdentityPoolProvider."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  iam.projects.locations.workloadIdentityPools.undelete:
    description: |-
      Undeletes a WorkloadIdentityPool, as long as it was deleted fewer than 30 days ago.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.locations.workloadIdentityPools/undelete
    example:
      inputs: [
        {
          "id": "UndeleteWorkloadIdentityPoolRequest",
          "type": "object",
          "properties": {},
          "description": "Request message for UndeleteWorkloadIdentityPool."
        }
      ]
      outputs: [
        {
          "id": "Operation",
          "type": "object",
          "properties": {
            "done": {
              "type": "boolean",
              "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
            },
            "name": {
              "type": "string",
              "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
            },
            "error": {
              "id": "Status",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The status code, which should be an enum value of google.rpc.Code."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "any",
                      "description": "Properties of the object. Contains field @type with type URL."
                    }
                  },
                  "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                },
                "message": {
                  "type": "string",
                  "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                }
              },
              "description": "The error result of the operation in case of failure or cancellation."
            },
            "metadata": {
              "type": "object",
              "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            },
            "response": {
              "type": "object",
              "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
              "additionalProperties": {
                "type": "any",
                "description": "Properties of the object. Contains field @type with type URL."
              }
            }
          },
          "description": "This resource represents a long-running operation that is the result of a network API call."
        }
      ]
  iam.projects.roles.create:
    description: |-
      Creates a new custom Role.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles/create
    example:
      inputs: [
        {
          "id": "CreateRoleRequest",
          "type": "object",
          "properties": {
            "role": {
              "id": "Role",
              "type": "object",
              "properties": {
                "etag": {
                  "type": "string",
                  "format": "byte",
                  "description": "Used to perform a consistent read-modify-write."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the role. When Role is used in CreateRole, the role name must not be set. When Role is used in output and other input such as UpdateRole, the role name is the complete path, e.g., roles/logging.viewer for predefined roles and organizations/{ORGANIZATION_ID}/roles/logging.viewer for custom roles."
                },
                "stage": {
                  "enum": [
                    "ALPHA",
                    "BETA",
                    "GA",
                    "DEPRECATED",
                    "DISABLED",
                    "EAP"
                  ],
                  "type": "string",
                  "description": "The current launch stage of the role. If the `ALPHA` launch stage has been selected for a role, the `stage` field will not be included in the returned definition for the role.",
                  "enumDescriptions": [
                    "The user has indicated this role is currently in an Alpha phase. If this launch stage is selected, the `stage` field will not be included when requesting the definition for a given role.",
                    "The user has indicated this role is currently in a Beta phase.",
                    "The user has indicated this role is generally available.",
                    "The user has indicated this role is being deprecated.",
                    "This role is disabled and will not contribute permissions to any members it is granted to in policies.",
                    "The user has indicated this role is currently in an EAP phase."
                  ]
                },
                "title": {
                  "type": "string",
                  "description": "Optional. A human-readable title for the role. Typically this is limited to 100 UTF-8 bytes."
                },
                "deleted": {
                  "type": "boolean",
                  "description": "The current deleted state of the role. This field is read only. It will be ignored in calls to CreateRole and UpdateRole."
                },
                "description": {
                  "type": "string",
                  "description": "Optional. A human-readable description for the role."
                },
                "includedPermissions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The names of the permissions this role grants when bound in an IAM policy."
                }
              },
              "description": "The Role resource to create."
            },
            "roleId": {
              "type": "string",
              "description": "The role ID to use for this role. A role ID may contain alphanumeric characters, underscores (`_`), and periods (`.`). It must contain a minimum of 3 characters and a maximum of 64 characters."
            }
          },
          "description": "The request to create a new role."
        }
      ]
      outputs: [
        {
          "id": "Role",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "Used to perform a consistent read-modify-write."
            },
            "name": {
              "type": "string",
              "description": "The name of the role. When Role is used in CreateRole, the role name must not be set. When Role is used in output and other input such as UpdateRole, the role name is the complete path, e.g., roles/logging.viewer for predefined roles and organizations/{ORGANIZATION_ID}/roles/logging.viewer for custom roles."
            },
            "stage": {
              "enum": [
                "ALPHA",
                "BETA",
                "GA",
                "DEPRECATED",
                "DISABLED",
                "EAP"
              ],
              "type": "string",
              "description": "The current launch stage of the role. If the `ALPHA` launch stage has been selected for a role, the `stage` field will not be included in the returned definition for the role.",
              "enumDescriptions": [
                "The user has indicated this role is currently in an Alpha phase. If this launch stage is selected, the `stage` field will not be included when requesting the definition for a given role.",
                "The user has indicated this role is currently in a Beta phase.",
                "The user has indicated this role is generally available.",
                "The user has indicated this role is being deprecated.",
                "This role is disabled and will not contribute permissions to any members it is granted to in policies.",
                "The user has indicated this role is currently in an EAP phase."
              ]
            },
            "title": {
              "type": "string",
              "description": "Optional. A human-readable title for the role. Typically this is limited to 100 UTF-8 bytes."
            },
            "deleted": {
              "type": "boolean",
              "description": "The current deleted state of the role. This field is read only. It will be ignored in calls to CreateRole and UpdateRole."
            },
            "description": {
              "type": "string",
              "description": "Optional. A human-readable description for the role."
            },
            "includedPermissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The names of the permissions this role grants when bound in an IAM policy."
            }
          },
          "description": "A role in the Identity and Access Management API."
        }
      ]
  iam.projects.roles.delete:
    description: |-
      Deletes a custom Role. When you delete a custom role, the following changes occur immediately: * You cannot bind a member to the custom role in an IAM Policy. * Existing bindings to the custom role are not changed, but they have no effect. * By default, the response from ListRoles does not include the custom role. You have 7 days to undelete the custom role. After 7 days, the following changes occur: * The custom role is permanently deleted and cannot be recovered. * If an IAM policy contains a binding to the custom role, the binding is permanently removed.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Role",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "Used to perform a consistent read-modify-write."
            },
            "name": {
              "type": "string",
              "description": "The name of the role. When Role is used in CreateRole, the role name must not be set. When Role is used in output and other input such as UpdateRole, the role name is the complete path, e.g., roles/logging.viewer for predefined roles and organizations/{ORGANIZATION_ID}/roles/logging.viewer for custom roles."
            },
            "stage": {
              "enum": [
                "ALPHA",
                "BETA",
                "GA",
                "DEPRECATED",
                "DISABLED",
                "EAP"
              ],
              "type": "string",
              "description": "The current launch stage of the role. If the `ALPHA` launch stage has been selected for a role, the `stage` field will not be included in the returned definition for the role.",
              "enumDescriptions": [
                "The user has indicated this role is currently in an Alpha phase. If this launch stage is selected, the `stage` field will not be included when requesting the definition for a given role.",
                "The user has indicated this role is currently in a Beta phase.",
                "The user has indicated this role is generally available.",
                "The user has indicated this role is being deprecated.",
                "This role is disabled and will not contribute permissions to any members it is granted to in policies.",
                "The user has indicated this role is currently in an EAP phase."
              ]
            },
            "title": {
              "type": "string",
              "description": "Optional. A human-readable title for the role. Typically this is limited to 100 UTF-8 bytes."
            },
            "deleted": {
              "type": "boolean",
              "description": "The current deleted state of the role. This field is read only. It will be ignored in calls to CreateRole and UpdateRole."
            },
            "description": {
              "type": "string",
              "description": "Optional. A human-readable description for the role."
            },
            "includedPermissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The names of the permissions this role grants when bound in an IAM policy."
            }
          },
          "description": "A role in the Identity and Access Management API."
        }
      ]
  iam.projects.roles.get:
    description: |-
      Gets the definition of a Role.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Role",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "Used to perform a consistent read-modify-write."
            },
            "name": {
              "type": "string",
              "description": "The name of the role. When Role is used in CreateRole, the role name must not be set. When Role is used in output and other input such as UpdateRole, the role name is the complete path, e.g., roles/logging.viewer for predefined roles and organizations/{ORGANIZATION_ID}/roles/logging.viewer for custom roles."
            },
            "stage": {
              "enum": [
                "ALPHA",
                "BETA",
                "GA",
                "DEPRECATED",
                "DISABLED",
                "EAP"
              ],
              "type": "string",
              "description": "The current launch stage of the role. If the `ALPHA` launch stage has been selected for a role, the `stage` field will not be included in the returned definition for the role.",
              "enumDescriptions": [
                "The user has indicated this role is currently in an Alpha phase. If this launch stage is selected, the `stage` field will not be included when requesting the definition for a given role.",
                "The user has indicated this role is currently in a Beta phase.",
                "The user has indicated this role is generally available.",
                "The user has indicated this role is being deprecated.",
                "This role is disabled and will not contribute permissions to any members it is granted to in policies.",
                "The user has indicated this role is currently in an EAP phase."
              ]
            },
            "title": {
              "type": "string",
              "description": "Optional. A human-readable title for the role. Typically this is limited to 100 UTF-8 bytes."
            },
            "deleted": {
              "type": "boolean",
              "description": "The current deleted state of the role. This field is read only. It will be ignored in calls to CreateRole and UpdateRole."
            },
            "description": {
              "type": "string",
              "description": "Optional. A human-readable description for the role."
            },
            "includedPermissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The names of the permissions this role grants when bound in an IAM policy."
            }
          },
          "description": "A role in the Identity and Access Management API."
        }
      ]
  iam.projects.roles.list:
    description: |-
      Lists every predefined Role that IAM supports, or every custom role that is defined for an organization or project.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListRolesResponse",
          "type": "object",
          "properties": {
            "roles": {
              "type": "array",
              "items": {
                "id": "Role",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "format": "byte",
                    "description": "Used to perform a consistent read-modify-write."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the role. When Role is used in CreateRole, the role name must not be set. When Role is used in output and other input such as UpdateRole, the role name is the complete path, e.g., roles/logging.viewer for predefined roles and organizations/{ORGANIZATION_ID}/roles/logging.viewer for custom roles."
                  },
                  "stage": {
                    "enum": [
                      "ALPHA",
                      "BETA",
                      "GA",
                      "DEPRECATED",
                      "DISABLED",
                      "EAP"
                    ],
                    "type": "string",
                    "description": "The current launch stage of the role. If the `ALPHA` launch stage has been selected for a role, the `stage` field will not be included in the returned definition for the role.",
                    "enumDescriptions": [
                      "The user has indicated this role is currently in an Alpha phase. If this launch stage is selected, the `stage` field will not be included when requesting the definition for a given role.",
                      "The user has indicated this role is currently in a Beta phase.",
                      "The user has indicated this role is generally available.",
                      "The user has indicated this role is being deprecated.",
                      "This role is disabled and will not contribute permissions to any members it is granted to in policies.",
                      "The user has indicated this role is currently in an EAP phase."
                    ]
                  },
                  "title": {
                    "type": "string",
                    "description": "Optional. A human-readable title for the role. Typically this is limited to 100 UTF-8 bytes."
                  },
                  "deleted": {
                    "type": "boolean",
                    "description": "The current deleted state of the role. This field is read only. It will be ignored in calls to CreateRole and UpdateRole."
                  },
                  "description": {
                    "type": "string",
                    "description": "Optional. A human-readable description for the role."
                  },
                  "includedPermissions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The names of the permissions this role grants when bound in an IAM policy."
                  }
                },
                "description": "A role in the Identity and Access Management API."
              },
              "description": "The Roles defined on this resource."
            },
            "nextPageToken": {
              "type": "string",
              "description": "To retrieve the next page of results, set `ListRolesRequest.page_token` to this value."
            }
          },
          "description": "The response containing the roles defined under a resource."
        }
      ]
  iam.projects.roles.patch:
    description: |-
      Updates the definition of a custom Role.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Role",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "Used to perform a consistent read-modify-write."
            },
            "name": {
              "type": "string",
              "description": "The name of the role. When Role is used in CreateRole, the role name must not be set. When Role is used in output and other input such as UpdateRole, the role name is the complete path, e.g., roles/logging.viewer for predefined roles and organizations/{ORGANIZATION_ID}/roles/logging.viewer for custom roles."
            },
            "stage": {
              "enum": [
                "ALPHA",
                "BETA",
                "GA",
                "DEPRECATED",
                "DISABLED",
                "EAP"
              ],
              "type": "string",
              "description": "The current launch stage of the role. If the `ALPHA` launch stage has been selected for a role, the `stage` field will not be included in the returned definition for the role.",
              "enumDescriptions": [
                "The user has indicated this role is currently in an Alpha phase. If this launch stage is selected, the `stage` field will not be included when requesting the definition for a given role.",
                "The user has indicated this role is currently in a Beta phase.",
                "The user has indicated this role is generally available.",
                "The user has indicated this role is being deprecated.",
                "This role is disabled and will not contribute permissions to any members it is granted to in policies.",
                "The user has indicated this role is currently in an EAP phase."
              ]
            },
            "title": {
              "type": "string",
              "description": "Optional. A human-readable title for the role. Typically this is limited to 100 UTF-8 bytes."
            },
            "deleted": {
              "type": "boolean",
              "description": "The current deleted state of the role. This field is read only. It will be ignored in calls to CreateRole and UpdateRole."
            },
            "description": {
              "type": "string",
              "description": "Optional. A human-readable description for the role."
            },
            "includedPermissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The names of the permissions this role grants when bound in an IAM policy."
            }
          },
          "description": "A role in the Identity and Access Management API."
        }
      ]
  iam.projects.roles.undelete:
    description: |-
      Undeletes a custom Role.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles/undelete
    example:
      inputs: [
        {
          "id": "UndeleteRoleRequest",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "Used to perform a consistent read-modify-write."
            }
          },
          "description": "The request to undelete an existing role."
        }
      ]
      outputs: [
        {
          "id": "Role",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "Used to perform a consistent read-modify-write."
            },
            "name": {
              "type": "string",
              "description": "The name of the role. When Role is used in CreateRole, the role name must not be set. When Role is used in output and other input such as UpdateRole, the role name is the complete path, e.g., roles/logging.viewer for predefined roles and organizations/{ORGANIZATION_ID}/roles/logging.viewer for custom roles."
            },
            "stage": {
              "enum": [
                "ALPHA",
                "BETA",
                "GA",
                "DEPRECATED",
                "DISABLED",
                "EAP"
              ],
              "type": "string",
              "description": "The current launch stage of the role. If the `ALPHA` launch stage has been selected for a role, the `stage` field will not be included in the returned definition for the role.",
              "enumDescriptions": [
                "The user has indicated this role is currently in an Alpha phase. If this launch stage is selected, the `stage` field will not be included when requesting the definition for a given role.",
                "The user has indicated this role is currently in a Beta phase.",
                "The user has indicated this role is generally available.",
                "The user has indicated this role is being deprecated.",
                "This role is disabled and will not contribute permissions to any members it is granted to in policies.",
                "The user has indicated this role is currently in an EAP phase."
              ]
            },
            "title": {
              "type": "string",
              "description": "Optional. A human-readable title for the role. Typically this is limited to 100 UTF-8 bytes."
            },
            "deleted": {
              "type": "boolean",
              "description": "The current deleted state of the role. This field is read only. It will be ignored in calls to CreateRole and UpdateRole."
            },
            "description": {
              "type": "string",
              "description": "Optional. A human-readable description for the role."
            },
            "includedPermissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The names of the permissions this role grants when bound in an IAM policy."
            }
          },
          "description": "A role in the Identity and Access Management API."
        }
      ]
  iam.projects.serviceAccounts.create:
    description: |-
      Creates a ServiceAccount.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.serviceAccounts/create
    example:
      inputs: [
        {
          "id": "CreateServiceAccountRequest",
          "type": "object",
          "properties": {
            "accountId": {
              "type": "string",
              "description": "Required. The account id that is used to generate the service account email address and a stable unique id. It is unique within a project, must be 6-30 characters long, and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])` to comply with RFC1035."
            },
            "serviceAccount": {
              "id": "ServiceAccount",
              "type": "object",
              "properties": {
                "etag": {
                  "type": "string",
                  "format": "byte",
                  "description": "Deprecated. Do not use."
                },
                "name": {
                  "type": "string",
                  "description": "The resource name of the service account. Use one of the following formats: * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}` * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}` As an alternative, you can use the `-` wildcard character instead of the project ID: * `projects/-/serviceAccounts/{EMAIL_ADDRESS}` * `projects/-/serviceAccounts/{UNIQUE_ID}` When possible, avoid using the `-` wildcard character, because it can cause response messages to contain misleading error codes. For example, if you try to get the service account `projects/-/serviceAccounts/fake@example.com`, which does not exist, the response contains an HTTP `403 Forbidden` error instead of a `404 Not Found` error."
                },
                "email": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. The email address of the service account."
                },
                "disabled": {
                  "type": "boolean",
                  "readOnly": true,
                  "description": "Output only. Whether the service account is disabled."
                },
                "uniqueId": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. The unique, stable numeric ID for the service account. Each service account retains its unique ID even if you delete the service account. For example, if you delete a service account, then create a new service account with the same name, the new service account has a different unique ID than the deleted service account."
                },
                "projectId": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. The ID of the project that owns the service account."
                },
                "description": {
                  "type": "string",
                  "description": "Optional. A user-specified, human-readable description of the service account. The maximum length is 256 UTF-8 bytes."
                },
                "displayName": {
                  "type": "string",
                  "description": "Optional. A user-specified, human-readable name for the service account. The maximum length is 100 UTF-8 bytes."
                },
                "oauth2ClientId": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. The OAuth 2.0 client ID for the service account."
                }
              },
              "description": "The ServiceAccount resource to create. Currently, only the following values are user assignable: `display_name` and `description`."
            }
          },
          "description": "The service account create request."
        }
      ]
      outputs: [
        {
          "id": "ServiceAccount",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "Deprecated. Do not use."
            },
            "name": {
              "type": "string",
              "description": "The resource name of the service account. Use one of the following formats: * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}` * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}` As an alternative, you can use the `-` wildcard character instead of the project ID: * `projects/-/serviceAccounts/{EMAIL_ADDRESS}` * `projects/-/serviceAccounts/{UNIQUE_ID}` When possible, avoid using the `-` wildcard character, because it can cause response messages to contain misleading error codes. For example, if you try to get the service account `projects/-/serviceAccounts/fake@example.com`, which does not exist, the response contains an HTTP `403 Forbidden` error instead of a `404 Not Found` error."
            },
            "email": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The email address of the service account."
            },
            "disabled": {
              "type": "boolean",
              "readOnly": true,
              "description": "Output only. Whether the service account is disabled."
            },
            "uniqueId": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The unique, stable numeric ID for the service account. Each service account retains its unique ID even if you delete the service account. For example, if you delete a service account, then create a new service account with the same name, the new service account has a different unique ID than the deleted service account."
            },
            "projectId": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The ID of the project that owns the service account."
            },
            "description": {
              "type": "string",
              "description": "Optional. A user-specified, human-readable description of the service account. The maximum length is 256 UTF-8 bytes."
            },
            "displayName": {
              "type": "string",
              "description": "Optional. A user-specified, human-readable name for the service account. The maximum length is 100 UTF-8 bytes."
            },
            "oauth2ClientId": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The OAuth 2.0 client ID for the service account."
            }
          },
          "description": "An IAM service account. A service account is an account for an application or a virtual machine (VM) instance, not a person. You can use a service account to call Google APIs. To learn more, read the [overview of service accounts](https://cloud.google.com/iam/help/service-accounts/overview). When you create a service account, you specify the project ID that owns the service account, as well as a name that must be unique within the project. IAM uses these values to create an email address that identifies the service account."
        }
      ]
  iam.projects.serviceAccounts.delete:
    description: |-
      Deletes a ServiceAccount. **Warning:** After you delete a service account, you might not be able to undelete it. If you know that you need to re-enable the service account in the future, use DisableServiceAccount instead. If you delete a service account, IAM permanently removes the service account 30 days later. Google Cloud cannot recover the service account after it is permanently removed, even if you file a support request. To help avoid unplanned outages, we recommend that you disable the service account before you delete it. Use DisableServiceAccount to disable the service account, then wait at least 24 hours and watch for unintended consequences. If there are no unintended consequences, you can delete the service account.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.serviceAccounts/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  iam.projects.serviceAccounts.disable:
    description: |-
      Disables a ServiceAccount immediately. If an application uses the service account to authenticate, that application can no longer call Google APIs or access Google Cloud resources. Existing access tokens for the service account are rejected, and requests for new access tokens will fail. To re-enable the service account, use EnableServiceAccount. After you re-enable the service account, its existing access tokens will be accepted, and you can request new access tokens. To help avoid unplanned outages, we recommend that you disable the service account before you delete it. Use this method to disable the service account, then wait at least 24 hours and watch for unintended consequences. If there are no unintended consequences, you can delete the service account with DeleteServiceAccount.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.serviceAccounts/disable
    example:
      inputs: [
        {
          "id": "DisableServiceAccountRequest",
          "type": "object",
          "properties": {},
          "description": "The service account disable request."
        }
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  iam.projects.serviceAccounts.enable:
    description: |-
      Enables a ServiceAccount that was disabled by DisableServiceAccount. If the service account is already enabled, then this method has no effect. If the service account was disabled by other means—for example, if Google disabled the service account because it was compromised—you cannot use this method to enable the service account.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.serviceAccounts/enable
    example:
      inputs: [
        {
          "id": "EnableServiceAccountRequest",
          "type": "object",
          "properties": {},
          "description": "The service account enable request."
        }
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  iam.projects.serviceAccounts.get:
    description: |-
      Gets a ServiceAccount.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.serviceAccounts/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ServiceAccount",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "Deprecated. Do not use."
            },
            "name": {
              "type": "string",
              "description": "The resource name of the service account. Use one of the following formats: * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}` * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}` As an alternative, you can use the `-` wildcard character instead of the project ID: * `projects/-/serviceAccounts/{EMAIL_ADDRESS}` * `projects/-/serviceAccounts/{UNIQUE_ID}` When possible, avoid using the `-` wildcard character, because it can cause response messages to contain misleading error codes. For example, if you try to get the service account `projects/-/serviceAccounts/fake@example.com`, which does not exist, the response contains an HTTP `403 Forbidden` error instead of a `404 Not Found` error."
            },
            "email": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The email address of the service account."
            },
            "disabled": {
              "type": "boolean",
              "readOnly": true,
              "description": "Output only. Whether the service account is disabled."
            },
            "uniqueId": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The unique, stable numeric ID for the service account. Each service account retains its unique ID even if you delete the service account. For example, if you delete a service account, then create a new service account with the same name, the new service account has a different unique ID than the deleted service account."
            },
            "projectId": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The ID of the project that owns the service account."
            },
            "description": {
              "type": "string",
              "description": "Optional. A user-specified, human-readable description of the service account. The maximum length is 256 UTF-8 bytes."
            },
            "displayName": {
              "type": "string",
              "description": "Optional. A user-specified, human-readable name for the service account. The maximum length is 100 UTF-8 bytes."
            },
            "oauth2ClientId": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The OAuth 2.0 client ID for the service account."
            }
          },
          "description": "An IAM service account. A service account is an account for an application or a virtual machine (VM) instance, not a person. You can use a service account to call Google APIs. To learn more, read the [overview of service accounts](https://cloud.google.com/iam/help/service-accounts/overview). When you create a service account, you specify the project ID that owns the service account, as well as a name that must be unique within the project. IAM uses these values to create an email address that identifies the service account."
        }
      ]
  iam.projects.serviceAccounts.getIamPolicy:
    description: |-
      Gets the IAM policy that is attached to a ServiceAccount. This IAM policy specifies which members have access to the service account. This method does not tell you whether the service account has been granted any roles on other resources. To check whether a service account has role grants on a resource, use the `getIamPolicy` method for that resource. For example, to view the role grants for a project, call the Resource Manager API's [`projects.getIamPolicy`](https://cloud.google.com/resource-manager/reference/rest/v1/projects/getIamPolicy) method.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.serviceAccounts/getIamPolicy
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            },
            "auditConfigs": {
              "type": "array",
              "items": {
                "id": "AuditConfig",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                  },
                  "auditLogConfigs": {
                    "type": "array",
                    "items": {
                      "id": "AuditLogConfig",
                      "type": "object",
                      "properties": {
                        "logType": {
                          "enum": [
                            "LOG_TYPE_UNSPECIFIED",
                            "ADMIN_READ",
                            "DATA_WRITE",
                            "DATA_READ"
                          ],
                          "type": "string",
                          "description": "The log type that this config enables.",
                          "enumDescriptions": [
                            "Default case. Should never be this.",
                            "Admin reads. Example: CloudIAM getIamPolicy",
                            "Data writes. Example: CloudSQL Users create",
                            "Data reads. Example: CloudSQL Users list"
                          ]
                        },
                        "exemptedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                        }
                      },
                      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                    },
                    "description": "The configuration for logging of each type of permission."
                  }
                },
                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
              },
              "description": "Specifies cloud audit logging configuration for this policy."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  iam.projects.serviceAccounts.keys.create:
    description: |-
      Creates a ServiceAccountKey.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.serviceAccounts.keys/create
    example:
      inputs: [
        {
          "id": "CreateServiceAccountKeyRequest",
          "type": "object",
          "properties": {
            "keyAlgorithm": {
              "enum": [
                "KEY_ALG_UNSPECIFIED",
                "KEY_ALG_RSA_1024",
                "KEY_ALG_RSA_2048"
              ],
              "type": "string",
              "description": "Which type of key and algorithm to use for the key. The default is currently a 2K RSA key. However this may change in the future.",
              "enumDescriptions": [
                "An unspecified key algorithm.",
                "1k RSA Key.",
                "2k RSA Key."
              ]
            },
            "privateKeyType": {
              "enum": [
                "TYPE_UNSPECIFIED",
                "TYPE_PKCS12_FILE",
                "TYPE_GOOGLE_CREDENTIALS_FILE"
              ],
              "type": "string",
              "description": "The output format of the private key. The default value is `TYPE_GOOGLE_CREDENTIALS_FILE`, which is the Google Credentials File format.",
              "enumDescriptions": [
                "Unspecified. Equivalent to `TYPE_GOOGLE_CREDENTIALS_FILE`.",
                "PKCS12 format. The password for the PKCS12 file is `notasecret`. For more information, see https://tools.ietf.org/html/rfc7292.",
                "Google Credentials File format."
              ]
            }
          },
          "description": "The service account key create request."
        }
      ]
      outputs: [
        {
          "id": "ServiceAccountKey",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The resource name of the service account key in the following format `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`."
            },
            "keyType": {
              "enum": [
                "KEY_TYPE_UNSPECIFIED",
                "USER_MANAGED",
                "SYSTEM_MANAGED"
              ],
              "type": "string",
              "description": "The key type.",
              "enumDescriptions": [
                "Unspecified key type. The presence of this in the message will immediately result in an error.",
                "User-managed keys (managed and rotated by the user).",
                "System-managed keys (managed and rotated by Google)."
              ]
            },
            "keyOrigin": {
              "enum": [
                "ORIGIN_UNSPECIFIED",
                "USER_PROVIDED",
                "GOOGLE_PROVIDED"
              ],
              "type": "string",
              "description": "The key origin.",
              "enumDescriptions": [
                "Unspecified key origin.",
                "Key is provided by user.",
                "Key is provided by Google."
              ]
            },
            "keyAlgorithm": {
              "enum": [
                "KEY_ALG_UNSPECIFIED",
                "KEY_ALG_RSA_1024",
                "KEY_ALG_RSA_2048"
              ],
              "type": "string",
              "description": "Specifies the algorithm (and possibly key size) for the key.",
              "enumDescriptions": [
                "An unspecified key algorithm.",
                "1k RSA Key.",
                "2k RSA Key."
              ]
            },
            "publicKeyData": {
              "type": "string",
              "format": "byte",
              "description": "The public key data. Only provided in `GetServiceAccountKey` responses."
            },
            "privateKeyData": {
              "type": "string",
              "format": "byte",
              "description": "The private key data. Only provided in `CreateServiceAccountKey` responses. Make sure to keep the private key data secure because it allows for the assertion of the service account identity. When base64 decoded, the private key data can be used to authenticate with Google API client libraries and with gcloud auth activate-service-account."
            },
            "privateKeyType": {
              "enum": [
                "TYPE_UNSPECIFIED",
                "TYPE_PKCS12_FILE",
                "TYPE_GOOGLE_CREDENTIALS_FILE"
              ],
              "type": "string",
              "description": "The output format for the private key. Only provided in `CreateServiceAccountKey` responses, not in `GetServiceAccountKey` or `ListServiceAccountKey` responses. Google never exposes system-managed private keys, and never retains user-managed private keys.",
              "enumDescriptions": [
                "Unspecified. Equivalent to `TYPE_GOOGLE_CREDENTIALS_FILE`.",
                "PKCS12 format. The password for the PKCS12 file is `notasecret`. For more information, see https://tools.ietf.org/html/rfc7292.",
                "Google Credentials File format."
              ]
            },
            "validAfterTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The key can be used after this timestamp."
            },
            "validBeforeTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The key can be used before this timestamp. For system-managed key pairs, this timestamp is the end time for the private key signing operation. The public key could still be used for verification for a few hours after this time."
            }
          },
          "description": "Represents a service account key. A service account has two sets of key-pairs: user-managed, and system-managed. User-managed key-pairs can be created and deleted by users. Users are responsible for rotating these keys periodically to ensure security of their service accounts. Users retain the private key of these key-pairs, and Google retains ONLY the public key. System-managed keys are automatically rotated by Google, and are used for signing for a maximum of two weeks. The rotation process is probabilistic, and usage of the new key will gradually ramp up and down over the key's lifetime. If you cache the public key set for a service account, we recommend that you update the cache every 15 minutes. User-managed keys can be added and removed at any time, so it is important to update the cache frequently. For Google-managed keys, Google will publish a key at least 6 hours before it is first used for signing and will keep publishing it for at least 6 hours after it was last used for signing. Public keys for all service accounts are also published at the OAuth2 Service Account API."
        }
      ]
  iam.projects.serviceAccounts.keys.delete:
    description: |-
      Deletes a ServiceAccountKey. Deleting a service account key does not revoke short-lived credentials that have been issued based on the service account key.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.serviceAccounts.keys/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  iam.projects.serviceAccounts.keys.get:
    description: |-
      Gets a ServiceAccountKey.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.serviceAccounts.keys/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ServiceAccountKey",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The resource name of the service account key in the following format `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`."
            },
            "keyType": {
              "enum": [
                "KEY_TYPE_UNSPECIFIED",
                "USER_MANAGED",
                "SYSTEM_MANAGED"
              ],
              "type": "string",
              "description": "The key type.",
              "enumDescriptions": [
                "Unspecified key type. The presence of this in the message will immediately result in an error.",
                "User-managed keys (managed and rotated by the user).",
                "System-managed keys (managed and rotated by Google)."
              ]
            },
            "keyOrigin": {
              "enum": [
                "ORIGIN_UNSPECIFIED",
                "USER_PROVIDED",
                "GOOGLE_PROVIDED"
              ],
              "type": "string",
              "description": "The key origin.",
              "enumDescriptions": [
                "Unspecified key origin.",
                "Key is provided by user.",
                "Key is provided by Google."
              ]
            },
            "keyAlgorithm": {
              "enum": [
                "KEY_ALG_UNSPECIFIED",
                "KEY_ALG_RSA_1024",
                "KEY_ALG_RSA_2048"
              ],
              "type": "string",
              "description": "Specifies the algorithm (and possibly key size) for the key.",
              "enumDescriptions": [
                "An unspecified key algorithm.",
                "1k RSA Key.",
                "2k RSA Key."
              ]
            },
            "publicKeyData": {
              "type": "string",
              "format": "byte",
              "description": "The public key data. Only provided in `GetServiceAccountKey` responses."
            },
            "privateKeyData": {
              "type": "string",
              "format": "byte",
              "description": "The private key data. Only provided in `CreateServiceAccountKey` responses. Make sure to keep the private key data secure because it allows for the assertion of the service account identity. When base64 decoded, the private key data can be used to authenticate with Google API client libraries and with gcloud auth activate-service-account."
            },
            "privateKeyType": {
              "enum": [
                "TYPE_UNSPECIFIED",
                "TYPE_PKCS12_FILE",
                "TYPE_GOOGLE_CREDENTIALS_FILE"
              ],
              "type": "string",
              "description": "The output format for the private key. Only provided in `CreateServiceAccountKey` responses, not in `GetServiceAccountKey` or `ListServiceAccountKey` responses. Google never exposes system-managed private keys, and never retains user-managed private keys.",
              "enumDescriptions": [
                "Unspecified. Equivalent to `TYPE_GOOGLE_CREDENTIALS_FILE`.",
                "PKCS12 format. The password for the PKCS12 file is `notasecret`. For more information, see https://tools.ietf.org/html/rfc7292.",
                "Google Credentials File format."
              ]
            },
            "validAfterTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The key can be used after this timestamp."
            },
            "validBeforeTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The key can be used before this timestamp. For system-managed key pairs, this timestamp is the end time for the private key signing operation. The public key could still be used for verification for a few hours after this time."
            }
          },
          "description": "Represents a service account key. A service account has two sets of key-pairs: user-managed, and system-managed. User-managed key-pairs can be created and deleted by users. Users are responsible for rotating these keys periodically to ensure security of their service accounts. Users retain the private key of these key-pairs, and Google retains ONLY the public key. System-managed keys are automatically rotated by Google, and are used for signing for a maximum of two weeks. The rotation process is probabilistic, and usage of the new key will gradually ramp up and down over the key's lifetime. If you cache the public key set for a service account, we recommend that you update the cache every 15 minutes. User-managed keys can be added and removed at any time, so it is important to update the cache frequently. For Google-managed keys, Google will publish a key at least 6 hours before it is first used for signing and will keep publishing it for at least 6 hours after it was last used for signing. Public keys for all service accounts are also published at the OAuth2 Service Account API."
        }
      ]
  iam.projects.serviceAccounts.keys.list:
    description: |-
      Lists every ServiceAccountKey for a service account.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.serviceAccounts.keys/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListServiceAccountKeysResponse",
          "type": "object",
          "properties": {
            "keys": {
              "type": "array",
              "items": {
                "id": "ServiceAccountKey",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The resource name of the service account key in the following format `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`."
                  },
                  "keyType": {
                    "enum": [
                      "KEY_TYPE_UNSPECIFIED",
                      "USER_MANAGED",
                      "SYSTEM_MANAGED"
                    ],
                    "type": "string",
                    "description": "The key type.",
                    "enumDescriptions": [
                      "Unspecified key type. The presence of this in the message will immediately result in an error.",
                      "User-managed keys (managed and rotated by the user).",
                      "System-managed keys (managed and rotated by Google)."
                    ]
                  },
                  "keyOrigin": {
                    "enum": [
                      "ORIGIN_UNSPECIFIED",
                      "USER_PROVIDED",
                      "GOOGLE_PROVIDED"
                    ],
                    "type": "string",
                    "description": "The key origin.",
                    "enumDescriptions": [
                      "Unspecified key origin.",
                      "Key is provided by user.",
                      "Key is provided by Google."
                    ]
                  },
                  "keyAlgorithm": {
                    "enum": [
                      "KEY_ALG_UNSPECIFIED",
                      "KEY_ALG_RSA_1024",
                      "KEY_ALG_RSA_2048"
                    ],
                    "type": "string",
                    "description": "Specifies the algorithm (and possibly key size) for the key.",
                    "enumDescriptions": [
                      "An unspecified key algorithm.",
                      "1k RSA Key.",
                      "2k RSA Key."
                    ]
                  },
                  "publicKeyData": {
                    "type": "string",
                    "format": "byte",
                    "description": "The public key data. Only provided in `GetServiceAccountKey` responses."
                  },
                  "privateKeyData": {
                    "type": "string",
                    "format": "byte",
                    "description": "The private key data. Only provided in `CreateServiceAccountKey` responses. Make sure to keep the private key data secure because it allows for the assertion of the service account identity. When base64 decoded, the private key data can be used to authenticate with Google API client libraries and with gcloud auth activate-service-account."
                  },
                  "privateKeyType": {
                    "enum": [
                      "TYPE_UNSPECIFIED",
                      "TYPE_PKCS12_FILE",
                      "TYPE_GOOGLE_CREDENTIALS_FILE"
                    ],
                    "type": "string",
                    "description": "The output format for the private key. Only provided in `CreateServiceAccountKey` responses, not in `GetServiceAccountKey` or `ListServiceAccountKey` responses. Google never exposes system-managed private keys, and never retains user-managed private keys.",
                    "enumDescriptions": [
                      "Unspecified. Equivalent to `TYPE_GOOGLE_CREDENTIALS_FILE`.",
                      "PKCS12 format. The password for the PKCS12 file is `notasecret`. For more information, see https://tools.ietf.org/html/rfc7292.",
                      "Google Credentials File format."
                    ]
                  },
                  "validAfterTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The key can be used after this timestamp."
                  },
                  "validBeforeTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "The key can be used before this timestamp. For system-managed key pairs, this timestamp is the end time for the private key signing operation. The public key could still be used for verification for a few hours after this time."
                  }
                },
                "description": "Represents a service account key. A service account has two sets of key-pairs: user-managed, and system-managed. User-managed key-pairs can be created and deleted by users. Users are responsible for rotating these keys periodically to ensure security of their service accounts. Users retain the private key of these key-pairs, and Google retains ONLY the public key. System-managed keys are automatically rotated by Google, and are used for signing for a maximum of two weeks. The rotation process is probabilistic, and usage of the new key will gradually ramp up and down over the key's lifetime. If you cache the public key set for a service account, we recommend that you update the cache every 15 minutes. User-managed keys can be added and removed at any time, so it is important to update the cache frequently. For Google-managed keys, Google will publish a key at least 6 hours before it is first used for signing and will keep publishing it for at least 6 hours after it was last used for signing. Public keys for all service accounts are also published at the OAuth2 Service Account API."
              },
              "description": "The public keys for the service account."
            }
          },
          "description": "The service account keys list response."
        }
      ]
  iam.projects.serviceAccounts.keys.upload:
    description: |-
      Creates a ServiceAccountKey, using a public key that you provide.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.serviceAccounts.keys/upload
    example:
      inputs: [
        {
          "id": "UploadServiceAccountKeyRequest",
          "type": "object",
          "properties": {
            "publicKeyData": {
              "type": "string",
              "format": "byte",
              "description": "A field that allows clients to upload their own public key. If set, use this public key data to create a service account key for given service account. Please note, the expected format for this field is X509_PEM."
            }
          },
          "description": "The service account key upload request."
        }
      ]
      outputs: [
        {
          "id": "ServiceAccountKey",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The resource name of the service account key in the following format `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`."
            },
            "keyType": {
              "enum": [
                "KEY_TYPE_UNSPECIFIED",
                "USER_MANAGED",
                "SYSTEM_MANAGED"
              ],
              "type": "string",
              "description": "The key type.",
              "enumDescriptions": [
                "Unspecified key type. The presence of this in the message will immediately result in an error.",
                "User-managed keys (managed and rotated by the user).",
                "System-managed keys (managed and rotated by Google)."
              ]
            },
            "keyOrigin": {
              "enum": [
                "ORIGIN_UNSPECIFIED",
                "USER_PROVIDED",
                "GOOGLE_PROVIDED"
              ],
              "type": "string",
              "description": "The key origin.",
              "enumDescriptions": [
                "Unspecified key origin.",
                "Key is provided by user.",
                "Key is provided by Google."
              ]
            },
            "keyAlgorithm": {
              "enum": [
                "KEY_ALG_UNSPECIFIED",
                "KEY_ALG_RSA_1024",
                "KEY_ALG_RSA_2048"
              ],
              "type": "string",
              "description": "Specifies the algorithm (and possibly key size) for the key.",
              "enumDescriptions": [
                "An unspecified key algorithm.",
                "1k RSA Key.",
                "2k RSA Key."
              ]
            },
            "publicKeyData": {
              "type": "string",
              "format": "byte",
              "description": "The public key data. Only provided in `GetServiceAccountKey` responses."
            },
            "privateKeyData": {
              "type": "string",
              "format": "byte",
              "description": "The private key data. Only provided in `CreateServiceAccountKey` responses. Make sure to keep the private key data secure because it allows for the assertion of the service account identity. When base64 decoded, the private key data can be used to authenticate with Google API client libraries and with gcloud auth activate-service-account."
            },
            "privateKeyType": {
              "enum": [
                "TYPE_UNSPECIFIED",
                "TYPE_PKCS12_FILE",
                "TYPE_GOOGLE_CREDENTIALS_FILE"
              ],
              "type": "string",
              "description": "The output format for the private key. Only provided in `CreateServiceAccountKey` responses, not in `GetServiceAccountKey` or `ListServiceAccountKey` responses. Google never exposes system-managed private keys, and never retains user-managed private keys.",
              "enumDescriptions": [
                "Unspecified. Equivalent to `TYPE_GOOGLE_CREDENTIALS_FILE`.",
                "PKCS12 format. The password for the PKCS12 file is `notasecret`. For more information, see https://tools.ietf.org/html/rfc7292.",
                "Google Credentials File format."
              ]
            },
            "validAfterTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The key can be used after this timestamp."
            },
            "validBeforeTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "The key can be used before this timestamp. For system-managed key pairs, this timestamp is the end time for the private key signing operation. The public key could still be used for verification for a few hours after this time."
            }
          },
          "description": "Represents a service account key. A service account has two sets of key-pairs: user-managed, and system-managed. User-managed key-pairs can be created and deleted by users. Users are responsible for rotating these keys periodically to ensure security of their service accounts. Users retain the private key of these key-pairs, and Google retains ONLY the public key. System-managed keys are automatically rotated by Google, and are used for signing for a maximum of two weeks. The rotation process is probabilistic, and usage of the new key will gradually ramp up and down over the key's lifetime. If you cache the public key set for a service account, we recommend that you update the cache every 15 minutes. User-managed keys can be added and removed at any time, so it is important to update the cache frequently. For Google-managed keys, Google will publish a key at least 6 hours before it is first used for signing and will keep publishing it for at least 6 hours after it was last used for signing. Public keys for all service accounts are also published at the OAuth2 Service Account API."
        }
      ]
  iam.projects.serviceAccounts.list:
    description: |-
      Lists every ServiceAccount that belongs to a specific project.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.serviceAccounts/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListServiceAccountsResponse",
          "type": "object",
          "properties": {
            "accounts": {
              "type": "array",
              "items": {
                "id": "ServiceAccount",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "format": "byte",
                    "description": "Deprecated. Do not use."
                  },
                  "name": {
                    "type": "string",
                    "description": "The resource name of the service account. Use one of the following formats: * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}` * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}` As an alternative, you can use the `-` wildcard character instead of the project ID: * `projects/-/serviceAccounts/{EMAIL_ADDRESS}` * `projects/-/serviceAccounts/{UNIQUE_ID}` When possible, avoid using the `-` wildcard character, because it can cause response messages to contain misleading error codes. For example, if you try to get the service account `projects/-/serviceAccounts/fake@example.com`, which does not exist, the response contains an HTTP `403 Forbidden` error instead of a `404 Not Found` error."
                  },
                  "email": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The email address of the service account."
                  },
                  "disabled": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Output only. Whether the service account is disabled."
                  },
                  "uniqueId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The unique, stable numeric ID for the service account. Each service account retains its unique ID even if you delete the service account. For example, if you delete a service account, then create a new service account with the same name, the new service account has a different unique ID than the deleted service account."
                  },
                  "projectId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The ID of the project that owns the service account."
                  },
                  "description": {
                    "type": "string",
                    "description": "Optional. A user-specified, human-readable description of the service account. The maximum length is 256 UTF-8 bytes."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Optional. A user-specified, human-readable name for the service account. The maximum length is 100 UTF-8 bytes."
                  },
                  "oauth2ClientId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Output only. The OAuth 2.0 client ID for the service account."
                  }
                },
                "description": "An IAM service account. A service account is an account for an application or a virtual machine (VM) instance, not a person. You can use a service account to call Google APIs. To learn more, read the [overview of service accounts](https://cloud.google.com/iam/help/service-accounts/overview). When you create a service account, you specify the project ID that owns the service account, as well as a name that must be unique within the project. IAM uses these values to create an email address that identifies the service account."
              },
              "description": "The list of matching service accounts."
            },
            "nextPageToken": {
              "type": "string",
              "description": "To retrieve the next page of results, set ListServiceAccountsRequest.page_token to this value."
            }
          },
          "description": "The service account list response."
        }
      ]
  iam.projects.serviceAccounts.patch:
    description: |-
      Patches a ServiceAccount.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.serviceAccounts/patch
    example:
      inputs: [
        {
          "id": "PatchServiceAccountRequest",
          "type": "object",
          "properties": {
            "updateMask": {
              "type": "string",
              "format": "google-fieldmask"
            },
            "serviceAccount": {
              "id": "ServiceAccount",
              "type": "object",
              "properties": {
                "etag": {
                  "type": "string",
                  "format": "byte",
                  "description": "Deprecated. Do not use."
                },
                "name": {
                  "type": "string",
                  "description": "The resource name of the service account. Use one of the following formats: * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}` * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}` As an alternative, you can use the `-` wildcard character instead of the project ID: * `projects/-/serviceAccounts/{EMAIL_ADDRESS}` * `projects/-/serviceAccounts/{UNIQUE_ID}` When possible, avoid using the `-` wildcard character, because it can cause response messages to contain misleading error codes. For example, if you try to get the service account `projects/-/serviceAccounts/fake@example.com`, which does not exist, the response contains an HTTP `403 Forbidden` error instead of a `404 Not Found` error."
                },
                "email": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. The email address of the service account."
                },
                "disabled": {
                  "type": "boolean",
                  "readOnly": true,
                  "description": "Output only. Whether the service account is disabled."
                },
                "uniqueId": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. The unique, stable numeric ID for the service account. Each service account retains its unique ID even if you delete the service account. For example, if you delete a service account, then create a new service account with the same name, the new service account has a different unique ID than the deleted service account."
                },
                "projectId": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. The ID of the project that owns the service account."
                },
                "description": {
                  "type": "string",
                  "description": "Optional. A user-specified, human-readable description of the service account. The maximum length is 256 UTF-8 bytes."
                },
                "displayName": {
                  "type": "string",
                  "description": "Optional. A user-specified, human-readable name for the service account. The maximum length is 100 UTF-8 bytes."
                },
                "oauth2ClientId": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. The OAuth 2.0 client ID for the service account."
                }
              },
              "description": "An IAM service account. A service account is an account for an application or a virtual machine (VM) instance, not a person. You can use a service account to call Google APIs. To learn more, read the [overview of service accounts](https://cloud.google.com/iam/help/service-accounts/overview). When you create a service account, you specify the project ID that owns the service account, as well as a name that must be unique within the project. IAM uses these values to create an email address that identifies the service account."
            }
          },
          "description": "The request for PatchServiceAccount. You can patch only the `display_name` and `description` fields. You must use the `update_mask` field to specify which of these fields you want to patch. Only the fields specified in the request are guaranteed to be returned in the response. Other fields may be empty in the response."
        }
      ]
      outputs: [
        {
          "id": "ServiceAccount",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "Deprecated. Do not use."
            },
            "name": {
              "type": "string",
              "description": "The resource name of the service account. Use one of the following formats: * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}` * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}` As an alternative, you can use the `-` wildcard character instead of the project ID: * `projects/-/serviceAccounts/{EMAIL_ADDRESS}` * `projects/-/serviceAccounts/{UNIQUE_ID}` When possible, avoid using the `-` wildcard character, because it can cause response messages to contain misleading error codes. For example, if you try to get the service account `projects/-/serviceAccounts/fake@example.com`, which does not exist, the response contains an HTTP `403 Forbidden` error instead of a `404 Not Found` error."
            },
            "email": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The email address of the service account."
            },
            "disabled": {
              "type": "boolean",
              "readOnly": true,
              "description": "Output only. Whether the service account is disabled."
            },
            "uniqueId": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The unique, stable numeric ID for the service account. Each service account retains its unique ID even if you delete the service account. For example, if you delete a service account, then create a new service account with the same name, the new service account has a different unique ID than the deleted service account."
            },
            "projectId": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The ID of the project that owns the service account."
            },
            "description": {
              "type": "string",
              "description": "Optional. A user-specified, human-readable description of the service account. The maximum length is 256 UTF-8 bytes."
            },
            "displayName": {
              "type": "string",
              "description": "Optional. A user-specified, human-readable name for the service account. The maximum length is 100 UTF-8 bytes."
            },
            "oauth2ClientId": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The OAuth 2.0 client ID for the service account."
            }
          },
          "description": "An IAM service account. A service account is an account for an application or a virtual machine (VM) instance, not a person. You can use a service account to call Google APIs. To learn more, read the [overview of service accounts](https://cloud.google.com/iam/help/service-accounts/overview). When you create a service account, you specify the project ID that owns the service account, as well as a name that must be unique within the project. IAM uses these values to create an email address that identifies the service account."
        }
      ]
  iam.projects.serviceAccounts.setIamPolicy:
    description: |-
      Sets the IAM policy that is attached to a ServiceAccount. Use this method to grant or revoke access to the service account. For example, you could grant a member the ability to impersonate the service account. This method does not enable the service account to access other resources. To grant roles to a service account on a resource, follow these steps: 1. Call the resource's `getIamPolicy` method to get its current IAM policy. 2. Edit the policy so that it binds the service account to an IAM role for the resource. 3. Call the resource's `setIamPolicy` method to update its IAM policy. For detailed instructions, see [Granting roles to a service account for specific resources](https://cloud.google.com/iam/help/service-accounts/granting-access-to-service-accounts).
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.serviceAccounts/setIamPolicy
    example:
      inputs: [
        {
          "id": "SetIamPolicyRequest",
          "type": "object",
          "properties": {
            "policy": {
              "id": "Policy",
              "type": "object",
              "properties": {
                "etag": {
                  "type": "string",
                  "format": "byte",
                  "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
                },
                "version": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                },
                "bindings": {
                  "type": "array",
                  "items": {
                    "id": "Binding",
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                      },
                      "members": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                      },
                      "condition": {
                        "id": "Expr",
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                          },
                          "location": {
                            "type": "string",
                            "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                          },
                          "expression": {
                            "type": "string",
                            "description": "Textual representation of an expression in Common Expression Language syntax."
                          },
                          "description": {
                            "type": "string",
                            "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                          }
                        },
                        "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                      }
                    },
                    "description": "Associates `members` with a `role`."
                  },
                  "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
                },
                "auditConfigs": {
                  "type": "array",
                  "items": {
                    "id": "AuditConfig",
                    "type": "object",
                    "properties": {
                      "service": {
                        "type": "string",
                        "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                      },
                      "auditLogConfigs": {
                        "type": "array",
                        "items": {
                          "id": "AuditLogConfig",
                          "type": "object",
                          "properties": {
                            "logType": {
                              "enum": [
                                "LOG_TYPE_UNSPECIFIED",
                                "ADMIN_READ",
                                "DATA_WRITE",
                                "DATA_READ"
                              ],
                              "type": "string",
                              "description": "The log type that this config enables.",
                              "enumDescriptions": [
                                "Default case. Should never be this.",
                                "Admin reads. Example: CloudIAM getIamPolicy",
                                "Data writes. Example: CloudSQL Users create",
                                "Data reads. Example: CloudSQL Users list"
                              ]
                            },
                            "exemptedMembers": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                            }
                          },
                          "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                        },
                        "description": "The configuration for logging of each type of permission."
                      }
                    },
                    "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
                  },
                  "description": "Specifies cloud audit logging configuration for this policy."
                }
              },
              "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
            },
            "updateMask": {
              "type": "string",
              "format": "google-fieldmask",
              "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`"
            }
          },
          "description": "Request message for `SetIamPolicy` method."
        }
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            },
            "auditConfigs": {
              "type": "array",
              "items": {
                "id": "AuditConfig",
                "type": "object",
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
                  },
                  "auditLogConfigs": {
                    "type": "array",
                    "items": {
                      "id": "AuditLogConfig",
                      "type": "object",
                      "properties": {
                        "logType": {
                          "enum": [
                            "LOG_TYPE_UNSPECIFIED",
                            "ADMIN_READ",
                            "DATA_WRITE",
                            "DATA_READ"
                          ],
                          "type": "string",
                          "description": "The log type that this config enables.",
                          "enumDescriptions": [
                            "Default case. Should never be this.",
                            "Admin reads. Example: CloudIAM getIamPolicy",
                            "Data writes. Example: CloudSQL Users create",
                            "Data reads. Example: CloudSQL Users list"
                          ]
                        },
                        "exemptedMembers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
                        }
                      },
                      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
                    },
                    "description": "The configuration for logging of each type of permission."
                  }
                },
                "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
              },
              "description": "Specifies cloud audit logging configuration for this policy."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  iam.projects.serviceAccounts.signBlob:
    description: |-
      **Note:** This method is deprecated. Use the [`signBlob`](https://cloud.google.com/iam/help/rest-credentials/v1/projects.serviceAccounts/signBlob) method in the IAM Service Account Credentials API instead. If you currently use this method, see the [migration guide](https://cloud.google.com/iam/help/credentials/migrate-api) for instructions. Signs a blob using the system-managed private key for a ServiceAccount.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.serviceAccounts/signBlob
    example:
      inputs: [
        {
          "id": "SignBlobRequest",
          "type": "object",
          "properties": {
            "bytesToSign": {
              "type": "string",
              "format": "byte",
              "description": "Required. Deprecated. [Migrate to Service Account Credentials API](https://cloud.google.com/iam/help/credentials/migrate-api). The bytes to sign."
            }
          },
          "description": "Deprecated. [Migrate to Service Account Credentials API](https://cloud.google.com/iam/help/credentials/migrate-api). The service account sign blob request."
        }
      ]
      outputs: [
        {
          "id": "SignBlobResponse",
          "type": "object",
          "properties": {
            "keyId": {
              "type": "string",
              "description": "Deprecated. [Migrate to Service Account Credentials API](https://cloud.google.com/iam/help/credentials/migrate-api). The id of the key used to sign the blob."
            },
            "signature": {
              "type": "string",
              "format": "byte",
              "description": "Deprecated. [Migrate to Service Account Credentials API](https://cloud.google.com/iam/help/credentials/migrate-api). The signed blob."
            }
          },
          "description": "Deprecated. [Migrate to Service Account Credentials API](https://cloud.google.com/iam/help/credentials/migrate-api). The service account sign blob response."
        }
      ]
  iam.projects.serviceAccounts.signJwt:
    description: |-
      **Note:** This method is deprecated. Use the [`signJwt`](https://cloud.google.com/iam/help/rest-credentials/v1/projects.serviceAccounts/signJwt) method in the IAM Service Account Credentials API instead. If you currently use this method, see the [migration guide](https://cloud.google.com/iam/help/credentials/migrate-api) for instructions. Signs a JSON Web Token (JWT) using the system-managed private key for a ServiceAccount.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.serviceAccounts/signJwt
    example:
      inputs: [
        {
          "id": "SignJwtRequest",
          "type": "object",
          "properties": {
            "payload": {
              "type": "string",
              "description": "Required. Deprecated. [Migrate to Service Account Credentials API](https://cloud.google.com/iam/help/credentials/migrate-api). The JWT payload to sign. Must be a serialized JSON object that contains a JWT Claims Set. For example: `{\"sub\": \"user@example.com\", \"iat\": 313435}` If the JWT Claims Set contains an expiration time (`exp`) claim, it must be an integer timestamp that is not in the past and no more than 1 hour in the future. If the JWT Claims Set does not contain an expiration time (`exp`) claim, this claim is added automatically, with a timestamp that is 1 hour in the future."
            }
          },
          "description": "Deprecated. [Migrate to Service Account Credentials API](https://cloud.google.com/iam/help/credentials/migrate-api). The service account sign JWT request."
        }
      ]
      outputs: [
        {
          "id": "SignJwtResponse",
          "type": "object",
          "properties": {
            "keyId": {
              "type": "string",
              "description": "Deprecated. [Migrate to Service Account Credentials API](https://cloud.google.com/iam/help/credentials/migrate-api). The id of the key used to sign the JWT."
            },
            "signedJwt": {
              "type": "string",
              "description": "Deprecated. [Migrate to Service Account Credentials API](https://cloud.google.com/iam/help/credentials/migrate-api). The signed JWT."
            }
          },
          "description": "Deprecated. [Migrate to Service Account Credentials API](https://cloud.google.com/iam/help/credentials/migrate-api). The service account sign JWT response."
        }
      ]
  iam.projects.serviceAccounts.testIamPermissions:
    description: |-
      Tests whether the caller has the specified permissions on a ServiceAccount.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.serviceAccounts/testIamPermissions
    example:
      inputs: [
        {
          "id": "TestIamPermissionsRequest",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
            }
          },
          "description": "Request message for `TestIamPermissions` method."
        }
      ]
      outputs: [
        {
          "id": "TestIamPermissionsResponse",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
            }
          },
          "description": "Response message for `TestIamPermissions` method."
        }
      ]
  iam.projects.serviceAccounts.undelete:
    description: |-
      Restores a deleted ServiceAccount. **Important:** It is not always possible to restore a deleted service account. Use this method only as a last resort. After you delete a service account, IAM permanently removes the service account 30 days later. There is no way to restore a deleted service account that has been permanently removed.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.serviceAccounts/undelete
    example:
      inputs: [
        {
          "id": "UndeleteServiceAccountRequest",
          "type": "object",
          "properties": {},
          "description": "The service account undelete request."
        }
      ]
      outputs: [
        {
          "id": "UndeleteServiceAccountResponse",
          "type": "object",
          "properties": {
            "restoredAccount": {
              "id": "ServiceAccount",
              "type": "object",
              "properties": {
                "etag": {
                  "type": "string",
                  "format": "byte",
                  "description": "Deprecated. Do not use."
                },
                "name": {
                  "type": "string",
                  "description": "The resource name of the service account. Use one of the following formats: * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}` * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}` As an alternative, you can use the `-` wildcard character instead of the project ID: * `projects/-/serviceAccounts/{EMAIL_ADDRESS}` * `projects/-/serviceAccounts/{UNIQUE_ID}` When possible, avoid using the `-` wildcard character, because it can cause response messages to contain misleading error codes. For example, if you try to get the service account `projects/-/serviceAccounts/fake@example.com`, which does not exist, the response contains an HTTP `403 Forbidden` error instead of a `404 Not Found` error."
                },
                "email": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. The email address of the service account."
                },
                "disabled": {
                  "type": "boolean",
                  "readOnly": true,
                  "description": "Output only. Whether the service account is disabled."
                },
                "uniqueId": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. The unique, stable numeric ID for the service account. Each service account retains its unique ID even if you delete the service account. For example, if you delete a service account, then create a new service account with the same name, the new service account has a different unique ID than the deleted service account."
                },
                "projectId": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. The ID of the project that owns the service account."
                },
                "description": {
                  "type": "string",
                  "description": "Optional. A user-specified, human-readable description of the service account. The maximum length is 256 UTF-8 bytes."
                },
                "displayName": {
                  "type": "string",
                  "description": "Optional. A user-specified, human-readable name for the service account. The maximum length is 100 UTF-8 bytes."
                },
                "oauth2ClientId": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Output only. The OAuth 2.0 client ID for the service account."
                }
              },
              "description": "An IAM service account. A service account is an account for an application or a virtual machine (VM) instance, not a person. You can use a service account to call Google APIs. To learn more, read the [overview of service accounts](https://cloud.google.com/iam/help/service-accounts/overview). When you create a service account, you specify the project ID that owns the service account, as well as a name that must be unique within the project. IAM uses these values to create an email address that identifies the service account."
            }
          }
        }
      ]
  iam.projects.serviceAccounts.update:
    description: |-
      **Note:** We are in the process of deprecating this method. Use PatchServiceAccount instead. Updates a ServiceAccount. You can update only the `display_name` and `description` fields.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/projects.serviceAccounts/update
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ServiceAccount",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "Deprecated. Do not use."
            },
            "name": {
              "type": "string",
              "description": "The resource name of the service account. Use one of the following formats: * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}` * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}` As an alternative, you can use the `-` wildcard character instead of the project ID: * `projects/-/serviceAccounts/{EMAIL_ADDRESS}` * `projects/-/serviceAccounts/{UNIQUE_ID}` When possible, avoid using the `-` wildcard character, because it can cause response messages to contain misleading error codes. For example, if you try to get the service account `projects/-/serviceAccounts/fake@example.com`, which does not exist, the response contains an HTTP `403 Forbidden` error instead of a `404 Not Found` error."
            },
            "email": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The email address of the service account."
            },
            "disabled": {
              "type": "boolean",
              "readOnly": true,
              "description": "Output only. Whether the service account is disabled."
            },
            "uniqueId": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The unique, stable numeric ID for the service account. Each service account retains its unique ID even if you delete the service account. For example, if you delete a service account, then create a new service account with the same name, the new service account has a different unique ID than the deleted service account."
            },
            "projectId": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The ID of the project that owns the service account."
            },
            "description": {
              "type": "string",
              "description": "Optional. A user-specified, human-readable description of the service account. The maximum length is 256 UTF-8 bytes."
            },
            "displayName": {
              "type": "string",
              "description": "Optional. A user-specified, human-readable name for the service account. The maximum length is 100 UTF-8 bytes."
            },
            "oauth2ClientId": {
              "type": "string",
              "readOnly": true,
              "description": "Output only. The OAuth 2.0 client ID for the service account."
            }
          },
          "description": "An IAM service account. A service account is an account for an application or a virtual machine (VM) instance, not a person. You can use a service account to call Google APIs. To learn more, read the [overview of service accounts](https://cloud.google.com/iam/help/service-accounts/overview). When you create a service account, you specify the project ID that owns the service account, as well as a name that must be unique within the project. IAM uses these values to create an email address that identifies the service account."
        }
      ]
  iam.roles.get:
    description: |-
      Gets the definition of a Role.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/roles/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Role",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "Used to perform a consistent read-modify-write."
            },
            "name": {
              "type": "string",
              "description": "The name of the role. When Role is used in CreateRole, the role name must not be set. When Role is used in output and other input such as UpdateRole, the role name is the complete path, e.g., roles/logging.viewer for predefined roles and organizations/{ORGANIZATION_ID}/roles/logging.viewer for custom roles."
            },
            "stage": {
              "enum": [
                "ALPHA",
                "BETA",
                "GA",
                "DEPRECATED",
                "DISABLED",
                "EAP"
              ],
              "type": "string",
              "description": "The current launch stage of the role. If the `ALPHA` launch stage has been selected for a role, the `stage` field will not be included in the returned definition for the role.",
              "enumDescriptions": [
                "The user has indicated this role is currently in an Alpha phase. If this launch stage is selected, the `stage` field will not be included when requesting the definition for a given role.",
                "The user has indicated this role is currently in a Beta phase.",
                "The user has indicated this role is generally available.",
                "The user has indicated this role is being deprecated.",
                "This role is disabled and will not contribute permissions to any members it is granted to in policies.",
                "The user has indicated this role is currently in an EAP phase."
              ]
            },
            "title": {
              "type": "string",
              "description": "Optional. A human-readable title for the role. Typically this is limited to 100 UTF-8 bytes."
            },
            "deleted": {
              "type": "boolean",
              "description": "The current deleted state of the role. This field is read only. It will be ignored in calls to CreateRole and UpdateRole."
            },
            "description": {
              "type": "string",
              "description": "Optional. A human-readable description for the role."
            },
            "includedPermissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The names of the permissions this role grants when bound in an IAM policy."
            }
          },
          "description": "A role in the Identity and Access Management API."
        }
      ]
  iam.roles.list:
    description: |-
      Lists every predefined Role that IAM supports, or every custom role that is defined for an organization or project.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/roles/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListRolesResponse",
          "type": "object",
          "properties": {
            "roles": {
              "type": "array",
              "items": {
                "id": "Role",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "format": "byte",
                    "description": "Used to perform a consistent read-modify-write."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the role. When Role is used in CreateRole, the role name must not be set. When Role is used in output and other input such as UpdateRole, the role name is the complete path, e.g., roles/logging.viewer for predefined roles and organizations/{ORGANIZATION_ID}/roles/logging.viewer for custom roles."
                  },
                  "stage": {
                    "enum": [
                      "ALPHA",
                      "BETA",
                      "GA",
                      "DEPRECATED",
                      "DISABLED",
                      "EAP"
                    ],
                    "type": "string",
                    "description": "The current launch stage of the role. If the `ALPHA` launch stage has been selected for a role, the `stage` field will not be included in the returned definition for the role.",
                    "enumDescriptions": [
                      "The user has indicated this role is currently in an Alpha phase. If this launch stage is selected, the `stage` field will not be included when requesting the definition for a given role.",
                      "The user has indicated this role is currently in a Beta phase.",
                      "The user has indicated this role is generally available.",
                      "The user has indicated this role is being deprecated.",
                      "This role is disabled and will not contribute permissions to any members it is granted to in policies.",
                      "The user has indicated this role is currently in an EAP phase."
                    ]
                  },
                  "title": {
                    "type": "string",
                    "description": "Optional. A human-readable title for the role. Typically this is limited to 100 UTF-8 bytes."
                  },
                  "deleted": {
                    "type": "boolean",
                    "description": "The current deleted state of the role. This field is read only. It will be ignored in calls to CreateRole and UpdateRole."
                  },
                  "description": {
                    "type": "string",
                    "description": "Optional. A human-readable description for the role."
                  },
                  "includedPermissions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The names of the permissions this role grants when bound in an IAM policy."
                  }
                },
                "description": "A role in the Identity and Access Management API."
              },
              "description": "The Roles defined on this resource."
            },
            "nextPageToken": {
              "type": "string",
              "description": "To retrieve the next page of results, set `ListRolesRequest.page_token` to this value."
            }
          },
          "description": "The response containing the roles defined under a resource."
        }
      ]
  iam.roles.queryGrantableRoles:
    description: |-
      Lists roles that can be granted on a Google Cloud resource. A role is grantable if the IAM policy for the resource can contain bindings to the role.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/rest/v1/roles/queryGrantableRoles
    example:
      inputs: [
        {
          "id": "QueryGrantableRolesRequest",
          "type": "object",
          "properties": {
            "view": {
              "enum": [
                "BASIC",
                "FULL"
              ],
              "type": "string",
              "enumDescriptions": [
                "Omits the `included_permissions` field. This is the default value.",
                "Returns all fields."
              ]
            },
            "pageSize": {
              "type": "integer",
              "format": "int32",
              "description": "Optional limit on the number of roles to include in the response. The default is 300, and the maximum is 1,000."
            },
            "pageToken": {
              "type": "string",
              "description": "Optional pagination token returned in an earlier QueryGrantableRolesResponse."
            },
            "fullResourceName": {
              "type": "string",
              "description": "Required. The full resource name to query from the list of grantable roles. The name follows the Google Cloud Platform resource format. For example, a Cloud Platform project with id `my-project` will be named `//cloudresourcemanager.googleapis.com/projects/my-project`."
            }
          },
          "description": "The grantable role query request."
        }
      ]
      outputs: [
        {
          "id": "QueryGrantableRolesResponse",
          "type": "object",
          "properties": {
            "roles": {
              "type": "array",
              "items": {
                "id": "Role",
                "type": "object",
                "properties": {
                  "etag": {
                    "type": "string",
                    "format": "byte",
                    "description": "Used to perform a consistent read-modify-write."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the role. When Role is used in CreateRole, the role name must not be set. When Role is used in output and other input such as UpdateRole, the role name is the complete path, e.g., roles/logging.viewer for predefined roles and organizations/{ORGANIZATION_ID}/roles/logging.viewer for custom roles."
                  },
                  "stage": {
                    "enum": [
                      "ALPHA",
                      "BETA",
                      "GA",
                      "DEPRECATED",
                      "DISABLED",
                      "EAP"
                    ],
                    "type": "string",
                    "description": "The current launch stage of the role. If the `ALPHA` launch stage has been selected for a role, the `stage` field will not be included in the returned definition for the role.",
                    "enumDescriptions": [
                      "The user has indicated this role is currently in an Alpha phase. If this launch stage is selected, the `stage` field will not be included when requesting the definition for a given role.",
                      "The user has indicated this role is currently in a Beta phase.",
                      "The user has indicated this role is generally available.",
                      "The user has indicated this role is being deprecated.",
                      "This role is disabled and will not contribute permissions to any members it is granted to in policies.",
                      "The user has indicated this role is currently in an EAP phase."
                    ]
                  },
                  "title": {
                    "type": "string",
                    "description": "Optional. A human-readable title for the role. Typically this is limited to 100 UTF-8 bytes."
                  },
                  "deleted": {
                    "type": "boolean",
                    "description": "The current deleted state of the role. This field is read only. It will be ignored in calls to CreateRole and UpdateRole."
                  },
                  "description": {
                    "type": "string",
                    "description": "Optional. A human-readable description for the role."
                  },
                  "includedPermissions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The names of the permissions this role grants when bound in an IAM policy."
                  }
                },
                "description": "A role in the Identity and Access Management API."
              },
              "description": "The list of matching roles."
            },
            "nextPageToken": {
              "type": "string",
              "description": "To retrieve the next page of results, set `QueryGrantableRolesRequest.page_token` to this value."
            }
          },
          "description": "The grantable role query response."
        }
      ]
  sts.introspect:
    description: |-
      Gets information about a Google OAuth 2.0 access token issued by the Google Cloud [Security Token Service API](https://cloud.google.com/iam/docs/reference/sts/rest).
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/sts/rest/v1/TopLevel/introspect
    example:
      inputs: [
        {
          "id": "GoogleIdentityStsV1IntrospectTokenRequest",
          "type": "object",
          "properties": {
            "token": {
              "type": "string",
              "description": "Required. The OAuth 2.0 security token issued by the Security Token Service API."
            },
            "tokenTypeHint": {
              "type": "string",
              "description": "Optional. The type of the given token. Supported values are `urn:ietf:params:oauth:token-type:access_token` and `access_token`."
            }
          },
          "description": "Request message for IntrospectToken."
        }
      ]
      outputs: [
        {
          "id": "GoogleIdentityStsV1IntrospectTokenResponse",
          "type": "object",
          "properties": {
            "exp": {
              "type": "string",
              "format": "int64",
              "description": "The expiration timestamp, measured in the number of seconds since January 1 1970 UTC, indicating when this token will expire."
            },
            "iat": {
              "type": "string",
              "format": "int64",
              "description": "The issued timestamp, measured in the number of seconds since January 1 1970 UTC, indicating when this token was originally issued."
            },
            "iss": {
              "type": "string",
              "description": "The issuer of the provided token."
            },
            "sub": {
              "type": "string",
              "description": "The unique user ID associated with the provided token. For Google Accounts, this value is based on the Google Account's user ID. For federated identities, this value is based on the identity pool ID and the value of the mapped `google.subject` attribute."
            },
            "scope": {
              "type": "string",
              "description": "A list of scopes associated with the provided token."
            },
            "active": {
              "type": "boolean",
              "description": "A boolean value that indicates whether the provided access token is currently active."
            },
            "username": {
              "type": "string",
              "description": "The human-readable identifier for the token principal subject. For example, if the provided token is associated with a workload identity pool, this field contains a value in the following format: `principal://iam.googleapis.com/projects//locations//workloadIdentityPools//subject/`"
            },
            "client_id": {
              "type": "string",
              "description": "The client identifier for the OAuth 2.0 client that requested the provided token."
            }
          },
          "description": "Response message for IntrospectToken."
        }
      ]
  sts.token:
    description: |-
      Exchanges a credential for a Google OAuth 2.0 access token. The token asserts an external identity within a workload identity pool, or it applies a Credential Access Boundary to a Google access token. When you call this method, do not send the `Authorization` HTTP header in the request. This method does not require the `Authorization` header, and using the header can cause the request to fail.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/iam/docs/reference/sts/rest/v1/TopLevel/token
    example:
      inputs: [
        {
          "id": "GoogleIdentityStsV1ExchangeTokenRequest",
          "type": "object",
          "properties": {
            "scope": {
              "type": "string",
              "description": "The OAuth 2.0 scopes to include on the resulting access token, formatted as a list of space-delimited, case-sensitive strings. Required when exchanging an external credential for a Google access token."
            },
            "options": {
              "type": "string",
              "description": "A set of features that Security Token Service supports, in addition to the standard OAuth 2.0 token exchange, formatted as a serialized JSON object of Options."
            },
            "audience": {
              "type": "string",
              "description": "The full resource name of the identity provider; for example: `//iam.googleapis.com/projects//workloadIdentityPools//providers/`. Required when exchanging an external credential for a Google access token."
            },
            "grantType": {
              "type": "string",
              "description": "Required. The grant type. Must be `urn:ietf:params:oauth:grant-type:token-exchange`, which indicates a token exchange."
            },
            "subjectToken": {
              "type": "string",
              "description": "Required. The input token. This token is either an external credential issued by a workload identity pool provider, or a short-lived access token issued by Google. If the token is an OIDC JWT, it must use the JWT format defined in [RFC 7523](https://tools.ietf.org/html/rfc7523), and the `subject_token_type` must be `urn:ietf:params:oauth:token-type:jwt`. The following headers are required: - `kid`: The identifier of the signing key securing the JWT. - `alg`: The cryptographic algorithm securing the JWT. Must be `RS256` or `ES256`. The following payload fields are required. For more information, see [RFC 7523, Section 3](https://tools.ietf.org/html/rfc7523#section-3): - `iss`: The issuer of the token. The issuer must provide a discovery document at the URL `/.well-known/openid-configuration`, where `` is the value of this field. The document must be formatted according to section 4.2 of the [OIDC 1.0 Discovery specification](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfigurationResponse). - `iat`: The issue time, in seconds, since the Unix epoch. Must be in the past. - `exp`: The expiration time, in seconds, since the Unix epoch. Must be less than 48 hours after `iat`. Shorter expiration times are more secure. If possible, we recommend setting an expiration time less than 6 hours. - `sub`: The identity asserted in the JWT. - `aud`: For workload identity pools, this must be a value specified in the allowed audiences for the workload identity pool provider, or one of the audiences allowed by default if no audiences were specified. See https://cloud.google.com/iam/docs/reference/rest/v1/projects.locations.workloadIdentityPools.providers#oidc Example header: ``` { \"alg\": \"RS256\", \"kid\": \"us-east-11\" } ``` Example payload: ``` { \"iss\": \"https://accounts.google.com\", \"iat\": 1517963104, \"exp\": 1517966704, \"aud\": \"//iam.googleapis.com/projects/1234567890123/locations/global/workloadIdentityPools/my-pool/providers/my-provider\", \"sub\": \"113475438248934895348\", \"my_claims\": { \"additional_claim\": \"value\" } } ``` If `subject_token` is for AWS, it must be a serialized `GetCallerIdentity` token. This token contains the same information as a request to the AWS [`GetCallerIdentity()`](https://docs.aws.amazon.com/STS/latest/APIReference/API_GetCallerIdentity) method, as well as the AWS [signature](https://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html) for the request information. Use Signature Version 4. Format the request as URL-encoded JSON, and set the `subject_token_type` parameter to `urn:ietf:params:aws:token-type:aws4_request`. The following parameters are required: - `url`: The URL of the AWS STS endpoint for `GetCallerIdentity()`, such as `https://sts.amazonaws.com?Action=GetCallerIdentity&Version=2011-06-15`. Regional endpoints are also supported. - `method`: The HTTP request method: `POST`. - `headers`: The HTTP request headers, which must include: - `Authorization`: The request signature. - `x-amz-date`: The time you will send the request, formatted as an [ISO8601 Basic](https://docs.aws.amazon.com/general/latest/gr/sigv4_elements.html#sigv4_elements_date) string. This value is typically set to the current time and is used to help prevent replay attacks. - `host`: The hostname of the `url` field; for example, `sts.amazonaws.com`. - `x-goog-cloud-target-resource`: The full, canonical resource name of the workload identity pool provider, with or without an `https:` prefix. To help ensure data integrity, we recommend including this header in the `SignedHeaders` field of the signed request. For example: //iam.googleapis.com/projects//locations//workloadIdentityPools//providers/ https://iam.googleapis.com/projects//locations//workloadIdentityPools//providers/ If you are using temporary security credentials provided by AWS, you must also include the header `x-amz-security-token`, with the value set to the session token. The following example shows a `GetCallerIdentity` token: ``` { \"headers\": [ {\"key\": \"x-amz-date\", \"value\": \"20200815T015049Z\"}, {\"key\": \"Authorization\", \"value\": \"AWS4-HMAC-SHA256+Credential=$credential,+SignedHeaders=host;x-amz-date;x-goog-cloud-target-resource,+Signature=$signature\"}, {\"key\": \"x-goog-cloud-target-resource\", \"value\": \"//iam.googleapis.com/projects//locations//workloadIdentityPools//providers/\"}, {\"key\": \"host\", \"value\": \"sts.amazonaws.com\"} . ], \"method\": \"POST\", \"url\": \"https://sts.amazonaws.com?Action=GetCallerIdentity&Version=2011-06-15\" } ``` You can also use a Google-issued OAuth 2.0 access token with this field to obtain an access token with new security attributes applied, such as a Credential Access Boundary. In this case, set `subject_token_type` to `urn:ietf:params:oauth:token-type:access_token`. If an access token already contains security attributes, you cannot apply additional security attributes."
            },
            "subjectTokenType": {
              "type": "string",
              "description": "Required. An identifier that indicates the type of the security token in the `subject_token` parameter. Supported values are `urn:ietf:params:oauth:token-type:jwt`, `urn:ietf:params:aws:token-type:aws4_request`, and `urn:ietf:params:oauth:token-type:access_token`."
            },
            "requestedTokenType": {
              "type": "string",
              "description": "Required. An identifier for the type of requested security token. Must be `urn:ietf:params:oauth:token-type:access_token`."
            }
          },
          "description": "Request message for ExchangeToken."
        }
      ]
      outputs: [
        {
          "id": "GoogleIdentityStsV1ExchangeTokenResponse",
          "type": "object",
          "properties": {
            "expires_in": {
              "type": "integer",
              "format": "int32",
              "description": "The amount of time, in seconds, between the time when the access token was issued and the time when the access token will expire. This field is absent when the `subject_token` in the request is a Google-issued, short-lived access token. In this case, the access token has the same expiration time as the `subject_token`."
            },
            "token_type": {
              "type": "string",
              "description": "The type of access token. Always has the value `Bearer`."
            },
            "access_token": {
              "type": "string",
              "description": "An OAuth 2.0 security token, issued by Google, in response to the token exchange request. Tokens can vary in size, depending in part on the size of mapped claims, up to a maximum of 12288 bytes (12 KB). Google reserves the right to change the token size and the maximum length at any time."
            },
            "issued_token_type": {
              "type": "string",
              "description": "The token type. Always matches the value of `requested_token_type` from the request."
            }
          },
          "description": "Response message for ExchangeToken."
        }
      ]