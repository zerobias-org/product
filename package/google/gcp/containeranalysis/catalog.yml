Product:
  name: GCP Container Analysis
  versions: [1.0.0]
  package: google.gcp.containeranalysis
  description: |-
    Container Analysis
  link: https://cloud.google.com/container-analysis
  contentType: json
Operations:
  projects.notes.batchCreate:
    description: |-
      Creates new notes in batch.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/container-analysis/docs/reference/rest/v1beta1/projects.notes/batchCreate
    example:
      inputs: [
        {
          "id": "BatchCreateNotesRequest",
          "type": "object",
          "properties": {
            "notes": {
              "type": "object",
              "description": "Required. The notes to create, the key is expected to be the note ID. Max allowed length is 1000.",
              "additionalProperties": {
                "id": "Note",
                "type": "object",
                "properties": {
                  "kind": {
                    "enum": [
                      "NOTE_KIND_UNSPECIFIED",
                      "VULNERABILITY",
                      "BUILD",
                      "IMAGE",
                      "PACKAGE",
                      "DEPLOYMENT",
                      "DISCOVERY",
                      "ATTESTATION",
                      "INTOTO"
                    ],
                    "type": "string",
                    "description": "Output only. The type of analysis. This field can be used as a filter in list requests.",
                    "enumDescriptions": [
                      "Default value. This value is unused.",
                      "The note and occurrence represent a package vulnerability.",
                      "The note and occurrence assert build provenance.",
                      "This represents an image basis relationship.",
                      "This represents a package installed via a package manager.",
                      "The note and occurrence track deployment events.",
                      "The note and occurrence track the initial discovery status of a resource.",
                      "This represents a logical \"role\" that can attest to artifacts.",
                      "This represents an in-toto link."
                    ]
                  },
                  "name": {
                    "type": "string",
                    "description": "Output only. The name of the note in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`."
                  },
                  "build": {
                    "id": "Build",
                    "type": "object",
                    "properties": {
                      "signature": {
                        "id": "BuildSignature",
                        "type": "object",
                        "properties": {
                          "keyId": {
                            "type": "string",
                            "description": "An ID for the key used to sign. This could be either an ID for the key stored in `public_key` (such as the ID or fingerprint for a PGP key, or the CN for a cert), or a reference to an external key (such as a reference to a key in Cloud Key Management Service)."
                          },
                          "keyType": {
                            "enum": [
                              "KEY_TYPE_UNSPECIFIED",
                              "PGP_ASCII_ARMORED",
                              "PKIX_PEM"
                            ],
                            "type": "string",
                            "description": "The type of the key, either stored in `public_key` or referenced in `key_id`.",
                            "enumDescriptions": [
                              "`KeyType` is not set.",
                              "`PGP ASCII Armored` public key.",
                              "`PKIX PEM` public key."
                            ]
                          },
                          "publicKey": {
                            "type": "string",
                            "description": "Public key of the builder which can be used to verify that the related findings are valid and unchanged. If `key_type` is empty, this defaults to PEM encoded public keys. This field may be empty if `key_id` references an external key. For Cloud Build based signatures, this is a PEM encoded public key. To verify the Cloud Build signature, place the contents of this field into a file (public.pem). The signature field is base64-decoded into its binary representation in signature.bin, and the provenance bytes from `BuildDetails` are base64-decoded into a binary representation in signed.bin. OpenSSL can then verify the signature: `openssl sha256 -verify public.pem -signature signature.bin signed.bin`"
                          },
                          "signature": {
                            "type": "string",
                            "format": "byte",
                            "description": "Required. Signature of the related `BuildProvenance`. In JSON, this is base-64 encoded."
                          }
                        },
                        "description": "Signature of the build in occurrences pointing to this build note containing build details."
                      },
                      "builderVersion": {
                        "type": "string",
                        "description": "Required. Immutable. Version of the builder which produced this build."
                      }
                    },
                    "description": "A note describing build provenance for a verifiable build."
                  },
                  "intoto": {
                    "id": "InToto",
                    "type": "object",
                    "properties": {
                      "stepName": {
                        "type": "string",
                        "description": "This field identifies the name of the step in the supply chain."
                      },
                      "threshold": {
                        "type": "string",
                        "format": "int64",
                        "description": "This field contains a value that indicates the minimum number of keys that need to be used to sign the step's in-toto link."
                      },
                      "signingKeys": {
                        "type": "array",
                        "items": {
                          "id": "SigningKey",
                          "type": "object",
                          "properties": {
                            "keyId": {
                              "type": "string",
                              "description": "key_id is an identifier for the signing key."
                            },
                            "keyType": {
                              "type": "string",
                              "description": "This field identifies the specific signing method. Eg: \"rsa\", \"ed25519\", and \"ecdsa\"."
                            },
                            "keyScheme": {
                              "type": "string",
                              "description": "This field contains the corresponding signature scheme. Eg: \"rsassa-pss-sha256\"."
                            },
                            "publicKeyValue": {
                              "type": "string",
                              "description": "This field contains the actual public key."
                            }
                          },
                          "description": "This defines the format used to record keys used in the software supply chain. An in-toto link is attested using one or more keys defined in the in-toto layout. An example of this is: { \"key_id\": \"776a00e29f3559e0141b3b096f696abc6cfb0c657ab40f441132b345b0...\", \"key_type\": \"rsa\", \"public_key_value\": \"-----BEGIN PUBLIC KEY-----\\MIIBojANBgkqhkiG9w0B...\", \"key_scheme\": \"rsassa-pss-sha256\" } The format for in-toto's key definition can be found in section 4.2 of the in-toto specification."
                        },
                        "description": "This field contains the public keys that can be used to verify the signatures on the step metadata."
                      },
                      "expectedCommand": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "This field contains the expected command used to perform the step."
                      },
                      "expectedProducts": {
                        "type": "array",
                        "items": {
                          "id": "ArtifactRule",
                          "type": "object",
                          "properties": {
                            "artifactRule": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "description": "Defines an object to declare an in-toto artifact rule"
                        }
                      },
                      "expectedMaterials": {
                        "type": "array",
                        "items": {
                          "id": "ArtifactRule",
                          "type": "object",
                          "properties": {
                            "artifactRule": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "description": "Defines an object to declare an in-toto artifact rule"
                        },
                        "description": "The following fields contain in-toto artifact rules identifying the artifacts that enter this supply chain step, and exit the supply chain step, i.e. materials and products of the step."
                      }
                    },
                    "description": "A note describing an in-toto link."
                  },
                  "package": {
                    "id": "Package",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Required. Immutable. The name of the package."
                      },
                      "distribution": {
                        "type": "array",
                        "items": {
                          "id": "Distribution",
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "description": "The distribution channel-specific homepage for this package."
                            },
                            "cpeUri": {
                              "type": "string",
                              "description": "Required. The cpe_uri in [CPE format](https://cpe.mitre.org/specification/) denoting the package manager version distributing a package."
                            },
                            "maintainer": {
                              "type": "string",
                              "description": "A freeform string denoting the maintainer of this package."
                            },
                            "description": {
                              "type": "string",
                              "description": "The distribution channel-specific description of this package."
                            },
                            "architecture": {
                              "enum": [
                                "ARCHITECTURE_UNSPECIFIED",
                                "X86",
                                "X64"
                              ],
                              "type": "string",
                              "description": "The CPU architecture for which packages in this distribution channel were built.",
                              "enumDescriptions": [
                                "Unknown architecture.",
                                "X86 architecture.",
                                "X64 architecture."
                              ]
                            },
                            "latestVersion": {
                              "id": "Version",
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "enum": [
                                    "VERSION_KIND_UNSPECIFIED",
                                    "NORMAL",
                                    "MINIMUM",
                                    "MAXIMUM"
                                  ],
                                  "type": "string",
                                  "description": "Required. Distinguishes between sentinel MIN/MAX versions and normal versions.",
                                  "enumDescriptions": [
                                    "Unknown.",
                                    "A standard package version.",
                                    "A special version representing negative infinity.",
                                    "A special version representing positive infinity."
                                  ]
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Required only when version kind is NORMAL. The main part of the version name."
                                },
                                "epoch": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Used to correct mistakes in the version numbering scheme."
                                },
                                "revision": {
                                  "type": "string",
                                  "description": "The iteration of the package build from the above version."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Whether this version is specifying part of an inclusive range. Grafeas does not have the capability to specify version ranges; instead we have fields that specify start version and end versions. At times this is insufficient - we also need to specify whether the version is included in the range or is excluded from the range. This boolean is expected to be set to true when the version is included in a range."
                                }
                              },
                              "description": "The latest available version of this package in this distribution channel."
                            }
                          },
                          "description": "This represents a particular channel of distribution for a given package. E.g., Debian's jessie-backports dpkg mirror."
                        },
                        "description": "The various channels by which a package is distributed."
                      }
                    },
                    "description": "A note describing a package hosted by various package managers."
                  },
                  "baseImage": {
                    "id": "Basis",
                    "type": "object",
                    "properties": {
                      "fingerprint": {
                        "id": "Fingerprint",
                        "type": "object",
                        "properties": {
                          "v1Name": {
                            "type": "string",
                            "description": "Required. The layer ID of the final layer in the Docker image's v1 representation."
                          },
                          "v2Blob": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Required. The ordered list of v2 blobs that represent a given image."
                          },
                          "v2Name": {
                            "type": "string",
                            "description": "Output only. The name of the image's v2 blobs computed via: [bottom] := v2_blobbottom := sha256(v2_blob[N] + \" \" + v2_name[N+1]) Only the name of the final blob is kept."
                          }
                        },
                        "description": "Required. Immutable. The fingerprint of the base image."
                      },
                      "resourceUrl": {
                        "type": "string",
                        "description": "Required. Immutable. The resource_url for the resource representing the basis of associated occurrence images."
                      }
                    },
                    "description": "A note describing a base image."
                  },
                  "discovery": {
                    "id": "Discovery",
                    "type": "object",
                    "properties": {
                      "analysisKind": {
                        "enum": [
                          "NOTE_KIND_UNSPECIFIED",
                          "VULNERABILITY",
                          "BUILD",
                          "IMAGE",
                          "PACKAGE",
                          "DEPLOYMENT",
                          "DISCOVERY",
                          "ATTESTATION",
                          "INTOTO"
                        ],
                        "type": "string",
                        "description": "Required. Immutable. The kind of analysis that is handled by this discovery.",
                        "enumDescriptions": [
                          "Default value. This value is unused.",
                          "The note and occurrence represent a package vulnerability.",
                          "The note and occurrence assert build provenance.",
                          "This represents an image basis relationship.",
                          "This represents a package installed via a package manager.",
                          "The note and occurrence track deployment events.",
                          "The note and occurrence track the initial discovery status of a resource.",
                          "This represents a logical \"role\" that can attest to artifacts.",
                          "This represents an in-toto link."
                        ]
                      }
                    },
                    "description": "A note describing the initial analysis of a resource."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Output only. The time this note was created. This field can be used as a filter in list requests."
                  },
                  "deployable": {
                    "id": "Deployable",
                    "type": "object",
                    "properties": {
                      "resourceUri": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Required. Resource URI for the artifact being deployed."
                      }
                    },
                    "description": "A note describing something that can be deployed."
                  },
                  "relatedUrl": {
                    "type": "array",
                    "items": {
                      "id": "RelatedUrl",
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "Specific URL associated with the resource."
                        },
                        "label": {
                          "type": "string",
                          "description": "Label to describe usage of the URL."
                        }
                      },
                      "description": "Metadata for any related URL information."
                    },
                    "description": "URLs associated with this note."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Output only. The time this note was last updated. This field can be used as a filter in list requests."
                  },
                  "vulnerability": {
                    "id": "Vulnerability",
                    "type": "object",
                    "properties": {
                      "cvssV3": {
                        "id": "CVSSv3",
                        "type": "object",
                        "properties": {
                          "scope": {
                            "enum": [
                              "SCOPE_UNSPECIFIED",
                              "SCOPE_UNCHANGED",
                              "SCOPE_CHANGED"
                            ],
                            "type": "string",
                            "enumDescriptions": [
                              "",
                              "",
                              ""
                            ]
                          },
                          "baseScore": {
                            "type": "number",
                            "format": "float",
                            "description": "The base score is a function of the base metric scores."
                          },
                          "impactScore": {
                            "type": "number",
                            "format": "float"
                          },
                          "attackVector": {
                            "enum": [
                              "ATTACK_VECTOR_UNSPECIFIED",
                              "ATTACK_VECTOR_NETWORK",
                              "ATTACK_VECTOR_ADJACENT",
                              "ATTACK_VECTOR_LOCAL",
                              "ATTACK_VECTOR_PHYSICAL"
                            ],
                            "type": "string",
                            "description": "Base Metrics Represents the intrinsic characteristics of a vulnerability that are constant over time and across user environments.",
                            "enumDescriptions": [
                              "",
                              "",
                              "",
                              "",
                              ""
                            ]
                          },
                          "integrityImpact": {
                            "enum": [
                              "IMPACT_UNSPECIFIED",
                              "IMPACT_HIGH",
                              "IMPACT_LOW",
                              "IMPACT_NONE"
                            ],
                            "type": "string",
                            "enumDescriptions": [
                              "",
                              "",
                              "",
                              ""
                            ]
                          },
                          "userInteraction": {
                            "enum": [
                              "USER_INTERACTION_UNSPECIFIED",
                              "USER_INTERACTION_NONE",
                              "USER_INTERACTION_REQUIRED"
                            ],
                            "type": "string",
                            "enumDescriptions": [
                              "",
                              "",
                              ""
                            ]
                          },
                          "attackComplexity": {
                            "enum": [
                              "ATTACK_COMPLEXITY_UNSPECIFIED",
                              "ATTACK_COMPLEXITY_LOW",
                              "ATTACK_COMPLEXITY_HIGH"
                            ],
                            "type": "string",
                            "enumDescriptions": [
                              "",
                              "",
                              ""
                            ]
                          },
                          "availabilityImpact": {
                            "enum": [
                              "IMPACT_UNSPECIFIED",
                              "IMPACT_HIGH",
                              "IMPACT_LOW",
                              "IMPACT_NONE"
                            ],
                            "type": "string",
                            "enumDescriptions": [
                              "",
                              "",
                              "",
                              ""
                            ]
                          },
                          "privilegesRequired": {
                            "enum": [
                              "PRIVILEGES_REQUIRED_UNSPECIFIED",
                              "PRIVILEGES_REQUIRED_NONE",
                              "PRIVILEGES_REQUIRED_LOW",
                              "PRIVILEGES_REQUIRED_HIGH"
                            ],
                            "type": "string",
                            "enumDescriptions": [
                              "",
                              "",
                              "",
                              ""
                            ]
                          },
                          "exploitabilityScore": {
                            "type": "number",
                            "format": "float"
                          },
                          "confidentialityImpact": {
                            "enum": [
                              "IMPACT_UNSPECIFIED",
                              "IMPACT_HIGH",
                              "IMPACT_LOW",
                              "IMPACT_NONE"
                            ],
                            "type": "string",
                            "enumDescriptions": [
                              "",
                              "",
                              "",
                              ""
                            ]
                          }
                        },
                        "description": "The full description of the CVSSv3."
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "id": "Detail",
                          "type": "object",
                          "properties": {
                            "cpeUri": {
                              "type": "string",
                              "description": "Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/) in which the vulnerability manifests. Examples include distro or storage location for vulnerable jar."
                            },
                            "source": {
                              "type": "string",
                              "description": "The source from which the information in this Detail was obtained."
                            },
                            "vendor": {
                              "type": "string",
                              "description": "The name of the vendor of the product."
                            },
                            "package": {
                              "type": "string",
                              "description": "Required. The name of the package where the vulnerability was found."
                            },
                            "isObsolete": {
                              "type": "boolean",
                              "description": "Whether this detail is obsolete. Occurrences are expected not to point to obsolete details."
                            },
                            "description": {
                              "type": "string",
                              "description": "A vendor-specific description of this note."
                            },
                            "packageType": {
                              "type": "string",
                              "description": "The type of package; whether native or non native(ruby gems, node.js packages etc)."
                            },
                            "severityName": {
                              "type": "string",
                              "description": "The severity (eg: distro assigned severity) for this vulnerability."
                            },
                            "fixedLocation": {
                              "id": "VulnerabilityLocation",
                              "type": "object",
                              "properties": {
                                "cpeUri": {
                                  "type": "string",
                                  "description": "Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/) format. Examples include distro or storage location for vulnerable jar."
                                },
                                "package": {
                                  "type": "string",
                                  "description": "Required. The package being described."
                                },
                                "version": {
                                  "id": "Version",
                                  "type": "object",
                                  "properties": {
                                    "kind": {
                                      "enum": [
                                        "VERSION_KIND_UNSPECIFIED",
                                        "NORMAL",
                                        "MINIMUM",
                                        "MAXIMUM"
                                      ],
                                      "type": "string",
                                      "description": "Required. Distinguishes between sentinel MIN/MAX versions and normal versions.",
                                      "enumDescriptions": [
                                        "Unknown.",
                                        "A standard package version.",
                                        "A special version representing negative infinity.",
                                        "A special version representing positive infinity."
                                      ]
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "Required only when version kind is NORMAL. The main part of the version name."
                                    },
                                    "epoch": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Used to correct mistakes in the version numbering scheme."
                                    },
                                    "revision": {
                                      "type": "string",
                                      "description": "The iteration of the package build from the above version."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Whether this version is specifying part of an inclusive range. Grafeas does not have the capability to specify version ranges; instead we have fields that specify start version and end versions. At times this is insufficient - we also need to specify whether the version is included in the range or is excluded from the range. This boolean is expected to be set to true when the version is included in a range."
                                    }
                                  },
                                  "description": "Required. The version of the package being described."
                                }
                              },
                              "description": "The fix for this specific package version."
                            },
                            "sourceUpdateTime": {
                              "type": "string",
                              "format": "google-datetime",
                              "description": "The time this information was last changed at the source. This is an upstream timestamp from the underlying information source - e.g. Ubuntu security tracker."
                            },
                            "maxAffectedVersion": {
                              "id": "Version",
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "enum": [
                                    "VERSION_KIND_UNSPECIFIED",
                                    "NORMAL",
                                    "MINIMUM",
                                    "MAXIMUM"
                                  ],
                                  "type": "string",
                                  "description": "Required. Distinguishes between sentinel MIN/MAX versions and normal versions.",
                                  "enumDescriptions": [
                                    "Unknown.",
                                    "A standard package version.",
                                    "A special version representing negative infinity.",
                                    "A special version representing positive infinity."
                                  ]
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Required only when version kind is NORMAL. The main part of the version name."
                                },
                                "epoch": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Used to correct mistakes in the version numbering scheme."
                                },
                                "revision": {
                                  "type": "string",
                                  "description": "The iteration of the package build from the above version."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Whether this version is specifying part of an inclusive range. Grafeas does not have the capability to specify version ranges; instead we have fields that specify start version and end versions. At times this is insufficient - we also need to specify whether the version is included in the range or is excluded from the range. This boolean is expected to be set to true when the version is included in a range."
                                }
                              },
                              "description": "The max version of the package in which the vulnerability exists."
                            },
                            "minAffectedVersion": {
                              "id": "Version",
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "enum": [
                                    "VERSION_KIND_UNSPECIFIED",
                                    "NORMAL",
                                    "MINIMUM",
                                    "MAXIMUM"
                                  ],
                                  "type": "string",
                                  "description": "Required. Distinguishes between sentinel MIN/MAX versions and normal versions.",
                                  "enumDescriptions": [
                                    "Unknown.",
                                    "A standard package version.",
                                    "A special version representing negative infinity.",
                                    "A special version representing positive infinity."
                                  ]
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Required only when version kind is NORMAL. The main part of the version name."
                                },
                                "epoch": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Used to correct mistakes in the version numbering scheme."
                                },
                                "revision": {
                                  "type": "string",
                                  "description": "The iteration of the package build from the above version."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Whether this version is specifying part of an inclusive range. Grafeas does not have the capability to specify version ranges; instead we have fields that specify start version and end versions. At times this is insufficient - we also need to specify whether the version is included in the range or is excluded from the range. This boolean is expected to be set to true when the version is included in a range."
                                }
                              },
                              "description": "The min version of the package in which the vulnerability exists."
                            }
                          },
                          "description": "Identifies all appearances of this vulnerability in the package for a specific distro/location. For example: glibc in cpe:/o:debian:debian_linux:8 for versions 2.1 - 2.2"
                        },
                        "description": "All information about the package to specifically identify this vulnerability. One entry per (version range and cpe_uri) the package vulnerability has manifested in."
                      },
                      "severity": {
                        "enum": [
                          "SEVERITY_UNSPECIFIED",
                          "MINIMAL",
                          "LOW",
                          "MEDIUM",
                          "HIGH",
                          "CRITICAL"
                        ],
                        "type": "string",
                        "description": "Note provider assigned impact of the vulnerability.",
                        "enumDescriptions": [
                          "Unknown.",
                          "Minimal severity.",
                          "Low severity.",
                          "Medium severity.",
                          "High severity.",
                          "Critical severity."
                        ]
                      },
                      "cvssScore": {
                        "type": "number",
                        "format": "float",
                        "description": "The CVSS score for this vulnerability."
                      },
                      "windowsDetails": {
                        "type": "array",
                        "items": {
                          "id": "WindowsDetail",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Required. The name of the vulnerability."
                            },
                            "cpeUri": {
                              "type": "string",
                              "description": "Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/) in which the vulnerability manifests. Examples include distro or storage location for vulnerable jar."
                            },
                            "fixingKbs": {
                              "type": "array",
                              "items": {
                                "id": "KnowledgeBase",
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "description": "A link to the KB in the Windows update catalog - https://www.catalog.update.microsoft.com/"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The KB name (generally of the form KB[0-9]+ i.e. KB123456)."
                                  }
                                }
                              },
                              "description": "Required. The names of the KBs which have hotfixes to mitigate this vulnerability. Note that there may be multiple hotfixes (and thus multiple KBs) that mitigate a given vulnerability. Currently any listed kb's presence is considered a fix."
                            },
                            "description": {
                              "type": "string",
                              "description": "The description of the vulnerability."
                            }
                          }
                        },
                        "description": "Windows details get their own format because the information format and model don't match a normal detail. Specifically Windows updates are done as patches, thus Windows vulnerabilities really are a missing package, rather than a package being at an incorrect version."
                      },
                      "sourceUpdateTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "The time this information was last changed at the source. This is an upstream timestamp from the underlying information source - e.g. Ubuntu security tracker."
                      }
                    },
                    "description": "A note describing a package vulnerability."
                  },
                  "expirationTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Time of expiration for this note. Empty if note does not expire."
                  },
                  "longDescription": {
                    "type": "string",
                    "description": "A detailed description of this note."
                  },
                  "relatedNoteNames": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Other notes related to this note."
                  },
                  "shortDescription": {
                    "type": "string",
                    "description": "A one sentence description of this note."
                  },
                  "attestationAuthority": {
                    "id": "Authority",
                    "type": "object",
                    "properties": {
                      "hint": {
                        "id": "Hint",
                        "type": "object",
                        "properties": {
                          "humanReadableName": {
                            "type": "string",
                            "description": "Required. The human readable name of this attestation authority, for example \"qa\"."
                          }
                        },
                        "description": "Hint hints at the purpose of the attestation authority."
                      }
                    },
                    "description": "A note describing an attestation role."
                  }
                },
                "description": "A type of analysis that can be done for a resource."
              }
            }
          },
          "description": "Request to create notes in batch."
        }
      ]
      outputs: [
        {
          "id": "BatchCreateNotesResponse",
          "type": "object",
          "properties": {
            "notes": {
              "type": "array",
              "items": {
                "id": "Note",
                "type": "object",
                "properties": {
                  "kind": {
                    "enum": [
                      "NOTE_KIND_UNSPECIFIED",
                      "VULNERABILITY",
                      "BUILD",
                      "IMAGE",
                      "PACKAGE",
                      "DEPLOYMENT",
                      "DISCOVERY",
                      "ATTESTATION",
                      "INTOTO"
                    ],
                    "type": "string",
                    "description": "Output only. The type of analysis. This field can be used as a filter in list requests.",
                    "enumDescriptions": [
                      "Default value. This value is unused.",
                      "The note and occurrence represent a package vulnerability.",
                      "The note and occurrence assert build provenance.",
                      "This represents an image basis relationship.",
                      "This represents a package installed via a package manager.",
                      "The note and occurrence track deployment events.",
                      "The note and occurrence track the initial discovery status of a resource.",
                      "This represents a logical \"role\" that can attest to artifacts.",
                      "This represents an in-toto link."
                    ]
                  },
                  "name": {
                    "type": "string",
                    "description": "Output only. The name of the note in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`."
                  },
                  "build": {
                    "id": "Build",
                    "type": "object",
                    "properties": {
                      "signature": {
                        "id": "BuildSignature",
                        "type": "object",
                        "properties": {
                          "keyId": {
                            "type": "string",
                            "description": "An ID for the key used to sign. This could be either an ID for the key stored in `public_key` (such as the ID or fingerprint for a PGP key, or the CN for a cert), or a reference to an external key (such as a reference to a key in Cloud Key Management Service)."
                          },
                          "keyType": {
                            "enum": [
                              "KEY_TYPE_UNSPECIFIED",
                              "PGP_ASCII_ARMORED",
                              "PKIX_PEM"
                            ],
                            "type": "string",
                            "description": "The type of the key, either stored in `public_key` or referenced in `key_id`.",
                            "enumDescriptions": [
                              "`KeyType` is not set.",
                              "`PGP ASCII Armored` public key.",
                              "`PKIX PEM` public key."
                            ]
                          },
                          "publicKey": {
                            "type": "string",
                            "description": "Public key of the builder which can be used to verify that the related findings are valid and unchanged. If `key_type` is empty, this defaults to PEM encoded public keys. This field may be empty if `key_id` references an external key. For Cloud Build based signatures, this is a PEM encoded public key. To verify the Cloud Build signature, place the contents of this field into a file (public.pem). The signature field is base64-decoded into its binary representation in signature.bin, and the provenance bytes from `BuildDetails` are base64-decoded into a binary representation in signed.bin. OpenSSL can then verify the signature: `openssl sha256 -verify public.pem -signature signature.bin signed.bin`"
                          },
                          "signature": {
                            "type": "string",
                            "format": "byte",
                            "description": "Required. Signature of the related `BuildProvenance`. In JSON, this is base-64 encoded."
                          }
                        },
                        "description": "Signature of the build in occurrences pointing to this build note containing build details."
                      },
                      "builderVersion": {
                        "type": "string",
                        "description": "Required. Immutable. Version of the builder which produced this build."
                      }
                    },
                    "description": "A note describing build provenance for a verifiable build."
                  },
                  "intoto": {
                    "id": "InToto",
                    "type": "object",
                    "properties": {
                      "stepName": {
                        "type": "string",
                        "description": "This field identifies the name of the step in the supply chain."
                      },
                      "threshold": {
                        "type": "string",
                        "format": "int64",
                        "description": "This field contains a value that indicates the minimum number of keys that need to be used to sign the step's in-toto link."
                      },
                      "signingKeys": {
                        "type": "array",
                        "items": {
                          "id": "SigningKey",
                          "type": "object",
                          "properties": {
                            "keyId": {
                              "type": "string",
                              "description": "key_id is an identifier for the signing key."
                            },
                            "keyType": {
                              "type": "string",
                              "description": "This field identifies the specific signing method. Eg: \"rsa\", \"ed25519\", and \"ecdsa\"."
                            },
                            "keyScheme": {
                              "type": "string",
                              "description": "This field contains the corresponding signature scheme. Eg: \"rsassa-pss-sha256\"."
                            },
                            "publicKeyValue": {
                              "type": "string",
                              "description": "This field contains the actual public key."
                            }
                          },
                          "description": "This defines the format used to record keys used in the software supply chain. An in-toto link is attested using one or more keys defined in the in-toto layout. An example of this is: { \"key_id\": \"776a00e29f3559e0141b3b096f696abc6cfb0c657ab40f441132b345b0...\", \"key_type\": \"rsa\", \"public_key_value\": \"-----BEGIN PUBLIC KEY-----\\MIIBojANBgkqhkiG9w0B...\", \"key_scheme\": \"rsassa-pss-sha256\" } The format for in-toto's key definition can be found in section 4.2 of the in-toto specification."
                        },
                        "description": "This field contains the public keys that can be used to verify the signatures on the step metadata."
                      },
                      "expectedCommand": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "This field contains the expected command used to perform the step."
                      },
                      "expectedProducts": {
                        "type": "array",
                        "items": {
                          "id": "ArtifactRule",
                          "type": "object",
                          "properties": {
                            "artifactRule": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "description": "Defines an object to declare an in-toto artifact rule"
                        }
                      },
                      "expectedMaterials": {
                        "type": "array",
                        "items": {
                          "id": "ArtifactRule",
                          "type": "object",
                          "properties": {
                            "artifactRule": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "description": "Defines an object to declare an in-toto artifact rule"
                        },
                        "description": "The following fields contain in-toto artifact rules identifying the artifacts that enter this supply chain step, and exit the supply chain step, i.e. materials and products of the step."
                      }
                    },
                    "description": "A note describing an in-toto link."
                  },
                  "package": {
                    "id": "Package",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Required. Immutable. The name of the package."
                      },
                      "distribution": {
                        "type": "array",
                        "items": {
                          "id": "Distribution",
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "description": "The distribution channel-specific homepage for this package."
                            },
                            "cpeUri": {
                              "type": "string",
                              "description": "Required. The cpe_uri in [CPE format](https://cpe.mitre.org/specification/) denoting the package manager version distributing a package."
                            },
                            "maintainer": {
                              "type": "string",
                              "description": "A freeform string denoting the maintainer of this package."
                            },
                            "description": {
                              "type": "string",
                              "description": "The distribution channel-specific description of this package."
                            },
                            "architecture": {
                              "enum": [
                                "ARCHITECTURE_UNSPECIFIED",
                                "X86",
                                "X64"
                              ],
                              "type": "string",
                              "description": "The CPU architecture for which packages in this distribution channel were built.",
                              "enumDescriptions": [
                                "Unknown architecture.",
                                "X86 architecture.",
                                "X64 architecture."
                              ]
                            },
                            "latestVersion": {
                              "id": "Version",
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "enum": [
                                    "VERSION_KIND_UNSPECIFIED",
                                    "NORMAL",
                                    "MINIMUM",
                                    "MAXIMUM"
                                  ],
                                  "type": "string",
                                  "description": "Required. Distinguishes between sentinel MIN/MAX versions and normal versions.",
                                  "enumDescriptions": [
                                    "Unknown.",
                                    "A standard package version.",
                                    "A special version representing negative infinity.",
                                    "A special version representing positive infinity."
                                  ]
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Required only when version kind is NORMAL. The main part of the version name."
                                },
                                "epoch": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Used to correct mistakes in the version numbering scheme."
                                },
                                "revision": {
                                  "type": "string",
                                  "description": "The iteration of the package build from the above version."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Whether this version is specifying part of an inclusive range. Grafeas does not have the capability to specify version ranges; instead we have fields that specify start version and end versions. At times this is insufficient - we also need to specify whether the version is included in the range or is excluded from the range. This boolean is expected to be set to true when the version is included in a range."
                                }
                              },
                              "description": "The latest available version of this package in this distribution channel."
                            }
                          },
                          "description": "This represents a particular channel of distribution for a given package. E.g., Debian's jessie-backports dpkg mirror."
                        },
                        "description": "The various channels by which a package is distributed."
                      }
                    },
                    "description": "A note describing a package hosted by various package managers."
                  },
                  "baseImage": {
                    "id": "Basis",
                    "type": "object",
                    "properties": {
                      "fingerprint": {
                        "id": "Fingerprint",
                        "type": "object",
                        "properties": {
                          "v1Name": {
                            "type": "string",
                            "description": "Required. The layer ID of the final layer in the Docker image's v1 representation."
                          },
                          "v2Blob": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Required. The ordered list of v2 blobs that represent a given image."
                          },
                          "v2Name": {
                            "type": "string",
                            "description": "Output only. The name of the image's v2 blobs computed via: [bottom] := v2_blobbottom := sha256(v2_blob[N] + \" \" + v2_name[N+1]) Only the name of the final blob is kept."
                          }
                        },
                        "description": "Required. Immutable. The fingerprint of the base image."
                      },
                      "resourceUrl": {
                        "type": "string",
                        "description": "Required. Immutable. The resource_url for the resource representing the basis of associated occurrence images."
                      }
                    },
                    "description": "A note describing a base image."
                  },
                  "discovery": {
                    "id": "Discovery",
                    "type": "object",
                    "properties": {
                      "analysisKind": {
                        "enum": [
                          "NOTE_KIND_UNSPECIFIED",
                          "VULNERABILITY",
                          "BUILD",
                          "IMAGE",
                          "PACKAGE",
                          "DEPLOYMENT",
                          "DISCOVERY",
                          "ATTESTATION",
                          "INTOTO"
                        ],
                        "type": "string",
                        "description": "Required. Immutable. The kind of analysis that is handled by this discovery.",
                        "enumDescriptions": [
                          "Default value. This value is unused.",
                          "The note and occurrence represent a package vulnerability.",
                          "The note and occurrence assert build provenance.",
                          "This represents an image basis relationship.",
                          "This represents a package installed via a package manager.",
                          "The note and occurrence track deployment events.",
                          "The note and occurrence track the initial discovery status of a resource.",
                          "This represents a logical \"role\" that can attest to artifacts.",
                          "This represents an in-toto link."
                        ]
                      }
                    },
                    "description": "A note describing the initial analysis of a resource."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Output only. The time this note was created. This field can be used as a filter in list requests."
                  },
                  "deployable": {
                    "id": "Deployable",
                    "type": "object",
                    "properties": {
                      "resourceUri": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Required. Resource URI for the artifact being deployed."
                      }
                    },
                    "description": "A note describing something that can be deployed."
                  },
                  "relatedUrl": {
                    "type": "array",
                    "items": {
                      "id": "RelatedUrl",
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "Specific URL associated with the resource."
                        },
                        "label": {
                          "type": "string",
                          "description": "Label to describe usage of the URL."
                        }
                      },
                      "description": "Metadata for any related URL information."
                    },
                    "description": "URLs associated with this note."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Output only. The time this note was last updated. This field can be used as a filter in list requests."
                  },
                  "vulnerability": {
                    "id": "Vulnerability",
                    "type": "object",
                    "properties": {
                      "cvssV3": {
                        "id": "CVSSv3",
                        "type": "object",
                        "properties": {
                          "scope": {
                            "enum": [
                              "SCOPE_UNSPECIFIED",
                              "SCOPE_UNCHANGED",
                              "SCOPE_CHANGED"
                            ],
                            "type": "string",
                            "enumDescriptions": [
                              "",
                              "",
                              ""
                            ]
                          },
                          "baseScore": {
                            "type": "number",
                            "format": "float",
                            "description": "The base score is a function of the base metric scores."
                          },
                          "impactScore": {
                            "type": "number",
                            "format": "float"
                          },
                          "attackVector": {
                            "enum": [
                              "ATTACK_VECTOR_UNSPECIFIED",
                              "ATTACK_VECTOR_NETWORK",
                              "ATTACK_VECTOR_ADJACENT",
                              "ATTACK_VECTOR_LOCAL",
                              "ATTACK_VECTOR_PHYSICAL"
                            ],
                            "type": "string",
                            "description": "Base Metrics Represents the intrinsic characteristics of a vulnerability that are constant over time and across user environments.",
                            "enumDescriptions": [
                              "",
                              "",
                              "",
                              "",
                              ""
                            ]
                          },
                          "integrityImpact": {
                            "enum": [
                              "IMPACT_UNSPECIFIED",
                              "IMPACT_HIGH",
                              "IMPACT_LOW",
                              "IMPACT_NONE"
                            ],
                            "type": "string",
                            "enumDescriptions": [
                              "",
                              "",
                              "",
                              ""
                            ]
                          },
                          "userInteraction": {
                            "enum": [
                              "USER_INTERACTION_UNSPECIFIED",
                              "USER_INTERACTION_NONE",
                              "USER_INTERACTION_REQUIRED"
                            ],
                            "type": "string",
                            "enumDescriptions": [
                              "",
                              "",
                              ""
                            ]
                          },
                          "attackComplexity": {
                            "enum": [
                              "ATTACK_COMPLEXITY_UNSPECIFIED",
                              "ATTACK_COMPLEXITY_LOW",
                              "ATTACK_COMPLEXITY_HIGH"
                            ],
                            "type": "string",
                            "enumDescriptions": [
                              "",
                              "",
                              ""
                            ]
                          },
                          "availabilityImpact": {
                            "enum": [
                              "IMPACT_UNSPECIFIED",
                              "IMPACT_HIGH",
                              "IMPACT_LOW",
                              "IMPACT_NONE"
                            ],
                            "type": "string",
                            "enumDescriptions": [
                              "",
                              "",
                              "",
                              ""
                            ]
                          },
                          "privilegesRequired": {
                            "enum": [
                              "PRIVILEGES_REQUIRED_UNSPECIFIED",
                              "PRIVILEGES_REQUIRED_NONE",
                              "PRIVILEGES_REQUIRED_LOW",
                              "PRIVILEGES_REQUIRED_HIGH"
                            ],
                            "type": "string",
                            "enumDescriptions": [
                              "",
                              "",
                              "",
                              ""
                            ]
                          },
                          "exploitabilityScore": {
                            "type": "number",
                            "format": "float"
                          },
                          "confidentialityImpact": {
                            "enum": [
                              "IMPACT_UNSPECIFIED",
                              "IMPACT_HIGH",
                              "IMPACT_LOW",
                              "IMPACT_NONE"
                            ],
                            "type": "string",
                            "enumDescriptions": [
                              "",
                              "",
                              "",
                              ""
                            ]
                          }
                        },
                        "description": "The full description of the CVSSv3."
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "id": "Detail",
                          "type": "object",
                          "properties": {
                            "cpeUri": {
                              "type": "string",
                              "description": "Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/) in which the vulnerability manifests. Examples include distro or storage location for vulnerable jar."
                            },
                            "source": {
                              "type": "string",
                              "description": "The source from which the information in this Detail was obtained."
                            },
                            "vendor": {
                              "type": "string",
                              "description": "The name of the vendor of the product."
                            },
                            "package": {
                              "type": "string",
                              "description": "Required. The name of the package where the vulnerability was found."
                            },
                            "isObsolete": {
                              "type": "boolean",
                              "description": "Whether this detail is obsolete. Occurrences are expected not to point to obsolete details."
                            },
                            "description": {
                              "type": "string",
                              "description": "A vendor-specific description of this note."
                            },
                            "packageType": {
                              "type": "string",
                              "description": "The type of package; whether native or non native(ruby gems, node.js packages etc)."
                            },
                            "severityName": {
                              "type": "string",
                              "description": "The severity (eg: distro assigned severity) for this vulnerability."
                            },
                            "fixedLocation": {
                              "id": "VulnerabilityLocation",
                              "type": "object",
                              "properties": {
                                "cpeUri": {
                                  "type": "string",
                                  "description": "Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/) format. Examples include distro or storage location for vulnerable jar."
                                },
                                "package": {
                                  "type": "string",
                                  "description": "Required. The package being described."
                                },
                                "version": {
                                  "id": "Version",
                                  "type": "object",
                                  "properties": {
                                    "kind": {
                                      "enum": [
                                        "VERSION_KIND_UNSPECIFIED",
                                        "NORMAL",
                                        "MINIMUM",
                                        "MAXIMUM"
                                      ],
                                      "type": "string",
                                      "description": "Required. Distinguishes between sentinel MIN/MAX versions and normal versions.",
                                      "enumDescriptions": [
                                        "Unknown.",
                                        "A standard package version.",
                                        "A special version representing negative infinity.",
                                        "A special version representing positive infinity."
                                      ]
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "Required only when version kind is NORMAL. The main part of the version name."
                                    },
                                    "epoch": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Used to correct mistakes in the version numbering scheme."
                                    },
                                    "revision": {
                                      "type": "string",
                                      "description": "The iteration of the package build from the above version."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Whether this version is specifying part of an inclusive range. Grafeas does not have the capability to specify version ranges; instead we have fields that specify start version and end versions. At times this is insufficient - we also need to specify whether the version is included in the range or is excluded from the range. This boolean is expected to be set to true when the version is included in a range."
                                    }
                                  },
                                  "description": "Required. The version of the package being described."
                                }
                              },
                              "description": "The fix for this specific package version."
                            },
                            "sourceUpdateTime": {
                              "type": "string",
                              "format": "google-datetime",
                              "description": "The time this information was last changed at the source. This is an upstream timestamp from the underlying information source - e.g. Ubuntu security tracker."
                            },
                            "maxAffectedVersion": {
                              "id": "Version",
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "enum": [
                                    "VERSION_KIND_UNSPECIFIED",
                                    "NORMAL",
                                    "MINIMUM",
                                    "MAXIMUM"
                                  ],
                                  "type": "string",
                                  "description": "Required. Distinguishes between sentinel MIN/MAX versions and normal versions.",
                                  "enumDescriptions": [
                                    "Unknown.",
                                    "A standard package version.",
                                    "A special version representing negative infinity.",
                                    "A special version representing positive infinity."
                                  ]
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Required only when version kind is NORMAL. The main part of the version name."
                                },
                                "epoch": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Used to correct mistakes in the version numbering scheme."
                                },
                                "revision": {
                                  "type": "string",
                                  "description": "The iteration of the package build from the above version."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Whether this version is specifying part of an inclusive range. Grafeas does not have the capability to specify version ranges; instead we have fields that specify start version and end versions. At times this is insufficient - we also need to specify whether the version is included in the range or is excluded from the range. This boolean is expected to be set to true when the version is included in a range."
                                }
                              },
                              "description": "The max version of the package in which the vulnerability exists."
                            },
                            "minAffectedVersion": {
                              "id": "Version",
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "enum": [
                                    "VERSION_KIND_UNSPECIFIED",
                                    "NORMAL",
                                    "MINIMUM",
                                    "MAXIMUM"
                                  ],
                                  "type": "string",
                                  "description": "Required. Distinguishes between sentinel MIN/MAX versions and normal versions.",
                                  "enumDescriptions": [
                                    "Unknown.",
                                    "A standard package version.",
                                    "A special version representing negative infinity.",
                                    "A special version representing positive infinity."
                                  ]
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Required only when version kind is NORMAL. The main part of the version name."
                                },
                                "epoch": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Used to correct mistakes in the version numbering scheme."
                                },
                                "revision": {
                                  "type": "string",
                                  "description": "The iteration of the package build from the above version."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Whether this version is specifying part of an inclusive range. Grafeas does not have the capability to specify version ranges; instead we have fields that specify start version and end versions. At times this is insufficient - we also need to specify whether the version is included in the range or is excluded from the range. This boolean is expected to be set to true when the version is included in a range."
                                }
                              },
                              "description": "The min version of the package in which the vulnerability exists."
                            }
                          },
                          "description": "Identifies all appearances of this vulnerability in the package for a specific distro/location. For example: glibc in cpe:/o:debian:debian_linux:8 for versions 2.1 - 2.2"
                        },
                        "description": "All information about the package to specifically identify this vulnerability. One entry per (version range and cpe_uri) the package vulnerability has manifested in."
                      },
                      "severity": {
                        "enum": [
                          "SEVERITY_UNSPECIFIED",
                          "MINIMAL",
                          "LOW",
                          "MEDIUM",
                          "HIGH",
                          "CRITICAL"
                        ],
                        "type": "string",
                        "description": "Note provider assigned impact of the vulnerability.",
                        "enumDescriptions": [
                          "Unknown.",
                          "Minimal severity.",
                          "Low severity.",
                          "Medium severity.",
                          "High severity.",
                          "Critical severity."
                        ]
                      },
                      "cvssScore": {
                        "type": "number",
                        "format": "float",
                        "description": "The CVSS score for this vulnerability."
                      },
                      "windowsDetails": {
                        "type": "array",
                        "items": {
                          "id": "WindowsDetail",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Required. The name of the vulnerability."
                            },
                            "cpeUri": {
                              "type": "string",
                              "description": "Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/) in which the vulnerability manifests. Examples include distro or storage location for vulnerable jar."
                            },
                            "fixingKbs": {
                              "type": "array",
                              "items": {
                                "id": "KnowledgeBase",
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "description": "A link to the KB in the Windows update catalog - https://www.catalog.update.microsoft.com/"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The KB name (generally of the form KB[0-9]+ i.e. KB123456)."
                                  }
                                }
                              },
                              "description": "Required. The names of the KBs which have hotfixes to mitigate this vulnerability. Note that there may be multiple hotfixes (and thus multiple KBs) that mitigate a given vulnerability. Currently any listed kb's presence is considered a fix."
                            },
                            "description": {
                              "type": "string",
                              "description": "The description of the vulnerability."
                            }
                          }
                        },
                        "description": "Windows details get their own format because the information format and model don't match a normal detail. Specifically Windows updates are done as patches, thus Windows vulnerabilities really are a missing package, rather than a package being at an incorrect version."
                      },
                      "sourceUpdateTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "The time this information was last changed at the source. This is an upstream timestamp from the underlying information source - e.g. Ubuntu security tracker."
                      }
                    },
                    "description": "A note describing a package vulnerability."
                  },
                  "expirationTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Time of expiration for this note. Empty if note does not expire."
                  },
                  "longDescription": {
                    "type": "string",
                    "description": "A detailed description of this note."
                  },
                  "relatedNoteNames": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Other notes related to this note."
                  },
                  "shortDescription": {
                    "type": "string",
                    "description": "A one sentence description of this note."
                  },
                  "attestationAuthority": {
                    "id": "Authority",
                    "type": "object",
                    "properties": {
                      "hint": {
                        "id": "Hint",
                        "type": "object",
                        "properties": {
                          "humanReadableName": {
                            "type": "string",
                            "description": "Required. The human readable name of this attestation authority, for example \"qa\"."
                          }
                        },
                        "description": "Hint hints at the purpose of the attestation authority."
                      }
                    },
                    "description": "A note describing an attestation role."
                  }
                },
                "description": "A type of analysis that can be done for a resource."
              },
              "description": "The notes that were created."
            }
          },
          "description": "Response for creating notes in batch."
        }
      ]
  projects.notes.create:
    description: |-
      Creates a new note.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/container-analysis/docs/reference/rest/v1beta1/projects.notes/create
    example:
      inputs: [
        {
          "id": "Note",
          "type": "object",
          "properties": {
            "kind": {
              "enum": [
                "NOTE_KIND_UNSPECIFIED",
                "VULNERABILITY",
                "BUILD",
                "IMAGE",
                "PACKAGE",
                "DEPLOYMENT",
                "DISCOVERY",
                "ATTESTATION",
                "INTOTO"
              ],
              "type": "string",
              "description": "Output only. The type of analysis. This field can be used as a filter in list requests.",
              "enumDescriptions": [
                "Default value. This value is unused.",
                "The note and occurrence represent a package vulnerability.",
                "The note and occurrence assert build provenance.",
                "This represents an image basis relationship.",
                "This represents a package installed via a package manager.",
                "The note and occurrence track deployment events.",
                "The note and occurrence track the initial discovery status of a resource.",
                "This represents a logical \"role\" that can attest to artifacts.",
                "This represents an in-toto link."
              ]
            },
            "name": {
              "type": "string",
              "description": "Output only. The name of the note in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`."
            },
            "build": {
              "id": "Build",
              "type": "object",
              "properties": {
                "signature": {
                  "id": "BuildSignature",
                  "type": "object",
                  "properties": {
                    "keyId": {
                      "type": "string",
                      "description": "An ID for the key used to sign. This could be either an ID for the key stored in `public_key` (such as the ID or fingerprint for a PGP key, or the CN for a cert), or a reference to an external key (such as a reference to a key in Cloud Key Management Service)."
                    },
                    "keyType": {
                      "enum": [
                        "KEY_TYPE_UNSPECIFIED",
                        "PGP_ASCII_ARMORED",
                        "PKIX_PEM"
                      ],
                      "type": "string",
                      "description": "The type of the key, either stored in `public_key` or referenced in `key_id`.",
                      "enumDescriptions": [
                        "`KeyType` is not set.",
                        "`PGP ASCII Armored` public key.",
                        "`PKIX PEM` public key."
                      ]
                    },
                    "publicKey": {
                      "type": "string",
                      "description": "Public key of the builder which can be used to verify that the related findings are valid and unchanged. If `key_type` is empty, this defaults to PEM encoded public keys. This field may be empty if `key_id` references an external key. For Cloud Build based signatures, this is a PEM encoded public key. To verify the Cloud Build signature, place the contents of this field into a file (public.pem). The signature field is base64-decoded into its binary representation in signature.bin, and the provenance bytes from `BuildDetails` are base64-decoded into a binary representation in signed.bin. OpenSSL can then verify the signature: `openssl sha256 -verify public.pem -signature signature.bin signed.bin`"
                    },
                    "signature": {
                      "type": "string",
                      "format": "byte",
                      "description": "Required. Signature of the related `BuildProvenance`. In JSON, this is base-64 encoded."
                    }
                  },
                  "description": "Signature of the build in occurrences pointing to this build note containing build details."
                },
                "builderVersion": {
                  "type": "string",
                  "description": "Required. Immutable. Version of the builder which produced this build."
                }
              },
              "description": "A note describing build provenance for a verifiable build."
            },
            "intoto": {
              "id": "InToto",
              "type": "object",
              "properties": {
                "stepName": {
                  "type": "string",
                  "description": "This field identifies the name of the step in the supply chain."
                },
                "threshold": {
                  "type": "string",
                  "format": "int64",
                  "description": "This field contains a value that indicates the minimum number of keys that need to be used to sign the step's in-toto link."
                },
                "signingKeys": {
                  "type": "array",
                  "items": {
                    "id": "SigningKey",
                    "type": "object",
                    "properties": {
                      "keyId": {
                        "type": "string",
                        "description": "key_id is an identifier for the signing key."
                      },
                      "keyType": {
                        "type": "string",
                        "description": "This field identifies the specific signing method. Eg: \"rsa\", \"ed25519\", and \"ecdsa\"."
                      },
                      "keyScheme": {
                        "type": "string",
                        "description": "This field contains the corresponding signature scheme. Eg: \"rsassa-pss-sha256\"."
                      },
                      "publicKeyValue": {
                        "type": "string",
                        "description": "This field contains the actual public key."
                      }
                    },
                    "description": "This defines the format used to record keys used in the software supply chain. An in-toto link is attested using one or more keys defined in the in-toto layout. An example of this is: { \"key_id\": \"776a00e29f3559e0141b3b096f696abc6cfb0c657ab40f441132b345b0...\", \"key_type\": \"rsa\", \"public_key_value\": \"-----BEGIN PUBLIC KEY-----\\MIIBojANBgkqhkiG9w0B...\", \"key_scheme\": \"rsassa-pss-sha256\" } The format for in-toto's key definition can be found in section 4.2 of the in-toto specification."
                  },
                  "description": "This field contains the public keys that can be used to verify the signatures on the step metadata."
                },
                "expectedCommand": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "This field contains the expected command used to perform the step."
                },
                "expectedProducts": {
                  "type": "array",
                  "items": {
                    "id": "ArtifactRule",
                    "type": "object",
                    "properties": {
                      "artifactRule": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "description": "Defines an object to declare an in-toto artifact rule"
                  }
                },
                "expectedMaterials": {
                  "type": "array",
                  "items": {
                    "id": "ArtifactRule",
                    "type": "object",
                    "properties": {
                      "artifactRule": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "description": "Defines an object to declare an in-toto artifact rule"
                  },
                  "description": "The following fields contain in-toto artifact rules identifying the artifacts that enter this supply chain step, and exit the supply chain step, i.e. materials and products of the step."
                }
              },
              "description": "A note describing an in-toto link."
            },
            "package": {
              "id": "Package",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Required. Immutable. The name of the package."
                },
                "distribution": {
                  "type": "array",
                  "items": {
                    "id": "Distribution",
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string",
                        "description": "The distribution channel-specific homepage for this package."
                      },
                      "cpeUri": {
                        "type": "string",
                        "description": "Required. The cpe_uri in [CPE format](https://cpe.mitre.org/specification/) denoting the package manager version distributing a package."
                      },
                      "maintainer": {
                        "type": "string",
                        "description": "A freeform string denoting the maintainer of this package."
                      },
                      "description": {
                        "type": "string",
                        "description": "The distribution channel-specific description of this package."
                      },
                      "architecture": {
                        "enum": [
                          "ARCHITECTURE_UNSPECIFIED",
                          "X86",
                          "X64"
                        ],
                        "type": "string",
                        "description": "The CPU architecture for which packages in this distribution channel were built.",
                        "enumDescriptions": [
                          "Unknown architecture.",
                          "X86 architecture.",
                          "X64 architecture."
                        ]
                      },
                      "latestVersion": {
                        "id": "Version",
                        "type": "object",
                        "properties": {
                          "kind": {
                            "enum": [
                              "VERSION_KIND_UNSPECIFIED",
                              "NORMAL",
                              "MINIMUM",
                              "MAXIMUM"
                            ],
                            "type": "string",
                            "description": "Required. Distinguishes between sentinel MIN/MAX versions and normal versions.",
                            "enumDescriptions": [
                              "Unknown.",
                              "A standard package version.",
                              "A special version representing negative infinity.",
                              "A special version representing positive infinity."
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "Required only when version kind is NORMAL. The main part of the version name."
                          },
                          "epoch": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Used to correct mistakes in the version numbering scheme."
                          },
                          "revision": {
                            "type": "string",
                            "description": "The iteration of the package build from the above version."
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Whether this version is specifying part of an inclusive range. Grafeas does not have the capability to specify version ranges; instead we have fields that specify start version and end versions. At times this is insufficient - we also need to specify whether the version is included in the range or is excluded from the range. This boolean is expected to be set to true when the version is included in a range."
                          }
                        },
                        "description": "The latest available version of this package in this distribution channel."
                      }
                    },
                    "description": "This represents a particular channel of distribution for a given package. E.g., Debian's jessie-backports dpkg mirror."
                  },
                  "description": "The various channels by which a package is distributed."
                }
              },
              "description": "A note describing a package hosted by various package managers."
            },
            "baseImage": {
              "id": "Basis",
              "type": "object",
              "properties": {
                "fingerprint": {
                  "id": "Fingerprint",
                  "type": "object",
                  "properties": {
                    "v1Name": {
                      "type": "string",
                      "description": "Required. The layer ID of the final layer in the Docker image's v1 representation."
                    },
                    "v2Blob": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Required. The ordered list of v2 blobs that represent a given image."
                    },
                    "v2Name": {
                      "type": "string",
                      "description": "Output only. The name of the image's v2 blobs computed via: [bottom] := v2_blobbottom := sha256(v2_blob[N] + \" \" + v2_name[N+1]) Only the name of the final blob is kept."
                    }
                  },
                  "description": "Required. Immutable. The fingerprint of the base image."
                },
                "resourceUrl": {
                  "type": "string",
                  "description": "Required. Immutable. The resource_url for the resource representing the basis of associated occurrence images."
                }
              },
              "description": "A note describing a base image."
            },
            "discovery": {
              "id": "Discovery",
              "type": "object",
              "properties": {
                "analysisKind": {
                  "enum": [
                    "NOTE_KIND_UNSPECIFIED",
                    "VULNERABILITY",
                    "BUILD",
                    "IMAGE",
                    "PACKAGE",
                    "DEPLOYMENT",
                    "DISCOVERY",
                    "ATTESTATION",
                    "INTOTO"
                  ],
                  "type": "string",
                  "description": "Required. Immutable. The kind of analysis that is handled by this discovery.",
                  "enumDescriptions": [
                    "Default value. This value is unused.",
                    "The note and occurrence represent a package vulnerability.",
                    "The note and occurrence assert build provenance.",
                    "This represents an image basis relationship.",
                    "This represents a package installed via a package manager.",
                    "The note and occurrence track deployment events.",
                    "The note and occurrence track the initial discovery status of a resource.",
                    "This represents a logical \"role\" that can attest to artifacts.",
                    "This represents an in-toto link."
                  ]
                }
              },
              "description": "A note describing the initial analysis of a resource."
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Output only. The time this note was created. This field can be used as a filter in list requests."
            },
            "deployable": {
              "id": "Deployable",
              "type": "object",
              "properties": {
                "resourceUri": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Required. Resource URI for the artifact being deployed."
                }
              },
              "description": "A note describing something that can be deployed."
            },
            "relatedUrl": {
              "type": "array",
              "items": {
                "id": "RelatedUrl",
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "Specific URL associated with the resource."
                  },
                  "label": {
                    "type": "string",
                    "description": "Label to describe usage of the URL."
                  }
                },
                "description": "Metadata for any related URL information."
              },
              "description": "URLs associated with this note."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Output only. The time this note was last updated. This field can be used as a filter in list requests."
            },
            "vulnerability": {
              "id": "Vulnerability",
              "type": "object",
              "properties": {
                "cvssV3": {
                  "id": "CVSSv3",
                  "type": "object",
                  "properties": {
                    "scope": {
                      "enum": [
                        "SCOPE_UNSPECIFIED",
                        "SCOPE_UNCHANGED",
                        "SCOPE_CHANGED"
                      ],
                      "type": "string",
                      "enumDescriptions": [
                        "",
                        "",
                        ""
                      ]
                    },
                    "baseScore": {
                      "type": "number",
                      "format": "float",
                      "description": "The base score is a function of the base metric scores."
                    },
                    "impactScore": {
                      "type": "number",
                      "format": "float"
                    },
                    "attackVector": {
                      "enum": [
                        "ATTACK_VECTOR_UNSPECIFIED",
                        "ATTACK_VECTOR_NETWORK",
                        "ATTACK_VECTOR_ADJACENT",
                        "ATTACK_VECTOR_LOCAL",
                        "ATTACK_VECTOR_PHYSICAL"
                      ],
                      "type": "string",
                      "description": "Base Metrics Represents the intrinsic characteristics of a vulnerability that are constant over time and across user environments.",
                      "enumDescriptions": [
                        "",
                        "",
                        "",
                        "",
                        ""
                      ]
                    },
                    "integrityImpact": {
                      "enum": [
                        "IMPACT_UNSPECIFIED",
                        "IMPACT_HIGH",
                        "IMPACT_LOW",
                        "IMPACT_NONE"
                      ],
                      "type": "string",
                      "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                      ]
                    },
                    "userInteraction": {
                      "enum": [
                        "USER_INTERACTION_UNSPECIFIED",
                        "USER_INTERACTION_NONE",
                        "USER_INTERACTION_REQUIRED"
                      ],
                      "type": "string",
                      "enumDescriptions": [
                        "",
                        "",
                        ""
                      ]
                    },
                    "attackComplexity": {
                      "enum": [
                        "ATTACK_COMPLEXITY_UNSPECIFIED",
                        "ATTACK_COMPLEXITY_LOW",
                        "ATTACK_COMPLEXITY_HIGH"
                      ],
                      "type": "string",
                      "enumDescriptions": [
                        "",
                        "",
                        ""
                      ]
                    },
                    "availabilityImpact": {
                      "enum": [
                        "IMPACT_UNSPECIFIED",
                        "IMPACT_HIGH",
                        "IMPACT_LOW",
                        "IMPACT_NONE"
                      ],
                      "type": "string",
                      "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                      ]
                    },
                    "privilegesRequired": {
                      "enum": [
                        "PRIVILEGES_REQUIRED_UNSPECIFIED",
                        "PRIVILEGES_REQUIRED_NONE",
                        "PRIVILEGES_REQUIRED_LOW",
                        "PRIVILEGES_REQUIRED_HIGH"
                      ],
                      "type": "string",
                      "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                      ]
                    },
                    "exploitabilityScore": {
                      "type": "number",
                      "format": "float"
                    },
                    "confidentialityImpact": {
                      "enum": [
                        "IMPACT_UNSPECIFIED",
                        "IMPACT_HIGH",
                        "IMPACT_LOW",
                        "IMPACT_NONE"
                      ],
                      "type": "string",
                      "enumDescriptions": [
                        "",
                        "",
                        "",
                        ""
                      ]
                    }
                  },
                  "description": "The full description of the CVSSv3."
                },
                "details": {
                  "type": "array",
                  "items": {
                    "id": "Detail",
                    "type": "object",
                    "properties": {
                      "cpeUri": {
                        "type": "string",
                        "description": "Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/) in which the vulnerability manifests. Examples include distro or storage location for vulnerable jar."
                      },
                      "source": {
                        "type": "string",
                        "description": "The source from which the information in this Detail was obtained."
                      },
                      "vendor": {
                        "type": "string",
                        "description": "The name of the vendor of the product."
                      },
                      "package": {
                        "type": "string",
                        "description": "Required. The name of the package where the vulnerability was found."
                      },
                      "isObsolete": {
                        "type": "boolean",
                        "description": "Whether this detail is obsolete. Occurrences are expected not to point to obsolete details."
                      },
                      "description": {
                        "type": "string",
                        "description": "A vendor-specific description of this note."
                      },
                      "packageType": {
                        "type": "string",
                        "description": "The type of package; whether native or non native(ruby gems, node.js packages etc)."
                      },
                      "severityName": {
                        "type": "string",
                        "description": "The severity (eg: distro assigned severity) for this vulnerability."
                      },
                      "fixedLocation": {
                        "id": "VulnerabilityLocation",
                        "type": "object",
                        "properties": {
                          "cpeUri": {
                            "type": "string",
                            "description": "Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/) format. Examples include distro or storage location for vulnerable jar."
                          },
                          "package": {
                            "type": "string",
                            "description": "Required. The package being described."
                          },
                          "version": {
                            "id": "Version",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "enum": [
                                  "VERSION_KIND_UNSPECIFIED",
                                  "NORMAL",
                                  "MINIMUM",
                                  "MAXIMUM"
                                ],
                                "type": "string",
                                "description": "Required. Distinguishes between sentinel MIN/MAX versions and normal versions.",
                                "enumDescriptions": [
                                  "Unknown.",
                                  "A standard package version.",
                                  "A special version representing negative infinity.",
                                  "A special version representing positive infinity."
                                ]
                              },
                              "name": {
                                "type": "string",
                                "description": "Required only when version kind is NORMAL. The main part of the version name."
                              },
                              "epoch": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Used to correct mistakes in the version numbering scheme."
                              },
                              "revision": {
                                "type": "string",
                                "description": "The iteration of the package build from the above version."
                              },
                              "inclusive": {
                                "type": "boolean",
                                "description": "Whether this version is specifying part of an inclusive range. Grafeas does not have the capability to specify version ranges; instead we have fields that specify start version and end versions. At times this is insufficient - we also need to specify whether the version is included in the range or is excluded from the range. This boolean is expected to be set to true when the version is included in a range."
                              }
                            },
                            "description": "Required. The version of the package being described."
                          }
                        },
                        "description": "The fix for this specific package version."
                      },
                      "sourceUpdateTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "The time this information was last changed at the source. This is an upstream timestamp from the underlying information source - e.g. Ubuntu security tracker."
                      },
                      "maxAffectedVersion": {
                        "id": "Version",
                        "type": "object",
                        "properties": {
                          "kind": {
                            "enum": [
                              "VERSION_KIND_UNSPECIFIED",
                              "NORMAL",
                              "MINIMUM",
                              "MAXIMUM"
                            ],
                            "type": "string",
                            "description": "Required. Distinguishes between sentinel MIN/MAX versions and normal versions.",
                            "enumDescriptions": [
                              "Unknown.",
                              "A standard package version.",
                              "A special version representing negative infinity.",
                              "A special version representing positive infinity."
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "Required only when version kind is NORMAL. The main part of the version name."
                          },
                          "epoch": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Used to correct mistakes in the version numbering scheme."
                          },
                          "revision": {
                            "type": "string",
                            "description": "The iteration of the package build from the above version."
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Whether this version is specifying part of an inclusive range. Grafeas does not have the capability to specify version ranges; instead we have fields that specify start version and end versions. At times this is insufficient - we also need to specify whether the version is included in the range or is excluded from the range. This boolean is expected to be set to true when the version is included in a range."
                          }
                        },
                        "description": "The max version of the package in which the vulnerability exists."
                      },
                      "minAffectedVersion": {
                        "id": "Version",
                        "type": "object",
                        "properties": {
                          "kind": {
                            "enum": [
                              "VERSION_KIND_UNSPECIFIED",
                              "NORMAL",
                              "MINIMUM",
                              "MAXIMUM"
                            ],
                            "type": "string",
                            "description": "Required. Distinguishes between sentinel MIN/MAX versions and normal versions.",
                            "enumDescriptions": [
                              "Unknown.",
                              "A standard package version.",
                              "A special version representing negative infinity.",
                              "A special version representing positive infinity."
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "Required only when version kind is NORMAL. The main part of the version name."
                          },
                          "epoch": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Used to correct mistakes in the version numbering scheme."
                          },
                          "revision": {
                            "type": "string",
                            "description": "The iteration of the package build from the above version."
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Whether this version is specifying part of an inclusive range. Grafeas does not have the capability to specify version ranges; instead we have fields that specify start version and end versions. At times this is insufficient - we also need to specify whether the version is included in the range or is excluded from the range. This boolean is expected to be set to true when the version is included in a range."
                          }
                        },
                        "description": "The min version of the package in which the vulnerability exists."
                      }
                    },
                    "description": "Identifies all appearances of this vulnerability in the package for a specific distro/location. For example: glibc in cpe:/o:debian:debian_linux:8 for versions 2.1 - 2.2"
                  },
                  "description": "All information about the package to specifically identify this vulnerability. One entry per (version range and cpe_uri) the package vulnerability has manifested in."
                },
                "severity": {
                  "enum": [
                    "SEVERITY_UNSPECIFIED",
                    "MINIMAL",
                    "LOW",
                    "MEDIUM",
                    "HIGH",
                    "CRITICAL"
                  ],
                  "type": "string",
                  "description": "Note provider assigned impact of the vulnerability.",
                  "enumDescriptions": [
                    "Unknown.",
                    "Minimal severity.",
                    "Low severity.",
                    "Medium severity.",
                    "High severity.",
                    "Critical severity."
                  ]
                },
                "cvssScore": {
                  "type": "number",
                  "format": "float",
                  "description": "The CVSS score for this vulnerability."
                },
                "windowsDetails": {
                  "type": "array",
                  "items": {
                    "id": "WindowsDetail",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Required. The name of the vulnerability."
                      },
                      "cpeUri": {
                        "type": "string",
                        "description": "Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/) in which the vulnerability manifests. Examples include distro or storage location for vulnerable jar."
                      },
                      "fixingKbs": {
                        "type": "array",
                        "items": {
                          "id": "KnowledgeBase",
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "description": "A link to the KB in the Windows update catalog - https://www.catalog.update.microsoft.com/"
                            },
                            "name": {
                              "type": "string",
                              "description": "The KB name (generally of the form KB[0-9]+ i.e. KB123456)."
                            }
                          }
                        },
                        "description": "Required. The names of the KBs which have hotfixes to mitigate this vulnerability. Note that there may be multiple hotfixes (and thus multiple KBs) that mitigate a given vulnerability. Currently any listed kb's presence is considered a fix."
                      },
                      "description": {
                        "type": "string",
                        "description": "The description of the vulnerability."
                      }
                    }
                  },
                  "description": "Windows details get their own format because the information format and model don't match a normal detail. Specifically Windows updates are done as patches, thus Windows vulnerabilities really are a missing package, rather than a package being at an incorrect version."
                },
                "sourceUpdateTime": {
                  "type": "string",
                  "format": "google-datetime",
                  "description": "The time this information was last changed at the source. This is an upstream timestamp from the underlying information source - e.g. Ubuntu security tracker."
                }
              },
              "description": "A note describing a package vulnerability."
            },
            "expirationTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Time of expiration for this note. Empty if note does not expire."
            },
            "longDescription": {
              "type": "string",
              "description": "A detailed description of this note."
            },
            "relatedNoteNames": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Other notes related to this note."
            },
            "shortDescription": {
              "type": "string",
              "description": "A one sentence description of this note."
            },
            "attestationAuthority": {
              "id": "Authority",
              "type": "object",
              "properties": {
                "hint": {
                  "id": "Hint",
                  "type": "object",
                  "properties": {
                    "humanReadableName": {
                      "type": "string",
                      "description": "Required. The human readable name of this attestation authority, for example \"qa\"."
                    }
                  },
                  "description": "Hint hints at the purpose of the attestation authority."
                }
              },
              "description": "A note describing an attestation role."
            }
          },
          "description": "A type of analysis that can be done for a resource."
        }
      ]
      outputs: [
        {}
      ]
  projects.notes.delete:
    description: |-
      Deletes the specified note.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/container-analysis/docs/reference/rest/v1beta1/projects.notes/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  projects.notes.get:
    description: |-
      Gets the specified note.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/container-analysis/docs/reference/rest/v1beta1/projects.notes/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.notes.getIamPolicy:
    description: |-
      Gets the access control policy for a note or an occurrence resource. Requires `containeranalysis.notes.setIamPolicy` or `containeranalysis.occurrences.setIamPolicy` permission if the resource is a note or occurrence, respectively. The resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for notes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for occurrences.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/container-analysis/docs/reference/rest/v1beta1/projects.notes/getIamPolicy
    example:
      inputs: [
        {
          "id": "GetIamPolicyRequest",
          "type": "object",
          "properties": {
            "options": {
              "id": "GetPolicyOptions",
              "type": "object",
              "properties": {
                "requestedPolicyVersion": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                }
              },
              "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`."
            }
          },
          "description": "Request message for `GetIamPolicy` method."
        }
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  projects.notes.list:
    description: |-
      Lists notes for the specified project.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/container-analysis/docs/reference/rest/v1beta1/projects.notes/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListNotesResponse",
          "type": "object",
          "properties": {
            "notes": {
              "type": "array",
              "items": {
                "id": "Note",
                "type": "object",
                "properties": {
                  "kind": {
                    "enum": [
                      "NOTE_KIND_UNSPECIFIED",
                      "VULNERABILITY",
                      "BUILD",
                      "IMAGE",
                      "PACKAGE",
                      "DEPLOYMENT",
                      "DISCOVERY",
                      "ATTESTATION",
                      "INTOTO"
                    ],
                    "type": "string",
                    "description": "Output only. The type of analysis. This field can be used as a filter in list requests.",
                    "enumDescriptions": [
                      "Default value. This value is unused.",
                      "The note and occurrence represent a package vulnerability.",
                      "The note and occurrence assert build provenance.",
                      "This represents an image basis relationship.",
                      "This represents a package installed via a package manager.",
                      "The note and occurrence track deployment events.",
                      "The note and occurrence track the initial discovery status of a resource.",
                      "This represents a logical \"role\" that can attest to artifacts.",
                      "This represents an in-toto link."
                    ]
                  },
                  "name": {
                    "type": "string",
                    "description": "Output only. The name of the note in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`."
                  },
                  "build": {
                    "id": "Build",
                    "type": "object",
                    "properties": {
                      "signature": {
                        "id": "BuildSignature",
                        "type": "object",
                        "properties": {
                          "keyId": {
                            "type": "string",
                            "description": "An ID for the key used to sign. This could be either an ID for the key stored in `public_key` (such as the ID or fingerprint for a PGP key, or the CN for a cert), or a reference to an external key (such as a reference to a key in Cloud Key Management Service)."
                          },
                          "keyType": {
                            "enum": [
                              "KEY_TYPE_UNSPECIFIED",
                              "PGP_ASCII_ARMORED",
                              "PKIX_PEM"
                            ],
                            "type": "string",
                            "description": "The type of the key, either stored in `public_key` or referenced in `key_id`.",
                            "enumDescriptions": [
                              "`KeyType` is not set.",
                              "`PGP ASCII Armored` public key.",
                              "`PKIX PEM` public key."
                            ]
                          },
                          "publicKey": {
                            "type": "string",
                            "description": "Public key of the builder which can be used to verify that the related findings are valid and unchanged. If `key_type` is empty, this defaults to PEM encoded public keys. This field may be empty if `key_id` references an external key. For Cloud Build based signatures, this is a PEM encoded public key. To verify the Cloud Build signature, place the contents of this field into a file (public.pem). The signature field is base64-decoded into its binary representation in signature.bin, and the provenance bytes from `BuildDetails` are base64-decoded into a binary representation in signed.bin. OpenSSL can then verify the signature: `openssl sha256 -verify public.pem -signature signature.bin signed.bin`"
                          },
                          "signature": {
                            "type": "string",
                            "format": "byte",
                            "description": "Required. Signature of the related `BuildProvenance`. In JSON, this is base-64 encoded."
                          }
                        },
                        "description": "Signature of the build in occurrences pointing to this build note containing build details."
                      },
                      "builderVersion": {
                        "type": "string",
                        "description": "Required. Immutable. Version of the builder which produced this build."
                      }
                    },
                    "description": "A note describing build provenance for a verifiable build."
                  },
                  "intoto": {
                    "id": "InToto",
                    "type": "object",
                    "properties": {
                      "stepName": {
                        "type": "string",
                        "description": "This field identifies the name of the step in the supply chain."
                      },
                      "threshold": {
                        "type": "string",
                        "format": "int64",
                        "description": "This field contains a value that indicates the minimum number of keys that need to be used to sign the step's in-toto link."
                      },
                      "signingKeys": {
                        "type": "array",
                        "items": {
                          "id": "SigningKey",
                          "type": "object",
                          "properties": {
                            "keyId": {
                              "type": "string",
                              "description": "key_id is an identifier for the signing key."
                            },
                            "keyType": {
                              "type": "string",
                              "description": "This field identifies the specific signing method. Eg: \"rsa\", \"ed25519\", and \"ecdsa\"."
                            },
                            "keyScheme": {
                              "type": "string",
                              "description": "This field contains the corresponding signature scheme. Eg: \"rsassa-pss-sha256\"."
                            },
                            "publicKeyValue": {
                              "type": "string",
                              "description": "This field contains the actual public key."
                            }
                          },
                          "description": "This defines the format used to record keys used in the software supply chain. An in-toto link is attested using one or more keys defined in the in-toto layout. An example of this is: { \"key_id\": \"776a00e29f3559e0141b3b096f696abc6cfb0c657ab40f441132b345b0...\", \"key_type\": \"rsa\", \"public_key_value\": \"-----BEGIN PUBLIC KEY-----\\MIIBojANBgkqhkiG9w0B...\", \"key_scheme\": \"rsassa-pss-sha256\" } The format for in-toto's key definition can be found in section 4.2 of the in-toto specification."
                        },
                        "description": "This field contains the public keys that can be used to verify the signatures on the step metadata."
                      },
                      "expectedCommand": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "This field contains the expected command used to perform the step."
                      },
                      "expectedProducts": {
                        "type": "array",
                        "items": {
                          "id": "ArtifactRule",
                          "type": "object",
                          "properties": {
                            "artifactRule": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "description": "Defines an object to declare an in-toto artifact rule"
                        }
                      },
                      "expectedMaterials": {
                        "type": "array",
                        "items": {
                          "id": "ArtifactRule",
                          "type": "object",
                          "properties": {
                            "artifactRule": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "description": "Defines an object to declare an in-toto artifact rule"
                        },
                        "description": "The following fields contain in-toto artifact rules identifying the artifacts that enter this supply chain step, and exit the supply chain step, i.e. materials and products of the step."
                      }
                    },
                    "description": "A note describing an in-toto link."
                  },
                  "package": {
                    "id": "Package",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Required. Immutable. The name of the package."
                      },
                      "distribution": {
                        "type": "array",
                        "items": {
                          "id": "Distribution",
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "description": "The distribution channel-specific homepage for this package."
                            },
                            "cpeUri": {
                              "type": "string",
                              "description": "Required. The cpe_uri in [CPE format](https://cpe.mitre.org/specification/) denoting the package manager version distributing a package."
                            },
                            "maintainer": {
                              "type": "string",
                              "description": "A freeform string denoting the maintainer of this package."
                            },
                            "description": {
                              "type": "string",
                              "description": "The distribution channel-specific description of this package."
                            },
                            "architecture": {
                              "enum": [
                                "ARCHITECTURE_UNSPECIFIED",
                                "X86",
                                "X64"
                              ],
                              "type": "string",
                              "description": "The CPU architecture for which packages in this distribution channel were built.",
                              "enumDescriptions": [
                                "Unknown architecture.",
                                "X86 architecture.",
                                "X64 architecture."
                              ]
                            },
                            "latestVersion": {
                              "id": "Version",
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "enum": [
                                    "VERSION_KIND_UNSPECIFIED",
                                    "NORMAL",
                                    "MINIMUM",
                                    "MAXIMUM"
                                  ],
                                  "type": "string",
                                  "description": "Required. Distinguishes between sentinel MIN/MAX versions and normal versions.",
                                  "enumDescriptions": [
                                    "Unknown.",
                                    "A standard package version.",
                                    "A special version representing negative infinity.",
                                    "A special version representing positive infinity."
                                  ]
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Required only when version kind is NORMAL. The main part of the version name."
                                },
                                "epoch": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Used to correct mistakes in the version numbering scheme."
                                },
                                "revision": {
                                  "type": "string",
                                  "description": "The iteration of the package build from the above version."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Whether this version is specifying part of an inclusive range. Grafeas does not have the capability to specify version ranges; instead we have fields that specify start version and end versions. At times this is insufficient - we also need to specify whether the version is included in the range or is excluded from the range. This boolean is expected to be set to true when the version is included in a range."
                                }
                              },
                              "description": "The latest available version of this package in this distribution channel."
                            }
                          },
                          "description": "This represents a particular channel of distribution for a given package. E.g., Debian's jessie-backports dpkg mirror."
                        },
                        "description": "The various channels by which a package is distributed."
                      }
                    },
                    "description": "A note describing a package hosted by various package managers."
                  },
                  "baseImage": {
                    "id": "Basis",
                    "type": "object",
                    "properties": {
                      "fingerprint": {
                        "id": "Fingerprint",
                        "type": "object",
                        "properties": {
                          "v1Name": {
                            "type": "string",
                            "description": "Required. The layer ID of the final layer in the Docker image's v1 representation."
                          },
                          "v2Blob": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Required. The ordered list of v2 blobs that represent a given image."
                          },
                          "v2Name": {
                            "type": "string",
                            "description": "Output only. The name of the image's v2 blobs computed via: [bottom] := v2_blobbottom := sha256(v2_blob[N] + \" \" + v2_name[N+1]) Only the name of the final blob is kept."
                          }
                        },
                        "description": "Required. Immutable. The fingerprint of the base image."
                      },
                      "resourceUrl": {
                        "type": "string",
                        "description": "Required. Immutable. The resource_url for the resource representing the basis of associated occurrence images."
                      }
                    },
                    "description": "A note describing a base image."
                  },
                  "discovery": {
                    "id": "Discovery",
                    "type": "object",
                    "properties": {
                      "analysisKind": {
                        "enum": [
                          "NOTE_KIND_UNSPECIFIED",
                          "VULNERABILITY",
                          "BUILD",
                          "IMAGE",
                          "PACKAGE",
                          "DEPLOYMENT",
                          "DISCOVERY",
                          "ATTESTATION",
                          "INTOTO"
                        ],
                        "type": "string",
                        "description": "Required. Immutable. The kind of analysis that is handled by this discovery.",
                        "enumDescriptions": [
                          "Default value. This value is unused.",
                          "The note and occurrence represent a package vulnerability.",
                          "The note and occurrence assert build provenance.",
                          "This represents an image basis relationship.",
                          "This represents a package installed via a package manager.",
                          "The note and occurrence track deployment events.",
                          "The note and occurrence track the initial discovery status of a resource.",
                          "This represents a logical \"role\" that can attest to artifacts.",
                          "This represents an in-toto link."
                        ]
                      }
                    },
                    "description": "A note describing the initial analysis of a resource."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Output only. The time this note was created. This field can be used as a filter in list requests."
                  },
                  "deployable": {
                    "id": "Deployable",
                    "type": "object",
                    "properties": {
                      "resourceUri": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Required. Resource URI for the artifact being deployed."
                      }
                    },
                    "description": "A note describing something that can be deployed."
                  },
                  "relatedUrl": {
                    "type": "array",
                    "items": {
                      "id": "RelatedUrl",
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "Specific URL associated with the resource."
                        },
                        "label": {
                          "type": "string",
                          "description": "Label to describe usage of the URL."
                        }
                      },
                      "description": "Metadata for any related URL information."
                    },
                    "description": "URLs associated with this note."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Output only. The time this note was last updated. This field can be used as a filter in list requests."
                  },
                  "vulnerability": {
                    "id": "Vulnerability",
                    "type": "object",
                    "properties": {
                      "cvssV3": {
                        "id": "CVSSv3",
                        "type": "object",
                        "properties": {
                          "scope": {
                            "enum": [
                              "SCOPE_UNSPECIFIED",
                              "SCOPE_UNCHANGED",
                              "SCOPE_CHANGED"
                            ],
                            "type": "string",
                            "enumDescriptions": [
                              "",
                              "",
                              ""
                            ]
                          },
                          "baseScore": {
                            "type": "number",
                            "format": "float",
                            "description": "The base score is a function of the base metric scores."
                          },
                          "impactScore": {
                            "type": "number",
                            "format": "float"
                          },
                          "attackVector": {
                            "enum": [
                              "ATTACK_VECTOR_UNSPECIFIED",
                              "ATTACK_VECTOR_NETWORK",
                              "ATTACK_VECTOR_ADJACENT",
                              "ATTACK_VECTOR_LOCAL",
                              "ATTACK_VECTOR_PHYSICAL"
                            ],
                            "type": "string",
                            "description": "Base Metrics Represents the intrinsic characteristics of a vulnerability that are constant over time and across user environments.",
                            "enumDescriptions": [
                              "",
                              "",
                              "",
                              "",
                              ""
                            ]
                          },
                          "integrityImpact": {
                            "enum": [
                              "IMPACT_UNSPECIFIED",
                              "IMPACT_HIGH",
                              "IMPACT_LOW",
                              "IMPACT_NONE"
                            ],
                            "type": "string",
                            "enumDescriptions": [
                              "",
                              "",
                              "",
                              ""
                            ]
                          },
                          "userInteraction": {
                            "enum": [
                              "USER_INTERACTION_UNSPECIFIED",
                              "USER_INTERACTION_NONE",
                              "USER_INTERACTION_REQUIRED"
                            ],
                            "type": "string",
                            "enumDescriptions": [
                              "",
                              "",
                              ""
                            ]
                          },
                          "attackComplexity": {
                            "enum": [
                              "ATTACK_COMPLEXITY_UNSPECIFIED",
                              "ATTACK_COMPLEXITY_LOW",
                              "ATTACK_COMPLEXITY_HIGH"
                            ],
                            "type": "string",
                            "enumDescriptions": [
                              "",
                              "",
                              ""
                            ]
                          },
                          "availabilityImpact": {
                            "enum": [
                              "IMPACT_UNSPECIFIED",
                              "IMPACT_HIGH",
                              "IMPACT_LOW",
                              "IMPACT_NONE"
                            ],
                            "type": "string",
                            "enumDescriptions": [
                              "",
                              "",
                              "",
                              ""
                            ]
                          },
                          "privilegesRequired": {
                            "enum": [
                              "PRIVILEGES_REQUIRED_UNSPECIFIED",
                              "PRIVILEGES_REQUIRED_NONE",
                              "PRIVILEGES_REQUIRED_LOW",
                              "PRIVILEGES_REQUIRED_HIGH"
                            ],
                            "type": "string",
                            "enumDescriptions": [
                              "",
                              "",
                              "",
                              ""
                            ]
                          },
                          "exploitabilityScore": {
                            "type": "number",
                            "format": "float"
                          },
                          "confidentialityImpact": {
                            "enum": [
                              "IMPACT_UNSPECIFIED",
                              "IMPACT_HIGH",
                              "IMPACT_LOW",
                              "IMPACT_NONE"
                            ],
                            "type": "string",
                            "enumDescriptions": [
                              "",
                              "",
                              "",
                              ""
                            ]
                          }
                        },
                        "description": "The full description of the CVSSv3."
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "id": "Detail",
                          "type": "object",
                          "properties": {
                            "cpeUri": {
                              "type": "string",
                              "description": "Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/) in which the vulnerability manifests. Examples include distro or storage location for vulnerable jar."
                            },
                            "source": {
                              "type": "string",
                              "description": "The source from which the information in this Detail was obtained."
                            },
                            "vendor": {
                              "type": "string",
                              "description": "The name of the vendor of the product."
                            },
                            "package": {
                              "type": "string",
                              "description": "Required. The name of the package where the vulnerability was found."
                            },
                            "isObsolete": {
                              "type": "boolean",
                              "description": "Whether this detail is obsolete. Occurrences are expected not to point to obsolete details."
                            },
                            "description": {
                              "type": "string",
                              "description": "A vendor-specific description of this note."
                            },
                            "packageType": {
                              "type": "string",
                              "description": "The type of package; whether native or non native(ruby gems, node.js packages etc)."
                            },
                            "severityName": {
                              "type": "string",
                              "description": "The severity (eg: distro assigned severity) for this vulnerability."
                            },
                            "fixedLocation": {
                              "id": "VulnerabilityLocation",
                              "type": "object",
                              "properties": {
                                "cpeUri": {
                                  "type": "string",
                                  "description": "Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/) format. Examples include distro or storage location for vulnerable jar."
                                },
                                "package": {
                                  "type": "string",
                                  "description": "Required. The package being described."
                                },
                                "version": {
                                  "id": "Version",
                                  "type": "object",
                                  "properties": {
                                    "kind": {
                                      "enum": [
                                        "VERSION_KIND_UNSPECIFIED",
                                        "NORMAL",
                                        "MINIMUM",
                                        "MAXIMUM"
                                      ],
                                      "type": "string",
                                      "description": "Required. Distinguishes between sentinel MIN/MAX versions and normal versions.",
                                      "enumDescriptions": [
                                        "Unknown.",
                                        "A standard package version.",
                                        "A special version representing negative infinity.",
                                        "A special version representing positive infinity."
                                      ]
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "Required only when version kind is NORMAL. The main part of the version name."
                                    },
                                    "epoch": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Used to correct mistakes in the version numbering scheme."
                                    },
                                    "revision": {
                                      "type": "string",
                                      "description": "The iteration of the package build from the above version."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Whether this version is specifying part of an inclusive range. Grafeas does not have the capability to specify version ranges; instead we have fields that specify start version and end versions. At times this is insufficient - we also need to specify whether the version is included in the range or is excluded from the range. This boolean is expected to be set to true when the version is included in a range."
                                    }
                                  },
                                  "description": "Required. The version of the package being described."
                                }
                              },
                              "description": "The fix for this specific package version."
                            },
                            "sourceUpdateTime": {
                              "type": "string",
                              "format": "google-datetime",
                              "description": "The time this information was last changed at the source. This is an upstream timestamp from the underlying information source - e.g. Ubuntu security tracker."
                            },
                            "maxAffectedVersion": {
                              "id": "Version",
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "enum": [
                                    "VERSION_KIND_UNSPECIFIED",
                                    "NORMAL",
                                    "MINIMUM",
                                    "MAXIMUM"
                                  ],
                                  "type": "string",
                                  "description": "Required. Distinguishes between sentinel MIN/MAX versions and normal versions.",
                                  "enumDescriptions": [
                                    "Unknown.",
                                    "A standard package version.",
                                    "A special version representing negative infinity.",
                                    "A special version representing positive infinity."
                                  ]
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Required only when version kind is NORMAL. The main part of the version name."
                                },
                                "epoch": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Used to correct mistakes in the version numbering scheme."
                                },
                                "revision": {
                                  "type": "string",
                                  "description": "The iteration of the package build from the above version."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Whether this version is specifying part of an inclusive range. Grafeas does not have the capability to specify version ranges; instead we have fields that specify start version and end versions. At times this is insufficient - we also need to specify whether the version is included in the range or is excluded from the range. This boolean is expected to be set to true when the version is included in a range."
                                }
                              },
                              "description": "The max version of the package in which the vulnerability exists."
                            },
                            "minAffectedVersion": {
                              "id": "Version",
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "enum": [
                                    "VERSION_KIND_UNSPECIFIED",
                                    "NORMAL",
                                    "MINIMUM",
                                    "MAXIMUM"
                                  ],
                                  "type": "string",
                                  "description": "Required. Distinguishes between sentinel MIN/MAX versions and normal versions.",
                                  "enumDescriptions": [
                                    "Unknown.",
                                    "A standard package version.",
                                    "A special version representing negative infinity.",
                                    "A special version representing positive infinity."
                                  ]
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Required only when version kind is NORMAL. The main part of the version name."
                                },
                                "epoch": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Used to correct mistakes in the version numbering scheme."
                                },
                                "revision": {
                                  "type": "string",
                                  "description": "The iteration of the package build from the above version."
                                },
                                "inclusive": {
                                  "type": "boolean",
                                  "description": "Whether this version is specifying part of an inclusive range. Grafeas does not have the capability to specify version ranges; instead we have fields that specify start version and end versions. At times this is insufficient - we also need to specify whether the version is included in the range or is excluded from the range. This boolean is expected to be set to true when the version is included in a range."
                                }
                              },
                              "description": "The min version of the package in which the vulnerability exists."
                            }
                          },
                          "description": "Identifies all appearances of this vulnerability in the package for a specific distro/location. For example: glibc in cpe:/o:debian:debian_linux:8 for versions 2.1 - 2.2"
                        },
                        "description": "All information about the package to specifically identify this vulnerability. One entry per (version range and cpe_uri) the package vulnerability has manifested in."
                      },
                      "severity": {
                        "enum": [
                          "SEVERITY_UNSPECIFIED",
                          "MINIMAL",
                          "LOW",
                          "MEDIUM",
                          "HIGH",
                          "CRITICAL"
                        ],
                        "type": "string",
                        "description": "Note provider assigned impact of the vulnerability.",
                        "enumDescriptions": [
                          "Unknown.",
                          "Minimal severity.",
                          "Low severity.",
                          "Medium severity.",
                          "High severity.",
                          "Critical severity."
                        ]
                      },
                      "cvssScore": {
                        "type": "number",
                        "format": "float",
                        "description": "The CVSS score for this vulnerability."
                      },
                      "windowsDetails": {
                        "type": "array",
                        "items": {
                          "id": "WindowsDetail",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Required. The name of the vulnerability."
                            },
                            "cpeUri": {
                              "type": "string",
                              "description": "Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/) in which the vulnerability manifests. Examples include distro or storage location for vulnerable jar."
                            },
                            "fixingKbs": {
                              "type": "array",
                              "items": {
                                "id": "KnowledgeBase",
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "description": "A link to the KB in the Windows update catalog - https://www.catalog.update.microsoft.com/"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The KB name (generally of the form KB[0-9]+ i.e. KB123456)."
                                  }
                                }
                              },
                              "description": "Required. The names of the KBs which have hotfixes to mitigate this vulnerability. Note that there may be multiple hotfixes (and thus multiple KBs) that mitigate a given vulnerability. Currently any listed kb's presence is considered a fix."
                            },
                            "description": {
                              "type": "string",
                              "description": "The description of the vulnerability."
                            }
                          }
                        },
                        "description": "Windows details get their own format because the information format and model don't match a normal detail. Specifically Windows updates are done as patches, thus Windows vulnerabilities really are a missing package, rather than a package being at an incorrect version."
                      },
                      "sourceUpdateTime": {
                        "type": "string",
                        "format": "google-datetime",
                        "description": "The time this information was last changed at the source. This is an upstream timestamp from the underlying information source - e.g. Ubuntu security tracker."
                      }
                    },
                    "description": "A note describing a package vulnerability."
                  },
                  "expirationTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Time of expiration for this note. Empty if note does not expire."
                  },
                  "longDescription": {
                    "type": "string",
                    "description": "A detailed description of this note."
                  },
                  "relatedNoteNames": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Other notes related to this note."
                  },
                  "shortDescription": {
                    "type": "string",
                    "description": "A one sentence description of this note."
                  },
                  "attestationAuthority": {
                    "id": "Authority",
                    "type": "object",
                    "properties": {
                      "hint": {
                        "id": "Hint",
                        "type": "object",
                        "properties": {
                          "humanReadableName": {
                            "type": "string",
                            "description": "Required. The human readable name of this attestation authority, for example \"qa\"."
                          }
                        },
                        "description": "Hint hints at the purpose of the attestation authority."
                      }
                    },
                    "description": "A note describing an attestation role."
                  }
                },
                "description": "A type of analysis that can be done for a resource."
              },
              "description": "The notes requested."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The next pagination token in the list response. It should be used as `page_token` for the following request. An empty value means no more results."
            }
          },
          "description": "Response for listing notes."
        }
      ]
  projects.notes.occurrences.list:
    description: |-
      Lists occurrences referencing the specified note. Provider projects can use this method to get all occurrences across consumer projects referencing the specified note.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/container-analysis/docs/reference/rest/v1beta1/projects.notes.occurrences/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListNoteOccurrencesResponse",
          "type": "object",
          "properties": {
            "occurrences": {
              "type": "array",
              "items": {
                "id": "Occurrence",
                "type": "object",
                "properties": {
                  "kind": {
                    "enum": [
                      "NOTE_KIND_UNSPECIFIED",
                      "VULNERABILITY",
                      "BUILD",
                      "IMAGE",
                      "PACKAGE",
                      "DEPLOYMENT",
                      "DISCOVERY",
                      "ATTESTATION",
                      "INTOTO"
                    ],
                    "type": "string",
                    "description": "Output only. This explicitly denotes which of the occurrence details are specified. This field can be used as a filter in list requests.",
                    "enumDescriptions": [
                      "Default value. This value is unused.",
                      "The note and occurrence represent a package vulnerability.",
                      "The note and occurrence assert build provenance.",
                      "This represents an image basis relationship.",
                      "This represents a package installed via a package manager.",
                      "The note and occurrence track deployment events.",
                      "The note and occurrence track the initial discovery status of a resource.",
                      "This represents a logical \"role\" that can attest to artifacts.",
                      "This represents an in-toto link."
                    ]
                  },
                  "name": {
                    "type": "string",
                    "description": "Output only. The name of the occurrence in the form of `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`."
                  },
                  "build": {
                    "id": "GrafeasV1beta1BuildDetails",
                    "type": "object",
                    "properties": {
                      "provenance": {
                        "id": "BuildProvenance",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Required. Unique identifier of the build."
                          },
                          "creator": {
                            "type": "string",
                            "description": "E-mail address of the user who initiated this build. Note that this was the user's e-mail address at the time the build was initiated; this address may not represent the same end-user for all time."
                          },
                          "endTime": {
                            "type": "string",
                            "format": "google-datetime",
                            "description": "Time at which execution of the build was finished."
                          },
                          "logsUri": {
                            "type": "string",
                            "description": "URI where any logs for this provenance were written."
                          },
                          "commands": {
                            "type": "array",
                            "items": {
                              "id": "Command",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Optional unique identifier for this command, used in wait_for to reference this command as a dependency."
                                },
                                "dir": {
                                  "type": "string",
                                  "description": "Working directory (relative to project source root) used when running this command."
                                },
                                "env": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Environment variables set before running this command."
                                },
                                "args": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Command-line arguments used when executing this command."
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Required. Name of the command, as presented on the command line, or if the command is packaged as a Docker container, as presented to `docker pull`."
                                },
                                "waitFor": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "The ID(s) of the command(s) that this command depends on."
                                }
                              },
                              "description": "Command describes a step performed as part of the build pipeline."
                            },
                            "description": "Commands requested by the build."
                          },
                          "projectId": {
                            "type": "string",
                            "description": "ID of the project."
                          },
                          "startTime": {
                            "type": "string",
                            "format": "google-datetime",
                            "description": "Time at which execution of the build was started."
                          },
                          "triggerId": {
                            "type": "string",
                            "description": "Trigger identifier if the build was triggered automatically; empty if not."
                          },
                          "createTime": {
                            "type": "string",
                            "format": "google-datetime",
                            "description": "Time at which the build was created."
                          },
                          "buildOptions": {
                            "type": "object",
                            "description": "Special options applied to this build. This is a catch-all field where build providers can enter any desired additional details.",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "builderVersion": {
                            "type": "string",
                            "description": "Version string of the builder at the time this build was executed."
                          },
                          "builtArtifacts": {
                            "type": "array",
                            "items": {
                              "id": "Artifact",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Artifact ID, if any; for container images, this will be a URL by digest like `gcr.io/projectID/imagename@sha256:123456`."
                                },
                                "names": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Related artifact names. This may be the path to a binary or jar file, or in the case of a container build, the name used to push the container image to Google Container Registry, as presented to `docker push`. Note that a single Artifact ID can have multiple names, for example if two tags are applied to one image."
                                },
                                "checksum": {
                                  "type": "string",
                                  "description": "Hash or checksum value of a binary, or Docker Registry 2.0 digest of a container."
                                }
                              },
                              "description": "Artifact describes a build product."
                            },
                            "description": "Output of the build."
                          },
                          "sourceProvenance": {
                            "id": "Source",
                            "type": "object",
                            "properties": {
                              "context": {
                                "id": "SourceContext",
                                "type": "object",
                                "properties": {
                                  "git": {
                                    "id": "GitSourceContext",
                                    "type": "object",
                                    "properties": {
                                      "url": {
                                        "type": "string",
                                        "description": "Git repository URL."
                                      },
                                      "revisionId": {
                                        "type": "string",
                                        "description": "Git commit hash."
                                      }
                                    },
                                    "description": "A SourceContext referring to any third party Git repo (e.g., GitHub)."
                                  },
                                  "gerrit": {
                                    "id": "GerritSourceContext",
                                    "type": "object",
                                    "properties": {
                                      "hostUri": {
                                        "type": "string",
                                        "description": "The URI of a running Gerrit instance."
                                      },
                                      "revisionId": {
                                        "type": "string",
                                        "description": "A revision (commit) ID."
                                      },
                                      "aliasContext": {
                                        "id": "AliasContext",
                                        "type": "object",
                                        "properties": {
                                          "kind": {
                                            "enum": [
                                              "KIND_UNSPECIFIED",
                                              "FIXED",
                                              "MOVABLE",
                                              "OTHER"
                                            ],
                                            "type": "string",
                                            "description": "The alias kind.",
                                            "enumDescriptions": [
                                              "Unknown.",
                                              "Git tag.",
                                              "Git branch.",
                                              "Used to specify non-standard aliases. For example, if a Git repo has a ref named \"refs/foo/bar\"."
                                            ]
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The alias name."
                                          }
                                        },
                                        "description": "An alias, which may be a branch or tag."
                                      },
                                      "gerritProject": {
                                        "type": "string",
                                        "description": "The full project name within the host. Projects may be nested, so \"project/subproject\" is a valid project name. The \"repo name\" is the hostURI/project."
                                      }
                                    },
                                    "description": "A SourceContext referring to a Gerrit project."
                                  },
                                  "labels": {
                                    "type": "object",
                                    "description": "Labels with user defined metadata.",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "cloudRepo": {
                                    "id": "CloudRepoSourceContext",
                                    "type": "object",
                                    "properties": {
                                      "repoId": {
                                        "id": "RepoId",
                                        "type": "object",
                                        "properties": {
                                          "uid": {
                                            "type": "string",
                                            "description": "A server-assigned, globally unique identifier."
                                          },
                                          "projectRepoId": {
                                            "id": "ProjectRepoId",
                                            "type": "object",
                                            "properties": {
                                              "repoName": {
                                                "type": "string",
                                                "description": "The name of the repo. Leave empty for the default repo."
                                              },
                                              "projectId": {
                                                "type": "string",
                                                "description": "The ID of the project."
                                              }
                                            },
                                            "description": "A combination of a project ID and a repo name."
                                          }
                                        },
                                        "description": "The ID of the repo."
                                      },
                                      "revisionId": {
                                        "type": "string",
                                        "description": "A revision ID."
                                      },
                                      "aliasContext": {
                                        "id": "AliasContext",
                                        "type": "object",
                                        "properties": {
                                          "kind": {
                                            "enum": [
                                              "KIND_UNSPECIFIED",
                                              "FIXED",
                                              "MOVABLE",
                                              "OTHER"
                                            ],
                                            "type": "string",
                                            "description": "The alias kind.",
                                            "enumDescriptions": [
                                              "Unknown.",
                                              "Git tag.",
                                              "Git branch.",
                                              "Used to specify non-standard aliases. For example, if a Git repo has a ref named \"refs/foo/bar\"."
                                            ]
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The alias name."
                                          }
                                        },
                                        "description": "An alias, which may be a branch or tag."
                                      }
                                    },
                                    "description": "A SourceContext referring to a revision in a Google Cloud Source Repo."
                                  }
                                },
                                "description": "A SourceContext is a reference to a tree of files. A SourceContext together with a path point to a unique revision of a single file or directory."
                              },
                              "fileHashes": {
                                "type": "object",
                                "description": "Hash(es) of the build source, which can be used to verify that the original source integrity was maintained in the build. The keys to this map are file paths used as build source and the values contain the hash values for those files. If the build source came in a single package such as a gzipped tarfile (.tar.gz), the FileHash will be for the single path to that file.",
                                "additionalProperties": {
                                  "id": "FileHashes",
                                  "type": "object",
                                  "properties": {
                                    "fileHash": {
                                      "type": "array",
                                      "items": {
                                        "id": "Hash",
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "enum": [
                                              "HASH_TYPE_UNSPECIFIED",
                                              "SHA256"
                                            ],
                                            "type": "string",
                                            "description": "Required. The type of hash that was performed.",
                                            "enumDescriptions": [
                                              "Unknown.",
                                              "A SHA-256 hash."
                                            ]
                                          },
                                          "value": {
                                            "type": "string",
                                            "format": "byte",
                                            "description": "Required. The hash value."
                                          }
                                        },
                                        "description": "Container message for hash values."
                                      },
                                      "description": "Required. Collection of file hashes."
                                    }
                                  },
                                  "description": "Container message for hashes of byte content of files, used in source messages to verify integrity of source input to the build."
                                }
                              },
                              "additionalContexts": {
                                "type": "array",
                                "items": {
                                  "id": "SourceContext",
                                  "type": "object",
                                  "properties": {
                                    "git": {
                                      "id": "GitSourceContext",
                                      "type": "object",
                                      "properties": {
                                        "url": {
                                          "type": "string",
                                          "description": "Git repository URL."
                                        },
                                        "revisionId": {
                                          "type": "string",
                                          "description": "Git commit hash."
                                        }
                                      },
                                      "description": "A SourceContext referring to any third party Git repo (e.g., GitHub)."
                                    },
                                    "gerrit": {
                                      "id": "GerritSourceContext",
                                      "type": "object",
                                      "properties": {
                                        "hostUri": {
                                          "type": "string",
                                          "description": "The URI of a running Gerrit instance."
                                        },
                                        "revisionId": {
                                          "type": "string",
                                          "description": "A revision (commit) ID."
                                        },
                                        "aliasContext": {
                                          "id": "AliasContext",
                                          "type": "object",
                                          "properties": {
                                            "kind": {
                                              "enum": [
                                                "KIND_UNSPECIFIED",
                                                "FIXED",
                                                "MOVABLE",
                                                "OTHER"
                                              ],
                                              "type": "string",
                                              "description": "The alias kind.",
                                              "enumDescriptions": [
                                                "Unknown.",
                                                "Git tag.",
                                                "Git branch.",
                                                "Used to specify non-standard aliases. For example, if a Git repo has a ref named \"refs/foo/bar\"."
                                              ]
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "The alias name."
                                            }
                                          },
                                          "description": "An alias, which may be a branch or tag."
                                        },
                                        "gerritProject": {
                                          "type": "string",
                                          "description": "The full project name within the host. Projects may be nested, so \"project/subproject\" is a valid project name. The \"repo name\" is the hostURI/project."
                                        }
                                      },
                                      "description": "A SourceContext referring to a Gerrit project."
                                    },
                                    "labels": {
                                      "type": "object",
                                      "description": "Labels with user defined metadata.",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "cloudRepo": {
                                      "id": "CloudRepoSourceContext",
                                      "type": "object",
                                      "properties": {
                                        "repoId": {
                                          "id": "RepoId",
                                          "type": "object",
                                          "properties": {
                                            "uid": {
                                              "type": "string",
                                              "description": "A server-assigned, globally unique identifier."
                                            },
                                            "projectRepoId": {
                                              "id": "ProjectRepoId",
                                              "type": "object",
                                              "properties": {
                                                "repoName": {
                                                  "type": "string",
                                                  "description": "The name of the repo. Leave empty for the default repo."
                                                },
                                                "projectId": {
                                                  "type": "string",
                                                  "description": "The ID of the project."
                                                }
                                              },
                                              "description": "A combination of a project ID and a repo name."
                                            }
                                          },
                                          "description": "The ID of the repo."
                                        },
                                        "revisionId": {
                                          "type": "string",
                                          "description": "A revision ID."
                                        },
                                        "aliasContext": {
                                          "id": "AliasContext",
                                          "type": "object",
                                          "properties": {
                                            "kind": {
                                              "enum": [
                                                "KIND_UNSPECIFIED",
                                                "FIXED",
                                                "MOVABLE",
                                                "OTHER"
                                              ],
                                              "type": "string",
                                              "description": "The alias kind.",
                                              "enumDescriptions": [
                                                "Unknown.",
                                                "Git tag.",
                                                "Git branch.",
                                                "Used to specify non-standard aliases. For example, if a Git repo has a ref named \"refs/foo/bar\"."
                                              ]
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "The alias name."
                                            }
                                          },
                                          "description": "An alias, which may be a branch or tag."
                                        }
                                      },
                                      "description": "A SourceContext referring to a revision in a Google Cloud Source Repo."
                                    }
                                  },
                                  "description": "A SourceContext is a reference to a tree of files. A SourceContext together with a path point to a unique revision of a single file or directory."
                                },
                                "description": "If provided, some of the source code used for the build may be found in these locations, in the case where the source repository had multiple remotes or submodules. This list will not include the context specified in the context field."
                              },
                              "artifactStorageSourceUri": {
                                "type": "string",
                                "description": "If provided, the input binary artifacts for the build came from this location."
                              }
                            },
                            "description": "Details of the Source input to the build."
                          }
                        },
                        "description": "Required. The actual provenance for the build."
                      },
                      "provenanceBytes": {
                        "type": "string",
                        "description": "Serialized JSON representation of the provenance, used in generating the build signature in the corresponding build note. After verifying the signature, `provenance_bytes` can be unmarshalled and compared to the provenance to confirm that it is unchanged. A base64-encoded string representation of the provenance bytes is used for the signature in order to interoperate with openssl which expects this format for signature verification. The serialized form is captured both to avoid ambiguity in how the provenance is marshalled to json as well to prevent incompatibilities with future changes."
                      }
                    },
                    "description": "Describes a verifiable build."
                  },
                  "intoto": {
                    "id": "GrafeasV1beta1IntotoDetails",
                    "type": "object",
                    "properties": {
                      "signed": {
                        "id": "Link",
                        "type": "object",
                        "properties": {
                          "command": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "This field contains the full command executed for the step. This can also be empty if links are generated for operations that aren't directly mapped to a specific command. Each term in the command is an independent string in the list. An example of a command in the in-toto metadata field is: \"command\": [\"git\", \"clone\", \"https://github.com/in-toto/demo-project.git\"]"
                          },
                          "products": {
                            "type": "array",
                            "items": {
                              "id": "GrafeasV1beta1IntotoArtifact",
                              "type": "object",
                              "properties": {
                                "hashes": {
                                  "id": "ArtifactHashes",
                                  "type": "object",
                                  "properties": {
                                    "sha256": {
                                      "type": "string"
                                    }
                                  },
                                  "description": "Defines a hash object for use in Materials and Products."
                                },
                                "resourceUri": {
                                  "type": "string"
                                }
                              }
                            },
                            "description": "Products are the supply chain artifacts generated as a result of the step. The structure is identical to that of materials."
                          },
                          "materials": {
                            "type": "array",
                            "items": {
                              "id": "GrafeasV1beta1IntotoArtifact",
                              "type": "object",
                              "properties": {
                                "hashes": {
                                  "id": "ArtifactHashes",
                                  "type": "object",
                                  "properties": {
                                    "sha256": {
                                      "type": "string"
                                    }
                                  },
                                  "description": "Defines a hash object for use in Materials and Products."
                                },
                                "resourceUri": {
                                  "type": "string"
                                }
                              }
                            },
                            "description": "Materials are the supply chain artifacts that go into the step and are used for the operation performed. The key of the map is the path of the artifact and the structure contains the recorded hash information. An example is: \"materials\": [ { \"resource_uri\": \"foo/bar\", \"hashes\": { \"sha256\": \"ebebf...\", : } } ]"
                          },
                          "byproducts": {
                            "id": "ByProducts",
                            "type": "object",
                            "properties": {
                              "customValues": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            },
                            "description": "ByProducts are data generated as part of a software supply chain step, but are not the actual result of the step."
                          },
                          "environment": {
                            "id": "Environment",
                            "type": "object",
                            "properties": {
                              "customValues": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            },
                            "description": "This is a field that can be used to capture information about the environment. It is suggested for this field to contain information that details environment variables, filesystem information, and the present working directory. The recommended structure of this field is: \"environment\": { \"custom_values\": { \"variables\": \"\", \"filesystem\": \"\", \"workdir\": \"\", \"\": \"...\" } }"
                          }
                        },
                        "description": "This corresponds to an in-toto link."
                      },
                      "signatures": {
                        "type": "array",
                        "items": {
                          "id": "GrafeasV1beta1IntotoSignature",
                          "type": "object",
                          "properties": {
                            "sig": {
                              "type": "string"
                            },
                            "keyid": {
                              "type": "string"
                            }
                          },
                          "description": "A signature object consists of the KeyID used and the signature itself."
                        }
                      }
                    },
                    "description": "Describes a specific in-toto link."
                  },
                  "noteName": {
                    "type": "string",
                    "description": "Required. Immutable. The analysis note associated with this occurrence, in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`. This field can be used as a filter in list requests."
                  },
                  "resource": {
                    "id": "Resource",
                    "type": "object",
                    "properties": {
                      "uri": {
                        "type": "string",
                        "description": "Required. The unique URI of the resource. For example, `https://gcr.io/project/image@sha256:foo` for a Docker image."
                      },
                      "name": {
                        "type": "string",
                        "description": "Deprecated, do not use. Use uri instead. The name of the resource. For example, the name of a Docker image - \"Debian\"."
                      },
                      "contentHash": {
                        "id": "Hash",
                        "type": "object",
                        "properties": {
                          "type": {
                            "enum": [
                              "HASH_TYPE_UNSPECIFIED",
                              "SHA256"
                            ],
                            "type": "string",
                            "description": "Required. The type of hash that was performed.",
                            "enumDescriptions": [
                              "Unknown.",
                              "A SHA-256 hash."
                            ]
                          },
                          "value": {
                            "type": "string",
                            "format": "byte",
                            "description": "Required. The hash value."
                          }
                        },
                        "description": "Container message for hash values."
                      }
                    },
                    "description": "Required. Immutable. The resource for which the occurrence applies."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Output only. The time this occurrence was created."
                  },
                  "deployment": {
                    "id": "GrafeasV1beta1DeploymentDetails",
                    "type": "object",
                    "properties": {
                      "deployment": {
                        "id": "Deployment",
                        "type": "object",
                        "properties": {
                          "config": {
                            "type": "string",
                            "description": "Configuration used to create this deployment."
                          },
                          "address": {
                            "type": "string",
                            "description": "Address of the runtime element hosting this deployment."
                          },
                          "platform": {
                            "enum": [
                              "PLATFORM_UNSPECIFIED",
                              "GKE",
                              "FLEX",
                              "CUSTOM"
                            ],
                            "type": "string",
                            "description": "Platform hosting this deployment.",
                            "enumDescriptions": [
                              "Unknown.",
                              "Google Container Engine.",
                              "Google App Engine: Flexible Environment.",
                              "Custom user-defined platform."
                            ]
                          },
                          "userEmail": {
                            "type": "string",
                            "description": "Identity of the user that triggered this deployment."
                          },
                          "deployTime": {
                            "type": "string",
                            "format": "google-datetime",
                            "description": "Required. Beginning of the lifetime of this deployment."
                          },
                          "resourceUri": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Output only. Resource URI for the artifact being deployed taken from the deployable field with the same name."
                          },
                          "undeployTime": {
                            "type": "string",
                            "format": "google-datetime",
                            "description": "End of the lifetime of this deployment."
                          }
                        },
                        "description": "Required. Deployment history for the resource."
                      }
                    },
                    "description": "Describes the deployment of an artifact on a runtime."
                  },
                  "discovered": {
                    "id": "GrafeasV1beta1DiscoveryDetails",
                    "type": "object",
                    "properties": {
                      "discovered": {
                        "id": "Discovered",
                        "type": "object",
                        "properties": {
                          "analysisStatus": {
                            "enum": [
                              "ANALYSIS_STATUS_UNSPECIFIED",
                              "PENDING",
                              "SCANNING",
                              "FINISHED_SUCCESS",
                              "FINISHED_FAILED",
                              "FINISHED_UNSUPPORTED"
                            ],
                            "type": "string",
                            "description": "The status of discovery for the resource.",
                            "enumDescriptions": [
                              "Unknown.",
                              "Resource is known but no action has been taken yet.",
                              "Resource is being analyzed.",
                              "Analysis has finished successfully.",
                              "Analysis has finished unsuccessfully, the analysis itself is in a bad state.",
                              "The resource is known not to be supported"
                            ]
                          },
                          "lastAnalysisTime": {
                            "type": "string",
                            "format": "google-datetime",
                            "description": "The last time continuous analysis was done for this resource. Deprecated, do not use."
                          },
                          "continuousAnalysis": {
                            "enum": [
                              "CONTINUOUS_ANALYSIS_UNSPECIFIED",
                              "ACTIVE",
                              "INACTIVE"
                            ],
                            "type": "string",
                            "description": "Whether the resource is continuously analyzed.",
                            "enumDescriptions": [
                              "Unknown.",
                              "The resource is continuously analyzed.",
                              "The resource is ignored for continuous analysis."
                            ]
                          },
                          "analysisStatusError": {
                            "id": "Status",
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The status code, which should be an enum value of google.rpc.Code."
                              },
                              "details": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "any",
                                    "description": "Properties of the object. Contains field @type with type URL."
                                  }
                                },
                                "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
                              },
                              "message": {
                                "type": "string",
                                "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
                              }
                            },
                            "description": "When an error is encountered this will contain a LocalizedMessage under details to show to the user. The LocalizedMessage is output only and populated by the API."
                          }
                        },
                        "description": "Required. Analysis status for the discovered resource."
                      }
                    },
                    "description": "Describes when a resource was discovered."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Output only. The time this occurrence was last updated."
                  },
                  "attestation": {
                    "id": "Details",
                    "type": "object",
                    "properties": {
                      "attestation": {
                        "id": "Attestation",
                        "type": "object",
                        "properties": {
                          "pgpSignedAttestation": {
                            "id": "PgpSignedAttestation",
                            "type": "object",
                            "properties": {
                              "pgpKeyId": {
                                "type": "string",
                                "description": "The cryptographic fingerprint of the key used to generate the signature, as output by, e.g. `gpg --list-keys`. This should be the version 4, full 160-bit fingerprint, expressed as a 40 character hexidecimal string. See https://tools.ietf.org/html/rfc4880#section-12.2 for details. Implementations may choose to acknowledge \"LONG\", \"SHORT\", or other abbreviated key IDs, but only the full fingerprint is guaranteed to work. In gpg, the full fingerprint can be retrieved from the `fpr` field returned when calling --list-keys with --with-colons. For example: ``` gpg --with-colons --with-fingerprint --force-v4-certs \\ --list-keys attester@example.com tru::1:1513631572:0:3:1:5 pub:...... fpr:::::::::24FF6481B76AC91E66A00AC657A93A81EF3AE6FB: ``` Above, the fingerprint is `24FF6481B76AC91E66A00AC657A93A81EF3AE6FB`."
                              },
                              "signature": {
                                "type": "string",
                                "description": "Required. The raw content of the signature, as output by GNU Privacy Guard (GPG) or equivalent. Since this message only supports attached signatures, the payload that was signed must be attached. While the signature format supported is dependent on the verification implementation, currently only ASCII-armored (`--armor` to gpg), non-clearsigned (`--sign` rather than `--clearsign` to gpg) are supported. Concretely, `gpg --sign --armor --output=signature.gpg payload.json` will create the signature content expected in this field in `signature.gpg` for the `payload.json` attestation payload."
                              },
                              "contentType": {
                                "enum": [
                                  "CONTENT_TYPE_UNSPECIFIED",
                                  "SIMPLE_SIGNING_JSON"
                                ],
                                "type": "string",
                                "description": "Type (for example schema) of the attestation payload that was signed. The verifier must ensure that the provided type is one that the verifier supports, and that the attestation payload is a valid instantiation of that type (for example by validating a JSON schema).",
                                "enumDescriptions": [
                                  "`ContentType` is not set.",
                                  "Atomic format attestation signature. See https://github.com/containers/image/blob/8a5d2f82a6e3263290c8e0276c3e0f64e77723e7/docs/atomic-signature.md The payload extracted from `signature` is a JSON blob conforming to the linked schema."
                                ]
                              }
                            },
                            "description": "A PGP signed attestation."
                          },
                          "genericSignedAttestation": {
                            "id": "GenericSignedAttestation",
                            "type": "object",
                            "properties": {
                              "signatures": {
                                "type": "array",
                                "items": {
                                  "id": "Signature",
                                  "type": "object",
                                  "properties": {
                                    "signature": {
                                      "type": "string",
                                      "format": "byte",
                                      "description": "The content of the signature, an opaque bytestring. The payload that this signature verifies MUST be unambiguously provided with the Signature during verification. A wrapper message might provide the payload explicitly. Alternatively, a message might have a canonical serialization that can always be unambiguously computed to derive the payload."
                                    },
                                    "publicKeyId": {
                                      "type": "string",
                                      "description": "The identifier for the public key that verifies this signature. * The `public_key_id` is required. * The `public_key_id` SHOULD be an RFC3986 conformant URI. * When possible, the `public_key_id` SHOULD be an immutable reference, such as a cryptographic digest. Examples of valid `public_key_id`s: OpenPGP V4 public key fingerprint: * \"openpgp4fpr:74FAF3B861BDA0870C7B6DEF607E48D2A663AEEA\" See https://www.iana.org/assignments/uri-schemes/prov/openpgp4fpr for more details on this scheme. RFC6920 digest-named SubjectPublicKeyInfo (digest of the DER serialization): * \"ni:///sha-256;cD9o9Cq6LG3jD0iKXqEi_vdjJGecm_iXkbqVoScViaU\" * \"nih:///sha-256;703f68f42aba2c6de30f488a5ea122fef76324679c9bf89791ba95a1271589a5\""
                                    }
                                  },
                                  "description": "Verifiers (e.g. Kritis implementations) MUST verify signatures with respect to the trust anchors defined in policy (e.g. a Kritis policy). Typically this means that the verifier has been configured with a map from `public_key_id` to public key material (and any required parameters, e.g. signing algorithm). In particular, verification implementations MUST NOT treat the signature `public_key_id` as anything more than a key lookup hint. The `public_key_id` DOES NOT validate or authenticate a public key; it only provides a mechanism for quickly selecting a public key ALREADY CONFIGURED on the verifier through a trusted channel. Verification implementations MUST reject signatures in any of the following circumstances: * The `public_key_id` is not recognized by the verifier. * The public key that `public_key_id` refers to does not verify the signature with respect to the payload. The `signature` contents SHOULD NOT be \"attached\" (where the payload is included with the serialized `signature` bytes). Verifiers MUST ignore any \"attached\" payload and only verify signatures with respect to explicitly provided payload (e.g. a `payload` field on the proto message that holds this Signature, or the canonical serialization of the proto message that holds this signature)."
                                },
                                "description": "One or more signatures over `serialized_payload`. Verifier implementations should consider this attestation message verified if at least one `signature` verifies `serialized_payload`. See `Signature` in common.proto for more details on signature structure and verification."
                              },
                              "contentType": {
                                "enum": [
                                  "CONTENT_TYPE_UNSPECIFIED",
                                  "SIMPLE_SIGNING_JSON"
                                ],
                                "type": "string",
                                "description": "Type (for example schema) of the attestation payload that was signed. The verifier must ensure that the provided type is one that the verifier supports, and that the attestation payload is a valid instantiation of that type (for example by validating a JSON schema).",
                                "enumDescriptions": [
                                  "`ContentType` is not set.",
                                  "Atomic format attestation signature. See https://github.com/containers/image/blob/8a5d2f82a6e3263290c8e0276c3e0f64e77723e7/docs/atomic-signature.md The payload extracted in `plaintext` is a JSON blob conforming to the linked schema."
                                ]
                              },
                              "serializedPayload": {
                                "type": "string",
                                "format": "byte",
                                "description": "The serialized payload that is verified by one or more `signatures`. The encoding and semantic meaning of this payload must match what is set in `content_type`."
                              }
                            },
                            "description": "An attestation wrapper that uses the Grafeas `Signature` message. This attestation must define the `serialized_payload` that the `signatures` verify and any metadata necessary to interpret that plaintext. The signatures should always be over the `serialized_payload` bytestring."
                          }
                        },
                        "description": "Required. Attestation for the resource."
                      }
                    },
                    "description": "Describes an attestation of an artifact."
                  },
                  "remediation": {
                    "type": "string",
                    "description": "A description of actions that can be taken to remedy the note."
                  },
                  "derivedImage": {
                    "id": "GrafeasV1beta1ImageDetails",
                    "type": "object",
                    "properties": {
                      "derivedImage": {
                        "id": "Derived",
                        "type": "object",
                        "properties": {
                          "distance": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Output only. The number of layers by which this image differs from the associated image basis."
                          },
                          "layerInfo": {
                            "type": "array",
                            "items": {
                              "id": "Layer",
                              "type": "object",
                              "properties": {
                                "arguments": {
                                  "type": "string",
                                  "description": "The recovered arguments to the Dockerfile directive."
                                },
                                "directive": {
                                  "enum": [
                                    "DIRECTIVE_UNSPECIFIED",
                                    "MAINTAINER",
                                    "RUN",
                                    "CMD",
                                    "LABEL",
                                    "EXPOSE",
                                    "ENV",
                                    "ADD",
                                    "COPY",
                                    "ENTRYPOINT",
                                    "VOLUME",
                                    "USER",
                                    "WORKDIR",
                                    "ARG",
                                    "ONBUILD",
                                    "STOPSIGNAL",
                                    "HEALTHCHECK",
                                    "SHELL"
                                  ],
                                  "type": "string",
                                  "description": "Required. The recovered Dockerfile directive used to construct this layer.",
                                  "enumDescriptions": [
                                    "Default value for unsupported/missing directive.",
                                    "https://docs.docker.com/engine/reference/builder/",
                                    "https://docs.docker.com/engine/reference/builder/",
                                    "https://docs.docker.com/engine/reference/builder/",
                                    "https://docs.docker.com/engine/reference/builder/",
                                    "https://docs.docker.com/engine/reference/builder/",
                                    "https://docs.docker.com/engine/reference/builder/",
                                    "https://docs.docker.com/engine/reference/builder/",
                                    "https://docs.docker.com/engine/reference/builder/",
                                    "https://docs.docker.com/engine/reference/builder/",
                                    "https://docs.docker.com/engine/reference/builder/",
                                    "https://docs.docker.com/engine/reference/builder/",
                                    "https://docs.docker.com/engine/reference/builder/",
                                    "https://docs.docker.com/engine/reference/builder/",
                                    "https://docs.docker.com/engine/reference/builder/",
                                    "https://docs.docker.com/engine/reference/builder/",
                                    "https://docs.docker.com/engine/reference/builder/",
                                    "https://docs.docker.com/engine/reference/builder/"
                                  ]
                                }
                              },
                              "description": "Layer holds metadata specific to a layer of a Docker image."
                            },
                            "description": "This contains layer-specific metadata, if populated it has length \"distance\" and is ordered with [distance] being the layer immediately following the base image and [1] being the final layer."
                          },
                          "fingerprint": {
                            "id": "Fingerprint",
                            "type": "object",
                            "properties": {
                              "v1Name": {
                                "type": "string",
                                "description": "Required. The layer ID of the final layer in the Docker image's v1 representation."
                              },
                              "v2Blob": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Required. The ordered list of v2 blobs that represent a given image."
                              },
                              "v2Name": {
                                "type": "string",
                                "description": "Output only. The name of the image's v2 blobs computed via: [bottom] := v2_blobbottom := sha256(v2_blob[N] + \" \" + v2_name[N+1]) Only the name of the final blob is kept."
                              }
                            },
                            "description": "Required. The fingerprint of the derived image."
                          },
                          "baseResourceUrl": {
                            "type": "string",
                            "description": "Output only. This contains the base image URL for the derived image occurrence."
                          }
                        },
                        "description": "Required. Immutable. The child image derived from the base image."
                      }
                    },
                    "description": "Describes how this resource derives from the basis in the associated note."
                  },
                  "installation": {
                    "id": "GrafeasV1beta1PackageDetails",
                    "type": "object",
                    "properties": {
                      "installation": {
                        "id": "Installation",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Output only. The name of the installed package."
                          },
                          "location": {
                            "type": "array",
                            "items": {
                              "id": "Location",
                              "type": "object",
                              "properties": {
                                "path": {
                                  "type": "string",
                                  "description": "The path from which we gathered that this package/version is installed."
                                },
                                "cpeUri": {
                                  "type": "string",
                                  "description": "Required. The CPE URI in [CPE format](https://cpe.mitre.org/specification/) denoting the package manager version distributing a package."
                                },
                                "version": {
                                  "id": "Version",
                                  "type": "object",
                                  "properties": {
                                    "kind": {
                                      "enum": [
                                        "VERSION_KIND_UNSPECIFIED",
                                        "NORMAL",
                                        "MINIMUM",
                                        "MAXIMUM"
                                      ],
                                      "type": "string",
                                      "description": "Required. Distinguishes between sentinel MIN/MAX versions and normal versions.",
                                      "enumDescriptions": [
                                        "Unknown.",
                                        "A standard package version.",
                                        "A special version representing negative infinity.",
                                        "A special version representing positive infinity."
                                      ]
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "Required only when version kind is NORMAL. The main part of the version name."
                                    },
                                    "epoch": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Used to correct mistakes in the version numbering scheme."
                                    },
                                    "revision": {
                                      "type": "string",
                                      "description": "The iteration of the package build from the above version."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Whether this version is specifying part of an inclusive range. Grafeas does not have the capability to specify version ranges; instead we have fields that specify start version and end versions. At times this is insufficient - we also need to specify whether the version is included in the range or is excluded from the range. This boolean is expected to be set to true when the version is included in a range."
                                    }
                                  },
                                  "description": "The version installed at this location."
                                }
                              },
                              "description": "An occurrence of a particular package installation found within a system's filesystem. E.g., glibc was found in `/var/lib/dpkg/status`."
                            },
                            "description": "Required. All of the places within the filesystem versions of this package have been found."
                          }
                        },
                        "description": "Required. Where the package was installed."
                      }
                    },
                    "description": "Describes the installation of a package on the linked resource."
                  },
                  "vulnerability": {
                    "id": "GrafeasV1beta1VulnerabilityDetails",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The type of package; whether native or non native(ruby gems, node.js packages etc)"
                      },
                      "severity": {
                        "enum": [
                          "SEVERITY_UNSPECIFIED",
                          "MINIMAL",
                          "LOW",
                          "MEDIUM",
                          "HIGH",
                          "CRITICAL"
                        ],
                        "type": "string",
                        "description": "Output only. The note provider assigned Severity of the vulnerability.",
                        "enumDescriptions": [
                          "Unknown.",
                          "Minimal severity.",
                          "Low severity.",
                          "Medium severity.",
                          "High severity.",
                          "Critical severity."
                        ]
                      },
                      "cvssScore": {
                        "type": "number",
                        "format": "float",
                        "description": "Output only. The CVSS score of this vulnerability. CVSS score is on a scale of 0-10 where 0 indicates low severity and 10 indicates high severity."
                      },
                      "relatedUrls": {
                        "type": "array",
                        "items": {
                          "id": "RelatedUrl",
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "description": "Specific URL associated with the resource."
                            },
                            "label": {
                              "type": "string",
                              "description": "Label to describe usage of the URL."
                            }
                          },
                          "description": "Metadata for any related URL information."
                        },
                        "description": "Output only. URLs related to this vulnerability."
                      },
                      "packageIssue": {
                        "type": "array",
                        "items": {
                          "id": "PackageIssue",
                          "type": "object",
                          "properties": {
                            "severityName": {
                              "type": "string",
                              "description": "Deprecated, use Details.effective_severity instead The severity (e.g., distro assigned severity) for this vulnerability."
                            },
                            "fixedLocation": {
                              "id": "VulnerabilityLocation",
                              "type": "object",
                              "properties": {
                                "cpeUri": {
                                  "type": "string",
                                  "description": "Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/) format. Examples include distro or storage location for vulnerable jar."
                                },
                                "package": {
                                  "type": "string",
                                  "description": "Required. The package being described."
                                },
                                "version": {
                                  "id": "Version",
                                  "type": "object",
                                  "properties": {
                                    "kind": {
                                      "enum": [
                                        "VERSION_KIND_UNSPECIFIED",
                                        "NORMAL",
                                        "MINIMUM",
                                        "MAXIMUM"
                                      ],
                                      "type": "string",
                                      "description": "Required. Distinguishes between sentinel MIN/MAX versions and normal versions.",
                                      "enumDescriptions": [
                                        "Unknown.",
                                        "A standard package version.",
                                        "A special version representing negative infinity.",
                                        "A special version representing positive infinity."
                                      ]
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "Required only when version kind is NORMAL. The main part of the version name."
                                    },
                                    "epoch": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Used to correct mistakes in the version numbering scheme."
                                    },
                                    "revision": {
                                      "type": "string",
                                      "description": "The iteration of the package build from the above version."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Whether this version is specifying part of an inclusive range. Grafeas does not have the capability to specify version ranges; instead we have fields that specify start version and end versions. At times this is insufficient - we also need to specify whether the version is included in the range or is excluded from the range. This boolean is expected to be set to true when the version is included in a range."
                                    }
                                  },
                                  "description": "Required. The version of the package being described."
                                }
                              },
                              "description": "The location of the available fix for vulnerability."
                            },
                            "affectedLocation": {
                              "id": "VulnerabilityLocation",
                              "type": "object",
                              "properties": {
                                "cpeUri": {
                                  "type": "string",
                                  "description": "Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/) format. Examples include distro or storage location for vulnerable jar."
                                },
                                "package": {
                                  "type": "string",
                                  "description": "Required. The package being described."
                                },
                                "version": {
                                  "id": "Version",
                                  "type": "object",
                                  "properties": {
                                    "kind": {
                                      "enum": [
                                        "VERSION_KIND_UNSPECIFIED",
                                        "NORMAL",
                                        "MINIMUM",
                                        "MAXIMUM"
                                      ],
                                      "type": "string",
                                      "description": "Required. Distinguishes between sentinel MIN/MAX versions and normal versions.",
                                      "enumDescriptions": [
                                        "Unknown.",
                                        "A standard package version.",
                                        "A special version representing negative infinity.",
                                        "A special version representing positive infinity."
                                      ]
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "Required only when version kind is NORMAL. The main part of the version name."
                                    },
                                    "epoch": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Used to correct mistakes in the version numbering scheme."
                                    },
                                    "revision": {
                                      "type": "string",
                                      "description": "The iteration of the package build from the above version."
                                    },
                                    "inclusive": {
                                      "type": "boolean",
                                      "description": "Whether this version is specifying part of an inclusive range. Grafeas does not have the capability to specify version ranges; instead we have fields that specify start version and end versions. At times this is insufficient - we also need to specify whether the version is included in the range or is excluded from the range. This boolean is expected to be set to true when the version is included in a range."
                                    }
                                  },
                                  "description": "Required. The version of the package being described."
                                }
                              },
                              "description": "Required. The location of the vulnerability."
                            }
                          },
                          "description": "This message wraps a location affected by a vulnerability and its associated fix (if one is available)."
                        },
                        "description": "Required. The set of affected locations and their fixes (if available) within the associated resource."
                      },
                      "longDescription": {
                        "type": "string",
                        "description": "Output only. A detailed description of this vulnerability."
                      },
                      "shortDescription": {
                        "type": "string",
                        "description": "Output only. A one sentence description of this vulnerability."
                      },
                      "effectiveSeverity": {
                        "enum": [
                          "SEVERITY_UNSPECIFIED",
                          "MINIMAL",
                          "LOW",
                          "MEDIUM",
                          "HIGH",
                          "CRITICAL"
                        ],
                        "type": "string",
                        "description": "The distro assigned severity for this vulnerability when it is available, and note provider assigned severity when distro has not yet assigned a severity for this vulnerability.",
                        "enumDescriptions": [
                          "Unknown.",
                          "Minimal severity.",
                          "Low severity.",
                          "Medium severity.",
                          "High severity.",
                          "Critical severity."
                        ]
                      }
                    },
                    "description": "Describes a security vulnerability."
                  }
                },
                "description": "An instance of an analysis type that has been found on a resource."
              },
              "description": "The occurrences attached to the specified note."
            },
            "nextPageToken": {
              "type": "string",
              "description": "Token to provide to skip to a particular spot in the list."
            }
          },
          "description": "Response for listing occurrences for a note."
        }
      ]
  projects.notes.patch:
    description: |-
      Updates the specified note.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/container-analysis/docs/reference/rest/v1beta1/projects.notes/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.notes.setIamPolicy:
    description: |-
      Sets the access control policy on the specified note or occurrence. Requires `containeranalysis.notes.setIamPolicy` or `containeranalysis.occurrences.setIamPolicy` permission if the resource is a note or an occurrence, respectively. The resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for notes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for occurrences.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/container-analysis/docs/reference/rest/v1beta1/projects.notes/setIamPolicy
    example:
      inputs: [
        {
          "id": "SetIamPolicyRequest",
          "type": "object",
          "properties": {
            "policy": {
              "id": "Policy",
              "type": "object",
              "properties": {
                "etag": {
                  "type": "string",
                  "format": "byte",
                  "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
                },
                "version": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                },
                "bindings": {
                  "type": "array",
                  "items": {
                    "id": "Binding",
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                      },
                      "members": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                      },
                      "condition": {
                        "id": "Expr",
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                          },
                          "location": {
                            "type": "string",
                            "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                          },
                          "expression": {
                            "type": "string",
                            "description": "Textual representation of an expression in Common Expression Language syntax."
                          },
                          "description": {
                            "type": "string",
                            "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                          }
                        },
                        "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                      }
                    },
                    "description": "Associates `members` with a `role`."
                  },
                  "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
                }
              },
              "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
            }
          },
          "description": "Request message for `SetIamPolicy` method."
        }
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  projects.notes.testIamPermissions:
    description: |-
      Returns the permissions that a caller has on the specified note or occurrence. Requires list permission on the project (for example, `containeranalysis.notes.list`). The resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for notes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for occurrences.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/container-analysis/docs/reference/rest/v1beta1/projects.notes/testIamPermissions
    example:
      inputs: [
        {
          "id": "TestIamPermissionsRequest",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
            }
          },
          "description": "Request message for `TestIamPermissions` method."
        }
      ]
      outputs: [
        {
          "id": "TestIamPermissionsResponse",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
            }
          },
          "description": "Response message for `TestIamPermissions` method."
        }
      ]
  projects.occurrences.batchCreate:
    description: |-
      Creates new occurrences in batch.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/container-analysis/docs/reference/rest/v1beta1/projects.occurrences/batchCreate
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.occurrences.create:
    description: |-
      Creates a new occurrence.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/container-analysis/docs/reference/rest/v1beta1/projects.occurrences/create
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.occurrences.delete:
    description: |-
      Deletes the specified occurrence. For example, use this method to delete an occurrence when the occurrence is no longer applicable for the given resource.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/container-analysis/docs/reference/rest/v1beta1/projects.occurrences/delete
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "Empty",
          "type": "object",
          "properties": {},
          "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
        }
      ]
  projects.occurrences.get:
    description: |-
      Gets the specified occurrence.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/container-analysis/docs/reference/rest/v1beta1/projects.occurrences/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.occurrences.getIamPolicy:
    description: |-
      Gets the access control policy for a note or an occurrence resource. Requires `containeranalysis.notes.setIamPolicy` or `containeranalysis.occurrences.setIamPolicy` permission if the resource is a note or occurrence, respectively. The resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for notes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for occurrences.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/container-analysis/docs/reference/rest/v1beta1/projects.occurrences/getIamPolicy
    example:
      inputs: [
        {
          "id": "GetIamPolicyRequest",
          "type": "object",
          "properties": {
            "options": {
              "id": "GetPolicyOptions",
              "type": "object",
              "properties": {
                "requestedPolicyVersion": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                }
              },
              "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`."
            }
          },
          "description": "Request message for `GetIamPolicy` method."
        }
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  projects.occurrences.getNotes:
    description: |-
      Gets the note attached to the specified occurrence. Consumer projects can use this method to get a note that belongs to a provider project.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/container-analysis/docs/reference/rest/v1beta1/projects.occurrences/getNotes
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.occurrences.getVulnerabilitySummary:
    description: |-
      Gets a summary of the number and severity of occurrences.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/container-analysis/docs/reference/rest/v1beta1/projects.occurrences/getVulnerabilitySummary
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "VulnerabilityOccurrencesSummary",
          "type": "object",
          "properties": {
            "counts": {
              "type": "array",
              "items": {
                "id": "FixableTotalByDigest",
                "type": "object",
                "properties": {
                  "resource": {
                    "id": "Resource",
                    "type": "object",
                    "properties": {
                      "uri": {
                        "type": "string",
                        "description": "Required. The unique URI of the resource. For example, `https://gcr.io/project/image@sha256:foo` for a Docker image."
                      },
                      "name": {
                        "type": "string",
                        "description": "Deprecated, do not use. Use uri instead. The name of the resource. For example, the name of a Docker image - \"Debian\"."
                      },
                      "contentHash": {
                        "id": "Hash",
                        "type": "object",
                        "properties": {
                          "type": {
                            "enum": [
                              "HASH_TYPE_UNSPECIFIED",
                              "SHA256"
                            ],
                            "type": "string",
                            "description": "Required. The type of hash that was performed.",
                            "enumDescriptions": [
                              "Unknown.",
                              "A SHA-256 hash."
                            ]
                          },
                          "value": {
                            "type": "string",
                            "format": "byte",
                            "description": "Required. The hash value."
                          }
                        },
                        "description": "Container message for hash values."
                      }
                    },
                    "description": "The affected resource."
                  },
                  "severity": {
                    "enum": [
                      "SEVERITY_UNSPECIFIED",
                      "MINIMAL",
                      "LOW",
                      "MEDIUM",
                      "HIGH",
                      "CRITICAL"
                    ],
                    "type": "string",
                    "description": "The severity for this count. SEVERITY_UNSPECIFIED indicates total across all severities.",
                    "enumDescriptions": [
                      "Unknown.",
                      "Minimal severity.",
                      "Low severity.",
                      "Medium severity.",
                      "High severity.",
                      "Critical severity."
                    ]
                  },
                  "totalCount": {
                    "type": "string",
                    "format": "int64",
                    "description": "The total number of vulnerabilities associated with this resource."
                  },
                  "fixableCount": {
                    "type": "string",
                    "format": "int64",
                    "description": "The number of fixable vulnerabilities associated with this resource."
                  }
                },
                "description": "Per resource and severity counts of fixable and total vulnerabilities."
              },
              "description": "A listing by resource of the number of fixable and total vulnerabilities."
            }
          },
          "description": "A summary of how many vulnerability occurrences there are per resource and severity type."
        }
      ]
  projects.occurrences.list:
    description: |-
      Lists occurrences for the specified project.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/container-analysis/docs/reference/rest/v1beta1/projects.occurrences/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.occurrences.patch:
    description: |-
      Updates the specified occurrence.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/container-analysis/docs/reference/rest/v1beta1/projects.occurrences/patch
    example:
      inputs: [
        {}
      ]
      outputs: [
        {}
      ]
  projects.occurrences.setIamPolicy:
    description: |-
      Sets the access control policy on the specified note or occurrence. Requires `containeranalysis.notes.setIamPolicy` or `containeranalysis.occurrences.setIamPolicy` permission if the resource is a note or an occurrence, respectively. The resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for notes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for occurrences.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/container-analysis/docs/reference/rest/v1beta1/projects.occurrences/setIamPolicy
    example:
      inputs: [
        {
          "id": "SetIamPolicyRequest",
          "type": "object",
          "properties": {
            "policy": {
              "id": "Policy",
              "type": "object",
              "properties": {
                "etag": {
                  "type": "string",
                  "format": "byte",
                  "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
                },
                "version": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                },
                "bindings": {
                  "type": "array",
                  "items": {
                    "id": "Binding",
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                      },
                      "members": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                      },
                      "condition": {
                        "id": "Expr",
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                          },
                          "location": {
                            "type": "string",
                            "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                          },
                          "expression": {
                            "type": "string",
                            "description": "Textual representation of an expression in Common Expression Language syntax."
                          },
                          "description": {
                            "type": "string",
                            "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                          }
                        },
                        "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                      }
                    },
                    "description": "Associates `members` with a `role`."
                  },
                  "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
                }
              },
              "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
            }
          },
          "description": "Request message for `SetIamPolicy` method."
        }
      ]
      outputs: [
        {
          "id": "Policy",
          "type": "object",
          "properties": {
            "etag": {
              "type": "string",
              "format": "byte",
              "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
            },
            "version": {
              "type": "integer",
              "format": "int32",
              "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
            },
            "bindings": {
              "type": "array",
              "items": {
                "id": "Binding",
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
                  },
                  "condition": {
                    "id": "Expr",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
                      },
                      "location": {
                        "type": "string",
                        "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
                      },
                      "expression": {
                        "type": "string",
                        "description": "Textual representation of an expression in Common Expression Language syntax."
                      },
                      "description": {
                        "type": "string",
                        "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
                      }
                    },
                    "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                  }
                },
                "description": "Associates `members` with a `role`."
              },
              "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
            }
          },
          "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
        }
      ]
  projects.occurrences.testIamPermissions:
    description: |-
      Returns the permissions that a caller has on the specified note or occurrence. Requires list permission on the project (for example, `containeranalysis.notes.list`). The resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for notes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for occurrences.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/container-analysis/docs/reference/rest/v1beta1/projects.occurrences/testIamPermissions
    example:
      inputs: [
        {
          "id": "TestIamPermissionsRequest",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
            }
          },
          "description": "Request message for `TestIamPermissions` method."
        }
      ]
      outputs: [
        {
          "id": "TestIamPermissionsResponse",
          "type": "object",
          "properties": {
            "permissions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
            }
          },
          "description": "Response message for `TestIamPermissions` method."
        }
      ]
  projects.scanConfigs.get:
    description: |-
      Gets the specified scan configuration.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/container-analysis/docs/reference/rest/v1beta1/projects.scanConfigs/get
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ScanConfig",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Output only. The name of the scan configuration in the form of `projects/[PROJECT_ID]/scanConfigs/[SCAN_CONFIG_ID]`."
            },
            "enabled": {
              "type": "boolean",
              "description": "Whether the scan is enabled."
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Output only. The time this scan config was created."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Output only. The time this scan config was last updated."
            },
            "description": {
              "type": "string",
              "description": "Output only. A human-readable description of what the scan configuration does."
            }
          },
          "description": "A scan configuration specifies whether Cloud components in a project have a particular type of analysis being run. For example, it can configure whether vulnerability scanning is being done on Docker images or not."
        }
      ]
  projects.scanConfigs.list:
    description: |-
      Lists scan configurations for the specified project.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/container-analysis/docs/reference/rest/v1beta1/projects.scanConfigs/list
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ListScanConfigsResponse",
          "type": "object",
          "properties": {
            "scanConfigs": {
              "type": "array",
              "items": {
                "id": "ScanConfig",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Output only. The name of the scan configuration in the form of `projects/[PROJECT_ID]/scanConfigs/[SCAN_CONFIG_ID]`."
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Whether the scan is enabled."
                  },
                  "createTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Output only. The time this scan config was created."
                  },
                  "updateTime": {
                    "type": "string",
                    "format": "google-datetime",
                    "description": "Output only. The time this scan config was last updated."
                  },
                  "description": {
                    "type": "string",
                    "description": "Output only. A human-readable description of what the scan configuration does."
                  }
                },
                "description": "A scan configuration specifies whether Cloud components in a project have a particular type of analysis being run. For example, it can configure whether vulnerability scanning is being done on Docker images or not."
              },
              "description": "The scan configurations requested."
            },
            "nextPageToken": {
              "type": "string",
              "description": "The next pagination token in the list response. It should be used as `page_token` for the following request. An empty value means no more results."
            }
          },
          "description": "Response for listing scan configurations."
        }
      ]
  projects.scanConfigs.update:
    description: |-
      Updates the specified scan configuration.
    versions:
      from: 1.0.0
    link: https://cloud.google.com/container-analysis/docs/reference/rest/v1beta1/projects.scanConfigs/update
    example:
      inputs: [
        {}
      ]
      outputs: [
        {
          "id": "ScanConfig",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Output only. The name of the scan configuration in the form of `projects/[PROJECT_ID]/scanConfigs/[SCAN_CONFIG_ID]`."
            },
            "enabled": {
              "type": "boolean",
              "description": "Whether the scan is enabled."
            },
            "createTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Output only. The time this scan config was created."
            },
            "updateTime": {
              "type": "string",
              "format": "google-datetime",
              "description": "Output only. The time this scan config was last updated."
            },
            "description": {
              "type": "string",
              "description": "Output only. A human-readable description of what the scan configuration does."
            }
          },
          "description": "A scan configuration specifies whether Cloud components in a project have a particular type of analysis being run. For example, it can configure whether vulnerability scanning is being done on Docker images or not."
        }
      ]